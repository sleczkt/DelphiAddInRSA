unit RobotOM_TLB;

// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// PASTLWTR : 1.2
// File generated on 5/29/2019 2:30:13 PM from Type Library described below.

// ************************************************************************  //
// Type Lib: C:\Program Files\Autodesk\Autodesk Robot Structural Analysis Professional 2021\system\exe\robotom.tlb (1)
// LIBID: {F3A37BD0-AA2D-11D2-9844-0080C86BE4DF}
// LCID: 0
// Helpfile: C:\Program Files\Autodesk\Autodesk Robot Structural Analysis Professional 2021\system\exe\robotom.chm
// HelpString: Robot Object Model ver. 21.0
// DepndLst: 
//   (1) v2.0 stdole, (C:\Windows\SysWOW64\stdole2.tlb)
// Parent TypeLibrary:
//   (0) v1.0 DelphiAddInLib, (D:\DelphiAddInLib\DelphiAddInLib.tlb)
// Errors:
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'label' of IRobotLabelServer.Store changed to 'label_'
//   Hint: Member 'Set' of 'IRobotNamesArray' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'And' of 'IRobotSelection' changed to 'And_'
//   Hint: Member 'Set' of 'IRobotGeoPoint3D' changed to 'Set_'
//   Hint: Member 'label' of 'IRobotSimpleCase' changed to 'label_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'label' of 'IRobotCaseCombination' changed to 'label_'
//   Hint: Member 'Set' of 'IRobotValuesArray' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotNumbersArray' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotCodeCmbCombs' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotCodeCmbGroupRelationServer' changed to 'Set_'
//   Hint: Member 'label' of 'IRobotMobileCase' changed to 'label_'
//   Hint: Member 'Set' of 'IRobotNonlinearLinkMngr' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Set' of 'IRobotNodeRigidLinkServer' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotNodeCompatibilityServer' changed to 'Set_'
//   Hint: Member 'End' of 'IRobotBar' changed to 'End_'
//   Hint: Member 'Set' of 'IRobotNonlinearHingeModelPoints' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotGeoPoint2D' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotNonlinearHingeServer' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Set' of 'IRobotBarSectionComplexData' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'End' of 'IRobotBarOffsetData' changed to 'End_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Case' of 'IRobotFeResultParams' changed to 'Case_'
//   Hint: Member 'Case' of 'IRobotFeExtremeValue' changed to 'Case_'
//   Hint: Member 'Set' of 'IRobotMultiSelection' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Case' of 'IRobotExtremeValue' changed to 'Case_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Object' of 'IRobotFiniteElementData' changed to 'Object_'
//   Hint: Member 'Set' of 'IRobotLinearReleaseServer' changed to 'Set_'
//   Hint: Member 'Object' of 'IRobotLinearReleaseDef' changed to 'Object_'
//   Hint: Member 'Set' of 'IRobotPointsArray' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Set' of 'IRobotSpectralAnalysisPointsCollection' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotUnitMngr' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotUnitEditionServer' changed to 'Set_'
//   Hint: Member 'Unit' of 'IRobotUnitEditionData' changed to 'Unit_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'End' of 'IRobotTimeHistoryAnalysisParams' changed to 'End_'
//   Hint: Member 'Set' of 'IRobotTimeHistoryAnalysisParams' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotNonlinearLinkParamsCustom' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Set' of 'IRobotObjectsArray' changed to 'Set_'
//   Hint: Parameter 'Object' of IRobotObjectsArray.Set changed to 'Object_'
//   Hint: Member 'Set' of 'IRobotNumbersDictionary' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Div' of 'IRobotGeoSegmentLine' changed to 'Div_'
//   Hint: Member 'Div' of 'IRobotGeoSegmentArc' changed to 'Div_'
//   Hint: Member 'Set' of 'IRobotGeoSegmentArc' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotFiniteElementNodes' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Set' of 'IRobotViewDisplayParams' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotViewDiagramParams' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'in' of IRDimMembers.Generate changed to 'in_'
//   Hint: Parameter 'in' of IRDimMember.GetComplexList changed to 'in_'
//   Hint: Parameter 'in' of IRDimMember.SetComplexList changed to 'in_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.SetLengthYZUV changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.LengthYZUV changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.SetDisplacementXY changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.IsDisplacementXY changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.SetDisplXYRelLimit changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.DisplXYRelLimit changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.SetDeflectionYZ changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.IsDeflectionYZ changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.SetDeflYZRelLimit changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.DeflYZRelLimit changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.SetUserInitDefl changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.GetUserInitDefl changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.IntPsClear changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.IntPsCoordNum changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.SetIntPsCoordValueType changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.IntPsCoordValueType changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.SetIntPtValues changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.IntPtValues changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.SetIntPtAddOption changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.IntPtAddOption changed to 'Type_'
//   Hint: Parameter 'in' of IRDimMembDefData.StoreExpIntPs changed to 'in_'
//   Hint: Parameter 'in' of IRDimMembDefData.RetrieveExpIntPs changed to 'in_'
//   Hint: Parameter 'End' of IRDimMembDefData.RangeCoords changed to 'End_'
//   Hint: Parameter 'Type' of IRDimMembDefData.SetStructureSwayYZ changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.IsStructureSwayYZ changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDefData.StoreAdjoinParamsYZ changed to 'Type_'
//   Hint: Parameter 'in' of IRDimMembDefData.StoreAdjoinParamsYZ changed to 'in_'
//   Hint: Parameter 'Type' of IRDimMembDefData.RetrieveAdjoinParamsYZ changed to 'Type_'
//   Hint: Parameter 'in' of IRDimMembDefData.RetrieveAdjoinParamsYZ changed to 'in_'
//   Hint: Parameter 'in' of IRDimGroups.Generate changed to 'in_'
//   Hint: Parameter 'in' of IRDimGroups.GetParamProfsPattern changed to 'in_'
//   Hint: Parameter 'in' of IRDimGroups.SetParamProfsPattern changed to 'in_'
//   Hint: Parameter 'in' of IRDimGroup.GetMembList changed to 'in_'
//   Hint: Parameter 'in' of IRDimGroup.SetMembList changed to 'in_'
//   Hint: Parameter 'in' of IRDimGroup.GetProfs changed to 'in_'
//   Hint: Parameter 'in' of IRDimGroup.SetProfs changed to 'in_'
//   Hint: Parameter 'in' of IRDimGroup.GetParamProfs changed to 'in_'
//   Hint: Parameter 'in' of IRDimGroup.SetParamProfs changed to 'in_'
//   Hint: Parameter 'in' of IRDimGrpProfs.GetProfs changed to 'in_'
//   Hint: Parameter 'in' of IRDimGrpProfs.SetProfs changed to 'in_'
//   Hint: Parameter 'in' of IRDimGrpProfs.SetFamilies changed to 'in_'
//   Hint: Parameter 'Type' of IRDimCalcParam.SetObjsList changed to 'Type_'
//   Hint: Parameter 'in' of IRDimCalcParam.SetObjsList changed to 'in_'
//   Hint: Parameter 'in' of IRDimCalcParam.GetObjsList changed to 'in_'
//   Hint: Parameter 'Type' of IRDimCalcParam.SetLimitState changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimCalcParam.GetLimitState changed to 'Type_'
//   Hint: Parameter 'in' of IRDimCalcParam.SetLoadsList changed to 'in_'
//   Hint: Parameter 'in' of IRDimCalcParam.GetLoadsList changed to 'in_'
//   Hint: Parameter 'in' of IRDimCalcParam.SetUlsLoadsList changed to 'in_'
//   Hint: Parameter 'in' of IRDimCalcParam.GetUlsLoadsList changed to 'in_'
//   Hint: Parameter 'in' of IRDimCalcParam.SetSlsLoadsList changed to 'in_'
//   Hint: Parameter 'in' of IRDimCalcParam.GetSlsLoadsList changed to 'in_'
//   Hint: Parameter 'in' of IRDimMembSrv.EditAdjoinParams changed to 'in_'
//   Hint: Parameter 'Type' of IRDimMembDef.IsBuckCoefConst changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDef.IsClientBuckCoefServiceYZ changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDef.AreAdjoinParamsYZ changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembDef.SetOption changed to 'Type_'
//   Hint: Parameter 'in' of IRDimMembDef.SetOption changed to 'in_'
//   Hint: Parameter 'Type' of IRDimMembDef.CheckOption changed to 'Type_'
//   Hint: Parameter 'in' of IRDimMembDef.CheckOption changed to 'in_'
//   Hint: Parameter 'Set' of IRDimMembDef.ConversionValuesForKey changed to 'Set_'
//   Hint: Parameter 'Type' of IRDimUnits.ReadToUserCoef changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimUnits.ReadUserName changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimUnits.format changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimInternalPoints.Clear changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimInternalPoints.CoordNum changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimInternalPoints.SetCoordValueType changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimInternalPoints.CoordValueType changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimInternalPoints.SetValues changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimInternalPoints.Values changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimInternalPoints.SetAddOption changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimInternalPoints.AddOption changed to 'Type_'
//   Hint: Parameter 'in' of IRDimInternalPoints.Edit changed to 'in_'
//   Hint: Parameter 'Type' of IRDimInternalPoints.SetSchema changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimInternalPoints.Schema changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimIntPsEditService.SetSchemaNo changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimIntPsEditService.GetSchemaNo changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimIntPsEditService.SchemasNum changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimIntPsEditService.SchemaBmpHandle changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimIntPsEditService.SchemaCoefficients changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimIntPsEditService.SetStructureSwayYZ changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimIntPsEditService.IsStructureSwayYZ changed to 'Type_'
//   Hint: Parameter 'in' of IRDimAdjoinParams.SetMomLenByMembList changed to 'in_'
//   Hint: Parameter 'in' of IRDimAdjoinParams.Edit changed to 'in_'
//   Hint: Parameter 'Type' of IRDimAdjoinAutomat.Select changed to 'Type_'
//   Hint: Member 'End' of 'IRDimAdjoinBranch' changed to 'End_'
//   Hint: Parameter 'Type' of IRDimDeflDisp.Init changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimDeflDisp.Value changed to 'Type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Set' of 'IRobotViewDetailedAnalysisParams' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotViewGlobalAnalysisParams' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Set' of 'IRobotViewInfluenceLinesParams' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of IRDimProfDef.SetCmpndType changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembRes.ResOfCalc changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembRes.GetUltimateValue changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembRes.IsServiceActive changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembRes.GetServiceRatio changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembRes.GetServiceCaseName changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembRes.CreateResWnd changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembRes.GetDefMaxLineNo changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembRes.IsDefLineActive changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembRes.GetDefLineComponent changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimClient.GetCodeUnitName changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimClient.GetCodeUnitCoef changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembParamsE52.Complex_IsSet changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembParamsE52.Complex_Set changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembParamsE52.Complex_GetBattenType changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembParamsE52.Complex_SetBattenType changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembParamsE52.Complex_GetConnecType changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembParamsE52.Complex_SetConnectType changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembParamsE52.Complex_BattenCoordClear changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembParamsE52.Complex_BattenCoordNum changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembParamsE52.Complex_IsCoordRelValue changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembParamsE52.Complex_SetCoordRelValue changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembParamsE52.Complex_SetBattenCoord changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembParamsE52.Complex_GetBattenCoord changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembParamsE52.Camber_IsDefl_u_net_fin_YZ changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembParamsE52.Camber_SetDefl_u_net_fin_YZ changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembParamsE52.Camber_GetDefl_u_net_fin_ValueYZ changed to 'Type_'
//   Hint: Parameter 'Type' of IRDimMembParamsE52.Camber_SetDefl_u_net_fin_ValueYZ changed to 'Type_'
//   Hint: Parameter 'in' of IRDimMembParamsE52.Fire_GetAddProtectOfSectSides changed to 'in_'
//   Hint: Parameter 'in' of IRDimMembParamsE52.Fire_SetAddProtectOfSectSides changed to 'in_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Parameter 'Unit' of IRJointKneeBracket.AngleExt changed to 'Unit_'
//   Hint: Parameter 'Unit' of IRJointKneeBracket.AngleExt changed to 'Unit_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Unit' of IRJointProfile.AngleExt changed to 'Unit_'
//   Hint: Parameter 'Unit' of IRJointProfile.AngleExt changed to 'Unit_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of IRJointPinnedColumnBase.GetMaterialName changed to 'Type_'
//   Hint: Parameter 'Type' of IRJointPinnedColumnBase.SetMaterialName changed to 'Type_'
//   Hint: Parameter 'Type' of IRJointPinnedColumnBase.TurnedOnVerificationCEBFailure changed to 'Type_'
//   Hint: Parameter 'Type' of IRJointPinnedColumnBase.IsTurnedOnVerificationCEBFailure changed to 'Type_'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Parameter 'Type' of IRJointFixedColumnBase.GetMaterialName changed to 'Type_'
//   Hint: Parameter 'Type' of IRJointFixedColumnBase.SetMaterialName changed to 'Type_'
//   Hint: Parameter 'Type' of IRJointFixedColumnBase.TurnedOnVerificationCEBFailure changed to 'Type_'
//   Hint: Parameter 'Type' of IRJointFixedColumnBase.IsTurnedOnVerificationCEBFailure changed to 'Type_'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Case' of 'IRConcrBeamPointLoad' changed to 'Case_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Case' of 'IRConcrBeamLinearLoad' changed to 'Case_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Set' of 'IRobotNamesArray' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'And' of 'IRobotSelection' changed to 'And_'
//   Hint: Member 'Set' of 'IRobotGeoPoint3D' changed to 'Set_'
//   Hint: Member 'label' of 'IRobotSimpleCase' changed to 'label_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'label' of 'IRobotCaseCombination' changed to 'label_'
//   Hint: Member 'Set' of 'IRobotValuesArray' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotNumbersArray' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotCodeCmbCombs' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotCodeCmbGroupRelationServer' changed to 'Set_'
//   Hint: Member 'label' of 'IRobotMobileCase' changed to 'label_'
//   Hint: Member 'Set' of 'IRobotNonlinearLinkMngr' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Set' of 'IRobotNodeRigidLinkServer' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotNodeCompatibilityServer' changed to 'Set_'
//   Hint: Member 'End' of 'IRobotBar' changed to 'End_'
//   Hint: Member 'Set' of 'IRobotNonlinearHingeModelPoints' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotGeoPoint2D' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotNonlinearHingeServer' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Set' of 'IRobotBarSectionComplexData' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'End' of 'IRobotBarOffsetData' changed to 'End_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Case' of 'IRobotFeResultParams' changed to 'Case_'
//   Hint: Member 'Case' of 'IRobotFeExtremeValue' changed to 'Case_'
//   Hint: Member 'Set' of 'IRobotMultiSelection' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Case' of 'IRobotExtremeValue' changed to 'Case_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Object' of 'IRobotFiniteElementData' changed to 'Object_'
//   Hint: Member 'Set' of 'IRobotLinearReleaseServer' changed to 'Set_'
//   Hint: Member 'Object' of 'IRobotLinearReleaseDef' changed to 'Object_'
//   Hint: Member 'Set' of 'IRobotPointsArray' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Set' of 'IRobotSpectralAnalysisPointsCollection' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotUnitMngr' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotUnitEditionServer' changed to 'Set_'
//   Hint: Member 'Unit' of 'IRobotUnitEditionData' changed to 'Unit_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'End' of 'IRobotTimeHistoryAnalysisParams' changed to 'End_'
//   Hint: Member 'Set' of 'IRobotTimeHistoryAnalysisParams' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotNonlinearLinkParamsCustom' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Set' of 'IRobotObjectsArray' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotNumbersDictionary' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Div' of 'IRobotGeoSegmentLine' changed to 'Div_'
//   Hint: Member 'Div' of 'IRobotGeoSegmentArc' changed to 'Div_'
//   Hint: Member 'Set' of 'IRobotGeoSegmentArc' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotFiniteElementNodes' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Set' of 'IRobotViewDisplayParams' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotViewDiagramParams' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'End' of 'IRDimAdjoinBranch' changed to 'End_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Set' of 'IRobotViewDetailedAnalysisParams' changed to 'Set_'
//   Hint: Member 'Set' of 'IRobotViewGlobalAnalysisParams' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Set' of 'IRobotViewInfluenceLinesParams' changed to 'Set_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'ClassName' renamed to '_className'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Case' of 'IRConcrBeamPointLoad' changed to 'Case_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Case' of 'IRConcrBeamLinearLoad' changed to 'Case_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
// ************************************************************************ //
{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers. 
{$WARN SYMBOL_PLATFORM OFF}
{$WRITEABLECONST ON}
{$VARPROPSETTER ON}
interface

uses Windows, ActiveX, Classes, Graphics, StdVCL, Variants;
  

// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:        
//   Type Libraries     : LIBID_xxxx                                      
//   CoClasses          : CLASS_xxxx                                      
//   DISPInterfaces     : DIID_xxxx                                       
//   Non-DISP interfaces: IID_xxxx                                        
// *********************************************************************//
const
  // TypeLibrary Major and minor versions
  RobotOMMajorVersion = 1;
  RobotOMMinorVersion = 0;

  LIBID_RobotOM: TGUID = '{F3A37BD0-AA2D-11D2-9844-0080C86BE4DF}';

  IID_IDontUseIt: TGUID = '{7124F52D-6466-43EC-87F2-16285FE58515}';
  CLASS_DontUseIt: TGUID = '{6BCA606D-9E33-40CE-8F3D-425E3D4EC461}';
  IID_IRobotLabel: TGUID = '{B9E29FE1-AB0D-11D2-9845-0080C86BE4DF}';
  CLASS_RobotLabel: TGUID = '{6666CE00-CDC2-11D3-B7BE-0050DA76755E}';
  IID_IRobotLabelServer: TGUID = '{B4598F10-C5BE-11D2-9860-0080C86BE4DF}';
  CLASS_RobotLabelServer: TGUID = '{B4598F13-C5BE-11D2-9860-0080C86BE4DF}';
  IID_IRobotCollection: TGUID = '{93ED3020-A634-11D2-9840-0080C86BE4DF}';
  IID_IRobotNamesArray: TGUID = '{419B03C1-B850-11D3-B7AB-0050DA76755E}';
  CLASS_RobotLabelCollection: TGUID = '{908B8EA0-2244-11D3-98D9-0080C86BE4DF}';
  CLASS_RobotObjectLabelCollection: TGUID = '{6C207FD0-9C31-11D3-995A-0080C86BE4DF}';
  IID_IRobotLoadRecord: TGUID = '{2D556A4A-CD92-11D2-986B-0080C86BE4DF}';
  IID_IRobotLoadRecord2: TGUID = '{DDA889F0-FF33-11D3-B7E6-0050DA76755E}';
  IID_IRobotLoadRecordCommon: TGUID = '{02287139-482D-444C-BEE8-7AB53A8B1B84}';
  IID_IRobotSelection: TGUID = '{B9E29FE3-AB0D-11D2-9845-0080C86BE4DF}';
  IID_IRobotGeoLayer: TGUID = '{925EEC62-78F8-11D4-B84F-0050DA76755E}';
  IID_IRobotGeoPoint3D: TGUID = '{5A3594B2-B23D-11D3-9975-0080C86BE4DF}';
  CLASS_RobotLoadRecord: TGUID = '{2D556A4C-CD92-11D2-986B-0080C86BE4DF}';
  IID_IRobotLoadRecordMngr: TGUID = '{2D556A4B-CD92-11D2-986B-0080C86BE4DF}';
  CLASS_RobotLoadRecordMngr: TGUID = '{2D556A4D-CD92-11D2-986B-0080C86BE4DF}';
  IID_IRobotLoadRecordLinear: TGUID = '{5B6731F0-F344-11D2-98A6-0080C86BE4DF}';
  CLASS_RobotLoadRecordLinear: TGUID = '{5B6731F1-F344-11D2-98A6-0080C86BE4DF}';
  IID_IRobotLoadRecordLinear3D: TGUID = '{7E464D50-F1B0-11D2-98A2-0080C86BE4DF}';
  CLASS_RobotLoadRecordLinear3D: TGUID = '{7E464D54-F1B0-11D2-98A2-0080C86BE4DF}';
  IID_IRobotLoadRecordIn3Points: TGUID = '{7E464D51-F1B0-11D2-98A2-0080C86BE4DF}';
  CLASS_RobotLoadRecordIn3Points: TGUID = '{7E464D55-F1B0-11D2-98A2-0080C86BE4DF}';
  IID_IRobotLoadRecordThermalIn3Points: TGUID = '{7E464D52-F1B0-11D2-98A2-0080C86BE4DF}';
  CLASS_RobotLoadRecordThermalIn3Points: TGUID = '{7E464D56-F1B0-11D2-98A2-0080C86BE4DF}';
  IID_IRobotLoadRecordInContour: TGUID = '{7E464D53-F1B0-11D2-98A2-0080C86BE4DF}';
  CLASS_RobotLoadRecordInContour: TGUID = '{7E464D57-F1B0-11D2-98A2-0080C86BE4DF}';
  IID_IRobotCase: TGUID = '{2D556A40-CD92-11D2-986B-0080C86BE4DF}';
  IID_IRobotSimpleCase: TGUID = '{2D556A42-CD92-11D2-986B-0080C86BE4DF}';
  CLASS_RobotSimpleCase: TGUID = '{2D556A46-CD92-11D2-986B-0080C86BE4DF}';
  IID_IRobotCaseCombination: TGUID = '{2D556A43-CD92-11D2-986B-0080C86BE4DF}';
  CLASS_RobotCaseCombination: TGUID = '{2D556A47-CD92-11D2-986B-0080C86BE4DF}';
  IID_IRobotCaseFactorMngr: TGUID = '{CEEC59F2-F651-11D2-98A8-0080C86BE4DF}';
  IID_IRobotCaseFactor: TGUID = '{CEEC59F0-F651-11D2-98A8-0080C86BE4DF}';
  IID_IRobotCaseCollection: TGUID = '{2D556A44-CD92-11D2-986B-0080C86BE4DF}';
  CLASS_RobotCaseCollection: TGUID = '{2D556A48-CD92-11D2-986B-0080C86BE4DF}';
  CLASS_RobotCaseFactor: TGUID = '{CEEC59F1-F651-11D2-98A8-0080C86BE4DF}';
  CLASS_RobotCaseFactorMngr: TGUID = '{CEEC59F3-F651-11D2-98A8-0080C86BE4DF}';
  IID_IRobotCaseServer: TGUID = '{2D556A41-CD92-11D2-986B-0080C86BE4DF}';
  CLASS_RobotCaseServer: TGUID = '{2D556A49-CD92-11D2-986B-0080C86BE4DF}';
  IID_IRobotSnowWindEngine: TGUID = '{DDA75BE4-316F-11D4-B813-0050DA76755E}';
  IID_IRobotSnowWindParams: TGUID = '{DDA75BE2-316F-11D4-B813-0050DA76755E}';
  IID_IRobotNumbersCollection: TGUID = '{8BCE3174-C81D-11D3-B7B9-0050DA76755E}';
  IID_IRobotSWStruct3DGenParams: TGUID = '{48325303-04D3-47F0-B065-68C81192812E}';
  IID_IRobotValuesArray: TGUID = '{419B03C0-B850-11D3-B7AB-0050DA76755E}';
  IID_IRobotSWStruct3DPurlinGenParams: TGUID = '{C3D4FEA6-9731-4B6E-AB9C-B9A7AB7FE393}';
  IID_IRobotSWStruct3D: TGUID = '{FF11392C-D171-49F6-9AFE-2900F5869BA2}';
  IID_IRobotSWStruct3DFrame: TGUID = '{4196599B-6FB2-4728-BE6D-CA621DAE8757}';
  IID_IRobotSWStruct3DElement: TGUID = '{189781B4-DE37-4A05-8CB1-6F74A61682E3}';
  IID_IRobotNumbersArray: TGUID = '{419B03C4-B850-11D3-B7AB-0050DA76755E}';
  IID_IRobotCodeCombinationEngine: TGUID = '{63DEEDA2-4113-11D4-B822-0050DA76755E}';
  IID_IRobotCodeCmbGenerationParams: TGUID = '{2E0F6BB8-5190-11D4-B83E-0050DA76755E}';
  IID_IRobotCodeCmbRegulations: TGUID = '{2E0F6BB2-5190-11D4-B83E-0050DA76755E}';
  IID_IRobotCodeCmbActionServer: TGUID = '{2E0F6BB4-5190-11D4-B83E-0050DA76755E}';
  IID_IRobotCodeCmbCombs: TGUID = '{2E0F6BB6-5190-11D4-B83E-0050DA76755E}';
  IID_IRobotCodeCmbGroupServer: TGUID = '{2E0F6BBC-5190-11D4-B83E-0050DA76755E}';
  IID_IRobotCodeCmbGroup: TGUID = '{2E0F6BBA-5190-11D4-B83E-0050DA76755E}';
  IID_IRobotCodeCmbGroupRelationServer: TGUID = '{2E0F6BC0-5190-11D4-B83E-0050DA76755E}';
  IID_IRobotCodeCmbGroupRelation: TGUID = '{2E0F6BBE-5190-11D4-B83E-0050DA76755E}';
  IID_IRobotTimeHistoryFunctionList: TGUID = '{987BDB2F-03DB-4C0B-8FA0-ED420DC35C4C}';
  IID_IRobotTimeHistoryPointsCollection: TGUID = '{F0A096D6-36DF-4FB5-B7CE-A38ED3B8B0F4}';
  IID_IRobotMobileCase: TGUID = '{61642592-E89C-11D4-B8AB-0050DA76755E}';
  IID_IRobotMobileCaseComponentMngr: TGUID = '{61642594-E89C-11D4-B8AB-0050DA76755E}';
  IID_IRobotMobileCaseComponent: TGUID = '{61642596-E89C-11D4-B8AB-0050DA76755E}';
  IID_IRobotMobileCaseRoute: TGUID = '{14267019-37AD-44ED-88B8-4BC236E47F9D}';
  IID_IRobotMobileCaseSegmentFactors: TGUID = '{D3882ACF-A33D-4D7A-97BF-3DCCBDC56E2F}';
  IID_IRobotSELFSeismicEngine: TGUID = '{BA190245-7B25-4446-80E1-93BEA09F5D36}';
  IID_IRobotSELFSeismicGenerationParams: TGUID = '{01297317-B940-446C-B0E8-19B61946D26F}';
  IID_IRobotModalAnalysisParams: TGUID = '{134B5582-982B-11D4-A395-00105ADE99A8}';
  IID_IRobotModalAnalysisShifts: TGUID = '{9147DC34-A0DD-11D4-A3A2-00105ADE99A8}';
  IID_IRobotModalAnalysisLimits: TGUID = '{9147DC32-A0DD-11D4-A3A2-00105ADE99A8}';
  IID_IRobotModalAnalysisBase: TGUID = '{8460B0D2-9842-11D4-A395-00105ADE99A8}';
  IID_IRobotMassEccentricities: TGUID = '{D8FF09A5-36F5-43EE-AC3E-22C83687643C}';
  IID_IRobotDynamicAnalysisExcitationDirection: TGUID = '{A0C42C00-4CD9-4E83-A601-D61CDD4C1CDE}';
  IID_IRobotSELFSeismicAnalysisParams: TGUID = '{342B2C05-9385-4B20-84AF-D69E51ECC103}';
  IID_IRobotSELFSeismicStructureParams: TGUID = '{416F4776-D7DF-43B5-B34A-72A4869BCA38}';
  IID_IRobotWindLoadsSimulationEngine: TGUID = '{29E8AFF6-DDF8-4D8C-9FF8-BF414D0E717C}';
  IID_IRobotWindLoadsSimulationParams: TGUID = '{3EF0F59D-921B-4DB3-8266-921C19C5C98A}';
  IID_IRobotCodeCmbComponentMngr: TGUID = '{0F7217B2-2743-11D4-B808-0050DA76755E}';
  CLASS_RobotCodeCmbComponentMngr: TGUID = '{0F7217B3-2743-11D4-B808-0050DA76755E}';
  IID_IRobotCodeCmbComponent: TGUID = '{90DF0B34-37CD-11D4-B819-0050DA76755E}';
  IID_IRobotCodeCmbFactor: TGUID = '{90DF0B32-37CD-11D4-B819-0050DA76755E}';
  IID_IRobotCodeCombination: TGUID = '{0F7217B4-2743-11D4-B808-0050DA76755E}';
  CLASS_RobotCodeCombination: TGUID = '{0F7217B5-2743-11D4-B808-0050DA76755E}';
  CLASS_RobotCodeCmbFactor: TGUID = '{90DF0B33-37CD-11D4-B819-0050DA76755E}';
  CLASS_RobotCodeCmbComponent: TGUID = '{90DF0B35-37CD-11D4-B819-0050DA76755E}';
  CLASS_RobotCodeCombinationEngine: TGUID = '{63DEEDA3-4113-11D4-B822-0050DA76755E}';
  CLASS_RobotMobileCase: TGUID = '{61642593-E89C-11D4-B8AB-0050DA76755E}';
  CLASS_RobotMobileCaseComponentMngr: TGUID = '{61642595-E89C-11D4-B8AB-0050DA76755E}';
  CLASS_RobotMobileCaseComponent: TGUID = '{61642597-E89C-11D4-B8AB-0050DA76755E}';
  CLASS_RobotMobileCaseRoute: TGUID = '{34E0FAEA-84D6-47F3-9071-C27A0681AD03}';
  CLASS_RobotMobileCaseSegmentFactors: TGUID = '{31DA5040-EA64-4C3B-9BFF-E34F2CA16136}';
  IID_IRobotDataObject: TGUID = '{B9E29FE0-AB0D-11D2-9845-0080C86BE4DF}';
  IID_IRobotNode: TGUID = '{BC4268D0-B46D-11D2-984A-0080C86BE4DF}';
  CLASS_RobotNode: TGUID = '{BC4268D2-B46D-11D2-984A-0080C86BE4DF}';
  IID_IRobotEmitter: TGUID = '{F06BD3F2-4CD7-11D4-B835-0050DA76755E}';
  IID_IRobotNodeSupportData: TGUID = '{B4598F11-C5BE-11D2-9860-0080C86BE4DF}';
  IID_IRobotNonlinearLinkMngr: TGUID = '{29C5F20E-0828-44BB-B457-67F395CC152E}';
  IID_IRobotAdvancedSupportData: TGUID = '{EE2E4938-C0F4-47C7-BB8F-BAC0DBE72B72}';
  IID_IRobotSupportEquivalentElasticity: TGUID = '{2ECFF111-C772-4CC1-8A78-5CC0247BDFEC}';
  CLASS_RobotNodeCollection: TGUID = '{1984D3D0-BB84-11D2-9852-0080C86BE4DF}';
  IID_IRobotDataObjectServer: TGUID = '{B9E29FE2-AB0D-11D2-9845-0080C86BE4DF}';
  IID_IRobotNodeServer: TGUID = '{BC4268D1-B46D-11D2-984A-0080C86BE4DF}';
  CLASS_RobotNodeServer: TGUID = '{BC4268D3-B46D-11D2-984A-0080C86BE4DF}';
  IID_IRobotNodeRigidLinkServer: TGUID = '{C0EB8034-BAD3-11D4-B884-0050DA76755E}';
  IID_IRobotNodeRigidLinkDef: TGUID = '{C0EB8032-BAD3-11D4-B884-0050DA76755E}';
  IID_IRobotNodeCompatibilityServer: TGUID = '{07E84B04-C6AA-11D4-B890-0050DA76755E}';
  IID_IRobotNodeCompatibilityDef: TGUID = '{07E84B02-C6AA-11D4-B890-0050DA76755E}';
  IID_IRobotNonlinearLinkServer: TGUID = '{73F13E38-49A3-473D-94F4-ADA69BA9F1D0}';
  IID_IRobotNonlinearLink: TGUID = '{42891CCF-96BB-45DA-869E-75D2DD427D28}';
  IID_IRobotNonlinearLinkParams: TGUID = '{B93C00C6-02C9-4955-A872-9F7E95328541}';
  CLASS_RobotNodeSupport: TGUID = '{B4598F12-C5BE-11D2-9860-0080C86BE4DF}';
  CLASS_RobotNodeSupportData: TGUID = '{B4598F14-C5BE-11D2-9860-0080C86BE4DF}';
  IID_IRobotBarEnd: TGUID = '{8EE4B3A0-C5B7-11D3-B7B7-0050DA76755E}';
  CLASS_RobotBarEnd: TGUID = '{8EE4B3A1-C5B7-11D3-B7B7-0050DA76755E}';
  IID_IRobotBarEndOffsetData: TGUID = '{704C42A3-C5D2-11D3-B7B7-0050DA76755E}';
  IID_IRobotBar: TGUID = '{97185C20-BC4A-11D2-9854-0080C86BE4DF}';
  CLASS_RobotBar: TGUID = '{97185C22-BC4A-11D2-9854-0080C86BE4DF}';
  IID_IRobotBarElementDataSet: TGUID = '{F9E584FD-457C-4A66-9B13-231A32E58F9F}';
  IID_IRobotBarElementData: TGUID = '{E9F00C52-CF2D-4CD1-AA39-0A1C2FF22A6F}';
  CLASS_RobotBarCollection: TGUID = '{97185C23-BC4A-11D2-9854-0080C86BE4DF}';
  IID_IRobotBarServer: TGUID = '{97185C21-BC4A-11D2-9854-0080C86BE4DF}';
  CLASS_RobotBarServer: TGUID = '{97185C24-BC4A-11D2-9854-0080C86BE4DF}';
  IID_IRobotNonlinearHingeModelServer: TGUID = '{4C655156-5510-4638-8704-57E365FF9B8B}';
  IID_IRobotNonlinearHingeModel: TGUID = '{03D77B95-D30B-478B-8534-2A60CF4D5292}';
  IID_IRobotNonlinearHingeModelPoints: TGUID = '{59AE9E62-C5F0-4A4A-9781-F3448C954451}';
  IID_IRobotGeoPoint2D: TGUID = '{5A3594B0-B23D-11D3-9975-0080C86BE4DF}';
  IID_IRobotNonlinearHingeModelAxisParams: TGUID = '{A3DBC390-C50E-4A64-85A5-FB36EA0361A9}';
  IID_IRobotNonlinearHingeServer: TGUID = '{BD581E27-BB81-445A-9D30-B8CBA41122D4}';
  IID_IRobotNonlinearHingeDef: TGUID = '{EDA15EF4-3BA0-4B51-BD5C-3AF0C649BEA7}';
  IID_IRobotBarReleaseData: TGUID = '{BB798AC0-D611-11D2-9879-0080C86BE4DF}';
  CLASS_RobotBarReleaseData: TGUID = '{BB798AC2-D611-11D2-9879-0080C86BE4DF}';
  IID_IRobotBarEndReleaseData: TGUID = '{BB798AC1-D611-11D2-9879-0080C86BE4DF}';
  CLASS_RobotBarEndReleaseData: TGUID = '{BB798AC3-D611-11D2-9879-0080C86BE4DF}';
  CLASS_RobotBarRelease: TGUID = '{DADB1FA0-D623-11D2-987A-0080C86BE4DF}';
  IID_IRobotMaterialData: TGUID = '{5BCE6340-F7F8-11D2-98AB-0080C86BE4DF}';
  CLASS_RobotMaterialData: TGUID = '{5BCE6341-F7F8-11D2-98AB-0080C86BE4DF}';
  CLASS_RobotBarMaterial: TGUID = '{95B7E840-F8C0-11D2-98AC-0080C86BE4DF}';
  IID_IRobotBarSectionNonstdData: TGUID = '{37B08340-127C-11D3-98C6-0080C86BE4DF}';
  CLASS_RobotBarSectionNonstdData: TGUID = '{37B08341-127C-11D3-98C6-0080C86BE4DF}';
  IID_IRobotBarSectionData: TGUID = '{FECA9F20-06B4-11D3-98B9-0080C86BE4DF}';
  CLASS_RobotBarSectionData: TGUID = '{FECA9F21-06B4-11D3-98B9-0080C86BE4DF}';
  IID_IRobotBarSectionConcreteData: TGUID = '{0D3F8D92-00CE-11D5-B8C3-0050DA76755E}';
  IID_IRobotBarSectionElasticParams: TGUID = '{E54A7D9B-C5D8-419F-B29A-CC1C194C0029}';
  IID_IRobotMaterialElasticModel: TGUID = '{C4A3E6AC-7D07-4A3D-9B74-51A86D6EF184}';
  IID_IRobotBarSectionComplexData: TGUID = '{695FA1C7-DA42-4B93-829B-D84FA214173E}';
  IID_IRobotBarSectionSpecialData: TGUID = '{EAC7C11E-8F96-4603-8EF1-D43709BC42CD}';
  CLASS_RobotBarSection: TGUID = '{FECA9F22-06B4-11D3-98B9-0080C86BE4DF}';
  IID_IRobotBarEndBracketData: TGUID = '{704C42A0-C5D2-11D3-B7B7-0050DA76755E}';
  CLASS_RobotBarEndBracketData: TGUID = '{704C42A1-C5D2-11D3-B7B7-0050DA76755E}';
  CLASS_RobotBarEndOffsetData: TGUID = '{704C42A4-C5D2-11D3-B7B7-0050DA76755E}';
  IID_IRobotBarOffsetData: TGUID = '{704C42A5-C5D2-11D3-B7B7-0050DA76755E}';
  CLASS_RobotBarOffsetData: TGUID = '{704C42A6-C5D2-11D3-B7B7-0050DA76755E}';
  IID_IRobotThicknessData: TGUID = '{2502E052-2B28-11D4-B80B-0050DA76755E}';
  CLASS_RobotThicknessData: TGUID = '{2502E053-2B28-11D4-B80B-0050DA76755E}';
  IID_IRobotThicknessHomoData: TGUID = '{21C4B122-2B3C-11D4-B80B-0050DA76755E}';
  CLASS_RobotThicknessHomoData: TGUID = '{21C4B123-2B3C-11D4-B80B-0050DA76755E}';
  IID_IRobotThicknessMatrix: TGUID = '{AD8D51E2-2CA8-11D4-B80E-0050DA76755E}';
  CLASS_RobotThicknessMatrix: TGUID = '{AD8D51E3-2CA8-11D4-B80E-0050DA76755E}';
  IID_IRobotThicknessOrthoData: TGUID = '{AD8D51E4-2CA8-11D4-B80E-0050DA76755E}';
  CLASS_RobotThicknessOrthoData: TGUID = '{AD8D51E5-2CA8-11D4-B80E-0050DA76755E}';
  IID_IRobotResultServer: TGUID = '{DDF180C1-D17B-11D2-986F-0080C86BE4DF}';
  CLASS_RobotResultServer: TGUID = '{DDF180C4-D17B-11D2-986F-0080C86BE4DF}';
  IID_IRobotNodeResultServer: TGUID = '{DDF180C3-D17B-11D2-986F-0080C86BE4DF}';
  IID_IRobotReactionServer: TGUID = '{DDF180C2-D17B-11D2-986F-0080C86BE4DF}';
  IID_IRobotReactionData: TGUID = '{DDF180C0-D17B-11D2-986F-0080C86BE4DF}';
  IID_IRobotNodeDisplacementServer: TGUID = '{85EF7901-D2DB-11D2-9871-0080C86BE4DF}';
  IID_IRobotDisplacementData: TGUID = '{85EF7900-D2DB-11D2-9871-0080C86BE4DF}';
  IID_IRobotNodeBucklingServer: TGUID = '{203AE946-C29D-11D3-B7B3-0050DA76755E}';
  IID_IRobotPseudostaticForceServer: TGUID = '{E172DD44-42C7-11D4-B827-0050DA76755E}';
  IID_IRobotForcesData: TGUID = '{E172DD42-42C7-11D4-B827-0050DA76755E}';
  IID_IRobotBarResultServer: TGUID = '{1B0E6EE0-D30F-11D2-9871-0080C86BE4DF}';
  IID_IRobotBarForceServer: TGUID = '{1B0E6EE1-D30F-11D2-9871-0080C86BE4DF}';
  IID_IRobotBarForceData: TGUID = '{1B0E6EE2-D30F-11D2-9871-0080C86BE4DF}';
  IID_IRobotBarDeflectionServer: TGUID = '{7E348600-B787-11D3-B7AA-0050DA76755E}';
  IID_IRobotBarDeflectionData: TGUID = '{7E348601-B787-11D3-B7AA-0050DA76755E}';
  IID_IRobotBarStressServer: TGUID = '{282A9860-B3B7-11D3-9978-0080C86BE4DF}';
  IID_IRobotBarStressData: TGUID = '{B14A5290-A32A-11D3-9967-0080C86BE4DF}';
  IID_IRobotBarBucklingServer: TGUID = '{203AE944-C29D-11D3-B7B3-0050DA76755E}';
  IID_IRobotBarBucklingData: TGUID = '{203AE941-C29D-11D3-B7B3-0050DA76755E}';
  IID_IRobotBarDisplacementServer: TGUID = '{A16F5742-C135-11D4-B88A-0050DA76755E}';
  IID_IRobotAdvancedResultServer: TGUID = '{5D2C16E2-41F0-11D4-B823-0050DA76755E}';
  IID_IRobotEigenvaluesServer: TGUID = '{976214D6-3DDF-11D4-B820-0050DA76755E}';
  IID_IRobotEigenvalues: TGUID = '{976214D2-3DDF-11D4-B820-0050DA76755E}';
  IID_IRobotMassSumServer: TGUID = '{5D2C16E4-41F0-11D4-B823-0050DA76755E}';
  IID_IRobotSpectralCoefficients: TGUID = '{5D2C16E6-41F0-11D4-B823-0050DA76755E}';
  IID_IRobotEigenvectorsServer: TGUID = '{3516D052-54B1-11D4-B842-0050DA76755E}';
  IID_IRobotTimeHistoryResultServer: TGUID = '{BF2F9A52-A04A-401C-A4E2-4538F0552DE6}';
  IID_IRobotTimeHistoryResults: TGUID = '{EE79FD8C-F199-4C00-A39D-B49D3CB91058}';
  IID_IRobotFRFResultServer: TGUID = '{457A6489-D1EC-44EA-8C11-29A81108BA5E}';
  IID_IRobotFRFResults: TGUID = '{CC5BFD97-6E81-4E42-B78B-16FF70D71696}';
  IID_IRobotFootfallResults: TGUID = '{BC150BF4-2301-46A7-891E-5A76D4A21334}';
  IID_IRobotFeResultServer: TGUID = '{B65378E2-192C-11D5-B8DE-0050DA76755E}';
  IID_IRobotFeResultParams: TGUID = '{5477A032-191C-11D5-B8DE-0050DA76755E}';
  IID_IRobotFeResultDetailed: TGUID = '{B65378E4-192C-11D5-B8DE-0050DA76755E}';
  IID_IRobotFeResultPrincipal: TGUID = '{63D4E832-22B5-11D5-B8EB-FFFFFF000000}';
  IID_IRobotFeResultComplex: TGUID = '{0E7E147F-2201-4721-AC62-BD6EE52FDC47}';
  IID_IRobotFeResultReinforcement: TGUID = '{80C44EE2-2E8C-4AA6-ACD9-514A25DDFB69}';
  IID_IRobotFeResultReduced: TGUID = '{5FE03B67-F8FB-488A-ACEC-C4B1B836B4A6}';
  IID_IRobotPanelCutMngr: TGUID = '{727FE479-C4B7-441D-8737-92313A65A661}';
  IID_IRobotPanelCut: TGUID = '{48B4EB8A-C7EC-4529-BB93-952532FE97B8}';
  IID_IRobotFeExtremeParams: TGUID = '{4CF01CFB-532C-4CB4-A9EF-9E6BB86A4D21}';
  IID_IRobotFeExtremeValue: TGUID = '{6CF0C60E-7E47-4797-9AFF-F04E37DDECAA}';
  IID_IRobotFeMultiResultType: TGUID = '{87F73842-D429-408F-856F-2FFD2DD90EA0}';
  IID_IRobotFeMultiExtremeValue: TGUID = '{3B05F3DB-BD6A-4FB0-9540-94BC7E2B6706}';
  IID_IRobotExtremeResultServer: TGUID = '{14218059-EB5E-4B84-8C32-7683B4AFB7F9}';
  IID_IRobotExtremeParams: TGUID = '{99E9E497-F464-4AD3-99AA-EE1E699C73B2}';
  IID_IRobotMultiSelection: TGUID = '{79173860-0C32-11D3-98BF-0080C86BE4DF}';
  IID_IRobotModeSelection: TGUID = '{25DD8F10-597F-4DD9-A7DB-D8C63B0F4B00}';
  IID_IRobotExtremeValue: TGUID = '{A9A7EC2B-B25E-4F67-9835-BEAEE5A9EED3}';
  IID_IRobotUniversalResultAccess: TGUID = '{A14CB3E2-4B73-11D4-B832-0050DA76755E}';
  IID_IRobotStructureValues: TGUID = '{29E921DE-DFD0-4989-894B-5178AE5CE5FE}';
  IID_IRobotResultQueryParams: TGUID = '{67F19EF2-BD15-4485-BA2C-2ADEDCBCDE1A}';
  IID_IRobotResultRowSet: TGUID = '{0EA557D8-86C1-4827-B0F4-84300FDF9A8F}';
  IID_IRobotResultRow: TGUID = '{DAB65BBD-06B7-408F-9395-25C077BA97BA}';
  IID_IRobotStoreyResultServer: TGUID = '{903278F0-7DE7-4800-BFBB-71B2241D32C2}';
  IID_IRobotStoreyValues: TGUID = '{2CF1571B-B2CF-4B3B-9DC4-1B3DE9C952FB}';
  IID_IRobotStoreyDisplacements: TGUID = '{F65BA016-B591-4D04-941F-E5FC5FCA4B32}';
  IID_IRobotStoreyReducedForces: TGUID = '{1A65169A-A42C-4600-887E-29ED11ACBC04}';
  IID_IRobotCalculationResume: TGUID = '{500875E5-8C21-4B3A-BA6C-1F730DD6B5CF}';
  CLASS_RobotNodeResultServer: TGUID = '{DDF180C5-D17B-11D2-986F-0080C86BE4DF}';
  CLASS_RobotReactionServer: TGUID = '{DDF180C6-D17B-11D2-986F-0080C86BE4DF}';
  CLASS_RobotReactionData: TGUID = '{DDF180C7-D17B-11D2-986F-0080C86BE4DF}';
  CLASS_RobotNodeDisplacementServer: TGUID = '{85EF7902-D2DB-11D2-9871-0080C86BE4DF}';
  CLASS_RobotNodeDisplacementData: TGUID = '{85EF7903-D2DB-11D2-9871-0080C86BE4DF}';
  CLASS_RobotBarResultServer: TGUID = '{1B0E6EE3-D30F-11D2-9871-0080C86BE4DF}';
  CLASS_RobotBarForceServer: TGUID = '{1B0E6EE4-D30F-11D2-9871-0080C86BE4DF}';
  CLASS_RobotBarForceData: TGUID = '{1B0E6EE5-D30F-11D2-9871-0080C86BE4DF}';
  CLASS_RobotBarStressData: TGUID = '{B14A5291-A32A-11D3-9967-0080C86BE4DF}';
  CLASS_RobotBarStressServer: TGUID = '{282A9861-B3B7-11D3-9978-0080C86BE4DF}';
  CLASS_RobotBarDeflectionData: TGUID = '{7E348602-B787-11D3-B7AA-0050DA76755E}';
  CLASS_RobotBarDeflectionServer: TGUID = '{7E348603-B787-11D3-B7AA-0050DA76755E}';
  CLASS_RobotBarBucklingData: TGUID = '{203AE942-C29D-11D3-B7B3-0050DA76755E}';
  CLASS_RobotBarBucklingServer: TGUID = '{203AE943-C29D-11D3-B7B3-0050DA76755E}';
  CLASS_RobotNodeBucklingServer: TGUID = '{203AE947-C29D-11D3-B7B3-0050DA76755E}';
  CLASS_RobotEigenvalues: TGUID = '{976214D3-3DDF-11D4-B820-0050DA76755E}';
  CLASS_RobotEigenvaluesServer: TGUID = '{976214D7-3DDF-11D4-B820-0050DA76755E}';
  CLASS_RobotAdvancedResultServer: TGUID = '{5D2C16E3-41F0-11D4-B823-0050DA76755E}';
  CLASS_RobotMassSumServer: TGUID = '{5D2C16E5-41F0-11D4-B823-0050DA76755E}';
  CLASS_RobotSpectralCoefficients: TGUID = '{5D2C16E7-41F0-11D4-B823-0050DA76755E}';
  CLASS_RobotEigenvectorsServer: TGUID = '{3516D053-54B1-11D4-B842-0050DA76755E}';
  IID_IRobotVehicleData: TGUID = '{9BEBB9EB-4C93-418D-BF31-390449DC32B1}';
  CLASS_RobotVehicleData: TGUID = '{D6D36DED-0070-4E48-A689-DD0CDD34AF31}';
  IID_IRobotVehicleLoadMngr: TGUID = '{4D239F52-7340-4E74-A88E-2E2984677A5F}';
  IID_IRobotVehicleLoad: TGUID = '{C731567B-3EBF-47E1-8952-A0B17A2532E8}';
  CLASS_RobotVehicleLoadMngr: TGUID = '{AA0D3647-0E1E-44F5-BF4E-212CC765BC5D}';
  CLASS_RobotVehicleLoad: TGUID = '{07560BDC-AF42-48F2-B4BD-DB3988DD2747}';
  DIID__IRobotStructureEvents: TGUID = '{EBC2714E-43B4-4619-A639-21E260FBBAB3}';
  IID_IRobotStructure: TGUID = '{F5E4E9F0-B604-11D2-984C-0080C86BE4DF}';
  CLASS_RobotStructure: TGUID = '{F5E4E9F1-B604-11D2-984C-0080C86BE4DF}';
  IID_IRobotSelectionFactory: TGUID = '{FE906AA0-95D2-11D3-9954-0080C86BE4DF}';
  IID_IRobotObjEdgeSelection: TGUID = '{A6AAA616-94CA-40D2-90D9-07162FA6DF14}';
  IID_IRobotObjObjectServer: TGUID = '{EE241050-CA62-11D3-B7BC-0050DA76755E}';
  IID_IRobotObjObject: TGUID = '{8BCE3162-C81D-11D3-B7B9-0050DA76755E}';
  IID_IRobotObjPart: TGUID = '{FDA31DC2-8F88-11D4-B864-0050DA76755E}';
  IID_IRobotObjPartMain: TGUID = '{8BCE3161-C81D-11D3-B7B9-0050DA76755E}';
  IID_IRobotObjAttributes: TGUID = '{8BCE3160-C81D-11D3-B7B9-0050DA76755E}';
  IID_IRobotGeoObject: TGUID = '{3E306734-C804-11D3-B7B9-0050DA76755E}';
  IID_IRobotGeoCurveDiv: TGUID = '{3E306730-C804-11D3-B7B9-0050DA76755E}';
  IID_IRobotObjModification: TGUID = '{3E306747-C804-11D3-B7B9-0050DA76755E}';
  IID_IRobotObjOperation: TGUID = '{3E306748-C804-11D3-B7B9-0050DA76755E}';
  IID_IRobotObjPartReference: TGUID = '{FDA31DC6-8F88-11D4-B864-0050DA76755E}';
  IID_IRobotObjMesh: TGUID = '{D8710336-0DA6-4A25-BB70-DAA48157C822}';
  IID_IRobotMeshParams: TGUID = '{DEA28C48-9BB1-4FD1-87C5-F45694AA3A2D}';
  IID_IRobotMeshVolumeParams: TGUID = '{C9A8B671-9803-4E2D-A9F9-1BCB536B569F}';
  IID_IRobotMeshSurfaceParams: TGUID = '{77F4A2AE-1E6D-4E42-8A48-E7292B85E7C4}';
  IID_IRobotMeshMethod: TGUID = '{CCA32E7D-C01B-4AA2-8521-553B6A7375CC}';
  IID_IRobotMeshGeneration: TGUID = '{F4FB50A2-6B8E-4D44-B198-668BBD1A78B9}';
  IID_IRobotMeshSurfaceFiniteElems: TGUID = '{AE110C49-E3FC-43C9-83E5-CAC9E2E7494E}';
  IID_IRobotMeshCoonsParams: TGUID = '{A96801E5-90D1-4830-BB83-9D771B23C623}';
  IID_IRobotMeshDelaunayParams: TGUID = '{A373A3C7-8239-4D16-A10F-81A8932085F1}';
  IID_IRobotFiniteElementDataSet: TGUID = '{E699411F-FBB2-4F7F-B221-8B8E8E4EB598}';
  IID_IRobotFiniteElementData: TGUID = '{947BFF1C-1565-46D1-A1B6-2C7CD9884A52}';
  IID_IRobotLinearReleaseServer: TGUID = '{4F7AA0C2-AA40-11D4-B879-0050DA76755E}';
  IID_IRobotLinearReleaseDef: TGUID = '{00552E42-BA0A-11D4-B883-0050DA76755E}';
  IID_IRobotLinearReleaseDefList: TGUID = '{432DD6F4-1C8A-4262-A37E-993861B40DC8}';
  IID_IRobotPointsArray: TGUID = '{ED408960-197C-4ED7-AFE1-63C7A833525C}';
  IID_IRobotFiniteElementServer: TGUID = '{78AFC7B6-C43A-11D4-B88D-0050DA76755E}';
  IID_IRobotGroupServer: TGUID = '{82448565-0567-4D66-88EE-AE70FAD07F51}';
  IID_IRobotGroup: TGUID = '{24A518D7-EEE2-442E-BB52-826434CA8C05}';
  IID_IRobotStructureEditTools: TGUID = '{E298E2D4-5331-4BE3-8C21-72B42CDECE9F}';
  IID_IRobotStructureCache: TGUID = '{B4BD2F67-C09D-4F38-83B7-FF261369E38D}';
  IID_IRobotStructureApplyInfo: TGUID = '{2663B709-C3C5-43A2-964F-9129F6BD2281}';
  IID_IRobotStoreyMngr: TGUID = '{4FD29987-1B66-4941-9C26-BF4EFAF53F2B}';
  IID_IRobotStorey: TGUID = '{5212BDE1-FB5F-423D-B631-156E6B3E4156}';
  IID_IRobotGroupObjectServer: TGUID = '{2574657F-483A-4513-B4D8-79DAC2CCBB56}';
  IID_IRobotStructureQuantitySurvey: TGUID = '{DC424D31-F411-4061-8D21-BCE3F367094F}';
  IID_IRobotMaterialQuantitySurvey: TGUID = '{6728D546-E5C1-4020-878A-C8610F67205D}';
  IID_IRobotBarSectionQuantitySurvey: TGUID = '{001CD2EA-6E65-4344-BAD3-0499ED029040}';
  IID_IRobotThicknessQuantitySurvey: TGUID = '{606EFDBD-4EB7-4F67-8718-5C1E07D70707}';
  IID_IRobotStructureMergeData: TGUID = '{39D37C34-DDFD-4405-BD42-4457F14E20AC}';
  IID_IRobotParamServer: TGUID = '{007F6329-BF6A-4BD7-9FEE-4AC451E7D57E}';
  IID_IRobotParamSchemaMngr: TGUID = '{79DF4395-C649-46AA-A128-5D9BD6325962}';
  IID_IRobotParamSchema: TGUID = '{5592E0B4-569C-4495-A34E-3803B7C5E096}';
  IID_IRobotParamSchemaDef: TGUID = '{C0E90675-53E7-4591-842B-FF2A79B36AA3}';
  IID_IRobotParamDef: TGUID = '{6BF6F0A7-BCF2-4350-B48C-BE0759FDDEFC}';
  IID_IRobotParamCollection: TGUID = '{958D2D23-A854-4C99-B84A-014D511505D8}';
  CLASS_RobotForcesData: TGUID = '{E172DD43-42C7-11D4-B827-0050DA76755E}';
  CLASS_RobotPseudostaticForceServer: TGUID = '{E172DD45-42C7-11D4-B827-0050DA76755E}';
  CLASS_RobotDisplacementData: TGUID = '{EC7844F0-4391-11D4-B82A-0050DA76755E}';
  CLASS_RobotUniversalResultAccess: TGUID = '{A14CB3E3-4B73-11D4-B832-0050DA76755E}';
  CLASS_RobotCodeCmbRegulations: TGUID = '{2E0F6BB3-5190-11D4-B83E-0050DA76755E}';
  CLASS_RobotCodeCmbActionServer: TGUID = '{2E0F6BB5-5190-11D4-B83E-0050DA76755E}';
  CLASS_RobotCodeCmbCombs: TGUID = '{2E0F6BB7-5190-11D4-B83E-0050DA76755E}';
  CLASS_RobotCodeCmbGenerationParams: TGUID = '{2E0F6BB9-5190-11D4-B83E-0050DA76755E}';
  CLASS_RobotCodeCmbGroup: TGUID = '{2E0F6BBB-5190-11D4-B83E-0050DA76755E}';
  CLASS_RobotCodeCmbGroupServer: TGUID = '{2E0F6BBD-5190-11D4-B83E-0050DA76755E}';
  CLASS_RobotCodeCmbGroupRelation: TGUID = '{2E0F6BBF-5190-11D4-B83E-0050DA76755E}';
  CLASS_RobotCodeCmbGroupRelationServer: TGUID = '{2E0F6BC1-5190-11D4-B83E-0050DA76755E}';
  IID_IRobotCodeCmbActiveCaseInfo: TGUID = '{2E0F6BC2-5190-11D4-B83E-0050DA76755E}';
  CLASS_RobotCodeCmbActiveCaseInfo: TGUID = '{2E0F6BC3-5190-11D4-B83E-0050DA76755E}';
  CLASS_RobotCodeCmbActiveCaseCollection: TGUID = '{5056BB20-5D72-11D4-B84A-0050DA76755E}';
  CLASS_RobotModalAnalysisParams: TGUID = '{134B5583-982B-11D4-A395-00105ADE99A8}';
  CLASS_RobotModalAnalysisBase: TGUID = '{8460B0D3-9842-11D4-A395-00105ADE99A8}';
  CLASS_RobotModalAnalysisLimits: TGUID = '{9147DC33-A0DD-11D4-A3A2-00105ADE99A8}';
  CLASS_RobotModalAnalysisShifts: TGUID = '{9147DC35-A0DD-11D4-A3A2-00105ADE99A8}';
  IID_IRobotBarCableData: TGUID = '{2B3902B2-A58F-11D4-A3A4-00105ADE99A8}';
  CLASS_RobotBarCableData: TGUID = '{2B3902B3-A58F-11D4-A3A4-00105ADE99A8}';
  IID_IRobotLinearReleaseData: TGUID = '{19D1B942-A673-11D4-B876-0050DA76755E}';
  CLASS_RobotLinearReleaseData: TGUID = '{19D1B943-A673-11D4-B876-0050DA76755E}';
  IID_IRobotBarElasticGroundData: TGUID = '{446E6472-AB48-11D4-B87A-0050DA76755E}';
  CLASS_RobotBarElasticGroundData: TGUID = '{446E6473-AB48-11D4-B87A-0050DA76755E}';
  IID_IRobotNodeRigidLinkData: TGUID = '{FF4E0492-ABDC-11D4-B87B-0050DA76755E}';
  CLASS_RobotNodeRigidLinkData: TGUID = '{FF4E0493-ABDC-11D4-B87B-0050DA76755E}';
  IID_IRobotNonlinearAnalysisParams: TGUID = '{1291AB32-BA23-11D4-B883-0050DA76755E}';
  CLASS_RobotNonlinearAnalysisParams: TGUID = '{1291AB33-BA23-11D4-B883-0050DA76755E}';
  CLASS_RobotNodeRigidLinkDef: TGUID = '{C0EB8033-BAD3-11D4-B884-0050DA76755E}';
  CLASS_RobotNodeRigidLinkServer: TGUID = '{C0EB8035-BAD3-11D4-B884-0050DA76755E}';
  IID_IRobotCaseAnalysisModesFilter: TGUID = '{9617FBC4-B95D-11D4-B882-0050DA76755E}';
  CLASS_RobotCaseAnalysisModesFilter: TGUID = '{9617FBC5-B95D-11D4-B882-0050DA76755E}';
  IID_IRobotSeismicAnalysis_PS_92_Params: TGUID = '{B249EF10-B3D5-11D4-B87E-0050DA76755E}';
  CLASS_RobotSeismicAnalysis_PS_92_Params: TGUID = '{B249EF11-B3D5-11D4-B87E-0050DA76755E}';
  IID_IRobotSeismicAnalysis_PS_92_SiteEnvelope: TGUID = '{934FE8DE-55BE-46DB-BD17-FC8FA91EFAB2}';
  IID_IRobotSeismicResidualMode: TGUID = '{DE9F8211-9021-4163-8C8A-887BCDF36F92}';
  CLASS_RobotSeismicAnalysis_PS_92_SiteEnvelope: TGUID = '{88331845-9392-4462-B2A3-F88D67239736}';
  CLASS_RobotDynamicAnalysisExcitationDirection: TGUID = '{213EEB2A-7EFF-49EC-9B41-80DC3CEDC440}';
  IID_IRobotSeismicAnalysis_PS_69_Params: TGUID = '{B249EF0E-B3D5-11D4-B87E-0050DA76755E}';
  CLASS_RobotSeismicAnalysis_PS_69_Params: TGUID = '{B249EF0F-B3D5-11D4-B87E-0050DA76755E}';
  IID_IRobotSeismicAnalysis_P_100_92_Params: TGUID = '{B249EF0C-B3D5-11D4-B87E-0050DA76755E}';
  CLASS_RobotSeismicAnalysis_P_100_92_Params: TGUID = '{B249EF0D-B3D5-11D4-B87E-0050DA76755E}';
  IID_IRobotSeismicAnalysis_EC_8_Params: TGUID = '{B249EF0A-B3D5-11D4-B87E-0050DA76755E}';
  CLASS_RobotSeismicAnalysis_EC_8_Params: TGUID = '{B249EF0B-B3D5-11D4-B87E-0050DA76755E}';
  IID_IRobotSeismicAnalysis_EAK_2000_Params: TGUID = '{B249EF1A-B3D5-11D4-B87E-0050DA76755E}';
  CLASS_RobotSeismicAnalysis_EAK_2000_Params: TGUID = '{B249EF1B-B3D5-11D4-B87E-0050DA76755E}';
  IID_IRobotSeismicAnalysis_P_100_2006_Params: TGUID = '{D3FFD10F-ACAF-449C-AE3D-253E460EA52B}';
  CLASS_RobotSeismicAnalysis_P_100_2006_Params: TGUID = '{D19B7632-DF79-44C1-9C81-EBBF5D418F11}';
  IID_IRobotSeismicAnalysis_IBC_2006_Params: TGUID = '{38CEDCB8-0073-42D4-AD14-C7A5AE282C78}';
  CLASS_RobotSeismicAnalysis_IBC_2006_Params: TGUID = '{DCDD5996-5C8E-41DD-806B-D9C2907FAE69}';
  IID_IRobotSeismicAnalysis_IBC_2000_Params: TGUID = '{B249EF18-B3D5-11D4-B87E-0050DA76755E}';
  CLASS_RobotSeismicAnalysis_IBC_2000_Params: TGUID = '{B249EF19-B3D5-11D4-B87E-0050DA76755E}';
  IID_IRobotSeismicAnalysis_UBC_97_Params: TGUID = '{B249EF16-B3D5-11D4-B87E-0050DA76755E}';
  CLASS_RobotSeismicAnalysis_UBC_97_Params: TGUID = '{B249EF17-B3D5-11D4-B87E-0050DA76755E}';
  IID_IRobotSeismicAnalysis_TURKISH_23098_Params: TGUID = '{B249EF14-B3D5-11D4-B87E-0050DA76755E}';
  CLASS_RobotSeismicAnalysis_TURKISH_23098_Params: TGUID = '{B249EF15-B3D5-11D4-B87E-0050DA76755E}';
  IID_IRobotSeismicAnalysis_RPA_88_Params: TGUID = '{B249EF12-B3D5-11D4-B87E-0050DA76755E}';
  CLASS_RobotSeismicAnalysis_RPA_88_Params: TGUID = '{B249EF13-B3D5-11D4-B87E-0050DA76755E}';
  IID_IRobotSeismicAnalysis_DM_16_1_96_Params: TGUID = '{B249EF08-B3D5-11D4-B87E-0050DA76755E}';
  CLASS_RobotSeismicAnalysis_DM_16_1_96_Params: TGUID = '{B249EF09-B3D5-11D4-B87E-0050DA76755E}';
  IID_IRobotSeismicAnalysis_AFPS_90_Params: TGUID = '{B249EF02-B3D5-11D4-B87E-0050DA76755E}';
  CLASS_RobotSeismicAnalysis_AFPS_90_Params: TGUID = '{B249EF03-B3D5-11D4-B87E-0050DA76755E}';
  IID_IRobotSeismicAnalysis_CHINESE_Params: TGUID = '{B249EF04-B3D5-11D4-B87E-0050DA76755E}';
  CLASS_RobotSeismicAnalysis_CHINESE_Params: TGUID = '{B249EF05-B3D5-11D4-B87E-0050DA76755E}';
  IID_IRobotSeismicAnalysis_CIRSOC_103_Params: TGUID = '{B249EF06-B3D5-11D4-B87E-0050DA76755E}';
  CLASS_RobotSeismicAnalysis_CIRSOC_103_Params: TGUID = '{B249EF07-B3D5-11D4-B87E-0050DA76755E}';
  IID_IRobotSpectralAnalysisSpectrum: TGUID = '{F3041224-B93C-11D4-B882-0050DA76755E}';
  CLASS_RobotSpectralAnalysisSpectrum: TGUID = '{F3041225-B93C-11D4-B882-0050DA76755E}';
  IID_IRobotSpectralAnalysisPointsCollection: TGUID = '{F3041228-B93C-11D4-B882-0050DA76755E}';
  IID_IRobotSpectralAnalysisParams: TGUID = '{F3041222-B93C-11D4-B882-0050DA76755E}';
  CLASS_RobotSpectralAnalysisParams: TGUID = '{F3041223-B93C-11D4-B882-0050DA76755E}';
  CLASS_RobotBarDisplacementServer: TGUID = '{A16F5743-C135-11D4-B88A-0050DA76755E}';
  IID_IRobotNodeCompatibilityData: TGUID = '{ADAC3BB2-C5CB-11D4-B88F-0050DA76755E}';
  CLASS_RobotNodeCompatibilityData: TGUID = '{ADAC3BB3-C5CB-11D4-B88F-0050DA76755E}';
  CLASS_RobotNodeCompatibilityDef: TGUID = '{07E84B03-C6AA-11D4-B890-0050DA76755E}';
  CLASS_RobotNodeCompatibilityServer: TGUID = '{07E84B05-C6AA-11D4-B890-0050DA76755E}';
  IID_IRobotModalWithStaticForcesAnalysisParams: TGUID = '{23B1A842-D01C-11D4-B897-0050DA76755E}';
  CLASS_RobotModalWithStaticForcesAnalysisParams: TGUID = '{23B1A843-D01C-11D4-B897-0050DA76755E}';
  CLASS_RobotBarSectionConcreteData: TGUID = '{0D3F8D93-00CE-11D5-B8C3-0050DA76755E}';
  IID_IRobotKernel: TGUID = '{9526D7E2-D659-11D4-B89E-0050DA76755E}';
  CLASS_RobotAppKernel: TGUID = '{DCC52080-0D6C-11D5-B8D2-0050DA76755E}';
  IID_IRobotKernelPreferences: TGUID = '{1DC41BF2-DCCE-11D4-B8A0-0050DA76755E}';
  IID_IRobotProjectPreferences: TGUID = '{56AFE688-C294-11D3-B7B3-0050DA76755E}';
  IID_IRobotSectionDatabaseList: TGUID = '{56AFE686-C294-11D3-B7B3-0050DA76755E}';
  IID_IRobotSectionDatabase: TGUID = '{56AFE682-C294-11D3-B7B3-0050DA76755E}';
  IID_IRobotMaterialDatabase: TGUID = '{56AFE684-C294-11D3-B7B3-0050DA76755E}';
  IID_IRobotVehicleDatabaseList: TGUID = '{5A36E3B8-8295-4F58-AA07-1D90F7256B69}';
  IID_IRobotVehicleDatabase: TGUID = '{EBDC08F9-40C6-4A04-A61B-C65A737859F6}';
  IID_IRobotUnitMngr: TGUID = '{7E151B9A-FFB8-40AE-9A09-20EFDC3D0596}';
  IID_IRobotUnitEditionServer: TGUID = '{C4FC7CF3-42D7-4AC9-8A0A-18D57322DA45}';
  IID_IRobotUnitEditionData: TGUID = '{14969280-09D5-4E20-A1BB-949AA7357A07}';
  IID_IRobotUnitData: TGUID = '{DFDD1BFD-7251-4D3A-90E1-78B54C067B83}';
  IID_IRobotEurocodeFactors: TGUID = '{B7B03310-3D0C-4D3E-8C3E-755FF0129018}';
  IID_IRobotEurocodeSteelDesignFactors: TGUID = '{1A277BA2-9D81-4F52-8556-70FFBAB120A5}';
  IID_IRobotEurocodeSteelConnectionFactors: TGUID = '{E10264C8-79A1-452A-A586-587A081D4B80}';
  IID_IRobotComponentFactory: TGUID = '{6DE0ABA2-D580-11D4-B89D-0050DA76755E}';
  IID_IRobotCalcEngine: TGUID = '{77106410-18E2-11D3-98CF-0080C86BE4DF}';
  IID_IRobotStructureAnalysisParams: TGUID = '{A82C60B5-39B2-4A58-A218-338B5F969A6A}';
  IID_IRobotSparseMSolverParams: TGUID = '{C8B6FBFC-0C9C-4CD8-8681-9CDECBE6651F}';
  IID_IRobotIterativeSolverParams: TGUID = '{DF2BA0FA-180B-42AF-BD49-E96E7944CBBB}';
  IID_IRobotSeismicResultsSaveParams: TGUID = '{7D0F9ABE-3295-4E0E-B8C4-0F7334E12C8A}';
  IID_IRobotModelGenerationParams: TGUID = '{74F902A2-0FB5-48B9-9515-34869995AD1A}';
  IID_IRobotBucklingDeformationParams: TGUID = '{ABE79E4F-3442-44DF-AA7F-2948A6CCECC7}';
  IID_IRobotDAMCalcModule: TGUID = '{C25E930A-3C2C-4BB3-9B56-0FCCC21BF171}';
  IID_IRobotDAMParams: TGUID = '{CB6AE25D-6107-4A0A-9401-14DAA16CC356}';
  IID_IRobotDAMNotionalLoads: TGUID = '{C53A76B8-5FB7-44E1-A390-E89D1772B642}';
  IID_IRobotDAMReducedStiffness: TGUID = '{DB1421C6-B7A2-4D8C-94CA-E09A66F44F23}';
  IID_IRobotAuthenticateService: TGUID = '{0798A808-9209-483A-99C8-D59A36A861A1}';
  IID_IRConcrCalcEngine: TGUID = '{E04BA49B-B01E-48EE-8D50-1C115042F4C8}';
  IID_IRConcrSlabRequiredReinfEngine: TGUID = '{55FD1418-7A72-4BDA-B630-D568A0643BCB}';
  IID_IRConcrSlabRequiredReinfCalcParams: TGUID = '{8179B736-D35A-4AB5-81A6-6F8B8192987C}';
  IID_IRConcrMemberRequiredReinfEngine: TGUID = '{7ED2767F-EEC8-4880-91A5-05E8CBE19E1C}';
  IID_IRConcrMemberRequiredReinfCalcParams: TGUID = '{D9372778-C862-40CC-94EA-8FE62828143A}';
  CLASS_RobotAppAuthenticateService: TGUID = '{938F2032-20CE-4717-864B-28497715B8F3}';
  IID_IRDimMemberType: TGUID = '{F7581C4D-8F02-4AB1-B62A-F0B09E91AA9F}';
  CLASS_RDimMemberType: TGUID = '{6FA575F5-63BE-49B5-B787-68B7AB8B49ED}';
  IID_IRobotBucklingAnalysisParams: TGUID = '{5E40A2A1-4360-40BF-9962-738F2C6FD9C1}';
  CLASS_RobotBucklingAnalysisParams: TGUID = '{D5384F52-6A30-485A-8D84-1EFD8F16045F}';
  IID_IRobotHarmonicAnalysisParams: TGUID = '{EF5188A1-A8AE-47C1-A5A9-4973B051B43A}';
  CLASS_RobotHarmonicAnalysisParams: TGUID = '{26EEB105-E868-4F9C-A642-19E5CD77BC45}';
  CLASS_RobotLimits: TGUID = '{7EB42C4E-687B-4366-A004-FAA1ABBAE7B9}';
  IID_IRobotTimeHistoryAnalysisParams: TGUID = '{980A53F4-F833-4738-8DC3-10AF1EF8D17F}';
  CLASS_RobotTimeHistoryAnalysisParams: TGUID = '{68CA27C5-E23F-4659-8DA5-6FFBB7B1E2FC}';
  IID_IRobotTimeHistoryNewmarkParams: TGUID = '{BB01DB63-14CF-40E5-95AD-702C449CE77B}';
  CLASS_RobotTimeHistoryNewmarkParams: TGUID = '{EFFB8C85-7B1A-41F0-B706-A6D5942E4B39}';
  IID_IRobotTimeHistoryModalDecompositionParams: TGUID = '{8D329C39-0FF0-445C-8407-7ED37079EA92}';
  CLASS_RobotTimeHistoryModalDecompositionParams: TGUID = '{B9CAE663-65AF-4CDD-96BD-08448325D072}';
  CLASS_RobotTimeHistoryPointsCollection: TGUID = '{728BFE66-07DC-4D04-9303-74467BCBADA9}';
  CLASS_RobotTimeHistoryFunctionList: TGUID = '{BD1A6078-DF34-4FB7-B7BE-F446D5FB3C5D}';
  IID_IRobotTimeHistoryNonlinearParams: TGUID = '{990B3636-FEED-421B-BBBB-B5709FF3C7CA}';
  CLASS_RobotTimeHistoryNonlinearParams: TGUID = '{27999B31-076C-4EEC-8DC1-D162CF302696}';
  IID_IRobotTimeHistoryPredictorCorectorParams: TGUID = '{07BBD58F-2350-4D36-AE6B-EAEF8338192D}';
  CLASS_RobotTimeHistoryPredictorCorectorParams: TGUID = '{79FD57E6-3613-4610-B50F-9A2747367CA5}';
  IID_IRobotBarElement: TGUID = '{959605AA-8769-4694-9A05-9780B4193675}';
  CLASS_RobotBarElement: TGUID = '{11B1E397-1BA1-4F03-98D4-F8C4798934EE}';
  CLASS_RobotBarElementCollection: TGUID = '{270A9DCE-4ABD-40D8-B1B0-F198B532259E}';
  IID_IRobotPushOverAnalysisParams: TGUID = '{B3E140B3-EFF1-4B64-8321-DEEF16E76DDC}';
  CLASS_RobotPushOverAnalysisParams: TGUID = '{06ABF595-4D4D-498E-AC1E-1DE21E74AAE7}';
  IID_IRobotSolidPropertiesData: TGUID = '{1A5AA1A1-E3BE-4EB5-88FC-A0F761B1E9D1}';
  CLASS_RobotSolidPropertiesData: TGUID = '{A1E53673-3536-449F-A53E-145409F47D05}';
  CLASS_RobotNonlinearLinkServer: TGUID = '{D17883CB-E989-4B35-A010-9AE255ACF003}';
  CLASS_RobotNonlinearLink: TGUID = '{4246A055-A702-4389-A1A7-85FB713FF94C}';
  IID_IRobotNonlinearLinkParamsLinear: TGUID = '{41E19983-04DE-47BC-AAA0-4D16BD9BC114}';
  CLASS_RobotNonlinearLinkParamsLinear: TGUID = '{F30A64DC-C929-49A0-B40B-7DECABA7F5AF}';
  IID_IRobotNonlinearLinkParamsBLinear: TGUID = '{6AA8F81F-1A41-4901-B9F5-0FC13B8EEE6D}';
  CLASS_RobotNonlinearLinkParamsBLinear: TGUID = '{2BEFCE84-F8F9-498D-81BC-D2B302CDD01F}';
  IID_IRobotNonlinearLinkParamsParabolic: TGUID = '{688A1589-3BAB-41BD-BF62-FABE1195202B}';
  CLASS_RobotNonlinearLinkParamsParabolic: TGUID = '{9DED796F-D4AE-42B2-8379-E16A14B29D9C}';
  IID_IRobotNonlinearLinkParamsPlastic: TGUID = '{2B237436-5783-4AC9-B2E6-B2B251149363}';
  CLASS_RobotNonlinearLinkParamsPlastic: TGUID = '{A8817C20-22F3-465A-A696-2F35710DFDCA}';
  IID_IRobotNonlinearLinkParamsPlasticHardening: TGUID = '{EEA4A9E9-54E9-45DF-A9A8-D900F84F771A}';
  CLASS_RobotNonlinearLinkParamsPlasticHardening: TGUID = '{6DACC46E-8CC1-4498-92C4-7FC26E572507}';
  IID_IRobotNonlinearLinkParamsGapHook: TGUID = '{74340AFD-0771-4FF3-82CF-7805185CCD90}';
  CLASS_RobotNonlinearLinkParamsGapHook: TGUID = '{5F522611-2087-43AB-9A5D-9589573390B3}';
  IID_IRobotNonlinearLinkParamsCustom: TGUID = '{70561D4E-EA31-4D97-8E9D-A779B44DD555}';
  CLASS_RobotNonlinearLinkParamsCustom: TGUID = '{92B3952B-BB0E-40BD-9B02-0CA975A0BF7D}';
  IID_IRobotNonlinearLinkParamsCustomSegment: TGUID = '{231BCB78-EDAA-41AC-90C7-E986BF5BC0CC}';
  CLASS_RobotNonlinearLinkParamsCustomSegment: TGUID = '{2FECD260-1145-4716-B76B-C683CAD2E925}';
  CLASS_RobotNonlinearLinkMngr: TGUID = '{620A0CAC-ABBF-4257-A91F-FA8969F684EB}';
  IID_IRobotBarGeoImperfectionsData: TGUID = '{A8AEAD95-F123-4540-8D52-A537179708B5}';
  CLASS_RobotBarGeoImperfectionsData: TGUID = '{5BF2E844-1929-4535-A009-45B6CEE53F0F}';
  CLASS_RobotTimeHistoryResults: TGUID = '{D27EE0B1-0168-4D2F-A705-5BE25029D2EB}';
  CLASS_RobotTimeHistoryResultServer: TGUID = '{AC089BBD-F6CC-4EEC-957C-60CE2B90ADF8}';
  CLASS_RobotExtremeValue: TGUID = '{81AECE7F-913F-490B-B2D3-B941A08AF609}';
  CLASS_RobotExtremeParams: TGUID = '{1ECDED54-9D11-44C0-A4A6-2E073E577F5B}';
  CLASS_RobotExtremeResultServer: TGUID = '{777D1DF7-C379-40A7-BA1D-B6D63F69C1B4}';
  CLASS_RobotStructureEditTools: TGUID = '{74D3FC0F-76DF-4F8B-B08F-A68F7522665B}';
  CLASS_RobotStructureCache: TGUID = '{B1F8E440-FE36-4428-A68F-B1D6B72D2ABA}';
  CLASS_RobotStructureApplyInfo: TGUID = '{D5AB3F65-1C2A-46F6-BD54-00D47D106930}';
  CLASS_RobotBarSectionComplexData: TGUID = '{A90B6017-867A-4708-B8BA-67A6B289D6CA}';
  IID_IRobotSeismicAnalysis_RPS_2000_Params: TGUID = '{4297D489-32C8-404C-A895-CA23562EC45A}';
  CLASS_RobotSeismicAnalysis_RPS_2000_Params: TGUID = '{E0921B69-B436-4EF1-9A63-5B6D2D56D6C9}';
  IID_IRobotSeismicAnalysis_RPA_2003_Params: TGUID = '{15EED91E-F9A1-4850-9FC1-EB27884CBA49}';
  CLASS_RobotSeismicAnalysis_RPA_2003_Params: TGUID = '{31DE8A77-D4D7-4AC0-9682-9C99AAEBD17D}';
  CLASS_RobotStorey: TGUID = '{615CE67F-B5E2-4869-819F-329B36A32A27}';
  CLASS_RobotStoreyMngr: TGUID = '{94321B70-7FBB-4610-98FF-DAB59284E075}';
  CLASS_RobotMassEccentricities: TGUID = '{1E73E0B1-F83B-41BE-A6A4-17EA28B847A2}';
  IID_IRobotSeismicAnalysis_ITALY_ORDINANZA_Params: TGUID = '{6E774EA6-48DC-4307-A2E3-32D92193D0C7}';
  CLASS_RobotSeismicAnalysis_ITALY_ORDINANZA_Params: TGUID = '{E314FA06-B1DC-4583-ABD5-DF93093248D6}';
  CLASS_RobotGroupObjectServer: TGUID = '{668558FF-50A0-4513-BBB8-4BE3C1FAF32E}';
  CLASS_RobotStructureValues: TGUID = '{390A71BD-9C21-47FD-875F-EE641CE28981}';
  CLASS_RobotMaterialQuantitySurvey: TGUID = '{91E5C164-D1EC-4C6F-A056-29BB0B5B15DC}';
  CLASS_RobotBarSectionQuantitySurvey: TGUID = '{879C3854-6701-4F58-9878-6464CB103DB9}';
  CLASS_RobotThicknessQuantitySurvey: TGUID = '{7CDD8A98-16C5-4B35-B582-034BAF6E89DE}';
  CLASS_RobotStructureQuantitySurvey: TGUID = '{88E6DA6B-45CE-409F-A90E-5C0D60922FBF}';
  CLASS_RobotStructureMergeData: TGUID = '{0AC5C800-70EC-4022-A982-26449F93361F}';
  CLASS_RobotResultQueryParams: TGUID = '{D48EC289-7828-45C2-9E59-F79E253F1628}';
  IID_IRobotSupportEquivalentWallElasticity: TGUID = '{16CB9399-7312-4711-81EB-E02C8F4E3579}';
  CLASS_RobotSupportEquivalentWallElasticity: TGUID = '{FB3D9F03-CA9B-47CC-8382-504C2CC3EC2B}';
  IID_IRobotSupportEquivalentColumnElasticity: TGUID = '{9C307EE1-CE7A-4E2D-BACF-AA4722339BFB}';
  CLASS_RobotSupportEquivalentColumnElasticity: TGUID = '{53D0D20F-65E7-40DC-9402-8F94E64F6728}';
  CLASS_RobotAdvancedSupportData: TGUID = '{468F845A-20D0-4FE8-A588-2849AE60984A}';
  IID_IRobotLoadRecordBarTrapezoidal: TGUID = '{9E1246A5-7EE1-490C-87CF-D2A8B2D4433C}';
  CLASS_RobotLoadRecordBarTrapezoidal: TGUID = '{5F20D235-8091-42E8-9AC3-BA3B6409AB62}';
  CLASS_RobotBarSectionSpecialData: TGUID = '{9802819A-C6E3-41AF-89C4-62970E6BE580}';
  IID_IRobotSeismicAnalysis_PS_92_2008_Params: TGUID = '{EF45589B-8FBA-43B0-9BF9-EC7F5872C4C1}';
  CLASS_RobotSeismicAnalysis_PS_92_2008_Params: TGUID = '{E4B94D53-4558-473B-989E-70E4759C0FF9}';
  IID_IRobotSeismicAnalysis_PS_92_2008_SiteEnvelope: TGUID = '{93540F72-A55F-4014-ADEE-F33C07D12B66}';
  CLASS_RobotSeismicAnalysis_PS_92_2008_SiteEnvelope: TGUID = '{C1C68E32-5298-47CC-9EDD-FF271DCA78B1}';
  IID_IRobotLoadRecordDead: TGUID = '{CC38346D-0306-4022-AB63-715BBB55A473}';
  CLASS_RobotLoadRecordDead: TGUID = '{8ADDF610-7175-456C-9BAD-311E76544195}';
  IID_IRobotStoreySelection: TGUID = '{D516BAD3-C3FF-4695-83CB-68D8FBDB497E}';
  CLASS_RobotStoreySelection: TGUID = '{8AEC6247-0A56-4C44-84B9-FCCEF022AC34}';
  IID_IRobotDynamicAnalysisDamping: TGUID = '{E1F3F70C-5F5E-490D-8DEE-AFC26E6EE4E9}';
  CLASS_RobotDynamicAnalysisDamping: TGUID = '{EF73E2C5-24EE-409E-B847-1CF785098C58}';
  IID_IRobotFRFAnalysisParams: TGUID = '{E3DD2E26-0B07-44D2-8307-F6DA261425AF}';
  CLASS_RobotFRFAnalysisParams: TGUID = '{4F4D7387-1683-4A45-8F70-80B9E33AA345}';
  IID_IRobotFootfallAnalysisNodeSelection: TGUID = '{E57B7A35-0809-4B13-96BA-40A1DA4EB691}';
  CLASS_RobotFootfallAnalysisNodeSelection: TGUID = '{1A4ECDFE-BBE0-475C-9559-7D7B212BB3DB}';
  IID_IRobotFootfallAnalysisModalParams: TGUID = '{619B77F2-862E-41BA-88E8-D2C5A9C0EA38}';
  CLASS_RobotFootfallAnalysisModalParams: TGUID = '{14E92496-2850-488E-9346-CFB50716AE66}';
  IID_IRobotFootfallAnalysisParams: TGUID = '{A9436EF4-BAEC-4815-9EFB-4E1ECD80BF38}';
  CLASS_RobotFootfallAnalysisParams: TGUID = '{F90FDCB2-F46E-47AC-9FE9-DDF73C5CB531}';
  CLASS_RobotFRFResults: TGUID = '{714A38F0-068D-486C-A724-EF9F7629B350}';
  CLASS_RobotFRFResultServer: TGUID = '{07649178-5F40-4C48-9913-58F154CF2094}';
  CLASS_RobotFootfallResults: TGUID = '{305B0577-EFF9-41E5-ADFC-F26160203ED8}';
  CLASS_RobotStoreyValues: TGUID = '{C198680D-EDED-4905-BC7A-C23137506AD2}';
  CLASS_RobotStoreyReducedForces: TGUID = '{A27924DA-B3E0-4826-AC3B-549FD962054A}';
  CLASS_RobotStoreyDisplacements: TGUID = '{3D0CF93E-1199-48A0-A81C-D6D8EA88D751}';
  CLASS_RobotStoreyResultServer: TGUID = '{8E084B1B-21E0-40F6-8794-F70AB79397AC}';
  IID_IRobotTimeHistoryHHTParams: TGUID = '{80E83A01-5541-4252-8331-969CC0BC4250}';
  CLASS_RobotTimeHistoryHHTParams: TGUID = '{AE2D9F04-3287-4C9F-91B0-78698BC9E8CD}';
  IID_IRobotTimeHistoryNewmarkAccelParams: TGUID = '{A77B68D9-4247-48A0-BBC8-07007BAC30AB}';
  CLASS_RobotTimeHistoryNewmarkAccelParams: TGUID = '{C6B5DEE4-FEEF-484D-97EB-402DB44ACA02}';
  CLASS_RobotSELFSeismicEngine: TGUID = '{359AAE6E-3A8E-4977-8377-C9AB8C8E86D7}';
  IID__IRobotWindLoadsSimulationParamsEx: TGUID = '{6EEB33AF-D9D8-475C-85FD-FD04F62EF595}';
  CLASS_RobotWindLoadsSimulationParams: TGUID = '{BC0263D7-2E2A-4EEB-85E5-7DE0CE438860}';
  CLASS_RobotWindLoadsSimulationEngine: TGUID = '{31DCA57E-C535-4FB7-978E-67D5115851B1}';
  CLASS_RobotSELFSeismicGenerationParams: TGUID = '{3E5E2002-7048-4509-804E-B77D4CAC82CD}';
  CLASS_RobotSELFSeismicStructureParams: TGUID = '{9409033A-B179-42A4-AB7D-332AF290ED48}';
  CLASS_RobotSELFSeismicAnalysisParams: TGUID = '{6B9E97ED-0A55-4419-B71F-5771D61D66F0}';
  IID_IRobotSELFSeismic_ASCE_7_10_Params: TGUID = '{888E80DF-793F-4DA1-9A0E-8B3C2A57DE41}';
  CLASS_RobotSELFSeismic_ASCE_7_10_Params: TGUID = '{8546032E-63CE-4222-AC76-21F15F6789D4}';
  IID_IRobotSELFSeismic_EC_8_Params: TGUID = '{197AD2E7-89FA-4F92-AF89-F138608AE446}';
  CLASS_RobotSELFSeismic_EC_8_Params: TGUID = '{A4E2FE06-A861-4007-B211-893C24E68C63}';
  IID_IRobotSELFSeismic_AS_1170_4_Params: TGUID = '{C0218450-9B38-4463-A661-EBDD00A504EB}';
  CLASS_RobotSELFSeismic_AS_1170_4_Params: TGUID = '{C0A868BB-463E-4572-BCAD-D1AA804CDB10}';
  CLASS_RobotSeismicResidualMode: TGUID = '{065C7EC7-D6CD-4685-B5C6-7B6D09A01430}';
  IID_IRobotSeismicAnalysis_EC8_General_Params: TGUID = '{AEBB919D-1A75-4FA8-BDC3-A71E88DFF63A}';
  CLASS_RobotSeismicAnalysis_EC8_General_Params: TGUID = '{1A30FCFB-EEE0-423C-A9A1-F278C73768E5}';
  IID_IRobotSeismicAnalysis_EC8_Params: TGUID = '{A824F3F8-74A9-4F83-81B1-9D8C1E7F2D6A}';
  CLASS_RobotSeismicAnalysis_EC8_Params: TGUID = '{1751F089-5BA5-45E5-B598-A6A7B71DACD7}';
  CLASS_RobotDAMNotionalLoads: TGUID = '{219B1DBE-74AC-4BD3-8171-03A2E585AFDB}';
  CLASS_RobotDAMReducedStiffness: TGUID = '{2A71F5D1-6273-471D-8A05-CED5EBF4EB9B}';
  CLASS_RobotDAMParams: TGUID = '{212C2804-0078-4C41-9F97-DB2B8D6DB29F}';
  CLASS_RobotDAMCalcModule: TGUID = '{EDF656BE-1B8C-480A-8F96-E3505BC3E345}';
  CLASS_RobotCalculationResume: TGUID = '{8C45F10D-2DBE-48BD-BEA2-C0CBA56659B8}';
  DIID__IRobotCalcEngineEvents: TGUID = '{8ED965EE-DCEE-4498-99BC-911962BA4805}';
  CLASS_RobotCalcEngine: TGUID = '{77106411-18E2-11D3-98CF-0080C86BE4DF}';
  CLASS_RobotStructureAnalysisParams: TGUID = '{C367343C-5ABE-4CBF-99CC-376D2F67E236}';
  CLASS_RobotSparseMSolverParams: TGUID = '{949F28DE-BBD2-4D19-B04F-A098242330B4}';
  CLASS_RobotIterativeSolverParams: TGUID = '{4FAC22DB-0215-4F7E-866B-E7E8B2750571}';
  CLASS_RobotSeismicResultsSaveParams: TGUID = '{31E1D006-F0A1-43AA-B6AD-BDD38B88E54C}';
  CLASS_RobotModelGenerationParams: TGUID = '{E18F6424-E6D1-4A6F-A9C3-8A3A52B26720}';
  CLASS_RobotBucklingDeformationParams: TGUID = '{4BB6AA4C-5D54-4947-9CD8-457C1A02D3EA}';
  CLASS_RobotSelection: TGUID = '{3097A520-D0C7-11D2-986D-0080C86BE4DF}';
  CLASS_RobotMultiSelection: TGUID = '{38B5A700-0C34-11D3-98BF-0080C86BE4DF}';
  CLASS_RobotSelectionFactory: TGUID = '{D9C5A8B0-95E0-11D3-9954-0080C86BE4DF}';
  CLASS_RobotGroup: TGUID = '{CDF82A8F-4C45-431C-A4E9-E4943EFFC950}';
  CLASS_RobotGroupServer: TGUID = '{40D10EAC-5BA6-46E0-A80E-E218009B9315}';
  CLASS_RobotModeSelection: TGUID = '{E8C8AD73-C395-45CE-A982-824204440624}';
  CLASS_RobotObjEdgeSelection: TGUID = '{C6AF1963-9C88-4DEF-BD6A-D51DC482A3F5}';
  DIID__IRobotPreferencesEvents: TGUID = '{1E29F219-076A-4979-A9C8-F24CACFF814A}';
  IID_IRobotPreferences: TGUID = '{56AFE680-C294-11D3-B7B3-0050DA76755E}';
  CLASS_RobotPreferences: TGUID = '{56AFE681-C294-11D3-B7B3-0050DA76755E}';
  CLASS_RobotSectionDatabase: TGUID = '{56AFE683-C294-11D3-B7B3-0050DA76755E}';
  CLASS_RobotMaterialDatabase: TGUID = '{56AFE685-C294-11D3-B7B3-0050DA76755E}';
  CLASS_RobotSectionDatabaseList: TGUID = '{56AFE687-C294-11D3-B7B3-0050DA76755E}';
  DIID__IRobotProjectPreferencesEvents: TGUID = '{5DA67861-5AC1-4713-BFE8-0615CC957FF6}';
  CLASS_RobotProjectPreferences: TGUID = '{56AFE689-C294-11D3-B7B3-0050DA76755E}';
  CLASS_RobotKernelPreferences: TGUID = '{6C9DFAA0-DD76-11D4-B8A2-0050DA76755E}';
  CLASS_RobotVehicleDatabaseList: TGUID = '{9AA4B957-9E75-4CCA-9044-F3B0B266F197}';
  CLASS_RobotVehicleDatabase: TGUID = '{4819CDC7-2475-4152-B4CD-1759849A8B6B}';
  CLASS_RobotEurocodeFactors: TGUID = '{FCF92CF0-34BC-4AEA-BDE3-0937A187B038}';
  CLASS_RobotEurocodeSteelDesignFactors: TGUID = '{C0C7C606-8E97-4D58-ACB8-C9DDC9D9D3AE}';
  CLASS_RobotEurocodeSteelConnectionFactors: TGUID = '{16B9C9C0-422B-4128-BD48-2D67F69B0EF2}';
  CLASS_RobotValuesArray: TGUID = '{419B03C2-B850-11D3-B7AB-0050DA76755E}';
  CLASS_RobotNamesArray: TGUID = '{419B03C3-B850-11D3-B7AB-0050DA76755E}';
  CLASS_RobotNumbersArray: TGUID = '{419B03C5-B850-11D3-B7AB-0050DA76755E}';
  IID_IRobotObjectsArray: TGUID = '{C8CC8D80-BC4B-11D3-B7AD-0050DA76755E}';
  CLASS_RobotObjectsArray: TGUID = '{C8CC8D81-BC4B-11D3-B7AD-0050DA76755E}';
  CLASS_RobotNumbersCollection: TGUID = '{847D0F01-CF44-11D3-B7C0-0050DA76755E}';
  IID_IRobotWindow: TGUID = '{0478BD22-063F-11D4-B7EE-0050DA76755E}';
  CLASS_RobotWindow: TGUID = '{0478BD23-063F-11D4-B7EE-0050DA76755E}';
  CLASS_RobotPointsArray: TGUID = '{DB84B559-C59A-45A9-89D0-B2F583DD4B16}';
  IID_IRobotSerializable: TGUID = '{4EDD84B8-6C15-4A27-995D-80220749C8CC}';
  CLASS_RobotLinearReleaseDefList: TGUID = '{6E70DEF0-334F-450C-A982-6F7D921C9267}';
  IID_IRobotNumbersDictionary: TGUID = '{49EFBD7B-C6F4-41EA-9C67-3B03DDA66F7A}';
  CLASS_RobotNumbersDictionary: TGUID = '{270EB37D-46ED-4421-937B-5F95322AFB7F}';
  CLASS_RobotParamCollection: TGUID = '{D4EE3199-05C9-4A8F-9D82-89DB29A9A946}';
  CLASS_RobotNumbersArrayInProc: TGUID = '{15C585B8-5E54-4795-B3E2-7EAD20E71645}';
  CLASS_RobotResultRow: TGUID = '{5491D758-6AC9-48CF-9116-D0A51F4E3212}';
  CLASS_RobotResultRowSet: TGUID = '{F335E413-5241-418C-9421-A4D1B545F923}';
  CLASS_RobotFiniteElementData: TGUID = '{29945139-6D08-4C66-A185-6467678DCEB5}';
  CLASS_RobotFiniteElementDataSet: TGUID = '{66593991-1FF8-4E63-B066-C552D23DC1B1}';
  CLASS_RobotBarElementData: TGUID = '{B9F238DA-2BA0-4D39-ABC8-4FE7809FE95F}';
  CLASS_RobotBarElementDataSet: TGUID = '{5055DA55-DC82-45DD-BD29-6F9F4A1AA3F8}';
  CLASS_RobotGeoPoint2D: TGUID = '{5A3594B1-B23D-11D3-9975-0080C86BE4DF}';
  CLASS_RobotGeoPoint3D: TGUID = '{5A3594B3-B23D-11D3-9975-0080C86BE4DF}';
  CLASS_RobotGeoCurveDiv: TGUID = '{3E306739-C804-11D3-B7B9-0050DA76755E}';
  IID_IRobotGeoSegment: TGUID = '{3E306731-C804-11D3-B7B9-0050DA76755E}';
  CLASS_RobotGeoSegment: TGUID = '{3E30673A-C804-11D3-B7B9-0050DA76755E}';
  IID_IRobotGeoSegmentLine: TGUID = '{3E306732-C804-11D3-B7B9-0050DA76755E}';
  CLASS_RobotGeoSegmentLine: TGUID = '{3E30673B-C804-11D3-B7B9-0050DA76755E}';
  IID_IRobotGeoSegmentArc: TGUID = '{3E306733-C804-11D3-B7B9-0050DA76755E}';
  CLASS_RobotGeoSegmentArc: TGUID = '{3E30673C-C804-11D3-B7B9-0050DA76755E}';
  CLASS_RobotGeoObject: TGUID = '{3E30673D-C804-11D3-B7B9-0050DA76755E}';
  IID_IRobotGeoPolyline: TGUID = '{3E306735-C804-11D3-B7B9-0050DA76755E}';
  CLASS_RobotGeoPolyline: TGUID = '{3E30673E-C804-11D3-B7B9-0050DA76755E}';
  IID_IRobotGeoContour: TGUID = '{3E306736-C804-11D3-B7B9-0050DA76755E}';
  CLASS_RobotGeoContour: TGUID = '{3E30673F-C804-11D3-B7B9-0050DA76755E}';
  IID_IRobotGeoArc: TGUID = '{3E306737-C804-11D3-B7B9-0050DA76755E}';
  CLASS_RobotGeoArc: TGUID = '{3E306740-C804-11D3-B7B9-0050DA76755E}';
  IID_IRobotGeoCircle: TGUID = '{3E306738-C804-11D3-B7B9-0050DA76755E}';
  CLASS_RobotGeoCircle: TGUID = '{3E306741-C804-11D3-B7B9-0050DA76755E}';
  CLASS_RobotGeoSegmentCollection: TGUID = '{3E306742-C804-11D3-B7B9-0050DA76755E}';
  CLASS_RobotGeoPoint3DCollection: TGUID = '{8BCE3173-C81D-11D3-B7B9-0050DA76755E}';
  CLASS_RobotGeoLayer: TGUID = '{925EEC63-78F8-11D4-B84F-0050DA76755E}';
  IID_IRobotObjModifExtrusion: TGUID = '{3E306749-C804-11D3-B7B9-0050DA76755E}';
  CLASS_RobotObjModifExtrusion: TGUID = '{8BCE3165-C81D-11D3-B7B9-0050DA76755E}';
  IID_IRobotObjModifLathe: TGUID = '{3E30674A-C804-11D3-B7B9-0050DA76755E}';
  CLASS_RobotObjModifLathe: TGUID = '{8BCE3166-C81D-11D3-B7B9-0050DA76755E}';
  IID_IRobotObjModifPyramid: TGUID = '{3E30674B-C804-11D3-B7B9-0050DA76755E}';
  CLASS_RobotObjModifPyramid: TGUID = '{8BCE3167-C81D-11D3-B7B9-0050DA76755E}';
  IID_IRobotObjOperTranslation: TGUID = '{3E30674C-C804-11D3-B7B9-0050DA76755E}';
  CLASS_RobotObjOperTranslation: TGUID = '{8BCE3168-C81D-11D3-B7B9-0050DA76755E}';
  IID_IRobotObjOperScaling: TGUID = '{3E30674D-C804-11D3-B7B9-0050DA76755E}';
  CLASS_RobotObjOperScaling: TGUID = '{8BCE3169-C81D-11D3-B7B9-0050DA76755E}';
  IID_IRobotObjOperRotation: TGUID = '{3E30674E-C804-11D3-B7B9-0050DA76755E}';
  CLASS_RobotObjOperRotation: TGUID = '{8BCE316A-C81D-11D3-B7B9-0050DA76755E}';
  IID_IRobotObjOperMeshing: TGUID = '{3E30674F-C804-11D3-B7B9-0050DA76755E}';
  CLASS_RobotObjOperMeshing: TGUID = '{8BCE316B-C81D-11D3-B7B9-0050DA76755E}';
  IID_IRobotObjEdge: TGUID = '{3E306750-C804-11D3-B7B9-0050DA76755E}';
  CLASS_RobotObjEdge: TGUID = '{8BCE316C-C81D-11D3-B7B9-0050DA76755E}';
  CLASS_RobotObjAttributes: TGUID = '{8BCE316D-C81D-11D3-B7B9-0050DA76755E}';
  IID_IRobotObjPart2: TGUID = '{6E904722-C6AB-11D4-B890-0050DA76755E}';
  CLASS_RobotObjPart: TGUID = '{FDA31DC3-8F88-11D4-B864-0050DA76755E}';
  CLASS_RobotObjPartMain: TGUID = '{8BCE316E-C81D-11D3-B7B9-0050DA76755E}';
  CLASS_RobotObjPartReference: TGUID = '{FDA31DC7-8F88-11D4-B864-0050DA76755E}';
  CLASS_RobotObjObject: TGUID = '{8BCE316F-C81D-11D3-B7B9-0050DA76755E}';
  CLASS_RobotObjOperationCollection: TGUID = '{8BCE3170-C81D-11D3-B7B9-0050DA76755E}';
  CLASS_RobotObjModificationCollection: TGUID = '{8BCE3171-C81D-11D3-B7B9-0050DA76755E}';
  CLASS_RobotObjEdgeCollection: TGUID = '{8BCE3172-C81D-11D3-B7B9-0050DA76755E}';
  CLASS_RobotObjObjectServer: TGUID = '{EE241051-CA62-11D3-B7BC-0050DA76755E}';
  CLASS_RobotObjLabelCol: TGUID = '{A9BC12F0-3C70-11D4-B81E-0050DA76755E}';
  CLASS_RobotLinearReleaseServer: TGUID = '{4F7AA0C3-AA40-11D4-B879-0050DA76755E}';
  CLASS_RobotLinearReleaseDef: TGUID = '{00552E43-BA0A-11D4-B883-0050DA76755E}';
  CLASS_RobotObjObjectCollection: TGUID = '{11A35AC0-C07B-11D4-B889-0050DA76755E}';
  CLASS_RobotSpectralAnalysisPointsCollection: TGUID = '{F3041229-B93C-11D4-B882-0050DA76755E}';
  CLASS_RobotObjMesh: TGUID = '{AE9A29E2-51AD-4FEA-B664-A127138E2268}';
  IID_IRobotFiniteElement: TGUID = '{78AFC7B2-C43A-11D4-B88D-0050DA76755E}';
  CLASS_RobotFiniteElement: TGUID = '{78AFC7B3-C43A-11D4-B88D-0050DA76755E}';
  IID_IRobotFiniteElementNodes: TGUID = '{78AFC7B4-C43A-11D4-B88D-0050DA76755E}';
  CLASS_RobotFiniteElementNodes: TGUID = '{78AFC7B5-C43A-11D4-B88D-0050DA76755E}';
  CLASS_RobotFiniteElementServer: TGUID = '{78AFC7B7-C43A-11D4-B88D-0050DA76755E}';
  CLASS_RobotFiniteElementCollection: TGUID = '{027494B0-C511-11D4-B88E-0050DA76755E}';
  CLASS_RobotEmitter: TGUID = '{F06BD3F3-4CD7-11D4-B835-0050DA76755E}';
  CLASS_RobotComponentFactory: TGUID = '{6DE0ABA3-D580-11D4-B89D-0050DA76755E}';
  CLASS_RobotFeResultParams: TGUID = '{5477A033-191C-11D5-B8DE-0050DA76755E}';
  CLASS_RobotFeResultDetailed: TGUID = '{B65378E5-192C-11D5-B8DE-0050DA76755E}';
  CLASS_RobotFeResultServer: TGUID = '{B65378E3-192C-11D5-B8DE-0050DA76755E}';
  CLASS_RobotFeResultPrincipal: TGUID = '{4AF2C000-22B8-11D5-B8EB-FFFFFF000000}';
  CLASS_RobotFeResultComplex: TGUID = '{7C038735-BC96-41B0-BFF2-66F13846D05E}';
  CLASS_RobotFeResultReinforcement: TGUID = '{2FEEB3F0-321C-4C32-AD00-9A54D89DEC81}';
  CLASS_RobotFeResultReduced: TGUID = '{B4995CDF-1BF6-4FD0-90BF-93B4E43AACAE}';
  CLASS_RobotPanelCutMngr: TGUID = '{6A875A73-FBFC-4F40-93ED-F88098884B9F}';
  CLASS_RobotPanelCut: TGUID = '{69066946-67C1-4045-97C8-3A8692F6CB29}';
  CLASS_RobotFeExtremeParams: TGUID = '{10BB4A1E-0498-49C5-A071-FD2CB789613B}';
  CLASS_RobotFeExtremeValue: TGUID = '{E09A9010-BB29-4604-A6BC-119FC1F60C56}';
  CLASS_RobotFeMultiResultType: TGUID = '{4A778A98-D6F2-4489-997B-FC0D2506D37E}';
  CLASS_RobotFeMultiExtremeValue: TGUID = '{3480B123-6393-4659-A36F-467DAE9B47A5}';
  CLASS_RobotMeshMethod: TGUID = '{D29C26B2-AF7E-4590-B0DC-8BC2A4C79F54}';
  CLASS_RobotMeshGeneration: TGUID = '{EA900EE7-4543-424D-A014-1D350C94089C}';
  CLASS_RobotMeshCoonsParams: TGUID = '{0ABF525A-D154-45D5-BFC6-A220CD8B2532}';
  CLASS_RobotMeshSurfaceFiniteElems: TGUID = '{E142BBEB-CDBC-4B95-8075-9849AE400F53}';
  CLASS_RobotMeshDelaunayParams: TGUID = '{3448DA33-973E-4D4D-85B3-C89355F147DC}';
  CLASS_RobotMeshVolumeParams: TGUID = '{39714A59-7DB4-45B9-8F1D-38FD554F4F84}';
  CLASS_RobotMeshSurfaceParams: TGUID = '{C64579E3-57AE-4154-AF6A-A8F249AB326A}';
  CLASS_RobotMeshParams: TGUID = '{FDE1C586-3E48-4985-8757-1B8968EFA9CF}';
  CLASS_RobotNonlinearHingeModelServer: TGUID = '{C17BE6A1-ADD3-4029-B272-9CFB5128FDA1}';
  CLASS_RobotNonlinearHingeModel: TGUID = '{E335C180-E48F-4B25-8E62-1DA1AF1C85AB}';
  CLASS_RobotNonlinearHingeModelAxisParams: TGUID = '{D347376A-629D-4CAD-BD2E-B615BF7D1316}';
  CLASS_RobotNonlinearHingeModelPoints: TGUID = '{3FA2E870-E5A3-48C4-B7D2-6BB5D180F9CA}';
  IID_IRobotNonlinearHingeData: TGUID = '{11C10FCE-4D30-41A4-A0E5-D52E1EFC49AB}';
  CLASS_RobotNonlinearHingeData: TGUID = '{3DB20384-1E60-4FFA-972D-0BC794AC7D93}';
  CLASS_RobotNonlinearHingeDef: TGUID = '{1CDEB56E-3F8F-4AC4-A113-ACFFB67FDBBE}';
  CLASS_RobotNonlinearHingeServer: TGUID = '{79A8A119-16F2-4D84-A3C9-C8AA841AB189}';
  CLASS_RobotMaterialElasticModel: TGUID = '{70B5A70C-AD4F-423A-A114-8C072E7F5860}';
  CLASS_RobotBarSectionElasticParams: TGUID = '{892064C6-309E-45B8-8B21-F345DD16297C}';
  IID_IRobotCladdingData: TGUID = '{C13B447F-8C26-4DEB-B718-7CEB46EB1622}';
  CLASS_RobotCladdingData: TGUID = '{2A24581C-8581-4F30-A0AB-4FEC203920DF}';
  IID_IRobotPanelCalcModelData: TGUID = '{FC4BB70C-0027-4C2C-8708-FC28AE1B07CC}';
  CLASS_RobotPanelCalcModelData: TGUID = '{D9039EED-A706-419C-AF4A-C83F0B5AB7BF}';
  CLASS_RobotUnitData: TGUID = '{3784F655-283B-426D-A19F-C21D9FBC6D67}';
  DIID__IRobotUnitMngrEvents: TGUID = '{3247CD86-0BE0-4F9D-998D-9D4CA523F6A3}';
  CLASS_RobotUnitMngr: TGUID = '{8220400A-2201-40CD-815A-FF59E7C3CCA6}';
  IID_IRobotUnitComplexData: TGUID = '{5C186E73-22D9-4D69-A16F-E1A9B7BE5BA5}';
  CLASS_RobotUnitComplexData: TGUID = '{60795E15-B274-481D-A01C-FEABF6585FD4}';
  CLASS_RobotUnitEditionServer: TGUID = '{8869D1A5-B7DB-4C89-958C-22609CE91288}';
  CLASS_RobotUnitEditionData: TGUID = '{5A38D18D-EC57-4EBD-9FCF-26E7815CEDF3}';
  IID_IRobotStructureGeoAnalyser: TGUID = '{D887A137-EF18-41D1-B6ED-7EC1B9A36D17}';
  CLASS_RobotStructureGeoAnalyser: TGUID = '{FC9447EC-86D8-46F9-92F4-AB9C6BBC8ED0}';
  CLASS_RobotParamDef: TGUID = '{4F52F758-5E2D-48E7-A4BF-5F2B78930705}';
  CLASS_RobotParamSchemaDef: TGUID = '{CB0DC76D-0C8E-4BFA-A588-14E9C486985B}';
  CLASS_RobotParamSchema: TGUID = '{A1BE7C73-5E6A-43C7-89AF-E182212097E3}';
  CLASS_RobotParamSchemaMngr: TGUID = '{0B14AEA7-DAC1-40A5-994F-A79CF4AD590B}';
  CLASS_RobotParamServer: TGUID = '{D3F5DE25-040C-4DBA-B83D-F6A384DFB093}';
  CLASS_RobotProjectComponentCollection: TGUID = '{93ED3021-A634-11D2-9840-0080C86BE4DF}';
  IID_IRobotProjectComponent: TGUID = '{59744DD1-9992-11D2-9835-0080C86BE4DF}';
  CLASS_RobotProjectComponent: TGUID = '{565A03C0-9A4E-11D2-9836-0080C86BE4DF}';
  IID_IRobotProjectComponentMngr: TGUID = '{59744DD3-9992-11D2-9835-0080C86BE4DF}';
  CLASS_RobotProjectComponentMngr: TGUID = '{188DA890-99B6-11D2-9835-0080C86BE4DF}';
  IID_IRobotFileInsertParams: TGUID = '{C53C96F0-ECE2-11D2-989F-0080C86BE4DF}';
  CLASS_RobotFileInsertParams: TGUID = '{C53C96F1-ECE2-11D2-989F-0080C86BE4DF}';
  DIID__IRobotProjectEvents: TGUID = '{C5B7D2E1-F823-4D1B-A755-1F704122B862}';
  IID_IRobotProject: TGUID = '{6D348833-EFBF-11D1-9783-0080C86BE4DF}';
  IID__IRobotSMX: TGUID = '{13C0ED3E-891E-4C02-A3E4-600A8596F6C2}';
  IID_IRobotViewMngr: TGUID = '{95582DE3-004C-11D2-9795-0080C86BE4DF}';
  IID_IRobotTable: TGUID = '{95582DE0-004C-11D2-9795-0080C86BE4DF}';
  IID_IRobotPrintable: TGUID = '{42278650-0A6C-11D2-979C-0080C86BE4DF}';
  IID_IRobotTableConfig: TGUID = '{6ABCDF50-1649-11D2-97A7-0080C86BE4DF}';
  IID_IRobotTableScreenCaptureParams: TGUID = '{7F832B4C-56ED-4191-B049-2C4CF93AB0DD}';
  IID_IRobotView: TGUID = '{7ABBD5F2-F70F-11D2-98A9-0080C86BE4DF}';
  IID_IRobotViewDisplayParams: TGUID = '{D00CCC32-7A57-11D4-B851-0050DA76755E}';
  IID_IRobotViewDiagramParams: TGUID = '{72DDE972-7A62-11D4-B851-0050DA76755E}';
  IID_IRobotViewBarMapParams: TGUID = '{ADB9B382-7A75-11D4-B851-0050DA76755E}';
  IID_IRobotViewFeMapParams: TGUID = '{8327AE72-7CB6-11D4-B852-0050DA76755E}';
  IID_IRobotRtfView: TGUID = '{D064BC90-C516-11D3-B7B6-0050DA76755E}';
  IID_IRobotView2: TGUID = '{78DBD58F-5EBD-41AE-9311-F7559AB5466D}';
  IID_IRobotViewPanelCutParams: TGUID = '{B0CFC897-7F43-45A4-ABD7-D659509BE144}';
  IID_IRobotTableFrame: TGUID = '{296B11E0-7366-4DC2-98A7-30222F789A1F}';
  IID_IRobotPrintEngine: TGUID = '{42278651-0A6C-11D2-979C-0080C86BE4DF}';
  IID_IRobotPageSetup: TGUID = '{0566D4A0-CCD5-11D3-B7BD-0050DA76755E}';
  IID_IRobotVariableMngr: TGUID = '{68CD9440-CCC7-11D3-B7BD-0050DA76755E}';
  IID_IRobotVariableMngrExtension: TGUID = '{0D829AF4-0057-4F1D-BC22-EB8DB8346D08}';
  IID_IRobotReportStdElementRtf: TGUID = '{41C82C12-ED1B-11D4-B8AF-0050DA76755E}';
  IID_IRobotPageSetupTableOfContents: TGUID = '{B0FC6791-04E1-4971-A221-0B9B0A81622B}';
  IID_IRobotScreenCaptureMngr: TGUID = '{3BE0D394-1144-11D4-B7F6-0050DA76755E}';
  IID_IRobotReportTemplateMngr: TGUID = '{3BE0D392-1144-11D4-B7F6-0050DA76755E}';
  IID_IRobotReportItemList: TGUID = '{A7474187-E3B0-4453-A439-9E3D5D41CEBD}';
  IID_IRobotReportItem: TGUID = '{9AA7A335-DA92-4409-B156-8BD5E432BCC3}';
  IID_IRJointConnectionServer: TGUID = '{31E739D0-B475-11D3-9979-0080C86BE4DF}';
  IID_IRJointConnectionInfo: TGUID = '{1C8C9F80-AE18-11D3-9972-0080C86BE4DF}';
  IID_IRJointConnection: TGUID = '{1C8C9F81-AE18-11D3-9972-0080C86BE4DF}';
  IID_IRJointLoad: TGUID = '{3E306743-C804-11D3-B7B9-0050DA76755E}';
  IID_IRDimServer: TGUID = '{C508E4BC-158D-11D5-9945-00008653042C}';
  IID_IRDimMembers: TGUID = '{54FA6626-B055-4E88-955D-1FFAB10635DA}';
  IID_IRDimMember: TGUID = '{23BF76AA-A5AB-433D-96AE-BB8BD911A489}';
  IID_IRDimStream: TGUID = '{75F51A01-A064-11D3-9A65-00105AC6705D}';
  IID_IRDimMembDefDataSrv: TGUID = '{A815E098-693B-4ABF-81A9-02F237B742C8}';
  IID_IRDimMembDefData: TGUID = '{F93387D1-1C5D-11D5-8814-0050DA7675E2}';
  IID_IRDimGroups: TGUID = '{5E86FA70-D32D-4B7E-98C8-D0FFC075F059}';
  IID_IRDimGroup: TGUID = '{E0BF722B-15D5-4BEF-8871-2BE5F8698227}';
  IID_IRDimGrpProfs: TGUID = '{314028D2-2CFC-11D5-882A-0050DA7675E2}';
  IID_IRDimCalcEngine: TGUID = '{C508E4B7-158D-11D5-9945-00008653042C}';
  IID_IRDimCalcParam: TGUID = '{C508E4B2-158D-11D5-9945-00008653042C}';
  IID_IRDimOptimParam: TGUID = '{918F5D35-3612-480D-B1F2-68D0B006AAA0}';
  IID_IRDimCalcConf: TGUID = '{2058FC71-4690-11D4-8720-0050DA7675E2}';
  IID_IRDimAllRes: TGUID = '{C508E4B9-158D-11D5-9945-00008653042C}';
  IID_IRDimConnection: TGUID = '{AAA46CB3-2DD0-11D5-882B-0050DA7675E2}';
  IID_IRDimMembSrv: TGUID = '{EC7B6C14-7F98-11D2-990B-00201888053E}';
  IID_IRDimMembDef: TGUID = '{EC7B6C10-7F98-11D2-990B-00201888053E}';
  IID_IRDimUnits: TGUID = '{F9431842-DD47-11D3-86B6-0050DA7675E2}';
  IID_IRDimInternalPoints: TGUID = '{B08E677C-53CE-4672-B4F3-4ACC43660AFE}';
  IID_IRDimIntPsEditService: TGUID = '{C9E39AFC-7320-4A99-89A0-ADDD941954D2}';
  IID_IRDimAdjoinParams: TGUID = '{5C4DD378-0723-4C54-8D64-6322DC32BA96}';
  IID_IRDimAdjoinAutomat: TGUID = '{D6F78622-7FAC-4890-B376-2A42638C78F5}';
  IID_IRDimAdjoinBranch: TGUID = '{100C0E55-4D6C-46ED-9865-29D0F8828E9D}';
  IID_IRDimDeflDisp: TGUID = '{01C241D4-03BC-11D4-86D6-0050DA7675E2}';
  IID_IRobotStructuralAxisGridMngr: TGUID = '{F2893C2A-7E5E-4DAF-A9AA-766A907D99DA}';
  IID_IRobotStructuralAxisGrid: TGUID = '{28862C54-A723-45E0-AAB7-C97876FBD619}';
  IID_IRobotBackgroundServer: TGUID = '{DAF29B19-E4C9-4FC8-B3D4-1B3207649BA0}';
  IID_IRobotBackground: TGUID = '{B989BE6E-B352-4A46-BC96-A25FF3DFD8BE}';
  IID_IRobotBackgroundInsertParams: TGUID = '{F68355EA-A509-46CB-A437-F29C3F660560}';
  IID_IRobotBackgroundLayers: TGUID = '{ED92E547-4A46-4C87-9C31-97740FF1DD61}';
  IID_IRobotBackgroundVisibilityRange: TGUID = '{DCFB7D01-6298-40B0-B4C8-8DA78BC3FBFE}';
  CLASS_RobotProject: TGUID = '{6D348834-EFBF-11D1-9783-0080C86BE4DF}';
  IID_IRobotSTRParams: TGUID = '{C53C96F2-ECE2-11D2-989F-0080C86BE4DF}';
  CLASS_RobotSTRParams: TGUID = '{C53C96F4-ECE2-11D2-989F-0080C86BE4DF}';
  IID_IRobotSTRParameter: TGUID = '{C53C96F3-ECE2-11D2-989F-0080C86BE4DF}';
  CLASS_RobotSTRParameter: TGUID = '{C53C96F5-ECE2-11D2-989F-0080C86BE4DF}';
  IID_IRobotStructuralAxisSequenceList: TGUID = '{064F321D-11E5-4EFA-985A-D30BF84480E9}';
  CLASS_RobotStructuralAxisSequenceList: TGUID = '{73C2724E-0E3C-49DA-AAC7-03C37529B7D3}';
  IID_IRobotStructuralAxisGridCartesian: TGUID = '{85FFB964-BA73-43A9-9063-47318C0CC06B}';
  CLASS_RobotStructuralAxisGridCartesian: TGUID = '{112AB0D1-BE57-412D-A2FA-CA846F139659}';
  CLASS_RobotStructuralAxisGridMngr: TGUID = '{3B519715-6489-4EE3-B471-C5104FF5605D}';
  CLASS_RobotBackgroundLayers: TGUID = '{7FD258BB-AC05-48AD-AE7E-AAA9A0D54F60}';
  CLASS_RobotBackgroundVisibilityRange: TGUID = '{9A830088-8251-43B6-80F0-37210E79E2C1}';
  CLASS_RobotBackgroundInsertParams: TGUID = '{7FF8D59B-E851-44BF-8C7C-86D314B461D9}';
  CLASS_RobotBackground: TGUID = '{4FF157BE-EDA7-4B76-95BA-CF1104C34377}';
  CLASS_RobotBackgroundServer: TGUID = '{1A56E753-487D-4D14-939A-4DDE081024BB}';
  CLASS_RobotSnowWindParams: TGUID = '{DDA75BE3-316F-11D4-B813-0050DA76755E}';
  CLASS_RobotSnowWindEngine: TGUID = '{DDA75BE5-316F-11D4-B813-0050DA76755E}';
  IID_IRobotSWCodePLParams: TGUID = '{D34BD232-3619-11D4-B817-0050DA76755E}';
  CLASS_RobotSWCodePLParams: TGUID = '{D34BD233-3619-11D4-B817-0050DA76755E}';
  IID_IRobotSWCodeFRParams: TGUID = '{1925AC12-3DDA-11D4-B820-0050DA76755E}';
  CLASS_RobotSWCodeFRParams: TGUID = '{1925AC13-3DDA-11D4-B820-0050DA76755E}';
  IID_IRobotSWCodeECParams: TGUID = '{73D09B84-24D7-427F-BA8F-E33B88FBF058}';
  CLASS_RobotSWCodeECParams: TGUID = '{A0C9F758-7BD5-4EF4-85F8-AD99167A3B14}';
  CLASS_RobotSWStruct3DElement: TGUID = '{015707E0-9F4C-4ADB-8F50-DF2C95E6DA71}';
  CLASS_RobotSWStruct3DFrame: TGUID = '{A19D6BF7-0DCB-4E47-9218-3E0697FA1B2C}';
  CLASS_RobotSWStruct3D: TGUID = '{CFCB2870-6B08-474E-A316-795863F6D2DB}';
  CLASS_RobotSWStruct3DPurlinGenParams: TGUID = '{8BAB09F8-1462-4B8A-918A-E13FC1F1DC1D}';
  CLASS_RobotSWStruct3DGenParams: TGUID = '{0154759D-3EE3-49C1-99DD-304C273699F3}';
  CLASS_RobotViewMngr: TGUID = '{95582DE4-004C-11D2-9795-0080C86BE4DF}';
  CLASS_RobotTable: TGUID = '{3C719720-0771-11D2-979A-0080C86BE4DF}';
  CLASS_RobotTableFrame: TGUID = '{A01CD9FC-E67B-4D7E-934B-6802227882FF}';
  CLASS_RobotTableConfig: TGUID = '{6ABCDF51-1649-11D2-97A7-0080C86BE4DF}';
  CLASS_RobotView: TGUID = '{7ABBD5F5-F70F-11D2-98A9-0080C86BE4DF}';
  IID_IRobotViewDetailedAnalysis: TGUID = '{E6706892-77FF-11D4-B84E-0050DA76755E}';
  CLASS_RobotViewDetailedAnalysis: TGUID = '{E6706893-77FF-11D4-B84E-0050DA76755E}';
  IID_IRobotViewDetailedAnalysisParams: TGUID = '{87937552-7A8A-11D4-B851-0050DA76755E}';
  IID_IRobotViewScreenCaptureParams: TGUID = '{862269ED-AF6B-4CDC-A65C-9EC74ADA3CCF}';
  CLASS_RobotViewDisplayParams: TGUID = '{D00CCC33-7A57-11D4-B851-0050DA76755E}';
  CLASS_RobotViewDiagramParams: TGUID = '{72DDE973-7A62-11D4-B851-0050DA76755E}';
  IID_IRobotView3: TGUID = '{453860ED-7BB2-4A24-ACEA-92680D61C5C7}';
  IID_IRobotViewDiagrams: TGUID = '{A4A350A2-7A70-11D4-B851-0050DA76755E}';
  CLASS_RobotViewDiagrams: TGUID = '{A4A350A3-7A70-11D4-B851-0050DA76755E}';
  IID_IRobotViewBarMaps: TGUID = '{A4A350A4-7A70-11D4-B851-0050DA76755E}';
  CLASS_RobotViewBarMaps: TGUID = '{A4A350A5-7A70-11D4-B851-0050DA76755E}';
  IID_IRobotViewFeMaps: TGUID = '{A4A350A6-7A70-11D4-B851-0050DA76755E}';
  CLASS_RobotViewFeMaps: TGUID = '{A4A350A7-7A70-11D4-B851-0050DA76755E}';
  CLASS_RobotViewBarMapParams: TGUID = '{ADB9B383-7A75-11D4-B851-0050DA76755E}';
  CLASS_RobotViewDetailedAnalysisParams: TGUID = '{87937553-7A8A-11D4-B851-0050DA76755E}';
  CLASS_RobotViewFeMapParams: TGUID = '{8327AE73-7CB6-11D4-B852-0050DA76755E}';
  IID_IRobotViewPanelCuts: TGUID = '{066DB4EF-433B-440E-80BA-88A6951033EB}';
  CLASS_RobotViewPanelCuts: TGUID = '{59F82EDE-B9A5-464E-9FCA-5B3E84BDB923}';
  CLASS_RobotViewPanelCutParams: TGUID = '{AC8168FF-76BD-4821-98FE-89956FA8CF65}';
  IID_IRobotViewGlobalAnalysisParams: TGUID = '{2D85113E-1370-43A7-9A7E-DF5BC8FDEFA5}';
  CLASS_RobotViewGlobalAnalysisParams: TGUID = '{1B7B42A6-4182-4065-B5C3-43002F545796}';
  IID_IRobotViewGlobalAnalysisResultsParams: TGUID = '{E18F5EC2-689E-48E4-BF85-0428497670A4}';
  CLASS_RobotViewGlobalAnalysisResultsParams: TGUID = '{FBBC5A24-7BF1-482D-A0B9-B4FBB64A09A7}';
  IID_IRobotViewGlobalAnalysis: TGUID = '{5A3F2D4E-4405-4A40-98CB-E21CBA9D1873}';
  CLASS_RobotViewGlobalAnalysis: TGUID = '{E796EF8F-9818-43BF-ABD7-BBCE3F71B997}';
  IID_IRobotViewInfluenceLines: TGUID = '{72CC7FFA-76A2-428E-BDED-7FD214055080}';
  CLASS_RobotViewInfluenceLines: TGUID = '{8B1AC6E9-10BC-4A39-8479-AFA05218F08E}';
  IID_IRobotViewInfluenceLinesParams: TGUID = '{48AE6863-35D6-4F0E-ACB6-EF8AE2BB0A4D}';
  CLASS_RobotViewInfluenceLinesParams: TGUID = '{BA76258F-8F38-4D22-ADCA-62B56CD81EC8}';
  CLASS_RobotViewScreenCaptureParams: TGUID = '{C0DDE43F-0F2D-497F-A31F-E383120B2321}';
  CLASS_RobotTableScreenCaptureParams: TGUID = '{15A3AD67-292B-42FD-B185-33E806800268}';
  CLASS_RobotPrintable: TGUID = '{42278653-0A6C-11D2-979C-0080C86BE4DF}';
  CLASS_RobotPrintEngine: TGUID = '{42278654-0A6C-11D2-979C-0080C86BE4DF}';
  CLASS_RobotRtfView: TGUID = '{D064BC91-C516-11D3-B7B6-0050DA76755E}';
  CLASS_RobotVariableMngr: TGUID = '{68CD9441-CCC7-11D3-B7BD-0050DA76755E}';
  CLASS_RobotPageSetup: TGUID = '{0566D4A1-CCD5-11D3-B7BD-0050DA76755E}';
  CLASS_RobotReportTemplateMngr: TGUID = '{3BE0D393-1144-11D4-B7F6-0050DA76755E}';
  CLASS_RobotScreenCaptureMngr: TGUID = '{3BE0D395-1144-11D4-B7F6-0050DA76755E}';
  CLASS_RobotReportStdElementRtf: TGUID = '{41C82C13-ED1B-11D4-B8AF-0050DA76755E}';
  CLASS_RobotReportItem: TGUID = '{C473CA5A-C9D2-4467-900D-088AA8B37176}';
  CLASS_RobotReportItemList: TGUID = '{E0FD4B3F-7C17-4F12-ABBF-19E4B44842E3}';
  CLASS_RobotPageSetupTableOfContents: TGUID = '{502F049B-0FB6-4C98-9223-EBC864D667EC}';
  IID_IRobotHtmlView: TGUID = '{613146FC-74B0-43AA-8B17-F1D978392AC5}';
  CLASS_RobotHtmlView: TGUID = '{5734F931-6BFE-45C7-B559-A10BD0D9A0C6}';
  CLASS_RobotMultiView: TGUID = '{2413F457-A085-42B1-A0BB-90F1FE60639B}';
  IID_IRDimDetailedRes: TGUID = '{EC806A03-1BE3-11D5-B065-00104B7DBED4}';
  IID_IRDimMatDef: TGUID = '{E43EB701-A03C-11D3-9A65-00105AC6705D}';
  IID_IRDimProfDef: TGUID = '{E43EB704-A03C-11D3-9A65-00105AC6705D}';
  IID_IRDimEffDef: TGUID = '{DFCDC8B5-A030-11D3-9A65-00105AC6705D}';
  IID_IRDimGrpRes: TGUID = '{36118C53-3803-11D5-8835-0050DA7675E2}';
  IID_IRDimMembRes: TGUID = '{979DCCC2-B45B-11D9-869F-0050DA7675E2}';
  IID_IRDimMembCalc: TGUID = '{45CAE2B1-A649-11D3-9A6F-00105AC6705D}';
  IID_IRDimCalcState: TGUID = '{561CF201-B42B-11D9-869E-0050DA7675E2}';
  IID_IRDimManCalcPar: TGUID = '{12BA3A11-4088-11D4-8717-0050DA7675E2}';
  IID_IRDimSimEffDef: TGUID = '{BAF61611-41D5-11D4-8719-0050DA7675E2}';
  IID_IRDimCodeService: TGUID = '{9AAB28A1-F0B4-11D2-999B-00201888053E}';
  IID_IRDimClient: TGUID = '{EC7B6C13-7F98-11D2-990B-00201888053E}';
  IID_IRDimAdjoinService: TGUID = '{EB17B256-5405-4099-909A-33455250BAEA}';
  IID_IRDimMembParamsANS: TGUID = '{0B6E95CC-22E6-4D0E-A95F-FE86A321F9D3}';
  IID_IRDimCodeResANS_1: TGUID = '{421EC679-91A4-4F69-8DC2-2785826BCBBD}';
  IID_IRDimCodeResANS_2: TGUID = '{3CEFAEF6-764D-4B0B-A4F5-0F5C08E2D217}';
  IID_IRDimCodeResANS_3: TGUID = '{E9A757E2-2EAA-4E5F-B6AA-96918EEF979D}';
  IID_IRDimMembParamsCM66: TGUID = '{34C1F17A-9D20-4775-B57A-B154A033C1FA}';
  IID_IRDimCodeResCM66: TGUID = '{4CA26B03-1AC8-11D5-B063-00104B7DBED4}';
  IID_IRDimMembParamsBS59: TGUID = '{67C95BD2-1E0D-4E0E-BA06-D45250C932CA}';
  IID_IRDimMembParamsBS59_2000: TGUID = '{CA278783-0862-4A53-8EF5-A3AB1F906EFE}';
  IID_IRDimMembParamsNS34: TGUID = '{62F805D0-C7A6-437A-AA24-A22159C8D8F7}';
  IID_IRDimMembParamsEC3: TGUID = '{11C7356F-FD27-4791-A45A-7DAA20A0A54D}';
  IID_IRDimCodeResEC3: TGUID = '{21F70924-8B6C-470F-A19F-5DC40565936D}';
  IID_IRDimMembParamsE32: TGUID = '{47CFA801-3726-42DC-9488-61D4EFF292A6}';
  IID_IRDimThinWalledE32: TGUID = '{9048FBC6-44C7-4AAB-8A04-AAE60F9234E0}';
  IID_IRDimFireResistE32: TGUID = '{F89463F5-48D2-49F9-B588-0181CADC5C36}';
  IID_IRDimComplexSectE32: TGUID = '{BE819121-D324-4816-AC3A-44F295AFF298}';
  IID_IRDimCodeResE32_1: TGUID = '{FB61ECEA-0ACB-4320-9A85-841655612006}';
  IID_IRDimCodeResE32_2: TGUID = '{820E7536-2E4D-4ED6-B818-F03C9B24F991}';
  IID_IRDimCodeResE32_3: TGUID = '{F15CF924-F780-4FCE-8975-A44D90DF4175}';
  IID_IRDimCodeResE32_4: TGUID = '{38BE37A5-DBBF-48F3-928B-6071D9748FF7}';
  IID_IRDimMembParamsE52: TGUID = '{06901CF3-701B-40A8-9D18-D97677E838A8}';
  IID_IRDimCodeResE52: TGUID = '{7823D66D-B1CA-4367-AC28-05AA92497750}';
  IID_IRDimMembParamsCB71: TGUID = '{12B15549-D243-48B1-9513-CF76ECE0796E}';
  IID_IRDimCodeResCB71: TGUID = '{6C03125E-AD17-4422-94CE-EF735CF7A13D}';
  IID_IRDimMembParamsLRFD: TGUID = '{1F3414CF-9E4A-4FB4-BD36-6110CC2927B1}';
  IID_IRDimCodeResLRFD: TGUID = '{17CD58EF-719B-4EBD-9B44-C929083D0E0E}';
  CLASS_RDimStream: TGUID = '{5BA2AF31-A3F6-11D3-9A6C-00105AC6705D}';
  CLASS_RDimSimEffDef: TGUID = '{F2FBBC43-41DA-11D4-8719-0050DA7675E2}';
  CLASS_RDimEffDef: TGUID = '{5BA2AF33-A3F6-11D3-9A6C-00105AC6705D}';
  CLASS_RDimMatDef: TGUID = '{5BA2AF34-A3F6-11D3-9A6C-00105AC6705D}';
  CLASS_RDimProfDef: TGUID = '{5BA2AF35-A3F6-11D3-9A6C-00105AC6705D}';
  CLASS_RDimMembSrv: TGUID = '{5BA2AF36-A3F6-11D3-9A6C-00105AC6705D}';
  CLASS_RDimConnection: TGUID = '{8BA7F639-2DDA-11D5-882B-0050DA7675E2}';
  CLASS_RDimDeflDisp: TGUID = '{7A5C5FA2-03FD-11D4-86D6-0050DA7675E2}';
  CLASS_RDimCalcState: TGUID = '{C363DEE1-B43A-11D9-869E-0050DA7675E2}';
  CLASS_RDimUnits: TGUID = '{0A62AA01-DD50-11D3-86B6-0050DA7675E2}';
  CLASS_RDimGrpProfs: TGUID = '{EF24CDF5-2CF0-11D5-882A-0050DA7675E2}';
  CLASS_RDimGroup: TGUID = '{C44CA0A9-E9A8-4353-A393-C8B61C37E60D}';
  CLASS_RDimGroups: TGUID = '{7C5C386E-16F5-4303-8BD6-53DC0E1EC035}';
  CLASS_RDimMembDef: TGUID = '{EC84AF7A-2B67-11D5-8828-0050DA7675E2}';
  CLASS_RDimMembDefDataSrv: TGUID = '{05625782-0398-449D-AE86-7526B2320B1B}';
  CLASS_RDimMember: TGUID = '{EB638127-203E-40B8-A69D-577D33B59EC1}';
  CLASS_RDimMembers: TGUID = '{724D0AE4-17F9-4AB4-8000-836E64634BB5}';
  CLASS_RDimServer: TGUID = '{C508E4D0-158D-11D5-9945-00008653042C}';
  CLASS_RDimAdjoinParams: TGUID = '{30E4D896-EED7-414C-8FC8-A745359F4FA7}';
  CLASS_RDimAdjoinAutomat: TGUID = '{BD20E9E4-6988-457C-A6BB-53852D49A18A}';
  CLASS_RDimAdjoinBranch: TGUID = '{13E0A348-EF4E-4816-9A4D-0CE643553498}';
  CLASS_RDimInternalPoints: TGUID = '{2EE96EB5-3194-4433-B521-1B84DD57C260}';
  CLASS_RJointConnectionInfo: TGUID = '{1C8C9F92-AE18-11D3-9972-0080C86BE4DF}';
  IID_IRJointWeld: TGUID = '{1C8C9F82-AE18-11D3-9972-0080C86BE4DF}';
  CLASS_RJointWeld: TGUID = '{1C8C9F83-AE18-11D3-9972-0080C86BE4DF}';
  IID_IRJointPlate: TGUID = '{1C8C9F84-AE18-11D3-9972-0080C86BE4DF}';
  CLASS_RJointPlate: TGUID = '{1C8C9F85-AE18-11D3-9972-0080C86BE4DF}';
  IID_IRJointKneeDiagonalStiff: TGUID = '{1C8C9F88-AE18-11D3-9972-0080C86BE4DF}';
  CLASS_RJointKneeDiagonalStiff: TGUID = '{1C8C9F89-AE18-11D3-9972-0080C86BE4DF}';
  IID_IRJointBolts: TGUID = '{1C8C9F86-AE18-11D3-9972-0080C86BE4DF}';
  IID_IRJointKneeBolts: TGUID = '{1C8C9F8A-AE18-11D3-9972-0080C86BE4DF}';
  CLASS_RJointKneeBolts: TGUID = '{1C8C9F8C-AE18-11D3-9972-0080C86BE4DF}';
  IID_IRJointKneeBracket: TGUID = '{1C8C9F8B-AE18-11D3-9972-0080C86BE4DF}';
  CLASS_RJointKneeBracket: TGUID = '{1C8C9F8D-AE18-11D3-9972-0080C86BE4DF}';
  IID_IRJointKneeWebPlate: TGUID = '{1C8C9F8E-AE18-11D3-9972-0080C86BE4DF}';
  CLASS_RJointKneeWebPlate: TGUID = '{1C8C9F8F-AE18-11D3-9972-0080C86BE4DF}';
  IID_IRJointKneeCodeParamsPN90: TGUID = '{56137A12-747A-4ED5-90FE-558927218BC7}';
  CLASS_RJointKneeCodeParamsPN90: TGUID = '{65DAF0D0-D2EA-4EE4-96C6-3D475303071C}';
  IID_IRJointKneeCodeParamsCM66: TGUID = '{26CC4EB9-171F-445C-8F5A-22AFC45707ED}';
  CLASS_RJointKneeCodeParamsCM66: TGUID = '{05522EBC-F60D-494C-A0C8-54BF6A87D8AA}';
  IID_IRJointKneeCodeParamsEC32: TGUID = '{EE229E65-7901-4229-A436-C9DED15F859C}';
  CLASS_RJointKneeCodeParamsEC32: TGUID = '{E0F8F590-6CF3-4A3E-97F6-03BE432D6120}';
  IID_IRJointKnee: TGUID = '{1C8C9F90-AE18-11D3-9972-0080C86BE4DF}';
  CLASS_RJointKnee: TGUID = '{1C8C9F91-AE18-11D3-9972-0080C86BE4DF}';
  IID_IRJointKneeStiffColumn: TGUID = '{0F2ADCA1-C1F0-11D3-B7B2-0050DA76755E}';
  IID_IRJointProfile: TGUID = '{0F2ADCA0-C1F0-11D3-B7B2-0050DA76755E}';
  CLASS_RJointConnectionServer: TGUID = '{31E739D1-B475-11D3-9979-0080C86BE4DF}';
  CLASS_RJointKneeStiffColumn: TGUID = '{6D035A11-B7BF-11D3-B7AA-0050DA76755E}';
  CLASS_RJointProfile: TGUID = '{0F2ADCA2-C1F0-11D3-B7B2-0050DA76755E}';
  CLASS_RJointLoad: TGUID = '{3E306744-C804-11D3-B7B9-0050DA76755E}';
  IID_IRJointKneeLoad: TGUID = '{3E306745-C804-11D3-B7B9-0050DA76755E}';
  CLASS_RJointKneeLoad: TGUID = '{3E306746-C804-11D3-B7B9-0050DA76755E}';
  IID_IRJointAnchorBolt: TGUID = '{64A3D922-144A-11D4-B7F8-0050DA76755E}';
  CLASS_RJointAnchorBolt: TGUID = '{64A3D923-144A-11D4-B7F8-0050DA76755E}';
  IID_IRJointAnchorPlate: TGUID = '{64A3D924-144A-11D4-B7F8-0050DA76755E}';
  CLASS_RJointAnchorPlate: TGUID = '{64A3D925-144A-11D4-B7F8-0050DA76755E}';
  IID_IRJointAnchor: TGUID = '{64A3D926-144A-11D4-B7F8-0050DA76755E}';
  CLASS_RJointAnchor: TGUID = '{64A3D927-144A-11D4-B7F8-0050DA76755E}';
  IID_IRJointFootBolts: TGUID = '{64A3D928-144A-11D4-B7F8-0050DA76755E}';
  CLASS_RJointFootBolts: TGUID = '{64A3D929-144A-11D4-B7F8-0050DA76755E}';
  IID_IRJointFootPlate: TGUID = '{64A3D92A-144A-11D4-B7F8-0050DA76755E}';
  CLASS_RJointFootPlate: TGUID = '{64A3D92B-144A-11D4-B7F8-0050DA76755E}';
  IID_IRJointWedge: TGUID = '{64A3D92C-144A-11D4-B7F8-0050DA76755E}';
  CLASS_RJointWedge: TGUID = '{64A3D92D-144A-11D4-B7F8-0050DA76755E}';
  IID_IRJointBearingPlate: TGUID = '{64A3D92E-144A-11D4-B7F8-0050DA76755E}';
  CLASS_RJointBearingPlate: TGUID = '{64A3D92F-144A-11D4-B7F8-0050DA76755E}';
  IID_IRJointFootWelds: TGUID = '{64A3D930-144A-11D4-B7F8-0050DA76755E}';
  CLASS_RJointFootWelds: TGUID = '{64A3D931-144A-11D4-B7F8-0050DA76755E}';
  IID_IRJointColumnBracket: TGUID = '{64A3D932-144A-11D4-B7F8-0050DA76755E}';
  CLASS_RJointColumnBracket: TGUID = '{64A3D933-144A-11D4-B7F8-0050DA76755E}';
  IID_IRJointPinnedColumnBase: TGUID = '{64A3D934-144A-11D4-B7F8-0050DA76755E}';
  CLASS_RJointPinnedColumnBase: TGUID = '{64A3D935-144A-11D4-B7F8-0050DA76755E}';
  IID_IRJointFootStiffenerHoriz: TGUID = '{9968E764-16BB-11D4-B7FB-0050DA76755E}';
  IID_IRJointFootStiffenerVert: TGUID = '{9968E762-16BB-11D4-B7FB-0050DA76755E}';
  IID_IRJointFootMaterials: TGUID = '{A41669A2-16C5-11D4-B7FB-0050DA76755E}';
  IID_IRJointColumnSquare: TGUID = '{0E5E5352-1B6F-11D4-B7FE-0050DA76755E}';
  IID_IRJointColumnBFoundation: TGUID = '{D929E84E-8C9B-4141-961F-DEA9955F348B}';
  IID_IRJointFootStiffenerSimple: TGUID = '{1D07CA22-1C33-11D4-B7FF-0050DA76755E}';
  IID_IRJointFootStiffenerTrapezoid: TGUID = '{3DB5CAF2-15EC-4321-B8B5-10B2675C8715}';
  CLASS_RJointFootStiffenerVert: TGUID = '{9968E763-16BB-11D4-B7FB-0050DA76755E}';
  CLASS_RJointFootStiffenerHoriz: TGUID = '{9968E765-16BB-11D4-B7FB-0050DA76755E}';
  CLASS_RJointFootMaterials: TGUID = '{A41669A3-16C5-11D4-B7FB-0050DA76755E}';
  IID_IRJointPinnedLoad: TGUID = '{DEF17FA2-1B6C-11D4-B7FE-0050DA76755E}';
  CLASS_RJointPinnedLoad: TGUID = '{DEF17FA3-1B6C-11D4-B7FE-0050DA76755E}';
  CLASS_RJointColumnSquare: TGUID = '{0E5E5353-1B6F-11D4-B7FE-0050DA76755E}';
  CLASS_RJointFootStiffenerSimple: TGUID = '{1D07CA23-1C33-11D4-B7FF-0050DA76755E}';
  IID_IRJointFootStiffenerComplex: TGUID = '{1D07CA24-1C33-11D4-B7FF-0050DA76755E}';
  CLASS_RJointFootStiffenerComplex: TGUID = '{1D07CA25-1C33-11D4-B7FF-0050DA76755E}';
  CLASS_RJointFootStiffenerTrapezoid: TGUID = '{E5136BE0-90EF-451C-80BB-CEE0132C5CE1}';
  CLASS_RJointColumnBFoundation: TGUID = '{C64B2C66-D97C-4125-82D9-E4830457C4C3}';
  IID_IRJointFixedColumnBase: TGUID = '{1D07CA26-1C33-11D4-B7FF-0050DA76755E}';
  CLASS_RJointFixedColumnBase: TGUID = '{1D07CA27-1C33-11D4-B7FF-0050DA76755E}';
  IID_IRJointFixedFootWelds: TGUID = '{F14DC592-2194-11D4-B802-0050DA76755E}';
  IID_IRJointFixedLoad: TGUID = '{1D07CA28-1C33-11D4-B7FF-0050DA76755E}';
  CLASS_RJointFixedLoad: TGUID = '{1D07CA29-1C33-11D4-B7FF-0050DA76755E}';
  IID_IRJointConcreteMaterials: TGUID = '{1D07CA2A-1C33-11D4-B7FF-0050DA76755E}';
  CLASS_RJointConcreteMaterials: TGUID = '{1D07CA2B-1C33-11D4-B7FF-0050DA76755E}';
  IID_IRJointConcreteColumn: TGUID = '{1D07CA2C-1C33-11D4-B7FF-0050DA76755E}';
  CLASS_RJointConcreteColumn: TGUID = '{1D07CA2D-1C33-11D4-B7FF-0050DA76755E}';
  IID_IRJointConcreteColumnFoundation: TGUID = '{2D350783-FE49-402F-B197-BA08E2315750}';
  CLASS_RJointConcreteColumnFoundation: TGUID = '{03027225-DBFD-4889-A2AA-EC6CCE1017C9}';
  IID_IRJointConcreteColumnLoad: TGUID = '{8C35D16A-B200-4B60-8B8A-5F969DBA3EC3}';
  CLASS_RJointConcreteColumnLoad: TGUID = '{8C74AB3F-E72F-4606-9FD2-C09F4F3F55E8}';
  CLASS_RJointFixedFootWelds: TGUID = '{F14DC593-2194-11D4-B802-0050DA76755E}';
  IID_IRJointAngleBolts: TGUID = '{C135B0E2-2714-11D4-B808-0050DA76755E}';
  CLASS_RJointAngleBolts: TGUID = '{C135B0E3-2714-11D4-B808-0050DA76755E}';
  IID_IRJointAngle: TGUID = '{C135B0E4-2714-11D4-B808-0050DA76755E}';
  CLASS_RJointAngle: TGUID = '{C135B0E5-2714-11D4-B808-0050DA76755E}';
  IID_IRJointBeamCut: TGUID = '{C135B0E6-2714-11D4-B808-0050DA76755E}';
  CLASS_RJointBeamCut: TGUID = '{C135B0E7-2714-11D4-B808-0050DA76755E}';
  IID_IRJointWithAngles: TGUID = '{C135B0E8-2714-11D4-B808-0050DA76755E}';
  CLASS_RJointWithAngles: TGUID = '{C135B0E9-2714-11D4-B808-0050DA76755E}';
  IID_IRJointAngleLoad: TGUID = '{66DF03B2-2B23-11D4-B80B-0050DA76755E}';
  CLASS_RJointAngleLoad: TGUID = '{66DF03B3-2B23-11D4-B80B-0050DA76755E}';
  IID_IRJointTubeFlangeProfile: TGUID = '{9EFFC6A2-362C-11D4-B817-0050DA76755E}';
  CLASS_RJointTubeFlangeProfile: TGUID = '{9EFFC6A3-362C-11D4-B817-0050DA76755E}';
  IID_IRJointTubeDiagProfile: TGUID = '{9EFFC6A4-362C-11D4-B817-0050DA76755E}';
  CLASS_RJointTubeDiagProfile: TGUID = '{9EFFC6A5-362C-11D4-B817-0050DA76755E}';
  IID_IRJointTubePostProfile: TGUID = '{9EFFC6A6-362C-11D4-B817-0050DA76755E}';
  CLASS_RJointTubePostProfile: TGUID = '{9EFFC6A7-362C-11D4-B817-0050DA76755E}';
  IID_IRJointTube: TGUID = '{CFF9DD54-35FF-11D4-B817-0050DA76755E}';
  CLASS_RJointTube: TGUID = '{CFF9DD55-35FF-11D4-B817-0050DA76755E}';
  IID_IRJointTubeLoad: TGUID = '{43FAA522-3AB3-11D4-B81C-0050DA76755E}';
  CLASS_RJointTubeLoad: TGUID = '{43FAA523-3AB3-11D4-B81C-0050DA76755E}';
  IID_IRJointGussetBoltsDiag: TGUID = '{01410332-4B49-11D4-B832-0050DA76755E}';
  CLASS_RJointGussetBoltsDiag: TGUID = '{01410333-4B49-11D4-B832-0050DA76755E}';
  IID_IRJointGussetWeldsDiag: TGUID = '{01410334-4B49-11D4-B832-0050DA76755E}';
  CLASS_RJointGussetWeldsDiag: TGUID = '{01410335-4B49-11D4-B832-0050DA76755E}';
  IID_IRJointGussetDiagonale: TGUID = '{01410336-4B49-11D4-B832-0050DA76755E}';
  CLASS_RJointGussetDiagonale: TGUID = '{01410337-4B49-11D4-B832-0050DA76755E}';
  IID_IRJointGussetSimple: TGUID = '{01410338-4B49-11D4-B832-0050DA76755E}';
  CLASS_RJointGussetSimple: TGUID = '{01410339-4B49-11D4-B832-0050DA76755E}';
  IID_IRJointGussetSimplePlate: TGUID = '{0141033A-4B49-11D4-B832-0050DA76755E}';
  IID_IRJointGussetSimpleAttachment: TGUID = '{0141033C-4B49-11D4-B832-0050DA76755E}';
  IID_IRJointGussetSimpleAttachBolts: TGUID = '{0141033E-4B49-11D4-B832-0050DA76755E}';
  IID_IRJointGussetSimpleAttachBoltsHorizontal: TGUID = '{01410340-4B49-11D4-B832-0050DA76755E}';
  IID_IRJointGussetSimpleAttachBoltsVertical: TGUID = '{01410342-4B49-11D4-B832-0050DA76755E}';
  IID_IRJointGussetSimpleAttachWelds: TGUID = '{01410344-4B49-11D4-B832-0050DA76755E}';
  CLASS_RJointGussetSimplePlate: TGUID = '{0141033B-4B49-11D4-B832-0050DA76755E}';
  CLASS_RJointGussetSimpleAttachment: TGUID = '{0141033D-4B49-11D4-B832-0050DA76755E}';
  CLASS_RJointGussetSimpleAttachBolts: TGUID = '{0141033F-4B49-11D4-B832-0050DA76755E}';
  CLASS_RJointGussetSimpleAttachBoltsHorizontal: TGUID = '{01410341-4B49-11D4-B832-0050DA76755E}';
  CLASS_RJointGussetSimpleAttachBoltsVertical: TGUID = '{01410343-4B49-11D4-B832-0050DA76755E}';
  CLASS_RJointGussetSimpleAttachWelds: TGUID = '{01410345-4B49-11D4-B832-0050DA76755E}';
  IID_IRJointGussetCrossPlate: TGUID = '{01410346-4B49-11D4-B832-0050DA76755E}';
  CLASS_RJointGussetCrossPlate: TGUID = '{01410347-4B49-11D4-B832-0050DA76755E}';
  IID_IRJointGussetCross: TGUID = '{01410348-4B49-11D4-B832-0050DA76755E}';
  CLASS_RJointGussetCross: TGUID = '{01410349-4B49-11D4-B832-0050DA76755E}';
  IID_IRJointGussetFlangePlate: TGUID = '{0141034A-4B49-11D4-B832-0050DA76755E}';
  CLASS_RJointGussetFlangePlate: TGUID = '{0141034B-4B49-11D4-B832-0050DA76755E}';
  IID_IRJointGussetFlange: TGUID = '{0141034C-4B49-11D4-B832-0050DA76755E}';
  CLASS_RJointGussetFlange: TGUID = '{0141034D-4B49-11D4-B832-0050DA76755E}';
  IID_IRJointGussetSimpleLoad: TGUID = '{1A507E22-56FD-11D4-B844-0050DA76755E}';
  CLASS_RJointGussetSimpleLoad: TGUID = '{1A507E23-56FD-11D4-B844-0050DA76755E}';
  IID_IRJointGussetCrossLoad: TGUID = '{1A507E24-56FD-11D4-B844-0050DA76755E}';
  CLASS_RJointGussetCrossLoad: TGUID = '{1A507E25-56FD-11D4-B844-0050DA76755E}';
  IID_IRJointGussetFlangeLoad: TGUID = '{1A507E26-56FD-11D4-B844-0050DA76755E}';
  CLASS_RJointGussetFlangeLoad: TGUID = '{1A507E27-56FD-11D4-B844-0050DA76755E}';
  IID_IRJointMainBolts: TGUID = '{D8F75DFE-EFB5-4D37-B04E-58608AF1ED3C}';
  CLASS_RJointMainBolts: TGUID = '{E99EAE4C-47B6-46D0-888C-F8D3E615542E}';
  IID_IRJointBeamBolts: TGUID = '{FD9C74FB-47AE-4034-9CAF-FE767C438196}';
  CLASS_RJointBeamBolts: TGUID = '{5E992A62-A16F-4445-BB5A-3D55A7A39F50}';
  IID_IRJointBeamGirderSeatBolts: TGUID = '{CB62EFA3-0EDF-4717-B4E6-BD5B4B962B1B}';
  CLASS_RJointBeamGirderSeatBolts: TGUID = '{60EA360D-58A3-4F51-8FAB-73D173973C95}';
  IID_IRJointBeamGirderBeam: TGUID = '{483D9545-DC88-41F9-80D5-916F5332B3CE}';
  CLASS_RJointBeamGirderBeam: TGUID = '{551F9996-B4E4-4B59-8128-5001512AD2BE}';
  IID_IRJointBeamGirderAngle: TGUID = '{E4FF4AE0-1177-427C-A99E-B5C2D738597E}';
  CLASS_RJointBeamGirderAngle: TGUID = '{BC28D057-23A9-46CB-A720-24EA7E06B8EF}';
  IID_IRJointBeamPlate: TGUID = '{03B68104-3440-4E74-9FE2-1C81B9736019}';
  CLASS_RJointBeamPlate: TGUID = '{38768A22-CED9-4F9D-B6A1-619415DA1713}';
  IID_IRJointBeamGirderSeat: TGUID = '{78E92455-5E35-43A8-A61D-232CA665C952}';
  CLASS_RJointBeamGirderSeat: TGUID = '{46C4634C-9CE0-47C1-B9D3-E87B198FB928}';
  IID_IRJointBeamGirderStiffener: TGUID = '{8B457D76-6EB3-4B30-9640-6422E0B12890}';
  CLASS_RJointBeamGirderStiffener: TGUID = '{71C1C630-C986-4CF7-A12D-DEDC7751B4B7}';
  IID_IRJointBeamGirder: TGUID = '{73D9E5CE-623C-4A42-8C7E-99D6FB571EC2}';
  CLASS_RJointBeamGirder: TGUID = '{E5C5FF9E-5785-4690-86C5-8F5A55684004}';
  IID_IRJointBeamGirderLoad: TGUID = '{4E380F52-0806-4513-BB18-58F55309B14E}';
  CLASS_RJointBeamGirderLoad: TGUID = '{911E371E-2B82-4FD5-8E56-A68CC4748BCF}';
  IID_IRJointBeamColumn: TGUID = '{EF36EE95-2731-4928-8603-B36A77A82E17}';
  CLASS_RJointBeamColumn: TGUID = '{04AADC2D-7C0A-477E-9650-2E76E52764C0}';
  IID_IRJointBeamAngle: TGUID = '{9A890EAA-1DAA-400D-955C-6C3D28F2110A}';
  IID_IRJointBeamSeatL: TGUID = '{FDB7F092-860A-46A5-9C0D-54803D1E8DF3}';
  IID_IRJointBeamSeatMainBolts: TGUID = '{A7426F9C-3AE9-4BCB-8E0B-3BAD86335211}';
  IID_IRJointBeamSeatT: TGUID = '{D35F19E7-109C-4562-844E-3E845FE3E5AE}';
  IID_IRJointBeamColumnFlangePlate: TGUID = '{56BC4BA1-38CD-4E3E-94D3-16B4C6FACFAD}';
  CLASS_RJointBeamAngle: TGUID = '{004B4EED-ECBC-4FD2-A42D-4083343071C2}';
  CLASS_RJointBeamColumnFlangePlate: TGUID = '{21B20399-A516-4849-BD78-AD8E1C7498CF}';
  CLASS_RJointBeamSeatMainBolts: TGUID = '{9793E52B-694E-4798-8BE6-7A3C8F4D08F7}';
  CLASS_RJointBeamSeatL: TGUID = '{E49E489F-2A1A-4D87-93DB-00A2E18318A5}';
  CLASS_RJointBeamSeatT: TGUID = '{0C5476E9-BD2C-4953-B950-0B176C042C67}';
  IID_IRJointSplice: TGUID = '{C6532B1F-10FE-4A23-B479-2B095BF230DF}';
  CLASS_RJointSplice: TGUID = '{21437C84-8D9C-4DBA-A9AB-610F9CFE8357}';
  IID_IRJointSplicePlate: TGUID = '{749E41E7-4B80-4309-A003-203631E9F68E}';
  IID_IRJointSpliceBolts: TGUID = '{17DC42CF-D0B8-4DDE-AECA-71B2EBC6B402}';
  IID_IRJointSpliceWelds: TGUID = '{90544103-699D-4653-9BDE-449EA7022228}';
  IID_IRJointSpliceLoad: TGUID = '{9BE95901-2D39-4304-8A7E-EFC1C55A058C}';
  CLASS_RJointSpliceLoad: TGUID = '{E19681DA-259F-4C29-90CA-9704C00154A3}';
  CLASS_RJointSplicePlate: TGUID = '{0853A26C-C067-4A66-9BC8-5B5F2FDA42F4}';
  CLASS_RJointSpliceBolts: TGUID = '{A29740D3-7670-4CD9-A350-EBB6FD1B61A6}';
  CLASS_RJointSpliceWelds: TGUID = '{7315F55E-7FB7-4C7B-9D93-12504971D471}';
  IID_IRJointTie: TGUID = '{46550810-8064-43F1-8B5F-FBED0D80F1A7}';
  CLASS_RJointTie: TGUID = '{21EEB675-04B1-4351-A955-B9CA2A2457BF}';
  IID_IRJointTieStiffeners: TGUID = '{CBA2F951-B348-407B-B294-4E1D120A377E}';
  IID_IRJointTiePlates: TGUID = '{EC2FAC40-020E-4E8A-8FC4-A48C44605503}';
  IID_IRJointTieConnectors: TGUID = '{4CB6CCA2-99C7-4D1C-888B-C3F13F190D7C}';
  IID_IRJointTieBolts: TGUID = '{C662D7A7-2FA5-4E1E-91B2-054D67326AA0}';
  IID_IRJointTieWelds: TGUID = '{19240A51-BB19-42AB-BEB7-6C11858362FF}';
  IID_IRJointTieLoad: TGUID = '{C82D6A5B-86D5-4A17-B909-5B9A65D1D5C7}';
  CLASS_RJointTieLoad: TGUID = '{891F7B81-BB98-41CD-934F-7E961753C727}';
  CLASS_RJointTieStiffeners: TGUID = '{03AC9C86-CEC1-4FFA-B204-D85ECAD133A8}';
  CLASS_RJointTiePlates: TGUID = '{BF880DAA-FE83-4EA9-A10D-38E1A2203460}';
  CLASS_RJointTieConnectors: TGUID = '{B50AA6D5-304F-45F0-B17E-80BEF541F202}';
  CLASS_RJointTieBolts: TGUID = '{C3E66616-72A4-4043-88E5-A61107D86F89}';
  CLASS_RJointTieWelds: TGUID = '{B115097D-BD1F-4EE8-B8AD-B703C2146E55}';
  IID_IRConcrBarSectionData: TGUID = '{3E0368BE-B302-11D3-9977-0080C86BE4DF}';
  CLASS_RConcrBarSectionData: TGUID = '{7B7EAC70-B395-11D3-9978-0080C86BE4DF}';
  IID_IRBestParamSet: TGUID = '{3E0368B5-B302-11D3-9977-0080C86BE4DF}';
  CLASS_RBestParamSet: TGUID = '{7B7EAC71-B395-11D3-9978-0080C86BE4DF}';
  IID_IRBestCalcParamsData: TGUID = '{3E0368B7-B302-11D3-9977-0080C86BE4DF}';
  CLASS_RBestCalcParamsData: TGUID = '{7B7EAC73-B395-11D3-9978-0080C86BE4DF}';
  IID_IRBestCalcParamsDataList: TGUID = '{3E0368B8-B302-11D3-9977-0080C86BE4DF}';
  CLASS_RBestCalcParamsDataList: TGUID = '{7B7EAC74-B395-11D3-9978-0080C86BE4DF}';
  IID_IRBestMemberData: TGUID = '{3E0368B9-B302-11D3-9977-0080C86BE4DF}';
  CLASS_RBestMemberData: TGUID = '{7B7EAC75-B395-11D3-9978-0080C86BE4DF}';
  IID_IRBestResults: TGUID = '{3E0368BA-B302-11D3-9977-0080C86BE4DF}';
  CLASS_RBestResults: TGUID = '{7B7EAC76-B395-11D3-9978-0080C86BE4DF}';
  IID_IRBestForceData: TGUID = '{3E0368BC-B302-11D3-9977-0080C86BE4DF}';
  CLASS_RBestForceData: TGUID = '{7B7EAC77-B395-11D3-9978-0080C86BE4DF}';
  IID_IRBestDimParams: TGUID = '{3E0368BD-B302-11D3-9977-0080C86BE4DF}';
  CLASS_RBestDimParams: TGUID = '{7B7EAC78-B395-11D3-9978-0080C86BE4DF}';
  IID_IRBestMemberDlg: TGUID = '{3E0368B3-B302-11D3-9977-0080C86BE4DF}';
  IID_IRBestCalcParamsDlg: TGUID = '{3E0368B2-B302-11D3-9977-0080C86BE4DF}';
  IID_IRBestPlateCalcParamsDlg: TGUID = '{7E96FB42-780B-11D4-B84E-0050DA76755E}';
  IID_IRBestCodeCalcEngine: TGUID = '{3E0368B4-B302-11D3-9977-0080C86BE4DF}';
  IID_IRBestCodeService: TGUID = '{3E0368B1-B302-11D3-9977-0080C86BE4DF}';
  IID_IRBestCodeServiceExt: TGUID = '{7E96FB44-780B-11D4-B84E-0050DA76755E}';
  IID_IRConcrPlateCodeService2: TGUID = '{F08A1D48-7686-4266-9CC2-E1CF992BD2D8}';
  IID_IRBestCodeService2: TGUID = '{5D46D356-BB54-429B-98A9-5DAEC4DB1193}';
  CLASS_RConcrMemberRequiredReinfCalcParams: TGUID = '{101B4E5A-526F-492A-A8D7-4C5346776E64}';
  CLASS_RConcrMemberRequiredReinfEngine: TGUID = '{E094338F-1815-434E-BD68-BD31F6BAC20A}';
  IID_IRobotCodeRegistrar: TGUID = '{498EB680-CF3B-11D3-B7C0-0050DA76755E}';
  CLASS_RobotCodeRegistrar: TGUID = '{498EB681-CF3B-11D3-B7C0-0050DA76755E}';
  IID_IRobotAddInRegistrar: TGUID = '{49F36B02-24CC-11D4-B804-0050DA76755E}';
  CLASS_RobotAddInRegistrar: TGUID = '{49F36B03-24CC-11D4-B804-0050DA76755E}';
  IID_IRobotCmdList: TGUID = '{CE4DE4E4-1114-11D4-B7F6-0050DA76755E}';
  IID_IRobotCmdInfo: TGUID = '{CE4DE4E2-1114-11D4-B7F6-0050DA76755E}';
  CLASS_RobotCmdInfo: TGUID = '{CE4DE4E3-1114-11D4-B7F6-0050DA76755E}';
  CLASS_RobotCmdList: TGUID = '{CE4DE4E5-1114-11D4-B7F6-0050DA76755E}';
  IID_IRobotAddInMngr: TGUID = '{D46F4972-E2C0-11D2-9892-0080C86BE4DF}';
  CLASS_RobotAddInMngr: TGUID = '{D46F4971-E2C0-11D2-9892-0080C86BE4DF}';
  IID_IRConcrReinforceData: TGUID = '{BF48F2C2-5180-11D4-B83E-0050DA76755E}';
  IID_IRConcrReinforceData2: TGUID = '{A31252B6-9163-4CB5-A7C1-ED1AA8CD4EB2}';
  CLASS_RConcrReinforceData: TGUID = '{BF48F2C3-5180-11D4-B83E-0050DA76755E}';
  IID_IRConcrSteelParams: TGUID = '{BF48F2C6-5180-11D4-B83E-0050DA76755E}';
  IID_IRConcrConcreteParams: TGUID = '{BF48F2C4-5180-11D4-B83E-0050DA76755E}';
  IID_IRConcrReinforceDataMain: TGUID = '{97C4C4B5-8367-4E9E-9290-9B2DD0DBAB65}';
  CLASS_RConcrConcreteParams: TGUID = '{BF48F2C5-5180-11D4-B83E-0050DA76755E}';
  CLASS_RConcrSteelParams: TGUID = '{BF48F2C7-5180-11D4-B83E-0050DA76755E}';
  IID_IRConcr_PN84_ReinforceData: TGUID = '{BF48F2C8-5180-11D4-B83E-0050DA76755E}';
  CLASS_RConcr_PN84_ReinforceData: TGUID = '{BF48F2C9-5180-11D4-B83E-0050DA76755E}';
  IID_IRConcr_PN99_ReinforceData: TGUID = '{B72CDD22-5415-11D4-B841-0050DA76755E}';
  CLASS_RConcr_PN99_ReinforceData: TGUID = '{B72CDD23-5415-11D4-B841-0050DA76755E}';
  IID_IRConcr_BAEL_ReinforceData: TGUID = '{086753D2-54C6-11D4-B842-0050DA76755E}';
  CLASS_RConcr_BAEL_ReinforceData: TGUID = '{086753D3-54C6-11D4-B842-0050DA76755E}';
  IID_IRConcr_ACI318_ReinforceData: TGUID = '{50EBB8BA-27A5-47CD-A6D3-7E308C416BDA}';
  CLASS_RConcr_ACI318_ReinforceData: TGUID = '{D99C34E9-2A85-4D2A-9D7C-15C95B791875}';
  IID_IRConcr_ACI318_ConcreteParams: TGUID = '{C0E17140-4D2D-44DE-A1B7-1B9E378264E5}';
  CLASS_RConcr_ACI318_ConcreteParams: TGUID = '{2AC01647-19A6-4A15-9194-1B6528AFA7F1}';
  IID_IRConcr_BS8110_ReinforceData: TGUID = '{4E96DFF9-A86F-42FF-99EE-5DE6074C4ADE}';
  CLASS_RConcr_BS8110_ReinforceData: TGUID = '{80FF7AB8-CAD6-4285-9732-438BD629190D}';
  CLASS_RConcrSlabRequiredReinfCalcParams: TGUID = '{C7E44973-D698-4098-B40F-F623AB09F057}';
  DIID__IRConcrSlabRequiredReinfEngineEvents: TGUID = '{05EA059B-8552-4047-95FC-26E5A566D118}';
  CLASS_RConcrSlabRequiredReinfEngine: TGUID = '{9F76F36A-B15D-4645-B01C-E946288CBEE3}';
  CLASS_RConcrCalcEngine: TGUID = '{E41D0412-C5BC-44EF-8908-B9C616C69858}';
  CLASS_RConcrReinforceDataMain: TGUID = '{42391DAC-578C-4DF8-9FA5-3161F5CF9979}';
  IID_IRConcr_SNIP_ConcreteParams: TGUID = '{B6080B90-B083-47C9-85EF-C53CD569F0AE}';
  CLASS_RConcr_SNIP_ConcreteParams: TGUID = '{537233AB-6F36-4444-900A-49A9DE6F3605}';
  IID_IRConcr_SNIP_ReinforceData: TGUID = '{2AEF7EDA-EFEB-446F-A997-2C8A598A9CD1}';
  CLASS_RConcr_SNIP_ReinforceData: TGUID = '{4F93E68C-F50D-4B38-94E4-B326E9B12291}';
  IID_IRConcr_EC2_ReinforceData: TGUID = '{C5522D66-6F69-447F-A728-E76EF72E106F}';
  CLASS_RConcr_EC2_ReinforceData: TGUID = '{93F2B005-94A3-42BE-9FB9-B49C026A8151}';
  IID_IRConcr_IS2000_ReinforceData: TGUID = '{1386EB35-ABF0-410F-85C1-D84721771947}';
  CLASS_RConcr_IS2000_ReinforceData: TGUID = '{7DE039EC-8A80-452F-B8AA-6A12031BD980}';
  IID_IRConcrColumnBucklingModel: TGUID = '{00FD1B34-442B-4CE4-A927-C33E160C033A}';
  CLASS_RConcrColumnBucklingModel: TGUID = '{AC092A07-279A-40A7-A647-3552EB5FEDA5}';
  IID_IRConcrColumnLoads: TGUID = '{CAB19F3A-ABFA-43C5-8593-578D34FE0AB3}';
  CLASS_RConcrColumnLoads: TGUID = '{A5DEC2F1-07B1-4E5F-8A0E-C94411FB5735}';
  IID_IRConcrColumnLoad: TGUID = '{E356FA4B-B5D4-49D7-9F9D-736F84338E46}';
  CLASS_RConcrColumnLoad: TGUID = '{2EB2895D-9FBC-4FB6-85CC-A4F5DA1647EB}';
  IID_IRConcrCodeReport: TGUID = '{9644D4F2-4D45-4EDB-A42A-2051FE50AB76}';
  CLASS_RConcrCodeReport: TGUID = '{9793C0D8-9947-4F8D-A67C-4C355E5FADC5}';
  IID_IRobotApplication: TGUID = '{F787078F-CDE5-11D1-8FF1-00A02447BAAE}';
  CLASS_RobotApplication: TGUID = '{F7870790-CDE5-11D1-8FF1-00A02447BAAE}';
  IID_IRobotAddIn: TGUID = '{7BEC0EB0-E2B9-11D2-9892-0080C86BE4DF}';
  IID_IRobotProtectionInfo: TGUID = '{D2CE81B2-944E-11D4-B866-0050DA76755E}';
  CLASS_RobotProtectionInfo: TGUID = '{D2CE81B3-944E-11D4-B866-0050DA76755E}';
  IID_IRobotSTRFileAnalyser: TGUID = '{7BA1C5F2-1DF5-11D5-B8E4-FFFFFF000000}';
  IID_IRConcrBarDiameters: TGUID = '{4FE840FB-0442-41DB-9A23-E40FD2065C36}';
  IID_IRConcrSteelStrengths: TGUID = '{527EE047-39BC-4AEB-9920-BCC6651C34DB}';
  IID_IRConcrConcrete: TGUID = '{E3C964B5-812F-4C09-9364-6A2360D9E0DB}';
  IID_IRConcrSteelNames: TGUID = '{D70B7781-D98A-4B9E-8219-CB8EBA274ECE}';
  IID_IRConcrSteel: TGUID = '{87695661-932C-4B09-9FCF-8F32C4333127}';
  IID_IRConcrReinforcingBar: TGUID = '{309536A1-19D7-4CA4-84D1-70AC8E46AC8B}';
  IID_IRConcrReinforcingBars: TGUID = '{A35362BF-6D9D-43E1-A471-062D863EE78C}';
  IID_IRConcrReinforcement: TGUID = '{E46B8023-B608-4FCC-8D6B-8875F459240B}';
  IID_IRConcrCodeBeam: TGUID = '{D6CB5641-9A96-416B-983E-8934F0FD64E6}';
  IID_IRConcrBeam: TGUID = '{4B424584-90CA-4F0B-B6E7-49D9886CEE55}';
  IID_IRConcrBeamGeometry: TGUID = '{12F97AEA-51CA-4EA0-849B-9E2D396041CC}';
  IID_IRConcrBeamSpan: TGUID = '{A00B6B2A-EB53-42DA-A938-61FE216C2D84}';
  IID_IRConcrBeamSegment: TGUID = '{293CF336-DD11-4F08-ACF7-5A2C9CEFBC1C}';
  IID_IRConcrBeamSupport: TGUID = '{8B57AD3F-2FED-4AF2-B7A4-1E0BA1E5A182}';
  IID_IRConcrBeamImportOptions: TGUID = '{0A343F47-F446-4F4F-9DF0-53B3884A68F9}';
  IID_IRConcrBeamCalcOptions: TGUID = '{C63F44E2-2A12-4227-8B60-EAEF0E276B5E}';
  IID_IRConcrBeamPatternOptions: TGUID = '{23F11DBA-2977-4945-9C14-3E6779D66B49}';
  IID_IRConcrBeamPointLoad: TGUID = '{75EF6EC6-077E-4BF7-A0CE-F9F3E7E59A36}';
  IID_IRConcrBeamSpanNumbers: TGUID = '{C46AC902-D6B0-47E8-84C4-53F50A85055D}';
  IID_IRConcrBeamLinearLoad: TGUID = '{4C56313B-32C8-476B-BE01-24E0F03348FA}';
  IID_IRConcrBeamStoryOptions: TGUID = '{E41547ED-F318-4EB5-9D19-475328CAE0EA}';
  IID_IRConcrCodeColumn: TGUID = '{8BC8E445-2D93-4715-BCD7-2BDE8EF9AC12}';
  IID_IRConcrColumn: TGUID = '{66260BA3-10A5-4848-A6AB-472700DD6205}';
  IID_IRConcrColumnGeometry: TGUID = '{E7D6841B-68B1-45D3-9FBD-6552AAA00C1A}';
  IID_IRConcrColumnImportOptions: TGUID = '{E993C0F3-4150-423C-916F-C9184A03A7BC}';
  IID_IRConcrColumnCalcOptions: TGUID = '{ADA501BC-AE18-42B7-8FD9-E913657EACE2}';
  IID_IRConcrColumnPatternOptions: TGUID = '{2F37DF9D-C689-43B5-B956-CF6AD8E76E9F}';
  IID_IRConcrCodeService: TGUID = '{3E93FD0B-8487-4079-A640-09E02CFE645F}';
  IID_IRConcrContinuousFootingSegment: TGUID = '{DCA74C6B-E767-4A05-8EA6-AE92B2EEC138}';
  IID_IRConcrContinuousFootingSupport: TGUID = '{38FF49BA-B18D-4700-9EA8-AD4258716D04}';
  IID_IRConcrContinuousFootingSpan: TGUID = '{0617F69F-EB54-4B1A-AEA7-C3D717AA8CD3}';
  IID_IRConcrContinuousFootingGeometry: TGUID = '{E082A95B-34E2-4AFA-8CC2-A24879813B98}';
  IID_IRConcrContinuousFooting: TGUID = '{B7369965-1F22-4D86-BD27-6A5CFBB65D42}';
  IID_IRConcrFootingPattern: TGUID = '{09C6D6D1-B927-42B9-AF10-0F94D27BC977}';
  IID_IRConcrFootingCalculationOptions: TGUID = '{3E43EBEC-5F77-4042-AB6D-2975CB911F51}';
  IID_IRConcrFootingResults: TGUID = '{F0B13704-0E3C-4E48-9744-56D66E9CB1E4}';
  IID_IRConcrFootingLoads: TGUID = '{968D3064-3A73-4196-96CE-EE22EE316691}';
  IID_IRConcrFootingGround: TGUID = '{7C346240-5BDC-4DF6-B90E-4EA310E49311}';
  IID_IRConcrFootingGeometry: TGUID = '{FE16239E-CBF0-4F1F-9A5F-57F210043A6D}';
  IID_IRConcrFooting: TGUID = '{15AD9A74-EF28-41AB-9D11-2FE487FB5EA1}';
  IID_IRConcrDrawingBarGroup: TGUID = '{33BC3B5D-9A66-4275-89A1-F0B1F2F86188}';
  IID_IRConcrDrawing: TGUID = '{36B4D700-9CF3-4466-915A-497F39F5FA4A}';
  IID_IRConcrSlabWizard: TGUID = '{B23F8CBE-E83A-48DC-AC2A-3D2208C0E007}';
  IID_IRConcrSlabPatternOptions: TGUID = '{1E1A36A2-A178-40A6-A375-DC6071FF6CE4}';
  IID_IRConcrSlabGeometry: TGUID = '{EDBD46B6-C73C-4AE4-9161-0B5B0B480A29}';
  IID_IRConcrSlabCalculationOptions: TGUID = '{81BFF62A-F907-44F4-9FF3-DE8045503531}';
  IID_IRConcrSlab: TGUID = '{EB4A9573-F984-4D3D-B823-114AAE0EB29F}';
  IID_IRConcrWallOpening: TGUID = '{47B0E01C-5C26-475D-983D-88B93666E6B5}';
  IID_IRConcrWallOpenings: TGUID = '{520861E8-9746-479C-817B-07D7E36E6E2B}';
  IID_IRConcrWallGeometry: TGUID = '{20039A26-E005-45C3-A6EB-538C2E454A00}';
  IID_IRConcrWall: TGUID = '{B2646B54-7116-422C-9CED-8014720EA4CB}';
  IID_IRConcrDeepBeamGeometry: TGUID = '{17224138-D65D-4206-88C5-2B674A92AED8}';
  IID_IRConcrDeepBeam: TGUID = '{C41A7A3F-B5A1-4903-8928-D34BEB966B9A}';
  CLASS_RobotAppSTRAnalyser: TGUID = '{B20B4B77-5FB6-4009-ACFA-1EF55000848F}';

// *********************************************************************//
// Declaration of Enumerations defined in Type Library                    
// *********************************************************************//
// Constants for enum IRobotCaseType
type
  IRobotCaseType = TOleEnum;
const
  I_CT_SIMPLE = $00000000;
  I_CT_COMBINATION = $00000001;
  I_CT_CODE_COMBINATION = $00000002;
  I_CT_MOBILE = $00000003;

// Constants for enum IRobotCaseNature
type
  IRobotCaseNature = TOleEnum;
const
  I_CN_PERMANENT = $00000000;
  I_CN_EXPLOATATION = $00000001;
  I_CN_WIND = $00000002;
  I_CN_SNOW = $00000003;
  I_CN_TEMPERATURE = $00000004;
  I_CN_ACCIDENTAL = $00000005;
  I_CN_SEISMIC = $00000006;

// Constants for enum IRobotCaseAnalizeType
type
  IRobotCaseAnalizeType = TOleEnum;
const
  I_CAT_COMB_NONLINEAR_INCREMENTAL = $FFFFFFFB;
  I_CAT_COMB_BUCKLING = $FFFFFFFC;
  I_CAT_COMB_NONLINEAR_BUCKLING = $FFFFFFFD;
  I_CAT_COMB_INCREMENTAL = $FFFFFFFE;
  I_CAT_COMB_NONLINEAR = $FFFFFFFF;
  I_CAT_COMB = $00000000;
  I_CAT_STATIC_LINEAR = $00000001;
  I_CAT_STATIC_NONLINEAR = $00000002;
  I_CAT_STATIC_INCREMENTAL = $00000003;
  I_CAT_STATIC_FLAMBEMENT = $00000004;
  I_CAT_STATIC_LINEAR_AUXILIARY = $00000005;
  I_CAT_STATIC_NONLINEAR_INCREMENTAL = $00000006;
  I_CAT_STATIC_NONLINEAR_FLAMBEMENT = $00000007;
  I_CAT_STATIC_NONLINEAR_MODAL = $00000008;
  I_CAT_DYNAMIC_MODAL = $0000000B;
  I_CAT_DYNAMIC_SPECTRAL = $0000000C;
  I_CAT_DYNAMIC_SEISMIC = $0000000D;
  I_CAT_DYNAMIC_HARMONIC = $0000000E;
  I_CAT_TEMPORAR = $00000014;
  I_CAT_MOBILE_MAIN = $0000001E;
  I_CAT_MOBILE_DERIVED = $0000001F;
  I_CAT_NULL = $00000063;
  I_CAT_COMB_CODE = $FFFFFFF4;
  I_CAT_STATIC_BUCKLING = $00000004;
  I_CAT_STATIC_NONLINEAR_BUCKLING = $00000007;
  I_CAT_DYNAMIC_NONLINEAR_MODAL_WITH_STATIC_FORCE = $00000008;
  I_CAT_TIME_HISTORY = $00000014;
  I_CAT_PUSH_OVER = $00000019;
  I_CAT_DYNAMIC_FRF = $0000000F;
  I_CAT_DYNAMIC_FOOTFALL = $00000010;
  I_CAT_STATIC_ELF_SEISMIC = $00000009;

// Constants for enum IRobotCombinationType
type
  IRobotCombinationType = TOleEnum;
const
  I_CBT_EFF = $00000000;
  I_CBT_DEP = $00000001;
  I_CBT_ACC = $00000002;
  I_CBT_SPC = $00000003;
  I_CBT_ULS = $00000000;
  I_CBT_SLS = $00000001;
  I_CBT_ALS = $00000002;
  I_CBT_SLS_EC_FRE = $00000004;
  I_CBT_SLS_EC_QPR = $00000005;
  I_CBT_SLS_EC_RAR = $00000006;

// Constants for enum IRobotModeCombinationType
type
  IRobotModeCombinationType = TOleEnum;
const
  I_MCT_NONE = $FFFFFFFF;
  I_MCT_SRSS = $00000000;
  I_MCT_CQC = $00000001;
  I_MCT_10P = $00000002;
  I_MCT_2SM = $00000003;
  I_MCT_ALL = $FFFFFFFE;

// Constants for enum IRobotCodeCmbFlag
type
  IRobotCodeCmbFlag = TOleEnum;
const
  I_CCF_MAIN = $00000003;
  I_CCF_MAX = $00000000;
  I_CCF_MIN = $00000001;

// Constants for enum IRobotMobileCaseFlag
type
  IRobotMobileCaseFlag = TOleEnum;
const
  I_MCF_MAIN = $00000000;
  I_MCF_MAX = $00000001;
  I_MCF_MIN = $00000002;

// Constants for enum IRobotMobileCaseApplicationPlaneType
type
  IRobotMobileCaseApplicationPlaneType = TOleEnum;
const
  I_MCAPT_AUTOMATIC = $00000001;
  I_MCAPT_SELECTION = $00000002;

// Constants for enum IRobotLoadRecordType
type
  IRobotLoadRecordType = TOleEnum;
const
  I_LRT_NODE_FORCE = $00000000;
  I_LRT_NODE_DISPLACEMENT = $00000001;
  I_LRT_BAR_DILATATION = $00000002;
  I_LRT_BAR_FORCE_CONCENTRATED = $00000003;
  I_LRT_BAR_MOMENT_DISTRIBUTED = $00000004;
  I_LRT_BAR_UNIFORM = $00000005;
  I_LRT_BAR_TRAPEZOIDALE = $00000006;
  I_LRT_BAR_DEAD = $00000007;
  I_LRT_BAR_THERMAL = $00000008;
  I_LRT_LINEAR = $00000015;
  I_LRT_LINEAR_3D = $00000013;
  I_LRT_NODE_AUXILIARY = $00000014;
  I_LRT_POINT_AUXILIARY = $00000017;
  I_LRT_IN_3_POINTS = $00000016;
  I_LRT_PRESSURE = $00000018;
  I_LRT_THERMAL_IN_3_POINTS = $00000019;
  I_LRT_IN_CONTOUR = $0000001C;
  I_LRT_NODE_FORCE_MASS = $0000001E;
  I_LRT_BAR_FORCE_CONCENTRATED_MASS = $00000021;
  I_LRT_BAR_UNIFORM_MASS = $00000023;
  I_LRT_BAR_TRAPEZOIDALE_MASS = $00000024;
  I_LRT_MASS_ACTIVATION = $00000027;
  I_LRT_SPECTRUM_VALUE = $00000028;
  I_LRT_UNIFORM = $0000001A;
  I_LRT_THERMAL = $00000008;
  I_LRT_NODE_FORCE_IN_POINT = $00000017;
  I_LRT_LINEAR_ON_EDGES = $00000045;
  I_LRT_DEAD = $00000007;
  I_LRT_SURFACE_ON_OBJECT = $00000046;
  I_LRT_MOBILE_POINT_FORCE = $00000035;
  I_LRT_MOBILE_DISTRIBUTED = $00000037;
  I_LRT_NODE_VELOCITY = $0000000A;
  I_LRT_NODE_ACCELERATION = $0000000B;

// Constants for enum IRobotNodeForceRecordValues
type
  IRobotNodeForceRecordValues = TOleEnum;
const
  I_NFRV_FX = $00000000;
  I_NFRV_FY = $00000001;
  I_NFRV_FZ = $00000002;
  I_NFRV_CX = $00000003;
  I_NFRV_CY = $00000004;
  I_NFRV_CZ = $00000005;
  I_NFRV_ALPHA = $00000008;
  I_NFRV_BETA = $00000009;
  I_NFRV_GAMMA = $0000000A;

// Constants for enum IRobotNodeDisplacementRecordValues
type
  IRobotNodeDisplacementRecordValues = TOleEnum;
const
  I_NDRV_UX = $00000000;
  I_NDRV_UY = $00000001;
  I_NDRV_UZ = $00000002;
  I_NDRV_RX = $00000003;
  I_NDRV_RY = $00000004;
  I_NDRV_RZ = $00000005;
  I_NDRV_ALPHA = $00000008;
  I_NDRV_BETA = $00000009;
  I_NDRV_GAMMA = $0000000A;

// Constants for enum IRobotNodeAuxiliaryRecordValues
type
  IRobotNodeAuxiliaryRecordValues = TOleEnum;
const
  I_NARV_FX = $00000000;
  I_NARV_FY = $00000001;
  I_NARV_FZ = $00000002;
  I_NARV_CX = $00000003;
  I_NARV_CY = $00000004;
  I_NARV_CZ = $00000005;
  I_NARV_NR = $00000006;
  I_NARV_ALPHA = $00000008;
  I_NARV_BETA = $00000009;
  I_NARV_GAMMA = $0000000A;

// Constants for enum IRobotBarDilatationRecordValues
type
  IRobotBarDilatationRecordValues = TOleEnum;
const
  I_BDRV_DIL = $00000000;
  I_BDRV_REL = $0000000D;

// Constants for enum IRobotBarForceConcentrateRecordValues
type
  IRobotBarForceConcentrateRecordValues = TOleEnum;
const
  I_BFCRV_FX = $00000000;
  I_BFCRV_FY = $00000001;
  I_BFCRV_FZ = $00000002;
  I_BFCRV_CX = $00000003;
  I_BFCRV_CY = $00000004;
  I_BFCRV_CZ = $00000005;
  I_BFCRV_X = $00000006;
  I_BFCRV_ALPHA = $00000008;
  I_BFCRV_BETA = $00000009;
  I_BFCRV_GAMMA = $0000000A;
  I_BFCRV_LOC = $0000000B;
  I_BFCRV_REL = $0000000D;
  I_BFCRV_OFFSET_Y = $00000015;
  I_BFCRV_OFFSET_Z = $00000016;
  I_BFCRV_GENERATE_CALC_NODE = $0000000C;

// Constants for enum IRobotBarMomentDistributedRecordValues
type
  IRobotBarMomentDistributedRecordValues = TOleEnum;
const
  I_BMDRV_MX = $00000000;
  I_BMDRV_MY = $00000001;
  I_BMDRV_MZ = $00000002;
  I_BMDRV_ALPHA = $00000008;
  I_BMDRV_BETA = $00000009;
  I_BMDRV_GAMMA = $0000000A;

// Constants for enum IRobotBarUniformRecordValues
type
  IRobotBarUniformRecordValues = TOleEnum;
const
  I_BURV_PX = $00000000;
  I_BURV_PY = $00000001;
  I_BURV_PZ = $00000002;
  I_BURV_ALPHA = $00000008;
  I_BURV_BETA = $00000009;
  I_BURV_GAMMA = $0000000A;
  I_BURV_LOCAL = $0000000B;
  I_BURV_PROJECTION = $0000000C;
  I_BURV_RELATIVE = $0000000D;
  I_BURV_OFFSET_Y = $00000015;
  I_BURV_OFFSET_Z = $00000016;

// Constants for enum IRobotBarTrapezoidaleRecordValues
type
  IRobotBarTrapezoidaleRecordValues = TOleEnum;
const
  I_BTRV_PX2 = $00000000;
  I_BTRV_PY2 = $00000001;
  I_BTRV_PZ2 = $00000002;
  I_BTRV_PX1 = $00000003;
  I_BTRV_PY1 = $00000004;
  I_BTRV_PZ1 = $00000005;
  I_BTRV_X2 = $00000006;
  I_BTRV_X1 = $00000007;
  I_BTRV_ALPHA = $00000008;
  I_BTRV_BETA = $00000009;
  I_BTRV_GAMMA = $0000000A;
  I_BTRV_LOCAL = $0000000B;
  I_BTRV_PROJECTION = $0000000C;
  I_BTRV_RELATIVE = $0000000D;

// Constants for enum IRobotBarThermalRecordValues
type
  IRobotBarThermalRecordValues = TOleEnum;
const
  I_BTRV_TX = $00000000;
  I_BTRV_TY = $00000001;
  I_BTRV_TZ = $00000002;

// Constants for enum IRobotBarDeadRecordValues
type
  IRobotBarDeadRecordValues = TOleEnum;
const
  I_BDRV_X = $00000000;
  I_BDRV_Y = $00000001;
  I_BDRV_Z = $00000002;
  I_BDRV_ENTIRE_STRUCTURE = $0000000F;

// Constants for enum IRobotPointAuxiliaryRecordValues
type
  IRobotPointAuxiliaryRecordValues = TOleEnum;
const
  I_PARV_FX = $00000000;
  I_PARV_FY = $00000001;
  I_PARV_FZ = $00000002;
  I_PARV_CX = $00000003;
  I_PARV_CY = $00000004;
  I_PARV_CZ = $00000005;
  I_PARV_ALPHA = $00000008;
  I_PARV_BETA = $00000009;
  I_PARV_GAMMA = $0000000A;
  I_PARV_X = $0000000B;
  I_PARV_Y = $0000000C;
  I_PARV_Z = $0000000D;

// Constants for enum IRobotIn3PointsRecordValues
type
  IRobotIn3PointsRecordValues = TOleEnum;
const
  I_3PRV_PX1 = $00000000;
  I_3PRV_PY1 = $00000001;
  I_3PRV_PZ1 = $00000002;
  I_3PRV_PX2 = $00000003;
  I_3PRV_PY2 = $00000004;
  I_3PRV_PZ2 = $00000005;
  I_3PRV_PX3 = $00000006;
  I_3PRV_PY3 = $00000007;
  I_3PRV_PZ3 = $00000008;
  I_3PRV_PROJECTION = $0000000C;
  I_3PRV_N1 = $00000009;
  I_3PRV_N2 = $0000000A;
  I_3PRV_N3 = $0000000B;
  I_3PRV_LOCAL_SYSTEM = $0000000D;

// Constants for enum _eRobotPressureRecordValues
type
  _eRobotPressureRecordValues = TOleEnum;
const
  I_PRV_GAMMA = $00000001;

// Constants for enum IRobotPressureRecordValues
type
  IRobotPressureRecordValues = TOleEnum;
const
  I_PRV_P = $00000000;
  I_PRV_RO = $00000001;
  I_PRV_H = $00000002;
  I_PRV_DIRECTION = $00000006;

// Constants for enum IRobotLinearRecordValues
type
  IRobotLinearRecordValues = TOleEnum;
const
  I_LRV_MX1 = $00000000;
  I_LRV_MX2 = $00000001;
  I_LRV_PZ1 = $00000002;
  I_LRV_PZ2 = $00000003;
  I_LRV_MY1 = $00000004;
  I_LRV_MY2 = $00000005;
  I_LRV_NODE_1 = $00000006;
  I_LRV_NODE_2 = $00000007;
  I_LRV_LOCAL = $0000000B;

// Constants for enum IRobotMassActivationRecordValues
type
  IRobotMassActivationRecordValues = TOleEnum;
const
  I_MARV_INPUT_DIR_X = $00000000;
  I_MARV_INPUT_DIR_Y = $00000001;
  I_MARV_INPUT_DIR_Z = $00000002;
  I_MARV_FACTOR = $00000003;
  I_MARV_CASE_NUM = $00000004;
  I_MARV_ACTIVATION_DIR = $00000006;
  I_MARV_SIGN = $00000007;

// Constants for enum IRobotLinear3DRecordValues
type
  IRobotLinear3DRecordValues = TOleEnum;
const
  I_L3DRV_PX1 = $00000000;
  I_L3DRV_PY1 = $00000001;
  I_L3DRV_PZ1 = $00000002;
  I_L3DRV_MX1 = $00000003;
  I_L3DRV_MY1 = $00000004;
  I_L3DRV_MZ1 = $00000005;
  I_L3DRV_PX2 = $00000006;
  I_L3DRV_PY2 = $00000007;
  I_L3DRV_PZ2 = $00000008;
  I_L3DRV_MX2 = $00000009;
  I_L3DRV_MY2 = $0000000A;
  I_L3DRV_MZ2 = $0000000B;
  I_L3DRV_LOCAL = $0000000D;
  I_L3DRV_GAMMA = $0000000F;

// Constants for enum IRobotThermalIn3PointsRecordValues
type
  IRobotThermalIn3PointsRecordValues = TOleEnum;
const
  I_3PRV_TX1 = $00000000;
  I_3PRV_TZ1 = $00000002;
  I_3PRV_TX2 = $00000003;
  I_3PRV_TZ2 = $00000005;
  I_3PRV_TX3 = $00000006;
  I_3PRV_TZ3 = $00000008;

// Constants for enum IRobotInContourRecordValues
type
  IRobotInContourRecordValues = TOleEnum;
const
  I_ICRV_PX1 = $00000000;
  I_ICRV_PY1 = $00000001;
  I_ICRV_PZ1 = $00000002;
  I_ICRV_PX2 = $00000003;
  I_ICRV_PY2 = $00000004;
  I_ICRV_PZ2 = $00000005;
  I_ICRV_PX3 = $00000006;
  I_ICRV_PY3 = $00000007;
  I_ICRV_PZ3 = $00000008;
  I_ICRV_PROJECTION = $0000000C;
  I_ICRV_NPOINTS = $0000000D;
  I_ICRV_LOCAL = $0000000F;
  I_ICRV_AUTO_DETECT_OBJECTS = $FFFFFFFF;

// Constants for enum IRobotUniformRecordValues
type
  IRobotUniformRecordValues = TOleEnum;
const
  I_URV_PX = $00000000;
  I_URV_PY = $00000001;
  I_URV_PZ = $00000002;
  I_URV_LOCAL_SYSTEM = $0000000B;
  I_URV_PROJECTED = $0000000C;
  I_URV_RELATIVE = $0000000D;

// Constants for enum _eRobotThermalRecordValues
type
  _eRobotThermalRecordValues = TOleEnum;
const
  I_3PRV_TX = $00000000;
  I_3PRV_TZ = $00000002;

// Constants for enum IRobotThermalRecordValues
type
  IRobotThermalRecordValues = TOleEnum;
const
  I_TRV_T_1 = $00000000;
  I_TRV_GRADIENT_1 = $00000002;
  I_TRV_T_2 = $00000003;
  I_TRV_GRADIENT_2 = $00000005;
  I_TRV_T_3 = $00000006;
  I_TRV_GRADIENT_3 = $00000008;

// Constants for enum IRobotNodeForceInPointRecordValues
type
  IRobotNodeForceInPointRecordValues = TOleEnum;
const
  I_NFIPRV_FX = $00000000;
  I_NFIPRV_FY = $00000001;
  I_NFIPRV_FZ = $00000002;
  I_NFIPRV_MX = $00000003;
  I_NFIPRV_MY = $00000004;
  I_NFIPRV_MZ = $00000005;
  I_NFIPRV_ALPHA = $00000008;
  I_NFIPRV_BETA = $00000009;
  I_NFIPRV_GAMMA = $0000000A;
  I_NFIPRV_POINT_X = $0000000B;
  I_NFIPRV_POINT_Y = $0000000C;
  I_NFIPRV_POINT_Z = $0000000D;

// Constants for enum IRobotLinearOnEdgesRecordValues
type
  IRobotLinearOnEdgesRecordValues = TOleEnum;
const
  I_LOERV_PX = $00000000;
  I_LOERV_PY = $00000001;
  I_LOERV_PZ = $00000002;
  I_LOERV_MX = $00000003;
  I_LOERV_MY = $00000004;
  I_LOERV_MZ = $00000005;
  I_LOERV_GAMMA = $00000006;
  I_LOERV_LOCAL_SYSTEM = $0000000B;

// Constants for enum IRobotDeadRecordValues
type
  IRobotDeadRecordValues = TOleEnum;
const
  I_DRV_X = $00000000;
  I_DRV_Y = $00000001;
  I_DRV_Z = $00000002;
  I_DRV_ENTIRE_STRUCTURE = $0000000F;
  I_DRV_COEFF = $00000003;

// Constants for enum IRobotNodeVelocityRecordValues
type
  IRobotNodeVelocityRecordValues = TOleEnum;
const
  I_NVRV_UX = $00000000;
  I_NVRV_UY = $00000001;
  I_NVRV_UZ = $00000002;
  I_NVRV_ALPHA = $00000008;
  I_NVRV_BETA = $00000009;
  I_NVRV_GAMMA = $0000000A;

// Constants for enum IRobotNodeAccelerationRecordValues
type
  IRobotNodeAccelerationRecordValues = TOleEnum;
const
  I_NACRV_UX = $00000000;
  I_NACRV_UY = $00000001;
  I_NACRV_UZ = $00000002;
  I_NACRV_ALPHA = $00000008;
  I_NACRV_BETA = $00000009;
  I_NACRV_GAMMA = $0000000A;

// Constants for enum IRobotBarEndReleaseValue
type
  IRobotBarEndReleaseValue = TOleEnum;
const
  I_BERV_NONE = $00000000;
  I_BERV_STD = $00000001;
  I_BERV_PLUS = $00000002;
  I_BERV_MINUS = $00000003;
  I_BERV_FIXED = $00000001;
  I_BERV_ELASTIC = $00000004;
  I_BERV_ELASTIC_PLUS = $00000005;
  I_BERV_ELASTIC_MINUS = $00000006;
  I_BERV_NONLINEAR = $00000007;
  I_BERV_ELASTIC_REDUCED = $00000008;
  I_BERV_ELASTIC_REDUCED_PLUS = $00000009;
  I_BERV_ELASTIC_REDUCED_MINUS = $0000000A;

// Constants for enum IRobotBarSectionShapeType
type
  IRobotBarSectionShapeType = TOleEnum;
const
  I_BSST_UNKNOWN = $00000000;
  I_BSST_CAE = $00000001;
  I_BSST_CAEP = $00000002;
  I_BSST_CAI = $00000003;
  I_BSST_CAIP = $00000004;
  I_BSST_DCEC = $00000005;
  I_BSST_DCED = $00000006;
  I_BSST_DCEP = $00000007;
  I_BSST_DCIG = $00000008;
  I_BSST_DCIP = $00000009;
  I_BSST_HEA = $0000000A;
  I_BSST_HEAA = $0000000B;
  I_BSST_HEB = $0000000C;
  I_BSST_HEC = $0000000D;
  I_BSST_HEM = $0000000E;
  I_BSST_HER = $0000000F;
  I_BSST_HHEA = $00000010;
  I_BSST_HHEB = $00000011;
  I_BSST_HHEM = $00000012;
  I_BSST_IIPE = $00000013;
  I_BSST_IPE = $00000014;
  I_BSST_IPEA = $00000015;
  I_BSST_IPEO = $00000016;
  I_BSST_IPER = $00000017;
  I_BSST_IPEV = $00000018;
  I_BSST_IPN = $00000019;
  I_BSST_MHEA = $0000001A;
  I_BSST_MHEB = $0000001B;
  I_BSST_MHEM = $0000001C;
  I_BSST_MIPE = $0000001D;
  I_BSST_PRS = $0000001E;
  I_BSST_TCAR = $0000001F;
  I_BSST_TEAE = $00000020;
  I_BSST_TEAI = $00000021;
  I_BSST_THEX = $00000022;
  I_BSST_TREC = $00000023;
  I_BSST_TRON = $00000024;
  I_BSST_UAP = $00000025;
  I_BSST_UPN = $00000026;
  I_BSST_UUAP = $00000027;
  I_BSST_UUPN = $00000028;
  I_BSST_FRTG = $00000029;
  I_BSST_UPAF = $0000002A;
  I_BSST_BOX = $0000005B;
  I_BSST_RECT = $0000005C;
  I_BSST_TUBE = $0000005D;
  I_BSST_ISYM = $0000005E;
  I_BSST_INSYM = $0000005F;
  I_BSST_TUSER = $00000060;
  I_BSST_CUSER = $00000061;
  I_BSST_TBETC = $00000062;
  I_BSST_WELD_CROSS = $000000C9;
  I_BSST_DRECT = $00000063;
  I_BSST_COLD_SIGMA1 = $000003E9;
  I_BSST_COLD_SIGMA2 = $000003EA;
  I_BSST_COLD_ZED1 = $000003EB;
  I_BSST_COLD_U = $000003EC;
  I_BSST_COLD_CE1 = $000003ED;
  I_BSST_COLD_ANGL = $000003EE;
  I_BSST_COLD_OMEGA = $000003EF;
  I_BSST_COLD_SO1 = $000003F0;
  I_BSST_COLD_RIVE1 = $000003F1;
  I_BSST_USER_BOX = $0000005B;
  I_BSST_USER_RECT = $0000005C;
  I_BSST_USER_TUBE = $0000005D;
  I_BSST_USER_I_BISYM = $0000005E;
  I_BSST_USER_I_MONOSYM = $0000005F;
  I_BSST_USER_T_SHAPE = $00000060;
  I_BSST_USER_C_SHAPE = $00000061;
  I_BSST_USER_CROSS = $000000C9;
  I_BSST_WOOD_RECT = $00000029;
  I_BSST_WOOD_DRECT = $00000063;
  I_BSST_RECT_FILLED = $0000002B;
  I_BSST_CIRC_FILLED = $0000002C;
  I_BSST_CONCR_COL_R = $FFFFFF94;
  I_BSST_CONCR_COL_T = $FFFFFF95;
  I_BSST_CONCR_COL_L = $FFFFFF96;
  I_BSST_CONCR_COL_Z = $FFFFFF97;
  I_BSST_CONCR_COL_P = $FFFFFF98;
  I_BSST_CONCR_COL_C = $FFFFFF99;
  I_BSST_CONCR_COL_CH = $FFFFFF9A;
  I_BSST_CONCR_COL_CQ = $FFFFFF9B;
  I_BSST_CONCR_BEAM_RECT = $FFFFFFFD;
  I_BSST_CONCR_BEAM_T = $FFFFFFFE;
  I_BSST_CONCR_BEAM = $FFFFFFFF;
  I_BSST_COMP_2C_FACE = $0000044D;
  I_BSST_COMP_2C_BACK = $0000044E;
  I_BSST_COMP_2I = $0000044F;
  I_BSST_COMP_CI = $00000450;
  I_BSST_COMP_2LI = $00000451;
  I_BSST_COMP_4L_FACE = $00000452;
  I_BSST_COMP_4L_BACK = $00000453;
  I_BSST_COMP_2L_SHORT = $00000454;
  I_BSST_COMP_2L_LONG = $00000455;
  I_BSST_COMP_2L_CROSS = $00000456;
  I_BSST_USER_BOX_2 = $00000066;
  I_BSST_CCL = $0000002D;
  I_BSST_URND = $0000002E;
  I_BSST_TRND = $0000002F;
  I_BSST_CUAP = $00000030;
  I_BSST_WOOD_CIRC = $00000064;
  I_BSST_USER_CIRC_FILLED = $00000065;
  I_BSST_USER_POLYGONAL = $00000067;
  I_BSST_COLD_C_PLUS = $000003F2;
  I_BSST_COLD_SIGMA_SL = $000003F3;
  I_BSST_COLD_SIGMA = $000003F4;
  I_BSST_COLD_Z = $000003F5;
  I_BSST_COLD_L_LIPS = $000003F6;
  I_BSST_COLD_Z_ROT = $000003F7;
  I_BSST_COMP_2L_FACE_SHORT = $00000457;
  I_BSST_COMP_2L_FACE_LONG = $00000458;
  I_BSST_COMP_CI_BACK = $00000459;
  I_BSST_COMP_2C_FACE_WELD = $000004B1;
  I_BSST_COMP_2C_BACK_WELD = $000004B2;
  I_BSST_COMP_2I_WELD = $000004B3;
  I_BSST_COMP_CI_WELD = $000004B4;
  I_BSST_COMP_2LI_WELD = $000004B5;
  I_BSST_COMP_4L_FACE_WELD = $000004B6;
  I_BSST_COMP_4L_BACK_WELD = $000004B7;
  I_BSST_COMP_2L_SHORT_WELD = $000004B8;
  I_BSST_COMP_2L_LONG_WELD = $000004B9;
  I_BSST_COMP_2L_CROSS_WELD = $000004BA;
  I_BSST_COMP_2L_FACE_SHORT_WELD = $000004BB;
  I_BSST_COMP_2L_FACE_LONG_WELD = $000004BC;
  I_BSST_COMP_CI_BACK_WELD = $000004BD;
  I_BSST_SPEC_CORRUGATED_WEB = $00000068;
  I_BSST_SPEC_CASTELLATED_WEB_HEXAGONAL_OPENINGS = $00000032;
  I_BSST_SPEC_CASTELLATED_WEB_HEXAGONAL_OPENINGS_SHIFTED = $00000034;
  I_BSST_SPEC_CASTELLATED_WEB_ROUND_OPENINGS = $00000033;
  I_BSST_CONCR_BEAM_I = $FFFFFFFC;
  I_BSST_SPEC_SFB = $00000035;
  I_BSST_SPEC_IFBA = $00000036;
  I_BSST_SPEC_IFBB = $00000037;
  I_BSST_JOIST_K = $000001F4;
  I_BSST_JOIST_LH = $000001F5;
  I_BSST_JOIST_KCS = $000001F6;
  I_BSST_JOIST_DLH = $000001F7;
  I_BSST_JOIST_SLH = $000001F8;
  I_BSST_USER_BOX_3 = $00000069;
  I_BSST_JOIST_G = $000001FE;
  I_BSST_JOIST_VG = $000001FF;
  I_BSST_JOIST_BG = $00000200;

// Constants for enum IRobotBarSectionDataValue
type
  IRobotBarSectionDataValue = TOleEnum;
const
  I_BSDV_AX = $00000000;
  I_BSDV_AY = $00000001;
  I_BSDV_AZ = $00000002;
  I_BSDV_IX = $00000003;
  I_BSDV_IY = $00000004;
  I_BSDV_IZ = $00000005;
  I_BSDV_VY = $00000006;
  I_BSDV_VPY = $00000007;
  I_BSDV_VZ = $00000008;
  I_BSDV_VPZ = $00000009;
  I_BSDV_SURFACE = $0000000A;
  I_BSDV_WEIGHT = $0000000B;
  I_BSDV_D = $0000000C;
  I_BSDV_BF = $0000000D;
  I_BSDV_TW = $0000000E;
  I_BSDV_TF = $0000000F;
  I_BSDV_RA = $00000010;
  I_BSDV_RI = $00000011;
  I_BSDV_S = $00000012;
  I_BSDV_ZY = $00000013;
  I_BSDV_ZZ = $00000014;
  I_BSDV_WX = $00000015;
  I_BSDV_WY = $00000016;
  I_BSDV_WZ = $00000017;
  I_BSDV_GAMMA = $00000018;
  I_BSDV_IOMEGA = $00000019;
  I_BSDV_P1_LENGTH = $0000001A;
  I_BSDV_P1_THICKNESS = $0000001B;
  I_BSDV_P2_LENGTH = $0000001C;
  I_BSDV_P2_THICKNESS = $0000001D;
  I_BSDV_P3_LENGTH = $0000001E;
  I_BSDV_P3_THICKNESS = $0000001F;
  I_BSDV_P4_LENGTH = $00000020;
  I_BSDV_P4_THICKNESS = $00000021;
  I_BSDV_BF2 = $00000022;
  I_BSDV_TF2 = $00000023;
  I_BSDV_DIM1 = $00000024;
  I_BSDV_DIM2 = $00000025;
  I_BSDV_DIM3 = $00000026;
  I_BSDV_ANGLE1 = $00000027;
  I_BSDV_ANGLE2 = $00000028;

// Constants for enum IRobotLimitState
type
  IRobotLimitState = TOleEnum;
const
  I_LS_ULS = $00000000;
  I_LS_SLS = $00000001;
  I_LS_ALS = $00000002;
  I_LS_SPC = $00000003;

// Constants for enum IRobotBarEndBracketType
type
  IRobotBarEndBracketType = TOleEnum;
const
  I_BEBT_PLATES = $00000001;
  I_BEBT_SECTION = $00000002;

// Constants for enum IRobotBarEndBracketDataValue
type
  IRobotBarEndBracketDataValue = TOleEnum;
const
  I_BEBDV_LENGTH = $00000001;
  I_BEBDV_HEIGHT = $00000002;
  I_BEBDV_WIDTH = $00000003;
  I_BEBDV_THICKNESS_1 = $00000004;
  I_BEBDV_THICKNESS_2 = $00000005;

// Constants for enum IRobotThicknessType
type
  IRobotThicknessType = TOleEnum;
const
  I_TT_HOMOGENEOUS = $00000000;
  I_TT_ORTHOTROPIC = $00000001;

// Constants for enum IRobotThicknessUpliftType
type
  IRobotThicknessUpliftType = TOleEnum;
const
  I_TUT_NONE = $00000000;
  I_TUT_MINUS = $00000001;
  I_TUT_PLUS = $00000002;

// Constants for enum IRobotThicknessHomoType
type
  IRobotThicknessHomoType = TOleEnum;
const
  I_THT_CONSTANT = $00000000;
  I_THT_VARIABLE_ALONG_LINE = $00000001;
  I_THT_VARIABLE_ON_PLANE = $00000002;

// Constants for enum IRobotThicknessOrthoType
type
  IRobotThicknessOrthoType = TOleEnum;
const
  I_TOT_ONE_SIDED_UNIDIR_RIBS = $00000001;
  I_TOT_DOUBLE_SIDED_UNIDIR_RIBS = $00000002;
  I_TOT_ONE_SIDED_BIDIR_RIBS = $00000003;
  I_TOT_UNIDIR_BOX_FLOOR = $00000004;
  I_TOT_BIDIR_BOX_FLOOR = $00000005;
  I_TOT_GRILLAGE = $00000006;
  I_TOT_SLAB_ON_TRAPEZOID_PLATE = $00000007;
  I_TOT_USER = $00000008;
  I_TOT_MATERIAL = $00000009;
  I_TOT_HOLLOW_CORE_SLAB = $0000000F;
  I_TOT_SLAB_COMPOSED_WITH_TRAPEZOID_PLATE = $0000000D;
  I_TOT_TRAPEZOID_PLATE = $0000000B;
  I_TOT_CORRUGATED_PLATE = $0000000C;
  I_TOT_CONST_THICK_WITH_REDUCED_STIFFNESS = $0000000E;

// Constants for enum IRobotThicknessOrthoDirType
type
  IRobotThicknessOrthoDirType = TOleEnum;
const
  I_TODT_DIR_X = $00000000;
  I_TODT_DIR_Y = $00000001;
  I_TODT_DIR_Z = $00000002;
  I_TODT_VECTOR = $00000003;
  I_TODT_AUTOMATIC = $00000004;

// Constants for enum IRobotThicknessMatrixValue
type
  IRobotThicknessMatrixValue = TOleEnum;
const
  I_TMV_D_XXXX = $00000000;
  I_TMV_D_XXYY = $00000001;
  I_TMV_D_YYYY = $00000002;
  I_TMV_D_XYXY = $00000003;
  I_TMV_K_XXXX = $00000004;
  I_TMV_K_XXYY = $00000005;
  I_TMV_K_YYYY = $00000006;
  I_TMV_K_XYXY = $00000007;
  I_TMV_H_XX = $00000008;
  I_TMV_H_YY = $00000009;

// Constants for enum IRobotBarCableAssemblingParamType
type
  IRobotBarCableAssemblingParamType = TOleEnum;
const
  I_BCAPT_STRESSES_SIGMA = $00000001;
  I_BCAPT_FORCE_FO = $00000002;
  I_BCAPT_LENGTH_L = $00000003;
  I_BCAPT_ELONGATION_DL_RELATIVE = $00000004;
  I_BCAPT_ELONGATION_DL = $00000005;

// Constants for enum IRobotLinearReleaseDefinitionType
type
  IRobotLinearReleaseDefinitionType = TOleEnum;
const
  I_LRDT_NONE = $00000000;
  I_LRDT_RELEASED = $00000001;
  I_LRDT_MINUS = $00000002;
  I_LRDT_PLUS = $00000003;

// Constants for enum IRobotBarSectionConcreteDataValue
type
  IRobotBarSectionConcreteDataValue = TOleEnum;
const
  I_BSCDV_COL_H = $00000000;
  I_BSCDV_COL_B = $00000001;
  I_BSCDV_COL_H1 = $00000002;
  I_BSCDV_COL_L1 = $00000003;
  I_BSCDV_COL_H2 = $00000004;
  I_BSCDV_COL_L2 = $00000005;
  I_BSCDV_COL_DE = $00000006;
  I_BSCDV_COL_N = $00000007;
  I_BSCDV_BEAM_H = $00000000;
  I_BSCDV_BEAM_B = $00000001;
  I_BSCDV_BEAM_PL = $00000002;
  I_BSCDV_BEAM_RL = $00000003;
  I_BSCDV_BEAM_EL1 = $00000004;
  I_BSCDV_BEAM_EL2 = $00000005;
  I_BSCDV_BEAM_PR = $00000006;
  I_BSCDV_BEAM_RR = $00000007;
  I_BSCDV_BEAM_ER1 = $00000008;
  I_BSCDV_BEAM_ER2 = $00000009;
  I_BSCDV_BEAM_HG1 = $0000000A;
  I_BSCDV_BEAM_BG1 = $0000000B;
  I_BSCDV_BEAM_HG2 = $0000000C;
  I_BSCDV_BEAM_BG2 = $0000000D;
  I_BSCDV_BEAM_T_H = $00000000;
  I_BSCDV_BEAM_T_B = $00000001;
  I_BSCDV_BEAM_T_HF = $00000064;
  I_BSCDV_BEAM_T_BF = $00000065;
  I_BSCDV_BEAM_RECT_H = $00000000;
  I_BSCDV_BEAM_RECT_B = $00000001;
  I_BSCDV_BEAM_I_B = $00000001;
  I_BSCDV_BEAM_I_H = $00000000;
  I_BSCDV_BEAM_I_B1 = $0000000B;
  I_BSCDV_BEAM_I_B2 = $0000000D;
  I_BSCDV_BEAM_I_HF1 = $0000000A;
  I_BSCDV_BEAM_I_HF2 = $0000000C;

// Constants for enum IRobotBarSectionConcreteCutsPosition
type
  IRobotBarSectionConcreteCutsPosition = TOleEnum;
const
  I_BSCCP_NONE = $00000000;
  I_BSCCP_LEFT = $00000001;
  I_BSCCP_RIGHT = $00000002;

// Constants for enum IRobotBarGeoImperfectionsAxis
type
  IRobotBarGeoImperfectionsAxis = TOleEnum;
const
  I_BGIA_Z = $00000001;
  I_BGIA_Y = $00000000;

// Constants for enum IRobotBarSectionComponentShape
type
  IRobotBarSectionComponentShape = TOleEnum;
const
  I_BSCS_C = $00000001;
  I_BSCS_I = $00000002;
  I_BSCS_L = $00000003;
  I_BSCS_UNDEFINED = $00000000;

// Constants for enum IRobotBarSectionSpecialDataValue
type
  IRobotBarSectionSpecialDataValue = TOleEnum;
const
  I_BSSDV_TW = $00000001;
  I_BSSDV_B1 = $00000002;
  I_BSSDV_TF1 = $00000003;
  I_BSSDV_H = $00000004;
  I_BSSDV_B2 = $00000005;
  I_BSSDV_TF2 = $00000006;
  I_BSSDV_D = $00000007;
  I_BSSDV_W = $00000008;
  I_BSSDV_C = $00000009;
  I_BSSDV_A = $0000000A;
  I_BSSDV_HS = $0000000B;
  I_BSSDV_BP = $0000000C;
  I_BSSDV_TP = $0000000D;

// Constants for enum IRobotBarOffsetMemberLength
type
  IRobotBarOffsetMemberLength = TOleEnum;
const
  I_BOML_IN_THE_AXIS = $00000000;
  I_BOML_INCREASE_LENGTH = $00000001;
  I_BOML_REDUCE_LENGTH = $00000002;

// Constants for enum IRobotSupportEquivalentElasticityType
type
  IRobotSupportEquivalentElasticityType = TOleEnum;
const
  I_SEET_COLUMN = $00000001;
  I_SEET_WALL = $00000002;

// Constants for enum IRobotSupportColumnFixingType
type
  IRobotSupportColumnFixingType = TOleEnum;
const
  I_SCFT_FIXED = $00000001;
  I_SCFT_PINNED = $00000002;
  I_SCFT_ROLLER = $00000003;

// Constants for enum IRobotCodeCmbActionCoeffType
type
  IRobotCodeCmbActionCoeffType = TOleEnum;
const
  I_CCACT_GU_MAX = $00000000;
  I_CCACT_GU_MIN = $00000001;
  I_CCACT_GS = $00000002;
  I_CCACT_GA = $00000003;
  I_CCACT_PSI0_1 = $00000004;
  I_CCACT_PSI0_2 = $00000005;
  I_CCACT_PSI0_3 = $00000006;
  I_CCACT_PSI0_N = $00000007;
  I_CCACT_PSI1 = $00000008;
  I_CCACT_PSI2_1 = $00000009;
  I_CCACT_PSI2_N = $0000000A;
  I_CCACT_PSIK = $0000000B;
  I_CCACT_KSI_MAX = $0000000C;
  I_CCACT_KSI_MIN = $0000000D;

// Constants for enum IRobotCodeCmbCombPartType
type
  IRobotCodeCmbCombPartType = TOleEnum;
const
  I_CCCPT_DEAD = $00000000;
  I_CCCPT_LIVE = $00000001;
  I_CCCPT_ACCIDENTAL = $00000002;
  I_CCCPT_SEISMIC = $00000003;

// Constants for enum IRobotCodeCmbCombType
type
  IRobotCodeCmbCombType = TOleEnum;
const
  I_CCCT_STANDARD = $00000001;
  I_CCCT_SEISMIC = $00000002;
  I_CCCT_ACCIDENTAL = $00000003;
  I_CCCT_RARE = $00000004;
  I_CCCT_FREQUENT = $00000005;
  I_CCCT_QUASI_PERM = $00000006;
  I_CCCT_USER = $00000007;
  I_CCCT_FUNDAMENTAL = $00000008;
  I_CCCT_SIMPLIFIED = $00000009;
  I_CCCT_EXTREMAL = $0000000A;

// Constants for enum IRobotCodeCmbDecidingValueType
type
  IRobotCodeCmbDecidingValueType = TOleEnum;
const
  I_CCDVT_FX = $00000001;
  I_CCDVT_FY = $00000002;
  I_CCDVT_FZ = $00000003;
  I_CCDVT_MX = $00000004;
  I_CCDVT_MY = $00000005;
  I_CCDVT_MZ = $00000006;
  I_CCDVT_UX = $00000007;
  I_CCDVT_UY = $00000008;
  I_CCDVT_UZ = $00000009;
  I_CCDVT_FXX_MAX = $0000000A;
  I_CCDVT_MXX_MAX = $0000000B;
  I_CCDVT_SXX_MAX = $0000000C;
  I_CCDVT_REACTIONS = $00000023;
  I_CCDVT_SIGMA_X = $0000000D;
  I_CCDVT_DEFLECTION = $0000000E;

// Constants for enum IRobotCodeCmbOperator
type
  IRobotCodeCmbOperator = TOleEnum;
const
  I_CCO_AND = $00000000;
  I_CCO_EXCLUSIVE_OR = $00000001;
  I_CCO_AND_OR = $00000002;

// Constants for enum IRobotModalAnalysisMode
type
  IRobotModalAnalysisMode = TOleEnum;
const
  I_MAM_MODAL = $00000000;
  I_MAM_SEISMIC = $00000001;
  I_MAM_SEISMIC_PSEUDO = $00000002;

// Constants for enum IRobotModalAnalysisAlgorithm
type
  IRobotModalAnalysisAlgorithm = TOleEnum;
const
  I_MAA_BLOCK_SUBSPACE_ITERATION = $00000000;
  I_MAA_SUBSPACE_ITERATION = $00000001;
  I_MAA_LANCZOS = $00000002;
  I_MAA_BASE_REDUCTION = $00000003;
  I_MAA_PCG_RITZ = $00000004;
  I_MAA_PCG = $00000005;

// Constants for enum IRobotModalAnalysisMassMatrixType
type
  IRobotModalAnalysisMassMatrixType = TOleEnum;
const
  I_MAMMT_CONSISTENT = $00000000;
  I_MAMMT_LUMPED_WITH_ROTATIONS = $00000001;
  I_MAMMT_LUMPED = $00000002;

// Constants for enum IRobotModalAnalysisLimitType
type
  IRobotModalAnalysisLimitType = TOleEnum;
const
  I_MALT_PULSATION = $00000000;
  I_MALT_FREQUENCY = $00000001;
  I_MALT_PERIOD = $00000002;

// Constants for enum IRobotBarTensionCompression
type
  IRobotBarTensionCompression = TOleEnum;
const
  I_BTC_STANDARD = $00000000;
  I_BTC_TENSION_ONLY = $00000001;
  I_BTC_COMPRESSION_ONLY = $00000002;

// Constants for enum IRobotCaseAnalysisModesFilterType
type
  IRobotCaseAnalysisModesFilterType = TOleEnum;
const
  I_CAMFT_NON_ACTIVE = $00000000;
  I_CAMFT_MASS_PERCENTAGE = $00000001;
  I_CAMFT_LIST_OF_MODES = $00000002;

// Constants for enum IRobotSeismicAnalysis_EAK_2000_ZoneType
type
  IRobotSeismicAnalysis_EAK_2000_ZoneType = TOleEnum;
const
  I_SAZT_EAK_2000_I = $00000000;
  I_SAZT_EAK_2000_II = $00000001;
  I_SAZT_EAK_2000_III = $00000002;
  I_SAZT_EAK_2000_IV = $00000003;

// Constants for enum IRobotSeismicAnalysis_EAK_2000_GroundCategoryType
type
  IRobotSeismicAnalysis_EAK_2000_GroundCategoryType = TOleEnum;
const
  I_SAGCT_EAK_2000_ALPHA = $00000000;
  I_SAGCT_EAK_2000_BETA = $00000001;
  I_SAGCT_EAK_2000_GAMMA = $00000002;
  I_SAGCT_EAK_2000_DELTA = $00000003;

// Constants for enum IRobotSeismicAnalysis_EAK_2000_ImportanceFactorType
type
  IRobotSeismicAnalysis_EAK_2000_ImportanceFactorType = TOleEnum;
const
  I_SAIFT_EAK_2000_SIGMA1 = $00000000;
  I_SAIFT_EAK_2000_SIGMA2 = $00000001;
  I_SAIFT_EAK_2000_SIGMA3 = $00000002;
  I_SAIFT_EAK_2000_SIGMA4 = $00000003;

// Constants for enum IRobotSeismicAnalysis_CHINESE_IntensityType
type
  IRobotSeismicAnalysis_CHINESE_IntensityType = TOleEnum;
const
  I_SAIT_CHINESE_6 = $00000000;
  I_SAIT_CHINESE_7 = $00000001;
  I_SAIT_CHINESE_8 = $00000002;
  I_SAIT_CHINESE_9 = $00000003;

// Constants for enum IRobotSeismicAnalysis_CHINESE_DesignType
type
  IRobotSeismicAnalysis_CHINESE_DesignType = TOleEnum;
const
  I_SADT_CHINESE_A = $00000000;
  I_SADT_CHINESE_B = $00000001;

// Constants for enum IRobotSeismicAnalysis_CHINESE_SiteType
type
  IRobotSeismicAnalysis_CHINESE_SiteType = TOleEnum;
const
  I_SAST_CHINESE_I = $00000000;
  I_SAST_CHINESE_II = $00000001;
  I_SAST_CHINESE_III = $00000002;
  I_SAST_CHINESE_IV = $00000003;

// Constants for enum IRobotSeismicAnalysis_CHINESE_EarthquakeType
type
  IRobotSeismicAnalysis_CHINESE_EarthquakeType = TOleEnum;
const
  I_SAET_CHINESE_NEAR = $00000000;
  I_SAET_CHINESE_FAR = $00000001;

// Constants for enum IRobotSeismicAnalysis_CHINESE_StructureType
type
  IRobotSeismicAnalysis_CHINESE_StructureType = TOleEnum;
const
  I_SAST_CHINESE_SPECIAL = $00000000;
  I_SAST_CHINESE_BUILDINGS = $00000001;
  I_SAST_CHINESE_BRIDGES = $00000002;
  I_SAST_CHINESE_HARBOR_BUILDINGS = $00000003;

// Constants for enum IRobotSeismicAnalysis_RPA_88_SoilType
type
  IRobotSeismicAnalysis_RPA_88_SoilType = TOleEnum;
const
  I_SAST_RPA_88_RIGID = $00000000;
  I_SAST_RPA_88_FLEXIBLE = $00000001;

// Constants for enum IRobotSeismicAnalysis_RPA_88_ZoneType
type
  IRobotSeismicAnalysis_RPA_88_ZoneType = TOleEnum;
const
  I_SAZT_RPA_88_I = $00000000;
  I_SAZT_RPA_88_II = $00000001;
  I_SAZT_RPA_88_III = $00000002;

// Constants for enum IRobotSeismicAnalysis_RPA_88_CategoryType
type
  IRobotSeismicAnalysis_RPA_88_CategoryType = TOleEnum;
const
  I_SACT_RPA_88_1 = $00000000;
  I_SACT_RPA_88_2 = $00000001;
  I_SACT_RPA_88_3 = $00000002;
  I_SACT_RPA_88_4 = $00000003;
  I_SACT_RPA_88_5 = $00000004;
  I_SACT_RPA_88_6 = $00000005;
  I_SACT_RPA_88_7 = $00000006;
  I_SACT_RPA_88_8 = $00000007;

// Constants for enum IRobotSeismicAnalysis_RPA_88_UsageType
type
  IRobotSeismicAnalysis_RPA_88_UsageType = TOleEnum;
const
  I_SAUT_RPA_88_1 = $00000000;
  I_SAUT_RPA_88_2 = $00000001;
  I_SAUT_RPA_88_3 = $00000002;

// Constants for enum IRobotSeismicAnalysis_CIRSOC_103_SoilType
type
  IRobotSeismicAnalysis_CIRSOC_103_SoilType = TOleEnum;
const
  I_SAST_CIRSOC_103_I = $00000000;
  I_SAST_CIRSOC_103_II = $00000001;
  I_SAST_CIRSOC_103_III = $00000002;

// Constants for enum IRobotSeismicAnalysis_CIRSOC_103_StructureType
type
  IRobotSeismicAnalysis_CIRSOC_103_StructureType = TOleEnum;
const
  I_SAST_CIRSOC_103_A0 = $00000000;
  I_SAST_CIRSOC_103_A = $00000001;
  I_SAST_CIRSOC_103_B = $00000002;

// Constants for enum IRobotSeismicAnalysis_CIRSOC_103_ZoneType
type
  IRobotSeismicAnalysis_CIRSOC_103_ZoneType = TOleEnum;
const
  I_SAZT_CIRSOC_103_0 = $00000000;
  I_SAZT_CIRSOC_103_1 = $00000001;
  I_SAZT_CIRSOC_103_2 = $00000002;
  I_SAZT_CIRSOC_103_3 = $00000003;
  I_SAZT_CIRSOC_103_4 = $00000004;

// Constants for enum IRobotSeismicAnalysis_UBC_97_SourceType
type
  IRobotSeismicAnalysis_UBC_97_SourceType = TOleEnum;
const
  I_SAST_UBC_97_A = $00000000;
  I_SAST_UBC_97_B = $00000001;
  I_SAST_UBC_97_C = $00000002;

// Constants for enum IRobotSeismicAnalysis_UBC_97_SoilType
type
  IRobotSeismicAnalysis_UBC_97_SoilType = TOleEnum;
const
  I_SAST_UBC_97_Sa = $00000000;
  I_SAST_UBC_97_Sb = $00000001;
  I_SAST_UBC_97_Sc = $00000002;
  I_SAST_UBC_97_Sd = $00000003;
  I_SAST_UBC_97_Se = $00000004;
  I_SAST_UBC_97_Sf = $00000005;

// Constants for enum IRobotSeismicAnalysis_UBC_97_ZoneType
type
  IRobotSeismicAnalysis_UBC_97_ZoneType = TOleEnum;
const
  I_SAZT_UBC_97_1 = $00000000;
  I_SAZT_UBC_97_2A = $00000001;
  I_SAZT_UBC_97_2B = $00000002;
  I_SAZT_UBC_97_3 = $00000003;
  I_SAZT_UBC_97_4 = $00000004;

// Constants for enum IRobotSeismicAnalysis_AFPS_90_StructureType
type
  IRobotSeismicAnalysis_AFPS_90_StructureType = TOleEnum;
const
  I_SAST_AFPS_90_A = $00000000;
  I_SAST_AFPS_90_B = $00000001;
  I_SAST_AFPS_90_C = $00000002;

// Constants for enum IRobotSeismicAnalysis_AFPS_90_ZoneType
type
  IRobotSeismicAnalysis_AFPS_90_ZoneType = TOleEnum;
const
  I_SAZT_AFPS_90_IA = $00000000;
  I_SAZT_AFPS_90_IB = $00000001;
  I_SAZT_AFPS_90_II = $00000002;
  I_SAZT_AFPS_90_III = $00000003;

// Constants for enum IRobotSeismicAnalysis_AFPS_90_SiteType
type
  IRobotSeismicAnalysis_AFPS_90_SiteType = TOleEnum;
const
  I_SAST_AFPS_90_S0 = $00000000;
  I_SAST_AFPS_90_S1 = $00000001;
  I_SAST_AFPS_90_S2 = $00000002;
  I_SAST_AFPS_90_S3 = $00000003;

// Constants for enum IRobotSeismicAnalysis_EC_8_StructureType
type
  IRobotSeismicAnalysis_EC_8_StructureType = TOleEnum;
const
  I_SAST_EC_8_B = $00000000;
  I_SAST_EC_8_C = $00000001;
  I_SAST_EC_8_D = $00000002;

// Constants for enum IRobotSeismicAnalysis_EC_8_ZoneType
type
  IRobotSeismicAnalysis_EC_8_ZoneType = TOleEnum;
const
  I_SAZT_EC_8_IA = $00000000;
  I_SAZT_EC_8_IB = $00000001;
  I_SAZT_EC_8_II = $00000002;
  I_SAZT_EC_8_III = $00000003;

// Constants for enum IRobotSeismicAnalysis_EC_8_SoilType
type
  IRobotSeismicAnalysis_EC_8_SoilType = TOleEnum;
const
  I_SAST_EC_8_SOIL_A = $00000000;
  I_SAST_EC_8_SOIL_B = $00000001;
  I_SAST_EC_8_SOIL_C = $00000002;

// Constants for enum IRobotSeismicAnalysis_P_100_92_ImportanceClassType
type
  IRobotSeismicAnalysis_P_100_92_ImportanceClassType = TOleEnum;
const
  I_SAICT_100_92_I = $00000000;
  I_SAICT_100_92_II = $00000001;
  I_SAICT_100_92_III = $00000002;
  I_SAICT_100_92_IV = $00000003;

// Constants for enum IRobotSeismicAnalysis_P_100_92_ZoneType
type
  IRobotSeismicAnalysis_P_100_92_ZoneType = TOleEnum;
const
  I_SAZT_P_100_92_A = $00000000;
  I_SAZT_P_100_92_B = $00000001;
  I_SAZT_P_100_92_C = $00000002;
  I_SAZT_P_100_92_D = $00000003;
  I_SAZT_P_100_92_E = $00000004;
  I_SAZT_P_100_92_F = $00000005;

// Constants for enum IRobotSeismicAnalysis_PS_69_DampingType
type
  IRobotSeismicAnalysis_PS_69_DampingType = TOleEnum;
const
  I_SADT_PS_69_NORMAL = $00000000;
  I_SADT_PS_69_AVERAGE = $00000001;
  I_SADT_PS_69_WEAK = $00000002;

// Constants for enum IRobotSeismicAnalysis_PS_69_SoilType
type
  IRobotSeismicAnalysis_PS_69_SoilType = TOleEnum;
const
  I_SAST_PS_69_RIGID = $00000000;
  I_SAST_PS_69_FLEXIBLE = $00000001;

// Constants for enum IRobotSeismicAnalysis_PS_92_StructureType
type
  IRobotSeismicAnalysis_PS_92_StructureType = TOleEnum;
const
  I_SAST_PS_92_B = $00000000;
  I_SAST_PS_92_C = $00000001;
  I_SAST_PS_92_D = $00000002;

// Constants for enum IRobotSeismicAnalysis_PS_92_ZoneType
type
  IRobotSeismicAnalysis_PS_92_ZoneType = TOleEnum;
const
  I_SAZT_PS_92_IA = $00000000;
  I_SAZT_PS_92_IB = $00000001;
  I_SAZT_PS_92_II = $00000002;
  I_SAZT_PS_92_III = $00000003;

// Constants for enum IRobotSeismicAnalysis_PS_92_2008_ZoneType
type
  IRobotSeismicAnalysis_PS_92_2008_ZoneType = TOleEnum;
const
  I_SAZT_PS_92_2008_2 = $00000000;
  I_SAZT_PS_92_2008_3 = $00000001;
  I_SAZT_PS_92_2008_4 = $00000002;
  I_SAZT_PS_92_2008_5 = $00000004;

// Constants for enum IRobotSeismicAnalysis_PS_92_SiteType
type
  IRobotSeismicAnalysis_PS_92_SiteType = TOleEnum;
const
  I_SAST_PS_92_S0 = $00000000;
  I_SAST_PS_92_S1 = $00000001;
  I_SAST_PS_92_S2 = $00000002;
  I_SAST_PS_92_S3 = $00000003;
  I_SAST_PS_92_ENVELOPE = $00000004;

// Constants for enum IRobotSeismicAnalysis_PS_92_2008_StructureType
type
  IRobotSeismicAnalysis_PS_92_2008_StructureType = TOleEnum;
const
  I_SAST_PS_92_2008_B = $00000000;
  I_SAST_PS_92_2008_C = $00000001;
  I_SAST_PS_92_2008_D = $00000002;

// Constants for enum IRobotSeismicAnalysis_PS_92_2008_SiteType
type
  IRobotSeismicAnalysis_PS_92_2008_SiteType = TOleEnum;
const
  I_SAST_PS_92_2008_S0 = $00000000;
  I_SAST_PS_92_2008_S1 = $00000001;
  I_SAST_PS_92_2008_S2 = $00000002;
  I_SAST_PS_92_2008_S3 = $00000003;
  I_SAST_PS_92_2008_ENVELOPE = $00000004;

// Constants for enum IRobotSeismicAnalysis_TURKISH_23098_ZoneType
type
  IRobotSeismicAnalysis_TURKISH_23098_ZoneType = TOleEnum;
const
  I_SAZT_TURKISH_23098_1 = $00000000;
  I_SAZT_TURKISH_23098_2 = $00000001;
  I_SAZT_TURKISH_23098_3 = $00000002;
  I_SAZT_TURKISH_23098_4 = $00000003;

// Constants for enum IRobotSeismicAnalysis_TURKISH_23098_SoilType
type
  IRobotSeismicAnalysis_TURKISH_23098_SoilType = TOleEnum;
const
  I_SAST_TURKISH_23098_Z1 = $00000000;
  I_SAST_TURKISH_23098_Z2 = $00000001;
  I_SAST_TURKISH_23098_Z3 = $00000002;
  I_SAST_TURKISH_23098_Z4 = $00000003;

// Constants for enum IRobotSeismicAnalysis_DM_16_1_96_ProtectionCoeffType
type
  IRobotSeismicAnalysis_DM_16_1_96_ProtectionCoeffType = TOleEnum;
const
  I_SAPCT_DM_16_1_96_1 = $00000000;
  I_SAPCT_DM_16_1_96_12 = $00000001;
  I_SAPCT_DM_16_1_96_14 = $00000002;

// Constants for enum IRobotSeismicAnalysis_IBC_2000_SiteClassType
type
  IRobotSeismicAnalysis_IBC_2000_SiteClassType = TOleEnum;
const
  I_SASCT_IBC_2000_A = $00000000;
  I_SASCT_IBC_2000_B = $00000001;
  I_SASCT_IBC_2000_C = $00000002;
  I_SASCT_IBC_2000_D = $00000003;
  I_SASCT_IBC_2000_E = $00000004;
  I_SASCT_IBC_2000_F = $00000005;

// Constants for enum IRobotSeismicAnalysisSpectrumType
type
  IRobotSeismicAnalysisSpectrumType = TOleEnum;
const
  I_SAST_DIMENSIONING = $00000000;
  I_SAST_ELASITC = $00000001;

// Constants for enum IRobotSeismicAnalysisDirectionType
type
  IRobotSeismicAnalysisDirectionType = TOleEnum;
const
  I_SADT_HORIZONTAL = $00000000;
  I_SADT_VERTICAL = $00000001;

// Constants for enum IRobotNonlinearAnalysisAlgorithmType
type
  IRobotNonlinearAnalysisAlgorithmType = TOleEnum;
const
  I_NAAT_INCREMENTAL_METHOD = $00000000;
  I_NAAT_DIRECT_ITERATION_METHOD = $00000001;
  I_NAAT_ARC_LENGTH_METHOD = $00000002;
  I_NAAT_PREDICTOR_CORRECTOR_METHOD = $00000003;

// Constants for enum IRobotSpectralAnalysisOrdinateYAxisType
type
  IRobotSpectralAnalysisOrdinateYAxisType = TOleEnum;
const
  I_SAOYAT_VELOCITY = $00000000;
  I_SAOYAT_ACCELERATION = $00000001;
  I_SAOYAT_EXCITATION = $00000002;

// Constants for enum IRobotSpectralAnalysisAbscissaXAxisType
type
  IRobotSpectralAnalysisAbscissaXAxisType = TOleEnum;
const
  I_SAAXAT_PERIOD = $00000000;
  I_SAAXAT_PULSATION = $00000001;
  I_SAAXAT_FREQUENCY = $00000002;

// Constants for enum IRobotComponentType
type
  IRobotComponentType = TOleEnum;
const
  I_CT_VALUES_ARRAY = $00000001;
  I_CT_NUMBERS_ARRAY = $00000002;
  I_CT_NAMES_ARRAY = $00000003;
  I_CT_OBJECTS_ARRAY = $00000004;
  I_CT_GEO_POINT_2D = $00000005;
  I_CT_GEO_POINT_3D = $00000006;
  I_CT_GEO_CURVE_DIV = $00000007;
  I_CT_GEO_SEGMENT = $00000008;
  I_CT_GEO_SEGMENT_LINE = $00000009;
  I_CT_GEO_SEGMENT_ARC = $0000000A;
  I_CT_GEO_OBJECT = $0000000B;
  I_CT_GEO_POLYLINE = $0000000C;
  I_CT_GEO_CONTOUR = $0000000D;
  I_CT_GEO_ARC = $0000000E;
  I_CT_GEO_CIRCLE = $0000000F;
  I_CT_GEO_SEGMENT_COLLECTION = $00000010;
  I_CT_GEO_POINT_3D_COLLECTION = $00000011;
  I_CT_GEO_LAYER = $00000012;
  I_CT_EMITTER = $00000013;
  I_CT_JOINT_LOAD = $000000C9;
  I_CT_JOINT_KNEE_LOAD = $000000CA;
  I_CT_JOINT_ANGLE_LOAD = $000000CB;
  I_CT_JOINT_TUBE_LOAD = $000000CC;
  I_CT_JOINT_PINNED_LOAD = $000000CD;
  I_CT_JOINT_FIXED_LOAD = $000000CE;
  I_CT_JOINT_GUSSET_SIMPLE_LOAD = $000000CF;
  I_CT_JOINT_GUSSET_CROSS_LOAD = $000000D0;
  I_CT_JOINT_GUSSET_FLANGE_LOAD = $000000D1;
  I_CT_JOINT_BEAM_GIRDER_LOAD = $000000D2;
  I_CT_JOINT_CONCRETED_LOAD = $000000D3;
  I_CT_JOINT_SPLICE_LOAD = $000000D4;
  I_CT_JOINT_TIE_LOAD = $000000D5;
  I_CT_MODIF_EXTRUSION = $0000001D;
  I_CT_MODIF_LATHE = $0000001E;
  I_CT_MODIF_PYRAMID = $0000001F;
  I_CT_OPER_TRANSLATION = $00000020;
  I_CT_OPER_SCALING = $00000021;
  I_CT_OPER_ROTATION = $00000022;
  I_CT_OPER_MESHING = $00000023;
  I_CT_SPECTRAL_ANALYSIS_POINTS_COLLECTION = $00000024;
  I_CT_SPECTRAL_ANALYSIS_SPECTRUM = $00000025;
  I_CT_CASE_ANALYSIS_MODES_FILTER = $00000026;
  I_CT_FE_RESULT_PARAMS = $00000027;
  I_CT_RTF_VIEW = $00000028;
  I_CT_POINTS_ARRAY = $00000029;
  I_CT_EXTREME_PARAMS = $0000002A;
  I_CT_STRUCTURE_GEO_ANALYSER = $0000002B;
  I_CT_FE_EXTREME_PARAMS = $0000002C;
  I_CT_FE_MULTI_RESULT_TYPE = $0000002D;
  I_CT_SW_STRUCT3D_GEN_PARAMS = $0000002E;
  I_CT_SW_STRUCT3D_PURLIN_GEN_PARAMS = $0000002F;
  I_CT_SW_STRUCT3D = $00000030;
  I_CT_SW_STRUCT3D_FRAME = $00000031;
  I_CT_SW_STRUCT3D_ELEMENT = $00000032;
  I_CT_VIEW_SCREEN_CAPTURE_PARAMS = $00000033;
  I_CT_HTML_VIEW = $00000034;
  I_CT_STRUCTURE_MERGE_DATA = $00000035;
  I_CT_NUMBERS_DICTIONARY = $00000036;
  I_CT_TABLE_SCREEN_CAPTURE_PARAMS = $00000037;
  I_CT_PARAM_DEF = $00000038;
  I_CT_RESULT_QUERY_PARAMS = $00000039;

// Constants for enum IRobotDegreeOfFreedom
type
  IRobotDegreeOfFreedom = TOleEnum;
const
  I_DOF_UX = $00000000;
  I_DOF_UY = $00000001;
  I_DOF_UZ = $00000002;
  I_DOF_RX = $00000003;
  I_DOF_RY = $00000004;
  I_DOF_RZ = $00000005;

// Constants for enum IRobotBucklingAnalysisMethod
type
  IRobotBucklingAnalysisMethod = TOleEnum;
const
  I_BAM_SUBSPACE_ITERATION = $00000000;
  I_BAM_BLOCK_SUBSPACE_ITERATION = $00000001;

// Constants for enum IRobotTimeHistoryAnalysisMethod
type
  IRobotTimeHistoryAnalysisMethod = TOleEnum;
const
  I_THAM_NEWMARK = $00000000;
  I_THAM_MODAL_DECOMPOSITION = $00000001;
  I_THAM_PREDICTOR_CORECTOR = $00000002;
  I_THAM_HHT = $00000003;
  I_THAM_NEWMARK_ACCELERATION = $00000004;

// Constants for enum IRobotVehicleLoadType
type
  IRobotVehicleLoadType = TOleEnum;
const
  I_VLT_CONCENTRATED = $00000001;
  I_VLT_LINEAR = $00000002;
  I_VLT_SURFACE = $00000003;

// Constants for enum IRobotSurfaceOnObjectRecordValues
type
  IRobotSurfaceOnObjectRecordValues = TOleEnum;
const
  I_SOORV_PX = $00000000;
  I_SOORV_PY = $00000001;
  I_SOORV_PZ = $00000002;
  I_SOORV_LOCAL = $0000000B;

// Constants for enum IRobotPushOverDirection
type
  IRobotPushOverDirection = TOleEnum;
const
  I_POD_UX_PLUS = $00000000;
  I_POD_UX_MINUS = $0000000A;
  I_POD_UY_PLUS = $00000001;
  I_POD_UY_MINUS = $0000000B;
  I_POD_UZ_PLUS = $00000002;
  I_POD_UZ_MINUS = $0000000C;

// Constants for enum IRobotPushOverLoadDefinitionMethod
type
  IRobotPushOverLoadDefinitionMethod = TOleEnum;
const
  I_POLDM_ACCELERATION = $00000000;
  I_POLDM_USER_DEFINED = $00000002;
  I_POLDM_MAIN_MODE = $00000001;

// Constants for enum IRobotMobilePointForceRecordValues
type
  IRobotMobilePointForceRecordValues = TOleEnum;
const
  I_MPFRV_X = $00000000;
  I_MPFRV_Y = $00000001;
  I_MPFRV_Z = $00000002;
  I_MPFRV_FX = $00000003;
  I_MPFRV_FY = $00000004;
  I_MPFRV_FZ = $00000005;

// Constants for enum IRobotMobileDistributedRecordValues
type
  IRobotMobileDistributedRecordValues = TOleEnum;
const
  I_MDRV_X = $00000000;
  I_MDRV_Y = $00000001;
  I_MDRV_Z = $00000002;
  I_MDRV_PX = $00000003;
  I_MDRV_PY = $00000004;
  I_MDRV_PZ = $00000005;
  I_MDRV_DX = $00000006;
  I_MDRV_DY = $00000007;

// Constants for enum IRobotMaterialModel
type
  IRobotMaterialModel = TOleEnum;
const
  I_MM_ELASTIC = $00000000;
  I_MM_HUBER_MISES = $00000001;
  I_MM_DRUCKER_PRAGER = $00000002;
  I_MM_RANKIN = $00000003;
  I_MM_MOHR_COULOMB = $00000004;

// Constants for enum IRobotSeismicAnalysis_IBC_2006_SiteClassType
type
  IRobotSeismicAnalysis_IBC_2006_SiteClassType = TOleEnum;
const
  I_SASCT_IBC_2006_A = $00000000;
  I_SASCT_IBC_2006_B = $00000001;
  I_SASCT_IBC_2006_C = $00000002;
  I_SASCT_IBC_2006_D = $00000003;
  I_SASCT_IBC_2006_E = $00000004;
  I_SASCT_IBC_2006_F = $00000005;

// Constants for enum IRobotNonlinearLinkCurveType
type
  IRobotNonlinearLinkCurveType = TOleEnum;
const
  I_NLCT_LINEAR = $00000001;
  I_NLCT_B_LINEAR = $00000002;
  I_NLCT_PARABOLIC = $00000003;
  I_NLCT_PARABOLIC_EC2 = $00000004;
  I_NLCT_PERFECTLY_PLASTIC = $00000005;
  I_NLCT_PLASTIC_WITH_HARDENING = $00000006;
  I_NLCT_GAP_HOOK = $00000007;
  I_NLCT_CUSTOM = $00000008;

// Constants for enum IRobotNonlinearLinkModelType
type
  IRobotNonlinearLinkModelType = TOleEnum;
const
  I_NLMT_FORCE_DISPLACEMENT = $00000001;
  I_NLMT_MOMENT_ROTATION = $00000002;

// Constants for enum IRobotNonlinearLinkSemiAxisType
type
  IRobotNonlinearLinkSemiAxisType = TOleEnum;
const
  I_NLSAT_POSITIVE = $00000001;
  I_NLSAT_NEGATIVE = $00000002;
  I_NLSAT_ANY = $00000003;

// Constants for enum IRobotExtremeValueType
type
  IRobotExtremeValueType = TOleEnum;
const
  I_EVT_REACTION_FX = $0000006D;
  I_EVT_REACTION_FY = $0000006E;
  I_EVT_REACTION_FZ = $0000006F;
  I_EVT_REACTION_MX = $00000070;
  I_EVT_REACTION_MY = $00000071;
  I_EVT_REACTION_MZ = $00000072;
  I_EVT_DISPLACEMENT_NODE_UX = $0000008D;
  I_EVT_DISPLACEMENT_NODE_UY = $0000008E;
  I_EVT_DISPLACEMENT_NODE_UZ = $0000008F;
  I_EVT_DISPLACEMENT_NODE_RX = $00000090;
  I_EVT_DISPLACEMENT_NODE_RY = $00000091;
  I_EVT_DISPLACEMENT_NODE_RZ = $00000092;
  I_EVT_DEFLECTION_UX = $00000099;
  I_EVT_DEFLECTION_UY = $0000009A;
  I_EVT_DEFLECTION_UZ = $0000009B;
  I_EVT_DISPLACEMENT_BAR_UX = $00000093;
  I_EVT_DISPLACEMENT_BAR_UY = $00000094;
  I_EVT_DISPLACEMENT_BAR_UZ = $00000095;
  I_EVT_DISPLACEMENT_BAR_RX = $00000096;
  I_EVT_DISPLACEMENT_BAR_RY = $00000097;
  I_EVT_DISPLACEMENT_BAR_RZ = $00000098;
  I_EVT_FORCE_BAR_FX = $000000A5;
  I_EVT_FORCE_BAR_FY = $000000A6;
  I_EVT_FORCE_BAR_FZ = $000000A7;
  I_EVT_FORCE_BAR_MX = $000000A8;
  I_EVT_FORCE_BAR_MY = $000000A9;
  I_EVT_FORCE_BAR_MZ = $000000AA;
  I_EVT_STRESS_BAR_SMAX = $000000AB;
  I_EVT_STRESS_BAR_SMIN = $000000AC;
  I_EVT_STRESS_BAR_SMAX_MY = $000000AE;
  I_EVT_STRESS_BAR_SMAX_MZ = $000000AF;
  I_EVT_STRESS_BAR_SMIN_MY = $000000B0;
  I_EVT_STRESS_BAR_SMIN_MZ = $000000B1;
  I_EVT_STRESS_BAR_FX_SX = $000000AD;
  I_EVT_STRESS_BAR_TY = $000000B3;
  I_EVT_STRESS_BAR_TZ = $000000B4;
  I_EVT_STRESS_BAR_T = $000000B6;
  I_EVT_PSEUDOSTATIC_FORCE_FX = $000000FB;
  I_EVT_PSEUDOSTATIC_FORCE_FY = $000000FC;
  I_EVT_PSEUDOSTATIC_FORCE_FZ = $000000FD;
  I_EVT_PSEUDOSTATIC_FORCE_MX = $000000FE;
  I_EVT_PSEUDOSTATIC_FORCE_MY = $000000FF;
  I_EVT_PSEUDOSTATIC_FORCE_MZ = $00000100;
  I_EVT_PSEUDOSTATIC_FORCE_GX = $00000530;
  I_EVT_PSEUDOSTATIC_FORCE_GY = $00000531;
  I_EVT_PSEUDOSTATIC_FORCE_GZ = $00000532;
  I_EVT_PSEUDOSTATIC_FORCE_TX = $00000533;
  I_EVT_PSEUDOSTATIC_FORCE_TY = $00000534;
  I_EVT_PSEUDOSTATIC_FORCE_TZ = $00000535;
  I_EVT_TIME_VX = $00000101;
  I_EVT_TIME_VY = $00000102;
  I_EVT_TIME_VZ = $00000103;
  I_EVT_TIME_VRX = $00000104;
  I_EVT_TIME_VRY = $00000105;
  I_EVT_TIME_VRZ = $00000106;
  I_EVT_TIME_AX = $00000107;
  I_EVT_TIME_AY = $00000108;
  I_EVT_TIME_AZ = $00000109;
  I_EVT_TIME_ARX = $0000010A;
  I_EVT_TIME_ARY = $0000010B;
  I_EVT_TIME_ARZ = $0000010C;
  I_EVT_FRF_VX = $000006F7;
  I_EVT_FRF_VY = $000006F8;
  I_EVT_FRF_VZ = $000006F9;
  I_EVT_FOOTFALL_A = $0000073E;
  I_EVT_FOOTFALL_RF_RESONANT = $0000073F;
  I_EVT_FOOTFALL_RF_TRANSIENT = $00000740;
  I_EVT_FOOTFALL_RF_OVERALL = $00000741;
  I_EVT_FOOTFALL_VRMS = $00000742;
  I_EVT_FOOTFALL_VRMQ = $00000743;
  I_EVT_FOOTFALL_FREQUENCY = $00000746;
  I_EVT_FOOTFALL_EXCITATION_NODE = $00000745;
  I_EVT_MODAL_FREQUENCY = $00000194;
  I_EVT_MODAL_PERIOD = $00000195;
  I_EVT_MODAL_PULSATION = $00000196;
  I_EVT_MODAL_CURMASS_UX = $000000B8;
  I_EVT_MODAL_CURMASS_UY = $000000B9;
  I_EVT_MODAL_CURMASS_UZ = $000000BA;
  I_EVT_MODAL_CURMASS_RX = $000000BB;
  I_EVT_MODAL_CURMASS_RY = $000000BC;
  I_EVT_MODAL_CURMASS_RZ = $000000BD;
  I_EVT_MODAL_SUMMASS_UX = $000000BE;
  I_EVT_MODAL_SUMMASS_UY = $000000BF;
  I_EVT_MODAL_SUMMASS_UZ = $000000C0;
  I_EVT_MODAL_SUMMASS_RX = $000000C1;
  I_EVT_MODAL_SUMMASS_RY = $000000C2;
  I_EVT_MODAL_SUMMASS_RZ = $000000C3;
  I_EVT_MODAL_TOTMASS_UX = $000000C4;
  I_EVT_MODAL_TOTMASS_UY = $000000C5;
  I_EVT_MODAL_TOTMASS_UZ = $000000C6;
  I_EVT_MODAL_TOTMASS_RX = $000000C7;
  I_EVT_MODAL_TOTMASS_RY = $000000C8;
  I_EVT_MODAL_TOTMASS_RZ = $000000C9;
  I_EVT_MODAL_PRECISION = $000000D1;
  I_EVT_MODAL_DAMPING = $000003D8;
  I_EVT_MODAL_ENERGY = $000003D9;
  I_EVT_MODAL_AVERAGE_PARTICIPATION_COEFF = $000003DA;
  I_EVT_MODAL_EIGENVALUE = $000000D0;
  I_EVT_MODAL_EIGENVECTOR_UX = $000000E4;
  I_EVT_MODAL_EIGENVECTOR_UY = $000000E5;
  I_EVT_MODAL_EIGENVECTOR_UZ = $000000E6;
  I_EVT_MODAL_EIGENVECTOR_RX = $000000E7;
  I_EVT_MODAL_EIGENVECTOR_RY = $000000E8;
  I_EVT_MODAL_EIGENVECTOR_RZ = $000000E9;
  I_EVT_MODAL_EIGENVECTOR_UX_1 = $000000EA;
  I_EVT_MODAL_EIGENVECTOR_UY_1 = $000000EB;
  I_EVT_MODAL_EIGENVECTOR_UZ_1 = $000000EC;
  I_EVT_MODAL_EIGENVECTOR_RX_1 = $000000ED;
  I_EVT_MODAL_EIGENVECTOR_RY_1 = $000000EE;
  I_EVT_MODAL_EIGENVECTOR_RZ_1 = $000000EF;
  I_EVT_MODAL_PARTICIPATION_COEFF_UX = $000000CA;
  I_EVT_MODAL_PARTICIPATION_COEFF_UY = $000000CB;
  I_EVT_MODAL_PARTICIPATION_COEFF_UZ = $000000CC;
  I_EVT_MODAL_PARTICIPATION_COEFF_RX = $000000CD;
  I_EVT_MODAL_PARTICIPATION_COEFF_RY = $000000CE;
  I_EVT_MODAL_PARTICIPATION_COEFF_RZ = $000000CF;
  I_EVT_MODAL_MASSES_X = $000006E7;
  I_EVT_MODAL_MASSES_Y = $000006E8;
  I_EVT_MODAL_MASSES_Z = $000006E9;
  I_EVT_MODAL_NODE_MASSES_X = $000006EA;
  I_EVT_MODAL_NODE_MASSES_Y = $000006EB;
  I_EVT_MODAL_NODE_MASSES_Z = $000006EC;

// Constants for enum IRobotDirectoryExtension
type
  IRobotDirectoryExtension = TOleEnum;
const
  I_DE_TEMPLATE = $00000033;
  I_DE_USER_CONF = $00000034;
  I_DE_CONF = $00000035;
  I_DE_USER_TEMPLATE = $00000036;

// Constants for enum IRobotTranslateOptions
type
  IRobotTranslateOptions = TOleEnum;
const
  I_TO_COPY = $00000000;
  I_TO_COPY_WITH_DRAG = $00000001;
  I_TO_MOVE = $00000002;

// Constants for enum IRobotBarOffsetAutoPosition
type
  IRobotBarOffsetAutoPosition = TOleEnum;
const
  I_BOAP_0_0 = $00000000;
  I_BOAP_VPY_VPZ = $00000001;
  I_BOAP_0_VPZ = $00000002;
  I_BOAP_VY_VPZ = $00000003;
  I_BOAP_VPY_0 = $00000004;
  I_BOAP_VY_0 = $00000005;
  I_BOAP_VPY_VZ = $00000006;
  I_BOAP_0_VZ = $00000007;
  I_BOAP_VY_VZ = $00000008;

// Constants for enum IRobotFeResultType
type
  IRobotFeResultType = TOleEnum;
const
  I_FRT_DETAILED_SXX = $000001E3;
  I_FRT_DETAILED_SYY = $000001E4;
  I_FRT_DETAILED_SXY = $000001E5;
  I_FRT_DETAILED_NXX = $000001EC;
  I_FRT_DETAILED_NYY = $000001ED;
  I_FRT_DETAILED_NXY = $000001EE;
  I_FRT_DETAILED_MXX = $000001F5;
  I_FRT_DETAILED_MYY = $000001F6;
  I_FRT_DETAILED_MXY = $000001F7;
  I_FRT_DETAILED_TXX = $000001FE;
  I_FRT_DETAILED_TYY = $000001FF;
  I_FRT_DETAILED_QXX = $00000207;
  I_FRT_DETAILED_QYY = $00000208;
  I_FRT_DETAILED_UXX = $00000219;
  I_FRT_DETAILED_UYY = $0000021A;
  I_FRT_DETAILED_WNORM = $00000213;
  I_FRT_DETAILED_RXX = $00000222;
  I_FRT_DETAILED_RYY = $00000223;
  I_FRT_DETAILED_RNORM = $00000225;
  I_FRT_DETAILED_PNORM = $0000022E;
  I_FRT_PRINCIPAL_S1 = $000001E7;
  I_FRT_PRINCIPAL_S2 = $000001E8;
  I_FRT_PRINCIPAL_S1_2 = $000001EA;
  I_FRT_PRINCIPAL_SAL = $000001E9;
  I_FRT_PRINCIPAL_N1 = $000001F0;
  I_FRT_PRINCIPAL_N2 = $000001F1;
  I_FRT_PRINCIPAL_N1_2 = $000001F3;
  I_FRT_PRINCIPAL_NAL = $000001F2;
  I_FRT_PRINCIPAL_M1 = $000001F9;
  I_FRT_PRINCIPAL_M2 = $000001FA;
  I_FRT_PRINCIPAL_M1_2 = $000001FC;
  I_FRT_PRINCIPAL_MAL = $000001FB;
  I_FRT_PRINCIPAL_T1_2 = $00000205;
  I_FRT_PRINCIPAL_Q1_2 = $0000020E;
  I_FRT_PRINCIPAL_UGX = $00000516;
  I_FRT_PRINCIPAL_UGY = $00000517;
  I_FRT_PRINCIPAL_UGZ = $00000518;
  I_FRT_PRINCIPAL_U = $00000519;
  I_FRT_COMPLEX_S_MISES = $000001EB;
  I_FRT_COMPLEX_N_MISES = $000001F4;
  I_FRT_COMPLEX_M_MISES = $000001FD;
  I_FRT_COMPLEX_MXX_TOP_WA = $00000379;
  I_FRT_COMPLEX_MXX_BOTTOM_WA = $0000037A;
  I_FRT_COMPLEX_MYY_TOP_WA = $0000037B;
  I_FRT_COMPLEX_MYY_BOTTOM_WA = $0000037C;
  I_FRT_COMPLEX_MXX_TOP_NEN = $0000037D;
  I_FRT_COMPLEX_MXX_BOTTOM_NEN = $0000037E;
  I_FRT_COMPLEX_MYY_TOP_NEN = $0000037F;
  I_FRT_COMPLEX_MYY_BOTTOM_NEN = $00000380;
  I_FRT_REINF_AX_TOP = $00000000;
  I_FRT_REINF_AX_BOTTOM = $00000001;
  I_FRT_REINF_AY_TOP = $00000002;
  I_FRT_REINF_AY_BOTTOM = $00000003;
  I_FRT_REINF_E_AX_TOP = $00000004;
  I_FRT_REINF_E_AX_BOTTOM = $00000005;
  I_FRT_REINF_E_AY_TOP = $00000006;
  I_FRT_REINF_E_AY_BOTTOM = $00000007;
  I_FRT_REINF_A_MIN = $00000008;
  I_FRT_REINF_AX = $00000009;
  I_FRT_REINF_AY = $0000000A;
  I_FRT_REINF_F = $0000000B;
  I_FRT_REDUCED_NX = $000004C1;
  I_FRT_REDUCED_MZ = $000004C2;
  I_FRT_REDUCED_TY = $000004C3;
  I_FRT_REDUCED_SO = $000004C4;
  I_FRT_REDUCED_SE = $000004C5;
  I_FRT_REDUCED_T = $000004C6;
  I_FRT_REDUCED_TZ = $000004C7;
  I_FRT_REDUCED_MY = $000004C8;
  I_FRT_REDUCED_LENGTH = $000004C9;
  I_FRT_REDUCED_HEIGHT = $000004CA;

// Constants for enum IRobotFeResultSmoothing
type
  IRobotFeResultSmoothing = TOleEnum;
const
  I_FRS_NO_SMOOTHING = $00000000;
  I_FRS_GLOBAL_SMOOTHING = $00000001;
  I_FRS_SMOOTHING_WITHIN_A_PANEL = $00000002;
  I_FRS_SMOOTHING_ACCORDING_TO_SELECTION = $00000003;
  I_FRS_IN_ELEMENT_CENTER = $00000004;

// Constants for enum IRobotUniversalResultType
type
  IRobotUniversalResultType = TOleEnum;
const
  I_URT_VALUE = $00000001;
  I_URT_VALUE_3D = $00000002;
  I_URT_UNKNOWN = $00000000;

// Constants for enum IRobotResultParamType
type
  IRobotResultParamType = TOleEnum;
const
  I_RPT_LOAD_CASE = $00000001;
  I_RPT_LOAD_CASE_CMPNT = $00000002;
  I_RPT_NODE = $00000003;
  I_RPT_BAR = $00000004;
  I_RPT_BAR_DIV_COUNT = $00000005;
  I_RPT_BAR_DIV_POINT = $00000006;
  I_RPT_BAR_RELATIVE_POINT = $00000007;
  I_RPT_MODE = $00000008;
  I_RPT_MODE_CMB = $00000009;
  I_RPT_PANEL = $0000000A;
  I_RPT_ELEMENT = $0000000B;
  I_RPT_LAYER = $0000000C;
  I_RPT_LAYER_ARBITRARY_VALUE = $0000000D;
  I_RPT_REINFORCE_CALC_METHOD = $0000000E;
  I_RPT_REDUCED_CUT_POS = $0000000F;
  I_RPT_STOREY = $00000010;
  I_RPT_CALC_POINT = $00000011;
  I_RPT_LINEAR_SUPPORTS = $00000012;
  I_RPT_DIR_X = $00000013;
  I_RPT_PANEL_PART = $00000014;
  I_RPT_MAX_BUFFER_SIZE = $00000015;
  I_RPT_MULTI_THREADS = $00000016;
  I_RPT_BUFFER_CHUNK_SIZE = $00000017;
  I_RPT_THREAD_COUNT = $00000018;
  I_RPT_DIR_X_DEFTYPE = $00000019;
  I_RPT_SMOOTHING = $0000001A;
  I_RPT_ITERATE_LOAD_CASES = $0000001B;
  I_RPT_BAR_ELEMENT = $0000001C;
  I_RPT_BAR_ELEMENT_DIV_COUNT = $0000001D;
  I_RPT_BAR_ELEMENT_DIV_POINT = $0000001E;
  I_RPT_RESULT_POINT_COORDINATES = $0000001F;
  I_RPT_BAR_ELEMENT_DIV_DISCONTINUITY = $00000020;
  I_RPT_BAR_ELEMENT_DIV_DISCONTINUITY_OFFSET = $00000021;

// Constants for enum IRobotResultQueryReturnType
type
  IRobotResultQueryReturnType = TOleEnum;
const
  I_RQRT_DONE = $00000001;
  I_RQRT_MORE_AVAILABLE = $00000002;

// Constants for enum IRobotSeismicAnalysis_RPS_2000_ZoneType
type
  IRobotSeismicAnalysis_RPS_2000_ZoneType = TOleEnum;
const
  I_SAZT_RPS_2000_1 = $00000000;
  I_SAZT_RPS_2000_2 = $00000001;
  I_SAZT_RPS_2000_3 = $00000002;

// Constants for enum IRobotSeismicAnalysis_RPS_2000_SiteType
type
  IRobotSeismicAnalysis_RPS_2000_SiteType = TOleEnum;
const
  I_SAST_RPS_2000_S1 = $00000000;
  I_SAST_RPS_2000_S2 = $00000001;
  I_SAST_RPS_2000_S3 = $00000002;

// Constants for enum IRobotSeismicAnalysis_RPS_2000_StructureClass
type
  IRobotSeismicAnalysis_RPS_2000_StructureClass = TOleEnum;
const
  I_SASC_RPS_2000_I = $00000000;
  I_SASC_RPS_2000_II = $00000001;

// Constants for enum IRobotSeismicAnalysis_RPA_2003_ZoneType
type
  IRobotSeismicAnalysis_RPA_2003_ZoneType = TOleEnum;
const
  I_SAZT_RPA_2003_I = $00000000;
  I_SAZT_RPA_2003_IIa = $00000001;
  I_SAZT_RPA_2003_IIb = $00000002;
  I_SAZT_RPA_2003_III = $00000003;

// Constants for enum IRobotSeismicAnalysis_RPA_2003_UsageType
type
  IRobotSeismicAnalysis_RPA_2003_UsageType = TOleEnum;
const
  I_SAUT_RPA_2003_1A = $00000000;
  I_SAUT_RPA_2003_1B = $00000001;
  I_SAUT_RPA_2003_2 = $00000002;
  I_SAUT_RPA_2003_3 = $00000003;

// Constants for enum IRobotSeismicAnalysis_RPA_2003_SiteType
type
  IRobotSeismicAnalysis_RPA_2003_SiteType = TOleEnum;
const
  I_SAST_RPA_2003_S1 = $00000000;
  I_SAST_RPA_2003_S2 = $00000001;
  I_SAST_RPA_2003_S3 = $00000002;
  I_SAST_RPA_2003_S4 = $00000003;

// Constants for enum IRobotSeismicAnalysis_ITALY_ORDINANZA_SoilType
type
  IRobotSeismicAnalysis_ITALY_ORDINANZA_SoilType = TOleEnum;
const
  I_SAST_ITALY_ORDINANZA_A = $00000000;
  I_SAST_ITALY_ORDINANZA_B = $00000001;
  I_SAST_ITALY_ORDINANZA_C = $00000002;
  I_SAST_ITALY_ORDINANZA_D = $00000003;
  I_SAST_ITALY_ORDINANZA_E = $00000004;

// Constants for enum IRobotSeismicAnalysis_ITALY_ORDINANZA_ZoneType
type
  IRobotSeismicAnalysis_ITALY_ORDINANZA_ZoneType = TOleEnum;
const
  I_SAZT_ITALY_ORDINANZA_1 = $00000000;
  I_SAZT_ITALY_ORDINANZA_2 = $00000001;
  I_SAZT_ITALY_ORDINANZA_3 = $00000002;
  I_SAZT_ITALY_ORDINANZA_4 = $00000003;

// Constants for enum IRobotSeismicAnalysis_ITALY_ORDINANZA_Spectrum
type
  IRobotSeismicAnalysis_ITALY_ORDINANZA_Spectrum = TOleEnum;
const
  I_SAS_ITALY_ORDINANZA_DESIGN = $00000000;
  I_SAS_ITALY_ORDINANZA_ELASTIC = $00000001;

// Constants for enum IRobotSeismicAnalysis_ITALY_ORDINANZA_Direction
type
  IRobotSeismicAnalysis_ITALY_ORDINANZA_Direction = TOleEnum;
const
  I_SAD_ITALY_ORDINANZA_HORIZONTAL = $00000000;
  I_SAD_ITALY_ORDINANZA_VERTICAL = $00000001;

// Constants for enum IRobotCodeCmbGenerationType
type
  IRobotCodeCmbGenerationType = TOleEnum;
const
  I_CCGT_NONE = $00000000;
  I_CCGT_SIMPLIFIED = $00000001;
  I_CCGT_FULL = $00000002;
  I_CCGT_MANUAL = $00000003;

// Constants for enum IRobotDynamicAnalysisDampingType
type
  IRobotDynamicAnalysisDampingType = TOleEnum;
const
  I_DADT_NONE = $00000000;
  I_DADT_CONSTANT = $00000001;
  I_DADT_VARIABLE = $00000003;
  I_DADT_MODAL = $00000002;

// Constants for enum IRobotFootfallAnalysisExcitationMethod
type
  IRobotFootfallAnalysisExcitationMethod = TOleEnum;
const
  I_FAEM_SELF_EXCITATION = $00000001;
  I_FAEM_FULL_EXCITATION = $00000002;

// Constants for enum IRobotFootfallAnalysisExcitationForces
type
  IRobotFootfallAnalysisExcitationForces = TOleEnum;
const
  I_FAEF_CONCRETE_CENTRE = $00000001;
  I_FAEF_SCI_P354 = $00000002;

// Constants for enum IRobotFootfallAnalysisNodeSelectionType
type
  IRobotFootfallAnalysisNodeSelectionType = TOleEnum;
const
  I_FANST_ALL_NODES = $00000001;
  I_FANST_SELECTED_NODES = $00000002;
  I_FANST_NODES_BELONGING_TO_SELECTED_PANELS = $00000003;

// Constants for enum IRobotCaseRelatedValueType
type
  IRobotCaseRelatedValueType = TOleEnum;
const
  I_CRVT_FRF_FREQUENCY = $00000001;

// Constants for enum IRobotObjectStructuralType
type
  IRobotObjectStructuralType = TOleEnum;
const
  I_OST_UNDEFINED = $00000000;
  I_OST_BEAM = $00000001;
  I_OST_COLUMN = $00000002;
  I_OST_SLAB = $00000004;
  I_OST_WALL = $00000005;

// Constants for enum IRobotPredefinedLabel
type
  IRobotPredefinedLabel = TOleEnum;
const
  I_PL_MEMBER_TYPE_TIMBER_MEMBER = $00000001;
  I_PL_MEMBER_TYPE_TIMBER_COLUMN = $00000002;
  I_PL_MEMBER_TYPE_TIMBER_BEAM = $00000003;
  I_PL_MEMBER_TYPE_SIMPLE_BAR = $00000004;
  I_PL_MEMBER_TYPE_COLUMN = $00000005;
  I_PL_MEMBER_TYPE_BEAM = $00000006;
  I_PL_PANEL_CALC_MODEL_SHELL = $0000000B;
  I_PL_PANEL_CALC_MODEL_SLAB_FLEXIBLE_DIAPHRAGM = $0000000C;
  I_PL_PANEL_CALC_MODEL_SLAB_RIGID_DIAPHRAGM = $0000000D;
  I_PL_PANEL_CALC_MODEL_CURTAIN_WALL = $0000000E;
  I_PL_PANEL_CALC_MODEL_DECK_SLAB = $0000000F;
  I_PL_PANEL_REINFORCEMENT_RC_FLOOR = $00000015;
  I_PL_PANEL_REINFORCEMENT_RC_WALL = $00000016;
  I_PL_PANEL_REINFORCEMENT_RC_SHELL = $00000017;
  I_PL_MEMBER_TYPE_RC_BEAM = $00000007;
  I_PL_MEMBER_TYPE_RC_COLUMN = $00000008;
  I_PL_MEMBER_REINFORCEMENT_PARAMS_STANDARD = $0000001F;
  I_PL_PANEL_CALC_MODEL_SLAB_XY_DIAPHRAGM = $00000010;

// Constants for enum IRobotUpliftDirection
type
  IRobotUpliftDirection = TOleEnum;
const
  I_UD_UY = $00000001;
  I_UD_UZ = $00000002;

// Constants for enum IRobotUpliftSense
type
  IRobotUpliftSense = TOleEnum;
const
  I_US_NONE = $00000000;
  I_US_MINUS = $00000001;
  I_US_PLUS = $00000002;

// Constants for enum IRobotDatabaseType
type
  IRobotDatabaseType = TOleEnum;
const
  I_DT_SECTIONS = $00000001;
  I_DT_VEHICLE_LOADS = $00000002;
  I_DT_STANDARD_LOADS = $00000003;
  I_DT_BUILDING_SOILS = $00000004;
  I_DT_BOLTS = $00000005;
  I_DT_ANCHOR_BOLTS = $00000006;
  I_DT_REINFORCING_BARS = $00000007;
  I_DT_WIRE_FABRICS = $00000008;

// Constants for enum IRobotSELFSeismicLevelDefinitionMethod
type
  IRobotSELFSeismicLevelDefinitionMethod = TOleEnum;
const
  I_SSLDM_AUTOMATIC = $00000000;
  I_SSLDM_BY_Z_COORDINATE = $00000001;
  I_SSLDM_BY_STOREY = $00000002;

// Constants for enum IRobotSELFSeismicTBaseMethod
type
  IRobotSELFSeismicTBaseMethod = TOleEnum;
const
  I_SSTBM_APPROXIMATE_BY_CODE = $00000000;
  I_SSTBM_USER_DEFINED = $00000001;
  I_SSTBM_PRECISE_MODAL = $00000002;
  I_SSTBM_PRECISE_MODAL_WITH_MASS = $00000003;

// Constants for enum IRobotSELFSeismic_ASCE_7_10_SiteClassType
type
  IRobotSELFSeismic_ASCE_7_10_SiteClassType = TOleEnum;
const
  I_SSSCT_ASCE_7_10_A = $00000001;
  I_SSSCT_ASCE_7_10_B = $00000002;
  I_SSSCT_ASCE_7_10_C = $00000003;
  I_SSSCT_ASCE_7_10_D = $00000004;
  I_SSSCT_ASCE_7_10_E = $00000005;
  I_SSSCT_ASCE_7_10_F = $00000006;

// Constants for enum IRobotSELFSeismic_ASCE_7_10_StructureType
type
  IRobotSELFSeismic_ASCE_7_10_StructureType = TOleEnum;
const
  I_SSST_ASCE_7_10_STEEL_FRAMES = $00000001;
  I_SSST_ASCE_7_10_CONCRETE_FRAMES = $00000002;
  I_SSST_ASCE_7_10_BRACED_STEEL_FRAMES = $00000003;
  I_SSST_ASCE_7_10_OTHER_STRUCTURE_SYSTEM = $00000004;

// Constants for enum IRobotSELFSeismic_EC_8_StructureType
type
  IRobotSELFSeismic_EC_8_StructureType = TOleEnum;
const
  I_SSST_EC_8_STEEL_FRAMES = $00000001;
  I_SSST_EC_8_CONCRETE_FRAMES = $00000002;
  I_SSST_EC_8_BRACED_STEEL_FRAMES = $00000003;
  I_SSST_EC_8_OTHER_STRUCTURE_SYSTEM = $00000004;

// Constants for enum IRobotSELFSeismic_EC_8_SiteClass
type
  IRobotSELFSeismic_EC_8_SiteClass = TOleEnum;
const
  I_SSSC_EC_8_A = $00000001;
  I_SSSC_EC_8_B = $00000002;
  I_SSSC_EC_8_C = $00000004;
  I_SSSC_EC_8_D = $00000008;
  I_SSSC_EC_8_E = $00000010;
  I_SSSC_EC_8_ENVELOPE = $000000FF;

// Constants for enum IRobotSELFSeismic_EC_8_SpectrumType
type
  IRobotSELFSeismic_EC_8_SpectrumType = TOleEnum;
const
  I_SSST_EC_8_Type1 = $00000001;
  I_SSST_EC_8_Type2 = $00000002;

// Constants for enum IRobotSELFSeismic_AS_1170_4_SoilCategoryType
type
  IRobotSELFSeismic_AS_1170_4_SoilCategoryType = TOleEnum;
const
  I_SSSC_AS_1170_4_A = $00000001;
  I_SSSC_AS_1170_4_B = $00000002;
  I_SSSC_AS_1170_4_C = $00000003;
  I_SSSC_AS_1170_4_D = $00000004;
  I_SSSC_AS_1170_4_E = $00000005;

// Constants for enum IRobotSELFSeismic_AS_1170_4_StructureType
type
  IRobotSELFSeismic_AS_1170_4_StructureType = TOleEnum;
const
  I_SSST_AS_1170_4_STEEL_FRAMES = $00000001;
  I_SSST_AS_1170_4_CONCRETE_FRAMES = $00000002;
  I_SSST_AS_1170_4_BRACED_STEEL_FRAMES = $00000003;
  I_SSST_AS_1170_4_OTHER_STRUCTURES = $00000004;

// Constants for enum IRobotSELFSeismic_AS_1170_4_ProbabilityType
type
  IRobotSELFSeismic_AS_1170_4_ProbabilityType = TOleEnum;
const
  I_SSPT_AS_1170_4_1_2500 = $00000001;
  I_SSPT_AS_1170_4_1_2000 = $00000002;
  I_SSPT_AS_1170_4_1_1500 = $00000003;
  I_SSPT_AS_1170_4_1_1000 = $00000004;
  I_SSPT_AS_1170_4_1_800 = $00000005;
  I_SSPT_AS_1170_4_1_500 = $00000006;
  I_SSPT_AS_1170_4_1_250 = $00000007;
  I_SSPT_AS_1170_4_1_200 = $00000008;
  I_SSPT_AS_1170_4_1_100 = $00000009;
  I_SSPT_AS_1170_4_1_50 = $0000000A;
  I_SSPT_AS_1170_4_1_25 = $0000000B;
  I_SSPT_AS_1170_4_1_20 = $0000000C;

// Constants for enum IRobotCalculationStatus
type
  IRobotCalculationStatus = TOleEnum;
const
  I_CS_COMPLETED = $00000000;
  I_CS_FAILED_VERIFICATION = $00000001;
  I_CS_FAILED_CALCULATION = $00000002;
  I_CS_CANCELLED_BY_USER = $00000003;
  I_CS_FAILED_GENERATION = $00000004;
  I_CS_IN_PROGRESS = $FFFFFFFF;
  I_CS_FAILED_NO_ENTITLEMENT = $00000005;

// Constants for enum IRobotCalculationMode
type
  IRobotCalculationMode = TOleEnum;
const
  I_CM_LOCAL = $00000000;
  I_CM_LOCAL_ASYNCHRONOUS = $00000001;
  I_CM_CLOUD = $00000002;
  I_CM_CLOUD_ASYNCHRONOUS = $00000003;

// Constants for enum IRobotResultStatusType
type
  IRobotResultStatusType = TOleEnum;
const
  I_RST_NONE = $00000000;
  I_RST_AVAILABLE = $00000001;
  I_RST_OUT_OF_DATE = $00000002;

// Constants for enum IRobotSeismicResidualModeDefinitionType
type
  IRobotSeismicResidualModeDefinitionType = TOleEnum;
const
  I_SRMDT_LAST_CALC_MODE = $00000000;
  I_SRMDT_LIMIT_FREQUENCY = $00000001;

// Constants for enum IRobotSeismicAnalysis_EC8_SpectrumType
type
  IRobotSeismicAnalysis_EC8_SpectrumType = TOleEnum;
const
  I_EC8_SAST_TYPE_1 = $00000000;
  I_EC8_SAST_TYPE_2 = $00000001;

// Constants for enum IRobotSeismicAnalysis_EC8_GroundType
type
  IRobotSeismicAnalysis_EC8_GroundType = TOleEnum;
const
  I_EC8_SAGT_A = $00000000;
  I_EC8_SAGT_B = $00000001;
  I_EC8_SAGT_C = $00000002;
  I_EC8_SAGT_D = $00000003;
  I_EC8_SAGT_E = $00000004;

// Constants for enum IRobotDAMAnalysisType
type
  IRobotDAMAnalysisType = TOleEnum;
const
  I_DAT_ANSI_AISC_360_10_LRFD = $00000000;
  I_DAT_ANSI_AISC_360_10_ASD = $00000001;
  I_DAT_USER_DEFINED = $00000002;

// Constants for enum IRobotDAMLateralLoadCombType
type
  IRobotDAMLateralLoadCombType = TOleEnum;
const
  I_DLLCT_LATERAL_LOAD_DIR = $00000000;
  I_DLLCT_ONE_DIR_ONLY = $00000001;
  I_DLLCT_TWO_DIR_INDEPENDENTLY = $00000002;

// Constants for enum IRobotDAMSteelMembersReductionType
type
  IRobotDAMSteelMembersReductionType = TOleEnum;
const
  I_DSMRT_FACTOR_0_8 = $00000000;
  I_DSMRT_FACTOR_0_8_AND_TAU_B = $00000001;
  I_DSMRT_FACTOR_0_8_AND_NL_INCREASE = $00000002;

// Constants for enum IRobotCasePredefinedNumber
type
  IRobotCasePredefinedNumber = TOleEnum;
const
  I_CPN_MASS_CONVERSION_GLOBAL = $FFFFFFFE;
  I_CPN_MASS_CONVERSION_DYNAMIC = $FFFFFFFF;

// Constants for enum IRobotLabelType
type
  IRobotLabelType = TOleEnum;
const
  I_LT_NODE_SUPPORT = $00000000;
  I_LT_NODE_RELEASE = $00000001;
  I_LT_NODE_COMPATIBILITY = $00000002;
  I_LT_BAR_SECTION = $00000003;
  I_LT_BAR_RELEASE = $00000004;
  I_LT_BAR_OFFSET = $00000005;
  I_LT_BAR_CABLE = $00000006;
  I_LT_BAREND_BRACKET = $00000007;
  I_LT_BAR_MATERIAL = $00000008;
  I_LT_EDGE_SUPPORT = $0000000A;
  I_LT_PANEL_THICKNESS = $0000000B;
  I_LT_PANEL_REINFORCEMENT = $0000000C;
  I_LT_UNKNOWN = $FFFFFFFF;
  I_LT_SUPPORT = $00000000;
  I_LT_MATERIAL = $00000008;
  I_LT_LINEAR_RELEASE = $0000000D;
  I_LT_BAR_ELASTIC_GROUND = $0000000E;
  I_LT_NODE_RIGID_LINK = $0000000F;
  I_LT_MEMBER_TYPE = $00000010;
  I_LT_VEHICLE = $00000011;
  I_LT_SOLID_PROPERTIES = $00000012;
  I_LT_BAR_GEO_IMPERFECTIONS = $00000013;
  I_LT_BAR_NONLINEAR_HINGE = $00000014;
  I_LT_CLADDING = $00000015;
  I_LT_PANEL_CALC_MODEL = $00000016;
  I_LT_MEMBER_REINFORCEMENT_PARAMS = $00000019;
  I_LT_COUNT = $0000001A;

// Constants for enum IRobotObjectType
type
  IRobotObjectType = TOleEnum;
const
  I_OT_NODE = $00000000;
  I_OT_BAR = $00000001;
  I_OT_PANEL = $00000004;
  I_OT_FINITE_ELEMENT = $00000005;
  I_OT_GEOMETRY = $00000006;
  I_OT_FAMILY = $00000003;
  I_OT_CASE = $00000002;
  I_OT_OBJECT = $FFFFFFFE;
  I_OT_UNDEFINED = $FFFFFFFF;
  I_OT_VOLUME = $00000007;

// Constants for enum IRobotMaterialType
type
  IRobotMaterialType = TOleEnum;
const
  I_MT_ALL = $00000000;
  I_MT_STEEL = $00000001;
  I_MT_ALUMINIUM = $00000003;
  I_MT_TIMBER = $00000004;
  I_MT_CONCRETE = $00000002;
  I_MT_OTHER = $00000005;

// Constants for enum IRobotNodeSupportFixingDirection
type
  IRobotNodeSupportFixingDirection = TOleEnum;
const
  I_NSFD_UX = $00000000;
  I_NSFD_UY = $00000001;
  I_NSFD_UZ = $00000002;
  I_NSFD_RX = $00000003;
  I_NSFD_RY = $00000004;
  I_NSFD_RZ = $00000005;

// Constants for enum IRobotNodeSupportOneDirectionFixingType
type
  IRobotNodeSupportOneDirectionFixingType = TOleEnum;
const
  I_NSODFT_NONE = $00000000;
  I_NSODFT_MINUS = $FFFFFFFF;
  I_NSODFT_PLUS = $00000001;

// Constants for enum IRobotAdvancedSupportType
type
  IRobotAdvancedSupportType = TOleEnum;
const
  I_AST_NODAL = $00000001;
  I_AST_COLUMN_RECTANGULAR = $00000002;
  I_AST_COLUMN_CIRCULAR = $00000003;
  I_AST_WALL_MASONRY = $00000004;
  I_AST_WALL_CONCRETE = $00000005;

// Constants for enum IRobotGeoCoordinateAxisSense
type
  IRobotGeoCoordinateAxisSense = TOleEnum;
const
  I_GCAS_OX_PLUS = $00000001;
  I_GCAS_OY_PLUS = $00000002;
  I_GCAS_OZ_PLUS = $00000003;
  I_GCAS_OX_MINUS = $FFFFFFFF;
  I_GCAS_OY_MINUS = $FFFFFFFE;
  I_GCAS_OZ_MINUS = $FFFFFFFD;

// Constants for enum IRobotNonlinearHingeModelType
type
  IRobotNonlinearHingeModelType = TOleEnum;
const
  I_NHMT_FORCE_DISPLACEMENT = $00000001;
  I_NHMT_MOMENT_ROTATION = $00000002;
  I_NHMT_STRESS_PAIN = $00000003;

// Constants for enum IRobotNonlinearHingeModelUnloadingType
type
  IRobotNonlinearHingeModelUnloadingType = TOleEnum;
const
  I_NHMUT_ELASTIC = $00000001;
  I_NHMUT_PLASTIC = $00000002;
  I_NHMUT_DAMAGE = $00000003;
  I_NHMUT_MIXED = $00000004;

// Constants for enum IRobotMaterialTimberType
type
  IRobotMaterialTimberType = TOleEnum;
const
  I_MTT_NORMAL = $00000000;
  I_MTT_GLUE_LAMINATED = $00000001;
  I_MTT_KERTO_S = $00000002;
  I_MTT_KERTO_Q = $00000003;
  I_MTT_KERTO_S_OLD = $00000004;
  I_MTT_KERTO_Q_OLD = $00000005;

// Constants for enum IRobotBarSectionNonstdDataValue
type
  IRobotBarSectionNonstdDataValue = TOleEnum;
const
  I_BSNDV_BOX_H = $00000000;
  I_BSNDV_BOX_B = $00000001;
  I_BSNDV_BOX_TF = $00000002;
  I_BSNDV_BOX_TW = $00000003;
  I_BSNDV_I_H = $00000000;
  I_BSNDV_I_B = $00000001;
  I_BSNDV_I_TF = $00000002;
  I_BSNDV_I_TW = $00000003;
  I_BSNDV_II_H = $00000000;
  I_BSNDV_II_TW = $00000001;
  I_BSNDV_II_TF1 = $00000002;
  I_BSNDV_II_TF2 = $00000003;
  I_BSNDV_II_B1 = $00000004;
  I_BSNDV_II_B2 = $00000005;
  I_BSNDV_TUBE_D = $00000000;
  I_BSNDV_TUBE_T = $00000001;
  I_BSNDV_RECT_B = $00000000;
  I_BSNDV_RECT_H = $00000001;
  I_BSNDV_RECT_T = $00000002;
  I_BSNDV_C_H = $00000000;
  I_BSNDV_C_B = $00000001;
  I_BSNDV_C_TF = $00000002;
  I_BSNDV_C_TW = $00000003;
  I_BSNDV_L_H = $00000000;
  I_BSNDV_L_B = $00000001;
  I_BSNDV_L_TF = $00000002;
  I_BSNDV_L_TW = $00000003;
  I_BSNDV_Z_H = $00000000;
  I_BSNDV_Z_B = $00000001;
  I_BSNDV_Z_TF = $00000002;
  I_BSNDV_Z_TW = $00000003;
  I_BSNDV_T_H = $00000000;
  I_BSNDV_T_B = $00000001;
  I_BSNDV_T_TF = $00000002;
  I_BSNDV_T_TW = $00000003;
  I_BSNDV_H_H = $00000000;
  I_BSNDV_H_B = $00000001;
  I_BSNDV_H_B1 = $00000002;
  I_BSNDV_H_TF = $00000003;
  I_BSNDV_H_TW = $00000004;
  I_BSNDV_XT_H = $00000000;
  I_BSNDV_XT_H1 = $00000001;
  I_BSNDV_XT_B = $00000002;
  I_BSNDV_XT_TF = $00000003;
  I_BSNDV_XT_TW = $00000004;
  I_BSNDV_XI_H = $00000000;
  I_BSNDV_XI_H1 = $00000001;
  I_BSNDV_XI_B = $00000002;
  I_BSNDV_XI_TF = $00000003;
  I_BSNDV_XI_TW = $00000004;
  I_BSNDV_DRECT_B = $00000000;
  I_BSNDV_DRECT_H = $00000001;
  I_BSNDV_DRECT_D = $00000002;
  I_BSNDV_CROSS_P1_L = $00000000;
  I_BSNDV_CROSS_P2_L = $00000001;
  I_BSNDV_CROSS_P3_L = $00000002;
  I_BSNDV_CROSS_P4_L = $00000003;
  I_BSNDV_CROSS_P1_T = $00000004;
  I_BSNDV_CROSS_P2_T = $00000005;
  I_BSNDV_CROSS_P3_T = $00000006;
  I_BSNDV_CROSS_P4_T = $00000007;
  I_BSNDV_HOLE_B = $00000000;
  I_BSNDV_HOLE_H = $00000001;
  I_BSNDV_HOLE_X = $00000002;
  I_BSNDV_HOLE_Z = $00000003;
  I_BSNDV_BOX_2_H = $00000000;
  I_BSNDV_BOX_2_B = $00000001;
  I_BSNDV_BOX_2_B1 = $00000002;
  I_BSNDV_BOX_2_TF = $00000003;
  I_BSNDV_BOX_2_TW = $00000004;
  I_BSNDV_POLYGONAL_N = $00000000;
  I_BSNDV_POLYGONAL_D = $00000001;
  I_BSNDV_POLYGONAL_T = $00000002;
  I_BSNDV_POLYGONAL_D_IS_INT = $00000003;
  I_BSNDV_BOX_3_H = $00000000;
  I_BSNDV_BOX_3_B = $00000001;
  I_BSNDV_BOX_3_TW = $00000002;
  I_BSNDV_BOX_3_TF = $00000003;
  I_BSNDV_BOX_3_B1 = $00000004;
  I_BSNDV_BOX_3_B2 = $00000005;
  I_BSNDV_BOX_3_TF2 = $00000006;

// Constants for enum IRobotBarSectionType
type
  IRobotBarSectionType = TOleEnum;
const
  I_BST_STANDARD = $00000000;
  I_BST_NS_BOX = $00000001;
  I_BST_NS_I = $00000002;
  I_BST_NS_II = $00000003;
  I_BST_NS_TUBE = $00000004;
  I_BST_NS_RECT = $00000005;
  I_BST_NS_C = $00000006;
  I_BST_NS_L = $00000007;
  I_BST_NS_LP = $00000008;
  I_BST_NS_Z = $00000009;
  I_BST_NS_ZP = $0000000A;
  I_BST_NS_T = $0000000B;
  I_BST_NS_H = $0000000C;
  I_BST_NS_XT = $0000000D;
  I_BST_NS_XI = $0000000E;
  I_BST_NS_DRECT = $0000000F;
  I_BST_NS_CROSS = $00000010;
  I_BST_NS_HOLE = $00000063;
  I_BST_COMPLEX = $000003E8;
  I_BST_NS_BOX_2 = $00000011;
  I_BST_NS_POLYGONAL = $00000012;
  I_BST_SPECIAL = $000003E9;
  I_BST_JOIST = $000003EA;
  I_BST_NS_BOX_3 = $00000014;

// Constants for enum IRobotMaterialElasticType
type
  IRobotMaterialElasticType = TOleEnum;
const
  I_MET_PERFECTLY_PLASTIC = $00000000;
  I_MET_PLASTIC_WITH_HARDENING = $00000001;

// Constants for enum IRobotMaterialElasticUnloadingMethod
type
  IRobotMaterialElasticUnloadingMethod = TOleEnum;
const
  I_MEUM_ELASTIC = $00000001;
  I_MEUM_PLASTIC = $00000002;
  I_MEUM_DAMAGE = $00000003;
  I_MEUM_MIXED = $00000004;

// Constants for enum IRobotGeoCoordinateSystem
type
  IRobotGeoCoordinateSystem = TOleEnum;
const
  I_GCS_GLOBAL = $00000000;
  I_GCS_LOCAL = $00000001;
  I_GCS_LOCAL_AFTER_OFFSET = $00000001;
  I_GCS_LOCAL_ORIGINAL = $00000002;

// Constants for enum IRobotFeLayerType
type
  IRobotFeLayerType = TOleEnum;
const
  I_FLT_UPPER = $00000001;
  I_FLT_MIDDLE = $00000002;
  I_FLT_LOWER = $00000003;
  I_FLT_ARBITRARY = $00000004;
  I_FLT_MAXIMUM = $00000005;
  I_FLT_MINIMUM = $00000006;
  I_FLT_ABSOLUTE_MAXIMUM = $00000007;

// Constants for enum IRobotReinforceCalcMethods
type
  IRobotReinforceCalcMethods = TOleEnum;
const
  I_RCM_NEN = $00000001;
  I_RCM_WOOD_ARMER = $00000002;
  I_RCM_ANALYTICAL = $00000003;

// Constants for enum IRobotObjLocalXDirDefinitionType
type
  IRobotObjLocalXDirDefinitionType = TOleEnum;
const
  I_OLXDDT_UNDEFINED = $00000000;
  I_OLXDDT_CARTESIAN = $00000001;
  I_OLXDDT_POLAR = $00000002;

// Constants for enum IRobotFeResultReducedCutPosition
type
  IRobotFeResultReducedCutPosition = TOleEnum;
const
  I_FRRCP_VERTICAL_LEFT = $00000004;
  I_FRRCP_VERTICAL_MIDDLE = $00000005;
  I_FRRCP_VERTICAL_RIGHT = $00000006;
  I_FRRCP_HORIZONTAL_TOP = $00000003;
  I_FRRCP_HORIZONTAL_MIDDLE = $00000002;
  I_FRRCP_HORIZONTAL_BOTTOM = $00000001;

// Constants for enum IRobotPanelCutDefinitionType
type
  IRobotPanelCutDefinitionType = TOleEnum;
const
  I_PCDT_FULL_PLANE = $00000001;
  I_PCDT_LIMITED_PLANE = $00000002;

// Constants for enum IRobotModeSelectionType
type
  IRobotModeSelectionType = TOleEnum;
const
  I_MST_NONE = $00000001;
  I_MST_ALL = $00000002;
  I_MST_SINGLE = $00000003;
  I_MST_FIRST_N = $00000004;

// Constants for enum IRobotEquationSolvingMethod
type
  IRobotEquationSolvingMethod = TOleEnum;
const
  I_ESM_FRONTAL = $00000000;
  I_ESM_SKYLINE = $00000001;
  I_ESM_SPARSE = $00000004;
  I_ESM_SPARSE_M = $00000005;
  I_ESM_ITERATIVE = $00000002;
  I_ESM_AUTO = $00000003;
  I_ESM_MULTI_THREADED = $00000007;

// Constants for enum IRobotPredefinedSelection
type
  IRobotPredefinedSelection = TOleEnum;
const
  I_PS_CASE_SIMPLE_CASES = $00000002;
  I_PS_CASE_COMBINATIONS = $00000003;
  I_PS_CASE_CODE_COMBINATIONS = $00000004;
  I_PS_NODE_USER_NODES = $00000015;
  I_PS_NODE_CALC_NODES = $00000016;
  I_PS_NODE_SUPPORTED = $00000017;
  I_PS_BAR_INACTIVE = $0000001F;

// Constants for enum IRobotObjPartType
type
  IRobotObjPartType = TOleEnum;
const
  I_OPT_MAIN = $00000000;
  I_OPT_REFERENCE = $00000001;
  I_OPT_SIDE = $00000002;

// Constants for enum IRobotGeoObjectType
type
  IRobotGeoObjectType = TOleEnum;
const
  I_GOT_NONE = $00000000;
  I_GOT_POLYLINE = $00000001;
  I_GOT_CONTOUR = $00000002;
  I_GOT_ARC = $00000004;
  I_GOT_CIRCLE = $00000007;
  I_GOT_INTERSECTION = $00000064;

// Constants for enum IRobotObjModificationType
type
  IRobotObjModificationType = TOleEnum;
const
  I_OMT_NONE = $00000011;
  I_OMT_EXTRUSION = $00000007;
  I_OMT_LATHE = $00000008;
  I_OMT_PYRAMID = $00000009;

// Constants for enum IRobotObjOperationType
type
  IRobotObjOperationType = TOleEnum;
const
  I_OOT_NONE = $00000010;
  I_OOT_MESH = $00000001;
  I_OOT_TRANSLATE = $00000002;
  I_OOT_SCALE = $00000003;
  I_OOT_ROTATE = $00000012;

// Constants for enum IRobotMeshVolumetricFEType
type
  IRobotMeshVolumetricFEType = TOleEnum;
const
  I_MVFET_4NODE_TETRAHED = $00000001;
  I_MVFET_8NODE_HEXAHED = $00000002;

// Constants for enum IRobotMeshMethodType
type
  IRobotMeshMethodType = TOleEnum;
const
  I_MMT_DELAUNAY = $00000001;
  I_MMT_COONS = $00000002;

// Constants for enum IRobotMeshForcingRatio
type
  IRobotMeshForcingRatio = TOleEnum;
const
  I_MFR_NONE = $00000001;
  I_MFR_ANY = $00000002;
  I_MFR_PROPOSED = $00000003;
  I_MFR_RECOMMENDED = $00000004;
  I_MFR_FORCED = $00000005;

// Constants for enum IRobotMeshImplementDegree
type
  IRobotMeshImplementDegree = TOleEnum;
const
  I_MID_OFTEN = $00000001;
  I_MID_RARELY = $00000002;
  I_MID_NEVER = $00000003;

// Constants for enum IRobotMeshGenerationType
type
  IRobotMeshGenerationType = TOleEnum;
const
  I_MGT_AUTOMATIC = $00000001;
  I_MGT_USER = $00000002;
  I_MGT_ELEMENT_SIZE = $00000003;

// Constants for enum IRobotMeshSurfaceFEType
type
  IRobotMeshSurfaceFEType = TOleEnum;
const
  I_MSFET_3NODE_TRIANG = $00000001;
  I_MSFET_4NODE_QUADRIL = $00000002;
  I_MSFET_6NODE_TRIANG = $00000003;
  I_MSFET_8NODE_QUADRIL = $00000004;

// Constants for enum IRobotMeshPanelDivType
type
  IRobotMeshPanelDivType = TOleEnum;
const
  I_MPDT_TRIANG_IN_TRIANG = $00000001;
  I_MPDT_TRIANG_AND_SQUARE_IN_TRIANG = $00000002;
  I_MPDT_TRIANG_AND_TRAPEZ_IN_TRIANG = $00000003;
  I_MPDT_SQUARE_IN_RECT = $00000004;
  I_MPDT_TRIANG_IN_RECT = $00000005;

// Constants for enum IRobotMeshDelaunayType
type
  IRobotMeshDelaunayType = TOleEnum;
const
  I_MDT_DELAUNAY = $00000001;
  I_MDT_KANG = $00000002;
  I_MDT_DELAUNAY_AND_KANG = $00000003;

// Constants for enum IRobotMeshAccessType
type
  IRobotMeshAccessType = TOleEnum;
const
  I_MAT_SURFACE_AND_VOLUMETRIC = $00000001;
  I_MAT_SURFACE_ONLY = $00000002;
  I_MAT_VOLUMETRIC_ONLY = $00000003;

// Constants for enum IRobotMeshType
type
  IRobotMeshType = TOleEnum;
const
  I_MT_FINE = $00000002;
  I_MT_COARSE = $00000000;
  I_MT_NORMAL = $00000001;
  I_MT_USER = $00000003;
  I_MT_WALLS_COARSE = $00000004;
  I_MT_WALLS_NORMAL = $00000005;
  I_MT_FLOORS_COARSE = $00000006;
  I_MT_FLOORS_NORMAL = $00000007;

// Constants for enum IRobotGeoArcDefinitionMethod
type
  IRobotGeoArcDefinitionMethod = TOleEnum;
const
  I_GADM_CENTER_BEGIN_END = $00000000;
  I_GADM_BEGIN_MIDDLE_END = $00000001;

// Constants for enum IRobotMeshRefinementType
type
  IRobotMeshRefinementType = TOleEnum;
const
  I_MRT_DOUBLE = $00000001;
  I_MRT_TRIPLE = $00000002;
  I_MRT_SIMPLE = $00000003;

// Constants for enum IRobotProjectType
type
  IRobotProjectType = TOleEnum;
const
  I_PT_FRAME_2D = $00000001;
  I_PT_TRUSS_2D = $00000002;
  I_PT_GRILLAGE = $00000003;
  I_PT_FRAME_3D = $00000004;
  I_PT_TRUSS_3D = $00000005;
  I_PT_PLATE = $00000006;
  I_PT_SHELL = $00000007;
  I_PT_AXISYMMETRIC = $00000008;
  I_PT_VOLUMETRIC = $00000009;
  I_PT_CONCRETE_BEAM = $0000000A;
  I_PT_CONCRETE_COLUMN = $0000000B;
  I_PT_FOUNDATION = $0000000C;
  I_PT_PARAMETRIZED = $0000000D;
  I_PT_STEEL_CONNECTION = $0000000E;
  I_PT_SECTION = $0000000F;
  I_PT_PLANE_STRESS = $00000010;
  I_PT_PLANE_DEFORMATION = $00000011;
  I_PT_DEEP_BEAM = $00000012;
  I_PT_CONCRETE_DEEP_BEAM = $00000012;
  I_PT_BUILDING = $00000013;

// Constants for enum IRobotParamValueType
type
  IRobotParamValueType = TOleEnum;
const
  I_PVT_TEXT = $00000001;
  I_PVT_INTEGER = $00000002;
  I_PVT_REAL = $00000003;

// Constants for enum IRobotLanguage
type
  IRobotLanguage = TOleEnum;
const
  I_L_WORK = $00000001;
  I_L_PRINTOUT = $00000002;
  I_L_REGIONAL = $00000003;

// Constants for enum IRobotDirectory
type
  IRobotDirectory = TOleEnum;
const
  I_D_EXE = $00000001;
  I_D_RES = $00000002;
  I_D_CONF = $00000003;
  I_D_USER_CONF = $00000004;
  I_D_TEMPLATE = $00000005;
  I_D_HELP = $00000006;
  I_D_USER_OUTPUT = $00000007;
  I_D_MAIN = $00000008;
  I_D_USER_MAIN = $00000009;
  I_D_USER_PROJECTS = $0000000A;
  I_D_USER_TEMPLATE = $0000000B;

// Constants for enum IRobotCodeType
type
  IRobotCodeType = TOleEnum;
const
  I_CT_STEEL_STRUCTURES = $00000000;
  I_CT_STEEL_CONNECTIONS = $00000001;
  I_CT_TIMBER_STRUCTURES = $00000002;
  I_CT_RC_REAL_REINF = $00000003;
  I_CT_RC_THEORETICAL_REINF = $00000004;
  I_CT_FOUNDATIONS_DESIGN = $00000005;
  I_CT_CODE_COMBINATIONS = $00000009;
  I_CT_SNOW_WIND_LOADS = $00000006;
  I_CT_SEISMIC_LOADS = $00000007;
  I_CT_MOVING_LOADS = $00000008;

// Constants for enum IRobotUnitEditionType
type
  IRobotUnitEditionType = TOleEnum;
const
  I_UMT_LENGTH = $00000000;
  I_UMT_FORCE = $00000001;
  I_UMT_MASS = $00000002;

// Constants for enum IRobotUnitType
type
  IRobotUnitType = TOleEnum;
const
  I_UT_STRUCTURE_DIMENSION = $00000001;
  I_UT_SECTION_DIMENSION = $00000002;
  I_UT_SECTION_PROPERTIES = $00000003;
  I_UT_STEEL_CONECTIONS = $00000004;
  I_UT_DIAMETER_RC_BASE = $00000005;
  I_UT_REINFORCEMENT_AREAS = $00000006;
  I_UT_FORCE = $00000007;
  I_UT_MOMENT = $00000008;
  I_UT_STRESS = $00000009;
  I_UT_DISPLACEMENT = $0000000A;
  I_UT_ANGLE_ROTATION_DATA = $0000000B;
  I_UT_ANGLE_ROTATION_RESULT = $0000000C;
  I_UT_TEMPERATURE = $0000000D;
  I_UT_WEIGHT = $0000000E;
  I_UT_MASS = $0000000F;
  I_UT_DIMENSIONLESS_QUALITY = $00000010;
  I_UT_RULER = $00000011;

// Constants for enum IRobotCalculationModelCoherence
type
  IRobotCalculationModelCoherence = TOleEnum;
const
  I_CMC_COHERENT_FE_MESH = $00000001;
  I_CMC_USE_OF_KINEMATIC_CONSTRAINTS = $00000002;

// Constants for enum IRobotStructureAutoVerificationType
type
  IRobotStructureAutoVerificationType = TOleEnum;
const
  I_SAVT_NONE = $00000000;
  I_SAVT_ERRORS_ONLY = $00000001;
  I_SAVT_ERRORS_AND_WARNINGS = $00000002;

// Constants for enum IRobotSparseMSolverMethod
type
  IRobotSparseMSolverMethod = TOleEnum;
const
  I_SMSM_NDM = $00000003;
  I_SMSM_MDA = $00000004;

// Constants for enum IRobotIterativePrediconditionerType
type
  IRobotIterativePrediconditionerType = TOleEnum;
const
  I_IPT_DIAGONAL = $00000000;
  I_IPT_GAUSS = $00000001;
  I_IPT_CHOLESKY = $00000002;
  I_IPT_ICCF = $00000003;

// Constants for enum IRobotIterativeSolverMethod
type
  IRobotIterativeSolverMethod = TOleEnum;
const
  I_ISM_0 = $00000000;
  I_ISM_1 = $00000001;
  I_ISM_2 = $00000002;

// Constants for enum IRobotIterativeSolverMemoryUsage
type
  IRobotIterativeSolverMemoryUsage = TOleEnum;
const
  I_ISMU_MIN = $00000000;
  I_ISMU_1_2 = $00000002;
  I_ISMU_1_4 = $00000001;
  I_ISMU_MAX = $00000003;

// Constants for enum IRobotStructureAnalysisModalParticipationCoeff
type
  IRobotStructureAnalysisModalParticipationCoeff = TOleEnum;
const
  I_SAMPC_SUM_ABSOLUTE_VALUES = $00000000;
  I_SAMPC_SQUARE_ROOT_OF_SUM_SQUARES = $00000001;

// Constants for enum IRobotSeismicResultsPanelDirection
type
  IRobotSeismicResultsPanelDirection = TOleEnum;
const
  I_SRPD_AUTOMATIC = $00000000;
  I_SRPD_DIR_X = $00000001;
  I_SRPD_DIR_Y = $00000002;
  I_SRPD_DIR_Z = $00000003;

// Constants for enum IRConcrBeamCalcPointDefinitionType
type
  IRConcrBeamCalcPointDefinitionType = TOleEnum;
const
  I_CBCPDT_POINT_COUNT = $00000000;
  I_CBCPDT_POINT_SPACING = $00000001;

// Constants for enum IRobotActiveModelType
type
  IRobotActiveModelType = TOleEnum;
const
  I_AMT_MAIN = $00000000;
  I_AMT_DAM = $00000001;

// Constants for enum IRDimMembDefMatType
type
  IRDimMembDefMatType = TOleEnum;
const
  I_DMDMT_STEEL = $00000001;
  I_DMDMT_TIMBER = $00000002;
  I_DMDMT_CONCRETE = $00000003;

// Constants for enum IRobotCalcMessageSource
type
  IRobotCalcMessageSource = TOleEnum;
const
  I_CMS_VERIFICATION = $00000003;
  I_CMS_CALCULATIONS = $00000001;

// Constants for enum IRobotCalcMessageSeverityLevel
type
  IRobotCalcMessageSeverityLevel = TOleEnum;
const
  I_CMSL_WARNING = $00000002;
  I_CMSL_ERROR = $00000003;
  I_CMSL_NOTE = $00000001;

// Constants for enum IRobotCalculationsType
type
  IRobotCalculationsType = TOleEnum;
const
  I_CT_CALCULATE_LOCALLY = $00000000;
  I_CT_CALCULATE_IN_CLOUD = $00000001;

// Constants for enum IRobotGeoCoordinateAxis
type
  IRobotGeoCoordinateAxis = TOleEnum;
const
  I_GCA_OX = $00000001;
  I_GCA_OY = $00000002;
  I_GCA_OZ = $00000003;
  I_GCA_NONE = $00000000;

// Constants for enum IRobotWindowState
type
  IRobotWindowState = TOleEnum;
const
  I_WS_NORMAL = $00000000;
  I_WS_MAXIMIZE = $00000001;
  I_WS_MINIMIZE = $00000002;

// Constants for enum IRobotGeoPlane
type
  IRobotGeoPlane = TOleEnum;
const
  I_GP_XY = $00000000;
  I_GP_XZ = $00000001;
  I_GP_YZ = $00000002;

// Constants for enum IRobotGeoSegmentType
type
  IRobotGeoSegmentType = TOleEnum;
const
  I_GST_NONE = $00000000;
  I_GST_LINE = $00000001;
  I_GST_ARC = $00000002;

// Constants for enum IRobotFiniteElementType
type
  IRobotFiniteElementType = TOleEnum;
const
  I_FET_T3 = $00000003;
  I_FET_Q4 = $00000004;
  I_FET_T6 = $00000001;
  I_FET_Q8 = $00000002;
  I_FET_VOL_B8 = $00000005;
  I_FET_VOL_T4 = $00000006;
  I_FET_VOL_W6 = $00000007;
  I_FET_VOL_B20 = $00000008;
  I_FET_VOL_T10 = $00000009;
  I_FET_VOL_W15 = $0000000A;

// Constants for enum IRobotNonlinearHingeComponentType
type
  IRobotNonlinearHingeComponentType = TOleEnum;
const
  I_NHCT_FX = $00000001;
  I_NHCT_FY = $00000002;
  I_NHCT_FZ = $00000003;
  I_NHCT_MX = $00000004;
  I_NHCT_MY = $00000005;
  I_NHCT_MZ = $00000006;
  I_NHCT_SX = $00000007;

// Constants for enum IRobotCladdingType
type
  IRobotCladdingType = TOleEnum;
const
  I_CT_X = $00000000;
  I_CT_Y = $00000001;
  I_CT_XY = $00000002;

// Constants for enum IRobotCladdingMethod
type
  IRobotCladdingMethod = TOleEnum;
const
  I_CM_TRAPEZOIDAL = $00000000;
  I_CM_GRILLAGE = $00000001;
  I_CM_SLAB_ANALYSIS = $00000002;

// Constants for enum IRobotPanelCalcModelFinElemType
type
  IRobotPanelCalcModelFinElemType = TOleEnum;
const
  I_PCMFET_NONE = $00000000;
  I_PCMFET_SHELL = $00000001;

// Constants for enum IRobotPanelCalcModelLoadTransfer
type
  IRobotPanelCalcModelLoadTransfer = TOleEnum;
const
  I_PCMLT_ANALYTICAL_FINITE_ELEMENTS = $00000001;
  I_PCMLT_SIMPLIFIED_TWO_WAY = $00000002;
  I_PCMLT_SIMPLIFIED_ONE_WAY = $00000003;

// Constants for enum IRobotPanelCalcModelDiaphragm
type
  IRobotPanelCalcModelDiaphragm = TOleEnum;
const
  I_PCMD_NONE = $00000000;
  I_PCMD_RIGID = $00000001;
  I_PCMD_FLEXIBLE = $00000002;

// Constants for enum IRobotBarIntersectRelationship
type
  IRobotBarIntersectRelationship = TOleEnum;
const
  I_BIR_UNKNOWN = $00000000;
  I_BIR_NOT_INTERSECT = $00000001;
  I_BIR_INTERSECT_MID_MID = $00000002;
  I_BIR_INTERSECT_MID_END = $00000003;
  I_BIR_INTERSECT_END_MID = $00000004;
  I_BIR_INTERSECT_END_END = $00000005;

// Constants for enum IRobotProjectSaveFormat
type
  IRobotProjectSaveFormat = TOleEnum;
const
  I_PSF_RTD = $00000000;
  I_PSF_RTD_NORESULTS = $00000001;
  I_PSF_STR = $00000002;
  I_PSF_DXF = $00000003;
  I_PSF_DXF_V14 = $00000004;
  I_PSF_DWG = $00000005;
  I_PSF_ANF = $00000006;
  I_PSF_WRL = $00000007;
  I_PSF_S = $00000008;
  I_PSF_SAT = $00000009;
  I_PSF_STP_CIM = $0000000A;
  I_PSF_STP_DSTV = $0000000B;

// Constants for enum IRobotProjectComponentType
type
  IRobotProjectComponentType = TOleEnum;
const
  I_PCT_BEAM = $00000003;
  I_PCT_COLUMN = $00000004;
  I_PCT_FOOT = $00000005;
  I_PCT_JOINT = $00000006;
  I_PCT_DRAWING = $00000007;
  I_PCT_BWALL = $00000008;
  I_PCT_SLAB = $00000009;
  I_PCT_RETAINING_WALL = $0000000A;
  I_PCT_CONTINUOUS_FOOT = $0000000B;
  I_PCT_CONCRETE_JOINT = $0000000C;
  I_PCT_WALL = $0000000D;

// Constants for enum IRobotTableType
type
  IRobotTableType = TOleEnum;
const
  I_TT_NODES = $00000001;
  I_TT_BARS = $00000002;
  I_TT_PANELS = $00000003;
  I_TT_FINITE_ELEMENTS = $00000004;
  I_TT_SUPPORTS = $00000005;
  I_TT_PROPERTIES = $00000006;
  I_TT_MEASURE = $00000007;
  I_TT_LOADS = $00000008;
  I_TT_COMBINATIONS = $00000009;
  I_TT_MASS = $0000000A;
  I_TT_REACTIONS = $0000000B;
  I_TT_NODE_DISPLACEMENTS = $0000000C;
  I_TT_BAR_DEFLECTIONS = $0000000D;
  I_TT_FORCES = $0000000E;
  I_TT_STRESSES = $0000000F;
  I_TT_DYNAMIC = $00000010;
  I_TT_PSEUDOSTATIC = $00000011;
  I_TT_BUCKLING = $00000012;
  I_TT_FE_RESULTS = $00000013;
  I_TT_REINFORCEMENT = $00000014;
  I_TT_SUPPORTS_LABEL = $00000015;
  I_TT_OFFSETS = $00000016;
  I_TT_STEEL_MEMBERS = $00000017;
  I_TT_LIARIG_LABEL = $00000018;
  I_TT_COREWALLS = $00000019;
  I_TT_INTERACTION_FORCES = $0000001A;
  I_TT_PLASTIC_HISTORY = $0000001B;
  I_TT_GLOBAL_ANALYSIS_BARS = $0000001C;
  I_TT_INFLUENCE_LINE = $0000001D;
  I_TT_STOREYS = $0000001E;

// Constants for enum IRobotTableDataType
type
  IRobotTableDataType = TOleEnum;
const
  I_TDT_DEFAULT = $00000001;
  I_TDT_VALUES = $00000002;
  I_TDT_INFO = $00000003;
  I_TDT_ENVELOPE = $00000004;
  I_TDT_EXTREMES = $00000005;
  I_TDT_NODE = $00000006;
  I_TDT_BAR = $00000007;
  I_TDT_PANEL = $00000008;
  I_TDT_FE = $00000009;
  I_TDT_CABLE = $0000000A;
  I_TDT_BRACKET = $0000000B;
  I_TDT_MEMBERS = $0000000C;
  I_TDT_CODE_GROUPS = $0000000D;
  I_TDT_PARA = $0000000E;
  I_TDT_VOLUME = $0000000F;
  I_TDT_MATERIAL = $00000010;
  I_TDT_DISPLACEMENTS = $00000011;
  I_TDT_REDUCED_FORCES = $00000012;
  I_TDT_TOTAL = $00000013;

// Constants for enum IRobotOutputFileFormat
type
  IRobotOutputFileFormat = TOleEnum;
const
  I_OFF_TEXT = $00000001;
  I_OFF_RTF = $00000002;
  I_OFF_RTF_JPEG = $00000003;
  I_OFF_HTML = $00000004;
  I_OFF_PNG = $00000005;

// Constants for enum IRobotTableConfigFlag
type
  IRobotTableConfigFlag = TOleEnum;
const
  I_TCF_DETAILS = $00000001;
  I_TCF_GLOBAL_COORDINATES = $00000002;
  I_TCF_LOCAL_COORDINATES = $00000003;
  I_TCF_COEXISTENT_VALUES = $00000004;
  I_TCF_EXTREME_COMBINATIONS = $00000005;
  I_TCF_PROP_STD_TAPERED_SECTION = $00000006;
  I_TCF_COMB_DEFINITIONS = $00000007;
  I_TCF_COMB_CODE_COMPONENTS = $00000008;
  I_TCF_COMB_MOVING_LOADS = $00000009;
  I_TCF_COMB_TIME_HISTORY_COMPONENTS = $0000000A;
  I_TCF_REAC_VALUES = $0000000B;
  I_TCF_REAC_APPLIED_FORCES_SUM = $0000000C;
  I_TCF_REAC_EQUILIBRIUM_PRECISION = $0000000D;
  I_TCF_REAC_RESIDUUM = $0000000E;
  I_TCF_BAR_DEFL_DEFLECTIONS = $0000000F;
  I_TCF_BAR_DEFL_MAX_DEFLECTIONS = $00000010;
  I_TCF_BAR_DEFL_DISPLACEMENTS = $00000011;
  I_TCF_FE_DIR_X_AXIS = $00000012;
  I_TCF_FE_DIR_Y_AXIS = $00000013;
  I_TCF_FE_DIR_Z_AXIS = $00000014;
  I_TCF_FE_LAYER_UPPER = $00000015;
  I_TCF_FE_LAYER_MIDDLE = $00000016;
  I_TCF_FE_LAYER_LOWER = $00000017;
  I_TCF_FE_LAYER_MAX = $00000018;
  I_TCF_FE_LAYER_MIN = $00000019;
  I_TCF_FE_LAYER_MAX_ABSOLUTE = $0000001A;
  I_TCF_FE_IN_NODES = $0000001B;
  I_TCF_FE_IN_ELEMENT_CENTERS = $0000001C;
  I_TCF_REINF_IN_NODES = $0000001D;
  I_TCF_REINF_IN_ELEMENT_CENTERS = $0000001E;
  I_TCF_REAC_DDC = $0000001F;
  I_TCF_LOCALS = $00000020;
  I_TCF_FE_IN_ELENODE = $00000021;
  I_TCF_ORDER_BY_CASE = $00000022;
  I_TCF_CASE_INFO = $00000023;
  I_TCF_GLOBAL_ANALYSIS_RESULTS_NPOINTS = $00000024;
  I_TCF_GLOBAL_ANALYSIS_RESULTS_RELATIVE = $00000025;

// Constants for enum IRobotTableConfigValue
type
  IRobotTableConfigValue = TOleEnum;
const
  I_TCV_NUMBER_OF_DIVISION_POINTS = $00000001;
  I_TCV_POSITION_OF_DIVISION_POINT = $00000002;
  I_TCV_PROP_TAPERED_SECTION_COORDINATE = $00000003;
  I_TCV_FE_DIR_VECTOR_X = $00000004;
  I_TCV_FE_DIR_VECTOR_Y = $00000005;
  I_TCV_FE_DIR_VECTOR_Z = $00000006;
  I_TCV_FE_DIR_RADIUS_NODE = $00000007;
  I_TCV_FE_DIR_RADIUS_POINT_X = $00000008;
  I_TCV_FE_DIR_RADIUS_POINT_Y = $00000009;
  I_TCV_FE_DIR_RADIUS_POINT_Z = $0000000A;
  I_TCV_FE_LAYER_ARBITRARY = $0000000B;

// Constants for enum IRobotSelectionType
type
  IRobotSelectionType = TOleEnum;
const
  I_ST_NODE = $00000000;
  I_ST_BAR = $00000001;
  I_ST_PANEL = $00000004;
  I_ST_FINITE_ELEMENT = $00000005;
  I_ST_GEOMETRY = $00000006;
  I_ST_FAMILY = $00000003;
  I_ST_CASE = $00000002;

// Constants for enum IRobotTableScreenCaptureUpdateType
type
  IRobotTableScreenCaptureUpdateType = TOleEnum;
const
  I_TSCUT_UPDATED_UPON_PRINTING = $00000001;
  I_TSCUT_CURRENT_VIEW = $00000002;
  I_TSCUT_COPY_TO_CLIPBOARD = $00000004;

// Constants for enum IRobotViewType
type
  IRobotViewType = TOleEnum;
const
  I_VT_STANDARD = $00000001;
  I_VT_DETAILED_ANALYSIS = $00000002;
  I_VT_DIAGRAMS = $00000003;
  I_VT_MAPS_ON_BARS = $00000004;
  I_VT_MAPS_ON_FINITE_ELEMENTS = $00000005;
  I_VT_PANEL_CUTS = $00000006;
  I_VT_GLOBAL_ANALYSIS = $00000007;
  I_VT_INFLUENCE_LINES = $00000008;

// Constants for enum IRobotViewProjection
type
  IRobotViewProjection = TOleEnum;
const
  I_VP_XY = $00000000;
  I_VP_XZ = $00000001;
  I_VP_YZ = $00000002;
  I_VP_3DXYZ = $00000003;
  I_VP_XY_3D = $00000004;
  I_VP_YZ_3D = $00000005;
  I_VP_XZ_3D = $00000006;

// Constants for enum IRobotViewVisibilityStatusType
type
  IRobotViewVisibilityStatusType = TOleEnum;
const
  I_VVST_STRUCTURE_3D = $00000000;
  I_VVST_SECTIONS = $00000001;
  I_VVST_ANIMATION = $00000002;
  I_VVST_SUPERPOS = $00000003;
  I_VVST_MODE = $00000004;
  I_VVST_BUCKLING = $00000005;
  I_VVST_PLOT = $00000006;
  I_VVST_SCALE = $00000007;
  I_VVST_FILL = $00000008;
  I_VVST_ACTIVE_CASE = $00000009;
  I_VVST_MOBILE = $0000000A;
  I_VVST_ACTIVE_MODE = $0000000B;
  I_VVST_ACTIVE_PHASE = $0000000C;
  I_VVST_ACTIVE_QCMB = $0000000D;
  I_VVST_STRUCTURE = $0000000E;
  I_VVST_NODES = $0000000F;
  I_VVST_ELE = $00000010;
  I_VVST_NOT_SELECTED = $00000011;
  I_VVST_EXPLODE = $00000012;
  I_VVST_MTC = $00000013;
  I_VVST_SECTION_NAMES = $00000014;
  I_VVST_SECTION_SYMB = $00000015;
  I_VVST_SECTION_DRAW = $00000016;
  I_VVST_SECTION_SURF = $00000017;
  I_VVST_LOCAL = $00000018;
  I_VVST_THICKNESS = $00000019;
  I_VVST_SUPPORTS = $0000001A;
  I_VVST_RELEASES = $0000001B;
  I_VVST_RIGID_LINKS = $0000001C;
  I_VVST_LOADS = $0000001D;
  I_VVST_NODE_LOADS = $0000001E;
  I_VVST_BAR_LOADS = $0000001F;
  I_VVST_DEFORMATION = $00000020;
  I_VVST_FORCES = $00000021;
  I_VVST_EXTREMES = $00000022;
  I_VVST_Dia3D = $00000023;
  I_VVST_DetDi = $00000024;
  I_VVST_GloDi = $00000025;
  I_VVST_Dep = $00000026;
  I_VVST_CtrT = $00000027;
  I_VVST_BEST = $00000028;
  I_VVST_REACTIONS = $00000029;
  I_VVST_FE = $0000002A;
  I_VVST_STRESSES = $0000002B;
  I_VVST_FE_CUTS = $0000002C;
  I_VVST_FE_DIRECTION = $0000002D;
  I_VVST_FE_LAY = $0000002E;
  I_VVST_REINF_DIR = $0000002F;
  I_VVST_BAR_MAPS = $00000030;
  I_VVST_TITLE = $00000031;
  I_VVST_OFFSETS = $00000032;
  I_VVST_COMPATIBILITIES = $00000033;
  I_VVST_ENVELOPES = $00000034;
  I_VVST_ANALYSIS = $00000035;
  I_VVST_DIM_LINES = $00000036;
  I_VVST_REINF_CROSSES = $00000037;
  I_VVST_STRESSES_GLOBAL = $00000038;
  I_VVST_DESCRIPTIONS = $00000039;
  I_VVST_GRID = $0000003A;
  I_VVST_RULER = $0000003B;
  I_VVST_STRUCTURAL_AXIS = $0000003C;
  I_VVST_MAPS = $0000003D;
  I_VVST_MAPS_LAYER = $0000003E;
  I_VVST_MAPS_DEFORMATION = $0000003F;

// Constants for enum IRobotViewVisibilityStatusValue
type
  IRobotViewVisibilityStatusValue = TOleEnum;
const
  I_VVSV_MTC_MATERIAL = $00000001;
  I_VVSV_MTC_COMPRESSION = $00000002;
  I_VVSV_MTC_TENSION = $00000004;
  I_VVSV_MTC_CABLE = $00000008;
  I_VVSV_MTC_FEM = $00000010;
  I_VVSV_STRUCTURE_ON = $00000001;
  I_VVSV_STRUCTURE_POI = $00000002;
  I_VVSV_STRUCTURE_HDL = $00000004;
  I_VVSV_STRUCTURE_COR = $00000008;
  I_VVSV_STRUCTURE_SHD = $00000010;
  I_VVSV_STRUCTURE_SPD = $00000020;
  I_VVSV_STRUCTURE_HDF = $00000040;
  I_VVSV_STRUCTURE_HDR = $00000080;
  I_VVSV_STRUCTURE_HID = $000000D4;
  I_VVSV_SUPPORTS_SYMB = $00000001;
  I_VVSV_SUPPORTS_COD = $00000002;
  I_VVSV_SUPPORTS_LBL = $00000004;
  I_VVSV_ANALYSIS_DET = $00000001;
  I_VVSV_ANALYSIS_GLO = $00000002;
  I_VVSV_ANALYSIS_INF = $00000008;
  I_VVSV_ENVELOPES_MIN = $00000001;
  I_VVSV_ENVELOPES_MAX = $00000002;
  I_VVSV_ENVELOPES_CMP = $00000004;
  I_VVSV_ENVELOPES_ONE = $00000008;
  I_VVSV_ENVELOPES_HST = $00000010;
  I_VVSV_ENVELOPES_CUT = $00000020;
  I_VVSV_ENVELOPES_SEU = $00000040;
  I_VVSV_ENVELOPES_SET = $00000080;
  I_VVSV_SECTION_DRAW_SHAPE = $00000001;
  I_VVSV_SECTION_DRAW_COLOR = $00000010;
  I_VVSV_SECTION_DRAW_TOP_BOTTOM = $00000020;
  I_VVSV_SECTION_DRAW_GROUP = $00000040;
  I_VVSV_SECTION_SYMB_SYMB = $00000001;
  I_VVSV_SECTION_SYMB_ELA = $00000002;
  I_VVSV_FILL_FILL = $00000001;
  I_VVSV_FILL_AVG = $00000002;
  I_VVSV_FILL_VAL = $00000004;
  I_VVSV_FILL_ISO = $00000008;
  I_VVSV_FILL_BOR = $00000010;
  I_VVSV_FILL_TAN = $00000020;
  I_VVSV_FILL_DEF = $00000040;
  I_VVSV_FILL_SMOOTH_NON = $00000000;
  I_VVSV_FILL_SMOOTH_GLO = $00000100;
  I_VVSV_FILL_SMOOTH_LOC = $00000200;
  I_VVSV_FILL_SMOOTH_SEL = $00000300;
  I_VVSV_RIGID_LINKS_RIG = $00000001;
  I_VVSV_RIGID_LINKS_SYM = $00000002;
  I_VVSV_RIGID_LINKS_DET = $00000004;
  I_VVSV_RIGID_LINKS_SUR = $00000008;
  I_VVSV_FE_CON = $00000001;
  I_VVSV_FE_COI = $00000002;
  I_VVSV_FE_COL = $00000004;
  I_VVSV_FE_COE = $00000008;
  I_VVSV_FE_MES = $00000010;
  I_VVSV_FE_EMI = $00000020;
  I_VVSV_FE_RES = $00000040;
  I_VVSV_FE_DSC = $00000080;
  I_VVSV_FE_DSO = $00000100;
  I_VVSV_FE_EDG = $00000200;
  I_VVSV_FE_ADV = $00000400;
  I_VVSV_ELE_BAR_NUM = $00000001;
  I_VVSV_ELE_CAL_NUM = $00000002;
  I_VVSV_ELE_FE_NUM = $00000004;
  I_VVSV_ELE_FE_VIS = $00000008;
  I_VVSV_MOBILE_ROUTE = $00000001;
  I_VVSV_MOBILE_CAR = $00000002;
  I_VVSV_MOBILE_ELE = $00000004;
  I_VVSV_MOBILE_LOADS = $00000008;
  I_VVSV_STRUCTURE_HDY = $00000100;
  I_VVSV_FILL_SMOOTH_CAR = $00000400;
  I_VVSV_FORCES_FX = $00000001;
  I_VVSV_FORCES_FY = $00000002;
  I_VVSV_FORCES_FZ = $00000004;
  I_VVSV_FORCES_FXC = $00000008;
  I_VVSV_FORCES_MX = $00000010;
  I_VVSV_FORCES_MY = $00000020;
  I_VVSV_FORCES_MZ = $00000040;
  I_VVSV_FORCES_UX = $00000100;
  I_VVSV_FORCES_UY = $00000200;
  I_VVSV_FORCES_UZ = $00000400;
  I_VVSV_FORCES_DFL = $00001000;
  I_VVSV_STRESSES_NORMALMIN = $00000001;
  I_VVSV_STRESSES_NORMALMAX = $00000002;
  I_VVSV_STRESSES_FLEXMIN_MY = $00000004;
  I_VVSV_STRESSES_FLEXMIN_MZ = $00000008;
  I_VVSV_STRESSES_FLEXMAX_MY = $00000010;
  I_VVSV_STRESSES_FLEXMAX_MZ = $00000020;
  I_VVSV_STRESSES_AXIAL = $00000040;
  I_VVSV_STRESSES_SHEAR_Y = $00000080;
  I_VVSV_STRESSES_SHEAR_Z = $00000100;
  I_VVSV_STRESSES_TORSION = $00000200;
  I_VVSV_DEFORMATION_EXACT = $00000001;
  I_VVSV_DEFORMATION_STD = $00000002;
  I_VVSV_REACTIONS_F = $00000001;
  I_VVSV_REACTIONS_M = $00000002;
  I_VVSV_REACTIONS_RESID_F = $00000004;
  I_VVSV_REACTIONS_RESID_M = $00000008;
  I_VVSV_REACTIONS_VAL = $00000010;
  I_VVSV_REACTIONS_ROT = $00000020;
  I_VVSV_REACTIONS_DIV = $00000040;
  I_VVSV_LOADS_SYMBOL = $00000001;
  I_VVSV_LOADS_VALUE = $00000002;
  I_VVSV_STRESSES_GLOBAL_USER_MIN = $00000001;
  I_VVSV_STRESSES_GLOBAL_USER_MAX = $00000002;
  I_VVSV_STRESSES_GLOBAL_NORMAL_MIN = $00000004;
  I_VVSV_STRESSES_GLOBAL_NORMAL_MAX = $00000008;
  I_VVSV_STRESSES_GLOBAL_TAU_MIN = $00000010;
  I_VVSV_STRESSES_GLOBAL_TAU_MAX = $00000020;
  I_VVSV_STRESSES_GLOBAL_MISES_MIN = $00000040;
  I_VVSV_STRESSES_GLOBAL_MISES_MAX = $00000080;
  I_VVSV_BAR_MAPS_FX = $000000A5;
  I_VVSV_BAR_MAPS_FY = $000000A6;
  I_VVSV_BAR_MAPS_FZ = $000000A7;
  I_VVSV_BAR_MAPS_MX = $000000A8;
  I_VVSV_BAR_MAPS_MY = $000000A9;
  I_VVSV_BAR_MAPS_MZ = $000000AA;
  I_VVSV_BAR_MAPS_STRESS_S_MAX = $000000AB;
  I_VVSV_BAR_MAPS_STRESS_S_MIN = $000000AC;
  I_VVSV_BAR_MAPS_STRESS_FX_AX = $000000AD;
  I_VVSV_BAR_MAPS_STRESS_S_MAX_MY = $000000AE;
  I_VVSV_BAR_MAPS_STRESS_S_MAX_MZ = $000000AF;
  I_VVSV_BAR_MAPS_STRESS_S_MIN_MY = $000000B0;
  I_VVSV_BAR_MAPS_STRESS_S_MIN_MZ = $000000B1;
  I_VVSV_BAR_MAPS_SHEAR_STRESS_TY = $000000B3;
  I_VVSV_BAR_MAPS_SHEAR_STRESS_TZ = $000000B4;
  I_VVSV_BAR_MAPS_SHEAR_STRESS_T = $000000B6;
  I_VVSV_BAR_MAPS_DESIGN_RATIO = $0000031C;
  I_VVSV_BAR_MAPS_DESIGN_MEMB_LENGTH = $0000010F;
  I_VVSV_BAR_MAPS_DESIGN_SLEND_LAY = $0000033F;
  I_VVSV_BAR_MAPS_DESIGN_SLEND_LAZ = $00000340;
  I_VVSV_DESCRIPTIONS_NONE = $00000000;
  I_VVSV_DESCRIPTIONS_HORIZONTAL = $00000001;
  I_VVSV_DESCRIPTIONS_VERTICAL = $00000002;
  I_VVSV_REINFORCEMENT_A1 = $00000001;
  I_VVSV_REINFORCEMENT_A1R = $00000010;
  I_VVSV_REINFORCEMENT_A2 = $00000002;
  I_VVSV_REINFORCEMENT_A2R = $00000020;
  I_VVSV_REINFORCEMENT_PRC = $00000004;
  I_VVSV_REINFORCEMENT_PRCR = $00000008;
  I_VVSV_REINFORCEMENT_DISTRIB = $00000040;
  I_VVSV_REINFORCEMENT_DISTRIBR = $00000080;
  I_VVSV_REINFORCEMENT_A1BARS = $00000100;
  I_VVSV_REINFORCEMENT_A2BARS = $00000200;
  I_VVSV_MAPS_DETAILED_STRESSES_XX = $000001E3;
  I_VVSV_MAPS_DETAILED_STRESSES_YY = $000001E4;
  I_VVSV_MAPS_DETAILED_STRESSES_XY = $000001E5;
  I_VVSV_MAPS_DETAILED_STRESSES_Z = $000001E6;
  I_VVSV_MAPS_DETAILED_MEMB_FORCES_XX = $000001EC;
  I_VVSV_MAPS_DETAILED_MEMB_FORCES_YY = $000001ED;
  I_VVSV_MAPS_DETAILED_MEMB_FORCES_XY = $000001EE;
  I_VVSV_MAPS_DETAILED_MOMENTS_XX = $000001F5;
  I_VVSV_MAPS_DETAILED_MOMENTS_YY = $000001F6;
  I_VVSV_MAPS_DETAILED_MOMENTS_XY = $000001F7;
  I_VVSV_MAPS_DETAILED_SHEAR_STRESSES_XX = $000001FE;
  I_VVSV_MAPS_DETAILED_SHEAR_STRESSES_YY = $000001FF;
  I_VVSV_MAPS_DETAILED_SHEAR_FORCES_XX = $00000207;
  I_VVSV_MAPS_DETAILED_SHEAR_FORCES_YY = $00000208;
  I_VVSV_MAPS_DETAILED_DISPLACEMENTS_XX = $00000219;
  I_VVSV_MAPS_DETAILED_DISPLACEMENTS_YY = $0000021A;
  I_VVSV_MAPS_DETAILED_DISPLACEMENTS_Z = $00000213;
  I_VVSV_MAPS_DETAILED_ROTATION_XX = $00000222;
  I_VVSV_MAPS_DETAILED_ROTATION_YY = $00000223;
  I_VVSV_MAPS_DETAILED_ROTATION_Z = $00000225;
  I_VVSV_MAPS_DETAILED_SOIL_REACTIONS = $0000022E;
  I_VVSV_MAPS_PRINCIPAL_STRESSES_1 = $000001E7;
  I_VVSV_MAPS_PRINCIPAL_STRESSES_2 = $000001E8;
  I_VVSV_MAPS_PRINCIPAL_STRESSES_1_2 = $000001EA;
  I_VVSV_MAPS_PRINCIPAL_STRESSES_ANGLE = $000001E9;
  I_VVSV_MAPS_PRINCIPAL_MEMB_FORCES_1 = $000001F0;
  I_VVSV_MAPS_PRINCIPAL_MEMB_FORCES_2 = $000001F1;
  I_VVSV_MAPS_PRINCIPAL_MEMB_FORCES_1_2 = $000001F3;
  I_VVSV_MAPS_PRINCIPAL_MEMB_FORCES_ANGLE = $000001F2;
  I_VVSV_MAPS_PRINCIPAL_MOMENTS_1 = $000001F9;
  I_VVSV_MAPS_PRINCIPAL_MOMENTS_2 = $000001FA;
  I_VVSV_MAPS_PRINCIPAL_MOMENTS_ANGLE = $000001FB;
  I_VVSV_MAPS_PRINCIPAL_MOMENTS_1_2 = $000001FC;
  I_VVSV_MAPS_PRINCIPAL_SHEAR_STRESSES = $00000205;
  I_VVSV_MAPS_PRINCIPAL_SHEAR_FORCES = $0000020E;
  I_VVSV_MAPS_PRINCIPAL_GLOBAL_DISP_X = $00000516;
  I_VVSV_MAPS_PRINCIPAL_GLOBAL_DISP_Y = $00000517;
  I_VVSV_MAPS_PRINCIPAL_GLOBAL_DISP_Z = $00000518;
  I_VVSV_MAPS_PRINCIPAL_TOTAL_DISP = $00000519;
  I_VVSV_MAPS_COMPLEX_STRESSES = $000001EB;
  I_VVSV_MAPS_COMPLEX_MEMB_FORCES = $000001F4;
  I_VVSV_MAPS_COMPLEX_MOMENTS = $000001FD;
  I_VVSV_MAPS_COMPLEX_REINFORCEMENT_TOP_MXX = $00000379;
  I_VVSV_MAPS_COMPLEX_REINFORCEMENT_TOP_MYY = $0000037B;
  I_VVSV_MAPS_COMPLEX_REINFORCEMENT_BOTTOM_MXX = $0000037A;
  I_VVSV_MAPS_COMPLEX_REINFORCEMENT_BOTTOM_MYY = $0000037C;
  I_VVSV_MAPS_CROSS_S = $0000057C;
  I_VVSV_MAPS_CROSS_N = $0000057D;
  I_VVSV_MAPS_CROSS_M = $0000057E;
  I_VVSV_MAPS_LAYER_UPPER = $00000000;
  I_VVSV_MAPS_LAYER_MIDDLE = $00000001;
  I_VVSV_MAPS_LAYER_LOWER = $00000002;
  I_VVSV_MAPS_LAYER_MAXIMUM = $00000003;
  I_VVSV_MAPS_LAYER_MINIMUM = $00000004;
  I_VVSV_MAPS_LAYER_ABS_MINIMUM = $00000005;
  I_VVSV_MAPS_LAYER_ARBITRARY = $00000006;
  I_VVSV_MAPS_ISOLINES = $00000001;
  I_VVSV_MAPS_DESCRIPTION = $00000002;
  I_VVSV_MAPS_SMOOTH_NON = $00000004;
  I_VVSV_MAPS_SMOOTH_GLO = $00000008;
  I_VVSV_MAPS_SMOOTH_LOC = $00000010;
  I_VVSV_MAPS_SMOOTH_SEL = $00000020;
  I_VVSV_MAPS_SMOOTH_CAR = $00000030;
  I_VVSV_FORCES_BAR_REACT_KY = $00000080;
  I_VVSV_FORCES_BAR_REACT_KZ = $00000800;
  I_VVSV_FILL_FE = $00000080;
  I_VVSV_REACTIONS_FX = $00000080;
  I_VVSV_REACTIONS_FY = $00000100;
  I_VVSV_REACTIONS_FZ = $00000200;
  I_VVSV_REACTIONS_MX = $00000400;
  I_VVSV_REACTIONS_MY = $00000800;
  I_VVSV_REACTIONS_PSEUDO_F = $00002000;
  I_VVSV_REACTIONS_PSEUDO_M = $00004000;
  I_VVSV_REACTIONS_MZ = $00001000;

// Constants for enum IRobotViewHiddenLinesDisplayType
type
  IRobotViewHiddenLinesDisplayType = TOleEnum;
const
  I_VHLDT_HIDDEN_LINES = $00000004;
  I_VHLDT_SHADING = $00000010;
  I_VHLDT_COLOR_SIDES_EDGES = $00000040;
  I_VHLDT_SHADING_EDGES = $00000080;
  I_VHLDT_QUICK_SHADING_OF_FACES = $00000100;
  I_VHLDT_NONE = $00000000;

// Constants for enum IRobotViewDisplayAttributes
type
  IRobotViewDisplayAttributes = TOleEnum;
const
  I_VDA_STRUCTURE_STRUCTURE = $00000001;
  I_VDA_STRUCTURE_NODE_NUMBERS = $00000002;
  I_VDA_STRUCTURE_BAR_NUMBERS = $00000003;
  I_VDA_STRUCTURE_SUPPORT_SYMBOLS = $00000004;
  I_VDA_STRUCTURE_SUPPORT_CODES = $00000005;
  I_VDA_STRUCTURE_ONLY_FOR_SELECTED_OBJECTS = $00000006;
  I_VDA_STRUCTURE_EXPLODE = $00000007;
  I_VDA_STRUCTURE_GROUP_COLORS = $00000008;
  I_VDA_STRUCTURE_ATTRIBUTE_LABELS = $00000009;
  I_VDA_STRUCTURE_LOCAL_SYSTEM = $0000000A;
  I_VDA_SECTIONS_NAME = $0000000B;
  I_VDA_SECTIONS_COLORS = $0000000C;
  I_VDA_SECTIONS_SYMBOLS = $0000000D;
  I_VDA_SECTIONS_SHAPE = $0000000E;
  I_VDA_SECTIONS_SURFACE = $0000000F;
  I_VDA_SECTIONS_MATERIAL = $00000010;
  I_VDA_LOADS_SYMBOLS = $00000011;
  I_VDA_LOADS_VALUES = $00000012;
  I_VDA_LOADS_MOVING_ROUTE = $00000013;
  I_VDA_LOADS_MOVING_VEHICLE = $00000014;
  I_VDA_LOADS_MOVING_ELEMENTS = $00000015;
  I_VDA_LOADS_MOVING_LOADS = $00000016;
  I_VDA_ADVANCED_RELEASE_SYMBOLS = $00000017;
  I_VDA_ADVANCED_RELEASE_CODES = $00000018;
  I_VDA_ADVANCED_OFFSETS = $00000019;
  I_VDA_ADVANCED_COMPATIBLE_NODES = $0000001A;
  I_VDA_ADVANCED_RIGID_LINKS = $0000001B;
  I_VDA_ADVANCED_RIGID_LINK_SURFACE = $0000001C;
  I_VDA_ADVANCED_ELASTIC_FOUNDATION = $0000001D;
  I_VDA_ADVANCED_CABLES = $0000001E;
  I_VDA_ADVANCED_TENSION_COMPRESSION = $0000001F;
  I_VDA_ADVANCED_STEEL_CONNECTIONS = $00000020;
  I_VDA_FE_PANEL_CONTOURS = $00000021;
  I_VDA_FE_PANEL_INTERIOR = $00000022;
  I_VDA_FE_THICKNESS = $00000023;
  I_VDA_FE_PANEL_NUMBERS = $00000024;
  I_VDA_FE_PANEL_COMPLEX_DESC = $00000025;
  I_VDA_FE_COLOR_LEGEND = $00000026;
  I_VDA_FE_CONTOUR_COMPONENTS = $00000027;
  I_VDA_FE_MESH_PREVIEW = $00000028;
  I_VDA_FE_EDGE_NUMBERS = $00000029;
  I_VDA_FE_FINITE_ELEMENTS = $0000002A;
  I_VDA_FE_FINITE_ELEMENT_NUMBERS = $0000002B;
  I_VDA_FE_EMITTERS = $0000002C;
  I_VDA_OTHER_STRUCTURAL_AXIS = $0000002D;
  I_VDA_OTHER_DIMENSION_LINES = $0000002E;
  I_VDA_OTHER_GRID = $0000002F;
  I_VDA_OTHER_RULER = $00000030;
  I_VDA_OTHER_HIDE_NODES = $00000031;
  I_VDA_OTHER_INACTIVE = $00000032;
  I_VDA_OTHER_HIDE_INACTIVE = $00000033;
  I_VDA_OTHER_CALC_ELEM_NUMBERS = $00000034;
  I_VDA_OTHER_CALC_POINT_NUMBERS = $00000035;
  I_VDA_OTHER_OBJECTS_OUT_OF_PLANE = $00000036;
  I_VDA_SECTIONS_MEMBER_TYPE_NAME = $00000037;
  I_VDA_SECTIONS_MEMBER_TYPE_LEGEND = $00000038;
  I_VDA_ADVANCED_GEOIMPERFECTIONS = $00000039;
  I_VDA_ADVANCED_GEOIMPERFECTIONS_NAME = $0000003A;
  I_VDA_ADVANCED_NONLINEAR_HINGES = $0000003B;
  I_VDA_STRUCTURE_SUPPORT_SHAPES = $0000003C;
  I_VDA_STRUCTURE_EXPLODE_BARS = $0000003D;
  I_VDA_STRUCTURE_EXPLODE_FE = $0000003E;
  I_VDA_STRUCTURE_LOCAL_SYSTEM_BARS = $0000003F;
  I_VDA_STRUCTURE_LOCAL_SYSTEM_PANELS = $00000040;
  I_VDA_STRUCTURE_LOCAL_SYSTEM_FE = $00000041;
  I_VDA_STRUCTURE_BAR_NAMES = $00000042;
  I_VDA_SECTIONS_CODE_GROUPS = $00000043;
  I_VDA_LOADS_SYMBOLS_CONCENTRATED = $00000044;
  I_VDA_LOADS_SYMBOLS_LINEAR = $00000045;
  I_VDA_LOADS_SYMBOLS_PLANAR = $00000046;
  I_VDA_LOADS_SYMBOLS_UNIFORM_SIZE = $00000047;
  I_VDA_LOADS_AUTOMATICALLY = $00000048;
  I_VDA_LOADS_DISTRIBUTION_REGIONS = $00000049;
  I_VDA_STRUCTURE_SUPPORT_DETAILED_SYMBOLS = $0000004A;
  I_VDA_STRUCTURE_SUPPORT_DIRECTION = $0000004B;
  I_VDA_ADVANCED_STORIES_COLORS = $0000004C;
  I_VDA_ADVANCED_STORIES_RESULTS = $0000004D;
  I_VDA_ADVANCED_RC_BEAM = $0000004E;
  I_VDA_ADVANCED_RC_COLUMN = $0000004F;
  I_VDA_ADVANCED_RC_FOUNDATION = $00000050;
  I_VDA_ADVANCED_RC_CONTINOUS_FOOTING = $00000051;
  I_VDA_ADVANCED_RC_WALL = $00000052;
  I_VDA_ADVANCED_RC_DEEP_BEAM = $00000053;
  I_VDA_ADVANCED_STEEL_CONNECTION_NUMBERS = $00000054;
  I_VDA_ADVANCED_STEEL_CONNECTION_NAMES = $00000055;
  I_VDA_ADVANCED_STEEL_CONNECTION_TYPES = $00000056;
  I_VDA_FE_CLADDING_INTERIOR = $00000057;
  I_VDA_FE_FE_INTERIOR = $00000058;
  I_VDA_FE_PANEL_THICKNESSES = $00000059;
  I_VDA_FE_PANEL_REINFORCEMENT = $0000005A;
  I_VDA_FE_PANEL_NAMES = $0000005B;
  I_VDA_FE_LOAD_DIRECTION = $0000005D;
  I_VDA_FE_CHARACTERISTIC_POINTS = $0000005E;
  I_VDA_FE_AUXILIARY_OBJECTS = $0000005F;
  I_VDA_FE_CLADDING_COLORS = $00000060;
  I_VDA_OTHER_STRUCTURAL_AXIS_DESCRIPTION = $00000061;
  I_VDA_VIEWOGL_HIDE_INVISIBLE_LINES = $00000062;
  I_VDA_VIEWOGL_COLOR_FACES = $00000063;
  I_VDA_VIEWOGL_LIGHT = $00000064;
  I_VDA_VIEWOGL_LIGHT_ON_MAPS = $00000065;
  I_VDA_VIEWOGL_TRANSLUCENT = $00000066;
  I_VDA_VIEWOGL_BLACK_EDGES = $00000067;
  I_VDA_VIEWOGL_ANTYALIASING = $00000068;
  I_VDA_VIEWOGL_HIDE_XY_CUTTING_PLANES = $00000069;
  I_VDA_VIEWOGL_HIDE_XZ_CUTTING_PLANES = $0000006A;
  I_VDA_VIEWOGL_HIDE_YZ_CUTTING_PLANES = $0000006B;
  I_VDA_VIEWOGL_DRAW_OUT_OF_SCREEN = $0000006C;
  I_VDA_VIEWOGL_REDRAW = $0000006D;
  I_VDA_VIEWOGL_DETAILS = $0000006E;
  I_VDA_VIEW_HIDDEN_LINES = $0000006F;
  I_VDA_VIEW_COLOR = $00000070;
  I_VDA_VIEW_SHADING = $00000071;
  I_VDA_VIEW_SHADING_EDGES = $00000072;
  I_VDA_VIEW_QUICK_SHADING = $00000073;
  I_VDA_VIEW_NONE = $00000074;
  I_VDA_LOADS_PRESSURE_MAP = $00000075;

// Constants for enum IRobotViewDiagramDescriptionType
type
  IRobotViewDiagramDescriptionType = TOleEnum;
const
  I_VDDT_NONE = $00000000;
  I_VDDT_HORIZONTAL = $00000001;
  I_VDDT_VERTICAL = $00000002;
  I_VDDT_LABELS = $00000001;
  I_VDDT_TEXT = $00000002;

// Constants for enum IRobotViewDiagramSignDifferType
type
  IRobotViewDiagramSignDifferType = TOleEnum;
const
  I_VDSDT_UNDIFFERENTIATED = $00000000;
  I_VDSDT_DIFFERENTIATED = $00000001;

// Constants for enum IRobotViewDiagramFillingType
type
  IRobotViewDiagramFillingType = TOleEnum;
const
  I_VDFT_FENCE = $00000000;
  I_VDFT_FILLED = $00000001;

// Constants for enum IRobotViewDiagramResultType
type
  IRobotViewDiagramResultType = TOleEnum;
const
  I_VDRT_NTM_FX = $00000001;
  I_VDRT_NTM_FY = $00000002;
  I_VDRT_NTM_FZ = $00000003;
  I_VDRT_NTM_MX = $00000004;
  I_VDRT_NTM_MY = $00000005;
  I_VDRT_NTM_MZ = $00000006;
  I_VDRT_DEFORMATION_DEFORMATION = $00000007;
  I_VDRT_DEFORMATION_EXACT = $00000008;
  I_VDRT_STRESS_S_MAX = $00000009;
  I_VDRT_STRESS_S_MIN = $0000000A;
  I_VDRT_STRESS_BENDING_S_MAX_MY = $0000000B;
  I_VDRT_STRESS_BENDING_S_MAX_MZ = $0000000C;
  I_VDRT_STRESS_BENDING_S_MIN_MY = $0000000D;
  I_VDRT_STRESS_BENDING_S_MIN_MZ = $0000000E;
  I_VDRT_STRESS_AXIAL_FX_AX = $0000000F;
  I_VDRT_STRESS_SHEAR_TY = $00000010;
  I_VDRT_STRESS_SHEAR_TZ = $00000011;
  I_VDRT_STRESS_TORSION = $00000012;
  I_VDRT_REACTION_FORCES = $00000013;
  I_VDRT_REACTION_MOMENTS = $00000014;
  I_VDRT_REACTION_RESIDUAL_FORCES = $00000015;
  I_VDRT_REACTION_RESIDUAL_MOMENTS = $00000016;
  I_VDRT_REINFORCE_TOP = $00000017;
  I_VDRT_REINFORCE_TOP_REAL = $00000018;
  I_VDRT_REINFORCE_BOTTOM = $00000019;
  I_VDRT_REINFORCE_BOTTOM_REAL = $0000001A;
  I_VDRT_REINFORCE_RATIO = $0000001B;
  I_VDRT_REINFORCE_RATIO_REAL = $0000001C;
  I_VDRT_REINFORCE_STIRRUP_SPACING = $0000001D;
  I_VDRT_REINFORCE_STIRRUP_SPACING_REAL = $0000001E;
  I_VDRT_REINFORCE_NUMBER_OF_UPPER_BARS = $0000001F;
  I_VDRT_REINFORCE_NUMBER_OF_LOWER_BARS = $00000020;
  I_VDRT_NTM_KY = $00000021;
  I_VDRT_NTM_KZ = $00000022;
  I_VDRT_REACTION_FX = $00000023;
  I_VDRT_REACTION_FY = $00000024;
  I_VDRT_REACTION_FZ = $00000025;
  I_VDRT_REACTION_MX = $00000026;
  I_VDRT_REACTION_MY = $00000027;
  I_VDRT_REACTION_MZ = $00000028;
  I_VDRT_REACTION_PSEUDOSTATIC_FORCES = $0000002A;
  I_VDRT_REACTION_LINEAR_SUPPORTS = $0000002B;
  I_VDRT_REACTION_DESC = $0000002C;
  I_VDRT_REACTION_DESC_AVERAGE = $0000002D;
  I_VDRT_REACTION_DESC_INTEGRAL = $0000002E;
  I_VDRT_REACTION_PSEUDOSTATIC_MOMENTS = $0000002F;

// Constants for enum IRobotViewDiagramValueType
type
  IRobotViewDiagramValueType = TOleEnum;
const
  I_VDVT_ALL = $00000000;
  I_VDVT_LOCAL_EXTREMES = $00000001;
  I_VDVT_GLOBAL_EXTREMES = $00000002;

// Constants for enum IRobotViewBarMapResultType
type
  IRobotViewBarMapResultType = TOleEnum;
const
  I_VBMRT_NTM_FX = $000000A5;
  I_VBMRT_NTM_FY = $000000A6;
  I_VBMRT_NTM_FZ = $000000A7;
  I_VBMRT_NTM_MX = $000000A8;
  I_VBMRT_NTM_MY = $000000A9;
  I_VBMRT_NTM_MZ = $000000AA;
  I_VBMRT_STRESS_S_MAX = $000000AB;
  I_VBMRT_STRESS_S_MIN = $000000AC;
  I_VBMRT_STRESS_S_MAX_MY = $000000AE;
  I_VBMRT_STRESS_S_MIN_MY = $000000B0;
  I_VBMRT_STRESS_S_MAX_MZ = $000000AF;
  I_VBMRT_STRESS_S_MIN_MZ = $000000B1;
  I_VBMRT_STRESS_FX_AX = $000000AD;
  I_VBMRT_STRESS_SHEAR_TY = $000000B3;
  I_VBMRT_STRESS_SHEAR_TZ = $000000B4;
  I_VBMRT_STRESS_TORSION_T = $000000B6;
  I_VBMRT_DESIGN_RATIO = $0000031C;
  I_VBMRT_DESIGN_MEMBER_LENGTH = $0000010F;
  I_VBMRT_DESIGN_SLEND_LAY = $0000033F;
  I_VBMRT_DESIGN_SLEND_LAZ = $00000340;
  I_VBMRT_NOTHING = $FFFFFFFF;

// Constants for enum IRobotViewFeMapResultType
type
  IRobotViewFeMapResultType = TOleEnum;
const
  I_VFMRT_DETAILED_STRESS_XX = $000001E3;
  I_VFMRT_DETAILED_STRESS_YY = $000001E4;
  I_VFMRT_DETAILED_STRESS_XY = $000001E5;
  I_VFMRT_DETAILED_STRESS_Z = $000001E6;
  I_VFMRT_DETAILED_MEMBRANE_FORCE_XX = $000001EC;
  I_VFMRT_DETAILED_MEMBRANE_FORCE_YY = $000001ED;
  I_VFMRT_DETAILED_MEMBRANE_FORCE_XY = $000001EE;
  I_VFMRT_DETAILED_MOMENT_XX = $000001F5;
  I_VFMRT_DETAILED_MOMENT_YY = $000001F6;
  I_VFMRT_DETAILED_MOMENT_XY = $000001F7;
  I_VFMRT_DETAILED_SHEAR_STRESS_XX = $000001FE;
  I_VFMRT_DETAILED_SHEAR_STRESS_YY = $000001FF;
  I_VFMRT_DETAILED_SHEAR_FORCE_XX = $00000207;
  I_VFMRT_DETAILED_SHEAR_FORCE_YY = $00000208;
  I_VFMRT_DETAILED_DISPLACEMENT_XX = $00000219;
  I_VFMRT_DETAILED_DISPLACEMENT_YY = $0000021A;
  I_VFMRT_DETAILED_ROTATION_XX = $00000222;
  I_VFMRT_DETAILED_ROTATION_YY = $00000223;
  I_VFMRT_DETAILED_ROTATION_Z = $00000225;
  I_VFMRT_DETAILED_SOIL_REACTION_Z = $0000022E;
  I_VFMRT_PRINCIPAL_STRESS_1 = $000001E7;
  I_VFMRT_PRINCIPAL_STRESS_2 = $000001E8;
  I_VFMRT_PRINCIPAL_STRESS_1_2 = $000001EA;
  I_VFMRT_PRINCIPAL_STRESS_ANGLE = $000001E9;
  I_VFMRT_PRINCIPAL_MEMBRANE_FORCE_1 = $000001F0;
  I_VFMRT_PRINCIPAL_MEMBRANE_FORCE_2 = $000001F1;
  I_VFMRT_PRINCIPAL_MEMBRANE_FORCE_1_2 = $000001F3;
  I_VFMRT_PRINCIPAL_MEMBRANE_FORCE_ANGLE = $000001F2;
  I_VFMRT_PRINCIPAL_MOMENT_1 = $000001F9;
  I_VFMRT_PRINCIPAL_MOMENT_2 = $000001FA;
  I_VFMRT_PRINCIPAL_MOMENT_1_2 = $000001FC;
  I_VFMRT_PRINCIPAL_MOMENT_ANGLE = $000001FB;
  I_VFMRT_PRINCIPAL_SHEAR_STRESS_1_2 = $00000205;
  I_VFMRT_PRINCIPAL_SHEAR_FORCE_1_2 = $0000020E;
  I_VFMRT_GLOBAL_DISPLACEMENT_X = $00000516;
  I_VFMRT_GLOBAL_DISPLACEMENT_Y = $00000517;
  I_VFMRT_GLOBAL_DISPLACEMENT_Z = $00000518;
  I_VFMRT_TOTAL_DISPLACEMENTS = $00000519;
  I_VFMRT_COMPLEX_STRESSES = $000001EB;
  I_VFMRT_COMPLEX_MEMBRANE_FORCES = $000001F4;
  I_VFMRT_COMPLEX_MOMENTS = $000001FD;
  I_VFMRT_COMPLEX_REINFORCE_TOP_MXX = $00000379;
  I_VFMRT_COMPLEX_REINFORCE_TOP_MYY = $0000037B;
  I_VFMRT_COMPLEX_REINFORCE_BOTTOM_MXX = $0000037A;
  I_VFMRT_COMPLEX_REINFORCE_BOTTOM_MYY = $0000037C;
  I_VFMRT_DETAILED_DISPLACEMENT_Z = $00000213;

// Constants for enum IRobotViewFeMapLocalSystemType
type
  IRobotViewFeMapLocalSystemType = TOleEnum;
const
  I_VFMLST_CARTESIAN_ALONG_X = $00000000;
  I_VFMLST_CARTESIAN_ALONG_Y = $00000001;
  I_VFMLST_CARTESIAN_ALONG_Z = $00000002;
  I_VFMLST_CARTESIAN_ALONG_VECTOR = $00000003;
  I_VFMLST_POLAR_IN_NODE = $00000004;
  I_VFMLST_POLAR_IN_POINT = $00000005;
  I_VFMLST_AUTOMATIC = $00000006;

// Constants for enum IRobotViewFeMapCrossPresentationType
type
  IRobotViewFeMapCrossPresentationType = TOleEnum;
const
  I_VFMCPT_NONE = $00000000;
  I_VFMCPT_STRESSES = $0000057C;
  I_VFMCPT_NORMAL_FORCES = $0000057D;
  I_VFMCPT_MOMENTS = $0000057E;

// Constants for enum IRobotViewFeMapLayerType
type
  IRobotViewFeMapLayerType = TOleEnum;
const
  I_VFMLT_UPPER = $00000000;
  I_VFMLT_MIDDLE = $00000001;
  I_VFMLT_LOWER = $00000002;
  I_VFMLT_MAXIMUM = $00000003;
  I_VFMLT_MINIMUM = $00000004;
  I_VFMLT_ABSOLUTE_MAXIMUM = $00000005;
  I_VFMLT_ARBITRARY = $00000006;

// Constants for enum IRobotViewFeMapSmoothingType
type
  IRobotViewFeMapSmoothingType = TOleEnum;
const
  I_VFMST_NO_SMOOTHING = $00000000;
  I_VFMST_GLOBAL_SMOOTHING = $00000001;
  I_VFMST_SMOOTHING_WITH_PANEL = $00000002;
  I_VFMST_SMOOTHING_ACCORDING_TO_SELECTION = $00000003;

// Constants for enum IRobotLayoutId
type
  IRobotLayoutId = TOleEnum;
const
  I_LI_MODEL_GEOMETRY = $00000001;
  I_LI_MODEL_NODES = $00000002;
  I_LI_MODEL_BARS = $00000003;
  I_LI_MODEL_SUPPORTS = $00000004;
  I_LI_MODEL_PROPERTIES = $00000005;
  I_LI_MODEL_LOADS = $00000006;
  I_LI_RC_COLUMN_DEFINITION = $0000000B;
  I_LI_RC_COLUMN_RESULTS = $0000000C;
  I_LI_RC_COLUMN_REINFORCEMENT = $0000000D;
  I_LI_RC_COLUMN_DRAWINGS = $0000000E;
  I_LI_RC_BEAM_DEFINITION = $00000015;
  I_LI_RC_BEAM_SECTIONS = $00000016;
  I_LI_RC_BEAM_HOLES = $00000017;
  I_LI_RC_BEAM_LOADS = $00000018;
  I_LI_RC_BEAM_RESULTS = $00000019;
  I_LI_RC_BEAM_REINFORCEMENT = $0000001A;
  I_LI_RC_BEAM_WALL_DEFINITION = $0000001F;
  I_LI_RC_BEAM_WALL_SECTIONS = $00000020;
  I_LI_RC_BEAM_WALL_HOLES = $00000021;
  I_LI_RC_BEAM_WALL_LOADS = $00000022;
  I_LI_RC_BEAM_WALL_RESULTS = $00000023;
  I_LI_RC_BEAM_WALL_REINFORCEMENT = $00000024;
  I_LI_FOOTING_DEFINITION = $00000029;
  I_LI_FOOTING_LOADS = $0000002A;
  I_LI_FOOTING_SOIL = $0000002B;
  I_LI_FOOTING_RESULTS = $0000002C;
  I_LI_FOOTING_REINFORCEMENT = $0000002D;
  I_LI_DESIGN_CONNECTIONS = $00000033;
  I_LI_DESIGN_STEEL_ALUMINUM = $00000034;
  I_LI_DESIGN_WOOD = $00000035;
  I_LI_DESIGN_RC_MEMBERS = $00000036;
  I_LI_TOOL_SECTION_DEFINITION = $0000003D;
  I_LI_TOOL_TEXT_FILE = $0000003E;
  I_LI_TOOL_FINAL_DRAWING = $0000003F;
  I_LI_FOUNDATION_DEFINITION = $00000047;
  I_LI_FOUNDATION_LOADS = $00000048;
  I_LI_FOUNDATION_SOIL = $00000049;
  I_LI_FOUNDATION_RESULTS = $0000004A;
  I_LI_FOUNDATION_REINFORCEMENT = $0000004B;
  I_LI_RESULTS_DIAGRAMS = $00000051;
  I_LI_RESULTS_DETAILED = $00000052;
  I_LI_RESULTS_STRESS_BARS = $00000053;
  I_LI_RESULTS_STRESS_STRUCTURE = $00000054;
  I_LI_RESULTS_MAPS = $00000055;
  I_LI_RC_SLAB_REQUIRED_REINF = $0000005B;
  I_LI_RC_SLAB_PROVIDED_REINF = $0000005C;
  I_LI_RC_SLAB_REINFORCEMENT = $0000005D;

// Constants for enum IRobotViewReinforcementResultType
type
  IRobotViewReinforcementResultType = TOleEnum;
const
  I_VRRT_AX_TOP = $00000241;
  I_VRRT_AX_BOTTOM = $00000243;
  I_VRRT_AY_TOP = $00000242;
  I_VRRT_AY_BOTTOM = $00000244;
  I_VRRT_E_AX_TOP = $000002BB;
  I_VRRT_E_AX_BOTTOM = $000002BD;
  I_VRRT_E_AY_TOP = $000002BC;
  I_VRRT_E_AY_BOTTOM = $000002BE;
  I_VRRT_A_MIN = $0000045F;
  I_VRRT_AX = $0000045C;
  I_VRRT_AY = $0000045D;
  I_VRRT_F = $0000045E;

// Constants for enum IRobotViewDiagramPositionType
type
  IRobotViewDiagramPositionType = TOleEnum;
const
  I_VDPT_NORMAL = $00000001;
  I_VDPT_IN_PLANE = $00000002;

// Constants for enum IRobotDialogId
type
  IRobotDialogId = TOleEnum;
const
  I_DI_BAR_SECTIONS = $00000001;
  I_DI_SUPPORTS = $00000002;
  I_DI_PANEL_THICKNESS = $00000003;

// Constants for enum IRobotVariablePredefinedId
type
  IRobotVariablePredefinedId = TOleEnum;
const
  I_VPI_REPORT_PAGE_NUMBER = $00000000;
  I_VPI_DATE = $00000001;
  I_VPI_TIME = $00000002;
  I_VPI_ROBOT_APP = $00000003;
  I_VPI_ROBOT_VER = $00000004;
  I_VPI_ROBOT_PROVIDER = $00000005;
  I_VPI_USER_NAME = $00000006;
  I_VPI_USER_ADDRESS = $00000007;
  I_VPI_PROJECT_NAME = $00000008;
  I_VPI_PROJECT_FILE = $00000009;
  I_VPI_PROJECT_DIRECTORY = $0000000A;
  I_VPI_PROJECT_SIZE = $0000000B;
  I_VPI_PROJECT_CREATED = $0000000C;
  I_VPI_PROJECT_MODIFIED = $0000000D;
  I_VPI_PROJECT_VERSION = $0000000E;
  I_VPI_PROJECT_ADDRESS1 = $0000000F;
  I_VPI_PROJECT_ADDRESS2 = $00000010;
  I_VPI_PROJECT_REFERENCE = $00000011;
  I_VPI_PROJECT_STEP = $00000012;
  I_VPI_PROJECT_COMMENT = $00000013;
  I_VPI_ARCHITECT_NAME = $00000014;
  I_VPI_ARCHITECT_ADDRESS1 = $00000015;
  I_VPI_ARCHITECT_ADDRESS2 = $00000016;
  I_VPI_ARCHITECT_CONTACT = $00000017;
  I_VPI_ARCHITECT_TELEPHONE = $00000018;
  I_VPI_ARCHITECT_FAX = $00000019;
  I_VPI_ARCHITECT_EMAIL = $0000001A;
  I_VPI_INVESTOR_NAME = $0000001B;
  I_VPI_INVESTOR_ADDRESS1 = $0000001C;
  I_VPI_INVESTOR_ADDRESS2 = $0000001D;
  I_VPI_INVESTOR_CONTACT = $0000001E;
  I_VPI_INVESTOR_TELEPHONE = $0000001F;
  I_VPI_INVESTOR_FAX = $00000020;
  I_VPI_INVESTOR_EMAIL = $00000021;
  I_VPI_COMPANY_NAME = $00000022;
  I_VPI_COMPANY_ADDRESS1 = $00000023;
  I_VPI_COMPANY_ADDRESS2 = $00000024;
  I_VPI_COMPANY_CONTACT = $00000025;
  I_VPI_COMPANY_TELEPHONE = $00000026;
  I_VPI_COMPANY_FAX = $00000027;
  I_VPI_COMPANY_EMAIL = $00000028;
  I_VPI_DESIGNER_NAME = $00000029;
  I_VPI_DESIGNER_ADDRESS1 = $0000002A;
  I_VPI_DESIGNER_ADDRESS2 = $0000002B;
  I_VPI_DESIGNER_CONTACT = $0000002C;
  I_VPI_DESIGNER_TELEPHONE = $0000002D;
  I_VPI_DESIGNER_FAX = $0000002E;
  I_VPI_DESIGNER_EMAIL = $0000002F;
  I_VPI_VERIF_NAME = $00000030;
  I_VPI_VERIF_ADDRESS1 = $00000031;
  I_VPI_VERIF_ADDRESS2 = $00000032;
  I_VPI_VERIF_CONTACT = $00000033;
  I_VPI_VERIF_TELEPHONE = $00000034;
  I_VPI_VERIF_FAX = $00000035;
  I_VPI_VERIF_EMAIL = $00000036;
  I_VPI_PROJECT_STATISTICS = $00000037;
  I_VPI_PROJECT_CONTENT = $00000038;

// Constants for enum IRobotPageSetupFrameType
type
  IRobotPageSetupFrameType = TOleEnum;
const
  I_PSFT_NONE = $00000000;
  I_PSFT_FRAME = $00000001;
  I_PSFT_SEPARATION_LINE = $00000002;

// Constants for enum IRobotPageSetupOrientation
type
  IRobotPageSetupOrientation = TOleEnum;
const
  I_PSO_PORTRAIT = $00000001;
  I_PSO_LANDSCAPE = $00000002;

// Constants for enum IRobotPageSetupTocLocation
type
  IRobotPageSetupTocLocation = TOleEnum;
const
  I_PSTL_BEGINNING = $00000001;
  I_PSTL_END = $00000002;

// Constants for enum IRobotReportItemType
type
  IRobotReportItemType = TOleEnum;
const
  I_RIT_BLANK_PAGE = $00000001;
  I_RIT_PAGE_TEMPLATE = $00000002;
  I_RIT_VIEW = $00000003;

// Constants for enum IRobotExternalPreviewFormat
type
  IRobotExternalPreviewFormat = TOleEnum;
const
  EPF_HTML = $00000001;
  EPF_MS_OFFICE = $00000002;
  EPF_OPEN_OFFICE = $00000003;

// Constants for enum IRobotExternalFileFormat
type
  IRobotExternalFileFormat = TOleEnum;
const
  I_EFF_STR = $00000001;
  I_EFF_DXF = $00000002;

// Constants for enum IRJointConnectionDefType
type
  IRJointConnectionDefType = TOleEnum;
const
  I_JCDT_IN_STRUCTURE = $00000000;
  I_JCDT_STANDALONE = $00000001;

// Constants for enum IRJointConnectionType
type
  IRJointConnectionType = TOleEnum;
const
  I_JCT_KNEE_BOLTED = $00000000;
  I_JCT_KNEE_WELDED = $00000001;
  I_JCT_ANGLE = $00000002;
  I_JCT_TRNS = $00000003;
  I_JCT_COL_PINNED = $00000005;
  I_JCT_COL_FIXED = $00000006;
  I_JCT_COL_CONCR = $00000007;
  I_JCT_TUBE = $00000008;
  I_JCT_UNKNOWN = $FFFFFFFF;
  I_JCT_GUSSET_SIMPLE = $00000009;
  I_JCT_GUSSET_CROSS = $0000000A;
  I_JCT_GUSSET_FLANGE = $0000000B;
  I_JCT_BEAM_GIRDER = $0000000C;
  I_JCT_BEAM_COLUMN = $0000000D;
  I_JCT_SPLICE = $0000000E;
  I_JCT_TIE = $0000000F;

// Constants for enum IRJointWebFlangeRelativePos
type
  IRJointWebFlangeRelativePos = TOleEnum;
const
  I_JWFRP_WEB_LONG = $00000000;
  I_JWFRP_WEB_TRAN = $00000001;
  I_JWFRP_FLANGE_LONG = $00000002;
  I_JWFRP_FLANGE_TRAN = $00000003;
  I_JWFRP_OTHER = $00000004;

// Constants for enum IRJointLoadType
type
  IRJointLoadType = TOleEnum;
const
  I_JLT_ROBOT_FORCES = $00000001;
  I_JLT_MANUAL_FORCES = $00000002;

// Constants for enum IRJointExtType
type
  IRJointExtType = TOleEnum;
const
  I_EXT_NONE = $00000000;
  I_EXT_ANGLE2BEAM = $00000001;

// Constants for enum IRDimServerMode
type
  IRDimServerMode = TOleEnum;
const
  I_DSM_STEEL = $00000001;
  I_DSM_TIMBER = $00000002;

// Constants for enum IRDimStreamType
type
  IRDimStreamType = TOleEnum;
const
  I_DST_LONG = $00000001;
  I_DST_DOUBLE = $00000002;
  I_DST_TEXT = $00000003;

// Constants for enum IRDimMembDefType
type
  IRDimMembDefType = TOleEnum;
const
  I_DMDT_USER = $00000001;
  I_DMDT_MEMBER = $00000002;
  I_DMDT_BEAM = $00000003;
  I_DMDT_COLUMN = $00000004;

// Constants for enum IRDimMembDefLengthDataType
type
  IRDimMembDefLengthDataType = TOleEnum;
const
  I_DMDLDT_LENGTH_Y = $00000001;
  I_DMDLDT_LENGTH_Z = $00000002;
  I_DMDLDT_LENGTH_U = $00000003;
  I_DMDLDT_LENGTH_V = $00000004;

// Constants for enum IRDimMembDefDispDataType
type
  IRDimMembDefDispDataType = TOleEnum;
const
  I_DMDDDT_DISP_X = $00000001;
  I_DMDDDT_DISP_Y = $00000002;

// Constants for enum IRDimMembDefDeflDataType
type
  IRDimMembDefDeflDataType = TOleEnum;
const
  I_DMDDDT_DEFL_Y = $00000003;
  I_DMDDDT_DEFL_Y_FROM_LIVE_LOADS = $00000001;
  I_DMDDDT_DEFL_Z = $00000004;
  I_DMDDDT_DEFL_Z_FROM_LIVE_LOADS = $00000002;

// Constants for enum IRDimMembDefInitDeflType
type
  IRDimMembDefInitDeflType = TOleEnum;
const
  I_DMDIDT_LACK = $00000001;
  I_DMDIDT_USER = $00000002;
  I_DMDIDT_AUTO = $00000003;

// Constants for enum IRDimMembDefUserInitDeflType
type
  IRDimMembDefUserInitDeflType = TOleEnum;
const
  I_DMDUIDT_Y = $00000001;
  I_DMDUIDT_Z = $00000002;

// Constants for enum IRDimMembDefIntPsDataType
type
  IRDimMembDefIntPsDataType = TOleEnum;
const
  I_DMDIPDT_BUCKLING_Y = $00000001;
  I_DMDIPDT_BUCKLING_Z = $00000002;
  I_DMDIPDT_LBUCKLING_U = $00000003;
  I_DMDIPDT_LBUCKLING_L = $00000004;
  I_DMDIPDT_BUCKLING_X = $00000005;

// Constants for enum IRDimMembDefIntPsOptionType
type
  IRDimMembDefIntPsOptionType = TOleEnum;
const
  I_DMDIPOT_MANUAL_COORDS = $00000001;
  I_DMDIPOT_IN_ADJ_MEMBER = $00000002;
  I_DMDIPOT_IN_ZERO_MOMENT = $00000003;
  I_DMDIPOT_IN_NODES = $00000004;

// Constants for enum IRDimMembDefBucklingDataType
type
  IRDimMembDefBucklingDataType = TOleEnum;
const
  I_DMDBDT_BUCKLING_Y = $00000001;
  I_DMDBDT_BUCKLING_Z = $00000002;
  I_DMDBDT_BUCKLING_U = $00000003;
  I_DMDBDT_BUCKLING_V = $00000004;

// Constants for enum IRDimCalcParamVerifType
type
  IRDimCalcParamVerifType = TOleEnum;
const
  I_DCPVT_MEMBERS_VERIF = $00000001;
  I_DCPVT_GROUPS_VERIF = $00000002;
  I_DCPVT_GROUPS_DESIGN = $00000003;

// Constants for enum IRDimCalcParamLimitStateType
type
  IRDimCalcParamLimitStateType = TOleEnum;
const
  I_DCPLST_ULTIMATE = $00000001;
  I_DCPLST_SERVICEABILITY = $00000002;

// Constants for enum IRDimOptimParamOptionType
type
  IRDimOptimParamOptionType = TOleEnum;
const
  I_DOPOT_WEIGHT = $00000001;
  I_DOPOT_MAX_SECTION_HEIGHT = $00000002;
  I_DOPOT_MIN_SECTION_HEIGHT = $00000003;
  I_DOPOT_MIN_FLANGE_THICKNESS = $00000004;
  I_DOPOT_MIN_WEB_THICKNESS = $00000005;
  I_DOPOT_ENTIRE_SET_SECTIONS = $00000006;
  I_DOPOT_MAX_FLANGE_WIDTH = $00000007;

// Constants for enum IRDimOptimParamLimitType
type
  IRDimOptimParamLimitType = TOleEnum;
const
  I_DOPLT_MAX_SECTION_HEIGHT = $00000002;
  I_DOPLT_MIN_SECTION_HEIGHT = $00000003;
  I_DOPLT_MIN_FLANGE_THICKNESS = $00000004;
  I_DOPLT_MIN_WEB_THICKNESS = $00000005;
  I_DOPLT_MAX_FLANGE_WIDTH = $00000006;

// Constants for enum IRDimCalcConfFlagType
type
  IRDimCalcConfFlagType = TOleEnum;
const
  I_DCCFT_CHECKSLEND = $00000001;
  I_DCCFT_FIRE = $00000002;
  I_DCCFT_INACTIVECOMP = $00000003;
  I_DCCFT_CHARPOINTS = $00000004;
  I_DCCFT_N_AND_CHAR_POINTS = $00000005;
  I_DCCFT_MAX_FX_POINT = $00000006;
  I_DCCFT_MAX_FY_POINT = $00000007;
  I_DCCFT_MAX_FZ_POINT = $00000008;
  I_DCCFT_MAX_MY_POINT = $00000009;
  I_DCCFT_MAX_MZ_POINT = $0000000A;
  I_DCCFT_USERPOINTS = $0000000B;
  I_DCCFT_USERPOINTS_ABS = $0000000C;
  I_DCCFT_ROBOTUNITS = $0000000D;
  I_DCCFT_INITIAL_DEFLECTIONS = $0000000E;
  I_DCCFT_INTERNALFORCE_FX = $0000000F;
  I_DCCFT_INTERNALFORCE_FY = $00000010;
  I_DCCFT_INTERNALFORCE_FZ = $00000011;
  I_DCCFT_INTERNALFORCE_MX = $00000012;
  I_DCCFT_INTERNALFORCE_MY = $00000013;
  I_DCCFT_INTERNALFORCE_MZ = $00000014;
  I_DCCFT_NO_INTERNALFORCE_FX = $00000015;
  I_DCCFT_NO_INTERNALFORCE_FY = $00000016;
  I_DCCFT_NO_INTERNALFORCE_FZ = $00000017;
  I_DCCFT_NO_INTERNALFORCE_MX = $00000018;
  I_DCCFT_NO_INTERNALFORCE_MY = $00000019;
  I_DCCFT_NO_INTERNALFORCE_MZ = $0000001A;
  I_DCCFT_NO_STRESS_PERCENT_BY_INTERNALFORCE_FX = $0000001B;
  I_DCCFT_NO_STRESS_PERCENT_BY_INTERNALFORCE_FY = $0000001C;
  I_DCCFT_NO_STRESS_PERCENT_BY_INTERNALFORCE_FZ = $0000001D;
  I_DCCFT_NO_STRESS_PERCENT_BY_INTERNALFORCE_MX = $0000001E;
  I_DCCFT_NO_STRESS_PERCENT_BY_INTERNALFORCE_MY = $0000001F;
  I_DCCFT_NO_STRESS_PERCENT_BY_INTERNALFORCE_MZ = $00000020;
  I_DCCFT_STRESSINCREASE = $00000021;
  I_DCCFT_ANSI_CALCMETHOD_LRFD = $00000022;
  I_DCCFT_ANSI_CALCMETHOD_ASD = $00000023;
  I_DCCFT_ANSI_FLEXURE_AND_COMPRESSION = $00000024;
  I_DCCFT_ANSI_VERIF_H2_INSTEAD_H1 = $00000025;
  I_DCCFT_ANSI_SHEAR_TENSION_FIELD_ACTION_G3 = $00000026;
  I_DCCFT_EC3_ELASTIC_ANALYSIS = $00000027;
  I_DCCFT_EC3_SHEAR_VERIF_IN_ELASTIC_STATE = $00000028;
  I_DCCFT_EC3_CALCMETHOD_1 = $00000029;
  I_DCCFT_EC3_CALCMETHOD_2 = $0000002A;

// Constants for enum IRDimCalcConfValueType
type
  IRDimCalcConfValueType = TOleEnum;
const
  I_DCCPV_MAXSLEND_COMPRESSION = $00000001;
  I_DCCPV_MAXSLEND_TENSION = $00000002;
  I_DCCPV_EFFRATIO = $00000003;
  I_DCCFT_MINIMM_STRESS_BY_INTERNALFORCE_FX = $00000004;
  I_DCCFT_MINIMM_STRESS_BY_INTERNALFORCE_FY = $00000005;
  I_DCCFT_MINIMM_STRESS_BY_INTERNALFORCE_FZ = $00000006;
  I_DCCFT_MINIMM_STRESS_BY_INTERNALFORCE_MX = $00000007;
  I_DCCFT_MINIMM_STRESS_BY_INTERNALFORCE_MY = $00000008;
  I_DCCFT_MINIMM_STRESS_BY_INTERNALFORCE_MZ = $00000009;
  I_DCCFT_MAXIMM_STRESS_BY_INTERNALFORCE_FX = $0000000A;
  I_DCCFT_MAXIMM_STRESS_BY_INTERNALFORCE_FY = $0000000B;
  I_DCCFT_MAXIMM_STRESS_BY_INTERNALFORCE_FZ = $0000000C;
  I_DCCFT_MAXIMM_STRESS_BY_INTERNALFORCE_MX = $0000000D;
  I_DCCFT_MAXIMM_STRESS_BY_INTERNALFORCE_MY = $0000000E;
  I_DCCFT_MAXIMM_STRESS_BY_INTERNALFORCE_MZ = $0000000F;

// Constants for enum IRDimAllResObjectType
type
  IRDimAllResObjectType = TOleEnum;
const
  I_DAROT_VERIFIED_MEMBER = $00000001;
  I_DAROT_VERIFIED_GROUP = $00000002;
  I_DAROT_DESIGNED_GROUP = $00000003;

// Constants for enum IRDimMembDefGuidType
type
  IRDimMembDefGuidType = TOleEnum;
const
  I_DMDGT_LACK = $00000000;
  I_DMDGT_CLSID = $00000001;
  I_DMDGT_PROGID = $00000002;

// Constants for enum IRDimMembDefAdjoinHowCalcul
type
  IRDimMembDefAdjoinHowCalcul = TOleEnum;
const
  I_DMDAHC_LOCAL_USING_CALCULBUCKLING = $00000001;
  I_DMDAHC_LIKE_EU3_CODE = $00000002;
  I_DMDAHC_LIKE_BS5950_CODE = $00000003;
  I_DMDAHC_LIKE_USA_CODE = $00000004;
  I_DMDAHC_LIKE_CM66_CODE = $00000005;

// Constants for enum IRDimMembDefAdjoinWayOfCalcul
type
  IRDimMembDefAdjoinWayOfCalcul = TOleEnum;
const
  I_DMDAWOC_1_K1 = $00000001;
  I_DMDAWOC_1_K0 = $00000002;
  I_DMDAWOC_3_K1 = $00000003;
  I_DMDAWOC_3_K0 = $00000004;
  I_DMDAWOC_6 = $00000005;
  I_DMDAWOC_AUTO = $00000006;

// Constants for enum IRDimMembDefOptionType
type
  IRDimMembDefOptionType = TOleEnum;
const
  I_DMDOT_NOTHING = $00000001;

// Constants for enum IRDimUnitType
type
  IRDimUnitType = TOleEnum;
const
  I_DUT_SECDIMEN = $00000001;
  I_DUT_SECSUR = $00000002;
  I_DUT_SECVOL = $00000003;
  I_DUT_SECMI = $00000004;
  I_DUT_LENGTH = $00000005;
  I_DUT_FORCE = $00000006;
  I_DUT_DISPL = $00000007;
  I_DUT_MOMENT = $00000008;
  I_DUT_STRESS = $00000009;
  I_DUT_NONE = $0000000A;

// Constants for enum IRDimAdjoinMembNo
type
  IRDimAdjoinMembNo = TOleEnum;
const
  I_DAMN_NO_1 = $00000001;
  I_DAMN_NO_2 = $00000002;
  I_DAMN_NO_3 = $00000003;
  I_DAMN_NO_4 = $00000004;
  I_DAMN_NO_5 = $00000005;
  I_DAMN_NO_6 = $00000006;
  I_DAMN_SEEK_SEET_TO_BEGIN_1 = $00000007;
  I_DAMN_SEEK_SEET_TO_BEGIN_2 = $00000008;
  I_DAMN_SEEK_SEET_TO_BEGIN_3 = $00000009;
  I_DAMN_SEEK_SEET_TO_BEGIN_4 = $0000000A;
  I_DAMN_SEEK_SEET_TO_BEGIN_5 = $0000000B;
  I_DAMN_SEEK_SEET_TO_BEGIN_6 = $0000000C;

// Constants for enum IRDimAdjoinMembPos
type
  IRDimAdjoinMembPos = TOleEnum;
const
  I_DAMP_POSITION_NORMAL = $00000001;
  I_DAMP_POSITION_90ROTATED = $00000002;

// Constants for enum IRDimAdjoinMembSuppCond
type
  IRDimAdjoinMembSuppCond = TOleEnum;
const
  I_DAMSC_SUPPCOND_PINNED = $00000001;
  I_DAMSC_SUPPCOND_STIFFENED = $00000002;
  I_DAMSC_SUPPCOND_MIXED = $00000003;

// Constants for enum IRDimAdjoinParamsEqMInertia
type
  IRDimAdjoinParamsEqMInertia = TOleEnum;
const
  I_DAPEMI_MINIMUM = $00000001;
  I_DAPEMI_AVERAGE = $00000002;
  I_DAPEMI_MAXPERCENT = $00000003;
  I_DAPEMI_IN_POINT = $00000004;

// Constants for enum IRDimAdjoinParamsStoreyFrame
type
  IRDimAdjoinParamsStoreyFrame = TOleEnum;
const
  I_DAPSF_ONE = $00000001;
  I_DAPSF_MULTI = $00000002;

// Constants for enum IRDimAdjoinParamsColumnLevel
type
  IRDimAdjoinParamsColumnLevel = TOleEnum;
const
  I_DAPCL_DOWN = $00000001;
  I_DAPCL_MIDDLE = $00000002;
  I_DAPCL_UP = $00000003;

// Constants for enum IRDimConnectionMsg
type
  IRDimConnectionMsg = TOleEnum;
const
  I_DCM_DETAILED_ANALYZE_RTF_PRINT = $00000001;
  I_DCM_SHOW_LOADCASES_DIALOG = $00000002;

// Constants for enum IRDimDeflDispInitType
type
  IRDimDeflDispInitType = TOleEnum;
const
  I_DDDIT_MEMBER_NO = $00000001;
  I_DDDIT_CASE_NO = $00000002;
  I_DDDIT_MEMBER_USER_NO = $00000003;
  I_DDDIT_CASE_USER_NO = $00000004;

// Constants for enum IRDimDeflDispCaseType
type
  IRDimDeflDispCaseType = TOleEnum;
const
  I_DDDCT_NONE = $00000000;
  I_DDDCT_SIMPLE = $00000001;
  I_DDDCT_COMBINATION = $00000002;
  I_DDDCT_CODECOMBINATION = $00000003;

// Constants for enum IRDimDeflDispSimpleCaseNature
type
  IRDimDeflDispSimpleCaseNature = TOleEnum;
const
  I_DDDSCN_PERM = $00000000;
  I_DDDSCN_EXPL = $00000001;
  I_DDDSCN_TEMP = $00000002;
  I_DDDSCN_WIND = $00000003;
  I_DDDSCN_SNOW = $00000004;
  I_DDDSCN_ACCI = $00000005;
  I_DDDSCN_SEIS = $00000006;
  I_DDDSCN_NON = $00000007;

// Constants for enum IRDimDeflDispType
type
  IRDimDeflDispType = TOleEnum;
const
  I_DDDT_DEFL_Y = $00000000;
  I_DDDT_DEFL_Z = $00000001;
  I_DDDT_DEFL_MAX_Y = $00000002;
  I_DDDT_DEFL_MAX_Z = $00000003;
  I_DDDT_DISP_X = $00000004;
  I_DDDT_DISP_Y = $00000005;

// Constants for enum IRDimDeflDispCodeCombType
type
  IRDimDeflDispCodeCombType = TOleEnum;
const
  I_DDDCCT_STD = $00000000;
  I_DDDCCT_SEI = $00000001;
  I_DDDCCT_ACC = $00000002;
  I_DDDCCT_BAR = $00000003;
  I_DDDCCT_FRE = $00000004;
  I_DDDCCT_QPR = $00000005;
  I_DDDCCT_USR = $00000006;
  I_DDDCCT_FUN = $00000007;
  I_DDDCCT_SIM = $00000008;
  I_DDDCCT_EXT = $00000009;
  I_DDDCCT_STAB1 = $0000000A;
  I_DDDCCT_STAB2 = $0000000B;
  I_DDDCCT_EC7_A = $0000000C;
  I_DDDCCT_EC7_B = $0000000D;
  I_DDDCCT_EC7_C = $0000000E;
  I_DDDCCT_SEISHEAR = $0000000F;

// Constants for enum IRDimDeflDispRegulationsCoeff
type
  IRDimDeflDispRegulationsCoeff = TOleEnum;
const
  I_DDDRC_COEFF_GU_MAX = $00000000;
  I_DDDRC_COEFF_GU_MIN = $00000001;
  I_DDDRC_COEFF_GS = $00000002;
  I_DDDRC_COEFF_GA = $00000003;
  I_DDDRC_COEFF_PSI01 = $00000004;
  I_DDDRC_COEFF_PSI02 = $00000005;
  I_DDDRC_COEFF_PSI03 = $00000006;
  I_DDDRC_COEFF_PSI0N = $00000007;
  I_DDDRC_COEFF_PSI1 = $00000008;
  I_DDDRC_COEFF_PSI21 = $00000009;
  I_DDDRC_COEFF_PSI2N = $0000000A;
  I_DDDRC_COEFF_PSIK = $0000000B;
  I_DDDRC_COEFF_KSI_MAX = $0000000C;
  I_DDDRC_COEFF_KSI_MIN = $0000000D;

// Constants for enum IRobotStructuralAxisGridType
type
  IRobotStructuralAxisGridType = TOleEnum;
const
  I_SAGT_CARTESIAN = $00000001;
  I_SAGT_CYLINDRICAL = $00000002;
  I_SAGT_ARBITRARY = $00000003;

// Constants for enum IRobotBackgroundVisibilityRangeType
type
  IRobotBackgroundVisibilityRangeType = TOleEnum;
const
  I_BVRT_AUTOMATIC = $00000001;
  I_BVRT_USER_DEFINED = $00000002;
  I_BVRT_UNLIMITED = $00000003;

// Constants for enum IRobotSTRParamType
type
  IRobotSTRParamType = TOleEnum;
const
  I_STR_PT_INTEGER = $00000001;
  I_STR_PT_DOUBLE = $00000002;
  I_STR_PT_TEXT = $00000003;
  I_STR_PT_SELECTION = $00000004;
  I_STR_PT_DOUBLE_3 = $00000005;
  I_STR_PT_TEXT_LIST = $00000006;
  I_STR_PT_SECTION = $00000007;
  I_STR_PT_GROUP = $00000008;

// Constants for enum IRobotStructuralAxisLabelType
type
  IRobotStructuralAxisLabelType = TOleEnum;
const
  I_SALT_123 = $00000001;
  I_SALT_ABC = $00000002;
  I_SALT_VALUE = $00000003;
  I_SALT_DEFINE = $00000004;
  I_SALT_VARIOUS = $00000005;

// Constants for enum IRobotSWCodePLWindZone
type
  IRobotSWCodePLWindZone = TOleEnum;
const
  I_SWCPLWZ_I = $00000000;
  I_SWCPLWZ_II = $00000001;
  I_SWCPLWZ_IIA = $00000002;
  I_SWCPLWZ_IIB = $00000003;
  I_SWCPLWZ_III = $00000004;

// Constants for enum IRobotSWCodePLWindSite
type
  IRobotSWCodePLWindSite = TOleEnum;
const
  I_SWCPLWS_A = $00000000;
  I_SWCPLWS_B = $00000001;
  I_SWCPLWS_C = $00000002;

// Constants for enum IRobotSWCodePLWindPressDistribType
type
  IRobotSWCodePLWindPressDistribType = TOleEnum;
const
  I_SWCPLWPDT_CONSTANT = $00000000;
  I_SWCPLWPDT_VARIABLE = $00000001;

// Constants for enum IRobotSWCodePLSnowZone
type
  IRobotSWCodePLSnowZone = TOleEnum;
const
  I_SWCPLSZ_I = $00000000;
  I_SWCPLSZ_II = $00000001;
  I_SWCPLSZ_III = $00000002;
  I_SWCPLSZ_IV = $00000003;

// Constants for enum IRobotSWCodeFRWindSite
type
  IRobotSWCodeFRWindSite = TOleEnum;
const
  I_SWCFRWS_OBSCURED = $00000000;
  I_SWCFRWS_NORMAL = $00000001;
  I_SWCFRWS_EXPOSED = $00000002;

// Constants for enum IRobotSWCodeFRWindType
type
  IRobotSWCodeFRWindType = TOleEnum;
const
  I_SWCFRWT_NORMAL = $00000000;
  I_SWCFRWT_EXTREME = $00000001;

// Constants for enum IRobotSWCodeFRSurfaceType
type
  IRobotSWCodeFRSurfaceType = TOleEnum;
const
  I_SWCFRST_SMOOTH_OR_CORRUGATED = $00000000;
  I_SWCFRST_FOLDED_OR_CORRUGATED = $00000001;
  I_SWCFRST_RIBBED = $00000002;

// Constants for enum IRobotSWCodeFRSnowType
type
  IRobotSWCodeFRSnowType = TOleEnum;
const
  I_SWCFRST_NORMAL = $00000001;
  I_SWCFRST_ACCIDENTAL = $00000002;
  I_SWCFRST_NORMAL_AND_ACCIDENTAL = $00000000;

// Constants for enum IRobotSWCodeECSiteType
type
  IRobotSWCodeECSiteType = TOleEnum;
const
  I_SWCECST_TYPE_I = $00000001;
  I_SWCECST_TYPE_II = $00000002;
  I_SWCECST_TYPE_III = $00000003;
  I_SWCECST_TYPE_IV = $00000004;
  I_SWCECST_TYPE_V = $00000005;
  I_SWCECST_TYPE_VI = $00000006;

// Constants for enum IRobotSWCodeECGroundType
type
  IRobotSWCodeECGroundType = TOleEnum;
const
  I_SWCECGT_TYPE_I = $00000001;
  I_SWCECGT_TYPE_II = $00000002;
  I_SWCECGT_TYPE_III = $00000003;
  I_SWCECGT_TYPE_IV = $00000004;

// Constants for enum IRobotSWCodeECCdType
type
  IRobotSWCodeECCdType = TOleEnum;
const
  I_SWCECCT_TYPE_I = $00000001;
  I_SWCECCT_TYPE_II = $00000002;
  I_SWCECCT_TYPE_III = $00000003;

// Constants for enum IRobotViewDetailedAnalysisTableTab
type
  IRobotViewDetailedAnalysisTableTab = TOleEnum;
const
  I_VDATT_VALUES = $00000000;
  I_VDATT_LOCAL_EXTREMES = $00000001;
  I_VDATT_GLOBAL_EXTREMES = $00000002;

// Constants for enum IRobotViewDetailedAnalysisResultType
type
  IRobotViewDetailedAnalysisResultType = TOleEnum;
const
  I_VDART_NTM_FX = $00000001;
  I_VDART_NTM_FY = $00000002;
  I_VDART_NTM_FZ = $00000003;
  I_VDART_NTM_MX = $00000004;
  I_VDART_NTM_MY = $00000005;
  I_VDART_NTM_MZ = $00000006;
  I_VDART_NTM_UX = $00000007;
  I_VDART_NTM_UY = $00000008;
  I_VDART_NTM_UZ = $00000009;
  I_VDART_STRESS_S_MAX = $0000000A;
  I_VDART_STRESS_S_MIN = $0000000B;
  I_VDART_STRESS_BENDING_S_MAX_MY = $0000000C;
  I_VDART_STRESS_BENDING_S_MIN_MY = $0000000D;
  I_VDART_STRESS_BENDING_S_MAX_MZ = $0000000E;
  I_VDART_STRESS_BENDING_S_MIN_MZ = $0000000F;
  I_VDART_STRESS_AXIAL_FX_AX = $00000010;
  I_VDART_STRESS_SHEAR_TY = $00000011;
  I_VDART_STRESS_SHEAR_TZ = $00000012;
  I_VDART_STRESS_TORSION_T = $00000013;
  I_VDART_REINFORCE_TOP = $00000014;
  I_VDART_REINFORCE_TOP_REAL = $00000015;
  I_VDART_REINFORCE_BOTTOM = $00000016;
  I_VDART_REINFORCE_BOTTOM_REAL = $00000017;
  I_VDART_REINFORCE_RATIO = $00000018;
  I_VDART_REINFORCE_RATIO_REAL = $00000019;
  I_VDART_REINFORCE_STIRRUP_SPACING = $0000001A;
  I_VDART_REINFORCE_STIRRUP_SPACING_REAL = $0000001B;
  I_VDART_REINFORCE_NUMBER_OF_UPPER_BARS = $0000001C;
  I_VDART_REINFORCE_NUMBER_OF_LOWER_BARS = $0000001D;

// Constants for enum IRobotViewScreenCaptureUpdateType
type
  IRobotViewScreenCaptureUpdateType = TOleEnum;
const
  I_SCUT_UPDATED_UPON_PRINTING = $00000001;
  I_SCUT_CURRENT_VIEW = $00000002;
  I_SCUT_UPDATED_WHOLE_STRUCTURE = $00000003;
  I_SCUT_COPY_TO_CLIPBOARD = $00000004;

// Constants for enum IRobotViewScreenCaptureResolution
type
  IRobotViewScreenCaptureResolution = TOleEnum;
const
  I_VSCR_DEFAULT = $00000000;
  I_VSCR_2048 = $00000001;
  I_VSCR_3072 = $00000002;
  I_VSCR_4096 = $00000003;

// Constants for enum IRobotViewGlobalAnalysisResultsType
type
  IRobotViewGlobalAnalysisResultsType = TOleEnum;
const
  I_VGART_N_POINTS = $00000001;
  I_VGART_RELATIVE = $00000002;

// Constants for enum IRobotViewGlobalAnalysisParamsType
type
  IRobotViewGlobalAnalysisParamsType = TOleEnum;
const
  I_VGAPT_FORCE_FX = $00000001;
  I_VGAPT_FORCE_FY = $00000002;
  I_VGAPT_FORCE_FZ = $00000003;
  I_VGAPT_FORCE_MX = $00000004;
  I_VGAPT_FORCE_MY = $00000005;
  I_VGAPT_FORCE_MZ = $00000006;
  I_VGAPT_FORCE_KX = $00000007;
  I_VGAPT_FORCE_KY = $00000008;
  I_VGAPT_STRESS_NORMAL = $00000009;
  I_VGAPT_STRESS_EXTREME = $0000000A;
  I_VGAPT_STRESS_BENDING_SMY = $0000000B;
  I_VGAPT_STRESS_BENDING_SMZ = $0000000C;
  I_VGAPT_STRESS_AXIAL_SXFX = $0000000D;
  I_VGAPT_STRESS_SHEAR = $0000000E;
  I_VGAPT_STRESS_TORSION = $0000000F;
  I_VGAPT_DESIGN_RATIO = $00000010;
  I_VGAPT_DESIGN_MEMBER_LENGTH = $00000011;
  I_VGAPT_DESIGN_SLENDERNESS_LAY = $00000012;
  I_VGAPT_DESIGN_SLENDERNESS_LAZ = $00000013;

// Constants for enum IRobotViewInfluenceLinesResultType
type
  IRobotViewInfluenceLinesResultType = TOleEnum;
const
  I_VILRT_NTM_FX = $00000001;
  I_VILRT_NTM_FY = $00000002;
  I_VILRT_NTM_FZ = $00000003;
  I_VILRT_NTM_MX = $00000004;
  I_VILRT_NTM_MY = $00000005;
  I_VILRT_NTM_MZ = $00000006;
  I_VILRT_NTM_KY = $00000007;
  I_VILRT_NTM_KZ = $00000008;
  I_VILRT_NTM_UX = $00000009;
  I_VILRT_NTM_UZ = $0000000A;
  I_VILRT_NODES_UX = $0000000B;
  I_VILRT_NODES_UY = $0000000C;
  I_VILRT_NODES_UZ = $0000000D;
  I_VILRT_NODES_RX = $0000000E;
  I_VILRT_NODES_RY = $0000000F;
  I_VILRT_NODES_RZ = $00000010;
  I_VILRT_NODES_FX = $00000011;
  I_VILRT_NODES_FY = $00000012;
  I_VILRT_NODES_FZ = $00000013;
  I_VILRT_NODES_MX = $00000014;
  I_VILRT_NODES_MY = $00000015;
  I_VILRT_NODES_MZ = $00000016;
  I_VILRT_DETAILED_STRESS_XX = $00000017;
  I_VILRT_DETAILED_STRESS_YY = $00000018;
  I_VILRT_DETAILED_STRESS_XY = $00000019;
  I_VILRT_DETAILED_STRESS_Z = $0000001A;
  I_VILRT_DETAILED_MEMBRANE_FORCE_XX = $0000001B;
  I_VILRT_DETAILED_MEMBRANE_FORCE_YY = $0000001C;
  I_VILRT_DETAILED_MEMBRANE_FORCE_XY = $0000001D;
  I_VILRT_DETAILED_MOMENTS_XX = $0000001E;
  I_VILRT_DETAILED_MOMENTS_YY = $0000001F;
  I_VILRT_DETAILED_MOMENTS_XY = $00000020;
  I_VILRT_DETAILED_SHEAR_STRESS_XX = $00000021;
  I_VILRT_DETAILED_SHEAR_STRESS_YY = $00000022;
  I_VILRT_DETAILED_SHEAR_FORCE_XX = $00000023;
  I_VILRT_DETAILED_SHEAR_FORCE_YY = $00000024;
  I_VILRT_DETAILED_DISPLACEMENT_XX = $00000025;
  I_VILRT_DETAILED_DISPLACEMENT_YY = $00000026;
  I_VILRT_DETAILED_DISPLACEMENT_Z = $00000027;
  I_VILRT_DETAILED_ROTATION_XX = $00000028;
  I_VILRT_DETAILED_ROTATION_YY = $00000029;
  I_VILRT_DETAILED_ROTATION_Z = $0000002A;
  I_VILRT_DETAILED_SOIL_REACTION_Z = $0000002B;
  I_VILRT_EXTREME_STRESS_1 = $0000002C;
  I_VILRT_EXTREME_STRESS_2 = $0000002D;
  I_VILRT_EXTREME_STRESS_1_2 = $0000002E;
  I_VILRT_EXTREME_STRESS_ANGLE = $0000002F;
  I_VILRT_EXTREME_MEMBRANE_FORCES_1 = $00000030;
  I_VILRT_EXTREME_MEMBRANE_FORCES_2 = $00000031;
  I_VILRT_EXTREME_MEMBRANE_FORCES_1_2 = $00000032;
  I_VILRT_EXTREME_MEMBRANE_FORCES_ANGLE = $00000033;
  I_VILRT_EXTREME_MOMENTS_1 = $00000034;
  I_VILRT_EXTREME_MOMENTS_2 = $00000035;
  I_VILRT_EXTREME_MOMENTS_1_2 = $00000036;
  I_VILRT_EXTREME_MOMENTS_ANGLE = $00000037;
  I_VILRT_EXTREME_SHEAR_STRESS_1_2 = $00000038;
  I_VILRT_EXTREME_SHEAR_FORCE_1_2 = $00000039;
  I_VILRT_COMPLEX_STRESS = $0000003A;
  I_VILRT_COMPLEX_MEMBRANE_FORCE = $0000003B;
  I_VILRT_COMPLEX_MOMENT = $0000003C;

// Constants for enum IRobotViewInfluenceLinesLayerType
type
  IRobotViewInfluenceLinesLayerType = TOleEnum;
const
  I_VILLT_UPPER = $00000000;
  I_VILLT_MIDDLE = $00000001;
  I_VILLT_LOWER = $00000002;
  I_VILLT_ARBITRARY = $00000003;

// Constants for enum IRobotViewInfluenceLinesLocalSystemType
type
  IRobotViewInfluenceLinesLocalSystemType = TOleEnum;
const
  I_VILLST_CARTESIAN_ALONG_X = $00000000;
  I_VILLST_CARTESIAN_ALONG_Y = $00000001;
  I_VILLST_CARTESIAN_ALONG_Z = $00000002;
  I_VILLST_CARTESIAN_ALONG_VECTOR = $00000003;
  I_VILLST_POLAR_IN_NODE = $00000004;
  I_VILLST_POLAR_IN_POINT = $00000005;
  I_VILLST_AUTOMATIC = $00000006;

// Constants for enum IRobotViewScaleType
type
  IRobotViewScaleType = TOleEnum;
const
  I_VST_FX = $00000000;
  I_VST_FY = $00000001;
  I_VST_FZ = $00000002;
  I_VST_MX = $00000003;
  I_VST_MY = $00000004;
  I_VST_MZ = $00000005;
  I_VST_DEFORM = $00000006;
  I_VST_SIG = $00000007;
  I_VST_TAU = $00000008;

// Constants for enum _eRobotViewProjection
type
  _eRobotViewProjection = TOleEnum;
const
  I_VP_YX = $00000004;
  I_VP_ZY = $00000005;
  I_VP_ZX = $00000006;

// Constants for enum _eRobotViewVisibilityStatusValue
type
  _eRobotViewVisibilityStatusValue = TOleEnum;
const
  I_VVST_DESCRIPTIONS_NONE = $00000000;
  I_VVST_DESCRIPTIONS_HORIZONTAL = $00000001;
  I_VVST_DESCRIPTIONS_VERTICAL = $00000002;
  I_VVST_REINFORCEMENT_A1 = $00000001;
  I_VVST_REINFORCEMENT_A1R = $00000010;
  I_VVST_REINFORCEMENT_A2 = $00000002;
  I_VVST_REINFORCEMENT_A2R = $00000020;
  I_VVST_REINFORCEMENT_PRC = $00000004;
  I_VVST_REINFORCEMENT_PRCR = $00000008;
  I_VVST_REINFORCEMENT_DISTRIB = $00000040;
  I_VVST_REINFORCEMENT_DISTRIBR = $00000080;
  I_VVST_REINFORCEMENT_A1BARS = $00000100;
  I_VVST_REINFORCEMENT_A2BARS = $00000200;
  I_VVST_MAPS_DETAILED_STRESSES_XX = $000001E3;
  I_VVST_MAPS_DETAILED_STRESSES_YY = $000001E4;
  I_VVST_MAPS_DETAILED_STRESSES_XY = $000001E5;
  I_VVST_MAPS_DETAILED_STRESSES_Z = $000001E6;
  I_VVST_MAPS_DETAILED_MEMB_FORCES_XX = $000001EC;
  I_VVST_MAPS_DETAILED_MEMB_FORCES_YY = $000001ED;
  I_VVST_MAPS_DETAILED_MEMB_FORCES_XY = $000001EE;
  I_VVST_MAPS_DETAILED_MOMENTS_XX = $000001F5;
  I_VVST_MAPS_DETAILED_MOMENTS_YY = $000001F6;
  I_VVST_MAPS_DETAILED_MOMENTS_XY = $000001F7;
  I_VVST_MAPS_DETAILED_SHEAR_STRESSES_XX = $000001FE;
  I_VVST_MAPS_DETAILED_SHEAR_STRESSES_YY = $000001FF;
  I_VVST_MAPS_DETAILED_SHEAR_FORCES_XX = $00000207;
  I_VVST_MAPS_DETAILED_SHEAR_FORCES_YY = $00000208;
  I_VVST_MAPS_DETAILED_DISPLACEMENTS_XX = $00000219;
  I_VVST_MAPS_DETAILED_DISPLACEMENTS_YY = $0000021A;
  I_VVST_MAPS_DETAILED_DISPLACEMENTS_Z = $00000213;
  I_VVST_MAPS_DETAILED_ROTATION_XX = $00000222;
  I_VVST_MAPS_DETAILED_ROTATION_YY = $00000223;
  I_VVST_MAPS_DETAILED_ROTATION_Z = $00000225;
  I_VVST_MAPS_DETAILED_SOIL_REACTIONS = $0000022E;
  I_VVST_MAPS_PRINCIPAL_STRESSES_1 = $000001E7;
  I_VVST_MAPS_PRINCIPAL_STRESSES_2 = $000001E8;
  I_VVST_MAPS_PRINCIPAL_STRESSES_1_2 = $000001EA;
  I_VVST_MAPS_PRINCIPAL_STRESSES_ANGLE = $000001E9;
  I_VVST_MAPS_PRINCIPAL_MEMB_FORCES_1 = $000001F0;
  I_VVST_MAPS_PRINCIPAL_MEMB_FORCES_2 = $000001F1;
  I_VVST_MAPS_PRINCIPAL_MEMB_FORCES_1_2 = $000001F3;
  I_VVST_MAPS_PRINCIPAL_MEMB_FORCES_ANGLE = $000001F2;
  I_VVST_MAPS_PRINCIPAL_MOMENTS_1 = $000001F9;
  I_VVST_MAPS_PRINCIPAL_MOMENTS_2 = $000001FA;
  I_VVST_MAPS_PRINCIPAL_MOMENTS_ANGLE = $000001FB;
  I_VVST_MAPS_PRINCIPAL_MOMENTS_1_2 = $000001FC;
  I_VVST_MAPS_PRINCIPAL_SHEAR_STRESSES = $00000205;
  I_VVST_MAPS_PRINCIPAL_SHEAR_FORCES = $0000020E;
  I_VVST_MAPS_PRINCIPAL_GLOBAL_DISP_X = $00000516;
  I_VVST_MAPS_PRINCIPAL_GLOBAL_DISP_Y = $00000517;
  I_VVST_MAPS_PRINCIPAL_GLOBAL_DISP_Z = $00000518;
  I_VVST_MAPS_PRINCIPAL_TOTAL_DISP = $00000519;
  I_VVST_MAPS_COMPLEX_STRESSES = $000001EB;
  I_VVST_MAPS_COMPLEX_MEMB_FORCES = $000001F4;
  I_VVST_MAPS_COMPLEX_MOMENTS = $000001FD;
  I_VVST_MAPS_COMPLEX_REINFORCEMENT_TOP_MXX = $00000379;
  I_VVST_MAPS_COMPLEX_REINFORCEMENT_TOP_MYY = $0000037B;
  I_VVST_MAPS_COMPLEX_REINFORCEMENT_BOTTOM_MXX = $0000037A;
  I_VVST_MAPS_COMPLEX_REINFORCEMENT_BOTTOM_MYY = $0000037C;
  I_VVST_MAPS_CROSS_S = $0000057C;
  I_VVST_MAPS_CROSS_N = $0000057D;
  I_VVST_MAPS_CROSS_M = $0000057E;
  I_VVST_MAPS_LAYER_UPPER = $00000000;
  I_VVST_MAPS_LAYER_MIDDLE = $00000001;
  I_VVST_MAPS_LAYER_LOWER = $00000002;
  I_VVST_MAPS_LAYER_MAXIMUM = $00000003;
  I_VVST_MAPS_LAYER_MINIMUM = $00000004;
  I_VVST_MAPS_LAYER_ABS_MINIMUM = $00000005;
  I_VVST_MAPS_LAYER_ARBITRARY = $00000006;
  I_VVST_MAPS_ISOLINES = $00000001;
  I_VVST_MAPS_DESCRIPTION = $00000002;

// Constants for enum IRDimMembCalcRetValue
type
  IRDimMembCalcRetValue = TOleEnum;
const
  I_DMCRV_INCORRECTDATA = $FFFFFFFE;
  I_DMCRV_INSTABILITY = $FFFFFFFD;
  I_DMCRV_INCORRECT = $00000000;
  I_DMCRV_CORRECT = $00000001;

// Constants for enum IRDimMatDefType
type
  IRDimMatDefType = TOleEnum;
const
  I_DMDT_NONE = $00000000;
  I_DMDT_STEEL = $00000001;
  I_DMDT_ALUMINIUM = $00000002;
  I_DMDT_WOOD = $00000003;

// Constants for enum IRDimMatDefValType
type
  IRDimMatDefValType = TOleEnum;
const
  I_DMDVT_CS = $00000001;
  I_DMDVT_E = $00000002;
  I_DMDVT_G = $00000003;
  I_DMDVT_RE = $00000004;
  I_DMDVT_RE_AX_COMR = $00000005;
  I_DMDVT_NU = $00000006;
  I_DMDVT_FU = $00000007;
  I_DMDVT_LX = $00000008;
  I_DMDVT_RO = $00000009;
  I_DMDVT_RT = $0000000A;
  I_DMDVT_E_5 = $0000000B;
  I_DMDVT_TRANS = $0000000C;
  I_DMDVT_PN_E_TRANS = $0000000D;
  I_DMDVT_PN_E_ADITIONAL = $0000000E;
  I_DMDVT_RE_BENDING = $0000000F;
  I_DMDVT_RE_AX_TENS = $00000010;
  I_DMDVT_RE_TR_TENS = $00000011;
  I_DMDVT_RE_TR_COMPR = $00000012;
  I_DMDVT_RE_SHEAR = $00000013;
  I_DMDVT_DAMPCOEF = $00000014;

// Constants for enum IRDimMatDefLongExValType
type
  IRDimMatDefLongExValType = TOleEnum;
const
  I_DMDLEVT_TIMB_TYPE = $00000001;
  I_DMDLEVT_CATEGORY = $00000002;
  I_DMDLEVT_NATURE = $00000003;

// Constants for enum IRDimMatDefDblExValType
type
  IRDimMatDefDblExValType = TOleEnum;
const
  I_DMDDEVT_RETRAIT = $00000004;
  I_DMDDEVT_HUMIDITY = $00000005;

// Constants for enum IRDimProfDefType
type
  IRDimProfDefType = TOleEnum;
const
  I_DPDT_NONE = $00000000;
  I_DPDT_CAE = $00000001;
  I_DPDT_CAEP = $00000002;
  I_DPDT_CAI = $00000003;
  I_DPDT_CAIP = $00000004;
  I_DPDT_DCEC = $00000005;
  I_DPDT_DCED = $00000006;
  I_DPDT_DCEP = $00000007;
  I_DPDT_DCIG = $00000008;
  I_DPDT_DCIP = $00000009;
  I_DPDT_HEA = $0000000A;
  I_DPDT_HEAA = $0000000B;
  I_DPDT_HEB = $0000000C;
  I_DPDT_HEC = $0000000D;
  I_DPDT_HEM = $0000000E;
  I_DPDT_HER = $0000000F;
  I_DPDT_HHEA = $00000010;
  I_DPDT_HHEB = $00000011;
  I_DPDT_HHEM = $00000012;
  I_DPDT_IIPE = $00000013;
  I_DPDT_IPE = $00000014;
  I_DPDT_IPEA = $00000015;
  I_DPDT_IPEO = $00000016;
  I_DPDT_IPER = $00000017;
  I_DPDT_IPEV = $00000018;
  I_DPDT_IPN = $00000019;
  I_DPDT_MHEA = $0000001A;
  I_DPDT_MHEB = $0000001B;
  I_DPDT_MHEM = $0000001C;
  I_DPDT_MIPE = $0000001D;
  I_DPDT_PRS = $0000001E;
  I_DPDT_TCAR = $0000001F;
  I_DPDT_TEAE = $00000020;
  I_DPDT_TEAI = $00000021;
  I_DPDT_THEX = $00000022;
  I_DPDT_TREC = $00000023;
  I_DPDT_TRON = $00000024;
  I_DPDT_UAP = $00000025;
  I_DPDT_UPN = $00000026;
  I_DPDT_UUAP = $00000027;
  I_DPDT_UUPN = $00000028;
  I_DPDT_OSIE = $00000029;
  I_DPDT_CAISSON = $0000002A;
  I_DPDT_RECT = $0000002B;
  I_DPDT_DRECT = $0000002C;
  I_DPDT_TUBE = $0000002D;
  I_DPDT_ISYM = $0000002E;
  I_DPDT_INSYM = $0000002F;
  I_DPDT_TUSER = $00000030;
  I_DPDT_CUSER = $00000031;
  I_DPDT_FRTG = $00000032;
  I_DPDT_CROSS = $00000033;
  I_DPDT_UPAF = $00000034;
  I_DPDT_RECS = $00000035;
  I_DPDT_CIRC = $00000036;
  I_DPDT_X = $00000037;
  I_DPDT_WCIRC = $00000038;
  I_DPDT_CCL = $00000039;
  I_DPDT_URND = $0000003A;
  I_DPDT_TRND = $0000003B;
  I_DPDT_UCIRC = $0000003C;
  I_DPDT_UBOX2 = $0000003D;
  I_DPDT_TPOLY = $0000003E;
  I_DPDT_2CFACE = $0000003F;
  I_DPDT_2CBACK = $00000040;
  I_DPDT_2I = $00000041;
  I_DPDT_CI = $00000042;
  I_DPDT_2LI = $00000043;
  I_DPDT_4LFACE = $00000044;
  I_DPDT_4LBACK = $00000045;
  I_DPDT_2LSHOR = $00000046;
  I_DPDT_2LLONG = $00000047;
  I_DPDT_2LCROS = $00000048;
  I_DPDT_2LFSHR = $00000049;
  I_DPDT_2LFLNG = $0000004A;
  I_DPDT_CIBACK = $0000004B;
  I_DPDT_2CFACE_W = $0000004C;
  I_DPDT_2CBACK_W = $0000004D;
  I_DPDT_2I_W = $0000004E;
  I_DPDT_CI_W = $0000004F;
  I_DPDT_2LI_W = $00000050;
  I_DPDT_4LFACE_W = $00000051;
  I_DPDT_4LBACK_W = $00000052;
  I_DPDT_2LSHOR_W = $00000053;
  I_DPDT_2LLONG_W = $00000054;
  I_DPDT_2LCROS_W = $00000055;
  I_DPDT_2LFSHR_W = $00000056;
  I_DPDT_2LFLNG_W = $00000057;
  I_DPDT_CIBACK_W = $00000058;
  I_DPDT_COLD_SIGMA1 = $00000059;
  I_DPDT_COLD_SIGMA2 = $0000005A;
  I_DPDT_COLD_ZED1 = $0000005B;
  I_DPDT_COLD_U = $0000005C;
  I_DPDT_COLD_CE1 = $0000005D;
  I_DPDT_COLD_ANGL = $0000005E;
  I_DPDT_COLD_OMEGA = $0000005F;
  I_DPDT_COLD_S01 = $00000060;
  I_DPDT_COLD_RIVE1 = $00000061;
  I_DPDT_COLD_CEEPLUS = $00000062;
  I_DPDT_COLD_ZEDROT = $00000063;
  I_DPDT_COLD_SIGMA = $00000064;
  I_DPDT_COLD_ZET = $00000065;
  I_DPDT_COLD_L_LIPS = $00000066;
  I_DPDT_COLD_ZETROT = $00000067;

// Constants for enum IRDimProfDefItemType
type
  IRDimProfDefItemType = TOleEnum;
const
  I_DPDIT_STANDARD = $00000001;
  I_DPDIT_VAR_IN_POINT = $00000002;
  I_DPDIT_VAR_MIDDLE = $00000003;
  I_DPDIT_VAR_BEGEND = $00000004;
  I_DPDIT_VAR_MIN = $00000004;
  I_DPDIT_VAR_MAX = $00000005;
  I_DPDIT_CMPND_LEFT = $00000006;
  I_DPDIT_CMPND_RIGHT = $00000007;

// Constants for enum IRDimProfDefValType
type
  IRDimProfDefValType = TOleEnum;
const
  I_DPDVT_H = $00000001;
  I_DPDVT_HW = $00000002;
  I_DPDVT_HD = $00000003;
  I_DPDVT_B = $00000004;
  I_DPDVT_B2 = $00000005;
  I_DPDVT_BF = $00000006;
  I_DPDVT_BF2 = $00000007;
  I_DPDVT_BD = $00000008;
  I_DPDVT_EA = $00000009;
  I_DPDVT_ES = $0000000A;
  I_DPDVT_EA2 = $0000000B;
  I_DPDVT_ES2 = $0000000C;
  I_DPDVT_DIS = $0000000D;
  I_DPDVT_R = $0000000E;
  I_DPDVT_R2 = $0000000F;
  I_DPDVT_VZ = $00000010;
  I_DPDVT_VPZ = $00000011;
  I_DPDVT_VY = $00000012;
  I_DPDVT_VPY = $00000013;
  I_DPDVT_I = $00000014;
  I_DPDVT_IY = $00000015;
  I_DPDVT_IZ = $00000016;
  I_DPDVT_S = $00000017;
  I_DPDVT_SY = $00000018;
  I_DPDVT_SZ = $00000019;
  I_DPDVT_MSY = $0000001A;
  I_DPDVT_MSZ = $0000001B;
  I_DPDVT_MASSE = $0000001C;
  I_DPDVT_H_BEGIN = $0000001D;
  I_DPDVT_H_END = $0000001E;
  I_DPDVT_N = $0000001F;
  I_DPDVT_PL1 = $00000020;
  I_DPDVT_PL2 = $00000021;
  I_DPDVT_PL3 = $00000022;
  I_DPDVT_PL4 = $00000023;
  I_DPDVT_TH1 = $00000024;
  I_DPDVT_TH2 = $00000025;
  I_DPDVT_TH3 = $00000026;
  I_DPDVT_TH4 = $00000027;

// Constants for enum IRDimEffDefParamType
type
  IRDimEffDefParamType = TOleEnum;
const
  I_DEDPT_ACC = $00000001;
  I_DEDPT_ELEM_NO = $00000002;
  I_DEDPT_MEMB_NO = $00000003;
  I_DEDPT_CASE_NO = $00000004;
  I_DEDPT_COMP_NO = $00000005;
  I_DEDPT_POINTS_NUM = $00000006;
  I_DEDPT_POINT_NO = $00000007;
  I_DEDPT_LOADCLASS = $00000008;
  I_DEDPT_MEMB_USER_NO = $00000009;
  I_DEDPT_CASE_USER_NO = $0000000A;
  I_DEDPT_SEISMIC = $0000000B;

// Constants for enum IRDimEffDefDirType
type
  IRDimEffDefDirType = TOleEnum;
const
  I_DEDDT_Y = $00000001;
  I_DEDDT_Z = $00000002;

// Constants for enum IRDimEffDefIntPsType
type
  IRDimEffDefIntPsType = TOleEnum;
const
  I_DEDIPT_BUCKLING_Y = $00000001;
  I_DEDIPT_BUCKLING_Z = $00000002;
  I_DEDIPT_LBUCKLING_U = $00000003;
  I_DEDIPT_LBUCKLING_L = $00000004;
  I_DEDIPT_BUCKLING_Y_IP_Z = $00000005;
  I_DEDIPT_BUCKLING_Z_IP_Y = $00000006;

// Constants for enum IRDimEffDefExtValType
type
  IRDimEffDefExtValType = TOleEnum;
const
  I_DEDEVT_M_1P3L = $00000000;
  I_DEDEVT_RNG_M1 = $00000001;
  I_DEDEVT_RNG_M2 = $00000002;
  I_DEDEVT_RNG_M12 = $00000003;
  I_DEDEVT_RNG_MP_MAX = $00000004;
  I_DEDEVT_RNG_MN_MAX = $00000005;
  I_DEDEVT_RNG_M_MID = $00000006;
  I_DEDEVT_RNG_M_1P4L = $00000007;
  I_DEDEVT_RNG_M_1P3L = $00000008;
  I_DEDEVT_RNG_M_3P4L = $00000009;
  I_DEDEVT_N1 = $0000000A;
  I_DEDEVT_N2 = $0000000B;
  I_DEDEVT_N_MID = $0000000C;

// Constants for enum IRDimGrpResCurrProf
type
  IRDimGrpResCurrProf = TOleEnum;
const
  I_DGRCP_PREVIOUS = $00000001;
  I_DGRCP_GOVERNING = $00000002;
  I_DGRCP_NEXT = $00000003;

// Constants for enum IRDimMembResCalcType
type
  IRDimMembResCalcType = TOleEnum;
const
  I_DMRCT_ULTIMATE = $00000000;
  I_DMRCT_SERVICE = $00000001;
  I_DMRCT_DETAILED = $00000002;

// Constants for enum IRDimMembResUltimateValueType
type
  IRDimMembResUltimateValueType = TOleEnum;
const
  I_DMRVT_SLEND_Y = $00000000;
  I_DMRVT_SLEND_Z = $00000001;
  I_DMRVT_RATIO = $00000002;
  I_DMRVT_EFFRATIO = $00000003;

// Constants for enum IRDimMembResServiceType
type
  IRDimMembResServiceType = TOleEnum;
const
  I_DMRST_DEFL_Y = $00000000;
  I_DMRST_DEFL_Z = $00000001;
  I_DMRST_DISP_X = $00000002;
  I_DMRST_DISP_Y = $00000003;

// Constants for enum IRDimMembResWndType
type
  IRDimMembResWndType = TOleEnum;
const
  I_DMRWT_ULTIMATE_WND = $00000000;
  I_DMRWT_SERVICE_WND = $00000001;
  I_DMRWT_DETAILED_WND = $00000002;

// Constants for enum IRDimMembResTableDefType
type
  IRDimMembResTableDefType = TOleEnum;
const
  I_DMRTDT_DEFSECT_PROFILE = $00000001;
  I_DMRTDT_DEFSECT_MATERIAL = $00000002;

// Constants for enum IRDimMembResTableComp
type
  IRDimMembResTableComp = TOleEnum;
const
  I_DMRTC_NAME = $00000001;
  I_DMRTC_VALUE = $00000002;
  I_DMRTC_UNIT = $00000003;
  I_DMRTC_DESCRIPTION = $00000004;
  I_DMRTC_PARAGRAPH = $00000005;

// Constants for enum IRDimMembResTableLineType
type
  IRDimMembResTableLineType = TOleEnum;
const
  I_DMRTLT_PRINTCAPTION = $00000000;
  I_DMRTLT_CAPTION = $00000001;
  I_DMRTLT_SUBCAPTION = $00000002;
  I_DMRTLT_1PARAM = $00000003;
  I_DMRTLT_4HEADER = $00000004;
  I_DMRTLT_5HEADER = $00000005;
  I_DMRTLT_4PARAM = $00000006;
  I_DMRTLT_5PARAM = $00000007;

// Constants for enum IRDimMembCalcMatStrengthCode
type
  IRDimMembCalcMatStrengthCode = TOleEnum;
const
  I_DMCMSC_CHARAC = $00000001;
  I_DMCMSC_DESIGN = $00000002;

// Constants for enum IRDimCalcStateFlagType
type
  IRDimCalcStateFlagType = TOleEnum;
const
  I_DCSFT_CHECKSLEND = $00000001;
  I_DCSFT_POINTMIDDLE = $00000002;
  I_DCSFT_FIRE = $00000003;

// Constants for enum IRDimCalcStateCalcType
type
  IRDimCalcStateCalcType = TOleEnum;
const
  I_DCSPV_MANUAL_VERIF = $00000001;
  I_DCSPV_MEMBERS_VERIF = $00000002;
  I_DCSPV_GROUP_VERIF = $00000003;
  I_DCSPV_DIMENSIONING = $00000004;
  I_DCSPV_OPTIMIZATION = $00000005;

// Constants for enum IRDimCalcStateValueType
type
  IRDimCalcStateValueType = TOleEnum;
const
  I_DCSVT_MAXSLEND = $00000001;
  I_DCSVT_EFFRATIO = $00000002;
  I_DCSVT_BUCKCOEFF_Y = $00000003;
  I_DCSVT_BUCKCOEFF_Z = $00000004;

// Constants for enum IRDimMembCalcFinishType
type
  IRDimMembCalcFinishType = TOleEnum;
const
  I_DMCFT_ULTIMATE = $00000001;
  I_DMCFT_SERVICE = $00000002;
  I_DMCFT_FINISH_ALL = $00000003;

// Constants for enum IRDimMembCalcMessageType
type
  IRDimMembCalcMessageType = TOleEnum;
const
  I_DMCMT_MESSAGE = $00000001;
  I_DMCMT_ERROR = $00000002;

// Constants for enum IRDimManParRetValue
type
  IRDimManParRetValue = TOleEnum;
const
  I_DMPRV_OK = $00000001;
  I_DMPRV_CANCEL = $00000002;
  I_DMPRV_CALCULATION = $00000003;

// Constants for enum IRDimClientCalcConfDefaultWndType
type
  IRDimClientCalcConfDefaultWndType = TOleEnum;
const
  I_DCCCDWT_BASIC_TYPE = $00000001;
  I_DCCCDWT_WITH_DURATION_OPT_TYPE = $00000002;

// Constants for enum IRDimAdjoinServiceEditWndType
type
  IRDimAdjoinServiceEditWndType = TOleEnum;
const
  I_DASEWT_WNDTYPE_1MEMBER = $00000001;
  I_DASEWT_WNDTYPE_1MEMBER_ES2 = $00000002;
  I_DASEWT_WNDTYPE_1MEMBER_ES3 = $00000003;
  I_DASEWT_WNDTYPE_3MEMBER = $00000004;
  I_DASEWT_WNDTYPE_3MEMBER_ES2 = $00000005;
  I_DASEWT_WNDTYPE_3MEMBER_ES3 = $00000006;
  I_DASEWT_WNDTYPE_3MEMBER_WITHFRAMEPAR = $00000007;
  I_DASEWT_WNDTYPE_6MEMBER = $00000008;
  I_DASEWT_WNDTYPE_6MEMBER_ES2 = $00000009;
  I_DASEWT_WNDTYPE_6MEMBER_ES3 = $0000000A;
  I_DASEWT_WNDTYPE_6MEMBER_WITHFRAMEPAR = $0000000B;

// Constants for enum IRDimBuckDiagramANS
type
  IRDimBuckDiagramANS = TOleEnum;
const
  I_DBD_ANS_USER_DEFINED = $FFFFFFFF;
  I_DBD_ANS_PINNED_PINNED_1_0 = $00000000;
  I_DBD_ANS_PINNED_STIFF_0_7 = $00000001;
  I_DBD_ANS_STIFF_DISP_1_0 = $00000002;
  I_DBD_ANS_STIFF_STIFF_0_5 = $00000003;
  I_DBD_ANS_CANTILEVER_2_0 = $00000004;
  I_DBD_ANS_PINNED_DISP_2_0 = $00000005;
  I_DBD_ANS_PINNED_ADJBAR_3 = $00000006;
  I_DBD_ANS_STIFF_ADJBAR_3 = $00000007;
  I_DBD_ANS_INTERN_ADJBAR_6 = $00000008;
  I_DBD_ANS_TRUSS_CHORD_0_9 = $00000009;
  I_DBD_ANS_TRUSS_DIAGONAL_0_8 = $0000000A;
  I_DBD_ANS_NO = $0000000B;
  I_DBD_ANS_AUTO_ADJBAR = $0000000C;
  I_DBD_ANS_INTERNAL_BRACINGS = $0000000D;

// Constants for enum IRDimLatBuckCoefDiagramANS
type
  IRDimLatBuckCoefDiagramANS = TOleEnum;
const
  I_DLBCD_ANS_CANTILEVER_2_0 = $00000000;
  I_DLBCD_ANS_PINNED_PINNED_1_0 = $00000001;
  I_DLBCD_ANS_STIFF_STIFF_0_5 = $00000002;
  I_DLBCD_ANS_USER_DEFINED = $00000003;
  I_DLBCD_ANS_NO = $00000004;
  I_DLBCD_ANS_INTERNAL_BRACINGS = $00000005;

// Constants for enum IRDimLatBuckCbCoeffDiagramANS
type
  IRDimLatBuckCbCoeffDiagramANS = TOleEnum;
const
  I_DLBCCD_ANS_COEFF_1_0 = $00000000;
  I_DLBCCD_ANS_END_MOMENTS = $00000001;
  I_DLBCCD_ANS_CANTILEVER = $00000002;

// Constants for enum IRDimSeismicSystemANS
type
  IRDimSeismicSystemANS = TOleEnum;
const
  I_DSS_SPECIAL_MOMENT_FRAMES = $00000000;
  I_DSS_INTERMEDIATE_MOMENT_FRAMES = $00000001;
  I_DSS_ORDINARY_MOMENT_FRAMES = $00000002;
  I_DSS_SPECIAL_TRUSS_MOMENT_FRAMES = $00000003;
  I_DSS_SPECIAL_CONCENTRICALLY_BRACED_FRAMES = $00000004;
  I_DSS_ORDINARY_CONCENTRICALLY_BRACED_FRAMES = $00000005;
  I_DSS_ECCENTRICALLY_BRACED_FRAMES = $00000006;
  I_DSS_BUCKLING_RESTRAINED_BRACED_FRAMES = $00000007;

// Constants for enum IRDimSeismicElementTypeANS
type
  IRDimSeismicElementTypeANS = TOleEnum;
const
  I_DSET_BEAM = $00000000;
  I_DSET_COLUMN = $00000001;
  I_DSET_CHORD = $00000002;
  I_DSET_BRACING = $00000003;
  I_DSET_LINK = $00000004;
  I_DSET_CORE = $00000005;
  I_DSET_OTHER = $00000006;
  I_DSET_BRACING_V = $00000007;
  I_DSET_BEAM_V = $00000008;

// Constants for enum IRDimBuckDiagramCM66
type
  IRDimBuckDiagramCM66 = TOleEnum;
const
  I_DBD_CM66_USER_DEFINED = $FFFFFFFF;
  I_DBD_CM66_PINNED_PINNED_1_0 = $00000000;
  I_DBD_CM66_STIFF_STIFF_0_5 = $00000001;
  I_DBD_CM66_PINNED_STIFF_0_7 = $00000002;
  I_DBD_CM66_CANTILEVER_2_0 = $00000003;
  I_DBD_CM66_PINNED_ADJBAR_1 = $00000004;
  I_DBD_CM66_STIFF_ADJBAR_1 = $00000005;
  I_DBD_CM66_PINNED_ADJBAR_3 = $00000006;
  I_DBD_CM66_STIFF_ADJBAR_3 = $00000007;
  I_DBD_CM66_INTERN_ADJBAR_6 = $00000008;
  I_DBD_CM66_TRUSS_CHORD_0_9 = $00000009;
  I_DBD_CM66_TRUSS_DIAGONAL_0_8 = $0000000A;
  I_DBD_CM66_NO = $0000000B;
  I_DBD_CM66_AUTO = $0000000C;
  I_DBD_CM66_INTERNAL_BRACINGS = $0000000D;

// Constants for enum IRDimLaterBuckTypeCM66
type
  IRDimLaterBuckTypeCM66 = TOleEnum;
const
  I_DLBT_CM66_SYMMETR_LOADED = $00000000;
  I_DLBT_CM66_MOMENTS_AT_ENDS = $00000001;
  I_DLBT_CM66_CANTILEVER = $00000002;
  I_DLBT_CM66_NO = $00000003;

// Constants for enum IRDimLoadLevelCM66
type
  IRDimLoadLevelCM66 = TOleEnum;
const
  I_DLL_CM66_UPP_EDGE_LOADED = $00000000;
  I_DLL_CM66_UPP_SECT_PAR_LOADED = $00000001;
  I_DLL_CM66_CENTER_LOADED = $00000002;
  I_DLL_CM66_LOW_SEC_PART_LOADED = $00000003;
  I_DLL_CM66_LOW_EDGE_LOADED = $00000004;

// Constants for enum IRDimLatBuckCoefDiagramCM66
type
  IRDimLatBuckCoefDiagramCM66 = TOleEnum;
const
  I_DLBCD_CM66_CANTILEVER_2_0 = $00000000;
  I_DLBCD_CM66_PINNED_PINNED_1_0 = $00000001;
  I_DLBCD_CM66_STIFF_STIFF_0_5 = $00000002;
  I_DLBCD_CM66_USER_DEFINED = $00000003;
  I_DLBCD_CM66_NO = $00000004;
  I_DLBCD_CM66_INTERNAL_BRACINGS = $00000005;

// Constants for enum IRDimLoadTypeCM66
type
  IRDimLoadTypeCM66 = TOleEnum;
const
  I_DLT_CM66_UNIFORM_LOAD = $00000000;
  I_DLT_CM66_END_MOMENTS_LOAD = $00000001;
  I_DLT_CM66_MID_SPAN_FORCE_LOAD = $00000002;
  I_DLT_CM66_NO_MID_SPAN_FORCE_LOAD = $00000003;
  I_DLT_CM66_USR_DEF_MOM_MC = $00000004;

// Constants for enum IRDimAmplificationCM66
type
  IRDimAmplificationCM66 = TOleEnum;
const
  I_DLT_CM66_AMPLIFICATION_COEFF_K = $00000000;
  I_DLT_CM66_AMPLIFICATION_COEFF_K1 = $00000001;

// Constants for enum IRDimBuckDiagramBS59
type
  IRDimBuckDiagramBS59 = TOleEnum;
const
  I_DBDB_USER_DEFINED = $000003E8;
  I_DBDB_PINNED_PINNED_1_0 = $00000000;
  I_DBDB_STIFF_PINNED_0_85 = $00000001;
  I_DBDB_STIFF_DISP_1_2 = $00000002;
  I_DBDB_STIFF_STIFF_0_7 = $00000003;
  I_DBDB_STIFF_STIFF_1_5 = $00000004;
  I_DBDB_STIFF_STIFF_2_0 = $00000005;
  I_DBDB_PINNED_ADJBAR_3 = $00000006;
  I_DBDB_STIFF_ADJBAR_3 = $00000007;
  I_DBDB_INTERN_ADJBAR_6 = $00000008;
  I_DBDB_TRUSS_CHORD_0_9 = $00000009;
  I_DBDB_TRUSS_DIAGONAL_0_8 = $0000000A;
  I_DBDB_NO = $0000000B;
  I_DBDB_AUTO = $0000000C;
  I_DBDB_INTERNAL_BRACINGS = $0000000D;

// Constants for enum IRDimLaterBuckTypeBS59
type
  IRDimLaterBuckTypeBS59 = TOleEnum;
const
  I_DLBTB_ELEM_LOADED_SYMMETRICALLY = $00000000;
  I_DLBTB_CANTILEVER = $00000001;
  I_DLBTB_NO = $00000002;

// Constants for enum IRDimLatBuckLengthCoefDiagramBS59
type
  IRDimLatBuckLengthCoefDiagramBS59 = TOleEnum;
const
  I_DLBLCDB_NORMAL_1_2_L_2_D = $00000000;
  I_DLBLCDB_NORMAL_1_0_L_2_D = $00000001;
  I_DLBLCDB_NORMAL_1_0_L = $00000002;
  I_DLBLCDB_NORMAL_0_85_L = $00000003;
  I_DLBLCDB_NORMAL_1_7_L = $00000004;
  I_DLBLCDB_DESTAB_FREE_1_4_L_2_D = $00000005;
  I_DLBLCDB_DESTAB_1_4_L_2_D = $00000006;
  I_DLBLCDB_DESTAB_1_2_L = $00000007;
  I_DLBLCDB_DESTAB_1_0_L = $00000008;
  I_DLBLCDB_DESTAB_0_85_L = $00000009;
  I_DLBLCDB_TYPE1_NORMAL_3_0_L = $00000000;
  I_DLBLCDB_TYPE1_NORMAL_2_7_L = $00000001;
  I_DLBLCDB_TYPE1_NORMAL_2_4_L = $00000002;
  I_DLBLCDB_TYPE1_NORMAL_2_1_L = $00000003;
  I_DLBLCDB_TYPE2_NORMAL_1_0_L = $00000004;
  I_DLBLCDB_TYPE2_NORMAL_0_9_L = $00000005;
  I_DLBLCDB_TYPE2_NORMAL_0_8_L = $00000006;
  I_DLBLCDB_TYPE2_NORMAL_0_7_L = $00000007;
  I_DLBLCDB_TYPE3_NORMAL_0_8_L = $00000008;
  I_DLBLCDB_TYPE3_NORMAL_0_7_L = $00000009;
  I_DLBLCDB_TYPE3_NORMAL_0_6_L = $0000000A;
  I_DLBLCDB_TYPE3_NORMAL_0_5_L = $0000000B;
  I_DLBLCDB_TYPE1_DESTAB_FREE_7_5_L = $0000000C;
  I_DLBLCDB_TYPE1_DESTAB_7_5_L = $0000000D;
  I_DLBLCDB_TYPE1_DESTAB_4_5_L = $0000000E;
  I_DLBLCDB_TYPE1_DESTAB_3_6_L = $0000000F;
  I_DLBLCDB_TYPE2_DESTAB_FREE_2_5_L = $00000010;
  I_DLBLCDB_TYPE2_DESTAB_2_5_L = $00000011;
  I_DLBLCDB_TYPE2_DESTAB_1_5_L = $00000012;
  I_DLBLCDB_TYPE2_DESTAB_1_2_L = $00000013;
  I_DLBLCDB_TYPE3_DESTAB_FREE_1_4_L = $00000014;
  I_DLBLCDB_TYPE3_DESTAB_1_4_L = $00000015;
  I_DLBLCDB_TYPE3_DESTAB_0_6_L = $00000016;
  I_DLBLCDB_TYPE3_DESTAB_0_5_L = $00000017;
  I_DLBLCDB_INTERMEDIATE_RESTRAINTS = $00000018;
  I_DLBLCDB_NO = $00000019;
  I_DLBLCDB_INTERNAL_BRACINGS = $0000001A;

// Constants for enum IRDimSlendCorrectionDiagramBS59
type
  IRDimSlendCorrectionDiagramBS59 = TOleEnum;
const
  I_DSCDB_USER_DEFINED = $000003E8;
  I_DSCDB_1_0 = $00000000;
  I_DSCDB_UNIFORM_MOMENT = $00000001;
  I_DSCDB_CONCENTRATED_MOMENT = $00000002;
  I_DSCDB_UNIFORM_LOADS = $00000003;

// Constants for enum IRDimEqUniformMomentDiagramBS59
type
  IRDimEqUniformMomentDiagramBS59 = TOleEnum;
const
  I_DEUMDB_USER_DEFINED = $000003E8;
  I_DEUMDB_1_0 = $00000000;
  I_DEUMDB_UNIFORM_MOMENT = $00000001;
  I_DEUMDB_UNIFORM_LOADS = $00000002;

// Constants for enum IRDimBuckDiagramBS59_2000
type
  IRDimBuckDiagramBS59_2000 = TOleEnum;
const
  I_DBDB2_USER_DEFINED = $FFFFFFFF;
  I_DBDB2_PINNED_PINNED_1_0 = $00000000;
  I_DBDB2_STIFF_PINNED_0_85 = $00000001;
  I_DBDB2_STIFF_DISP_1_2 = $00000002;
  I_DBDB2_STIFF_STIFF_0_7 = $00000003;
  I_DBDB2_PINNED_ADJBAR_3 = $00000004;
  I_DBDB2_STIFF_ADJBAR_3 = $00000005;
  I_DBDB2_INTERN_ADJBAR_6 = $00000006;
  I_DBDB2_TRUSS_CHORD_0_9 = $00000007;
  I_DBDB2_TRUSS_DIAGONAL_0_8 = $00000008;
  I_DBDB2_NO = $00000009;
  I_DBDB2_AUTO = $0000000A;
  I_DBDB2_INTERNAL_BRACINGS = $0000000B;

// Constants for enum IRDimBuckCurveBS59_2000
type
  IRDimBuckCurveBS59_2000 = TOleEnum;
const
  I_DBCB2_AUTO = $00000000;
  I_DBCB2_A = $00000001;
  I_DBCB2_B = $00000002;
  I_DBCB2_C = $00000002;
  I_DBCB2_D = $00000002;

// Constants for enum IRDimLaterBuckTypeBS59_2000
type
  IRDimLaterBuckTypeBS59_2000 = TOleEnum;
const
  I_DLBTB2_ELEM_LOADED_SYMMETRICALLY = $00000000;
  I_DLBTB2_CANTILEVER = $00000001;
  I_DLBTB2_NO = $00000002;

// Constants for enum IRDimLatBuckLengthCoefDiagramBS59_2000
type
  IRDimLatBuckLengthCoefDiagramBS59_2000 = TOleEnum;
const
  I_DLBLCDB2_NORMAL_1_2_L_2_D = $00000000;
  I_DLBLCDB2_NORMAL_1_0_L_2_D = $00000001;
  I_DLBLCDB2_NORMAL_1_0_L = $00000002;
  I_DLBLCDB2_NORMAL_0_85_L = $00000003;
  I_DLBLCDB2_NORMAL_0_8_L = $00000004;
  I_DLBLCDB2_NORMAL_0_75_L = $00000005;
  I_DLBLCDB2_NORMAL_1_7_L = $00000006;
  I_DLBLCDB2_DESTAB_1_4_L_2_D = $00000010;
  I_DLBLCDB2_DESTAB_1_2_L_2_D = $00000011;
  I_DLBLCDB2_DESTAB_1_2_L = $00000012;
  I_DLBLCDB2_DESTAB_1_0_L = $00000013;
  I_DLBLCDB2_DESTAB_0_95_L = $00000014;
  I_DLBLCDB2_DESTAB_0_9_L = $00000015;
  I_DLBLCDB2_DESTAB_0_85_L = $00000016;
  I_DLBLCDB2_TYPE1_NORMAL_3_0_L = $00000000;
  I_DLBLCDB2_TYPE1_NORMAL_2_7_L = $00000001;
  I_DLBLCDB2_TYPE1_NORMAL_2_4_L = $00000002;
  I_DLBLCDB2_TYPE1_NORMAL_2_1_L = $00000003;
  I_DLBLCDB2_TYPE2_NORMAL_2_0_L = $00000004;
  I_DLBLCDB2_TYPE2_NORMAL_1_8_L = $00000005;
  I_DLBLCDB2_TYPE2_NORMAL_1_6_L = $00000006;
  I_DLBLCDB2_TYPE2_NORMAL_1_4_L = $00000007;
  I_DLBLCDB2_TYPE3_NORMAL_1_0_L = $00000008;
  I_DLBLCDB2_TYPE3_NORMAL_0_9_L = $00000009;
  I_DLBLCDB2_TYPE3_NORMAL_0_8_L = $0000000A;
  I_DLBLCDB2_TYPE3_NORMAL_0_7_L = $0000000B;
  I_DLBLCDB2_TYPE4_NORMAL_0_8_L = $0000000C;
  I_DLBLCDB2_TYPE4_NORMAL_0_7_L = $0000000D;
  I_DLBLCDB2_TYPE4_NORMAL_0_6_L = $0000000E;
  I_DLBLCDB2_TYPE4_NORMAL_0_5_L = $0000000F;
  I_DLBLCDB2_TYPE1_DESTAB_FREE_7_5_L = $00000010;
  I_DLBLCDB2_TYPE1_DESTAB_7_5_L = $00000011;
  I_DLBLCDB2_TYPE1_DESTAB_4_5_L = $00000012;
  I_DLBLCDB2_TYPE1_DESTAB_3_6_L = $00000013;
  I_DLBLCDB2_TYPE2_DESTAB_FREE_5_0_L = $00000014;
  I_DLBLCDB2_TYPE2_DESTAB_5_0_L = $00000015;
  I_DLBLCDB2_TYPE2_DESTAB_3_0_L = $00000016;
  I_DLBLCDB2_TYPE2_DESTAB_2_4_L = $00000017;
  I_DLBLCDB2_TYPE3_DESTAB_FREE_2_5_L = $00000018;
  I_DLBLCDB2_TYPE3_DESTAB_2_5_L = $00000019;
  I_DLBLCDB2_TYPE3_DESTAB_1_5_L = $0000001A;
  I_DLBLCDB2_TYPE3_DESTAB_1_2_L = $0000001B;
  I_DLBLCDB2_TYPE4_DESTAB_FREE_1_4_L = $0000001C;
  I_DLBLCDB2_TYPE4_DESTAB_1_4_L = $0000001D;
  I_DLBLCDB2_TYPE4_DESTAB_0_6_L = $0000001E;
  I_DLBLCDB2_TYPE4_DESTAB_0_5_L = $0000001F;
  I_DLBLCDB2_INTERMEDIATE_RESTRAINTS = $00000020;
  I_DLBLCDB2_NO = $00000021;
  I_DLBLCDB2_INTERNAL_BRACINGS = $00000022;

// Constants for enum IRDimCoefOfMomentDistrDiagramBS59_2000
type
  IRDimCoefOfMomentDistrDiagramBS59_2000 = TOleEnum;
const
  I_DCOMDDB2_USER_DEFINED = $FFFFFFFF;
  I_DCOMDDB2_UNIFORM_MOMENT = $00000000;
  I_DCOMDDB2_UNIFORM_LOADS = $00000001;
  I_DCOMDDB2_CONCENTRATED_FORCE_MIDDLE = $00000002;
  I_DCOMDDB2_TWO_CONCENTRATED_FORCES = $00000003;
  I_DCOMDDB2_CONCENTRATED_FORCE_1_PER_3_LENGTH = $00000004;
  I_DCOMDDB2_MOMENTS_AT_ENDS_TRANSVERSAL_LOAD = $00000005;

// Constants for enum IRDimBuckDiagramNS34
type
  IRDimBuckDiagramNS34 = TOleEnum;
const
  I_DBD_NS34_USER_DEFINED = $FFFFFFFF;
  I_DBD_NS34_PINNED_PINNED_1_0 = $00000000;
  I_DBD_NS34_STIFF_STIFF_0_5 = $00000001;
  I_DBD_NS34_PINNED_STIFF_0_7 = $00000002;
  I_DBD_NS34_CANTILEVER_2_0 = $00000003;
  I_DBD_NS34_PINNED_ADJBAR_1 = $00000004;
  I_DBD_NS34_STIFF_ADJBAR_1 = $00000005;
  I_DBD_NS34_PINNED_ADJBAR_3 = $00000006;
  I_DBD_NS34_STIFF_ADJBAR_3 = $00000007;
  I_DBD_NS34_INTERN_ADJBAR_6 = $00000008;
  I_DBD_NS34_TRUSS_CHORD_0_9 = $00000009;
  I_DBD_NS34_TRUSS_DIAGONAL_0_8 = $0000000A;
  I_DBD_NS34_NO = $0000000B;
  I_DBD_NS34_INTERNAL_BRACINGS = $0000000C;

// Constants for enum IRDimLoadLevelNS34
type
  IRDimLoadLevelNS34 = TOleEnum;
const
  I_DLL_NS34_UPP_EDGE_LOADED = $00000000;
  I_DLL_NS34_UPP_SECT_PAR_LOADED = $00000001;
  I_DLL_NS34_CENTER_LOADED = $00000002;
  I_DLL_NS34_LOW_SEC_PART_LOADED = $00000003;
  I_DLL_NS34_LOW_EDGE_LOADED = $00000004;

// Constants for enum IRDimLatBuckCoefDiagramNS34
type
  IRDimLatBuckCoefDiagramNS34 = TOleEnum;
const
  I_DLBCD_NS34_CANTILEVER_2_0 = $00000000;
  I_DLBCD_NS34_PINNED_PINNED_1_0 = $00000001;
  I_DLBCD_NS34_STIFF_STIFF_0_5 = $00000002;
  I_DLBCD_NS34_USER_DEFINED = $00000003;
  I_DLBCD_NS34_NO = $00000004;
  I_DLBCD_NS34_INTERNAL_BRACINGS = $00000005;

// Constants for enum IRDimLoadTypeNS34
type
  IRDimLoadTypeNS34 = TOleEnum;
const
  I_DLT_NS34_UNIFORM_MOMENT = $00000000;
  I_DLT_NS34_UNIFORM_LOAD = $00000001;
  I_DLT_NS34_MID_SPAN_FORCE_LOAD = $00000002;
  I_DLT_NS34_END_MOMENTS_TRANS_LOAD = $00000003;

// Constants for enum IRDimBuckDiagramEC3
type
  IRDimBuckDiagramEC3 = TOleEnum;
const
  I_DBD_EC3_AUTO = $0000000C;
  I_DBD_EC3_CANTILEVER_2_0 = $00000003;
  I_DBD_EC3_INTERN_ADJBAR_6 = $00000008;
  I_DBD_EC3_INTERNAL_BRACINGS = $0000000D;
  I_DBD_EC3_NO = $0000000B;
  I_DBD_EC3_PINNED_ADJBAR_1 = $00000004;
  I_DBD_EC3_PINNED_ADJBAR_3 = $00000006;
  I_DBD_EC3_PINNED_PINNED_1_0 = $00000000;
  I_DBD_EC3_PINNED_STIFF_0_7 = $00000002;
  I_DBD_EC3_STIFF_ADJBAR_1 = $00000005;
  I_DBD_EC3_STIFF_ADJBAR_3 = $00000007;
  I_DBD_EC3_STIFF_STIFF_0_5 = $00000001;
  I_DBD_EC3_TRUSS_CHORD_0_9 = $00000009;
  I_DBD_EC3_TRUSS_DIAGONAL_0_8 = $0000000A;
  I_DBD_EC3_USER_DEFINED = $FFFFFFFF;

// Constants for enum IRDimLoadTypeEC3
type
  IRDimLoadTypeEC3 = TOleEnum;
const
  I_DLT_EC3_UNIFORM_LOAD = $00000000;
  I_DLT_EC3_UNIFORM_MOMENT = $00000001;
  I_DLT_EC3_CONCENTRATED_FORCE = $00000002;
  I_DLT_EC3_MOMENTS_AT_ENDS = $00000003;

// Constants for enum IRDimLoadLevelEC3
type
  IRDimLoadLevelEC3 = TOleEnum;
const
  I_DLL_EC3_UPP_EDGE_LOADED = $00000000;
  I_DLL_EC3_UPP_SECT_PAR_LOADED = $00000001;
  I_DLL_EC3_CENTER_LOADED = $00000002;
  I_DLL_EC3_LOW_SEC_PART_LOADED = $00000003;
  I_DLL_EC3_LOW_EDGE_LOADED = $00000004;

// Constants for enum IRDimLatBuckCoeffDiagramEC3
type
  IRDimLatBuckCoeffDiagramEC3 = TOleEnum;
const
  I_DLBCD_EC3_CANTILEVER_2_0 = $00000000;
  I_DLBCD_EC3_INTERNAL_BRACINGS = $00000005;
  I_DLBCD_EC3_NO = $00000004;
  I_DLBCD_EC3_PINNED_PINNED_1_0 = $00000001;
  I_DLBCD_EC3_STIFF_STIFF_0_5 = $00000002;
  I_DLBCD_EC3_USER_DEFINED = $00000003;

// Constants for enum IRDimLaterBuckTypeEC3
type
  IRDimLaterBuckTypeEC3 = TOleEnum;
const
  I_DLBT_EC3_SYMMETR_LOADED = $00000000;
  I_DLBT_EC3_CANTILEVER = $00000001;
  I_DLBT_EC3_NO = $00000002;

// Constants for enum IRDimYieldStrengthTypeEC3
type
  IRDimYieldStrengthTypeEC3 = TOleEnum;
const
  I_DYST_EC3_BASIC = $00000000;
  I_DYST_EC3_AVERAGE = $00000001;

// Constants for enum IRDimBuckDiagramE32
type
  IRDimBuckDiagramE32 = TOleEnum;
const
  I_DBD_E32_AUTO = $0000000C;
  I_DBD_E32_CANTILEVER_2_0 = $00000003;
  I_DBD_E32_INTERN_ADJBAR_6 = $00000008;
  I_DBD_E32_INTERNAL_BRACINGS = $0000000D;
  I_DBD_E32_NO = $0000000B;
  I_DBD_E32_PINNED_ADJBAR_1 = $00000004;
  I_DBD_E32_PINNED_ADJBAR_3 = $00000006;
  I_DBD_E32_PINNED_PINNED_1_0 = $00000000;
  I_DBD_E32_PINNED_STIFF_0_7 = $00000002;
  I_DBD_E32_STIFF_ADJBAR_1 = $00000005;
  I_DBD_E32_STIFF_ADJBAR_3 = $00000007;
  I_DBD_E32_STIFF_STIFF_0_5 = $00000001;
  I_DBD_E32_TRUSS_CHORD_0_9 = $00000009;
  I_DBD_E32_TRUSS_DIAGONAL_0_8 = $0000000A;
  I_DBD_E32_USER_DEFINED = $FFFFFFFF;

// Constants for enum IRDimBucklingCurveE32
type
  IRDimBucklingCurveE32 = TOleEnum;
const
  I_DBC_E32_CURVE_AUTO = $00000000;
  I_DBC_E32_CURVE_A0 = $00000001;
  I_DBC_E32_CURVE_A = $00000002;
  I_DBC_E32_CURVE_B = $00000003;
  I_DBC_E32_CURVE_C = $00000004;
  I_DBC_E32_CURVE_D = $00000005;

// Constants for enum IRDimLoadTypeE32
type
  IRDimLoadTypeE32 = TOleEnum;
const
  I_DLT_E32_UNIFORM_LOAD = $00000000;
  I_DLT_E32_UNIFORM_MOMENT = $00000001;
  I_DLT_E32_MOMENTS_AT_ENDS = $00000002;
  I_DLT_E32_CONC_FORCE_SUPP_BEAM = $00000003;
  I_DLT_E32_CONC_FORCE_FIXED_BEAM = $00000004;
  I_DLT_E32_2_CONCENTRATED_FORCES = $00000005;

// Constants for enum IRDimLoadLevelE32
type
  IRDimLoadLevelE32 = TOleEnum;
const
  I_DLL_E32_UPP_EDGE_LOADED = $00000000;
  I_DLL_E32_UPP_SECT_PAR_LOADED = $00000001;
  I_DLL_E32_CENTER_LOADED = $00000002;
  I_DLL_E32_LOW_SEC_PART_LOADED = $00000003;
  I_DLL_E32_LOW_EDGE_LOADED = $00000004;

// Constants for enum IRDimLatBuckCoeffDiagramE32
type
  IRDimLatBuckCoeffDiagramE32 = TOleEnum;
const
  I_DLBCD_E32_CANTILEVER_2_0 = $00000000;
  I_DLBCD_E32_INTERNAL_BRACINGS = $00000005;
  I_DLBCD_E32_NO = $00000004;
  I_DLBCD_E32_PINNED_PINNED_1_0 = $00000001;
  I_DLBCD_E32_STIFF_STIFF_0_5 = $00000002;
  I_DLBCD_E32_USER_DEFINED = $00000003;

// Constants for enum IRDimLatBuckMethodTypeE32
type
  IRDimLatBuckMethodTypeE32 = TOleEnum;
const
  I_DLBMT_E32_METHOD_GENERAL = $00000000;
  I_DLBMT_E32_METHOD_DETAILED = $00000001;

// Constants for enum IRDimYieldStrengthTypeE32
type
  IRDimYieldStrengthTypeE32 = TOleEnum;
const
  I_DYST_E32_BASIC = $00000000;
  I_DYST_E32_AVERAGE = $00000001;

// Constants for enum IRDimThinWalledFormingTypeE32
type
  IRDimThinWalledFormingTypeE32 = TOleEnum;
const
  I_DTWFT_E32_ROLLED = $00000000;
  I_DTWFT_E32_OTHERS = $00000001;

// Constants for enum IRDimThinWalledPosOfSheetingE32
type
  IRDimThinWalledPosOfSheetingE32 = TOleEnum;
const
  I_DTWPOS_E32_POSITIVE = $00000000;
  I_DTWPOS_E32_NEGATIVE = $00000001;

// Constants for enum IRDimThinWalledSheetFastenedE32
type
  IRDimThinWalledSheetFastenedE32 = TOleEnum;
const
  I_DTWSF_E32_THROUGH_TROUGH = $00000000;
  I_DTWSF_E32_THROUGH_CREST = $00000001;

// Constants for enum IRDimThinWalledPitchOfFastenersE32
type
  IRDimThinWalledPitchOfFastenersE32 = TOleEnum;
const
  I_DTWPOF_E32_EVERY_CORRUGATION = $00000000;
  I_DTWPOF_E32_EVERY_OTHER_CORRUGATION = $00000001;

// Constants for enum IRDimThinWalledModelForCalculE32
type
  IRDimThinWalledModelForCalculE32 = TOleEnum;
const
  I_DTWMFC_E32_MODEL_1 = $00000000;
  I_DTWMFC_E32_MODEL_2 = $00000001;

// Constants for enum IRDimThinWalledPosOfPurlinsE32
type
  IRDimThinWalledPosOfPurlinsE32 = TOleEnum;
const
  I_DTWPOP_E32_END = $00000000;
  I_DTWPOP_E32_MID = $00000001;

// Constants for enum IRDimFireResistTempCurveE32
type
  IRDimFireResistTempCurveE32 = TOleEnum;
const
  I_DFRTC_E32_STANDARD_ISO_834 = $00000000;
  I_DTWFT_E32_EXTERNAL_FIRE = $00000001;
  I_DTWFT_E32_HYDROCARBON_FIRE = $00000002;
  I_DTWFT_E32_SMOLDERING_FIRE = $00000003;

// Constants for enum IRDimFireResistSteelMembProtE32
type
  IRDimFireResistSteelMembProtE32 = TOleEnum;
const
  I_DFRSMP_E32_UNPROTECTED = $00000000;
  I_DFRSMP_E32_PROTECTED = $00000001;

// Constants for enum IRDimFireResistSectExpositionE32
type
  IRDimFireResistSectExpositionE32 = TOleEnum;
const
  I_DFRSE_E32_4_SIDED = $00000000;
  I_DTWSE_E32_3_SIDED = $00000001;
  I_DTWSE_E32_FLANGE_3_SIDED = $00000002;

// Constants for enum IRDimFireResistEncasementTypeE32
type
  IRDimFireResistEncasementTypeE32 = TOleEnum;
const
  I_DFRET_E32_TYPE_1 = $00000000;
  I_DFRET_E32_TYPE_2 = $00000001;

// Constants for enum IRDimComplexSectChordConnTypeE32
type
  IRDimComplexSectChordConnTypeE32 = TOleEnum;
const
  I_DCSCCT_E32_BATTENS = $00000000;
  I_DCSCCT_E32_LATICE_1 = $00000001;
  I_DCSCCT_E32_LATICE_2 = $00000002;
  I_DCSCCT_E32_LATICE_3 = $00000003;

// Constants for enum IRDimComplexSectDistTypeE32
type
  IRDimComplexSectDistTypeE32 = TOleEnum;
const
  I_DCSDT_E32_BY_NUMBER = $00000000;
  I_DCSDT_E32_BY_SPACING_A = $00000001;

// Constants for enum IRDimComplexSectLaticeTypeE32
type
  IRDimComplexSectLaticeTypeE32 = TOleEnum;
const
  I_DCSLT_E32_TYPE_1 = $00000000;
  I_DCSLT_E32_TYPE_2 = $00000001;

// Constants for enum IRDimBuckDiagramE52
type
  IRDimBuckDiagramE52 = TOleEnum;
const
  I_DBD_E52_USER_DEFINED = $FFFFFFFF;
  I_DBD_E52_PINNED_PINNED_1_0 = $00000000;
  I_DBD_E52_STIFF_STIFF_0_5 = $00000001;
  I_DBD_E52_PINNED_STIFF_0_7 = $00000002;
  I_DBD_E52_CANTILEVER_2_0 = $00000003;
  I_DBD_E52_TRUSS_CHORD_0_9 = $00000004;
  I_DBD_E52_TRUSS_DIAGONAL_0_8 = $00000005;
  I_DBD_E52_NO = $00000006;
  I_DBD_E52_INTERNAL_BRACINGS = $00000007;

// Constants for enum IRDimComplexBattenTypeE52
type
  IRDimComplexBattenTypeE52 = TOleEnum;
const
  I_DCBT_E52_PACKS = $00000000;
  I_DCBT_E52_GUSSETS = $00000001;

// Constants for enum IRDimComplexConnectTypeE52
type
  IRDimComplexConnectTypeE52 = TOleEnum;
const
  I_DCCT_E52_GLUED = $00000000;
  I_DCCT_E52_NAILS = $00000001;
  I_DCCT_E52_BOLTS = $00000002;

// Constants for enum IRDimLaterBuckTypeE52
type
  IRDimLaterBuckTypeE52 = TOleEnum;
const
  I_DLBT_E52_BEAM_WITH_PINNED_SUPP = $00000000;
  I_DLBT_E52_BEAM_WITH_FIXED_SUPP = $00000001;
  I_DLBT_E52_CANTILEVER = $00000002;
  I_DLBT_E52_NO = $00000003;

// Constants for enum IRDimLoadLevelE52
type
  IRDimLoadLevelE52 = TOleEnum;
const
  I_DLL_E52_UPPER_FLANGE = $00000000;
  I_DLL_E52_PROF_CENTER = $00000001;
  I_DLL_E52_LOWER_FLANGE = $00000002;

// Constants for enum IRDimLoadTypeE52
type
  IRDimLoadTypeE52 = TOleEnum;
const
  I_DLT_E52_END_MOMENTS_LOAD = $00000000;
  I_DLT_E52_UNIFORM_LOAD = $00000001;
  I_DLT_E52_CONCENTRATED_FORCE = $00000002;

// Constants for enum IRDimLatBuckCoefDiagramE52
type
  IRDimLatBuckCoefDiagramE52 = TOleEnum;
const
  I_DLBCD_E52_CANTILEVER_2_0 = $00000000;
  I_DLBCD_E52_PINNED_PINNED_1_0 = $00000001;
  I_DLBCD_E52_STIFF_STIFF_0_5 = $00000002;
  I_DLBCD_E52_USER_DEFINED = $00000003;
  I_DLBCD_E52_NO = $00000004;
  I_DLBCD_E52_INTERNAL_BRACINGS = $00000005;

// Constants for enum IRDimMethodOfCritStressDetermE52
type
  IRDimMethodOfCritStressDetermE52 = TOleEnum;
const
  I_DMOCSD_E52_CLASSIC = $00000000;
  I_DMOCSD_E52_FOR_SOFT_TIMBER = $00000001;

// Constants for enum IRDimFireMethodE52
type
  IRDimFireMethodE52 = TOleEnum;
const
  I_DFM_E52_SIMPLIFIED = $00000000;
  I_DFM_E52_LIMITED_RESIST = $00000001;

// Constants for enum IRDimFireTimeOfReqResistE52
type
  IRDimFireTimeOfReqResistE52 = TOleEnum;
const
  I_DFTORR_E52_1per4 = $00000000;
  I_DFTORR_E52_1per2 = $00000001;
  I_DFTORR_E52_3per4 = $00000002;
  I_DFTORR_E52_1 = $00000003;
  I_DFTORR_E52_3per2 = $00000004;
  I_DFTORR_E52_2 = $00000005;
  I_DFTORR_E52_3 = $00000006;
  I_DFTORR_E52_4 = $00000007;

// Constants for enum IRDimFireAddProtectOfSectSidesE52
type
  IRDimFireAddProtectOfSectSidesE52 = TOleEnum;
const
  I_DFAPOSS_E52_UP = $00000000;
  I_DFAPOSS_E52_RIGHT = $00000001;
  I_DFAPOSS_E52_DOWN = $00000002;
  I_DFAPOSS_E52_LEFT = $00000003;

// Constants for enum IRDimBuckDiagramCB71
type
  IRDimBuckDiagramCB71 = TOleEnum;
const
  I_BD_CB71_PINNED_PINNED_1_0 = $00000000;
  I_BD_CB71_STIFF_STIFF_0_65 = $00000001;
  I_BD_CB71_STIFF_PINNED_0_8 = $00000002;
  I_BD_CB71_CANTILEVER = $00000003;
  I_BD_CB71_NONE = $00000004;
  I_BD_CB71_INTERNAL_BRACINGS = $00000005;

// Constants for enum IRDimLaterBuckTypeCB71
type
  IRDimLaterBuckTypeCB71 = TOleEnum;
const
  I_LBT_CB71_PINNED_SUPPORTS = $00000000;
  I_LBT_CB71_FIXED_SUPPORTS = $00000001;
  I_LBT_CB71_CANTILEVER = $00000002;
  I_LBT_CB71_NONE = $00000003;

// Constants for enum IRDimLoadLevelCB71
type
  IRDimLoadLevelCB71 = TOleEnum;
const
  I_LL_CB71_UP = $00000000;
  I_LL_CB71_MIDDLE = $00000001;
  I_LL_CB71_BOTTOM = $00000002;

// Constants for enum IRDimLoadTypeCB71
type
  IRDimLoadTypeCB71 = TOleEnum;
const
  I_DLT_CB71_MOMENT_AT_END = $00000000;
  I_DLT_CB71_UNIFORM_LOAD = $00000001;
  I_DLT_CB71_FORCE_AT_DISTANCE = $00000002;

// Constants for enum IRDimFireProtectionTimesCB71
type
  IRDimFireProtectionTimesCB71 = TOleEnum;
const
  I_FPT_CB71_LESS = $00000000;
  I_FPT_CB71_MORE = $00000001;

// Constants for enum IRDimFireMemberPositionsCB71
type
  IRDimFireMemberPositionsCB71 = TOleEnum;
const
  I_FMP_CB71_AUTOMATIC = $00000000;
  I_FMP_CB71_VERTICAL = $00000001;
  I_FMP_CB71_HORIZONTAL = $00000002;

// Constants for enum IRDimBuckDiagramLRFD
type
  IRDimBuckDiagramLRFD = TOleEnum;
const
  I_DBD_LRFD_USER_DEFINED = $FFFFFFFF;
  I_DBD_LRFD_PINNED_PINNED_1_0 = $00000000;
  I_DBD_LRFD_PINNED_STIFF_0_7 = $00000001;
  I_DBD_LRFD_STIFF_DISP_1_0 = $00000002;
  I_DBD_LRFD_STIFF_STIFF_0_5 = $00000003;
  I_DBD_LRFD_CANTILEVER_2_0 = $00000004;
  I_DBD_LRFD_PINNED_DISP_2_0 = $00000005;
  I_DBD_LRFD_PINNED_ADJBAR_3 = $00000006;
  I_DBD_LRFD_STIFF_ADJBAR_3 = $00000007;
  I_DBD_LRFD_INTERN_ADJBAR_6 = $00000008;
  I_DBD_LRFD_TRUSS_CHORD_0_9 = $00000009;
  I_DBD_LRFD_TRUSS_DIAGONAL_0_8 = $0000000A;
  I_DBD_LRFD_NO = $0000000B;
  I_DBD_LRFD_AUTO_ADJBAR = $0000000C;
  I_DBD_LRFD_INTERNAL_BRACINGS = $0000000D;

// Constants for enum IRDimLatBuckCoefDiagramLRFD
type
  IRDimLatBuckCoefDiagramLRFD = TOleEnum;
const
  I_DLBCD_LRFD_CANTILEVER_2_0 = $00000000;
  I_DLBCD_LRFD_PINNED_PINNED_1_0 = $00000001;
  I_DLBCD_LRFD_STIFF_STIFF_0_5 = $00000002;
  I_DLBCD_LRFD_USER_DEFINED = $00000003;
  I_DLBCD_LRFD_NO = $00000004;
  I_DLBCD_LRFD_INTERNAL_BRACINGS = $00000005;

// Constants for enum IRDimLatBuckCbCoeffDiagramLRFD
type
  IRDimLatBuckCbCoeffDiagramLRFD = TOleEnum;
const
  I_DLBCCD_LRFD_COEFF_1_0 = $00000000;
  I_DLBCCD_LRFD_END_MOMENTS = $00000001;
  I_DLBCCD_LRFD_CANTILEVER = $00000002;

// Constants for enum IRDimMembCalcBuckType
type
  IRDimMembCalcBuckType = TOleEnum;
const
  I_DMCBC_Y = $00000001;
  I_DMCBC_Z = $00000002;

// Constants for enum IRDimMembResTableDefProf
type
  IRDimMembResTableDefProf = TOleEnum;
const
  I_DMRTDP_LINE_PROF_PRINTCAPTION = $00000000;
  I_DMRTDP_LINE_PROF_CAPTION = $00000001;
  I_DMRTDP_LINE_PROF_S = $00000002;
  I_DMRTDP_LINE_PROF_SY = $00000003;
  I_DMRTDP_LINE_PROF_SZ = $00000004;
  I_DMRTDP_LINE_PROF_I = $00000005;
  I_DMRTDP_LINE_PROF_IY = $00000006;
  I_DMRTDP_LINE_PROF_IZ = $00000007;
  I_DMRTDP_LINE_PROF_WEL_Y = $00000008;
  I_DMRTDP_LINE_PROF_WEL_Z = $00000009;
  I_DMRTDP_LINE_PROF_H = $0000000A;
  I_DMRTDP_LINE_PROF_B = $0000000B;
  I_DMRTDP_LINE_PROF_B2 = $0000000C;
  I_DMRTDP_LINE_PROF_ES = $0000000D;
  I_DMRTDP_LINE_PROF_ES2 = $0000000E;
  I_DMRTDP_LINE_PROF_EA = $0000000F;
  I_DMRTDP_LINE_PROF_RY = $00000010;
  I_DMRTDP_LINE_PROF_RZ = $00000011;
  I_DMRTDP_LINE_PROF_MASSE = $00000012;
  I_DMRTDP_LINE_PROF_WEL_Y2 = $00000013;
  I_DMRTDP_LINE_PROF_WEL_Z2 = $00000014;

// Constants for enum IRDimMembResTableDefMater
type
  IRDimMembResTableDefMater = TOleEnum;
const
  I_DMRTDM_LINE_MATER_CAPTION = $00000001;
  I_DMRTDM_LINE_MATER_NAME = $00000002;
  I_DMRTDM_LINE_MATER_RE = $00000003;

// Constants for enum IRJointWeldType
type
  IRJointWeldType = TOleEnum;
const
  I_JWT_FILLET = $00000000;
  I_JWT_BUTT = $00000001;

// Constants for enum IRJointKneeDiagonalStiffType
type
  IRJointKneeDiagonalStiffType = TOleEnum;
const
  I_JKDST_LEFT = $00000000;
  I_JKDST_RIGHT = $00000001;
  I_JKDST_DOUBLE = $00000002;

// Constants for enum IRJointBoltShearPortion
type
  IRJointBoltShearPortion = TOleEnum;
const
  I_JBSP_THREADED = $00000000;
  I_JBSP_UNTHREADED = $00000001;

// Constants for enum IRJointAngleUnit
type
  IRJointAngleUnit = TOleEnum;
const
  I_JAU_RADIANS = $00000000;
  I_JAU_DEGREES = $00000001;

// Constants for enum IRJointWebType
type
  IRJointWebType = TOleEnum;
const
  I_JWT_SINGLE = $00000000;
  I_JWT_DOUBLE = $00000001;

// Constants for enum IRJointBoltsCalculateType
type
  IRJointBoltsCalculateType = TOleEnum;
const
  I_JBCT_CTICM = $00000000;
  I_JBCT_SOCOTEC = $00000001;

// Constants for enum IRJointColumnWebCalculateType
type
  IRJointColumnWebCalculateType = TOleEnum;
const
  I_JCWCT_CTICM = $00000000;
  I_JCWCT_CM66 = $00000001;

// Constants for enum IRJointGlobalAnalysisType
type
  IRJointGlobalAnalysisType = TOleEnum;
const
  I_JGAT_ELASTIC = $00000000;
  I_JGAT_ELASTIC_PLASTIC = $00000001;
  I_JGAT_RIGID_PLASTIC = $00000002;

// Constants for enum IRJointFrameType
type
  IRJointFrameType = TOleEnum;
const
  I_JFT_BRACED = $00000000;
  I_JFT_SWAY = $00000001;

// Constants for enum IRJointKneeType
type
  IRJointKneeType = TOleEnum;
const
  I_JKT_BEAM2BEAM = $00000000;
  I_JKT_BEAM2COLUMN = $00000001;
  I_JKT_BEAM2COLUMN_CONTINUE = $00000002;

// Constants for enum IRJointKneeReinfType
type
  IRJointKneeReinfType = TOleEnum;
const
  I_JKRT_NONE = $00000000;
  I_JKRT_STIFF = $00000001;
  I_JKRT_BRACKET = $00000002;

// Constants for enum IRJointKneeWebStiffType
type
  IRJointKneeWebStiffType = TOleEnum;
const
  I_JKWST_NONE = $00000000;
  I_JKWST_PLATE = $00000001;
  I_JKWST_DIAG = $00000002;

// Constants for enum IRJointKneeFixType
type
  IRJointKneeFixType = TOleEnum;
const
  I_JKFT_WELDED = $00000000;
  I_JKFT_BOLTED = $00000001;

// Constants for enum IRJointComponentType
type
  IRJointComponentType = TOleEnum;
const
  I_JCMT_BEAM_MAIN = $00000000;
  I_JCMT_BEAM_ANGLES = $00000001;
  I_JCMT_BEAM_SEATS = $00000002;
  I_JCMT_KNEE = $00000003;
  I_JCMT_TUBE_FLANGE = $00000004;
  I_JCMT_TUBE_DIAGONALS = $00000005;
  I_JCMT_GUSSET = $00000006;
  I_JCMT_COLUMN_C = $00000007;
  I_JCMT_COLUMN_B_MAIN = $00000008;
  I_JCMT_COLUMN_B_WEDGE = $00000009;
  I_JCMT_COLUMN_B_ANGLE = $0000000A;
  I_JCMT_BEAM_SEATS_T = $0000000B;
  I_JCMT_SPLICE = $0000000C;
  I_JCMT_TIE = $0000000D;

// Constants for enum IRJointKneeMaterials
type
  IRJointKneeMaterials = TOleEnum;
const
  I_JKM_PLATE = $00000000;
  I_JKM_PLATE_LEFT = $00000001;
  I_JKM_FLAN_PLATE_UPPER = $00000002;
  I_JKM_FLAN_PLATE_LOWER = $00000003;
  I_JKM_WEB_COLUMN_STIFF_H_UPPER = $00000004;
  I_JKM_WEB_COLUMN_STIFF_H_LOWER = $00000005;
  I_JKM_WEB_BEAM_STIFF_V_UPPER = $00000006;
  I_JKM_WEB_BEAM_STIFF_V_LOWER = $00000007;
  I_JKM_TENSION_PLATE_UPPER = $00000008;
  I_JKM_TENSION_PLATE_LOWER = $00000009;

// Constants for enum IRJointAnchorPlateType
type
  IRJointAnchorPlateType = TOleEnum;
const
  I_JAPT_RECT = $00000000;
  I_JAPT_TUBE = $00000001;

// Constants for enum IRJointAnchorType
type
  IRJointAnchorType = TOleEnum;
const
  I_JAT_ROD = $00000000;
  I_JAT_SIMPLE = $00000001;
  I_JAT_PIN = $00000002;
  I_JAT_PLATE = $00000003;

// Constants for enum IRJointFootBoltsArrangement
type
  IRJointFootBoltsArrangement = TOleEnum;
const
  I_JFBA_2VERT = $00000000;
  I_JFBA_2HOR = $00000001;
  I_JFBA_4COMB = $00000002;

// Constants for enum IRJointFootPlateType
type
  IRJointFootPlateType = TOleEnum;
const
  I_JFPT_NONE = $00000000;
  I_JFPT_WELD = $00000001;
  I_JFPT_ANGLE = $00000002;

// Constants for enum IRJointWedgeType
type
  IRJointWedgeType = TOleEnum;
const
  I_JWT_NONE = $00000000;
  I_JWT_I = $00000001;
  I_JWT_L = $00000002;
  I_JWT_T = $00000003;
  I_JWT_X = $00000004;

// Constants for enum IRJointPinnedColumnBaseStiffType
type
  IRJointPinnedColumnBaseStiffType = TOleEnum;
const
  I_JPCBST_LRDIAG = $00000000;
  I_JPCBST_LDIAG = $00000001;
  I_JPCBST_RDIAG = $00000002;
  I_JPCBST_LRI = $00000003;
  I_JPCBST_LI = $00000004;
  I_JPCBST_RI = $00000005;
  I_JPCBST_NONE = $00000006;
  I_JPCBST_SIMPLE = $00000007;
  I_JPCBST_TRAPEZOID = $00000008;

// Constants for enum IRJointColumnBElementType
type
  IRJointColumnBElementType = TOleEnum;
const
  I_JCBET_BASE_PLATE = $00000000;
  I_JCBET_FOOT_PLATE = $00000001;
  I_JCBET_UPPER_PLATE = $00000002;

// Constants for enum RJointCoeffPunchingMethodType
type
  RJointCoeffPunchingMethodType = TOleEnum;
const
  I_JCPMT_LESCOURAC_METHOD = $00000000;
  I_JCPMT_BAEL_METHOD = $00000001;

// Constants for enum IRJointCalcTypeCoeffK
type
  IRJointCalcTypeCoeffK = TOleEnum;
const
  I_JCT_COEFF_K_1_5 = $00000000;
  I_JCT_COEFF_K_AUTOMATIC = $00000001;
  I_JCT_COEFF_K_MANUAL = $00000002;

// Constants for enum IRJointFootStiffType
type
  IRJointFootStiffType = TOleEnum;
const
  I_JFST_1 = $00000001;
  I_JFST_2 = $00000002;
  I_JFST_3 = $00000003;
  I_JFST_4 = $00000004;
  I_JFST_5 = $00000005;
  I_JFST_6 = $00000006;
  I_JFST_7 = $00000007;
  I_JFST_8 = $00000008;

// Constants for enum IRJointColumnBaseCEBFailureType
type
  IRJointColumnBaseCEBFailureType = TOleEnum;
const
  I_JCBFT_CEB_TENSION_STEEL_FAILURE = $00000000;
  I_JCBFT_CEB_TENSION_PULL_OUT_FAILURE = $00000001;
  I_JCBFT_CEB_TENSION_CONCRETE_CONE_FAILURE = $00000002;
  I_JCBFT_CEB_TENSION_SPLITTING_FAILURE = $00000003;
  I_JCBFT_CEB_SHEAR_STEEL_FAILURE = $00000004;
  I_JCBFT_CEB_SHEAR_WITH_LEVER_ARM = $00000005;
  I_JCBFT_CEB_SHEAR_CONCRETE_PRY_OUT_FAILURE = $00000006;
  I_JCBFT_CEB_SHEAR_CONCRETE_EDGE_FAILURE = $00000007;

// Constants for enum IRJointFixedColumnBaseStiffType
type
  IRJointFixedColumnBaseStiffType = TOleEnum;
const
  I_JFCBST_NONE = $00000000;
  I_JFCBST_SIMPLE = $00000001;
  I_JFCBST_COMPLEX = $00000002;
  I_JFCBST_TRAPEZOID = $00000003;

// Constants for enum IRJointColumnBaseCalcModelType
type
  IRJointColumnBaseCalcModelType = TOleEnum;
const
  I_JCBCMT_ELASTIC_MODEL = $00000000;
  I_JCBCMT_PLASTIC_MODEL = $00000001;

// Constants for enum IRJointColumnBasePlateCalcModel
type
  IRJointColumnBasePlateCalcModel = TOleEnum;
const
  I_JCBPCM_PLASTIC = $00000000;
  I_JCBPCM_ELASTIC = $00000001;

// Constants for enum IRJointSpreadFootingType
type
  IRJointSpreadFootingType = TOleEnum;
const
  I_JSFT_RECT_CROSS_SECT = $00000001;
  I_JSFT_ABRUPT_CHANGES_HEIGHT = $00000002;
  I_JSFT_TAPERED = $00000003;

// Constants for enum IRJointAngleType
type
  IRJointAngleType = TOleEnum;
const
  I_JST_ALONG_BEARER = $00000000;
  I_JST_ALONG_SECOND = $00000001;

// Constants for enum IRJointAngleProfilePosition
type
  IRJointAngleProfilePosition = TOleEnum;
const
  I_JAPP_LONG_FLANGE_TO_COLUMN = $00000000;
  I_JAPP_SHORT_FLANGE_TO_COLUMN = $00000001;

// Constants for enum IRJointTubeType
type
  IRJointTubeType = TOleEnum;
const
  I_JTT_T = $00000000;
  I_JTT_Y = $00000001;
  I_JTT_X = $00000002;
  I_JTT_N = $00000003;
  I_JTT_K = $00000004;
  I_JTT_KT = $00000005;
  I_JTT_NONE = $FFFFFFFF;

// Constants for enum IRJointGussetDiagonalePositionType
type
  IRJointGussetDiagonalePositionType = TOleEnum;
const
  I_JGDPT_LONG_FLANGE = $00000000;
  I_JGDPT_SHORT_FLANGE = $00000001;
  I_JGDPT_LONG_FLANGE_INV = $00000002;
  I_JGDPT_SHORT_FLANGE_INV = $00000003;

// Constants for enum IRJointGussetSimpleProfilePosition
type
  IRJointGussetSimpleProfilePosition = TOleEnum;
const
  I_JGSPP_VERTICAL = $00000000;
  I_JGSPP_DIAGONAL = $00000001;

// Constants for enum IRJointGussetFixType
type
  IRJointGussetFixType = TOleEnum;
const
  I_JGFT_BOLTED = $00000000;
  I_JGFT_WELDED = $00000001;

// Constants for enum IRJointGussetCornersType
type
  IRJointGussetCornersType = TOleEnum;
const
  I_JGCT_ACUTE = $00000000;
  I_JGCT_CUT_IN = $00000001;
  I_JGCT_CUT_OUT = $00000002;

// Constants for enum IRJointGussetCrossProfileCutting
type
  IRJointGussetCrossProfileCutting = TOleEnum;
const
  I_JGCPC_CONTINUE_LEFTUPPER_RIGHTLOWER = $00000000;
  I_JGCPC_CONTINUE_LEFTLOWER_RIGHTUPPER = $00000001;
  I_JGCPC_ALL_CUTTED = $00000002;

// Constants for enum IRJointGussetFlangePlateRegularType
type
  IRJointGussetFlangePlateRegularType = TOleEnum;
const
  I_JGFPRT_REGULAR = $00000000;
  I_JGFPRT_IRREGULAR = $00000001;

// Constants for enum IRJointGussetFlangeProfileCutting
type
  IRJointGussetFlangeProfileCutting = TOleEnum;
const
  I_JGFPC_CONTINUOUS = $00000000;
  I_JGFPC_CUTTED = $00000001;

// Constants for enum IRJointConnectorsType
type
  IRJointConnectorsType = TOleEnum;
const
  I_JCT_BOLTS = $00000000;
  I_JCT_WELDS = $00000001;

// Constants for enum IRJointElementType
type
  IRJointElementType = TOleEnum;
const
  I_JET_R_ANGLES_WEB = $00000000;
  I_JET_R_ANGLES_FLANGE = $00000001;
  I_JET_R_STIFF_SHORT = $00000002;
  I_JET_R_STIFF_LONG = $00000003;
  I_JET_R_SEATS = $00000004;
  I_JET_R_SEATS_ANGLES = $00000005;
  I_JET_R_PLATES = $00000006;
  I_JET_L_ANGLES_R_ANGLES_WEB = $00000007;
  I_JET_L_STIFF_SHORT_R_STIFF_SHORT = $00000008;
  I_JET_L_STIFF_SHORT_R_STIFF_LONG = $00000009;
  I_JET_L_STIFF_LONG_R_STIFF_SHORT = $0000000A;
  I_JET_L_STIFF_LONG_R_STIFF_LONG = $0000000B;
  I_JET_L_SEATS_R_SEATS = $0000000C;
  I_JET_L_SEATS_R_SEATS_ANGLES = $0000000D;
  I_JET_L_SEATS_ANGLES_R_SEATS = $0000000E;
  I_JET_L_SEATS_ANGLES_R_SEATS_ANGLES = $0000000F;
  I_JET_R_PLATES_WEB = $00000010;
  I_JET_R_SEATS_PLATES = $00000011;
  I_JET_L_PLATES_R_PLATES_WEB = $00000012;
  I_JET_L_SEATS_PLATES_R_SEATS_PLATES = $00000013;
  I_JET_L_SEATS_PLATES_R_SEATS = $00000014;
  I_JET_L_SEATS_R_SEATS_PLATES = $00000015;

// Constants for enum IRJointBeamColumnElementType
type
  IRJointBeamColumnElementType = TOleEnum;
const
  I_JBCET_ANGLES_WEB = $00000000;
  I_JBCET_ANGLES_FLANGE = $00000001;
  I_JBCET_PLATES_WEB = $00000002;
  I_JBCET_PLATES_FLANGE = $00000003;
  I_JBCET_LSEATS_WEB = $00000004;
  I_JBCET_LSEATS_FLANGE = $00000005;
  I_JBCET_TSEATS_WEB = $00000006;
  I_JBCET_TSEATS_FLANGE = $00000007;
  I_JBCET_ANGLES_LSEATS_WEB = $00000008;
  I_JBCET_ANGLES_LSEATS_FLANGE = $00000009;
  I_JBCET_ANGLES_TSEATS_WEB = $0000000A;
  I_JBCET_ANGLES_TSEATS_FLANGE = $0000000B;
  I_JBCET_ANGLES_BRACKETS_WEB = $0000000C;
  I_JBCET_ANGLES_BRACKETS_FLANGE = $0000000D;
  I_JBCET_PLATES_LSEATS_WEB = $0000000E;
  I_JBCET_PLATES_LSEATS_FLANGE = $0000000F;
  I_JBCET_PLATES_TSEATS_WEB = $00000010;
  I_JBCET_PLATES_TSEATS_FLANGE = $00000011;
  I_JBCET_PLATES_BRACKETS_WEB = $00000012;
  I_JBCET_PLATES_BRACKETS_FLANGE = $00000013;

// Constants for enum IRJointSpliceType
type
  IRJointSpliceType = TOleEnum;
const
  I_JST_SPLICE_B2B = $00000000;
  I_JST_SPLICE_C2C = $00000001;

// Constants for enum IRJointSplicePlatesSetType
type
  IRJointSplicePlatesSetType = TOleEnum;
const
  I_JSPST_PLATES_WEB_SECONDARY = $00000000;
  I_JSPST_PLATES_WEB_PRIMARY = $00000001;
  I_JSPST_PLATES_UPPER_FLANGE_SECONDARY = $00000002;
  I_JSPST_PLATES_UPPER_FLANGE_PRIMARY = $00000003;
  I_JSPST_PLATES_LOWER_FLANGE_SECONDARY = $00000004;
  I_JSPST_PLATES_LOWER_FLANGE_PRIMARY = $00000005;

// Constants for enum IRJointSplicePlateJointType
type
  IRJointSplicePlateJointType = TOleEnum;
const
  I_JSPJT_PLATE_JOINT_BOLTED = $00000000;
  I_JSPJT_PLATE_JOINT_WELDED = $00000001;

// Constants for enum IRJointSplicePlateType
type
  IRJointSplicePlateType = TOleEnum;
const
  I_JSPT_PLATE_WEB = $00000000;
  I_JSPT_PLATE_UPPER_FLANGE_EXTERNAL = $00000001;
  I_JSPT_PLATE_UPPER_FLANGE_INTERNAL = $00000002;
  I_JSPT_PLATE_LOWER_FLANGE_EXTERNAL = $00000003;
  I_JSPT_PLATE_LOWER_FLANGE_INTERNAL = $00000004;

// Constants for enum IRJointSpliceBoltsSetType
type
  IRJointSpliceBoltsSetType = TOleEnum;
const
  I_JSBST_BOLTS_WEB_SECONDARY = $00000000;
  I_JSBST_BOLTS_WEB_PRIMARY = $00000001;
  I_JSBST_BOLTS_UPPER_FLANGE_SECONDARY = $00000002;
  I_JSBST_BOLTS_UPPER_FLANGE_PRIMARY = $00000003;
  I_JSBST_BOLTS_LOWER_FLANGE_SECONDARY = $00000004;
  I_JSBST_BOLTS_LOWER_FLANGE_PRIMARY = $00000005;

// Constants for enum IRJointSpliceBoltsConnectionCategory
type
  IRJointSpliceBoltsConnectionCategory = TOleEnum;
const
  I_JSBCC_BOLTS_CONNECTION_CATEGORY_A = $00000000;
  I_JSBCC_BOLTS_CONNECTION_CATEGORY_B = $00000001;
  I_JSBCC_BOLTS_CONNECTION_CATEGORY_C = $00000002;

// Constants for enum IRJointTieStiffenersType
type
  IRJointTieStiffenersType = TOleEnum;
const
  I_JTST_STIFFENERS_NO = $00000000;
  I_JTST_STIFFENERS_RADIAL = $00000001;
  I_JTST_STIFFENERS_RADIAL_2BOLTS = $00000002;
  I_JTST_STIFFENERS_VERTICAL = $00000003;
  I_JTST_STIFFENERS_HORIZONTAL = $00000004;
  I_JTST_STIFFENERS_VERTICAL_AND_HORIZONTAL = $00000005;

// Constants for enum IRJointTieBoltsConnectionCategory
type
  IRJointTieBoltsConnectionCategory = TOleEnum;
const
  I_JTBCC_BOLTS_CONNECTION_CATEGORY_D = $00000000;
  I_JTBCC_BOLTS_CONNECTION_CATEGORY_E = $00000001;
  I_JTBCC_BOLTS_CONNECTION_CATEGORY_F = $00000002;

// Constants for enum IRJointTieBoltsArrangementType
type
  IRJointTieBoltsArrangementType = TOleEnum;
const
  I_JTBAT_BOLTS_ARRANGEMENT_STAGGERED = $00000000;
  I_JTBAT_BOLTS_ARRANGEMENT_RECTANGULAR = $00000001;
  I_JTBAT_BOLTS_ARRANGEMENT_EDGE = $00000002;

// Constants for enum IRJointBoltType
type
  IRJointBoltType = TOleEnum;
const
  I_JBT_NORMAL = $00000000;
  I_JBT_HIGH_TENSION = $00000001;

// Constants for enum IRJointTubeProfileType
type
  IRJointTubeProfileType = TOleEnum;
const
  I_JTPT_RECT = $00000000;
  I_JTPT_TUBE = $00000001;
  I_JTPT_RECT_RECT = $00000002;
  I_JTPT_RECT_TUBE = $00000003;
  I_JTPT_TUBE_TUBE = $00000004;
  I_JTPT_UNKNOWN = $FFFFFFFF;

// Constants for enum IRBestCalcErrors
type
  IRBestCalcErrors = TOleEnum;
const
  I_BCE_NO_ERRORS = $00000000;
  I_BCE_NO_CALC = $00000001;
  I_BCE_SECTION_TOO_SMALL = $00000002;
  I_BCE_SECTION_SHEAR = $00000003;
  I_BCE_BCKL_COLUMN = $00000004;
  I_BCE_USER_ERROR = $FFFFFFFF;

// Constants for enum IRBestCalcWarnings
type
  IRBestCalcWarnings = TOleEnum;
const
  I_BCW_NO_WARNINGS = $00000000;
  I_BCW_RO_MIN = $00000001;
  I_BCW_RO_MAX = $00000002;
  I_BCW_SPACE_BY_CODE = $00000004;
  I_BCW_LAMBDA_MAX = $00000008;
  I_BCW_BREAK_MAX = $00000010;
  I_BCW_USER_WARNING = $00000020;
  I_BCW_STEEL_EXC_RAR = $00000040;
  I_BCW_CONCRETE_EXC_RAR = $00000080;
  I_BCW_CONCRETE_EXC_QPR = $00000100;
  I_BCW_COT_THETA_CHANGED = $00000200;

// Constants for enum IRBestCalcParamsDataDoubleValue
type
  IRBestCalcParamsDataDoubleValue = TOleEnum;
const
  I_BCPDDV_LONG_TENSION_BAR_DIAM = $00000000;
  I_BCPDDV_LONG_COMPRESSION_BAR_DIAM = $00000001;
  I_BCPDDV_TRAN_BAR_DIAM = $00000002;
  I_BCPDDV_TRAN_INCLINATION = $00000003;
  I_BCPDDV_SAND_CONTENT = $00000004;
  I_BCPDDV_LONG_STEEL_FE = $00000005;
  I_BCPDDV_TRAN_STEEL_FE = $00000006;
  I_BCPDDV_CONCRETE_FC = $00000007;
  I_BCPDDV_COVER_SIZE = $00000008;
  I_BCPDDV_CONCRETE_CREEP = $00000009;
  I_BCPDDV_REDISTRIBUTION = $0000000A;
  I_BCPDDV_MAX_BREAK = $0000000B;
  I_BCPDDV_USER_VALUE = $000003E8;
  I_BCPDDV_MAX_DEFLECTION = $0000000C;
  I_BCPDDV_MAX_CRACK = $0000000D;
  I_BCPDDV_MAIN_RNF_COORD_X = $0000000E;
  I_BCPDDV_MAIN_RNF_COORD_Y = $0000000F;
  I_BCPDDV_MAIN_RNF_COORD_Z = $00000010;
  I_BCPDDV_FLT2F = $00000011;
  I_BCPDDV_TRAN_DISTRIB_MOD = $00000012;

// Constants for enum IRBestCalcParamsDataIntegerValue
type
  IRBestCalcParamsDataIntegerValue = TOleEnum;
const
  I_BCPDIV_SEISMICS = $00000000;
  I_BCPDIV_CRACKING = $00000001;
  I_BCPDIV_TRAN_TYPE = $00000002;
  I_BCPDIV_LEGS_NUM = $00000003;
  I_BCPDIV_CONCRETE_LIGHT = $00000004;
  I_BCPDIV_TRAN_ZONES_NUM = $00000005;
  I_BCPDIV_TRAN_ZONES_OPTIMALIZATION = $00000006;
  I_BCPDIV_LONG_STEEL_BY_CLASS = $00000007;
  I_BCPDIV_TRAN_STEEL_BY_CLASS = $00000008;
  I_BCPDIV_CONCRETE_BY_CLASS = $00000009;
  I_BCPDIV_CONCRETE_BY_CONSTRUCTION = $0000000A;
  I_BCPDIV_LONG_BAR_DIAM_THE_SAME = $0000000B;
  I_BCPDIV_USER_VALUE = $000003E8;
  I_BCPDIV_CALC_DEFLECTION = $0000000C;
  I_BCPDIV_CALC_CRACK = $0000000D;
  I_BCPDIV_ADJUST_DEFLECTION = $0000000E;
  I_BCPDIV_FLT2F = $0000000F;
  I_BCPDIV_MAIN_RNF_COORD_SYSTEM = $00000010;
  I_BCPDIV_PLATE_CALC_TYPE = $00000011;
  I_BCPDIV_PLATE_MAIN_DIRECTION = $00000012;

// Constants for enum IRBestCalcParamsDataStringValue
type
  IRBestCalcParamsDataStringValue = TOleEnum;
const
  I_BCPDSV_NAME = $00000000;
  I_BCPDSV_LONG_REINF_CLASS = $00000001;
  I_BCPDSV_TRAN_REINF_CLASS = $00000002;
  I_BCPDSV_CONCRETE_CLASS = $00000003;
  I_BCPDSV_USER_VALUE = $000003E8;

// Constants for enum IRBestMemberDataDoubleValue
type
  IRBestMemberDataDoubleValue = TOleEnum;
const
  I_BMDDV_LENGTH_Y = $00000000;
  I_BMDDV_LENGTH_Z = $00000001;
  I_BMDDV_BUCK_COEF_Y = $00000002;
  I_BMDDV_BUCK_COEF_Z = $00000003;
  I_BMDDV_SUPPORT_WIDTH_1 = $00000004;
  I_BMDDV_SUPPORT_WIDTH_2 = $00000005;
  I_BMDDV_USER_VALUE = $000003E8;

// Constants for enum IRBestMemberDataIntegerValue
type
  IRBestMemberDataIntegerValue = TOleEnum;
const
  I_BMDIV_CALC_AS_SLENDER_Y = $00000001;
  I_BMDIV_SWAY_Y = $00000003;
  I_BMDIV_SWAY_Z = $00000004;
  I_BMDIV_USER_VALUE = $000003E8;
  I_BMDIV_TYPE = $00000000;
  I_BMDIV_CALC_AS_SLENDER_Z = $00000002;

// Constants for enum IRBestMemberDataStringValue
type
  IRBestMemberDataStringValue = TOleEnum;
const
  I_BMDSV_USER_VALUE = $000003E8;

// Constants for enum IRBestMemberType
type
  IRBestMemberType = TOleEnum;
const
  I_BMT_BEAM = $00000000;
  I_BMT_COLUMN = $00000001;
  I_BMT_PLATE = $00000002;

// Constants for enum IRBestResultsDoubleValue
type
  IRBestResultsDoubleValue = TOleEnum;
const
  I_BRDV_AS_TOP = $00000000;
  I_BRDV_AS_BOTTOM = $00000001;
  I_BRDV_AS_LEFT = $00000002;
  I_BRDV_AS_RIGHT = $00000003;
  I_BRDV_STIRR_SPACE = $00000009;
  I_BRDV_STIRR_SPACE_MOD = $0000000A;
  I_BRDV_LAMBDA_Y = $0000000D;
  I_BRDV_LAMBDA_Z = $0000000E;
  I_BRDV_CRACK_WIDTH = $0000000F;
  I_BRDV_USER_VALUE = $000003E8;
  I_BRDV_AS_MIN = $00000004;
  I_BRDV_AS_MAX = $00000005;
  I_BRDV_RO = $00000006;
  I_BRDV_RO_MIN = $00000007;
  I_BRDV_RO_MAX = $00000008;
  I_BRDV_STIRR_SPACE_MIN = $0000000B;
  I_BRDV_STIRR_SPACE_MAX = $0000000C;
  I_BRDV_RIGIDITY = $00000010;
  I_BRDV_BAR_SPACING = $00000011;
  I_BRDV_AS_PROVIDED_TOP_MY = $00000012;
  I_BRDV_AS_PROVIDED_TOP_MZ = $00000013;
  I_BRDV_AS_PROVIDED_BOTTOM_MY = $00000014;
  I_BRDV_AS_PROVIDED_BOTTOM_MZ = $00000015;
  I_BRDV_CRACK_WIDTH_LT_TOP = $00000016;
  I_BRDV_CRACK_WIDTH_LT_BOTTOM = $00000017;
  I_BRDV_CRACK_WIDTH_ST_TOP = $00000018;
  I_BRDV_CRACK_WIDTH_ST_BOTTOM = $00000019;
  I_BRDV_STIFFNESS_TOP = $0000001A;
  I_BRDV_STIFFNESS_BOTTOM = $0000001B;
  I_BRDV_AS_MIN_TOP = $0000001C;
  I_BRDV_AS_MIN_BOTTOM = $0000001D;
  I_BRDV_STIRR_DENSITY = $0000001E;

// Constants for enum IRBestResultsIntegerValue
type
  IRBestResultsIntegerValue = TOleEnum;
const
  I_BRIV_BEND_CASE_IDX = $00000000;
  I_BRIV_BEND_ERROR_NUM = $00000003;
  I_BRIV_SHEAR_CASE_IDX = $00000001;
  I_BRIV_TORSION_CASE_IDX = $00000002;
  I_BRIV_USER_VALUE = $000003E8;
  I_BRIV_BEND_WARNING_NUM = $00000006;
  I_BRIV_SHEAR_WARNING_NUM = $00000007;
  I_BRIV_TORSION_WARNING_NUM = $00000008;
  I_BRIV_SHEAR_ERROR_NUM = $00000004;
  I_BRIV_TORSION_ERROR_NUM = $00000005;

// Constants for enum IRBestDimParamsIntegerValue
type
  IRBestDimParamsIntegerValue = TOleEnum;
const
  I_BDPIV_BEND_SIMPLE = $00000000;
  I_BDPIV_BEND_UNIAXIAL = $00000001;
  I_BDPIV_BEND_BIAXIAL = $00000002;
  I_BDPIV_SHEAR = $00000003;
  I_BDPIV_TORSION = $00000004;
  I_BDPIV_USER_VALUE = $000003E8;
  I_BDPIV_CALCULATION_TYPE = $00000007;
  I_BDPIV_DIR_Y = $00000005;
  I_BDPIV_DIR_Z = $00000006;
  I_BDPIV_DIRECTION = $00000008;
  I_BDPIV_BEND = $00000009;
  I_BDPIV_LEVEL = $0000000A;

// Constants for enum IRBestResultsStringValue
type
  IRBestResultsStringValue = TOleEnum;
const
  I_BRSV_BEND_ERROR_NAME = $00000000;
  I_BRSV_BEND_WARNING_NAME = $00000003;
  I_BRSV_SHEAR_WARNING_NAME = $00000004;
  I_BRSV_TORSION_WARNING_NAME = $00000005;
  I_BRSV_SHEAR_ERROR_NAME = $00000001;
  I_BRSV_TORSION_ERROR_NAME = $00000002;
  I_BRSV_USER_VALUE = $000003E8;

// Constants for enum IRBestCodeCalculationType
type
  IRBestCodeCalculationType = TOleEnum;
const
  I_BCCT_PLATE = $00000000;
  I_BCCT_MEMBER = $00000001;

// Constants for enum IRBestCalculationType
type
  IRBestCalculationType = TOleEnum;
const
  I_BCT_DIMENSIONING = $00000000;
  I_BCT_BAR_SPACING = $00000001;
  I_BCT_RIGIDITY = $00000002;
  I_BCT_CRACK_WIDTH = $00000003;

// Constants for enum IRBestDimParamsDoubleValue
type
  IRBestDimParamsDoubleValue = TOleEnum;
const
  I_BDPDV_AS = $00000000;
  I_BDPDV_AS_TOP = $00000001;
  I_BDPDV_AS_BOTTOM = $00000002;
  I_BDPDV_AS_LEFT = $00000003;
  I_BDPDV_AS_RIGHT = $00000004;
  I_BDPDV_DIR_X = $00000005;
  I_BDPDV_DIR_Y = $00000006;
  I_BDPDV_DIR_Z = $00000007;
  I_BDPDV_DIR_ALPHA = $00000008;
  I_BDPDV_DIR_THETA = $00000009;
  I_BDPDV_DIR_R = $0000000A;
  I_BDPDV_CONCRETE_FC = $0000000B;

// Constants for enum IRBestBendType
type
  IRBestBendType = TOleEnum;
const
  I_BBT_FALSE = $00000000;
  I_BBT_SIMPLE = $00000001;
  I_BBT_UNIAXIAL = $00000002;
  I_BBT_BIAXIAL = $00000003;

// Constants for enum IRBestCoordSystem
type
  IRBestCoordSystem = TOleEnum;
const
  I_BCS_CARTESIAN = $00000001;
  I_BCS_POLAR = $00000002;

// Constants for enum IRBestDirection
type
  IRBestDirection = TOleEnum;
const
  I_BD_X = $00000000;
  I_BD_Y = $00000001;
  I_BD_Z = $00000002;

// Constants for enum IRBestLevel
type
  IRBestLevel = TOleEnum;
const
  I_BL_UP = $00000000;
  I_BL_DOWN = $00000001;

// Constants for enum IRBestForceDataDoubleValue
type
  IRBestForceDataDoubleValue = TOleEnum;
const
  I_BFDDV_COEF_LONG = $00000000;
  I_BFDDV_COEF_LONG2TOT = $00000001;

// Constants for enum IRConcrBarSectionGeometryType
type
  IRConcrBarSectionGeometryType = TOleEnum;
const
  I_CBSGT_R = $00000000;
  I_CBSGT_L = $00000001;
  I_CBSGT_T = $00000002;
  I_CBSGT_TN = $00000003;
  I_CBSGT_I = $00000004;
  I_CBSGT_Z = $00000005;
  I_CBSGT_P = $00000006;
  I_CBSGT_C = $00000007;
  I_CBSGT_C2 = $00000008;
  I_CBSGT_C4 = $00000009;
  I_CBSGT_UR = $0000000A;
  I_CBSGT_UL = $0000000B;
  I_CBSGT_UT = $0000000C;
  I_CBSGT_UZ = $0000000D;
  I_CBSGT_UP = $0000000E;
  I_CBSGT_UC = $0000000F;
  I_CBSGT_UC2 = $00000010;
  I_CBSGT_UC4 = $00000011;

// Constants for enum IRBestForceDataIntegerValue
type
  IRBestForceDataIntegerValue = TOleEnum;
const
  I_BFDIV_SLS_COMB_TYPE = $00000000;

// Constants for enum IRBestForceDataSLSCombType
type
  IRBestForceDataSLSCombType = TOleEnum;
const
  I_BFDSLS_COMB_TYPE_NONE = $00000000;
  I_BFDSLS_COMB_TYPE_RAR = $00000001;
  I_BFDSLS_COMB_TYPE_FRE = $00000002;
  I_BFDSLS_COMB_TYPE_QPR = $00000003;

// Constants for enum IRConcrReinforceDirection
type
  IRConcrReinforceDirection = TOleEnum;
const
  I_CRD_ALONG_X = $00000000;
  I_CRD_ALONG_Y = $00000001;
  I_CRD_ALONG_Z = $00000002;
  I_CRD_CARTESIAN_ALONG_VECTOR = $00000003;
  I_CRD_POLAR_POINT = $00000004;
  I_CRD_AUTOMATIC = $00000005;

// Constants for enum IRConcr_PN_SteelGrades
type
  IRConcr_PN_SteelGrades = TOleEnum;
const
  I_CPNSG_A_0 = $00000002;
  I_CPNSG_A_I = $00000003;
  I_CPNSG_A_II = $00000004;
  I_CPNSG_A_III = $00000005;
  I_CPNSG_A_IIIN = $00000006;

// Constants for enum IRConcr_PN84_ConcreteGrades
type
  IRConcr_PN84_ConcreteGrades = TOleEnum;
const
  I_CPN84CG_ANOTHER = $FFFFFFFF;
  I_CPN84CG_B10 = $00000000;
  I_CPN84CG_B12_5 = $00000001;
  I_CPN84CG_B15 = $00000002;
  I_CPN84CG_B17_5 = $00000003;
  I_CPN84CG_B20 = $00000004;
  I_CPN84CG_B25 = $00000005;
  I_CPN84CG_B30 = $00000006;
  I_CPN84CG_B35 = $00000007;
  I_CPN84CG_B40 = $00000008;
  I_CPN84CG_B50 = $00000009;
  I_CPN84CG_B55 = $0000000A;
  I_CPN84CG_B60 = $0000000B;
  I_CPN84CG_B65 = $0000000C;

// Constants for enum IRConcr_PN84_ExposureRatings
type
  IRConcr_PN84_ExposureRatings = TOleEnum;
const
  I_CPN84ER_MILD = $00000000;
  I_CPN84ER_MODERATE = $00000001;
  I_CPN84ER_SEVERE_OR_LEAKPROOF = $00000002;

// Constants for enum IRConcr_PN99_ExposureRatings
type
  IRConcr_PN99_ExposureRatings = TOleEnum;
const
  I_CPN99ER_1 = $00000000;
  I_CPN99ER_2A = $00000001;
  I_CPN99ER_2B = $00000002;
  I_CPN99ER_3 = $00000003;
  I_CPN99ER_4A = $00000004;
  I_CPN99ER_4B = $00000005;
  I_CPN99ER_5A = $00000006;
  I_CPN99ER_5B = $00000007;
  I_CPN99ER_5C = $00000008;
  I_CPN99ER_X0 = $00000000;
  I_CPN99ER_XC1_XC2_XC3_XC4 = $00000001;
  I_CPN99ER_XF1_XF3 = $00000002;
  I_CPN99ER_XD1_XD2_XD3 = $00000003;
  I_CPN99ER_XS1_XS2_XS3 = $00000004;
  I_CPN99ER_XF2_XF4 = $00000005;
  I_CPN99ER_XA1_XA2_XA3 = $00000006;

// Constants for enum IRConcr_PN99_ConcreteGrades
type
  IRConcr_PN99_ConcreteGrades = TOleEnum;
const
  I_CPN99CG_ANOTHER = $FFFFFFFF;
  I_CPN99CG_B15 = $00000000;
  I_CPN99CG_B20 = $00000001;
  I_CPN99CG_B25 = $00000002;
  I_CPN99CG_B30 = $00000003;
  I_CPN99CG_B37 = $00000004;
  I_CPN99CG_B45 = $00000005;
  I_CPN99CG_B50 = $00000006;
  I_CPN99CG_B55 = $00000007;
  I_CPN99CG_B60 = $00000008;
  I_CPN99CG_B65 = $00000009;
  I_CPN99CG_B70 = $0000000A;

// Constants for enum IRConcr_BAEL_CrackingType
type
  IRConcr_BAEL_CrackingType = TOleEnum;
const
  I_CBAELCT_OTHER = $00000003;
  I_CBAELCT_NOT_SEVERE = $00000000;
  I_CBAELCT_SEVERE = $00000001;
  I_CBAELCT_VERY_SEVERE = $00000002;

// Constants for enum IRConcr_BAEL_EnvironmentType
type
  IRConcr_BAEL_EnvironmentType = TOleEnum;
const
  I_CBAELET_AGGRESSIVE_WATER = $00000001;
  I_CBAELET_NORMAL_WATER = $00000000;

// Constants for enum IRConcr_BAEL_WaterLevel
type
  IRConcr_BAEL_WaterLevel = TOleEnum;
const
  I_CBAELWL_LOW = $00000000;
  I_CBAELWL_HIGH = $00000001;
  I_CBAELWL_EXCEPTIONAL = $00000002;

// Constants for enum IRConcr_BAEL_ConcreteGrades
type
  IRConcr_BAEL_ConcreteGrades = TOleEnum;
const
  I_CBAELCG_OTHER = $FFFFFFFF;
  I_CBAELCG_C12_15 = $00000000;
  I_CBAELCG_C16_20 = $00000001;
  I_CBAELCG_C20_25 = $00000002;
  I_CBAELCG_C25_30 = $00000003;
  I_CBAELCG_C30_37 = $00000004;
  I_CBAELCG_C35_45 = $00000005;
  I_CBAELCG_C40_50 = $00000006;
  I_CBAELCG_C45_55 = $00000007;
  I_CBAELCG_C50_60 = $00000008;

// Constants for enum IRConcr_BAEL_SteelGrades
type
  IRConcr_BAEL_SteelGrades = TOleEnum;
const
  I_CBAELSG_PLAIN = $00000000;
  I_CBAELSG_DEFORMED = $00000001;

// Constants for enum IRConcr_PN84_HumidityType
type
  IRConcr_PN84_HumidityType = TOleEnum;
const
  I_CPN84HT_40 = $00000000;
  I_CPN84HT_40_75 = $00000001;
  I_CPN84HT_75 = $00000002;
  I_CPN84HT_WATER = $00000003;

// Constants for enum IRConcr_ACI318_LoadActionPeriodType
type
  IRConcr_ACI318_LoadActionPeriodType = TOleEnum;
const
  I_ACI318_LAPT_3 = $00000000;
  I_ACI318_LAPT_6 = $00000001;
  I_ACI318_LAPT_12 = $00000002;
  I_ACI318_LAPT_60 = $00000003;

// Constants for enum IRConcr_ACI318_SteelGrades
type
  IRConcr_ACI318_SteelGrades = TOleEnum;
const
  I_ACI318_ST_40 = $00000001;
  I_ACI318_ST_50 = $00000002;
  I_ACI318_ST_60 = $00000003;
  I_ACI318_ST_75 = $00000004;

// Constants for enum IRConcr_ACI318_BarDim
type
  IRConcr_ACI318_BarDim = TOleEnum;
const
  I_ACI318_BR_3 = $00000000;
  I_ACI318_BR_4 = $00000001;
  I_ACI318_BR_5 = $00000002;
  I_ACI318_BR_6 = $00000003;
  I_ACI318_BR_7 = $00000004;
  I_ACI318_BR_8 = $00000005;
  I_ACI318_BR_9 = $00000006;
  I_ACI318_BR_10 = $00000007;
  I_ACI318_BR_11 = $00000008;
  I_ACI318_BR_14 = $00000009;
  I_ACI318_BR_18 = $0000000A;

// Constants for enum IRConcr_ACI318_MetricBarDim
type
  IRConcr_ACI318_MetricBarDim = TOleEnum;
const
  I_ACI318_MBD_5 = $00000000;
  I_ACI318_MBD_6 = $00000001;
  I_ACI318_MBD_8 = $00000002;
  I_ACI318_MBD_10 = $00000003;
  I_ACI318_MBD_12 = $00000004;
  I_ACI318_MBD_14 = $00000005;
  I_ACI318_MBD_16 = $00000006;
  I_ACI318_MBD_20 = $00000007;
  I_ACI318_MBD_25 = $00000008;
  I_ACI318_MBD_32 = $00000009;
  I_ACI318_MBD_40 = $0000000A;

// Constants for enum IRConcrReinforceBarType
type
  IRConcrReinforceBarType = TOleEnum;
const
  I_RBT_D1_TOP = $00000000;
  I_RBT_D1_BOTTOM = $00000001;
  I_RBT_D2_TOP = $00000002;
  I_RBT_D2_BOTTOM = $00000003;

// Constants for enum IRConcr_BS8110_ExposureRatings
type
  IRConcr_BS8110_ExposureRatings = TOleEnum;
const
  I_BS8110_ER_MILD = $00000000;
  I_BS8110_ER_MODERATE = $00000001;
  I_BS8110_ER_SEVERE = $00000002;
  I_BS8110_ER_VERY_SEVERE = $00000003;
  I_BS8110_ER_MOST_SEVERE = $00000004;

// Constants for enum IRConcr_BS8110_ConcreteAge
type
  IRConcr_BS8110_ConcreteAge = TOleEnum;
const
  I_BS8110_CA_1 = $00000000;
  I_BS8110_CA_3 = $00000001;
  I_BS8110_CA_7 = $00000002;
  I_BS8110_CA_28 = $00000003;
  I_BS8110_CA_90 = $00000004;
  I_BS8110_CA_365 = $00000005;

// Constants for enum IRConcr_BS8110_ConcreteGrades
type
  IRConcr_BS8110_ConcreteGrades = TOleEnum;
const
  I_BS8110_CG_AUTO = $00000000;
  I_BS8110_CG_C12_15 = $00000001;
  I_BS8110_CG_C16_20 = $00000002;
  I_BS8110_CG_C20_25 = $00000003;
  I_BS8110_CG_C25_30 = $00000004;
  I_BS8110_CG_C30_37 = $00000005;
  I_BS8110_CG_C35_45 = $00000006;
  I_BS8110_CG_C40_50 = $00000007;
  I_BS8110_CG_C45_55 = $00000008;
  I_BS8110_CG_C50_60 = $00000009;

// Constants for enum IRConcr_BS8110_PartialSafetyFactors
type
  IRConcr_BS8110_PartialSafetyFactors = TOleEnum;
const
  I_BS8110_PSF_1985 = $00000000;
  I_BS8110_PSF_1997 = $00000001;

// Constants for enum IRConcrReinforceCalcType
type
  IRConcrReinforceCalcType = TOleEnum;
const
  I_CRCT_SIMPLE_BENDING = $00000001;
  I_CRCT_BENDING_COMPRESSION_TENSION = $00000002;
  I_CRCT_COMPRESSION_TENSION = $00000003;

// Constants for enum IRConcr_SNIP_SteelGrades
type
  IRConcr_SNIP_SteelGrades = TOleEnum;
const
  I_CSNIPSG_A_I = $00000003;
  I_CSNIPSG_A_II = $00000004;
  I_CSNIPSG_A_III = $00000005;
  I_CSNIPSG_A_IV = $00000006;
  I_CSNIPSG_A_V = $00000007;
  I_CSNIPSG_A_VI = $00000008;
  I_CSNIPSG_A_IIIB_YH = $00000009;
  I_CSNIPSG_A_IIIB_Y = $0000000A;
  I_CSNIPSG_BP_I = $0000000B;
  I_CSNIPSG_B_II = $0000000C;
  I_CSNIPSG_BP_II = $0000000D;
  I_CSNIPSG_K_7 = $0000000E;
  I_CSNIPSG_K_19 = $0000000F;

// Constants for enum IRConcr_SNIP_ConcreteGrades
type
  IRConcr_SNIP_ConcreteGrades = TOleEnum;
const
  I_CSNIPCG_B7_5 = $0000000D;
  I_CSNIPCG_B10 = $00000000;
  I_CSNIPCG_B12_5 = $00000001;
  I_CSNIPCG_B15 = $00000002;
  I_CSNIPCG_B20 = $00000004;
  I_CSNIPCG_B25 = $00000005;
  I_CSNIPCG_B30 = $00000006;
  I_CSNIPCG_B35 = $00000007;
  I_CSNIPCG_B40 = $00000008;
  I_CSNIPCG_B45 = $0000000E;
  I_CSNIPCG_B50 = $00000009;
  I_CSNIPCG_B55 = $0000000A;
  I_CSNIPCG_B60 = $0000000B;

// Constants for enum IRConcr_SNIP_ConcreteTypes
type
  IRConcr_SNIP_ConcreteTypes = TOleEnum;
const
  I_CSNIPCT_HEAVYWEIGHT = $00000001;
  I_CSNIPCT_FINE_GRAINED_A = $00000002;
  I_CSNIPCT_FINE_GRAINED_B = $00000003;
  I_CSNIPCT_FINE_GRAINED_V = $00000004;
  I_CSNIPCT_LIGHTWEIGHT_SYNTHETIC_COMPACT = $00000005;
  I_CSNIPCT_LIGHTWEIGHT_SYNTHETIC_COARSE_GRAINED = $00000006;
  I_CSNIPCT_LIGHTWEIGHT_NATURAL_FILLER = $00000007;
  I_CSNIPCT_POROUS = $00000008;
  I_CSNIPCT_CELLULAR = $00000009;

// Constants for enum IRConcr_SNIP_CuringMethods
type
  IRConcr_SNIP_CuringMethods = TOleEnum;
const
  I_CSNIPCM_NORMAL = $00000000;
  I_CSNIPCM_THERMAL_TREATMENT = $00000001;
  I_CSNIPCM_AUTOCLAVES = $00000002;

// Constants for enum IRConcr_SNIP_Exposure
type
  IRConcr_SNIP_Exposure = TOleEnum;
const
  I_CSNIPE_INTERNAL = $00000000;
  I_CSNIPE_EXTERNAL = $00000001;
  I_CSNIPE_GROUND_VARIABLE_WATER_LEVEL = $00000002;

// Constants for enum IRConcr_EC2_ConcreteGrades
type
  IRConcr_EC2_ConcreteGrades = TOleEnum;
const
  I_CEC2CG_AUTOMATIC = $FFFFFFFF;
  I_CEC2CG_C12_15 = $00000000;
  I_CEC2CG_C16_20 = $00000001;
  I_CEC2CG_C20_25 = $00000002;
  I_CEC2CG_C25_30 = $00000003;
  I_CEC2CG_C30_37 = $00000004;
  I_CEC2CG_C35_45 = $00000005;
  I_CEC2CG_C40_50 = $00000006;
  I_CEC2CG_C45_55 = $00000007;
  I_CEC2CG_C50_60 = $00000008;

// Constants for enum IRConcr_EC2_ITALIAN_SteelGrades
type
  IRConcr_EC2_ITALIAN_SteelGrades = TOleEnum;
const
  I_CEC2ITSG_FE_B_22 = $00000000;
  I_CEC2ITSG_FE_B_32 = $00000001;
  I_CEC2ITSG_FE_B_38 = $00000002;
  I_CEC2ITSG_FE_B_44 = $00000003;

// Constants for enum IRConcr_EC2_ExposureRatings
type
  IRConcr_EC2_ExposureRatings = TOleEnum;
const
  I_CEC2ER_1 = $00000000;
  I_CEC2ER_2A = $00000001;
  I_CEC2ER_2B = $00000002;
  I_CEC2ER_3 = $00000003;
  I_CEC2ER_4A = $00000004;
  I_CEC2ER_4B = $00000005;
  I_CEC2ER_5A = $00000006;
  I_CEC2ER_5B = $00000007;
  I_CEC2ER_5C = $00000008;

// Constants for enum IRConcr_EC2_NAD
type
  IRConcr_EC2_NAD = TOleEnum;
const
  I_CEC2NAD_BELGIAN = $000002C3;
  I_CEC2NAD_DUTCH = $000002C2;
  I_CEC2NAD_FINNISH = $000002CC;
  I_CEC2NAD_FRENCH = $000002C6;
  I_CEC2NAD_GERMAN = $000002C8;
  I_CEC2NAD_ITALIAN = $000002CA;

// Constants for enum IRConcrMinimumReinforcementType
type
  IRConcrMinimumReinforcementType = TOleEnum;
const
  I_CMRT_NONE = $00000000;
  I_CMRT_FOR_NONZERO_AS = $00000001;
  I_CMRT_FOR_WHOLE_PANEL = $00000002;

// Constants for enum IRConcr_IS2000_EnvironmentType
type
  IRConcr_IS2000_EnvironmentType = TOleEnum;
const
  I_IS2000_ER_MILD = $00000000;
  I_IS2000_ER_MODERATE = $00000001;
  I_IS2000_ER_SEVERE = $00000002;
  I_IS2000_ER_VERY_SEVERE = $00000003;
  I_IS2000_ER_MOST_SEVERE = $00000004;

// Constants for enum IRConcrColumnLoadCaseType
type
  IRConcrColumnLoadCaseType = TOleEnum;
const
  I_RCL_LOAD_CASE_PERMANENT = $00000001;
  I_RCL_LOAD_CASE_EXPLOITATION = $00000002;
  I_RCL_LOAD_CASE_ACCIDENTAL = $00000003;
  I_RCL_LOAD_CASE_WIND = $00000004;
  I_RCL_LOAD_CASE_DESIGN = $00000005;
  I_RCL_LOAD_CASE_DESIGN_ACC = $00000006;
  I_RCL_LOAD_CASE_TEMPERATURE = $00000007;
  I_RCL_LOAD_CASE_SNOW = $00000008;
  I_RCL_LOAD_CASE_TEST = $00000009;
  I_RCL_LOAD_CASE_SEISMIC = $0000000A;

// Constants for enum IRConcrCodeColumnCommand
type
  IRConcrCodeColumnCommand = TOleEnum;
const
  I_CCCC_CL_VERIFICATION = $00000001;

// Constants for enum IRobotQuitOption
type
  IRobotQuitOption = TOleEnum;
const
  I_QO_DISCARD_CHANGES = $00000000;
  I_QO_PROMPT_TO_SAVE_CHANGES = $00000001;
  I_QO_SAVE_CHANGES = $00000002;

// Constants for enum IRobotLicenseEntitlement
type
  IRobotLicenseEntitlement = TOleEnum;
const
  I_LE_LOCAL_SOLVE = $00000000;
  I_LE_CLOUD_SOLVE = $00000001;

// Constants for enum IRobotLicenseEntitlementStatus
type
  IRobotLicenseEntitlementStatus = TOleEnum;
const
  I_LES_ENTITLED = $00000000;
  I_LES_NOT_ENTITLED = $00000001;
  I_LES_UNKNOWN = $00000002;
  I_LES_NOT_SIGNED_IN = $00000003;

// Constants for enum _eRobotLabelType
type
  _eRobotLabelType = TOleEnum;
const
  ILT_NODE_SUPPORT = $00000000;
  ILT_NODE_RELEASE = $00000001;
  ILT_NODE_COMPATIBILITY = $00000002;
  ILT_BAR_SECTION = $00000003;
  ILT_BAR_RELEASE = $00000004;
  ILT_BAR_OFFSET = $00000005;
  ILT_BAR_CABLE = $00000006;
  ILT_BAREND_BRACKET = $00000007;
  ILT_BAR_MATERIAL = $00000008;
  ILT_EDGE_SUPPORT = $0000000A;
  ILT_PANEL_THICKNESS = $0000000B;
  ILT_PANEL_REINFORCEMENT = $0000000C;
  ILT_UNKNOWN = $FFFFFFFF;

// Constants for enum IRConcrSteelType
type
  IRConcrSteelType = TOleEnum;
const
  I_CST_STEEL_TYPE_LONG = $00000001;
  I_CST_STEEL_TYPE_TRAN = $00000002;
  I_CST_STEEL_TYPE_WIRE = $00000003;
  I_CST_STEEL_TYPE_SPEC = $00000004;

// Constants for enum IRConcrBarType
type
  IRConcrBarType = TOleEnum;
const
  I_CBT_BAR_TYPE_UNDEFINED = $00000000;
  I_CBT_BAR_TYPE_LON_MAIN = $00000001;
  I_CBT_BAR_TYPE_TRA_MAIN = $00000002;
  I_CBT_BAR_TYPE_LON_HOLE = $00000004;
  I_CBT_BAR_TYPE_TRA_HOLE = $00000008;
  I_CBT_BAR_TYPE_LON_SURF = $00000010;
  I_CBT_BAR_TYPE_TRA_SURF = $00000020;
  I_CBT_BAR_TYPE_LON_CONS = $00000040;
  I_CBT_BAR_TYPE_TRA_CONS = $00000080;
  I_CBT_BAR_TYPE_LON_CORN = $00000100;
  I_CBT_BAR_TYPE_TRA_CORN = $00000200;
  I_CBT_BAR_TYPE_LON_JOIN = $00000400;
  I_CBT_BAR_TYPE_TRA_JOIN = $00000800;
  I_CBT_BAR_TYPE_LON_SPEC = $00001000;
  I_CBT_BAR_TYPE_TRA_SPEC = $00002000;
  I_CBT_BAR_TYPE_LON_DIST = $00008000;
  I_CBT_BAR_TYPE_LON_BOAT = $00010000;
  I_CBT_BAR_TYPE_LON_TORS = $00020000;
  I_CBT_BAR_TYPE_LON_MAIN_FIRST = $00040000;
  I_CBT_BAR_TYPE_LON_JOIN_STRUT = $00080000;
  I_CBT_BAR_TYPE_LON_FLAN = $00100000;

// Constants for enum IRConcrBarSubtype
type
  IRConcrBarSubtype = TOleEnum;
const
  I_CBS_BAR_SUBTYPE_ANY = $00000000;
  I_CBS_BAR_SUBTYPE_UP = $00000001;
  I_CBS_BAR_SUBTYPE_UP_RIGHT = $00000002;
  I_CBS_BAR_SUBTYPE_DOWN = $00000004;
  I_CBS_BAR_SUBTYPE_INC_LEFT = $00000008;
  I_CBS_BAR_SUBTYPE_INC_RIGHT = $00000010;
  I_CBS_BAR_SUBTYPE_STRAIGHT = $00000020;
  I_CBS_BAR_SUBTYPE_INC_45 = $00000040;
  I_CBS_BAR_SUBTYPE_DIR_VER = $00000080;
  I_CBS_BAR_SUBTYPE_DIR_HOR = $00000100;
  I_CBS_BAR_SUBTYPE_EXT = $00000200;
  I_CBS_BAR_SUBTYPE_INT = $00000400;
  I_CBS_BAR_SUBTYPE_SHA = $00000800;
  I_CBS_BAR_SUBTYPE_PIN = $00001000;
  I_CBS_BAR_SUBTYPE_JOIN = $00002000;
  I_CBS_BAR_SUBTYPE_SPEC = $00004000;
  I_CBS_BAR_SUBTYPE_UBAR = $00008000;
  I_CBS_BAR_SUBTYPE_DIST = $00010000;
  I_CBS_BAR_SUBTYPE_WALL = $00020000;
  I_CBS_BAR_SUBTYPE_FOOT = $00040000;
  I_CBS_BAR_SUBTYPE_TABLE = $00080000;
  I_CBS_BAR_SUBTYPE_GROIN = $00100000;
  I_CBS_BAR_SUBTYPE_FRONT = $00200000;
  I_CBS_BAR_SUBTYPE_BACK = $00400000;
  I_CBS_BAR_SUBTYPE_LEFT = $00800000;
  I_CBS_BAR_SUBTYPE_RIGHT = $01000000;

// Constants for enum IRConcrSteelSurfaceType
type
  IRConcrSteelSurfaceType = TOleEnum;
const
  I_SST_SURFACE_RIBBED = $00000001;
  I_SST_SURFACE_PLAIN = $00000002;

// Constants for enum IRConcrBeamSectionType
type
  IRConcrBeamSectionType = TOleEnum;
const
  I_CBS_BEAM_SECTION_NG_NP = $00000001;
  I_CBS_BEAM_SECTION_NG_LP = $00000002;
  I_CBS_BEAM_SECTION_NG_RP = $00000003;
  I_CBS_BEAM_SECTION_NG_BP = $00000004;
  I_CBS_BEAM_SECTION_LG_NP = $00000005;
  I_CBS_BEAM_SECTION_LG_LP = $00000006;
  I_CBS_BEAM_SECTION_LG_RP = $00000007;
  I_CBS_BEAM_SECTION_LG_BP = $00000008;
  I_CBS_BEAM_SECTION_RG_NP = $00000009;
  I_CBS_BEAM_SECTION_RG_LP = $0000000A;
  I_CBS_BEAM_SECTION_RG_RP = $0000000B;
  I_CBS_BEAM_SECTION_RG_BP = $0000000C;

// Constants for enum IRConcrBeamSectionDimType
type
  IRConcrBeamSectionDimType = TOleEnum;
const
  I_BSD_BEAM_SECTION_DIM_L = $00000001;
  I_BSD_BEAM_SECTION_DIM_H1 = $00000002;
  I_BSD_BEAM_SECTION_DIM_H2 = $00000003;
  I_BSD_BEAM_SECTION_DIM_OFFY1 = $00000004;
  I_BSD_BEAM_SECTION_DIM_OFFY2 = $00000005;
  I_BSD_BEAM_SECTION_DIM_OFFZ1 = $00000006;
  I_BSD_BEAM_SECTION_DIM_OFFZ2 = $00000007;
  I_BSD_BEAM_SECTION_DIM_B = $00000008;
  I_BSD_BEAM_SECTION_DIM_EL1 = $00000009;
  I_BSD_BEAM_SECTION_DIM_EL2 = $0000000A;
  I_BSD_BEAM_SECTION_DIM_PL = $0000000B;
  I_BSD_BEAM_SECTION_DIM_RL = $0000000C;
  I_BSD_BEAM_SECTION_DIM_HG1 = $0000000D;
  I_BSD_BEAM_SECTION_DIM_BG1 = $0000000E;
  I_BSD_BEAM_SECTION_DIM_HG2 = $0000000F;
  I_BSD_BEAM_SECTION_DIM_BG2 = $00000010;
  I_BSD_BEAM_SECTION_DIM_ER1 = $00000011;
  I_BSD_BEAM_SECTION_DIM_ER2 = $00000012;
  I_BSD_BEAM_SECTION_DIM_PR = $00000013;
  I_BSD_BEAM_SECTION_DIM_RR = $00000014;
  I_BSD_BEAM_SECTION_DIM_HG3 = $00000015;
  I_BSD_BEAM_SECTION_DIM_BG3 = $00000016;
  I_BSD_BEAM_SECTION_DIM_HG4 = $00000017;
  I_BSD_BEAM_SECTION_DIM_BG4 = $00000018;
  I_BSD_BEAM_SECTION_DIM_PL_CALC = $00000019;
  I_BSD_BEAM_SECTION_DIM_PR_CALC = $0000001A;
  I_BSD_BEAM_SECTION_DIM_CL = $0000001B;
  I_BSD_BEAM_SECTION_DIM_CR = $0000001C;

// Constants for enum IRConcrBeamSupportType
type
  IRConcrBeamSupportType = TOleEnum;
const
  IBST_BEAM_SUPPORT_PINNED = $00000001;
  IBST_BEAM_SUPPORT_FIXED = $00000002;
  IBST_BEAM_SUPPORT_SWAY = $00000003;

// Constants for enum IRConcrBeamSupportMaterialType
type
  IRConcrBeamSupportMaterialType = TOleEnum;
const
  I_BSM_BEAM_SUPPORT_CONCRETE = $00000001;
  I_BSM_BEAM_SUPPORT_MASONRY = $00000002;

// Constants for enum IRConcrBeamLoadNatureType
type
  IRConcrBeamLoadNatureType = TOleEnum;
const
  I_BLN_BEAM_NATURE_DEAD = $00000001;
  I_BLN_BEAM_NATURE_LIVE = $00000002;
  I_BLN_BEAM_NATURE_WIND = $00000003;
  I_BLN_BEAM_NATURE_SNOW = $00000004;
  I_BLN_BEAM_NATURE_SEISMIC = $00000005;

// Constants for enum IRConcrBeamPointLoadType
type
  IRConcrBeamPointLoadType = TOleEnum;
const
  I_PLT_BEAM_LOAD_FORCE = $00000001;
  I_PLT_BEAM_LOAD_MOMENT = $00000002;
  I_PLT_BEAM_LOAD_AXIAL_FORCE = $00000003;
  I_PLT_BEAM_LOAD_TORSION_MOMENT = $00000004;
  I_PLT_BEAM_LOAD_UNIFORM_TORSION_MOMENT = $00000005;

// Constants for enum IRConcrBeamLinearLoadType
type
  IRConcrBeamLinearLoadType = TOleEnum;
const
  I_LLT_BEAM_LOAD_SELF_WEIGHT = $00000001;
  I_LLT_BEAM_LOAD_UNIFORM = $00000002;
  I_LLT_BEAM_LOAD_CONTINUOUS = $00000003;
  I_LLT_BEAM_LOAD_TRAPEZOIDAL1 = $00000004;
  I_LLT_BEAM_LOAD_TRAPEZOIDAL2 = $00000005;
  I_LLT_BEAM_LOAD_TRAPEZOIDAL3 = $00000006;

// Constants for enum IRConcrBeamCrackingType
type
  IRConcrBeamCrackingType = TOleEnum;
const
  I_CBC_BEAM_CRACKING_UNDEFINED = $00000001;
  I_CBC_BEAM_CRACKING_PERMISSIBLE = $00000002;
  I_CBC_BEAM_CRACKING_LIMITED = $00000003;
  I_CBC_BEAM_CRACKING_NOT_PERMISSIBLE = $00000004;

// Constants for enum IRConcrCodeBeamCommand
type
  IRConcrCodeBeamCommand = TOleEnum;
const
  I_CCBC_BM_VERIFICATION = $00000001;

// Constants for enum IRConcrColumnDimensionType
type
  IRConcrColumnDimensionType = TOleEnum;
const
  I_CCD_COLUMN_DIM_HSP = $00000001;
  I_CCD_COLUMN_DIM_HSD = $00000002;
  I_CCD_COLUMN_DIM_EPD = $00000003;
  I_CCD_COLUMN_DIM_A = $00000004;
  I_CCD_COLUMN_DIM_B = $00000005;
  I_CCD_COLUMN_DIM_C = $00000006;
  I_CCD_COLUMN_DIM_H1 = $00000007;
  I_CCD_COLUMN_DIM_L1 = $00000008;
  I_CCD_COLUMN_DIM_H2 = $00000009;
  I_CCD_COLUMN_DIM_L2 = $0000000A;
  I_CCD_COLUMN_DIM_N = $0000000B;
  I_CCD_COLUMN_DIM_DE = $0000000C;
  I_CCD_COLUMN_DIM_HSP_X = $00000001;
  I_CCD_COLUMN_DIM_HSP_Y = $0000000D;

// Constants for enum IRConcrColumnSectionType
type
  IRConcrColumnSectionType = TOleEnum;
const
  I_CCT_COLUMN_SEC_R = $00000001;
  I_CCT_COLUMN_SEC_L = $00000002;
  I_CCT_COLUMN_SEC_TC = $00000003;
  I_CCT_COLUMN_SEC_Z = $00000004;
  I_CCT_COLUMN_SEC_P = $00000005;
  I_CCT_COLUMN_SEC_C36 = $00000006;
  I_CCT_COLUMN_SEC_C18 = $00000007;
  I_CCT_COLUMN_SEC_C90 = $00000008;

// Constants for enum IRConcrContinuousFootingSectionType
type
  IRConcrContinuousFootingSectionType = TOleEnum;
const
  I_CBS_CFOOT_SECTION_NP = $00000001;
  I_CBS_CFOOT_SECTION_LP = $00000002;
  I_CBS_CFOOT_SECTION_RP = $00000003;
  I_CBS_CFOOT_SECTION_BP = $00000004;

// Constants for enum IRConcrContinuousFootingSectionDimType
type
  IRConcrContinuousFootingSectionDimType = TOleEnum;
const
  I_BSD_CFOOT_SECTION_DIM_L = $00000001;
  I_BSD_CFOOT_SECTION_DIM_H1 = $00000002;
  I_BSD_CFOOT_SECTION_DIM_H2 = $00000003;
  I_BSD_CFOOT_SECTION_DIM_B = $00000004;
  I_BSD_CFOOT_SECTION_DIM_EL1 = $00000005;
  I_BSD_CFOOT_SECTION_DIM_ER1 = $00000006;
  I_BSD_CFOOT_SECTION_DIM_PL = $00000007;
  I_BSD_CFOOT_SECTION_DIM_RL = $00000008;
  I_BSD_CFOOT_SECTION_DIM_PR = $00000009;
  I_BSD_CFOOT_SECTION_DIM_RR = $0000000A;

// Constants for enum IRConcrContinuousFootingSupportMaterialType
type
  IRConcrContinuousFootingSupportMaterialType = TOleEnum;
const
  I_BSM_CFOOT_SUPPORT_CONCRETE = $00000001;
  I_BSM_CFOOT_SUPPORT_MASONRY = $00000002;

// Constants for enum IRConcrFootingDimType
type
  IRConcrFootingDimType = TOleEnum;
const
  I_CFDT_FOOT_DIM_A = $00000001;
  I_CFDT_FOOT_DIM_B = $00000002;
  I_CFDT_FOOT_DIM_H1 = $00000003;
  I_CFDT_FOOT_DIM_H2 = $00000004;
  I_CFDT_FOOT_DIM_H3 = $00000005;
  I_CFDT_FOOT_DIM_H4 = $00000006;
  I_CFDT_FOOT_DIM_EX = $00000007;
  I_CFDT_FOOT_DIM_EY = $00000008;
  I_CFDT_FOOT_DIM_AP = $00000009;
  I_CFDT_FOOT_DIM_BP = $0000000A;
  I_CFDT_FOOT_DIM_L = $0000000B;
  I_CFDT_FOOT_DIM_COL_A = $0000000C;
  I_CFDT_FOOT_DIM_COL_B = $0000000D;

// Constants for enum IRConcrFootingShapeType
type
  IRConcrFootingShapeType = TOleEnum;
const
  I_CFST_FOOT_SHAPE_RECT = $00000001;
  I_CFST_FOOT_SHAPE_TRAPEZOIDAL = $00000002;
  I_CFST_FOOT_SHAPE_TWO_CL = $00000003;

// Constants for enum IRConcrFootingType
type
  IRConcrFootingType = TOleEnum;
const
  I_CFT_FOOT_TYPE_FOOTING = $00000001;
  I_CFT_FOOT_TYPE_WALL = $00000002;

// Constants for enum IRConcrFootResultType
type
  IRConcrFootResultType = TOleEnum;
const
  I_FRT_FOOT_RES_AX = $00000001;
  I_FRT_FOOT_RES_AY = $00000002;

// Constants for enum IRConcrFootingPierType
type
  IRConcrFootingPierType = TOleEnum;
const
  I_CFT_FOOT_PIER_TYPE_PLAIN = $00000001;
  I_CFT_FOOT_PIER_TYPE_DOWELED = $00000002;
  I_CFT_FOOT_PIER_TYPE_BOLTED = $00000003;
  I_CFT_FOOT_PIER_TYPE_HINGE_1 = $00000004;
  I_CFT_FOOT_PIER_TYPE_HINGE_2 = $00000005;
  I_CFT_FOOT_PIER_TYPE_SOCKETED = $00000006;

// Constants for enum IRConcrSlabRnfType
type
  IRConcrSlabRnfType = TOleEnum;
const
  I_CSR_SLAB_RNF_BAR_ONLY = $00000001;
  I_CSR_SLAB_RNF_NET_ONLY = $00000002;
  I_CSR_SLAB_RNF_BAR_AND_NET = $00000003;

// Constants for enum IRConcrSlabRnfSegmentType
type
  IRConcrSlabRnfSegmentType = TOleEnum;
const
  I_SRS_SLAB_SEG_SINGLE = $00000001;
  I_SRS_SLAB_SEG_ENTIRE = $00000002;

// Constants for enum IRConcrSlabSupportType
type
  IRConcrSlabSupportType = TOleEnum;
const
  I_CSS_SLAB_SUPPORT_PINNED = $00000001;
  I_CSS_SLAB_SUPPORT_FIXED = $00000002;

type

// *********************************************************************//
// Forward declaration of types defined in TypeLibrary                    
// *********************************************************************//
  IDontUseIt = interface;
  IDontUseItDisp = dispinterface;
  IRobotLabel = interface;
  IRobotLabelDisp = dispinterface;
  IRobotLabelServer = interface;
  IRobotLabelServerDisp = dispinterface;
  IRobotCollection = interface;
  IRobotCollectionDisp = dispinterface;
  IRobotNamesArray = interface;
  IRobotNamesArrayDisp = dispinterface;
  IRobotLoadRecord = interface;
  IRobotLoadRecordDisp = dispinterface;
  IRobotLoadRecord2 = interface;
  IRobotLoadRecord2Disp = dispinterface;
  IRobotLoadRecordCommon = interface;
  IRobotLoadRecordCommonDisp = dispinterface;
  IRobotSelection = interface;
  IRobotSelectionDisp = dispinterface;
  IRobotGeoLayer = interface;
  IRobotGeoLayerDisp = dispinterface;
  IRobotGeoPoint3D = interface;
  IRobotGeoPoint3DDisp = dispinterface;
  IRobotLoadRecordMngr = interface;
  IRobotLoadRecordMngrDisp = dispinterface;
  IRobotLoadRecordLinear = interface;
  IRobotLoadRecordLinearDisp = dispinterface;
  IRobotLoadRecordLinear3D = interface;
  IRobotLoadRecordLinear3DDisp = dispinterface;
  IRobotLoadRecordIn3Points = interface;
  IRobotLoadRecordIn3PointsDisp = dispinterface;
  IRobotLoadRecordThermalIn3Points = interface;
  IRobotLoadRecordThermalIn3PointsDisp = dispinterface;
  IRobotLoadRecordInContour = interface;
  IRobotLoadRecordInContourDisp = dispinterface;
  IRobotCase = interface;
  IRobotCaseDisp = dispinterface;
  IRobotSimpleCase = interface;
  IRobotSimpleCaseDisp = dispinterface;
  IRobotCaseCombination = interface;
  IRobotCaseCombinationDisp = dispinterface;
  IRobotCaseFactorMngr = interface;
  IRobotCaseFactorMngrDisp = dispinterface;
  IRobotCaseFactor = interface;
  IRobotCaseFactorDisp = dispinterface;
  IRobotCaseCollection = interface;
  IRobotCaseCollectionDisp = dispinterface;
  IRobotCaseServer = interface;
  IRobotCaseServerDisp = dispinterface;
  IRobotSnowWindEngine = interface;
  IRobotSnowWindEngineDisp = dispinterface;
  IRobotSnowWindParams = interface;
  IRobotSnowWindParamsDisp = dispinterface;
  IRobotNumbersCollection = interface;
  IRobotNumbersCollectionDisp = dispinterface;
  IRobotSWStruct3DGenParams = interface;
  IRobotSWStruct3DGenParamsDisp = dispinterface;
  IRobotValuesArray = interface;
  IRobotValuesArrayDisp = dispinterface;
  IRobotSWStruct3DPurlinGenParams = interface;
  IRobotSWStruct3DPurlinGenParamsDisp = dispinterface;
  IRobotSWStruct3D = interface;
  IRobotSWStruct3DDisp = dispinterface;
  IRobotSWStruct3DFrame = interface;
  IRobotSWStruct3DFrameDisp = dispinterface;
  IRobotSWStruct3DElement = interface;
  IRobotSWStruct3DElementDisp = dispinterface;
  IRobotNumbersArray = interface;
  IRobotNumbersArrayDisp = dispinterface;
  IRobotCodeCombinationEngine = interface;
  IRobotCodeCombinationEngineDisp = dispinterface;
  IRobotCodeCmbGenerationParams = interface;
  IRobotCodeCmbGenerationParamsDisp = dispinterface;
  IRobotCodeCmbRegulations = interface;
  IRobotCodeCmbRegulationsDisp = dispinterface;
  IRobotCodeCmbActionServer = interface;
  IRobotCodeCmbActionServerDisp = dispinterface;
  IRobotCodeCmbCombs = interface;
  IRobotCodeCmbCombsDisp = dispinterface;
  IRobotCodeCmbGroupServer = interface;
  IRobotCodeCmbGroupServerDisp = dispinterface;
  IRobotCodeCmbGroup = interface;
  IRobotCodeCmbGroupDisp = dispinterface;
  IRobotCodeCmbGroupRelationServer = interface;
  IRobotCodeCmbGroupRelationServerDisp = dispinterface;
  IRobotCodeCmbGroupRelation = interface;
  IRobotCodeCmbGroupRelationDisp = dispinterface;
  IRobotTimeHistoryFunctionList = interface;
  IRobotTimeHistoryFunctionListDisp = dispinterface;
  IRobotTimeHistoryPointsCollection = interface;
  IRobotTimeHistoryPointsCollectionDisp = dispinterface;
  IRobotMobileCase = interface;
  IRobotMobileCaseDisp = dispinterface;
  IRobotMobileCaseComponentMngr = interface;
  IRobotMobileCaseComponentMngrDisp = dispinterface;
  IRobotMobileCaseComponent = interface;
  IRobotMobileCaseComponentDisp = dispinterface;
  IRobotMobileCaseRoute = interface;
  IRobotMobileCaseRouteDisp = dispinterface;
  IRobotMobileCaseSegmentFactors = interface;
  IRobotMobileCaseSegmentFactorsDisp = dispinterface;
  IRobotSELFSeismicEngine = interface;
  IRobotSELFSeismicEngineDisp = dispinterface;
  IRobotSELFSeismicGenerationParams = interface;
  IRobotSELFSeismicGenerationParamsDisp = dispinterface;
  IRobotModalAnalysisParams = interface;
  IRobotModalAnalysisParamsDisp = dispinterface;
  IRobotModalAnalysisShifts = interface;
  IRobotModalAnalysisShiftsDisp = dispinterface;
  IRobotModalAnalysisLimits = interface;
  IRobotModalAnalysisLimitsDisp = dispinterface;
  IRobotModalAnalysisBase = interface;
  IRobotModalAnalysisBaseDisp = dispinterface;
  IRobotMassEccentricities = interface;
  IRobotMassEccentricitiesDisp = dispinterface;
  IRobotDynamicAnalysisExcitationDirection = interface;
  IRobotDynamicAnalysisExcitationDirectionDisp = dispinterface;
  IRobotSELFSeismicAnalysisParams = interface;
  IRobotSELFSeismicAnalysisParamsDisp = dispinterface;
  IRobotSELFSeismicStructureParams = interface;
  IRobotSELFSeismicStructureParamsDisp = dispinterface;
  IRobotWindLoadsSimulationEngine = interface;
  IRobotWindLoadsSimulationEngineDisp = dispinterface;
  IRobotWindLoadsSimulationParams = interface;
  IRobotWindLoadsSimulationParamsDisp = dispinterface;
  IRobotCodeCmbComponentMngr = interface;
  IRobotCodeCmbComponentMngrDisp = dispinterface;
  IRobotCodeCmbComponent = interface;
  IRobotCodeCmbComponentDisp = dispinterface;
  IRobotCodeCmbFactor = interface;
  IRobotCodeCmbFactorDisp = dispinterface;
  IRobotCodeCombination = interface;
  IRobotCodeCombinationDisp = dispinterface;
  IRobotDataObject = interface;
  IRobotDataObjectDisp = dispinterface;
  IRobotNode = interface;
  IRobotNodeDisp = dispinterface;
  IRobotEmitter = interface;
  IRobotEmitterDisp = dispinterface;
  IRobotNodeSupportData = interface;
  IRobotNodeSupportDataDisp = dispinterface;
  IRobotNonlinearLinkMngr = interface;
  IRobotNonlinearLinkMngrDisp = dispinterface;
  IRobotAdvancedSupportData = interface;
  IRobotAdvancedSupportDataDisp = dispinterface;
  IRobotSupportEquivalentElasticity = interface;
  IRobotSupportEquivalentElasticityDisp = dispinterface;
  IRobotDataObjectServer = interface;
  IRobotDataObjectServerDisp = dispinterface;
  IRobotNodeServer = interface;
  IRobotNodeServerDisp = dispinterface;
  IRobotNodeRigidLinkServer = interface;
  IRobotNodeRigidLinkServerDisp = dispinterface;
  IRobotNodeRigidLinkDef = interface;
  IRobotNodeRigidLinkDefDisp = dispinterface;
  IRobotNodeCompatibilityServer = interface;
  IRobotNodeCompatibilityServerDisp = dispinterface;
  IRobotNodeCompatibilityDef = interface;
  IRobotNodeCompatibilityDefDisp = dispinterface;
  IRobotNonlinearLinkServer = interface;
  IRobotNonlinearLinkServerDisp = dispinterface;
  IRobotNonlinearLink = interface;
  IRobotNonlinearLinkDisp = dispinterface;
  IRobotNonlinearLinkParams = interface;
  IRobotNonlinearLinkParamsDisp = dispinterface;
  IRobotBarEnd = interface;
  IRobotBarEndDisp = dispinterface;
  IRobotBarEndOffsetData = interface;
  IRobotBarEndOffsetDataDisp = dispinterface;
  IRobotBar = interface;
  IRobotBarDisp = dispinterface;
  IRobotBarElementDataSet = interface;
  IRobotBarElementDataSetDisp = dispinterface;
  IRobotBarElementData = interface;
  IRobotBarElementDataDisp = dispinterface;
  IRobotBarServer = interface;
  IRobotBarServerDisp = dispinterface;
  IRobotNonlinearHingeModelServer = interface;
  IRobotNonlinearHingeModelServerDisp = dispinterface;
  IRobotNonlinearHingeModel = interface;
  IRobotNonlinearHingeModelDisp = dispinterface;
  IRobotNonlinearHingeModelPoints = interface;
  IRobotNonlinearHingeModelPointsDisp = dispinterface;
  IRobotGeoPoint2D = interface;
  IRobotGeoPoint2DDisp = dispinterface;
  IRobotNonlinearHingeModelAxisParams = interface;
  IRobotNonlinearHingeModelAxisParamsDisp = dispinterface;
  IRobotNonlinearHingeServer = interface;
  IRobotNonlinearHingeServerDisp = dispinterface;
  IRobotNonlinearHingeDef = interface;
  IRobotNonlinearHingeDefDisp = dispinterface;
  IRobotBarReleaseData = interface;
  IRobotBarReleaseDataDisp = dispinterface;
  IRobotBarEndReleaseData = interface;
  IRobotBarEndReleaseDataDisp = dispinterface;
  IRobotMaterialData = interface;
  IRobotMaterialDataDisp = dispinterface;
  IRobotBarSectionNonstdData = interface;
  IRobotBarSectionNonstdDataDisp = dispinterface;
  IRobotBarSectionData = interface;
  IRobotBarSectionDataDisp = dispinterface;
  IRobotBarSectionConcreteData = interface;
  IRobotBarSectionConcreteDataDisp = dispinterface;
  IRobotBarSectionElasticParams = interface;
  IRobotBarSectionElasticParamsDisp = dispinterface;
  IRobotMaterialElasticModel = interface;
  IRobotMaterialElasticModelDisp = dispinterface;
  IRobotBarSectionComplexData = interface;
  IRobotBarSectionComplexDataDisp = dispinterface;
  IRobotBarSectionSpecialData = interface;
  IRobotBarSectionSpecialDataDisp = dispinterface;
  IRobotBarEndBracketData = interface;
  IRobotBarEndBracketDataDisp = dispinterface;
  IRobotBarOffsetData = interface;
  IRobotBarOffsetDataDisp = dispinterface;
  IRobotThicknessData = interface;
  IRobotThicknessDataDisp = dispinterface;
  IRobotThicknessHomoData = interface;
  IRobotThicknessHomoDataDisp = dispinterface;
  IRobotThicknessMatrix = interface;
  IRobotThicknessMatrixDisp = dispinterface;
  IRobotThicknessOrthoData = interface;
  IRobotThicknessOrthoDataDisp = dispinterface;
  IRobotResultServer = interface;
  IRobotResultServerDisp = dispinterface;
  IRobotNodeResultServer = interface;
  IRobotNodeResultServerDisp = dispinterface;
  IRobotReactionServer = interface;
  IRobotReactionServerDisp = dispinterface;
  IRobotReactionData = interface;
  IRobotReactionDataDisp = dispinterface;
  IRobotNodeDisplacementServer = interface;
  IRobotNodeDisplacementServerDisp = dispinterface;
  IRobotDisplacementData = interface;
  IRobotDisplacementDataDisp = dispinterface;
  IRobotNodeBucklingServer = interface;
  IRobotNodeBucklingServerDisp = dispinterface;
  IRobotPseudostaticForceServer = interface;
  IRobotPseudostaticForceServerDisp = dispinterface;
  IRobotForcesData = interface;
  IRobotForcesDataDisp = dispinterface;
  IRobotBarResultServer = interface;
  IRobotBarResultServerDisp = dispinterface;
  IRobotBarForceServer = interface;
  IRobotBarForceServerDisp = dispinterface;
  IRobotBarForceData = interface;
  IRobotBarForceDataDisp = dispinterface;
  IRobotBarDeflectionServer = interface;
  IRobotBarDeflectionServerDisp = dispinterface;
  IRobotBarDeflectionData = interface;
  IRobotBarDeflectionDataDisp = dispinterface;
  IRobotBarStressServer = interface;
  IRobotBarStressServerDisp = dispinterface;
  IRobotBarStressData = interface;
  IRobotBarStressDataDisp = dispinterface;
  IRobotBarBucklingServer = interface;
  IRobotBarBucklingServerDisp = dispinterface;
  IRobotBarBucklingData = interface;
  IRobotBarBucklingDataDisp = dispinterface;
  IRobotBarDisplacementServer = interface;
  IRobotBarDisplacementServerDisp = dispinterface;
  IRobotAdvancedResultServer = interface;
  IRobotAdvancedResultServerDisp = dispinterface;
  IRobotEigenvaluesServer = interface;
  IRobotEigenvaluesServerDisp = dispinterface;
  IRobotEigenvalues = interface;
  IRobotEigenvaluesDisp = dispinterface;
  IRobotMassSumServer = interface;
  IRobotMassSumServerDisp = dispinterface;
  IRobotSpectralCoefficients = interface;
  IRobotSpectralCoefficientsDisp = dispinterface;
  IRobotEigenvectorsServer = interface;
  IRobotEigenvectorsServerDisp = dispinterface;
  IRobotTimeHistoryResultServer = interface;
  IRobotTimeHistoryResultServerDisp = dispinterface;
  IRobotTimeHistoryResults = interface;
  IRobotTimeHistoryResultsDisp = dispinterface;
  IRobotFRFResultServer = interface;
  IRobotFRFResultServerDisp = dispinterface;
  IRobotFRFResults = interface;
  IRobotFRFResultsDisp = dispinterface;
  IRobotFootfallResults = interface;
  IRobotFootfallResultsDisp = dispinterface;
  IRobotFeResultServer = interface;
  IRobotFeResultServerDisp = dispinterface;
  IRobotFeResultParams = interface;
  IRobotFeResultParamsDisp = dispinterface;
  IRobotFeResultDetailed = interface;
  IRobotFeResultDetailedDisp = dispinterface;
  IRobotFeResultPrincipal = interface;
  IRobotFeResultPrincipalDisp = dispinterface;
  IRobotFeResultComplex = interface;
  IRobotFeResultComplexDisp = dispinterface;
  IRobotFeResultReinforcement = interface;
  IRobotFeResultReinforcementDisp = dispinterface;
  IRobotFeResultReduced = interface;
  IRobotFeResultReducedDisp = dispinterface;
  IRobotPanelCutMngr = interface;
  IRobotPanelCutMngrDisp = dispinterface;
  IRobotPanelCut = interface;
  IRobotPanelCutDisp = dispinterface;
  IRobotFeExtremeParams = interface;
  IRobotFeExtremeParamsDisp = dispinterface;
  IRobotFeExtremeValue = interface;
  IRobotFeExtremeValueDisp = dispinterface;
  IRobotFeMultiResultType = interface;
  IRobotFeMultiResultTypeDisp = dispinterface;
  IRobotFeMultiExtremeValue = interface;
  IRobotFeMultiExtremeValueDisp = dispinterface;
  IRobotExtremeResultServer = interface;
  IRobotExtremeResultServerDisp = dispinterface;
  IRobotExtremeParams = interface;
  IRobotExtremeParamsDisp = dispinterface;
  IRobotMultiSelection = interface;
  IRobotMultiSelectionDisp = dispinterface;
  IRobotModeSelection = interface;
  IRobotModeSelectionDisp = dispinterface;
  IRobotExtremeValue = interface;
  IRobotExtremeValueDisp = dispinterface;
  IRobotUniversalResultAccess = interface;
  IRobotUniversalResultAccessDisp = dispinterface;
  IRobotStructureValues = interface;
  IRobotStructureValuesDisp = dispinterface;
  IRobotResultQueryParams = interface;
  IRobotResultQueryParamsDisp = dispinterface;
  IRobotResultRowSet = interface;
  IRobotResultRowSetDisp = dispinterface;
  IRobotResultRow = interface;
  IRobotResultRowDisp = dispinterface;
  IRobotStoreyResultServer = interface;
  IRobotStoreyResultServerDisp = dispinterface;
  IRobotStoreyValues = interface;
  IRobotStoreyValuesDisp = dispinterface;
  IRobotStoreyDisplacements = interface;
  IRobotStoreyDisplacementsDisp = dispinterface;
  IRobotStoreyReducedForces = interface;
  IRobotStoreyReducedForcesDisp = dispinterface;
  IRobotCalculationResume = interface;
  IRobotCalculationResumeDisp = dispinterface;
  IRobotVehicleData = interface;
  IRobotVehicleDataDisp = dispinterface;
  IRobotVehicleLoadMngr = interface;
  IRobotVehicleLoadMngrDisp = dispinterface;
  IRobotVehicleLoad = interface;
  IRobotVehicleLoadDisp = dispinterface;
  _IRobotStructureEvents = dispinterface;
  IRobotStructure = interface;
  IRobotStructureDisp = dispinterface;
  IRobotSelectionFactory = interface;
  IRobotSelectionFactoryDisp = dispinterface;
  IRobotObjEdgeSelection = interface;
  IRobotObjEdgeSelectionDisp = dispinterface;
  IRobotObjObjectServer = interface;
  IRobotObjObjectServerDisp = dispinterface;
  IRobotObjObject = interface;
  IRobotObjObjectDisp = dispinterface;
  IRobotObjPart = interface;
  IRobotObjPartDisp = dispinterface;
  IRobotObjPartMain = interface;
  IRobotObjPartMainDisp = dispinterface;
  IRobotObjAttributes = interface;
  IRobotObjAttributesDisp = dispinterface;
  IRobotGeoObject = interface;
  IRobotGeoObjectDisp = dispinterface;
  IRobotGeoCurveDiv = interface;
  IRobotGeoCurveDivDisp = dispinterface;
  IRobotObjModification = interface;
  IRobotObjModificationDisp = dispinterface;
  IRobotObjOperation = interface;
  IRobotObjOperationDisp = dispinterface;
  IRobotObjPartReference = interface;
  IRobotObjPartReferenceDisp = dispinterface;
  IRobotObjMesh = interface;
  IRobotObjMeshDisp = dispinterface;
  IRobotMeshParams = interface;
  IRobotMeshParamsDisp = dispinterface;
  IRobotMeshVolumeParams = interface;
  IRobotMeshVolumeParamsDisp = dispinterface;
  IRobotMeshSurfaceParams = interface;
  IRobotMeshSurfaceParamsDisp = dispinterface;
  IRobotMeshMethod = interface;
  IRobotMeshMethodDisp = dispinterface;
  IRobotMeshGeneration = interface;
  IRobotMeshGenerationDisp = dispinterface;
  IRobotMeshSurfaceFiniteElems = interface;
  IRobotMeshSurfaceFiniteElemsDisp = dispinterface;
  IRobotMeshCoonsParams = interface;
  IRobotMeshCoonsParamsDisp = dispinterface;
  IRobotMeshDelaunayParams = interface;
  IRobotMeshDelaunayParamsDisp = dispinterface;
  IRobotFiniteElementDataSet = interface;
  IRobotFiniteElementDataSetDisp = dispinterface;
  IRobotFiniteElementData = interface;
  IRobotFiniteElementDataDisp = dispinterface;
  IRobotLinearReleaseServer = interface;
  IRobotLinearReleaseServerDisp = dispinterface;
  IRobotLinearReleaseDef = interface;
  IRobotLinearReleaseDefDisp = dispinterface;
  IRobotLinearReleaseDefList = interface;
  IRobotLinearReleaseDefListDisp = dispinterface;
  IRobotPointsArray = interface;
  IRobotPointsArrayDisp = dispinterface;
  IRobotFiniteElementServer = interface;
  IRobotFiniteElementServerDisp = dispinterface;
  IRobotGroupServer = interface;
  IRobotGroupServerDisp = dispinterface;
  IRobotGroup = interface;
  IRobotGroupDisp = dispinterface;
  IRobotStructureEditTools = interface;
  IRobotStructureEditToolsDisp = dispinterface;
  IRobotStructureCache = interface;
  IRobotStructureCacheDisp = dispinterface;
  IRobotStructureApplyInfo = interface;
  IRobotStructureApplyInfoDisp = dispinterface;
  IRobotStoreyMngr = interface;
  IRobotStoreyMngrDisp = dispinterface;
  IRobotStorey = interface;
  IRobotStoreyDisp = dispinterface;
  IRobotGroupObjectServer = interface;
  IRobotGroupObjectServerDisp = dispinterface;
  IRobotStructureQuantitySurvey = interface;
  IRobotStructureQuantitySurveyDisp = dispinterface;
  IRobotMaterialQuantitySurvey = interface;
  IRobotMaterialQuantitySurveyDisp = dispinterface;
  IRobotBarSectionQuantitySurvey = interface;
  IRobotBarSectionQuantitySurveyDisp = dispinterface;
  IRobotThicknessQuantitySurvey = interface;
  IRobotThicknessQuantitySurveyDisp = dispinterface;
  IRobotStructureMergeData = interface;
  IRobotStructureMergeDataDisp = dispinterface;
  IRobotParamServer = interface;
  IRobotParamServerDisp = dispinterface;
  IRobotParamSchemaMngr = interface;
  IRobotParamSchemaMngrDisp = dispinterface;
  IRobotParamSchema = interface;
  IRobotParamSchemaDisp = dispinterface;
  IRobotParamSchemaDef = interface;
  IRobotParamSchemaDefDisp = dispinterface;
  IRobotParamDef = interface;
  IRobotParamDefDisp = dispinterface;
  IRobotParamCollection = interface;
  IRobotParamCollectionDisp = dispinterface;
  IRobotCodeCmbActiveCaseInfo = interface;
  IRobotCodeCmbActiveCaseInfoDisp = dispinterface;
  IRobotBarCableData = interface;
  IRobotBarCableDataDisp = dispinterface;
  IRobotLinearReleaseData = interface;
  IRobotLinearReleaseDataDisp = dispinterface;
  IRobotBarElasticGroundData = interface;
  IRobotBarElasticGroundDataDisp = dispinterface;
  IRobotNodeRigidLinkData = interface;
  IRobotNodeRigidLinkDataDisp = dispinterface;
  IRobotNonlinearAnalysisParams = interface;
  IRobotNonlinearAnalysisParamsDisp = dispinterface;
  IRobotCaseAnalysisModesFilter = interface;
  IRobotCaseAnalysisModesFilterDisp = dispinterface;
  IRobotSeismicAnalysis_PS_92_Params = interface;
  IRobotSeismicAnalysis_PS_92_ParamsDisp = dispinterface;
  IRobotSeismicAnalysis_PS_92_SiteEnvelope = interface;
  IRobotSeismicAnalysis_PS_92_SiteEnvelopeDisp = dispinterface;
  IRobotSeismicResidualMode = interface;
  IRobotSeismicResidualModeDisp = dispinterface;
  IRobotSeismicAnalysis_PS_69_Params = interface;
  IRobotSeismicAnalysis_PS_69_ParamsDisp = dispinterface;
  IRobotSeismicAnalysis_P_100_92_Params = interface;
  IRobotSeismicAnalysis_P_100_92_ParamsDisp = dispinterface;
  IRobotSeismicAnalysis_EC_8_Params = interface;
  IRobotSeismicAnalysis_EC_8_ParamsDisp = dispinterface;
  IRobotSeismicAnalysis_EAK_2000_Params = interface;
  IRobotSeismicAnalysis_EAK_2000_ParamsDisp = dispinterface;
  IRobotSeismicAnalysis_P_100_2006_Params = interface;
  IRobotSeismicAnalysis_P_100_2006_ParamsDisp = dispinterface;
  IRobotSeismicAnalysis_IBC_2006_Params = interface;
  IRobotSeismicAnalysis_IBC_2006_ParamsDisp = dispinterface;
  IRobotSeismicAnalysis_IBC_2000_Params = interface;
  IRobotSeismicAnalysis_IBC_2000_ParamsDisp = dispinterface;
  IRobotSeismicAnalysis_UBC_97_Params = interface;
  IRobotSeismicAnalysis_UBC_97_ParamsDisp = dispinterface;
  IRobotSeismicAnalysis_TURKISH_23098_Params = interface;
  IRobotSeismicAnalysis_TURKISH_23098_ParamsDisp = dispinterface;
  IRobotSeismicAnalysis_RPA_88_Params = interface;
  IRobotSeismicAnalysis_RPA_88_ParamsDisp = dispinterface;
  IRobotSeismicAnalysis_DM_16_1_96_Params = interface;
  IRobotSeismicAnalysis_DM_16_1_96_ParamsDisp = dispinterface;
  IRobotSeismicAnalysis_AFPS_90_Params = interface;
  IRobotSeismicAnalysis_AFPS_90_ParamsDisp = dispinterface;
  IRobotSeismicAnalysis_CHINESE_Params = interface;
  IRobotSeismicAnalysis_CHINESE_ParamsDisp = dispinterface;
  IRobotSeismicAnalysis_CIRSOC_103_Params = interface;
  IRobotSeismicAnalysis_CIRSOC_103_ParamsDisp = dispinterface;
  IRobotSpectralAnalysisSpectrum = interface;
  IRobotSpectralAnalysisSpectrumDisp = dispinterface;
  IRobotSpectralAnalysisPointsCollection = interface;
  IRobotSpectralAnalysisPointsCollectionDisp = dispinterface;
  IRobotSpectralAnalysisParams = interface;
  IRobotSpectralAnalysisParamsDisp = dispinterface;
  IRobotNodeCompatibilityData = interface;
  IRobotNodeCompatibilityDataDisp = dispinterface;
  IRobotModalWithStaticForcesAnalysisParams = interface;
  IRobotModalWithStaticForcesAnalysisParamsDisp = dispinterface;
  IRobotKernel = interface;
  IRobotKernelDisp = dispinterface;
  IRobotKernelPreferences = interface;
  IRobotKernelPreferencesDisp = dispinterface;
  IRobotProjectPreferences = interface;
  IRobotProjectPreferencesDisp = dispinterface;
  IRobotSectionDatabaseList = interface;
  IRobotSectionDatabaseListDisp = dispinterface;
  IRobotSectionDatabase = interface;
  IRobotSectionDatabaseDisp = dispinterface;
  IRobotMaterialDatabase = interface;
  IRobotMaterialDatabaseDisp = dispinterface;
  IRobotVehicleDatabaseList = interface;
  IRobotVehicleDatabaseListDisp = dispinterface;
  IRobotVehicleDatabase = interface;
  IRobotVehicleDatabaseDisp = dispinterface;
  IRobotUnitMngr = interface;
  IRobotUnitMngrDisp = dispinterface;
  IRobotUnitEditionServer = interface;
  IRobotUnitEditionServerDisp = dispinterface;
  IRobotUnitEditionData = interface;
  IRobotUnitEditionDataDisp = dispinterface;
  IRobotUnitData = interface;
  IRobotUnitDataDisp = dispinterface;
  IRobotEurocodeFactors = interface;
  IRobotEurocodeFactorsDisp = dispinterface;
  IRobotEurocodeSteelDesignFactors = interface;
  IRobotEurocodeSteelDesignFactorsDisp = dispinterface;
  IRobotEurocodeSteelConnectionFactors = interface;
  IRobotEurocodeSteelConnectionFactorsDisp = dispinterface;
  IRobotComponentFactory = interface;
  IRobotComponentFactoryDisp = dispinterface;
  IRobotCalcEngine = interface;
  IRobotCalcEngineDisp = dispinterface;
  IRobotStructureAnalysisParams = interface;
  IRobotStructureAnalysisParamsDisp = dispinterface;
  IRobotSparseMSolverParams = interface;
  IRobotSparseMSolverParamsDisp = dispinterface;
  IRobotIterativeSolverParams = interface;
  IRobotIterativeSolverParamsDisp = dispinterface;
  IRobotSeismicResultsSaveParams = interface;
  IRobotSeismicResultsSaveParamsDisp = dispinterface;
  IRobotModelGenerationParams = interface;
  IRobotModelGenerationParamsDisp = dispinterface;
  IRobotBucklingDeformationParams = interface;
  IRobotBucklingDeformationParamsDisp = dispinterface;
  IRobotDAMCalcModule = interface;
  IRobotDAMCalcModuleDisp = dispinterface;
  IRobotDAMParams = interface;
  IRobotDAMParamsDisp = dispinterface;
  IRobotDAMNotionalLoads = interface;
  IRobotDAMNotionalLoadsDisp = dispinterface;
  IRobotDAMReducedStiffness = interface;
  IRobotDAMReducedStiffnessDisp = dispinterface;
  IRobotAuthenticateService = interface;
  IRobotAuthenticateServiceDisp = dispinterface;
  IRConcrCalcEngine = interface;
  IRConcrCalcEngineDisp = dispinterface;
  IRConcrSlabRequiredReinfEngine = interface;
  IRConcrSlabRequiredReinfEngineDisp = dispinterface;
  IRConcrSlabRequiredReinfCalcParams = interface;
  IRConcrSlabRequiredReinfCalcParamsDisp = dispinterface;
  IRConcrMemberRequiredReinfEngine = interface;
  IRConcrMemberRequiredReinfEngineDisp = dispinterface;
  IRConcrMemberRequiredReinfCalcParams = interface;
  IRConcrMemberRequiredReinfCalcParamsDisp = dispinterface;
  IRDimMemberType = interface;
  IRDimMemberTypeDisp = dispinterface;
  IRobotBucklingAnalysisParams = interface;
  IRobotBucklingAnalysisParamsDisp = dispinterface;
  IRobotHarmonicAnalysisParams = interface;
  IRobotHarmonicAnalysisParamsDisp = dispinterface;
  IRobotTimeHistoryAnalysisParams = interface;
  IRobotTimeHistoryAnalysisParamsDisp = dispinterface;
  IRobotTimeHistoryNewmarkParams = interface;
  IRobotTimeHistoryNewmarkParamsDisp = dispinterface;
  IRobotTimeHistoryModalDecompositionParams = interface;
  IRobotTimeHistoryModalDecompositionParamsDisp = dispinterface;
  IRobotTimeHistoryNonlinearParams = interface;
  IRobotTimeHistoryNonlinearParamsDisp = dispinterface;
  IRobotTimeHistoryPredictorCorectorParams = interface;
  IRobotTimeHistoryPredictorCorectorParamsDisp = dispinterface;
  IRobotBarElement = interface;
  IRobotBarElementDisp = dispinterface;
  IRobotPushOverAnalysisParams = interface;
  IRobotPushOverAnalysisParamsDisp = dispinterface;
  IRobotSolidPropertiesData = interface;
  IRobotSolidPropertiesDataDisp = dispinterface;
  IRobotNonlinearLinkParamsLinear = interface;
  IRobotNonlinearLinkParamsLinearDisp = dispinterface;
  IRobotNonlinearLinkParamsBLinear = interface;
  IRobotNonlinearLinkParamsBLinearDisp = dispinterface;
  IRobotNonlinearLinkParamsParabolic = interface;
  IRobotNonlinearLinkParamsParabolicDisp = dispinterface;
  IRobotNonlinearLinkParamsPlastic = interface;
  IRobotNonlinearLinkParamsPlasticDisp = dispinterface;
  IRobotNonlinearLinkParamsPlasticHardening = interface;
  IRobotNonlinearLinkParamsPlasticHardeningDisp = dispinterface;
  IRobotNonlinearLinkParamsGapHook = interface;
  IRobotNonlinearLinkParamsGapHookDisp = dispinterface;
  IRobotNonlinearLinkParamsCustom = interface;
  IRobotNonlinearLinkParamsCustomDisp = dispinterface;
  IRobotNonlinearLinkParamsCustomSegment = interface;
  IRobotNonlinearLinkParamsCustomSegmentDisp = dispinterface;
  IRobotBarGeoImperfectionsData = interface;
  IRobotBarGeoImperfectionsDataDisp = dispinterface;
  IRobotSeismicAnalysis_RPS_2000_Params = interface;
  IRobotSeismicAnalysis_RPS_2000_ParamsDisp = dispinterface;
  IRobotSeismicAnalysis_RPA_2003_Params = interface;
  IRobotSeismicAnalysis_RPA_2003_ParamsDisp = dispinterface;
  IRobotSeismicAnalysis_ITALY_ORDINANZA_Params = interface;
  IRobotSeismicAnalysis_ITALY_ORDINANZA_ParamsDisp = dispinterface;
  IRobotSupportEquivalentWallElasticity = interface;
  IRobotSupportEquivalentWallElasticityDisp = dispinterface;
  IRobotSupportEquivalentColumnElasticity = interface;
  IRobotSupportEquivalentColumnElasticityDisp = dispinterface;
  IRobotLoadRecordBarTrapezoidal = interface;
  IRobotLoadRecordBarTrapezoidalDisp = dispinterface;
  IRobotSeismicAnalysis_PS_92_2008_Params = interface;
  IRobotSeismicAnalysis_PS_92_2008_ParamsDisp = dispinterface;
  IRobotSeismicAnalysis_PS_92_2008_SiteEnvelope = interface;
  IRobotSeismicAnalysis_PS_92_2008_SiteEnvelopeDisp = dispinterface;
  IRobotLoadRecordDead = interface;
  IRobotLoadRecordDeadDisp = dispinterface;
  IRobotStoreySelection = interface;
  IRobotStoreySelectionDisp = dispinterface;
  IRobotDynamicAnalysisDamping = interface;
  IRobotDynamicAnalysisDampingDisp = dispinterface;
  IRobotFRFAnalysisParams = interface;
  IRobotFRFAnalysisParamsDisp = dispinterface;
  IRobotFootfallAnalysisNodeSelection = interface;
  IRobotFootfallAnalysisNodeSelectionDisp = dispinterface;
  IRobotFootfallAnalysisModalParams = interface;
  IRobotFootfallAnalysisModalParamsDisp = dispinterface;
  IRobotFootfallAnalysisParams = interface;
  IRobotFootfallAnalysisParamsDisp = dispinterface;
  IRobotTimeHistoryHHTParams = interface;
  IRobotTimeHistoryHHTParamsDisp = dispinterface;
  IRobotTimeHistoryNewmarkAccelParams = interface;
  IRobotTimeHistoryNewmarkAccelParamsDisp = dispinterface;
  _IRobotWindLoadsSimulationParamsEx = interface;
  _IRobotWindLoadsSimulationParamsExDisp = dispinterface;
  IRobotSELFSeismic_ASCE_7_10_Params = interface;
  IRobotSELFSeismic_ASCE_7_10_ParamsDisp = dispinterface;
  IRobotSELFSeismic_EC_8_Params = interface;
  IRobotSELFSeismic_EC_8_ParamsDisp = dispinterface;
  IRobotSELFSeismic_AS_1170_4_Params = interface;
  IRobotSELFSeismic_AS_1170_4_ParamsDisp = dispinterface;
  IRobotSeismicAnalysis_EC8_General_Params = interface;
  IRobotSeismicAnalysis_EC8_General_ParamsDisp = dispinterface;
  IRobotSeismicAnalysis_EC8_Params = interface;
  IRobotSeismicAnalysis_EC8_ParamsDisp = dispinterface;
  _IRobotCalcEngineEvents = dispinterface;
  _IRobotPreferencesEvents = dispinterface;
  IRobotPreferences = interface;
  IRobotPreferencesDisp = dispinterface;
  _IRobotProjectPreferencesEvents = dispinterface;
  IRobotObjectsArray = interface;
  IRobotObjectsArrayDisp = dispinterface;
  IRobotWindow = interface;
  IRobotWindowDisp = dispinterface;
  IRobotSerializable = interface;
  IRobotSerializableDisp = dispinterface;
  IRobotNumbersDictionary = interface;
  IRobotNumbersDictionaryDisp = dispinterface;
  IRobotGeoSegment = interface;
  IRobotGeoSegmentDisp = dispinterface;
  IRobotGeoSegmentLine = interface;
  IRobotGeoSegmentLineDisp = dispinterface;
  IRobotGeoSegmentArc = interface;
  IRobotGeoSegmentArcDisp = dispinterface;
  IRobotGeoPolyline = interface;
  IRobotGeoPolylineDisp = dispinterface;
  IRobotGeoContour = interface;
  IRobotGeoContourDisp = dispinterface;
  IRobotGeoArc = interface;
  IRobotGeoArcDisp = dispinterface;
  IRobotGeoCircle = interface;
  IRobotGeoCircleDisp = dispinterface;
  IRobotObjModifExtrusion = interface;
  IRobotObjModifExtrusionDisp = dispinterface;
  IRobotObjModifLathe = interface;
  IRobotObjModifLatheDisp = dispinterface;
  IRobotObjModifPyramid = interface;
  IRobotObjModifPyramidDisp = dispinterface;
  IRobotObjOperTranslation = interface;
  IRobotObjOperTranslationDisp = dispinterface;
  IRobotObjOperScaling = interface;
  IRobotObjOperScalingDisp = dispinterface;
  IRobotObjOperRotation = interface;
  IRobotObjOperRotationDisp = dispinterface;
  IRobotObjOperMeshing = interface;
  IRobotObjOperMeshingDisp = dispinterface;
  IRobotObjEdge = interface;
  IRobotObjEdgeDisp = dispinterface;
  IRobotObjPart2 = interface;
  IRobotObjPart2Disp = dispinterface;
  IRobotFiniteElement = interface;
  IRobotFiniteElementDisp = dispinterface;
  IRobotFiniteElementNodes = interface;
  IRobotFiniteElementNodesDisp = dispinterface;
  IRobotNonlinearHingeData = interface;
  IRobotNonlinearHingeDataDisp = dispinterface;
  IRobotCladdingData = interface;
  IRobotCladdingDataDisp = dispinterface;
  IRobotPanelCalcModelData = interface;
  IRobotPanelCalcModelDataDisp = dispinterface;
  _IRobotUnitMngrEvents = dispinterface;
  IRobotUnitComplexData = interface;
  IRobotUnitComplexDataDisp = dispinterface;
  IRobotStructureGeoAnalyser = interface;
  IRobotStructureGeoAnalyserDisp = dispinterface;
  IRobotProjectComponent = interface;
  IRobotProjectComponentDisp = dispinterface;
  IRobotProjectComponentMngr = interface;
  IRobotProjectComponentMngrDisp = dispinterface;
  IRobotFileInsertParams = interface;
  IRobotFileInsertParamsDisp = dispinterface;
  _IRobotProjectEvents = dispinterface;
  IRobotProject = interface;
  IRobotProjectDisp = dispinterface;
  _IRobotSMX = interface;
  _IRobotSMXDisp = dispinterface;
  IRobotViewMngr = interface;
  IRobotViewMngrDisp = dispinterface;
  IRobotTable = interface;
  IRobotTableDisp = dispinterface;
  IRobotPrintable = interface;
  IRobotPrintableDisp = dispinterface;
  IRobotTableConfig = interface;
  IRobotTableConfigDisp = dispinterface;
  IRobotTableScreenCaptureParams = interface;
  IRobotTableScreenCaptureParamsDisp = dispinterface;
  IRobotView = interface;
  IRobotViewDisp = dispinterface;
  IRobotViewDisplayParams = interface;
  IRobotViewDisplayParamsDisp = dispinterface;
  IRobotViewDiagramParams = interface;
  IRobotViewDiagramParamsDisp = dispinterface;
  IRobotViewBarMapParams = interface;
  IRobotViewBarMapParamsDisp = dispinterface;
  IRobotViewFeMapParams = interface;
  IRobotViewFeMapParamsDisp = dispinterface;
  IRobotRtfView = interface;
  IRobotRtfViewDisp = dispinterface;
  IRobotView2 = interface;
  IRobotView2Disp = dispinterface;
  IRobotViewPanelCutParams = interface;
  IRobotViewPanelCutParamsDisp = dispinterface;
  IRobotTableFrame = interface;
  IRobotTableFrameDisp = dispinterface;
  IRobotPrintEngine = interface;
  IRobotPrintEngineDisp = dispinterface;
  IRobotPageSetup = interface;
  IRobotPageSetupDisp = dispinterface;
  IRobotVariableMngr = interface;
  IRobotVariableMngrDisp = dispinterface;
  IRobotVariableMngrExtension = interface;
  IRobotReportStdElementRtf = interface;
  IRobotReportStdElementRtfDisp = dispinterface;
  IRobotPageSetupTableOfContents = interface;
  IRobotPageSetupTableOfContentsDisp = dispinterface;
  IRobotScreenCaptureMngr = interface;
  IRobotScreenCaptureMngrDisp = dispinterface;
  IRobotReportTemplateMngr = interface;
  IRobotReportTemplateMngrDisp = dispinterface;
  IRobotReportItemList = interface;
  IRobotReportItemListDisp = dispinterface;
  IRobotReportItem = interface;
  IRobotReportItemDisp = dispinterface;
  IRJointConnectionServer = interface;
  IRJointConnectionServerDisp = dispinterface;
  IRJointConnectionInfo = interface;
  IRJointConnectionInfoDisp = dispinterface;
  IRJointConnection = interface;
  IRJointConnectionDisp = dispinterface;
  IRJointLoad = interface;
  IRJointLoadDisp = dispinterface;
  IRDimServer = interface;
  IRDimServerDisp = dispinterface;
  IRDimMembers = interface;
  IRDimMembersDisp = dispinterface;
  IRDimMember = interface;
  IRDimMemberDisp = dispinterface;
  IRDimStream = interface;
  IRDimStreamDisp = dispinterface;
  IRDimMembDefDataSrv = interface;
  IRDimMembDefDataSrvDisp = dispinterface;
  IRDimMembDefData = interface;
  IRDimMembDefDataDisp = dispinterface;
  IRDimGroups = interface;
  IRDimGroupsDisp = dispinterface;
  IRDimGroup = interface;
  IRDimGroupDisp = dispinterface;
  IRDimGrpProfs = interface;
  IRDimGrpProfsDisp = dispinterface;
  IRDimCalcEngine = interface;
  IRDimCalcEngineDisp = dispinterface;
  IRDimCalcParam = interface;
  IRDimCalcParamDisp = dispinterface;
  IRDimOptimParam = interface;
  IRDimOptimParamDisp = dispinterface;
  IRDimCalcConf = interface;
  IRDimCalcConfDisp = dispinterface;
  IRDimAllRes = interface;
  IRDimAllResDisp = dispinterface;
  IRDimConnection = interface;
  IRDimConnectionDisp = dispinterface;
  IRDimMembSrv = interface;
  IRDimMembSrvDisp = dispinterface;
  IRDimMembDef = interface;
  IRDimMembDefDisp = dispinterface;
  IRDimUnits = interface;
  IRDimUnitsDisp = dispinterface;
  IRDimInternalPoints = interface;
  IRDimInternalPointsDisp = dispinterface;
  IRDimIntPsEditService = interface;
  IRDimIntPsEditServiceDisp = dispinterface;
  IRDimAdjoinParams = interface;
  IRDimAdjoinParamsDisp = dispinterface;
  IRDimAdjoinAutomat = interface;
  IRDimAdjoinAutomatDisp = dispinterface;
  IRDimAdjoinBranch = interface;
  IRDimAdjoinBranchDisp = dispinterface;
  IRDimDeflDisp = interface;
  IRDimDeflDispDisp = dispinterface;
  IRobotStructuralAxisGridMngr = interface;
  IRobotStructuralAxisGridMngrDisp = dispinterface;
  IRobotStructuralAxisGrid = interface;
  IRobotStructuralAxisGridDisp = dispinterface;
  IRobotBackgroundServer = interface;
  IRobotBackgroundServerDisp = dispinterface;
  IRobotBackground = interface;
  IRobotBackgroundDisp = dispinterface;
  IRobotBackgroundInsertParams = interface;
  IRobotBackgroundInsertParamsDisp = dispinterface;
  IRobotBackgroundLayers = interface;
  IRobotBackgroundLayersDisp = dispinterface;
  IRobotBackgroundVisibilityRange = interface;
  IRobotBackgroundVisibilityRangeDisp = dispinterface;
  IRobotSTRParams = interface;
  IRobotSTRParamsDisp = dispinterface;
  IRobotSTRParameter = interface;
  IRobotSTRParameterDisp = dispinterface;
  IRobotStructuralAxisSequenceList = interface;
  IRobotStructuralAxisSequenceListDisp = dispinterface;
  IRobotStructuralAxisGridCartesian = interface;
  IRobotStructuralAxisGridCartesianDisp = dispinterface;
  IRobotSWCodePLParams = interface;
  IRobotSWCodePLParamsDisp = dispinterface;
  IRobotSWCodeFRParams = interface;
  IRobotSWCodeFRParamsDisp = dispinterface;
  IRobotSWCodeECParams = interface;
  IRobotSWCodeECParamsDisp = dispinterface;
  IRobotViewDetailedAnalysis = interface;
  IRobotViewDetailedAnalysisDisp = dispinterface;
  IRobotViewDetailedAnalysisParams = interface;
  IRobotViewDetailedAnalysisParamsDisp = dispinterface;
  IRobotViewScreenCaptureParams = interface;
  IRobotViewScreenCaptureParamsDisp = dispinterface;
  IRobotView3 = interface;
  IRobotView3Disp = dispinterface;
  IRobotViewDiagrams = interface;
  IRobotViewDiagramsDisp = dispinterface;
  IRobotViewBarMaps = interface;
  IRobotViewBarMapsDisp = dispinterface;
  IRobotViewFeMaps = interface;
  IRobotViewFeMapsDisp = dispinterface;
  IRobotViewPanelCuts = interface;
  IRobotViewPanelCutsDisp = dispinterface;
  IRobotViewGlobalAnalysisParams = interface;
  IRobotViewGlobalAnalysisParamsDisp = dispinterface;
  IRobotViewGlobalAnalysisResultsParams = interface;
  IRobotViewGlobalAnalysisResultsParamsDisp = dispinterface;
  IRobotViewGlobalAnalysis = interface;
  IRobotViewGlobalAnalysisDisp = dispinterface;
  IRobotViewInfluenceLines = interface;
  IRobotViewInfluenceLinesDisp = dispinterface;
  IRobotViewInfluenceLinesParams = interface;
  IRobotViewInfluenceLinesParamsDisp = dispinterface;
  IRobotHtmlView = interface;
  IRobotHtmlViewDisp = dispinterface;
  IRDimDetailedRes = interface;
  IRDimDetailedResDisp = dispinterface;
  IRDimMatDef = interface;
  IRDimMatDefDisp = dispinterface;
  IRDimProfDef = interface;
  IRDimProfDefDisp = dispinterface;
  IRDimEffDef = interface;
  IRDimEffDefDisp = dispinterface;
  IRDimGrpRes = interface;
  IRDimGrpResDisp = dispinterface;
  IRDimMembRes = interface;
  IRDimMembResDisp = dispinterface;
  IRDimMembCalc = interface;
  IRDimMembCalcDisp = dispinterface;
  IRDimCalcState = interface;
  IRDimCalcStateDisp = dispinterface;
  IRDimManCalcPar = interface;
  IRDimManCalcParDisp = dispinterface;
  IRDimSimEffDef = interface;
  IRDimSimEffDefDisp = dispinterface;
  IRDimCodeService = interface;
  IRDimCodeServiceDisp = dispinterface;
  IRDimClient = interface;
  IRDimClientDisp = dispinterface;
  IRDimAdjoinService = interface;
  IRDimAdjoinServiceDisp = dispinterface;
  IRDimMembParamsANS = interface;
  IRDimMembParamsANSDisp = dispinterface;
  IRDimCodeResANS_1 = interface;
  IRDimCodeResANS_1Disp = dispinterface;
  IRDimCodeResANS_2 = interface;
  IRDimCodeResANS_2Disp = dispinterface;
  IRDimCodeResANS_3 = interface;
  IRDimCodeResANS_3Disp = dispinterface;
  IRDimMembParamsCM66 = interface;
  IRDimMembParamsCM66Disp = dispinterface;
  IRDimCodeResCM66 = interface;
  IRDimCodeResCM66Disp = dispinterface;
  IRDimMembParamsBS59 = interface;
  IRDimMembParamsBS59Disp = dispinterface;
  IRDimMembParamsBS59_2000 = interface;
  IRDimMembParamsBS59_2000Disp = dispinterface;
  IRDimMembParamsNS34 = interface;
  IRDimMembParamsNS34Disp = dispinterface;
  IRDimMembParamsEC3 = interface;
  IRDimMembParamsEC3Disp = dispinterface;
  IRDimCodeResEC3 = interface;
  IRDimCodeResEC3Disp = dispinterface;
  IRDimMembParamsE32 = interface;
  IRDimMembParamsE32Disp = dispinterface;
  IRDimThinWalledE32 = interface;
  IRDimThinWalledE32Disp = dispinterface;
  IRDimFireResistE32 = interface;
  IRDimFireResistE32Disp = dispinterface;
  IRDimComplexSectE32 = interface;
  IRDimComplexSectE32Disp = dispinterface;
  IRDimCodeResE32_1 = interface;
  IRDimCodeResE32_1Disp = dispinterface;
  IRDimCodeResE32_2 = interface;
  IRDimCodeResE32_2Disp = dispinterface;
  IRDimCodeResE32_3 = interface;
  IRDimCodeResE32_3Disp = dispinterface;
  IRDimCodeResE32_4 = interface;
  IRDimCodeResE32_4Disp = dispinterface;
  IRDimMembParamsE52 = interface;
  IRDimMembParamsE52Disp = dispinterface;
  IRDimCodeResE52 = interface;
  IRDimCodeResE52Disp = dispinterface;
  IRDimMembParamsCB71 = interface;
  IRDimMembParamsCB71Disp = dispinterface;
  IRDimCodeResCB71 = interface;
  IRDimCodeResCB71Disp = dispinterface;
  IRDimMembParamsLRFD = interface;
  IRDimMembParamsLRFDDisp = dispinterface;
  IRDimCodeResLRFD = interface;
  IRDimCodeResLRFDDisp = dispinterface;
  IRJointWeld = interface;
  IRJointWeldDisp = dispinterface;
  IRJointPlate = interface;
  IRJointPlateDisp = dispinterface;
  IRJointKneeDiagonalStiff = interface;
  IRJointKneeDiagonalStiffDisp = dispinterface;
  IRJointBolts = interface;
  IRJointBoltsDisp = dispinterface;
  IRJointKneeBolts = interface;
  IRJointKneeBoltsDisp = dispinterface;
  IRJointKneeBracket = interface;
  IRJointKneeBracketDisp = dispinterface;
  IRJointKneeWebPlate = interface;
  IRJointKneeWebPlateDisp = dispinterface;
  IRJointKneeCodeParamsPN90 = interface;
  IRJointKneeCodeParamsPN90Disp = dispinterface;
  IRJointKneeCodeParamsCM66 = interface;
  IRJointKneeCodeParamsCM66Disp = dispinterface;
  IRJointKneeCodeParamsEC32 = interface;
  IRJointKneeCodeParamsEC32Disp = dispinterface;
  IRJointKnee = interface;
  IRJointKneeDisp = dispinterface;
  IRJointKneeStiffColumn = interface;
  IRJointKneeStiffColumnDisp = dispinterface;
  IRJointProfile = interface;
  IRJointProfileDisp = dispinterface;
  IRJointKneeLoad = interface;
  IRJointKneeLoadDisp = dispinterface;
  IRJointAnchorBolt = interface;
  IRJointAnchorBoltDisp = dispinterface;
  IRJointAnchorPlate = interface;
  IRJointAnchorPlateDisp = dispinterface;
  IRJointAnchor = interface;
  IRJointAnchorDisp = dispinterface;
  IRJointFootBolts = interface;
  IRJointFootBoltsDisp = dispinterface;
  IRJointFootPlate = interface;
  IRJointFootPlateDisp = dispinterface;
  IRJointWedge = interface;
  IRJointWedgeDisp = dispinterface;
  IRJointBearingPlate = interface;
  IRJointBearingPlateDisp = dispinterface;
  IRJointFootWelds = interface;
  IRJointFootWeldsDisp = dispinterface;
  IRJointColumnBracket = interface;
  IRJointColumnBracketDisp = dispinterface;
  IRJointPinnedColumnBase = interface;
  IRJointPinnedColumnBaseDisp = dispinterface;
  IRJointFootStiffenerHoriz = interface;
  IRJointFootStiffenerHorizDisp = dispinterface;
  IRJointFootStiffenerVert = interface;
  IRJointFootStiffenerVertDisp = dispinterface;
  IRJointFootMaterials = interface;
  IRJointFootMaterialsDisp = dispinterface;
  IRJointColumnSquare = interface;
  IRJointColumnSquareDisp = dispinterface;
  IRJointColumnBFoundation = interface;
  IRJointColumnBFoundationDisp = dispinterface;
  IRJointFootStiffenerSimple = interface;
  IRJointFootStiffenerSimpleDisp = dispinterface;
  IRJointFootStiffenerTrapezoid = interface;
  IRJointFootStiffenerTrapezoidDisp = dispinterface;
  IRJointPinnedLoad = interface;
  IRJointPinnedLoadDisp = dispinterface;
  IRJointFootStiffenerComplex = interface;
  IRJointFootStiffenerComplexDisp = dispinterface;
  IRJointFixedColumnBase = interface;
  IRJointFixedColumnBaseDisp = dispinterface;
  IRJointFixedFootWelds = interface;
  IRJointFixedFootWeldsDisp = dispinterface;
  IRJointFixedLoad = interface;
  IRJointFixedLoadDisp = dispinterface;
  IRJointConcreteMaterials = interface;
  IRJointConcreteMaterialsDisp = dispinterface;
  IRJointConcreteColumn = interface;
  IRJointConcreteColumnDisp = dispinterface;
  IRJointConcreteColumnFoundation = interface;
  IRJointConcreteColumnFoundationDisp = dispinterface;
  IRJointConcreteColumnLoad = interface;
  IRJointConcreteColumnLoadDisp = dispinterface;
  IRJointAngleBolts = interface;
  IRJointAngleBoltsDisp = dispinterface;
  IRJointAngle = interface;
  IRJointAngleDisp = dispinterface;
  IRJointBeamCut = interface;
  IRJointBeamCutDisp = dispinterface;
  IRJointWithAngles = interface;
  IRJointWithAnglesDisp = dispinterface;
  IRJointAngleLoad = interface;
  IRJointAngleLoadDisp = dispinterface;
  IRJointTubeFlangeProfile = interface;
  IRJointTubeFlangeProfileDisp = dispinterface;
  IRJointTubeDiagProfile = interface;
  IRJointTubeDiagProfileDisp = dispinterface;
  IRJointTubePostProfile = interface;
  IRJointTubePostProfileDisp = dispinterface;
  IRJointTube = interface;
  IRJointTubeDisp = dispinterface;
  IRJointTubeLoad = interface;
  IRJointTubeLoadDisp = dispinterface;
  IRJointGussetBoltsDiag = interface;
  IRJointGussetBoltsDiagDisp = dispinterface;
  IRJointGussetWeldsDiag = interface;
  IRJointGussetWeldsDiagDisp = dispinterface;
  IRJointGussetDiagonale = interface;
  IRJointGussetDiagonaleDisp = dispinterface;
  IRJointGussetSimple = interface;
  IRJointGussetSimpleDisp = dispinterface;
  IRJointGussetSimplePlate = interface;
  IRJointGussetSimplePlateDisp = dispinterface;
  IRJointGussetSimpleAttachment = interface;
  IRJointGussetSimpleAttachmentDisp = dispinterface;
  IRJointGussetSimpleAttachBolts = interface;
  IRJointGussetSimpleAttachBoltsDisp = dispinterface;
  IRJointGussetSimpleAttachBoltsHorizontal = interface;
  IRJointGussetSimpleAttachBoltsHorizontalDisp = dispinterface;
  IRJointGussetSimpleAttachBoltsVertical = interface;
  IRJointGussetSimpleAttachBoltsVerticalDisp = dispinterface;
  IRJointGussetSimpleAttachWelds = interface;
  IRJointGussetSimpleAttachWeldsDisp = dispinterface;
  IRJointGussetCrossPlate = interface;
  IRJointGussetCrossPlateDisp = dispinterface;
  IRJointGussetCross = interface;
  IRJointGussetCrossDisp = dispinterface;
  IRJointGussetFlangePlate = interface;
  IRJointGussetFlangePlateDisp = dispinterface;
  IRJointGussetFlange = interface;
  IRJointGussetFlangeDisp = dispinterface;
  IRJointGussetSimpleLoad = interface;
  IRJointGussetSimpleLoadDisp = dispinterface;
  IRJointGussetCrossLoad = interface;
  IRJointGussetCrossLoadDisp = dispinterface;
  IRJointGussetFlangeLoad = interface;
  IRJointGussetFlangeLoadDisp = dispinterface;
  IRJointMainBolts = interface;
  IRJointMainBoltsDisp = dispinterface;
  IRJointBeamBolts = interface;
  IRJointBeamBoltsDisp = dispinterface;
  IRJointBeamGirderSeatBolts = interface;
  IRJointBeamGirderSeatBoltsDisp = dispinterface;
  IRJointBeamGirderBeam = interface;
  IRJointBeamGirderBeamDisp = dispinterface;
  IRJointBeamGirderAngle = interface;
  IRJointBeamGirderAngleDisp = dispinterface;
  IRJointBeamPlate = interface;
  IRJointBeamPlateDisp = dispinterface;
  IRJointBeamGirderSeat = interface;
  IRJointBeamGirderSeatDisp = dispinterface;
  IRJointBeamGirderStiffener = interface;
  IRJointBeamGirderStiffenerDisp = dispinterface;
  IRJointBeamGirder = interface;
  IRJointBeamGirderDisp = dispinterface;
  IRJointBeamGirderLoad = interface;
  IRJointBeamGirderLoadDisp = dispinterface;
  IRJointBeamColumn = interface;
  IRJointBeamColumnDisp = dispinterface;
  IRJointBeamAngle = interface;
  IRJointBeamAngleDisp = dispinterface;
  IRJointBeamSeatL = interface;
  IRJointBeamSeatLDisp = dispinterface;
  IRJointBeamSeatMainBolts = interface;
  IRJointBeamSeatMainBoltsDisp = dispinterface;
  IRJointBeamSeatT = interface;
  IRJointBeamSeatTDisp = dispinterface;
  IRJointBeamColumnFlangePlate = interface;
  IRJointBeamColumnFlangePlateDisp = dispinterface;
  IRJointSplice = interface;
  IRJointSpliceDisp = dispinterface;
  IRJointSplicePlate = interface;
  IRJointSplicePlateDisp = dispinterface;
  IRJointSpliceBolts = interface;
  IRJointSpliceBoltsDisp = dispinterface;
  IRJointSpliceWelds = interface;
  IRJointSpliceWeldsDisp = dispinterface;
  IRJointSpliceLoad = interface;
  IRJointSpliceLoadDisp = dispinterface;
  IRJointTie = interface;
  IRJointTieDisp = dispinterface;
  IRJointTieStiffeners = interface;
  IRJointTieStiffenersDisp = dispinterface;
  IRJointTiePlates = interface;
  IRJointTiePlatesDisp = dispinterface;
  IRJointTieConnectors = interface;
  IRJointTieConnectorsDisp = dispinterface;
  IRJointTieBolts = interface;
  IRJointTieBoltsDisp = dispinterface;
  IRJointTieWelds = interface;
  IRJointTieWeldsDisp = dispinterface;
  IRJointTieLoad = interface;
  IRJointTieLoadDisp = dispinterface;
  IRConcrBarSectionData = interface;
  IRConcrBarSectionDataDisp = dispinterface;
  IRBestParamSet = interface;
  IRBestParamSetDisp = dispinterface;
  IRBestCalcParamsData = interface;
  IRBestCalcParamsDataDisp = dispinterface;
  IRBestCalcParamsDataList = interface;
  IRBestCalcParamsDataListDisp = dispinterface;
  IRBestMemberData = interface;
  IRBestMemberDataDisp = dispinterface;
  IRBestResults = interface;
  IRBestResultsDisp = dispinterface;
  IRBestForceData = interface;
  IRBestForceDataDisp = dispinterface;
  IRBestDimParams = interface;
  IRBestDimParamsDisp = dispinterface;
  IRBestMemberDlg = interface;
  IRBestCalcParamsDlg = interface;
  IRBestPlateCalcParamsDlg = interface;
  IRBestCodeCalcEngine = interface;
  IRBestCodeService = interface;
  IRBestCodeServiceExt = interface;
  IRConcrPlateCodeService2 = interface;
  IRConcrPlateCodeService2Disp = dispinterface;
  IRBestCodeService2 = interface;
  IRBestCodeService2Disp = dispinterface;
  IRobotCodeRegistrar = interface;
  IRobotCodeRegistrarDisp = dispinterface;
  IRobotAddInRegistrar = interface;
  IRobotAddInRegistrarDisp = dispinterface;
  IRobotCmdList = interface;
  IRobotCmdListDisp = dispinterface;
  IRobotCmdInfo = interface;
  IRobotCmdInfoDisp = dispinterface;
  IRobotAddInMngr = interface;
  IRobotAddInMngrDisp = dispinterface;
  IRConcrReinforceData = interface;
  IRConcrReinforceDataDisp = dispinterface;
  IRConcrReinforceData2 = interface;
  IRConcrReinforceData2Disp = dispinterface;
  IRConcrSteelParams = interface;
  IRConcrSteelParamsDisp = dispinterface;
  IRConcrConcreteParams = interface;
  IRConcrConcreteParamsDisp = dispinterface;
  IRConcrReinforceDataMain = interface;
  IRConcrReinforceDataMainDisp = dispinterface;
  IRConcr_PN84_ReinforceData = interface;
  IRConcr_PN84_ReinforceDataDisp = dispinterface;
  IRConcr_PN99_ReinforceData = interface;
  IRConcr_PN99_ReinforceDataDisp = dispinterface;
  IRConcr_BAEL_ReinforceData = interface;
  IRConcr_BAEL_ReinforceDataDisp = dispinterface;
  IRConcr_ACI318_ReinforceData = interface;
  IRConcr_ACI318_ReinforceDataDisp = dispinterface;
  IRConcr_ACI318_ConcreteParams = interface;
  IRConcr_ACI318_ConcreteParamsDisp = dispinterface;
  IRConcr_BS8110_ReinforceData = interface;
  IRConcr_BS8110_ReinforceDataDisp = dispinterface;
  _IRConcrSlabRequiredReinfEngineEvents = dispinterface;
  IRConcr_SNIP_ConcreteParams = interface;
  IRConcr_SNIP_ConcreteParamsDisp = dispinterface;
  IRConcr_SNIP_ReinforceData = interface;
  IRConcr_SNIP_ReinforceDataDisp = dispinterface;
  IRConcr_EC2_ReinforceData = interface;
  IRConcr_EC2_ReinforceDataDisp = dispinterface;
  IRConcr_IS2000_ReinforceData = interface;
  IRConcr_IS2000_ReinforceDataDisp = dispinterface;
  IRConcrColumnBucklingModel = interface;
  IRConcrColumnBucklingModelDisp = dispinterface;
  IRConcrColumnLoads = interface;
  IRConcrColumnLoadsDisp = dispinterface;
  IRConcrColumnLoad = interface;
  IRConcrColumnLoadDisp = dispinterface;
  IRConcrCodeReport = interface;
  IRConcrCodeReportDisp = dispinterface;
  IRobotApplication = interface;
  IRobotApplicationDisp = dispinterface;
  IRobotAddIn = interface;
  IRobotProtectionInfo = interface;
  IRobotProtectionInfoDisp = dispinterface;
  IRobotSTRFileAnalyser = interface;
  IRobotSTRFileAnalyserDisp = dispinterface;
  IRConcrBarDiameters = interface;
  IRConcrBarDiametersDisp = dispinterface;
  IRConcrSteelStrengths = interface;
  IRConcrSteelStrengthsDisp = dispinterface;
  IRConcrConcrete = interface;
  IRConcrConcreteDisp = dispinterface;
  IRConcrSteelNames = interface;
  IRConcrSteelNamesDisp = dispinterface;
  IRConcrSteel = interface;
  IRConcrSteelDisp = dispinterface;
  IRConcrReinforcingBar = interface;
  IRConcrReinforcingBarDisp = dispinterface;
  IRConcrReinforcingBars = interface;
  IRConcrReinforcingBarsDisp = dispinterface;
  IRConcrReinforcement = interface;
  IRConcrReinforcementDisp = dispinterface;
  IRConcrCodeBeam = interface;
  IRConcrCodeBeamDisp = dispinterface;
  IRConcrBeam = interface;
  IRConcrBeamDisp = dispinterface;
  IRConcrBeamGeometry = interface;
  IRConcrBeamGeometryDisp = dispinterface;
  IRConcrBeamSpan = interface;
  IRConcrBeamSpanDisp = dispinterface;
  IRConcrBeamSegment = interface;
  IRConcrBeamSegmentDisp = dispinterface;
  IRConcrBeamSupport = interface;
  IRConcrBeamSupportDisp = dispinterface;
  IRConcrBeamImportOptions = interface;
  IRConcrBeamImportOptionsDisp = dispinterface;
  IRConcrBeamCalcOptions = interface;
  IRConcrBeamCalcOptionsDisp = dispinterface;
  IRConcrBeamPatternOptions = interface;
  IRConcrBeamPatternOptionsDisp = dispinterface;
  IRConcrBeamPointLoad = interface;
  IRConcrBeamPointLoadDisp = dispinterface;
  IRConcrBeamSpanNumbers = interface;
  IRConcrBeamSpanNumbersDisp = dispinterface;
  IRConcrBeamLinearLoad = interface;
  IRConcrBeamLinearLoadDisp = dispinterface;
  IRConcrBeamStoryOptions = interface;
  IRConcrBeamStoryOptionsDisp = dispinterface;
  IRConcrCodeColumn = interface;
  IRConcrCodeColumnDisp = dispinterface;
  IRConcrColumn = interface;
  IRConcrColumnDisp = dispinterface;
  IRConcrColumnGeometry = interface;
  IRConcrColumnGeometryDisp = dispinterface;
  IRConcrColumnImportOptions = interface;
  IRConcrColumnImportOptionsDisp = dispinterface;
  IRConcrColumnCalcOptions = interface;
  IRConcrColumnCalcOptionsDisp = dispinterface;
  IRConcrColumnPatternOptions = interface;
  IRConcrColumnPatternOptionsDisp = dispinterface;
  IRConcrCodeService = interface;
  IRConcrCodeServiceDisp = dispinterface;
  IRConcrContinuousFootingSegment = interface;
  IRConcrContinuousFootingSegmentDisp = dispinterface;
  IRConcrContinuousFootingSupport = interface;
  IRConcrContinuousFootingSupportDisp = dispinterface;
  IRConcrContinuousFootingSpan = interface;
  IRConcrContinuousFootingSpanDisp = dispinterface;
  IRConcrContinuousFootingGeometry = interface;
  IRConcrContinuousFootingGeometryDisp = dispinterface;
  IRConcrContinuousFooting = interface;
  IRConcrContinuousFootingDisp = dispinterface;
  IRConcrFootingPattern = interface;
  IRConcrFootingPatternDisp = dispinterface;
  IRConcrFootingCalculationOptions = interface;
  IRConcrFootingCalculationOptionsDisp = dispinterface;
  IRConcrFootingResults = interface;
  IRConcrFootingResultsDisp = dispinterface;
  IRConcrFootingLoads = interface;
  IRConcrFootingLoadsDisp = dispinterface;
  IRConcrFootingGround = interface;
  IRConcrFootingGroundDisp = dispinterface;
  IRConcrFootingGeometry = interface;
  IRConcrFootingGeometryDisp = dispinterface;
  IRConcrFooting = interface;
  IRConcrFootingDisp = dispinterface;
  IRConcrDrawingBarGroup = interface;
  IRConcrDrawingBarGroupDisp = dispinterface;
  IRConcrDrawing = interface;
  IRConcrDrawingDisp = dispinterface;
  IRConcrSlabWizard = interface;
  IRConcrSlabWizardDisp = dispinterface;
  IRConcrSlabPatternOptions = interface;
  IRConcrSlabPatternOptionsDisp = dispinterface;
  IRConcrSlabGeometry = interface;
  IRConcrSlabGeometryDisp = dispinterface;
  IRConcrSlabCalculationOptions = interface;
  IRConcrSlabCalculationOptionsDisp = dispinterface;
  IRConcrSlab = interface;
  IRConcrSlabDisp = dispinterface;
  IRConcrWallOpening = interface;
  IRConcrWallOpeningDisp = dispinterface;
  IRConcrWallOpenings = interface;
  IRConcrWallOpeningsDisp = dispinterface;
  IRConcrWallGeometry = interface;
  IRConcrWallGeometryDisp = dispinterface;
  IRConcrWall = interface;
  IRConcrWallDisp = dispinterface;
  IRConcrDeepBeamGeometry = interface;
  IRConcrDeepBeamGeometryDisp = dispinterface;
  IRConcrDeepBeam = interface;
  IRConcrDeepBeamDisp = dispinterface;

// *********************************************************************//
// Declaration of CoClasses defined in Type Library                       
// (NOTE: Here we map each CoClass to its Default Interface)              
// *********************************************************************//
  DontUseIt = IDontUseIt;
  RobotLabel = IRobotLabel;
  RobotLabelServer = IRobotLabelServer;
  RobotLabelCollection = IRobotCollection;
  RobotObjectLabelCollection = IRobotCollection;
  RobotLoadRecord = IRobotLoadRecord2;
  RobotLoadRecordMngr = IRobotLoadRecordMngr;
  RobotLoadRecordLinear = IRobotLoadRecordLinear;
  RobotLoadRecordLinear3D = IRobotLoadRecordLinear3D;
  RobotLoadRecordIn3Points = IRobotLoadRecordIn3Points;
  RobotLoadRecordThermalIn3Points = IRobotLoadRecordThermalIn3Points;
  RobotLoadRecordInContour = IRobotLoadRecordInContour;
  RobotSimpleCase = IRobotSimpleCase;
  RobotCaseCombination = IRobotCaseCombination;
  RobotCaseCollection = IRobotCaseCollection;
  RobotCaseFactor = IRobotCaseFactor;
  RobotCaseFactorMngr = IRobotCaseFactorMngr;
  RobotCaseServer = IRobotCaseServer;
  RobotCodeCmbComponentMngr = IRobotCodeCmbComponentMngr;
  RobotCodeCombination = IRobotCodeCombination;
  RobotCodeCmbFactor = IRobotCodeCmbFactor;
  RobotCodeCmbComponent = IRobotCodeCmbComponent;
  RobotCodeCombinationEngine = IRobotCodeCombinationEngine;
  RobotMobileCase = IRobotMobileCase;
  RobotMobileCaseComponentMngr = IRobotMobileCaseComponentMngr;
  RobotMobileCaseComponent = IRobotMobileCaseComponent;
  RobotMobileCaseRoute = IRobotMobileCaseRoute;
  RobotMobileCaseSegmentFactors = IRobotMobileCaseSegmentFactors;
  RobotNode = IRobotNode;
  RobotNodeCollection = IRobotCollection;
  RobotNodeServer = IRobotNodeServer;
  RobotNodeSupport = IRobotLabel;
  RobotNodeSupportData = IRobotNodeSupportData;
  RobotBarEnd = IRobotBarEnd;
  RobotBar = IRobotBar;
  RobotBarCollection = IRobotCollection;
  RobotBarServer = IRobotBarServer;
  RobotBarReleaseData = IRobotBarReleaseData;
  RobotBarEndReleaseData = IRobotBarEndReleaseData;
  RobotBarRelease = IRobotLabel;
  RobotMaterialData = IRobotMaterialData;
  RobotBarMaterial = IRobotLabel;
  RobotBarSectionNonstdData = IRobotBarSectionNonstdData;
  RobotBarSectionData = IRobotBarSectionData;
  RobotBarSection = IRobotLabel;
  RobotBarEndBracketData = IRobotBarEndBracketData;
  RobotBarEndOffsetData = IRobotBarEndOffsetData;
  RobotBarOffsetData = IRobotBarOffsetData;
  RobotThicknessData = IRobotThicknessData;
  RobotThicknessHomoData = IRobotThicknessHomoData;
  RobotThicknessMatrix = IRobotThicknessMatrix;
  RobotThicknessOrthoData = IRobotThicknessOrthoData;
  RobotResultServer = IRobotResultServer;
  RobotNodeResultServer = IRobotNodeResultServer;
  RobotReactionServer = IRobotReactionServer;
  RobotReactionData = IRobotReactionData;
  RobotNodeDisplacementServer = IRobotNodeDisplacementServer;
  RobotNodeDisplacementData = IRobotDisplacementData;
  RobotBarResultServer = IRobotBarResultServer;
  RobotBarForceServer = IRobotBarForceServer;
  RobotBarForceData = IRobotBarForceData;
  RobotBarStressData = IRobotBarStressData;
  RobotBarStressServer = IRobotBarStressServer;
  RobotBarDeflectionData = IRobotBarDeflectionData;
  RobotBarDeflectionServer = IRobotBarDeflectionServer;
  RobotBarBucklingData = IRobotBarBucklingData;
  RobotBarBucklingServer = IRobotBarBucklingServer;
  RobotNodeBucklingServer = IRobotNodeBucklingServer;
  RobotEigenvalues = IRobotEigenvalues;
  RobotEigenvaluesServer = IRobotEigenvaluesServer;
  RobotAdvancedResultServer = IRobotAdvancedResultServer;
  RobotMassSumServer = IRobotMassSumServer;
  RobotSpectralCoefficients = IRobotSpectralCoefficients;
  RobotEigenvectorsServer = IRobotEigenvectorsServer;
  RobotVehicleData = IRobotVehicleData;
  RobotVehicleLoadMngr = IRobotVehicleLoadMngr;
  RobotVehicleLoad = IRobotVehicleLoad;
  RobotStructure = IRobotStructure;
  RobotForcesData = IRobotForcesData;
  RobotPseudostaticForceServer = IRobotPseudostaticForceServer;
  RobotDisplacementData = IRobotDisplacementData;
  RobotUniversalResultAccess = IRobotUniversalResultAccess;
  RobotCodeCmbRegulations = IRobotCodeCmbRegulations;
  RobotCodeCmbActionServer = IRobotCodeCmbActionServer;
  RobotCodeCmbCombs = IRobotCodeCmbCombs;
  RobotCodeCmbGenerationParams = IRobotCodeCmbGenerationParams;
  RobotCodeCmbGroup = IRobotCodeCmbGroup;
  RobotCodeCmbGroupServer = IRobotCodeCmbGroupServer;
  RobotCodeCmbGroupRelation = IRobotCodeCmbGroupRelation;
  RobotCodeCmbGroupRelationServer = IRobotCodeCmbGroupRelationServer;
  RobotCodeCmbActiveCaseInfo = IRobotCodeCmbActiveCaseInfo;
  RobotCodeCmbActiveCaseCollection = IRobotCollection;
  RobotModalAnalysisParams = IRobotModalAnalysisParams;
  RobotModalAnalysisBase = IRobotModalAnalysisBase;
  RobotModalAnalysisLimits = IRobotModalAnalysisLimits;
  RobotModalAnalysisShifts = IRobotModalAnalysisShifts;
  RobotBarCableData = IRobotBarCableData;
  RobotLinearReleaseData = IRobotLinearReleaseData;
  RobotBarElasticGroundData = IRobotBarElasticGroundData;
  RobotNodeRigidLinkData = IRobotNodeRigidLinkData;
  RobotNonlinearAnalysisParams = IRobotNonlinearAnalysisParams;
  RobotNodeRigidLinkDef = IRobotNodeRigidLinkDef;
  RobotNodeRigidLinkServer = IRobotNodeRigidLinkServer;
  RobotCaseAnalysisModesFilter = IRobotCaseAnalysisModesFilter;
  RobotSeismicAnalysis_PS_92_Params = IRobotSeismicAnalysis_PS_92_Params;
  RobotSeismicAnalysis_PS_92_SiteEnvelope = IRobotSeismicAnalysis_PS_92_SiteEnvelope;
  RobotDynamicAnalysisExcitationDirection = IRobotDynamicAnalysisExcitationDirection;
  RobotSeismicAnalysis_PS_69_Params = IRobotSeismicAnalysis_PS_69_Params;
  RobotSeismicAnalysis_P_100_92_Params = IRobotSeismicAnalysis_P_100_92_Params;
  RobotSeismicAnalysis_EC_8_Params = IRobotSeismicAnalysis_EC_8_Params;
  RobotSeismicAnalysis_EAK_2000_Params = IRobotSeismicAnalysis_EAK_2000_Params;
  RobotSeismicAnalysis_P_100_2006_Params = IRobotSeismicAnalysis_P_100_2006_Params;
  RobotSeismicAnalysis_IBC_2006_Params = IRobotSeismicAnalysis_IBC_2006_Params;
  RobotSeismicAnalysis_IBC_2000_Params = IRobotSeismicAnalysis_IBC_2000_Params;
  RobotSeismicAnalysis_UBC_97_Params = IRobotSeismicAnalysis_UBC_97_Params;
  RobotSeismicAnalysis_TURKISH_23098_Params = IRobotSeismicAnalysis_TURKISH_23098_Params;
  RobotSeismicAnalysis_RPA_88_Params = IRobotSeismicAnalysis_RPA_88_Params;
  RobotSeismicAnalysis_DM_16_1_96_Params = IRobotSeismicAnalysis_DM_16_1_96_Params;
  RobotSeismicAnalysis_AFPS_90_Params = IRobotSeismicAnalysis_AFPS_90_Params;
  RobotSeismicAnalysis_CHINESE_Params = IRobotSeismicAnalysis_CHINESE_Params;
  RobotSeismicAnalysis_CIRSOC_103_Params = IRobotSeismicAnalysis_CIRSOC_103_Params;
  RobotSpectralAnalysisSpectrum = IRobotSpectralAnalysisSpectrum;
  RobotSpectralAnalysisParams = IRobotSpectralAnalysisParams;
  RobotBarDisplacementServer = IRobotBarDisplacementServer;
  RobotNodeCompatibilityData = IRobotNodeCompatibilityData;
  RobotNodeCompatibilityDef = IRobotNodeCompatibilityDef;
  RobotNodeCompatibilityServer = IRobotNodeCompatibilityServer;
  RobotModalWithStaticForcesAnalysisParams = IRobotModalWithStaticForcesAnalysisParams;
  RobotBarSectionConcreteData = IRobotBarSectionConcreteData;
  RobotAppKernel = IRobotKernel;
  RobotAppAuthenticateService = IRobotAuthenticateService;
  RDimMemberType = IRDimMemberType;
  RobotBucklingAnalysisParams = IRobotBucklingAnalysisParams;
  RobotHarmonicAnalysisParams = IRobotHarmonicAnalysisParams;
  RobotLimits = IRobotModalAnalysisLimits;
  RobotTimeHistoryAnalysisParams = IRobotTimeHistoryAnalysisParams;
  RobotTimeHistoryNewmarkParams = IRobotTimeHistoryNewmarkParams;
  RobotTimeHistoryModalDecompositionParams = IRobotTimeHistoryModalDecompositionParams;
  RobotTimeHistoryPointsCollection = IRobotTimeHistoryPointsCollection;
  RobotTimeHistoryFunctionList = IRobotTimeHistoryFunctionList;
  RobotTimeHistoryNonlinearParams = IRobotTimeHistoryNonlinearParams;
  RobotTimeHistoryPredictorCorectorParams = IRobotTimeHistoryPredictorCorectorParams;
  RobotBarElement = IRobotBarElement;
  RobotBarElementCollection = IRobotCollection;
  RobotPushOverAnalysisParams = IRobotPushOverAnalysisParams;
  RobotSolidPropertiesData = IRobotSolidPropertiesData;
  RobotNonlinearLinkServer = IRobotNonlinearLinkServer;
  RobotNonlinearLink = IRobotNonlinearLink;
  RobotNonlinearLinkParamsLinear = IRobotNonlinearLinkParamsLinear;
  RobotNonlinearLinkParamsBLinear = IRobotNonlinearLinkParamsBLinear;
  RobotNonlinearLinkParamsParabolic = IRobotNonlinearLinkParamsParabolic;
  RobotNonlinearLinkParamsPlastic = IRobotNonlinearLinkParamsPlastic;
  RobotNonlinearLinkParamsPlasticHardening = IRobotNonlinearLinkParamsPlasticHardening;
  RobotNonlinearLinkParamsGapHook = IRobotNonlinearLinkParamsGapHook;
  RobotNonlinearLinkParamsCustom = IRobotNonlinearLinkParamsCustom;
  RobotNonlinearLinkParamsCustomSegment = IRobotNonlinearLinkParamsCustomSegment;
  RobotNonlinearLinkMngr = IRobotNonlinearLinkMngr;
  RobotBarGeoImperfectionsData = IRobotBarGeoImperfectionsData;
  RobotTimeHistoryResults = IRobotTimeHistoryResults;
  RobotTimeHistoryResultServer = IRobotTimeHistoryResultServer;
  RobotExtremeValue = IRobotExtremeValue;
  RobotExtremeParams = IRobotExtremeParams;
  RobotExtremeResultServer = IRobotExtremeResultServer;
  RobotStructureEditTools = IRobotStructureEditTools;
  RobotStructureCache = IRobotStructureCache;
  RobotStructureApplyInfo = IRobotStructureApplyInfo;
  RobotBarSectionComplexData = IRobotBarSectionComplexData;
  RobotSeismicAnalysis_RPS_2000_Params = IRobotSeismicAnalysis_RPS_2000_Params;
  RobotSeismicAnalysis_RPA_2003_Params = IRobotSeismicAnalysis_RPA_2003_Params;
  RobotStorey = IRobotStorey;
  RobotStoreyMngr = IRobotStoreyMngr;
  RobotMassEccentricities = IRobotMassEccentricities;
  RobotSeismicAnalysis_ITALY_ORDINANZA_Params = IRobotSeismicAnalysis_ITALY_ORDINANZA_Params;
  RobotGroupObjectServer = IRobotGroupObjectServer;
  RobotStructureValues = IRobotStructureValues;
  RobotMaterialQuantitySurvey = IRobotMaterialQuantitySurvey;
  RobotBarSectionQuantitySurvey = IRobotBarSectionQuantitySurvey;
  RobotThicknessQuantitySurvey = IRobotThicknessQuantitySurvey;
  RobotStructureQuantitySurvey = IRobotStructureQuantitySurvey;
  RobotStructureMergeData = IRobotStructureMergeData;
  RobotResultQueryParams = IRobotResultQueryParams;
  RobotSupportEquivalentWallElasticity = IRobotSupportEquivalentWallElasticity;
  RobotSupportEquivalentColumnElasticity = IRobotSupportEquivalentColumnElasticity;
  RobotAdvancedSupportData = IRobotAdvancedSupportData;
  RobotLoadRecordBarTrapezoidal = IRobotLoadRecordBarTrapezoidal;
  RobotBarSectionSpecialData = IRobotBarSectionSpecialData;
  RobotSeismicAnalysis_PS_92_2008_Params = IRobotSeismicAnalysis_PS_92_2008_Params;
  RobotSeismicAnalysis_PS_92_2008_SiteEnvelope = IRobotSeismicAnalysis_PS_92_2008_SiteEnvelope;
  RobotLoadRecordDead = IRobotLoadRecordDead;
  RobotStoreySelection = IRobotStoreySelection;
  RobotDynamicAnalysisDamping = IRobotDynamicAnalysisDamping;
  RobotFRFAnalysisParams = IRobotFRFAnalysisParams;
  RobotFootfallAnalysisNodeSelection = IRobotFootfallAnalysisNodeSelection;
  RobotFootfallAnalysisModalParams = IRobotFootfallAnalysisModalParams;
  RobotFootfallAnalysisParams = IRobotFootfallAnalysisParams;
  RobotFRFResults = IRobotFRFResults;
  RobotFRFResultServer = IRobotFRFResultServer;
  RobotFootfallResults = IRobotFootfallResults;
  RobotStoreyValues = IRobotStoreyValues;
  RobotStoreyReducedForces = IRobotStoreyReducedForces;
  RobotStoreyDisplacements = IRobotStoreyDisplacements;
  RobotStoreyResultServer = IRobotStoreyResultServer;
  RobotTimeHistoryHHTParams = IRobotTimeHistoryHHTParams;
  RobotTimeHistoryNewmarkAccelParams = IRobotTimeHistoryNewmarkAccelParams;
  RobotSELFSeismicEngine = IRobotSELFSeismicEngine;
  RobotWindLoadsSimulationParams = IRobotWindLoadsSimulationParams;
  RobotWindLoadsSimulationEngine = IRobotWindLoadsSimulationEngine;
  RobotSELFSeismicGenerationParams = IRobotSELFSeismicGenerationParams;
  RobotSELFSeismicStructureParams = IRobotSELFSeismicStructureParams;
  RobotSELFSeismicAnalysisParams = IRobotSELFSeismicAnalysisParams;
  RobotSELFSeismic_ASCE_7_10_Params = IRobotSELFSeismic_ASCE_7_10_Params;
  RobotSELFSeismic_EC_8_Params = IRobotSELFSeismic_EC_8_Params;
  RobotSELFSeismic_AS_1170_4_Params = IRobotSELFSeismic_AS_1170_4_Params;
  RobotSeismicResidualMode = IRobotSeismicResidualMode;
  RobotSeismicAnalysis_EC8_General_Params = IRobotSeismicAnalysis_EC8_General_Params;
  RobotSeismicAnalysis_EC8_Params = IRobotSeismicAnalysis_EC8_Params;
  RobotDAMNotionalLoads = IRobotDAMNotionalLoads;
  RobotDAMReducedStiffness = IRobotDAMReducedStiffness;
  RobotDAMParams = IRobotDAMParams;
  RobotDAMCalcModule = IRobotDAMCalcModule;
  RobotCalculationResume = IRobotCalculationResume;
  RobotCalcEngine = IRobotCalcEngine;
  RobotStructureAnalysisParams = IRobotStructureAnalysisParams;
  RobotSparseMSolverParams = IRobotSparseMSolverParams;
  RobotIterativeSolverParams = IRobotIterativeSolverParams;
  RobotSeismicResultsSaveParams = IRobotSeismicResultsSaveParams;
  RobotModelGenerationParams = IRobotModelGenerationParams;
  RobotBucklingDeformationParams = IRobotBucklingDeformationParams;
  RobotSelection = IRobotSelection;
  RobotMultiSelection = IRobotMultiSelection;
  RobotSelectionFactory = IRobotSelectionFactory;
  RobotGroup = IRobotGroup;
  RobotGroupServer = IRobotGroupServer;
  RobotModeSelection = IRobotModeSelection;
  RobotObjEdgeSelection = IRobotObjEdgeSelection;
  RobotPreferences = IRobotPreferences;
  RobotSectionDatabase = IRobotSectionDatabase;
  RobotMaterialDatabase = IRobotMaterialDatabase;
  RobotSectionDatabaseList = IRobotSectionDatabaseList;
  RobotProjectPreferences = IRobotProjectPreferences;
  RobotKernelPreferences = IRobotKernelPreferences;
  RobotVehicleDatabaseList = IRobotVehicleDatabaseList;
  RobotVehicleDatabase = IRobotVehicleDatabase;
  RobotEurocodeFactors = IRobotEurocodeFactors;
  RobotEurocodeSteelDesignFactors = IRobotEurocodeSteelDesignFactors;
  RobotEurocodeSteelConnectionFactors = IRobotEurocodeSteelConnectionFactors;
  RobotValuesArray = IRobotValuesArray;
  RobotNamesArray = IRobotNamesArray;
  RobotNumbersArray = IRobotNumbersArray;
  RobotObjectsArray = IRobotObjectsArray;
  RobotNumbersCollection = IRobotNumbersCollection;
  RobotWindow = IRobotWindow;
  RobotPointsArray = IRobotPointsArray;
  RobotLinearReleaseDefList = IRobotLinearReleaseDefList;
  RobotNumbersDictionary = IRobotNumbersDictionary;
  RobotParamCollection = IRobotParamCollection;
  RobotNumbersArrayInProc = IRobotNumbersArray;
  RobotResultRow = IRobotResultRow;
  RobotResultRowSet = IRobotResultRowSet;
  RobotFiniteElementData = IRobotFiniteElementData;
  RobotFiniteElementDataSet = IRobotFiniteElementDataSet;
  RobotBarElementData = IRobotBarElementData;
  RobotBarElementDataSet = IRobotBarElementDataSet;
  RobotGeoPoint2D = IRobotGeoPoint2D;
  RobotGeoPoint3D = IRobotGeoPoint3D;
  RobotGeoCurveDiv = IRobotGeoCurveDiv;
  RobotGeoSegment = IRobotGeoSegment;
  RobotGeoSegmentLine = IRobotGeoSegmentLine;
  RobotGeoSegmentArc = IRobotGeoSegmentArc;
  RobotGeoObject = IRobotGeoObject;
  RobotGeoPolyline = IRobotGeoPolyline;
  RobotGeoContour = IRobotGeoContour;
  RobotGeoArc = IRobotGeoArc;
  RobotGeoCircle = IRobotGeoCircle;
  RobotGeoSegmentCollection = IRobotCollection;
  RobotGeoPoint3DCollection = IRobotCollection;
  RobotGeoLayer = IRobotGeoLayer;
  RobotObjModifExtrusion = IRobotObjModifExtrusion;
  RobotObjModifLathe = IRobotObjModifLathe;
  RobotObjModifPyramid = IRobotObjModifPyramid;
  RobotObjOperTranslation = IRobotObjOperTranslation;
  RobotObjOperScaling = IRobotObjOperScaling;
  RobotObjOperRotation = IRobotObjOperRotation;
  RobotObjOperMeshing = IRobotObjOperMeshing;
  RobotObjEdge = IRobotObjEdge;
  RobotObjAttributes = IRobotObjAttributes;
  RobotObjPart = IRobotObjPart2;
  RobotObjPartMain = IRobotObjPartMain;
  RobotObjPartReference = IRobotObjPartReference;
  RobotObjObject = IRobotObjObject;
  RobotObjOperationCollection = IRobotCollection;
  RobotObjModificationCollection = IRobotCollection;
  RobotObjEdgeCollection = IRobotCollection;
  RobotObjObjectServer = IRobotObjObjectServer;
  RobotObjLabelCol = IRobotCollection;
  RobotLinearReleaseServer = IRobotLinearReleaseServer;
  RobotLinearReleaseDef = IRobotLinearReleaseDef;
  RobotObjObjectCollection = IRobotCollection;
  RobotSpectralAnalysisPointsCollection = IRobotSpectralAnalysisPointsCollection;
  RobotObjMesh = IRobotObjMesh;
  RobotFiniteElement = IRobotFiniteElement;
  RobotFiniteElementNodes = IRobotFiniteElementNodes;
  RobotFiniteElementServer = IRobotFiniteElementServer;
  RobotFiniteElementCollection = IRobotCollection;
  RobotEmitter = IRobotEmitter;
  RobotComponentFactory = IRobotComponentFactory;
  RobotFeResultParams = IRobotFeResultParams;
  RobotFeResultDetailed = IRobotFeResultDetailed;
  RobotFeResultServer = IRobotFeResultServer;
  RobotFeResultPrincipal = IRobotFeResultPrincipal;
  RobotFeResultComplex = IRobotFeResultComplex;
  RobotFeResultReinforcement = IRobotFeResultReinforcement;
  RobotFeResultReduced = IRobotFeResultReduced;
  RobotPanelCutMngr = IRobotPanelCutMngr;
  RobotPanelCut = IRobotPanelCut;
  RobotFeExtremeParams = IRobotFeExtremeParams;
  RobotFeExtremeValue = IRobotFeExtremeValue;
  RobotFeMultiResultType = IRobotFeMultiResultType;
  RobotFeMultiExtremeValue = IRobotFeMultiExtremeValue;
  RobotMeshMethod = IRobotMeshMethod;
  RobotMeshGeneration = IRobotMeshGeneration;
  RobotMeshCoonsParams = IRobotMeshCoonsParams;
  RobotMeshSurfaceFiniteElems = IRobotMeshSurfaceFiniteElems;
  RobotMeshDelaunayParams = IRobotMeshDelaunayParams;
  RobotMeshVolumeParams = IRobotMeshVolumeParams;
  RobotMeshSurfaceParams = IRobotMeshSurfaceParams;
  RobotMeshParams = IRobotMeshParams;
  RobotNonlinearHingeModelServer = IRobotNonlinearHingeModelServer;
  RobotNonlinearHingeModel = IRobotNonlinearHingeModel;
  RobotNonlinearHingeModelAxisParams = IRobotNonlinearHingeModelAxisParams;
  RobotNonlinearHingeModelPoints = IRobotNonlinearHingeModelPoints;
  RobotNonlinearHingeData = IRobotNonlinearHingeData;
  RobotNonlinearHingeDef = IRobotNonlinearHingeDef;
  RobotNonlinearHingeServer = IRobotNonlinearHingeServer;
  RobotMaterialElasticModel = IRobotMaterialElasticModel;
  RobotBarSectionElasticParams = IRobotBarSectionElasticParams;
  RobotCladdingData = IRobotCladdingData;
  RobotPanelCalcModelData = IRobotPanelCalcModelData;
  RobotUnitData = IRobotUnitData;
  RobotUnitMngr = IRobotUnitMngr;
  RobotUnitComplexData = IRobotUnitComplexData;
  RobotUnitEditionServer = IRobotUnitEditionServer;
  RobotUnitEditionData = IRobotUnitEditionData;
  RobotStructureGeoAnalyser = IRobotStructureGeoAnalyser;
  RobotParamDef = IRobotParamDef;
  RobotParamSchemaDef = IRobotParamSchemaDef;
  RobotParamSchema = IRobotParamSchema;
  RobotParamSchemaMngr = IRobotParamSchemaMngr;
  RobotParamServer = IRobotParamServer;
  RobotProjectComponentCollection = IRobotCollection;
  RobotProjectComponent = IRobotProjectComponent;
  RobotProjectComponentMngr = IRobotProjectComponentMngr;
  RobotFileInsertParams = IRobotFileInsertParams;
  RobotProject = IRobotProject;
  RobotSTRParams = IRobotSTRParams;
  RobotSTRParameter = IRobotSTRParameter;
  RobotStructuralAxisSequenceList = IRobotStructuralAxisSequenceList;
  RobotStructuralAxisGridCartesian = IRobotStructuralAxisGridCartesian;
  RobotStructuralAxisGridMngr = IRobotStructuralAxisGridMngr;
  RobotBackgroundLayers = IRobotBackgroundLayers;
  RobotBackgroundVisibilityRange = IRobotBackgroundVisibilityRange;
  RobotBackgroundInsertParams = IRobotBackgroundInsertParams;
  RobotBackground = IRobotBackground;
  RobotBackgroundServer = IRobotBackgroundServer;
  RobotSnowWindParams = IRobotSnowWindParams;
  RobotSnowWindEngine = IRobotSnowWindEngine;
  RobotSWCodePLParams = IRobotSWCodePLParams;
  RobotSWCodeFRParams = IRobotSWCodeFRParams;
  RobotSWCodeECParams = IRobotSWCodeECParams;
  RobotSWStruct3DElement = IRobotSWStruct3DElement;
  RobotSWStruct3DFrame = IRobotSWStruct3DFrame;
  RobotSWStruct3D = IRobotSWStruct3D;
  RobotSWStruct3DPurlinGenParams = IRobotSWStruct3DPurlinGenParams;
  RobotSWStruct3DGenParams = IRobotSWStruct3DGenParams;
  RobotViewMngr = IRobotViewMngr;
  RobotTable = IRobotTable;
  RobotTableFrame = IRobotTableFrame;
  RobotTableConfig = IRobotTableConfig;
  RobotView = IRobotView2;
  RobotViewDetailedAnalysis = IRobotViewDetailedAnalysis;
  RobotViewDisplayParams = IRobotViewDisplayParams;
  RobotViewDiagramParams = IRobotViewDiagramParams;
  RobotViewDiagrams = IRobotViewDiagrams;
  RobotViewBarMaps = IRobotViewBarMaps;
  RobotViewFeMaps = IRobotViewFeMaps;
  RobotViewBarMapParams = IRobotViewBarMapParams;
  RobotViewDetailedAnalysisParams = IRobotViewDetailedAnalysisParams;
  RobotViewFeMapParams = IRobotViewFeMapParams;
  RobotViewPanelCuts = IRobotViewPanelCuts;
  RobotViewPanelCutParams = IRobotViewPanelCutParams;
  RobotViewGlobalAnalysisParams = IRobotViewGlobalAnalysisParams;
  RobotViewGlobalAnalysisResultsParams = IRobotViewGlobalAnalysisResultsParams;
  RobotViewGlobalAnalysis = IRobotViewGlobalAnalysis;
  RobotViewInfluenceLines = IRobotViewInfluenceLines;
  RobotViewInfluenceLinesParams = IRobotViewInfluenceLinesParams;
  RobotViewScreenCaptureParams = IRobotViewScreenCaptureParams;
  RobotTableScreenCaptureParams = IRobotTableScreenCaptureParams;
  RobotPrintable = IRobotPrintable;
  RobotPrintEngine = IRobotPrintEngine;
  RobotRtfView = IRobotRtfView;
  RobotVariableMngr = IRobotVariableMngr;
  RobotPageSetup = IRobotPageSetup;
  RobotReportTemplateMngr = IRobotReportTemplateMngr;
  RobotScreenCaptureMngr = IRobotScreenCaptureMngr;
  RobotReportStdElementRtf = IRobotReportStdElementRtf;
  RobotReportItem = IRobotReportItem;
  RobotReportItemList = IRobotReportItemList;
  RobotPageSetupTableOfContents = IRobotPageSetupTableOfContents;
  RobotHtmlView = IRobotHtmlView;
  RobotMultiView = IRobotCollection;
  RDimStream = IRDimStream;
  RDimSimEffDef = IRDimSimEffDef;
  RDimEffDef = IRDimEffDef;
  RDimMatDef = IRDimMatDef;
  RDimProfDef = IRDimProfDef;
  RDimMembSrv = IRDimMembSrv;
  RDimConnection = IRDimConnection;
  RDimDeflDisp = IRDimDeflDisp;
  RDimCalcState = IRDimCalcState;
  RDimUnits = IRDimUnits;
  RDimGrpProfs = IRDimGrpProfs;
  RDimGroup = IRDimGroup;
  RDimGroups = IRDimGroups;
  RDimMembDef = IRDimMembDef;
  RDimMembDefDataSrv = IRDimMembDefDataSrv;
  RDimMember = IRDimMember;
  RDimMembers = IRDimMembers;
  RDimServer = IRDimServer;
  RDimAdjoinParams = IRDimAdjoinParams;
  RDimAdjoinAutomat = IRDimAdjoinAutomat;
  RDimAdjoinBranch = IRDimAdjoinBranch;
  RDimInternalPoints = IRDimInternalPoints;
  RJointConnectionInfo = IRJointConnectionInfo;
  RJointWeld = IRJointWeld;
  RJointPlate = IRJointPlate;
  RJointKneeDiagonalStiff = IRJointKneeDiagonalStiff;
  RJointKneeBolts = IRJointKneeBolts;
  RJointKneeBracket = IRJointKneeBracket;
  RJointKneeWebPlate = IRJointKneeWebPlate;
  RJointKneeCodeParamsPN90 = IRJointKneeCodeParamsPN90;
  RJointKneeCodeParamsCM66 = IRJointKneeCodeParamsCM66;
  RJointKneeCodeParamsEC32 = IRJointKneeCodeParamsEC32;
  RJointKnee = IRJointKnee;
  RJointConnectionServer = IRJointConnectionServer;
  RJointKneeStiffColumn = IRJointKneeStiffColumn;
  RJointProfile = IRJointProfile;
  RJointLoad = IRJointLoad;
  RJointKneeLoad = IRJointKneeLoad;
  RJointAnchorBolt = IRJointAnchorBolt;
  RJointAnchorPlate = IRJointAnchorPlate;
  RJointAnchor = IRJointAnchor;
  RJointFootBolts = IRJointFootBolts;
  RJointFootPlate = IRJointFootPlate;
  RJointWedge = IRJointWedge;
  RJointBearingPlate = IRJointBearingPlate;
  RJointFootWelds = IRJointFootWelds;
  RJointColumnBracket = IRJointColumnBracket;
  RJointPinnedColumnBase = IRJointPinnedColumnBase;
  RJointFootStiffenerVert = IRJointFootStiffenerVert;
  RJointFootStiffenerHoriz = IRJointFootStiffenerHoriz;
  RJointFootMaterials = IRJointFootMaterials;
  RJointPinnedLoad = IRJointPinnedLoad;
  RJointColumnSquare = IRJointColumnSquare;
  RJointFootStiffenerSimple = IRJointFootStiffenerSimple;
  RJointFootStiffenerComplex = IRJointFootStiffenerComplex;
  RJointFootStiffenerTrapezoid = IRJointFootStiffenerTrapezoid;
  RJointColumnBFoundation = IRJointColumnBFoundation;
  RJointFixedColumnBase = IRJointFixedColumnBase;
  RJointFixedLoad = IRJointFixedLoad;
  RJointConcreteMaterials = IRJointConcreteMaterials;
  RJointConcreteColumn = IRJointConcreteColumn;
  RJointConcreteColumnFoundation = IRJointConcreteColumnFoundation;
  RJointConcreteColumnLoad = IRJointConcreteColumnLoad;
  RJointFixedFootWelds = IRJointFixedFootWelds;
  RJointAngleBolts = IRJointAngleBolts;
  RJointAngle = IRJointAngle;
  RJointBeamCut = IRJointBeamCut;
  RJointWithAngles = IRJointWithAngles;
  RJointAngleLoad = IRJointAngleLoad;
  RJointTubeFlangeProfile = IRJointTubeFlangeProfile;
  RJointTubeDiagProfile = IRJointTubeDiagProfile;
  RJointTubePostProfile = IRJointTubePostProfile;
  RJointTube = IRJointTube;
  RJointTubeLoad = IRJointTubeLoad;
  RJointGussetBoltsDiag = IRJointGussetBoltsDiag;
  RJointGussetWeldsDiag = IRJointGussetWeldsDiag;
  RJointGussetDiagonale = IRJointGussetDiagonale;
  RJointGussetSimple = IRJointGussetSimple;
  RJointGussetSimplePlate = IRJointGussetSimplePlate;
  RJointGussetSimpleAttachment = IRJointGussetSimpleAttachment;
  RJointGussetSimpleAttachBolts = IRJointGussetSimpleAttachBolts;
  RJointGussetSimpleAttachBoltsHorizontal = IRJointGussetSimpleAttachBoltsHorizontal;
  RJointGussetSimpleAttachBoltsVertical = IRJointGussetSimpleAttachBoltsVertical;
  RJointGussetSimpleAttachWelds = IRJointGussetSimpleAttachWelds;
  RJointGussetCrossPlate = IRJointGussetCrossPlate;
  RJointGussetCross = IRJointGussetCross;
  RJointGussetFlangePlate = IRJointGussetFlangePlate;
  RJointGussetFlange = IRJointGussetFlange;
  RJointGussetSimpleLoad = IRJointGussetSimpleLoad;
  RJointGussetCrossLoad = IRJointGussetCrossLoad;
  RJointGussetFlangeLoad = IRJointGussetFlangeLoad;
  RJointMainBolts = IRJointMainBolts;
  RJointBeamBolts = IRJointBeamBolts;
  RJointBeamGirderSeatBolts = IRJointBeamGirderSeatBolts;
  RJointBeamGirderBeam = IRJointBeamGirderBeam;
  RJointBeamGirderAngle = IRJointBeamGirderAngle;
  RJointBeamPlate = IRJointBeamPlate;
  RJointBeamGirderSeat = IRJointBeamGirderSeat;
  RJointBeamGirderStiffener = IRJointBeamGirderStiffener;
  RJointBeamGirder = IRJointBeamGirder;
  RJointBeamGirderLoad = IRJointBeamGirderLoad;
  RJointBeamColumn = IRJointBeamColumn;
  RJointBeamAngle = IRJointBeamAngle;
  RJointBeamColumnFlangePlate = IRJointBeamColumnFlangePlate;
  RJointBeamSeatMainBolts = IRJointBeamSeatMainBolts;
  RJointBeamSeatL = IRJointBeamSeatL;
  RJointBeamSeatT = IRJointBeamSeatT;
  RJointSplice = IRJointSplice;
  RJointSpliceLoad = IRJointSpliceLoad;
  RJointSplicePlate = IRJointSplicePlate;
  RJointSpliceBolts = IRJointSpliceBolts;
  RJointSpliceWelds = IRJointSpliceWelds;
  RJointTie = IRJointTie;
  RJointTieLoad = IRJointTieLoad;
  RJointTieStiffeners = IRJointTieStiffeners;
  RJointTiePlates = IRJointTiePlates;
  RJointTieConnectors = IRJointTieConnectors;
  RJointTieBolts = IRJointTieBolts;
  RJointTieWelds = IRJointTieWelds;
  RConcrBarSectionData = IRConcrBarSectionData;
  RBestParamSet = IRBestParamSet;
  RBestCalcParamsData = IRBestCalcParamsData;
  RBestCalcParamsDataList = IRBestCalcParamsDataList;
  RBestMemberData = IRBestMemberData;
  RBestResults = IRBestResults;
  RBestForceData = IRBestForceData;
  RBestDimParams = IRBestDimParams;
  RConcrMemberRequiredReinfCalcParams = IRConcrMemberRequiredReinfCalcParams;
  RConcrMemberRequiredReinfEngine = IRConcrMemberRequiredReinfEngine;
  RobotCodeRegistrar = IRobotCodeRegistrar;
  RobotAddInRegistrar = IRobotAddInRegistrar;
  RobotCmdInfo = IRobotCmdInfo;
  RobotCmdList = IRobotCmdList;
  RobotAddInMngr = IRobotAddInMngr;
  RConcrReinforceData = IRConcrReinforceData2;
  RConcrConcreteParams = IRConcrConcreteParams;
  RConcrSteelParams = IRConcrSteelParams;
  RConcr_PN84_ReinforceData = IRConcr_PN84_ReinforceData;
  RConcr_PN99_ReinforceData = IRConcr_PN99_ReinforceData;
  RConcr_BAEL_ReinforceData = IRConcr_BAEL_ReinforceData;
  RConcr_ACI318_ReinforceData = IRConcr_ACI318_ReinforceData;
  RConcr_ACI318_ConcreteParams = IRConcr_ACI318_ConcreteParams;
  RConcr_BS8110_ReinforceData = IRConcr_BS8110_ReinforceData;
  RConcrSlabRequiredReinfCalcParams = IRConcrSlabRequiredReinfCalcParams;
  RConcrSlabRequiredReinfEngine = IRConcrSlabRequiredReinfEngine;
  RConcrCalcEngine = IRConcrCalcEngine;
  RConcrReinforceDataMain = IRConcrReinforceDataMain;
  RConcr_SNIP_ConcreteParams = IRConcr_SNIP_ConcreteParams;
  RConcr_SNIP_ReinforceData = IRConcr_SNIP_ReinforceData;
  RConcr_EC2_ReinforceData = IRConcr_EC2_ReinforceData;
  RConcr_IS2000_ReinforceData = IRConcr_IS2000_ReinforceData;
  RConcrColumnBucklingModel = IRConcrColumnBucklingModel;
  RConcrColumnLoads = IRConcrColumnLoads;
  RConcrColumnLoad = IRConcrColumnLoad;
  RConcrCodeReport = IRConcrCodeReport;
  RobotApplication = IRobotApplication;
  RobotProtectionInfo = IRobotProtectionInfo;
  RobotAppSTRAnalyser = IRobotSTRFileAnalyser;


// *********************************************************************//
// Declaration of structures, unions and aliases.                         
// *********************************************************************//
  PUserType1 = ^IRDimDeflDispCodeCombType; {*}
  PDouble1 = ^Double; {*}
  PPSafeArray1 = ^PSafeArray; {*}
  PPSafeArray2 = ^PSafeArray; {*}

  tagIRobotCaseType = IRobotCaseType; 
  tagIRobotCaseNature = IRobotCaseNature; 
  tagIRobotCaseAnalizeType = IRobotCaseAnalizeType; 
  tagIRobotCombinationType = IRobotCombinationType; 
  tagIRobotModeCombinationType = IRobotModeCombinationType; 
  tagIRobotCodeCmbFlag = IRobotCodeCmbFlag; 
  tagIRobotMobileCaseFlag = IRobotMobileCaseFlag; 
  tagIRobotMobileCaseApplicationPlaneType = IRobotMobileCaseApplicationPlaneType; 
  tagIRobotLoadRecordType = IRobotLoadRecordType; 
  tagIRobotNodeForceRecordValues = IRobotNodeForceRecordValues; 
  tagIRobotNodeDisplacementRecordValues = IRobotNodeDisplacementRecordValues; 
  tagIRobotNodeAuxiliaryRecordValues = IRobotNodeAuxiliaryRecordValues; 
  tagIRobotBarDilatationRecordValues = IRobotBarDilatationRecordValues; 
  tagIRobotBarForceConcentrateRecordValues = IRobotBarForceConcentrateRecordValues; 
  tagIRobotBarMomentDistributedRecordValues = IRobotBarMomentDistributedRecordValues; 
  tagIRobotBarUniformRecordValues = IRobotBarUniformRecordValues; 
  tagIRobotBarTrapezoidaleRecordValues = IRobotBarTrapezoidaleRecordValues; 
  tagIRobotBarThermalRecordValues = IRobotBarThermalRecordValues; 
  tagIRobotBarDeadRecordValues = IRobotBarDeadRecordValues; 
  tagIRobotPointAuxiliaryRecordValues = IRobotPointAuxiliaryRecordValues; 
  tagIRobotIn3PointsRecordValues = IRobotIn3PointsRecordValues; 
  tag_eRobotPressureRecordValues = _eRobotPressureRecordValues; 
  tagIRobotPressureRecordValues = IRobotPressureRecordValues; 
  tagIRobotLinearRecordValues = IRobotLinearRecordValues; 
  tagIRobotMassActivationRecordValues = IRobotMassActivationRecordValues; 
  tagIRobotLinear3DRecordValues = IRobotLinear3DRecordValues; 
  tagIRobotThermalIn3PointsRecordValues = IRobotThermalIn3PointsRecordValues; 
  tagIRobotInContourRecordValues = IRobotInContourRecordValues; 
  tagIRobotUniformRecordValues = IRobotUniformRecordValues; 
  tag_eRobotThermalRecordValues = _eRobotThermalRecordValues; 
  tagIRobotThermalRecordValues = IRobotThermalRecordValues; 
  tagIRobotNodeForceInPointRecordValues = IRobotNodeForceInPointRecordValues; 
  tagIRobotLinearOnEdgesRecordValues = IRobotLinearOnEdgesRecordValues; 
  tagIRobotDeadRecordValues = IRobotDeadRecordValues; 
  tagIRobotNodeVelocityRecordValues = IRobotNodeVelocityRecordValues; 
  tagIRobotNodeAccelerationRecordValues = IRobotNodeAccelerationRecordValues; 
  tagIRobotBarEndReleaseValue = IRobotBarEndReleaseValue; 
  tagIRobotBarSectionShapeType = IRobotBarSectionShapeType; 
  tagIRobotBarSectionDataValue = IRobotBarSectionDataValue; 
  tagIRobotLimitState = IRobotLimitState; 
  tagIRobotBarEndBracketType = IRobotBarEndBracketType; 
  tagIRobotBarEndBracketDataValue = IRobotBarEndBracketDataValue; 
  tagIRobotThicknessType = IRobotThicknessType; 
  tagIRobotThicknessUpliftType = IRobotThicknessUpliftType; 
  tagIRobotThicknessHomoType = IRobotThicknessHomoType; 
  tagIRobotThicknessOrthoType = IRobotThicknessOrthoType; 
  tagIRobotThicknessOrthoDirType = IRobotThicknessOrthoDirType; 
  tagIRobotThicknessMatrixValue = IRobotThicknessMatrixValue; 
  tagIRobotBarCableAssemblingParamType = IRobotBarCableAssemblingParamType; 
  tagIRobotLinearReleaseDefinitionType = IRobotLinearReleaseDefinitionType; 
  tagIRobotBarSectionConcreteDataValue = IRobotBarSectionConcreteDataValue; 
  tagIRobotBarSectionConcreteCutsPosition = IRobotBarSectionConcreteCutsPosition; 
  tagIRobotBarGeoImperfectionsAxis = IRobotBarGeoImperfectionsAxis; 
  tagIRobotBarSectionComponentShape = IRobotBarSectionComponentShape; 
  tagIRobotBarSectionSpecialDataValue = IRobotBarSectionSpecialDataValue; 
  tagIRobotBarOffsetMemberLength = IRobotBarOffsetMemberLength; 
  tagIRobotSupportEquivalentElasticityType = IRobotSupportEquivalentElasticityType; 
  tagIRobotSupportColumnFixingType = IRobotSupportColumnFixingType; 
  tagIRobotCodeCmbActionCoeffType = IRobotCodeCmbActionCoeffType; 
  tagIRobotCodeCmbCombPartType = IRobotCodeCmbCombPartType; 
  tagIRobotCodeCmbCombType = IRobotCodeCmbCombType; 
  tagIRobotCodeCmbDecidingValueType = IRobotCodeCmbDecidingValueType; 
  tagIRobotCodeCmbOperator = IRobotCodeCmbOperator; 
  tagIRobotModalAnalysisMode = IRobotModalAnalysisMode; 
  tagIRobotModalAnalysisAlgorithm = IRobotModalAnalysisAlgorithm; 
  tagIRobotModalAnalysisMassMatrixType = IRobotModalAnalysisMassMatrixType; 
  tagIRobotModalAnalysisLimitType = IRobotModalAnalysisLimitType; 
  tagIRobotBarTensionCompression = IRobotBarTensionCompression; 
  tagIRobotCaseAnalysisModesFilterType = IRobotCaseAnalysisModesFilterType; 
  tagIRobotSeismicAnalysis_EAK_2000_ZoneType = IRobotSeismicAnalysis_EAK_2000_ZoneType; 
  tagIRobotSeismicAnalysis_EAK_2000_GroundCategoryType = IRobotSeismicAnalysis_EAK_2000_GroundCategoryType; 
  tagIRobotSeismicAnalysis_EAK_2000_ImportanceFactorType = IRobotSeismicAnalysis_EAK_2000_ImportanceFactorType; 
  tagIRobotSeismicAnalysis_CHINESE_IntensityType = IRobotSeismicAnalysis_CHINESE_IntensityType; 
  tagIRobotSeismicAnalysis_CHINESE_DesignType = IRobotSeismicAnalysis_CHINESE_DesignType; 
  tagIRobotSeismicAnalysis_CHINESE_SiteType = IRobotSeismicAnalysis_CHINESE_SiteType; 
  tagIRobotSeismicAnalysis_CHINESE_EarthquakeType = IRobotSeismicAnalysis_CHINESE_EarthquakeType; 
  tagIRobotSeismicAnalysis_CHINESE_StructureType = IRobotSeismicAnalysis_CHINESE_StructureType; 
  tagIRobotSeismicAnalysis_RPA_88_SoilType = IRobotSeismicAnalysis_RPA_88_SoilType; 
  tagIRobotSeismicAnalysis_RPA_88_ZoneType = IRobotSeismicAnalysis_RPA_88_ZoneType; 
  tagIRobotSeismicAnalysis_RPA_88_CategoryType = IRobotSeismicAnalysis_RPA_88_CategoryType; 
  tagIRobotSeismicAnalysis_RPA_88_UsageType = IRobotSeismicAnalysis_RPA_88_UsageType; 
  tagIRobotSeismicAnalysis_CIRSOC_103_SoilType = IRobotSeismicAnalysis_CIRSOC_103_SoilType; 
  tagIRobotSeismicAnalysis_CIRSOC_103_StructureType = IRobotSeismicAnalysis_CIRSOC_103_StructureType; 
  tagIRobotSeismicAnalysis_CIRSOC_103_ZoneType = IRobotSeismicAnalysis_CIRSOC_103_ZoneType; 
  tagIRobotSeismicAnalysis_UBC_97_SourceType = IRobotSeismicAnalysis_UBC_97_SourceType; 
  tagIRobotSeismicAnalysis_UBC_97_SoilType = IRobotSeismicAnalysis_UBC_97_SoilType; 
  tagIRobotSeismicAnalysis_UBC_97_ZoneType = IRobotSeismicAnalysis_UBC_97_ZoneType; 
  tagIRobotSeismicAnalysis_AFPS_90_StructureType = IRobotSeismicAnalysis_AFPS_90_StructureType; 
  tagIRobotSeismicAnalysis_AFPS_90_ZoneType = IRobotSeismicAnalysis_AFPS_90_ZoneType; 
  tagIRobotSeismicAnalysis_AFPS_90_SiteType = IRobotSeismicAnalysis_AFPS_90_SiteType; 
  tagIRobotSeismicAnalysis_EC_8_StructureType = IRobotSeismicAnalysis_EC_8_StructureType; 
  tagIRobotSeismicAnalysis_EC_8_ZoneType = IRobotSeismicAnalysis_EC_8_ZoneType; 
  tagIRobotSeismicAnalysis_EC_8_SoilType = IRobotSeismicAnalysis_EC_8_SoilType; 
  tagIRobotSeismicAnalysis_P_100_92_ImportanceClassType = IRobotSeismicAnalysis_P_100_92_ImportanceClassType; 
  tagIRobotSeismicAnalysis_P_100_92_ZoneType = IRobotSeismicAnalysis_P_100_92_ZoneType; 
  tagIRobotSeismicAnalysis_PS_69_DampingType = IRobotSeismicAnalysis_PS_69_DampingType; 
  tagIRobotSeismicAnalysis_PS_69_SoilType = IRobotSeismicAnalysis_PS_69_SoilType; 
  tagIRobotSeismicAnalysis_PS_92_StructureType = IRobotSeismicAnalysis_PS_92_StructureType; 
  tagIRobotSeismicAnalysis_PS_92_ZoneType = IRobotSeismicAnalysis_PS_92_ZoneType; 
  tagIRobotSeismicAnalysis_PS_92_2008_ZoneType = IRobotSeismicAnalysis_PS_92_2008_ZoneType; 
  tagIRobotSeismicAnalysis_PS_92_SiteType = IRobotSeismicAnalysis_PS_92_SiteType; 
  tagIRobotSeismicAnalysis_PS_92_2008_StructureType = IRobotSeismicAnalysis_PS_92_2008_StructureType; 
  tagIRobotSeismicAnalysis_PS_92_2008_SiteType = IRobotSeismicAnalysis_PS_92_2008_SiteType; 
  tagIRobotSeismicAnalysis_TURKISH_23098_ZoneType = IRobotSeismicAnalysis_TURKISH_23098_ZoneType; 
  tagIRobotSeismicAnalysis_TURKISH_23098_SoilType = IRobotSeismicAnalysis_TURKISH_23098_SoilType; 
  tagIRobotSeismicAnalysis_DM_16_1_96_ProtectionCoeffType = IRobotSeismicAnalysis_DM_16_1_96_ProtectionCoeffType; 
  tagIRobotSeismicAnalysis_IBC_2000_SiteClassType = IRobotSeismicAnalysis_IBC_2000_SiteClassType; 
  tagIRobotSeismicAnalysisSpectrumType = IRobotSeismicAnalysisSpectrumType; 
  tagIRobotSeismicAnalysisDirectionType = IRobotSeismicAnalysisDirectionType; 
  tagIRobotNonlinearAnalysisAlgorithmType = IRobotNonlinearAnalysisAlgorithmType; 
  tagIRobotSpectralAnalysisOrdinateYAxisType = IRobotSpectralAnalysisOrdinateYAxisType; 
  tagIRobotSpectralAnalysisAbscissaXAxisType = IRobotSpectralAnalysisAbscissaXAxisType; 
  tagIRobotComponentType = IRobotComponentType; 
  tagIRobotDegreeOfFreedom = IRobotDegreeOfFreedom; 
  tagIRobotBucklingAnalysisMethod = IRobotBucklingAnalysisMethod; 
  tagIRobotTimeHistoryAnalysisMethod = IRobotTimeHistoryAnalysisMethod; 
  tagIRobotVehicleLoadType = IRobotVehicleLoadType; 
  tagIRobotSurfaceOnObjectRecordValues = IRobotSurfaceOnObjectRecordValues; 
  tagIRobotPushOverDirection = IRobotPushOverDirection; 
  tagIRobotPushOverLoadDefinitionMethod = IRobotPushOverLoadDefinitionMethod; 
  tagIRobotMobilePointForceRecordValues = IRobotMobilePointForceRecordValues; 
  tagIRobotMobileDistributedRecordValues = IRobotMobileDistributedRecordValues; 
  tagIRobotMaterialModel = IRobotMaterialModel; 
  tagIRobotSeismicAnalysis_IBC_2006_SiteClassType = IRobotSeismicAnalysis_IBC_2006_SiteClassType; 
  tagIRobotNonlinearLinkCurveType = IRobotNonlinearLinkCurveType; 
  tagIRobotNonlinearLinkModelType = IRobotNonlinearLinkModelType; 
  tagIRobotNonlinearLinkSemiAxisType = IRobotNonlinearLinkSemiAxisType; 
  tagIRobotExtremeValueType = IRobotExtremeValueType; 
  tagIRobotDirectoryExtension = IRobotDirectoryExtension; 
  tagIRobotTranslateOptions = IRobotTranslateOptions; 
  tagIRobotBarOffsetAutoPosition = IRobotBarOffsetAutoPosition; 
  tagIRobotFeResultType = IRobotFeResultType; 
  tagIRobotFeResultSmoothing = IRobotFeResultSmoothing; 
  tagIRobotUniversalResultType = IRobotUniversalResultType; 
  tagIRobotResultParamType = IRobotResultParamType; 
  tagIRobotResultQueryReturnType = IRobotResultQueryReturnType; 
  tagIRobotSeismicAnalysis_RPS_2000_ZoneType = IRobotSeismicAnalysis_RPS_2000_ZoneType; 
  tagIRobotSeismicAnalysis_RPS_2000_SiteType = IRobotSeismicAnalysis_RPS_2000_SiteType; 
  tagIRobotSeismicAnalysis_RPS_2000_StructureClass = IRobotSeismicAnalysis_RPS_2000_StructureClass; 
  tagIRobotSeismicAnalysis_RPA_2003_ZoneType = IRobotSeismicAnalysis_RPA_2003_ZoneType; 
  tagIRobotSeismicAnalysis_RPA_2003_UsageType = IRobotSeismicAnalysis_RPA_2003_UsageType; 
  tagIRobotSeismicAnalysis_RPA_2003_SiteType = IRobotSeismicAnalysis_RPA_2003_SiteType; 
  tagIRobotSeismicAnalysis_ITALY_ORDINANZA_SoilType = IRobotSeismicAnalysis_ITALY_ORDINANZA_SoilType; 
  tagIRobotSeismicAnalysis_ITALY_ORDINANZA_ZoneType = IRobotSeismicAnalysis_ITALY_ORDINANZA_ZoneType; 
  tagIRobotSeismicAnalysis_ITALY_ORDINANZA_Spectrum = IRobotSeismicAnalysis_ITALY_ORDINANZA_Spectrum; 
  tagIRobotSeismicAnalysis_ITALY_ORDINANZA_Direction = IRobotSeismicAnalysis_ITALY_ORDINANZA_Direction; 
  tagIRobotCodeCmbGenerationType = IRobotCodeCmbGenerationType; 
  tagIRobotDynamicAnalysisDampingType = IRobotDynamicAnalysisDampingType; 
  tagIRobotFootfallAnalysisExcitationMethod = IRobotFootfallAnalysisExcitationMethod; 
  tagIRobotFootfallAnalysisExcitationForces = IRobotFootfallAnalysisExcitationForces; 
  tagIRobotFootfallAnalysisNodeSelectionType = IRobotFootfallAnalysisNodeSelectionType; 
  tagIRobotCaseRelatedValueType = IRobotCaseRelatedValueType; 
  tagIRobotObjectStructuralType = IRobotObjectStructuralType; 
  tagIRobotPredefinedLabel = IRobotPredefinedLabel; 
  tagIRobotUpliftDirection = IRobotUpliftDirection; 
  tagIRobotUpliftSense = IRobotUpliftSense; 
  tagIRobotDatabaseType = IRobotDatabaseType; 
  tagIRobotSELFSeismicLevelDefinitionMethod = IRobotSELFSeismicLevelDefinitionMethod; 
  tagIRobotSELFSeismicTBaseMethod = IRobotSELFSeismicTBaseMethod; 
  tagIRobotSELFSeismic_ASCE_7_10_SiteClassType = IRobotSELFSeismic_ASCE_7_10_SiteClassType; 
  tagIRobotSELFSeismic_ASCE_7_10_StructureType = IRobotSELFSeismic_ASCE_7_10_StructureType; 
  tagIRobotSELFSeismic_EC_8_StructureType = IRobotSELFSeismic_EC_8_StructureType; 
  tagIRobotSELFSeismic_EC_8_SiteClass = IRobotSELFSeismic_EC_8_SiteClass; 
  tagIRobotSELFSeismic_EC_8_SpectrumType = IRobotSELFSeismic_EC_8_SpectrumType; 
  tagIRobotSELFSeismic_AS_1170_4_SoilCategoryType = IRobotSELFSeismic_AS_1170_4_SoilCategoryType; 
  tagIRobotSELFSeismic_AS_1170_4_StructureType = IRobotSELFSeismic_AS_1170_4_StructureType; 
  tagIRobotSELFSeismic_AS_1170_4_ProbabilityType = IRobotSELFSeismic_AS_1170_4_ProbabilityType; 
  tagIRobotCalculationStatus = IRobotCalculationStatus; 
  tagIRobotCalculationMode = IRobotCalculationMode; 
  tagIRobotResultStatusType = IRobotResultStatusType; 
  tagIRobotSeismicResidualModeDefinitionType = IRobotSeismicResidualModeDefinitionType; 
  tagIRobotSeismicAnalysis_EC8_SpectrumType = IRobotSeismicAnalysis_EC8_SpectrumType; 
  tagIRobotSeismicAnalysis_EC8_GroundType = IRobotSeismicAnalysis_EC8_GroundType; 
  tagIRobotDAMAnalysisType = IRobotDAMAnalysisType; 
  tagIRobotDAMLateralLoadCombType = IRobotDAMLateralLoadCombType; 
  tagIRobotDAMSteelMembersReductionType = IRobotDAMSteelMembersReductionType; 
  tagIRobotCasePredefinedNumber = IRobotCasePredefinedNumber; 
  tagIRobotEquationSolvingMethod = IRobotEquationSolvingMethod; 
  tagIRobotStructureAutoVerificationType = IRobotStructureAutoVerificationType; 
  tagIRobotSparseMSolverMethod = IRobotSparseMSolverMethod; 
  tagIRobotIterativePrediconditionerType = IRobotIterativePrediconditionerType; 
  tagIRobotIterativeSolverMethod = IRobotIterativeSolverMethod; 
  tagIRobotIterativeSolverMemoryUsage = IRobotIterativeSolverMemoryUsage; 
  tagIRobotStructureAnalysisModalParticipationCoeff = IRobotStructureAnalysisModalParticipationCoeff; 
  tagIRobotSeismicResultsPanelDirection = IRobotSeismicResultsPanelDirection; 
  tagIRobotCalcMessageSource = IRobotCalcMessageSource; 
  tagIRobotCalcMessageSeverityLevel = IRobotCalcMessageSeverityLevel; 
  tagIRobotPredefinedSelection = IRobotPredefinedSelection; 
  tagIRobotCalculationModelCoherence = IRobotCalculationModelCoherence; 
  tagIRobotCalculationsType = IRobotCalculationsType; 
  tagIRobotGeoCoordinateAxis = IRobotGeoCoordinateAxis; 
  tagIRobotGeoCoordinateSystem = IRobotGeoCoordinateSystem; 
  tagIRobotWindowState = IRobotWindowState; 
  tagIRobotGeoCoordinateAxisSense = IRobotGeoCoordinateAxisSense; 
  tagIRobotGeoPlane = IRobotGeoPlane; 
  tagIRobotGeoArcDefinitionMethod = IRobotGeoArcDefinitionMethod; 
  tagIRobotObjModificationType = IRobotObjModificationType; 
  tagIRobotObjOperationType = IRobotObjOperationType; 
  tagIRobotObjPartType = IRobotObjPartType; 
  tagIRobotObjLocalXDirDefinitionType = IRobotObjLocalXDirDefinitionType; 
  tagIRobotFiniteElementType = IRobotFiniteElementType; 
  tagIRobotMeshRefinementType = IRobotMeshRefinementType; 
  tagIRobotFeLayerType = IRobotFeLayerType; 
  tagIRobotReinforceCalcMethods = IRobotReinforceCalcMethods; 
  tagIRobotFeResultReducedCutPosition = IRobotFeResultReducedCutPosition; 
  tagIRobotPanelCutDefinitionType = IRobotPanelCutDefinitionType; 
  tagIRobotMeshType = IRobotMeshType; 
  tagIRobotMeshForcingRatio = IRobotMeshForcingRatio; 
  tagIRobotMeshImplementDegree = IRobotMeshImplementDegree; 
  tagIRobotMeshPanelDivType = IRobotMeshPanelDivType; 
  tagIRobotMeshSurfaceFEType = IRobotMeshSurfaceFEType; 
  tagIRobotMeshVolumetricFEType = IRobotMeshVolumetricFEType; 
  tagIRobotMeshDelaunayType = IRobotMeshDelaunayType; 
  tagIRobotMeshMethodType = IRobotMeshMethodType; 
  tagIRobotMeshGenerationType = IRobotMeshGenerationType; 
  tagIRobotMeshAccessType = IRobotMeshAccessType; 
  tagIRobotNonlinearHingeModelType = IRobotNonlinearHingeModelType; 
  tagIRobotNonlinearHingeModelUnloadingType = IRobotNonlinearHingeModelUnloadingType; 
  tagIRobotNonlinearHingeComponentType = IRobotNonlinearHingeComponentType; 
  tagIRobotMaterialElasticType = IRobotMaterialElasticType; 
  tagIRobotMaterialElasticUnloadingMethod = IRobotMaterialElasticUnloadingMethod; 
  tagIRobotCladdingType = IRobotCladdingType; 
  tagIRobotCladdingMethod = IRobotCladdingMethod; 
  tagIRobotPanelCalcModelFinElemType = IRobotPanelCalcModelFinElemType; 
  tagIRobotPanelCalcModelLoadTransfer = IRobotPanelCalcModelLoadTransfer; 
  tagIRobotPanelCalcModelDiaphragm = IRobotPanelCalcModelDiaphragm; 
  tagIRobotUnitType = IRobotUnitType; 
  tagIRobotUnitEditionType = IRobotUnitEditionType; 
  tagIRobotBarIntersectRelationship = IRobotBarIntersectRelationship; 
  tagIRobotParamValueType = IRobotParamValueType; 
  tagIRobotProjectSaveFormat = IRobotProjectSaveFormat; 
  tagIRobotActiveModelType = IRobotActiveModelType; 
  tagIRobotStructuralAxisLabelType = IRobotStructuralAxisLabelType; 
  tagIRobotStructuralAxisGridType = IRobotStructuralAxisGridType; 
  tagIRobotBackgroundVisibilityRangeType = IRobotBackgroundVisibilityRangeType; 
  tagIRobotSWCodePLWindZone = IRobotSWCodePLWindZone; 
  tagIRobotSWCodePLWindSite = IRobotSWCodePLWindSite; 
  tagIRobotSWCodePLSnowZone = IRobotSWCodePLSnowZone; 
  tagIRobotSWCodeFRWindSite = IRobotSWCodeFRWindSite; 
  tagIRobotSWCodeFRWindType = IRobotSWCodeFRWindType; 
  tagIRobotSWCodeFRSurfaceType = IRobotSWCodeFRSurfaceType; 
  tagIRobotSWCodeFRSnowType = IRobotSWCodeFRSnowType; 
  tagIRobotSWCodePLWindPressDistribType = IRobotSWCodePLWindPressDistribType; 
  tagIRobotSWCodeECSiteType = IRobotSWCodeECSiteType; 
  tagIRobotSWCodeECGroundType = IRobotSWCodeECGroundType; 
  tagIRobotSWCodeECCdType = IRobotSWCodeECCdType; 
  tagIRobotViewVisibilityStatusType = IRobotViewVisibilityStatusType; 
  tagIRobotViewVisibilityStatusValue = IRobotViewVisibilityStatusValue; 
  tagIRobotViewScaleType = IRobotViewScaleType; 
  tagIRobotViewDetailedAnalysisTableTab = IRobotViewDetailedAnalysisTableTab; 
  tagIRobotViewProjection = IRobotViewProjection; 
  tag_eRobotViewProjection = _eRobotViewProjection; 
  tagIRobotViewHiddenLinesDisplayType = IRobotViewHiddenLinesDisplayType; 
  tagIRobotViewDisplayAttributes = IRobotViewDisplayAttributes; 
  tagIRobotViewDiagramSignDifferType = IRobotViewDiagramSignDifferType; 
  tagIRobotViewDiagramFillingType = IRobotViewDiagramFillingType; 
  tagIRobotViewDiagramDescriptionType = IRobotViewDiagramDescriptionType; 
  tagIRobotViewDiagramResultType = IRobotViewDiagramResultType; 
  tagIRobotViewBarMapResultType = IRobotViewBarMapResultType; 
  tagIRobotViewDetailedAnalysisResultType = IRobotViewDetailedAnalysisResultType; 
  tagIRobotViewFeMapResultType = IRobotViewFeMapResultType; 
  tagIRobotViewFeMapLocalSystemType = IRobotViewFeMapLocalSystemType; 
  tagIRobotViewFeMapCrossPresentationType = IRobotViewFeMapCrossPresentationType; 
  tagIRobotViewFeMapLayerType = IRobotViewFeMapLayerType; 
  tagIRobotViewFeMapSmoothingType = IRobotViewFeMapSmoothingType; 
  tag_eRobotViewVisibilityStatusValue = _eRobotViewVisibilityStatusValue; 
  tagIRobotViewDiagramPositionType = IRobotViewDiagramPositionType; 
  tagIRobotViewReinforcementResultType = IRobotViewReinforcementResultType; 
  tagIRobotLayoutId = IRobotLayoutId; 
  tagIRobotViewGlobalAnalysisResultsType = IRobotViewGlobalAnalysisResultsType; 
  tagIRobotViewGlobalAnalysisParamsType = IRobotViewGlobalAnalysisParamsType; 
  tagIRobotViewInfluenceLinesResultType = IRobotViewInfluenceLinesResultType; 
  tagIRobotViewInfluenceLinesLocalSystemType = IRobotViewInfluenceLinesLocalSystemType; 
  tagIRobotViewInfluenceLinesLayerType = IRobotViewInfluenceLinesLayerType; 
  tagIRobotViewScreenCaptureUpdateType = IRobotViewScreenCaptureUpdateType; 
  tagIRobotViewDiagramValueType = IRobotViewDiagramValueType; 
  tagIRobotTableScreenCaptureUpdateType = IRobotTableScreenCaptureUpdateType; 
  tagIRobotDialogId = IRobotDialogId; 
  tagIRobotViewScreenCaptureResolution = IRobotViewScreenCaptureResolution; 
  tagIRobotVariablePredefinedId = IRobotVariablePredefinedId; 
  tagIRobotOutputFileFormat = IRobotOutputFileFormat; 
  tagIRobotPageSetupTocLocation = IRobotPageSetupTocLocation; 
  tagIRobotPageSetupOrientation = IRobotPageSetupOrientation; 
  tagIRobotPageSetupFrameType = IRobotPageSetupFrameType; 
  tagIRobotReportItemType = IRobotReportItemType; 
  tagIRobotExternalPreviewFormat = IRobotExternalPreviewFormat; 
  tagIRDimAdjoinMembNo = IRDimAdjoinMembNo; 
  tagIRDimAdjoinMembPos = IRDimAdjoinMembPos; 
  tagIRDimAdjoinMembSuppCond = IRDimAdjoinMembSuppCond; 
  tagIRDimAdjoinParamsEqMInertia = IRDimAdjoinParamsEqMInertia; 
  tagIRDimAdjoinParamsStoreyFrame = IRDimAdjoinParamsStoreyFrame; 
  tagIRDimAdjoinParamsColumnLevel = IRDimAdjoinParamsColumnLevel; 
  tagIRDimAdjoinServiceEditWndType = IRDimAdjoinServiceEditWndType; 
  tagIRDimEffDefParamType = IRDimEffDefParamType; 
  tagIRDimEffDefIntPsType = IRDimEffDefIntPsType; 
  tagIRDimEffDefDirType = IRDimEffDefDirType; 
  tagIRDimProfDefType = IRDimProfDefType; 
  tagIRDimProfDefItemType = IRDimProfDefItemType; 
  tagIRDimProfDefValType = IRDimProfDefValType; 
  tagIRDimMembDefGuidType = IRDimMembDefGuidType; 
  tagIRDimMembDefType = IRDimMembDefType; 
  tagIRDimMembDefMatType = IRDimMembDefMatType; 
  tagIRDimMembDefLengthDataType = IRDimMembDefLengthDataType; 
  tagIRDimMembDefBucklingDataType = IRDimMembDefBucklingDataType; 
  tagIRDimMembDefDispDataType = IRDimMembDefDispDataType; 
  tagIRDimMembDefDeflDataType = IRDimMembDefDeflDataType; 
  tagIRDimMembDefIntPsDataType = IRDimMembDefIntPsDataType; 
  tagIRDimMembDefInitDeflType = IRDimMembDefInitDeflType; 
  tagIRDimMembDefUserInitDeflType = IRDimMembDefUserInitDeflType; 
  tagIRDimMembDefOptionType = IRDimMembDefOptionType; 
  tagIRDimMembDefAdjoinHowCalcul = IRDimMembDefAdjoinHowCalcul; 
  tagIRDimMembDefAdjoinWayOfCalcul = IRDimMembDefAdjoinWayOfCalcul; 
  tagIRDimMembDefIntPsOptionType = IRDimMembDefIntPsOptionType; 
  tagIRDimMatDefType = IRDimMatDefType; 
  tagIRDimMatDefValType = IRDimMatDefValType; 
  tagIRDimMatDefLongExValType = IRDimMatDefLongExValType; 
  tagIRDimMatDefDblExValType = IRDimMatDefDblExValType; 
  tagIRDimDeflDispType = IRDimDeflDispType; 
  tagIRDimDeflDispInitType = IRDimDeflDispInitType; 
  tagIRDimDeflDispCaseType = IRDimDeflDispCaseType; 
  tagIRDimDeflDispSimpleCaseNature = IRDimDeflDispSimpleCaseNature; 
  tagIRDimDeflDispCodeCombType = IRDimDeflDispCodeCombType; 
  tagIRDimDeflDispRegulationsCoeff = IRDimDeflDispRegulationsCoeff; 
  tagIRDimCalcStateFlagType = IRDimCalcStateFlagType; 
  tagIRDimCalcStateCalcType = IRDimCalcStateCalcType; 
  tagIRDimCalcStateValueType = IRDimCalcStateValueType; 
  tagIRDimMembCalcRetValue = IRDimMembCalcRetValue; 
  tagIRDimMembCalcBuckType = IRDimMembCalcBuckType; 
  tagIRDimCalcParamVerifType = IRDimCalcParamVerifType; 
  tagIRDimCalcParamLimitStateType = IRDimCalcParamLimitStateType; 
  tagIRDimOptimParamOptionType = IRDimOptimParamOptionType; 
  tagIRDimOptimParamLimitType = IRDimOptimParamLimitType; 
  tagIRDimCalcConfFlagType = IRDimCalcConfFlagType; 
  tagIRDimCalcConfValueType = IRDimCalcConfValueType; 
  tagIRDimMembCalcFinishType = IRDimMembCalcFinishType; 
  tagIRDimMembCalcMessageType = IRDimMembCalcMessageType; 
  tagIRDimMembCalcMatStrengthCode = IRDimMembCalcMatStrengthCode; 
  tagIRDimMembResCalcType = IRDimMembResCalcType; 
  tagIRDimMembResTableLineType = IRDimMembResTableLineType; 
  tagIRDimMembResTableComp = IRDimMembResTableComp; 
  tagIRDimMembResTableDefType = IRDimMembResTableDefType; 
  tagIRDimMembResTableDefProf = IRDimMembResTableDefProf; 
  tagIRDimMembResTableDefMater = IRDimMembResTableDefMater; 
  tagIRDimAllResObjectType = IRDimAllResObjectType; 
  tagIRDimGrpResCurrProf = IRDimGrpResCurrProf; 
  tagIRDimUnitType = IRDimUnitType; 
  tagIRDimClientCalcConfDefaultWndType = IRDimClientCalcConfDefaultWndType; 
  tagIRDimManParRetValue = IRDimManParRetValue; 
  tagIRDimConnectionMsg = IRDimConnectionMsg; 
  tagIRDimBuckDiagramANS = IRDimBuckDiagramANS; 
  tagIRDimLatBuckCoefDiagramANS = IRDimLatBuckCoefDiagramANS; 
  tagIRDimLatBuckCbCoeffDiagramANS = IRDimLatBuckCbCoeffDiagramANS; 
  tagIRDimBuckDiagramCM66 = IRDimBuckDiagramCM66; 
  tagIRDimLaterBuckTypeCM66 = IRDimLaterBuckTypeCM66; 
  tagIRDimLoadLevelCM66 = IRDimLoadLevelCM66; 
  tagIRDimLatBuckCoefDiagramCM66 = IRDimLatBuckCoefDiagramCM66; 
  tagIRDimLoadTypeCM66 = IRDimLoadTypeCM66; 
  tagIRDimAmplificationCM66 = IRDimAmplificationCM66; 
  tagIRDimLoadTypeEC3 = IRDimLoadTypeEC3; 
  tagIRDimLaterBuckTypeEC3 = IRDimLaterBuckTypeEC3; 
  tagIRDimLoadLevelEC3 = IRDimLoadLevelEC3; 
  tagIRDimLatBuckCoeffDiagramEC3 = IRDimLatBuckCoeffDiagramEC3; 
  tagIRDimBuckDiagramEC3 = IRDimBuckDiagramEC3; 
  tagIRDimYieldStrengthTypeEC3 = IRDimYieldStrengthTypeEC3; 
  tagIRDimLoadTypeE32 = IRDimLoadTypeE32; 
  tagIRDimLoadLevelE32 = IRDimLoadLevelE32; 
  tagIRDimLatBuckCoeffDiagramE32 = IRDimLatBuckCoeffDiagramE32; 
  tagIRDimBuckDiagramE32 = IRDimBuckDiagramE32; 
  tagIRDimBucklingCurveE32 = IRDimBucklingCurveE32; 
  tagIRDimYieldStrengthTypeE32 = IRDimYieldStrengthTypeE32; 
  tagIRDimLatBuckMethodTypeE32 = IRDimLatBuckMethodTypeE32; 
  tagIRDimBuckDiagramE52 = IRDimBuckDiagramE52; 
  tagIRDimComplexBattenTypeE52 = IRDimComplexBattenTypeE52; 
  tagIRDimComplexConnectTypeE52 = IRDimComplexConnectTypeE52; 
  tagIRDimLaterBuckTypeE52 = IRDimLaterBuckTypeE52; 
  tagIRDimLoadLevelE52 = IRDimLoadLevelE52; 
  tagIRDimLoadTypeE52 = IRDimLoadTypeE52; 
  tagIRDimLatBuckCoefDiagramE52 = IRDimLatBuckCoefDiagramE52; 
  tagIRDimMethodOfCritStressDetermE52 = IRDimMethodOfCritStressDetermE52; 
  tagIRDimFireMethodE52 = IRDimFireMethodE52; 
  tagIRDimFireTimeOfReqResistE52 = IRDimFireTimeOfReqResistE52; 
  tagIRDimFireAddProtectOfSectSidesE52 = IRDimFireAddProtectOfSectSidesE52; 
  tagIRDimBuckDiagramCB71 = IRDimBuckDiagramCB71; 
  tagIRDimLaterBuckTypeCB71 = IRDimLaterBuckTypeCB71; 
  tagIRDimLoadLevelCB71 = IRDimLoadLevelCB71; 
  tagIRDimLoadTypeCB71 = IRDimLoadTypeCB71; 
  tagIRDimFireMemberPositionsCB71 = IRDimFireMemberPositionsCB71; 
  tagIRDimFireProtectionTimesCB71 = IRDimFireProtectionTimesCB71; 
  tagIRDimBuckDiagramLRFD = IRDimBuckDiagramLRFD; 
  tagIRDimLatBuckCoefDiagramLRFD = IRDimLatBuckCoefDiagramLRFD; 
  tagIRDimLatBuckCbCoeffDiagramLRFD = IRDimLatBuckCbCoeffDiagramLRFD; 
  tagIRDimBuckDiagramBS59 = IRDimBuckDiagramBS59; 
  tagIRDimLaterBuckTypeBS59 = IRDimLaterBuckTypeBS59; 
  tagIRDimSlendCorrectionDiagramBS59 = IRDimSlendCorrectionDiagramBS59; 
  tagIRDimEqUniformMomentDiagramBS59 = IRDimEqUniformMomentDiagramBS59; 
  tagIRDimLatBuckLengthCoefDiagramBS59 = IRDimLatBuckLengthCoefDiagramBS59; 
  tagIRDimBuckDiagramBS59_2000 = IRDimBuckDiagramBS59_2000; 
  tagIRDimBuckCurveBS59_2000 = IRDimBuckCurveBS59_2000; 
  tagIRDimLaterBuckTypeBS59_2000 = IRDimLaterBuckTypeBS59_2000; 
  tagIRDimLatBuckLengthCoefDiagramBS59_2000 = IRDimLatBuckLengthCoefDiagramBS59_2000; 
  tagIRDimEffDefExtValType = IRDimEffDefExtValType; 
  tagIRDimThinWalledFormingTypeE32 = IRDimThinWalledFormingTypeE32; 
  tagIRDimThinWalledPosOfSheetingE32 = IRDimThinWalledPosOfSheetingE32; 
  tagIRDimThinWalledSheetFastenedE32 = IRDimThinWalledSheetFastenedE32; 
  tagIRDimThinWalledPitchOfFastenersE32 = IRDimThinWalledPitchOfFastenersE32; 
  tagIRDimThinWalledModelForCalculE32 = IRDimThinWalledModelForCalculE32; 
  tagIRDimThinWalledPosOfPurlinsE32 = IRDimThinWalledPosOfPurlinsE32; 
  tagIRDimFireResistTempCurveE32 = IRDimFireResistTempCurveE32; 
  tagIRDimFireResistSteelMembProtE32 = IRDimFireResistSteelMembProtE32; 
  tagIRDimFireResistSectExpositionE32 = IRDimFireResistSectExpositionE32; 
  tagIRDimFireResistEncasementTypeE32 = IRDimFireResistEncasementTypeE32; 
  tagIRDimComplexSectChordConnTypeE32 = IRDimComplexSectChordConnTypeE32; 
  tagIRDimComplexSectDistTypeE32 = IRDimComplexSectDistTypeE32; 
  tagIRDimComplexSectLaticeTypeE32 = IRDimComplexSectLaticeTypeE32; 
  tagIRJointLoadType = IRJointLoadType; 
  tagIRJointConnectionDefType = IRJointConnectionDefType; 
  tagIRJointConnectionType = IRJointConnectionType; 
  tagIRJointSpreadFootingType = IRJointSpreadFootingType; 
  tagIRJointWebFlangeRelativePos = IRJointWebFlangeRelativePos; 
  tagIRJointColumnBasePlateCalcModel = IRJointColumnBasePlateCalcModel; 
  tagIRJointBoltType = IRJointBoltType; 
  tagIRJointWebType = IRJointWebType; 
  tagIRJointKneeDiagonalStiffType = IRJointKneeDiagonalStiffType; 
  tagIRJointKneeType = IRJointKneeType; 
  tagIRJointKneeFixType = IRJointKneeFixType; 
  tagIRJointKneeReinfType = IRJointKneeReinfType; 
  tagIRJointKneeWebStiffType = IRJointKneeWebStiffType; 
  tagIRJointBoltsCalculateType = IRJointBoltsCalculateType; 
  tagIRJointColumnWebCalculateType = IRJointColumnWebCalculateType; 
  tagIRJointGlobalAnalysisType = IRJointGlobalAnalysisType; 
  tagIRJointFrameType = IRJointFrameType; 
  tagIRJointWeldType = IRJointWeldType; 
  tagIRJointColumnBElementType = IRJointColumnBElementType; 
  tagIRJointAnchorType = IRJointAnchorType; 
  tagIRJointFootBoltsArrangement = IRJointFootBoltsArrangement; 
  tagIRJointFootPlateType = IRJointFootPlateType; 
  tagIRJointWedgeType = IRJointWedgeType; 
  tagIRJointPinnedColumnBaseStiffType = IRJointPinnedColumnBaseStiffType; 
  tagIRJointAnchorPlateType = IRJointAnchorPlateType; 
  tagIRJointFixedColumnBaseStiffType = IRJointFixedColumnBaseStiffType; 
  tagIRJointFootStiffType = IRJointFootStiffType; 
  tagIRJointAngleType = IRJointAngleType; 
  tagIRJointAngleProfilePosition = IRJointAngleProfilePosition; 
  tagIRJointTubeType = IRJointTubeType; 
  tagIRJointTubeProfileType = IRJointTubeProfileType; 
  tagIRJointGussetFixType = IRJointGussetFixType; 
  tagIRJointGussetSimpleProfilePosition = IRJointGussetSimpleProfilePosition; 
  tagIRJointGussetCornersType = IRJointGussetCornersType; 
  tagIRJointGussetCrossProfileCutting = IRJointGussetCrossProfileCutting; 
  tagIRJointGussetFlangeProfileCutting = IRJointGussetFlangeProfileCutting; 
  tagIRJointGussetDiagonalePositionType = IRJointGussetDiagonalePositionType; 
  tagIRJointGussetFlangePlateRegularType = IRJointGussetFlangePlateRegularType; 
  tagIRJointConnectorsType = IRJointConnectorsType; 
  tagIRJointElementType = IRJointElementType; 
  tagIRJointBeamColumnElementType = IRJointBeamColumnElementType; 
  tagIRJointAngleUnit = IRJointAngleUnit; 
  tagIRJointExtType = IRJointExtType; 
  tagIRJointKneeMaterials = IRJointKneeMaterials; 
  tagRJointCoeffPunchingMethodType = RJointCoeffPunchingMethodType; 
  tagIRJointColumnBaseCalcModelType = IRJointColumnBaseCalcModelType; 
  tagIRJointComponentType = IRJointComponentType; 
  tagIRJointCalcTypeCoeffK = IRJointCalcTypeCoeffK; 
  tagIRJointBoltShearPortion = IRJointBoltShearPortion; 
  tagIRJointSpliceType = IRJointSpliceType; 
  tagIRJointSplicePlateType = IRJointSplicePlateType; 
  tagIRJointSplicePlatesSetType = IRJointSplicePlatesSetType; 
  tagIRJointSplicePlateJointType = IRJointSplicePlateJointType; 
  tagIRJointSpliceBoltsSetType = IRJointSpliceBoltsSetType; 
  tagIRJointSpliceBoltsConnectionCategory = IRJointSpliceBoltsConnectionCategory; 
  tagIRJointTieStiffenersType = IRJointTieStiffenersType; 
  tagIRJointTieBoltsConnectionCategory = IRJointTieBoltsConnectionCategory; 
  tagIRJointTieBoltsArrangementType = IRJointTieBoltsArrangementType; 
  tagIRBestCalcErrors = IRBestCalcErrors; 
  tagIRBestCalcWarnings = IRBestCalcWarnings; 
  tagIRBestCalcParamsDataDoubleValue = IRBestCalcParamsDataDoubleValue; 
  tagIRBestCalcParamsDataIntegerValue = IRBestCalcParamsDataIntegerValue; 
  tagIRBestCalcParamsDataStringValue = IRBestCalcParamsDataStringValue; 
  tagIRBestMemberDataDoubleValue = IRBestMemberDataDoubleValue; 
  tagIRBestMemberDataIntegerValue = IRBestMemberDataIntegerValue; 
  tagIRBestMemberDataStringValue = IRBestMemberDataStringValue; 
  tagIRBestMemberType = IRBestMemberType; 
  tagIRBestResultsDoubleValue = IRBestResultsDoubleValue; 
  tagIRBestResultsIntegerValue = IRBestResultsIntegerValue; 
  tagIRBestDimParamsIntegerValue = IRBestDimParamsIntegerValue; 
  tagIRBestResultsStringValue = IRBestResultsStringValue; 
  tagIRBestCodeCalculationType = IRBestCodeCalculationType; 
  tagIRBestCalculationType = IRBestCalculationType; 
  tagIRBestDimParamsDoubleValue = IRBestDimParamsDoubleValue; 
  tagIRBestBendType = IRBestBendType; 
  tagIRBestCoordSystem = IRBestCoordSystem; 
  tagIRBestDirection = IRBestDirection; 
  tagIRBestLevel = IRBestLevel; 
  tagIRBestForceDataDoubleValue = IRBestForceDataDoubleValue; 
  tagIRConcrBarSectionGeometryType = IRConcrBarSectionGeometryType; 
  tagIRBestForceDataIntegerValue = IRBestForceDataIntegerValue; 
  tagIRBestForceDataSLSCombType = IRBestForceDataSLSCombType; 
  tagIRConcrReinforceDirection = IRConcrReinforceDirection; 
  tagIRConcr_PN_SteelGrades = IRConcr_PN_SteelGrades; 
  tagIRConcr_PN84_ConcreteGrades = IRConcr_PN84_ConcreteGrades; 
  tagIRConcr_PN84_ExposureRatings = IRConcr_PN84_ExposureRatings; 
  tagIRConcr_PN99_ExposureRatings = IRConcr_PN99_ExposureRatings; 
  tagIRConcr_PN99_ConcreteGrades = IRConcr_PN99_ConcreteGrades; 
  tagIRConcr_BAEL_CrackingType = IRConcr_BAEL_CrackingType; 
  tagIRConcr_BAEL_EnvironmentType = IRConcr_BAEL_EnvironmentType; 
  tagIRConcr_BAEL_WaterLevel = IRConcr_BAEL_WaterLevel; 
  tagIRConcr_BAEL_ConcreteGrades = IRConcr_BAEL_ConcreteGrades; 
  tagIRConcr_BAEL_SteelGrades = IRConcr_BAEL_SteelGrades; 
  tagIRConcr_PN84_HumidityType = IRConcr_PN84_HumidityType; 
  tagIRConcr_ACI318_LoadActionPeriodType = IRConcr_ACI318_LoadActionPeriodType; 
  tagIRConcr_ACI318_SteelGrades = IRConcr_ACI318_SteelGrades; 
  tagIRConcr_ACI318_BarDim = IRConcr_ACI318_BarDim; 
  tagIRConcr_ACI318_MetricBarDIm = IRConcr_ACI318_MetricBarDim; 
  tagIRConcrReinforceBarType = IRConcrReinforceBarType; 
  tagIRConcr_BS8110_ExposureRatings = IRConcr_BS8110_ExposureRatings; 
  tagIRConcr_BS8110_ConcreteAge = IRConcr_BS8110_ConcreteAge; 
  tagIRConcr_BS8110_ConcreteGrades = IRConcr_BS8110_ConcreteGrades; 
  tagIRConcr_BS8110_PartialSafetyFactors = IRConcr_BS8110_PartialSafetyFactors; 
  tagIRConcrReinforceCalcType = IRConcrReinforceCalcType; 
  tagIRConcr_SNIP_SteelGrades = IRConcr_SNIP_SteelGrades; 
  tagIRConcr_SNIP_ConcreteGrades = IRConcr_SNIP_ConcreteGrades; 
  tagIRConcr_SNIP_ConcreteTypes = IRConcr_SNIP_ConcreteTypes; 
  tagIRConcr_SNIP_CuringMethods = IRConcr_SNIP_CuringMethods; 
  tagIRConcr_SNIP_Exposure = IRConcr_SNIP_Exposure; 
  tagIRConcr_EC2_ConcreteGrades = IRConcr_EC2_ConcreteGrades; 
  tagIRConcr_EC2_ITALIAN_SteelGrades = IRConcr_EC2_ITALIAN_SteelGrades; 
  tagIRConcr_EC2_ExposureRatings = IRConcr_EC2_ExposureRatings; 
  tagIRConcr_EC2_NAD = IRConcr_EC2_NAD; 
  tagIRConcrMinimumReinforcementType = IRConcrMinimumReinforcementType; 
  tagIRConcr_IS2000_EnvironmentType = IRConcr_IS2000_EnvironmentType; 
  tagIRConcrColumnLoadCaseType = IRConcrColumnLoadCaseType; 
  tagIRConcrCodeColumnCommand = IRConcrCodeColumnCommand; 
  tagIRobotQuitOption = IRobotQuitOption; 
  tagIRobotLicenseEntitlement = IRobotLicenseEntitlement; 
  tagIRobotLicenseEntitlementStatus = IRobotLicenseEntitlementStatus; 
  tag_eRobotLabelType = _eRobotLabelType; 

// *********************************************************************//
// Interface: IDontUseIt
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {7124F52D-6466-43EC-87F2-16285FE58515}
// *********************************************************************//
  IDontUseIt = interface(IDispatch)
    ['{7124F52D-6466-43EC-87F2-16285FE58515}']
    function Get_RX: Integer; safecall;
    function Get_RY: Integer; safecall;
    function Get_RZ: Integer; safecall;
    property RX: Integer read Get_RX;
    property RY: Integer read Get_RY;
    property RZ: Integer read Get_RZ;
  end;

// *********************************************************************//
// DispIntf:  IDontUseItDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {7124F52D-6466-43EC-87F2-16285FE58515}
// *********************************************************************//
  IDontUseItDisp = dispinterface
    ['{7124F52D-6466-43EC-87F2-16285FE58515}']
    property RX: Integer readonly dispid 1610743808;
    property RY: Integer readonly dispid 1610743809;
    property RZ: Integer readonly dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotLabel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B9E29FE1-AB0D-11D2-9845-0080C86BE4DF}
// *********************************************************************//
  IRobotLabel = interface(IDispatch)
    ['{B9E29FE1-AB0D-11D2-9845-0080C86BE4DF}']
    function Get_type_: IRobotLabelType; safecall;
    function Get_Name: WideString; safecall;
    function Get_Data: IDispatch; safecall;
    function Get_UniqueId: Integer; safecall;
    function Get_UserId: Integer; safecall;
    procedure Set_UserId(ret: Integer); safecall;
    property type_: IRobotLabelType read Get_type_;
    property Name: WideString read Get_Name;
    property Data: IDispatch read Get_Data;
    property UniqueId: Integer read Get_UniqueId;
    property UserId: Integer read Get_UserId write Set_UserId;
  end;

// *********************************************************************//
// DispIntf:  IRobotLabelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B9E29FE1-AB0D-11D2-9845-0080C86BE4DF}
// *********************************************************************//
  IRobotLabelDisp = dispinterface
    ['{B9E29FE1-AB0D-11D2-9845-0080C86BE4DF}']
    property type_: IRobotLabelType readonly dispid 1;
    property Name: WideString readonly dispid 2;
    property Data: IDispatch readonly dispid 3;
    property UniqueId: Integer readonly dispid 1610743811;
    property UserId: Integer dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotLabelServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B4598F10-C5BE-11D2-9860-0080C86BE4DF}
// *********************************************************************//
  IRobotLabelServer = interface(IDispatch)
    ['{B4598F10-C5BE-11D2-9860-0080C86BE4DF}']
    function Create(lab_type: IRobotLabelType; const lab_name: WideString): IRobotLabel; safecall;
    procedure Store(const label_: IRobotLabel); safecall;
    procedure Delete(lab_type: IRobotLabelType; const lab_name: WideString); safecall;
    function Exist(lab_type: IRobotLabelType; const lab_name: WideString): Integer; safecall;
    function Get(lab_type: IRobotLabelType; const lab_name: WideString): IRobotLabel; safecall;
    function GetMany(lab_type: IRobotLabelType): IRobotCollection; safecall;
    function GetAll: IRobotCollection; safecall;
    function FindWithId(unique_id: Integer): IRobotLabel; safecall;
    procedure StoreWithName(const _label: IRobotLabel; const _label_name: WideString); safecall;
    function GetAvailableNames(_label_type: IRobotLabelType): IRobotNamesArray; safecall;
    function IsAvailable(_lab_type: IRobotLabelType; const _lab_name: WideString): WordBool; safecall;
    function CreateLike(_lab_type: IRobotLabelType; const _lab_name: WideString; 
                        const _like_name: WideString): IRobotLabel; safecall;
    function SetDefault(_lab_type: IRobotLabelType; const _lab_name: WideString): WordBool; safecall;
    function GetDefault(_lab_type: IRobotLabelType): WideString; safecall;
    function IsUsed(_lab_type: IRobotLabelType; const _lab_name: WideString): WordBool; safecall;
    function GetUniqueId(_lab_type: IRobotLabelType; const _lab_name: WideString): Integer; safecall;
    function GetPredefinedName(_predef_label: IRobotPredefinedLabel): WideString; safecall;
    function IsPredefinedName(_lab_type: IRobotLabelType; const _lab_name: WideString; 
                              out _ret_predef_lab: IRobotPredefinedLabel): WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotLabelServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B4598F10-C5BE-11D2-9860-0080C86BE4DF}
// *********************************************************************//
  IRobotLabelServerDisp = dispinterface
    ['{B4598F10-C5BE-11D2-9860-0080C86BE4DF}']
    function Create(lab_type: IRobotLabelType; const lab_name: WideString): IRobotLabel; dispid 1610743808;
    procedure Store(const label_: IRobotLabel); dispid 1610743809;
    procedure Delete(lab_type: IRobotLabelType; const lab_name: WideString); dispid 1610743810;
    function Exist(lab_type: IRobotLabelType; const lab_name: WideString): Integer; dispid 1610743811;
    function Get(lab_type: IRobotLabelType; const lab_name: WideString): IRobotLabel; dispid 1610743812;
    function GetMany(lab_type: IRobotLabelType): IRobotCollection; dispid 1610743813;
    function GetAll: IRobotCollection; dispid 1610743814;
    function FindWithId(unique_id: Integer): IRobotLabel; dispid 1610743815;
    procedure StoreWithName(const _label: IRobotLabel; const _label_name: WideString); dispid 1610743816;
    function GetAvailableNames(_label_type: IRobotLabelType): IRobotNamesArray; dispid 1610743817;
    function IsAvailable(_lab_type: IRobotLabelType; const _lab_name: WideString): WordBool; dispid 1610743818;
    function CreateLike(_lab_type: IRobotLabelType; const _lab_name: WideString; 
                        const _like_name: WideString): IRobotLabel; dispid 1610743819;
    function SetDefault(_lab_type: IRobotLabelType; const _lab_name: WideString): WordBool; dispid 1610743820;
    function GetDefault(_lab_type: IRobotLabelType): WideString; dispid 1610743821;
    function IsUsed(_lab_type: IRobotLabelType; const _lab_name: WideString): WordBool; dispid 1610743822;
    function GetUniqueId(_lab_type: IRobotLabelType; const _lab_name: WideString): Integer; dispid 1610743823;
    function GetPredefinedName(_predef_label: IRobotPredefinedLabel): WideString; dispid 1610743824;
    function IsPredefinedName(_lab_type: IRobotLabelType; const _lab_name: WideString; 
                              out _ret_predef_lab: IRobotPredefinedLabel): WordBool; dispid 1610743825;
  end;

// *********************************************************************//
// Interface: IRobotCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {93ED3020-A634-11D2-9840-0080C86BE4DF}
// *********************************************************************//
  IRobotCollection = interface(IDispatch)
    ['{93ED3020-A634-11D2-9840-0080C86BE4DF}']
    function Get_Count: Integer; safecall;
    function Get(idx: Integer): IDispatch; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {93ED3020-A634-11D2-9840-0080C86BE4DF}
// *********************************************************************//
  IRobotCollectionDisp = dispinterface
    ['{93ED3020-A634-11D2-9840-0080C86BE4DF}']
    property Count: Integer readonly dispid 1;
    function Get(idx: Integer): IDispatch; dispid 2;
  end;

// *********************************************************************//
// Interface: IRobotNamesArray
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {419B03C1-B850-11D3-B7AB-0050DA76755E}
// *********************************************************************//
  IRobotNamesArray = interface(IDispatch)
    ['{419B03C1-B850-11D3-B7AB-0050DA76755E}']
    function Get_Count: Integer; safecall;
    procedure SetSize(Count: Integer); safecall;
    function Get(idx: Integer): WideString; safecall;
    procedure Set_(idx: Integer; const text: WideString); safecall;
    function Find(const _to_find: WideString; _start_idx: Integer): Integer; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotNamesArrayDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {419B03C1-B850-11D3-B7AB-0050DA76755E}
// *********************************************************************//
  IRobotNamesArrayDisp = dispinterface
    ['{419B03C1-B850-11D3-B7AB-0050DA76755E}']
    property Count: Integer readonly dispid 1610743808;
    procedure SetSize(Count: Integer); dispid 1610743809;
    function Get(idx: Integer): WideString; dispid 1610743810;
    procedure Set_(idx: Integer; const text: WideString); dispid 1610743811;
    function Find(const _to_find: WideString; _start_idx: Integer): Integer; dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotLoadRecord
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D556A4A-CD92-11D2-986B-0080C86BE4DF}
// *********************************************************************//
  IRobotLoadRecord = interface(IDispatch)
    ['{2D556A4A-CD92-11D2-986B-0080C86BE4DF}']
    function Get_type_: IRobotLoadRecordType; safecall;
    function Get_ObjectType: IRobotObjectType; safecall;
    procedure Set_ObjectType(ret: IRobotObjectType); safecall;
    function Get_Objects: IRobotSelection; safecall;
    function Get_Description: WideString; safecall;
    procedure Set_Description(const ret: WideString); safecall;
    function GetValue(val_id: Smallint): Double; safecall;
    procedure SetValue(val_id: Smallint; val: Double); safecall;
    property type_: IRobotLoadRecordType read Get_type_;
    property ObjectType: IRobotObjectType read Get_ObjectType write Set_ObjectType;
    property Objects: IRobotSelection read Get_Objects;
    property Description: WideString read Get_Description write Set_Description;
  end;

// *********************************************************************//
// DispIntf:  IRobotLoadRecordDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D556A4A-CD92-11D2-986B-0080C86BE4DF}
// *********************************************************************//
  IRobotLoadRecordDisp = dispinterface
    ['{2D556A4A-CD92-11D2-986B-0080C86BE4DF}']
    property type_: IRobotLoadRecordType readonly dispid 1610743808;
    property ObjectType: IRobotObjectType dispid 1610743809;
    property Objects: IRobotSelection readonly dispid 1610743811;
    property Description: WideString dispid 1610743812;
    function GetValue(val_id: Smallint): Double; dispid 1610743814;
    procedure SetValue(val_id: Smallint; val: Double); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotLoadRecord2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DDA889F0-FF33-11D3-B7E6-0050DA76755E}
// *********************************************************************//
  IRobotLoadRecord2 = interface(IRobotLoadRecord)
    ['{DDA889F0-FF33-11D3-B7E6-0050DA76755E}']
    procedure GhostMethod_IRobotLoadRecord2_0_1; safecall;
    procedure GhostMethod_IRobotLoadRecord2_4_2; safecall;
    procedure GhostMethod_IRobotLoadRecord2_8_3; safecall;
    procedure GhostMethod_IRobotLoadRecord2_12_4; safecall;
    procedure GhostMethod_IRobotLoadRecord2_16_5; safecall;
    procedure GhostMethod_IRobotLoadRecord2_20_6; safecall;
    procedure GhostMethod_IRobotLoadRecord2_24_7; safecall;
    procedure GhostMethod_IRobotLoadRecord2_28_8; safecall;
    procedure GhostMethod_IRobotLoadRecord2_32_9; safecall;
    procedure GhostMethod_IRobotLoadRecord2_36_10; safecall;
    procedure GhostMethod_IRobotLoadRecord2_40_11; safecall;
    procedure GhostMethod_IRobotLoadRecord2_44_12; safecall;
    procedure GhostMethod_IRobotLoadRecord2_48_13; safecall;
    procedure GhostMethod_IRobotLoadRecord2_52_14; safecall;
    procedure GhostMethod_IRobotLoadRecord2_56_15; safecall;
    function Get_UniqueId: Integer; safecall;
    function SetGeoLimits(const layer_def: IRobotGeoLayer): WordBool; safecall;
    function GetGeoLimits: IRobotGeoLayer; safecall;
    function Get_UserId: Integer; safecall;
    procedure Set_UserId(ret: Integer); safecall;
    property UniqueId: Integer read Get_UniqueId;
    property UserId: Integer read Get_UserId write Set_UserId;
  end;

// *********************************************************************//
// DispIntf:  IRobotLoadRecord2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DDA889F0-FF33-11D3-B7E6-0050DA76755E}
// *********************************************************************//
  IRobotLoadRecord2Disp = dispinterface
    ['{DDA889F0-FF33-11D3-B7E6-0050DA76755E}']
    procedure GhostMethod_IRobotLoadRecord2_0_1; dispid 1610678272;
    procedure GhostMethod_IRobotLoadRecord2_4_2; dispid 1610678273;
    procedure GhostMethod_IRobotLoadRecord2_8_3; dispid 1610678274;
    procedure GhostMethod_IRobotLoadRecord2_12_4; dispid 1610678275;
    procedure GhostMethod_IRobotLoadRecord2_16_5; dispid 1610678276;
    procedure GhostMethod_IRobotLoadRecord2_20_6; dispid 1610678277;
    procedure GhostMethod_IRobotLoadRecord2_24_7; dispid 1610678278;
    procedure GhostMethod_IRobotLoadRecord2_28_8; dispid 1610678279;
    procedure GhostMethod_IRobotLoadRecord2_32_9; dispid 1610678280;
    procedure GhostMethod_IRobotLoadRecord2_36_10; dispid 1610678281;
    procedure GhostMethod_IRobotLoadRecord2_40_11; dispid 1610678282;
    procedure GhostMethod_IRobotLoadRecord2_44_12; dispid 1610678283;
    procedure GhostMethod_IRobotLoadRecord2_48_13; dispid 1610678284;
    procedure GhostMethod_IRobotLoadRecord2_52_14; dispid 1610678285;
    procedure GhostMethod_IRobotLoadRecord2_56_15; dispid 1610678286;
    property UniqueId: Integer readonly dispid 1610809344;
    function SetGeoLimits(const layer_def: IRobotGeoLayer): WordBool; dispid 1610809345;
    function GetGeoLimits: IRobotGeoLayer; dispid 1610809346;
    property UserId: Integer dispid 1610809347;
    property type_: IRobotLoadRecordType readonly dispid 1610743808;
    property ObjectType: IRobotObjectType dispid 1610743809;
    property Objects: IRobotSelection readonly dispid 1610743811;
    property Description: WideString dispid 1610743812;
    function GetValue(val_id: Smallint): Double; dispid 1610743814;
    procedure SetValue(val_id: Smallint; val: Double); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotLoadRecordCommon
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {02287139-482D-444C-BEE8-7AB53A8B1B84}
// *********************************************************************//
  IRobotLoadRecordCommon = interface(IDispatch)
    ['{02287139-482D-444C-BEE8-7AB53A8B1B84}']
    function Get_IsAutoGenerated: WordBool; safecall;
    property IsAutoGenerated: WordBool read Get_IsAutoGenerated;
  end;

// *********************************************************************//
// DispIntf:  IRobotLoadRecordCommonDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {02287139-482D-444C-BEE8-7AB53A8B1B84}
// *********************************************************************//
  IRobotLoadRecordCommonDisp = dispinterface
    ['{02287139-482D-444C-BEE8-7AB53A8B1B84}']
    property IsAutoGenerated: WordBool readonly dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRobotSelection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B9E29FE3-AB0D-11D2-9845-0080C86BE4DF}
// *********************************************************************//
  IRobotSelection = interface(IDispatch)
    ['{B9E29FE3-AB0D-11D2-9845-0080C86BE4DF}']
    function Get_type_: IRobotObjectType; safecall;
    procedure FromText(const sel_text: WideString); safecall;
    function ToText: WideString; safecall;
    procedure Clear; safecall;
    procedure Add(const sel: IRobotSelection); safecall;
    procedure Exclude(const sel: IRobotSelection); safecall;
    procedure And_(const sel: IRobotSelection); safecall;
    function Get_Count: Integer; safecall;
    procedure AddOne(_obj_num: Integer); safecall;
    procedure ExcludeOne(_obj_num: Integer); safecall;
    function Contains(_obj_num: Integer): WordBool; safecall;
    function Get(_idx: Integer): Integer; safecall;
    procedure AddText(const _sel_text: WideString); safecall;
    procedure ExcludeText(const _sel_text: WideString); safecall;
    procedure AndText(const _sel_text: WideString); safecall;
    property type_: IRobotObjectType read Get_type_;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotSelectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B9E29FE3-AB0D-11D2-9845-0080C86BE4DF}
// *********************************************************************//
  IRobotSelectionDisp = dispinterface
    ['{B9E29FE3-AB0D-11D2-9845-0080C86BE4DF}']
    property type_: IRobotObjectType readonly dispid 1610743808;
    procedure FromText(const sel_text: WideString); dispid 1610743809;
    function ToText: WideString; dispid 1610743810;
    procedure Clear; dispid 1610743811;
    procedure Add(const sel: IRobotSelection); dispid 1610743812;
    procedure Exclude(const sel: IRobotSelection); dispid 1610743813;
    procedure And_(const sel: IRobotSelection); dispid 1610743814;
    property Count: Integer readonly dispid 1610743815;
    procedure AddOne(_obj_num: Integer); dispid 1610743816;
    procedure ExcludeOne(_obj_num: Integer); dispid 1610743817;
    function Contains(_obj_num: Integer): WordBool; dispid 1610743818;
    function Get(_idx: Integer): Integer; dispid 1610743819;
    procedure AddText(const _sel_text: WideString); dispid 1610743820;
    procedure ExcludeText(const _sel_text: WideString); dispid 1610743821;
    procedure AndText(const _sel_text: WideString); dispid 1610743822;
  end;

// *********************************************************************//
// Interface: IRobotGeoLayer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {925EEC62-78F8-11D4-B84F-0050DA76755E}
// *********************************************************************//
  IRobotGeoLayer = interface(IDispatch)
    ['{925EEC62-78F8-11D4-B84F-0050DA76755E}']
    function Get_P1: IRobotGeoPoint3D; safecall;
    function Get_P2: IRobotGeoPoint3D; safecall;
    function Get_P3: IRobotGeoPoint3D; safecall;
    function Get_PDir: IRobotGeoPoint3D; safecall;
    function Get_Thickness: Double; safecall;
    procedure Set_Thickness(ret: Double); safecall;
    function Get_IsThickDefined: WordBool; safecall;
    procedure Set_IsThickDefined(ret: WordBool); safecall;
    property P1: IRobotGeoPoint3D read Get_P1;
    property P2: IRobotGeoPoint3D read Get_P2;
    property P3: IRobotGeoPoint3D read Get_P3;
    property PDir: IRobotGeoPoint3D read Get_PDir;
    property Thickness: Double read Get_Thickness write Set_Thickness;
    property IsThickDefined: WordBool read Get_IsThickDefined write Set_IsThickDefined;
  end;

// *********************************************************************//
// DispIntf:  IRobotGeoLayerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {925EEC62-78F8-11D4-B84F-0050DA76755E}
// *********************************************************************//
  IRobotGeoLayerDisp = dispinterface
    ['{925EEC62-78F8-11D4-B84F-0050DA76755E}']
    property P1: IRobotGeoPoint3D readonly dispid 1610743808;
    property P2: IRobotGeoPoint3D readonly dispid 1610743809;
    property P3: IRobotGeoPoint3D readonly dispid 1610743810;
    property PDir: IRobotGeoPoint3D readonly dispid 1610743811;
    property Thickness: Double dispid 1610743812;
    property IsThickDefined: WordBool dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotGeoPoint3D
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5A3594B2-B23D-11D3-9975-0080C86BE4DF}
// *********************************************************************//
  IRobotGeoPoint3D = interface(IDispatch)
    ['{5A3594B2-B23D-11D3-9975-0080C86BE4DF}']
    function Get_X: Double; safecall;
    procedure Set_X(ret: Double); safecall;
    function Get_Y: Double; safecall;
    procedure Set_Y(ret: Double); safecall;
    function Get_Z: Double; safecall;
    procedure Set_Z(ret: Double); safecall;
    procedure Get(out _x: Double; out _y: Double; out _z: Double); safecall;
    procedure Set_(_x: Double; _y: Double; _z: Double); safecall;
    property X: Double read Get_X write Set_X;
    property Y: Double read Get_Y write Set_Y;
    property Z: Double read Get_Z write Set_Z;
  end;

// *********************************************************************//
// DispIntf:  IRobotGeoPoint3DDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5A3594B2-B23D-11D3-9975-0080C86BE4DF}
// *********************************************************************//
  IRobotGeoPoint3DDisp = dispinterface
    ['{5A3594B2-B23D-11D3-9975-0080C86BE4DF}']
    property X: Double dispid 1610743808;
    property Y: Double dispid 1610743810;
    property Z: Double dispid 1610743812;
    procedure Get(out _x: Double; out _y: Double; out _z: Double); dispid 1610743814;
    procedure Set_(_x: Double; _y: Double; _z: Double); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotLoadRecordMngr
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D556A4B-CD92-11D2-986B-0080C86BE4DF}
// *********************************************************************//
  IRobotLoadRecordMngr = interface(IDispatch)
    ['{2D556A4B-CD92-11D2-986B-0080C86BE4DF}']
    function Get_Count: Integer; safecall;
    function New(record_type: IRobotLoadRecordType): Integer; safecall;
    function Get(record_index: Integer): IRobotLoadRecord; safecall;
    procedure Delete(record_index: Integer); safecall;
    function Create(_load_type: IRobotLoadRecordType): IRobotLoadRecord; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotLoadRecordMngrDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D556A4B-CD92-11D2-986B-0080C86BE4DF}
// *********************************************************************//
  IRobotLoadRecordMngrDisp = dispinterface
    ['{2D556A4B-CD92-11D2-986B-0080C86BE4DF}']
    property Count: Integer readonly dispid 1610743808;
    function New(record_type: IRobotLoadRecordType): Integer; dispid 1610743809;
    function Get(record_index: Integer): IRobotLoadRecord; dispid 1610743810;
    procedure Delete(record_index: Integer); dispid 1610743811;
    function Create(_load_type: IRobotLoadRecordType): IRobotLoadRecord; dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotLoadRecordLinear
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5B6731F0-F344-11D2-98A6-0080C86BE4DF}
// *********************************************************************//
  IRobotLoadRecordLinear = interface(IRobotLoadRecord)
    ['{5B6731F0-F344-11D2-98A6-0080C86BE4DF}']
    procedure SetPoint(which_point: SYSINT; _x: Double; _y: Double; _z: Double); safecall;
    procedure GetPoint(which_point: SYSINT; out _x: Double; out _y: Double; out _z: Double); safecall;
    function Get_UniqueId: Integer; safecall;
    function Get_UserId: Integer; safecall;
    procedure Set_UserId(ret: Integer); safecall;
    property UniqueId: Integer read Get_UniqueId;
    property UserId: Integer read Get_UserId write Set_UserId;
  end;

// *********************************************************************//
// DispIntf:  IRobotLoadRecordLinearDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5B6731F0-F344-11D2-98A6-0080C86BE4DF}
// *********************************************************************//
  IRobotLoadRecordLinearDisp = dispinterface
    ['{5B6731F0-F344-11D2-98A6-0080C86BE4DF}']
    procedure SetPoint(which_point: SYSINT; _x: Double; _y: Double; _z: Double); dispid 1610809344;
    procedure GetPoint(which_point: SYSINT; out _x: Double; out _y: Double; out _z: Double); dispid 1610809345;
    property UniqueId: Integer readonly dispid 1610809346;
    property UserId: Integer dispid 1610809347;
    property type_: IRobotLoadRecordType readonly dispid 1610743808;
    property ObjectType: IRobotObjectType dispid 1610743809;
    property Objects: IRobotSelection readonly dispid 1610743811;
    property Description: WideString dispid 1610743812;
    function GetValue(val_id: Smallint): Double; dispid 1610743814;
    procedure SetValue(val_id: Smallint; val: Double); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotLoadRecordLinear3D
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E464D50-F1B0-11D2-98A2-0080C86BE4DF}
// *********************************************************************//
  IRobotLoadRecordLinear3D = interface(IRobotLoadRecord)
    ['{7E464D50-F1B0-11D2-98A2-0080C86BE4DF}']
    procedure SetPoint(which_point: SYSINT; _x: Double; _y: Double; _z: Double); safecall;
    procedure GetPoint(which_point: SYSINT; out _x: Double; out _y: Double; out _z: Double); safecall;
    function Get_UniqueId: Integer; safecall;
    function Get_UserId: Integer; safecall;
    procedure Set_UserId(ret: Integer); safecall;
    property UniqueId: Integer read Get_UniqueId;
    property UserId: Integer read Get_UserId write Set_UserId;
  end;

// *********************************************************************//
// DispIntf:  IRobotLoadRecordLinear3DDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E464D50-F1B0-11D2-98A2-0080C86BE4DF}
// *********************************************************************//
  IRobotLoadRecordLinear3DDisp = dispinterface
    ['{7E464D50-F1B0-11D2-98A2-0080C86BE4DF}']
    procedure SetPoint(which_point: SYSINT; _x: Double; _y: Double; _z: Double); dispid 1610809344;
    procedure GetPoint(which_point: SYSINT; out _x: Double; out _y: Double; out _z: Double); dispid 1610809345;
    property UniqueId: Integer readonly dispid 1610809346;
    property UserId: Integer dispid 1610809347;
    property type_: IRobotLoadRecordType readonly dispid 1610743808;
    property ObjectType: IRobotObjectType dispid 1610743809;
    property Objects: IRobotSelection readonly dispid 1610743811;
    property Description: WideString dispid 1610743812;
    function GetValue(val_id: Smallint): Double; dispid 1610743814;
    procedure SetValue(val_id: Smallint; val: Double); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotLoadRecordIn3Points
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E464D51-F1B0-11D2-98A2-0080C86BE4DF}
// *********************************************************************//
  IRobotLoadRecordIn3Points = interface(IRobotLoadRecord)
    ['{7E464D51-F1B0-11D2-98A2-0080C86BE4DF}']
    procedure SetPoint(which_point: SYSINT; _x: Double; _y: Double; _z: Double); safecall;
    function GetPoint(which_point: SYSINT; out _x: Double; out _y: Double; out _z: Double): Integer; safecall;
    function Get_UniqueId: Integer; safecall;
    function SetGeoLimits(const layer_def: IRobotGeoLayer): WordBool; safecall;
    function GetGeoLimits: IRobotGeoLayer; safecall;
    function Get_UserId: Integer; safecall;
    procedure Set_UserId(ret: Integer); safecall;
    property UniqueId: Integer read Get_UniqueId;
    property UserId: Integer read Get_UserId write Set_UserId;
  end;

// *********************************************************************//
// DispIntf:  IRobotLoadRecordIn3PointsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E464D51-F1B0-11D2-98A2-0080C86BE4DF}
// *********************************************************************//
  IRobotLoadRecordIn3PointsDisp = dispinterface
    ['{7E464D51-F1B0-11D2-98A2-0080C86BE4DF}']
    procedure SetPoint(which_point: SYSINT; _x: Double; _y: Double; _z: Double); dispid 1610809344;
    function GetPoint(which_point: SYSINT; out _x: Double; out _y: Double; out _z: Double): Integer; dispid 1610809345;
    property UniqueId: Integer readonly dispid 1610809346;
    function SetGeoLimits(const layer_def: IRobotGeoLayer): WordBool; dispid 1610809347;
    function GetGeoLimits: IRobotGeoLayer; dispid 1610809348;
    property UserId: Integer dispid 1610809349;
    property type_: IRobotLoadRecordType readonly dispid 1610743808;
    property ObjectType: IRobotObjectType dispid 1610743809;
    property Objects: IRobotSelection readonly dispid 1610743811;
    property Description: WideString dispid 1610743812;
    function GetValue(val_id: Smallint): Double; dispid 1610743814;
    procedure SetValue(val_id: Smallint; val: Double); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotLoadRecordThermalIn3Points
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E464D52-F1B0-11D2-98A2-0080C86BE4DF}
// *********************************************************************//
  IRobotLoadRecordThermalIn3Points = interface(IRobotLoadRecord)
    ['{7E464D52-F1B0-11D2-98A2-0080C86BE4DF}']
    procedure SetPoint(which_point: SYSINT; _x: Double; _y: Double; _z: Double); safecall;
    function GetPoint(which_point: SYSINT; out _x: Double; out _y: Double; out _z: Double): Integer; safecall;
    function Get_UniqueId: Integer; safecall;
    function SetGeoLimits(const layer_def: IRobotGeoLayer): WordBool; safecall;
    function GetGeoLimits: IRobotGeoLayer; safecall;
    function Get_UserId: Integer; safecall;
    procedure Set_UserId(ret: Integer); safecall;
    property UniqueId: Integer read Get_UniqueId;
    property UserId: Integer read Get_UserId write Set_UserId;
  end;

// *********************************************************************//
// DispIntf:  IRobotLoadRecordThermalIn3PointsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E464D52-F1B0-11D2-98A2-0080C86BE4DF}
// *********************************************************************//
  IRobotLoadRecordThermalIn3PointsDisp = dispinterface
    ['{7E464D52-F1B0-11D2-98A2-0080C86BE4DF}']
    procedure SetPoint(which_point: SYSINT; _x: Double; _y: Double; _z: Double); dispid 1610809344;
    function GetPoint(which_point: SYSINT; out _x: Double; out _y: Double; out _z: Double): Integer; dispid 1610809345;
    property UniqueId: Integer readonly dispid 1610809346;
    function SetGeoLimits(const layer_def: IRobotGeoLayer): WordBool; dispid 1610809347;
    function GetGeoLimits: IRobotGeoLayer; dispid 1610809348;
    property UserId: Integer dispid 1610809349;
    property type_: IRobotLoadRecordType readonly dispid 1610743808;
    property ObjectType: IRobotObjectType dispid 1610743809;
    property Objects: IRobotSelection readonly dispid 1610743811;
    property Description: WideString dispid 1610743812;
    function GetValue(val_id: Smallint): Double; dispid 1610743814;
    procedure SetValue(val_id: Smallint; val: Double); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotLoadRecordInContour
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E464D53-F1B0-11D2-98A2-0080C86BE4DF}
// *********************************************************************//
  IRobotLoadRecordInContour = interface(IRobotLoadRecord)
    ['{7E464D53-F1B0-11D2-98A2-0080C86BE4DF}']
    procedure SetVector(vx: Double; vy: Double; vz: Double); safecall;
    procedure GetVector(out vx: Double; out vy: Double; out vz: Double); safecall;
    procedure SetPoint(which_point: SYSINT; _x: Double; _y: Double; _z: Double); safecall;
    function GetPoint(which_point: SYSINT; out _x: Double; out _y: Double; out _z: Double): Integer; safecall;
    procedure SetContourPoint(which_point: SYSINT; _x: Double; _y: Double; _z: Double); safecall;
    procedure GetContourPoint(which_point: SYSINT; out _x: Double; out _y: Double; out _z: Double); safecall;
    function Get_UniqueId: Integer; safecall;
    function SetGeoLimits(const layer_def: IRobotGeoLayer): WordBool; safecall;
    function GetGeoLimits: IRobotGeoLayer; safecall;
    function Get_UserId: Integer; safecall;
    procedure Set_UserId(ret: Integer); safecall;
    property UniqueId: Integer read Get_UniqueId;
    property UserId: Integer read Get_UserId write Set_UserId;
  end;

// *********************************************************************//
// DispIntf:  IRobotLoadRecordInContourDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E464D53-F1B0-11D2-98A2-0080C86BE4DF}
// *********************************************************************//
  IRobotLoadRecordInContourDisp = dispinterface
    ['{7E464D53-F1B0-11D2-98A2-0080C86BE4DF}']
    procedure SetVector(vx: Double; vy: Double; vz: Double); dispid 1610809344;
    procedure GetVector(out vx: Double; out vy: Double; out vz: Double); dispid 1610809345;
    procedure SetPoint(which_point: SYSINT; _x: Double; _y: Double; _z: Double); dispid 1610809346;
    function GetPoint(which_point: SYSINT; out _x: Double; out _y: Double; out _z: Double): Integer; dispid 1610809347;
    procedure SetContourPoint(which_point: SYSINT; _x: Double; _y: Double; _z: Double); dispid 1610809348;
    procedure GetContourPoint(which_point: SYSINT; out _x: Double; out _y: Double; out _z: Double); dispid 1610809349;
    property UniqueId: Integer readonly dispid 1610809350;
    function SetGeoLimits(const layer_def: IRobotGeoLayer): WordBool; dispid 1610809351;
    function GetGeoLimits: IRobotGeoLayer; dispid 1610809352;
    property UserId: Integer dispid 1610809353;
    property type_: IRobotLoadRecordType readonly dispid 1610743808;
    property ObjectType: IRobotObjectType dispid 1610743809;
    property Objects: IRobotSelection readonly dispid 1610743811;
    property Description: WideString dispid 1610743812;
    function GetValue(val_id: Smallint): Double; dispid 1610743814;
    procedure SetValue(val_id: Smallint; val: Double); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotCase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D556A40-CD92-11D2-986B-0080C86BE4DF}
// *********************************************************************//
  IRobotCase = interface(IDispatch)
    ['{2D556A40-CD92-11D2-986B-0080C86BE4DF}']
    function Get_Number: Integer; safecall;
    procedure Set_Number(ret: Integer); safecall;
    function Get_type_: IRobotCaseType; safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_Nature: IRobotCaseNature; safecall;
    procedure Set_Nature(ret: IRobotCaseNature); safecall;
    function Get_AnalizeType: IRobotCaseAnalizeType; safecall;
    procedure Set_AnalizeType(ret: IRobotCaseAnalizeType); safecall;
    property Number: Integer read Get_Number write Set_Number;
    property type_: IRobotCaseType read Get_type_;
    property Name: WideString read Get_Name write Set_Name;
    property Nature: IRobotCaseNature read Get_Nature write Set_Nature;
    property AnalizeType: IRobotCaseAnalizeType read Get_AnalizeType write Set_AnalizeType;
  end;

// *********************************************************************//
// DispIntf:  IRobotCaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D556A40-CD92-11D2-986B-0080C86BE4DF}
// *********************************************************************//
  IRobotCaseDisp = dispinterface
    ['{2D556A40-CD92-11D2-986B-0080C86BE4DF}']
    property Number: Integer dispid 1610743808;
    property type_: IRobotCaseType readonly dispid 1610743810;
    property Name: WideString dispid 1610743811;
    property Nature: IRobotCaseNature dispid 1610743813;
    property AnalizeType: IRobotCaseAnalizeType dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotSimpleCase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D556A42-CD92-11D2-986B-0080C86BE4DF}
// *********************************************************************//
  IRobotSimpleCase = interface(IRobotCase)
    ['{2D556A42-CD92-11D2-986B-0080C86BE4DF}']
    procedure GhostMethod_IRobotSimpleCase_0_1; safecall;
    procedure GhostMethod_IRobotSimpleCase_4_2; safecall;
    procedure GhostMethod_IRobotSimpleCase_8_3; safecall;
    procedure GhostMethod_IRobotSimpleCase_12_4; safecall;
    procedure GhostMethod_IRobotSimpleCase_16_5; safecall;
    procedure GhostMethod_IRobotSimpleCase_20_6; safecall;
    procedure GhostMethod_IRobotSimpleCase_24_7; safecall;
    procedure GhostMethod_IRobotSimpleCase_28_8; safecall;
    procedure GhostMethod_IRobotSimpleCase_32_9; safecall;
    procedure GhostMethod_IRobotSimpleCase_36_10; safecall;
    procedure GhostMethod_IRobotSimpleCase_40_11; safecall;
    procedure GhostMethod_IRobotSimpleCase_44_12; safecall;
    procedure GhostMethod_IRobotSimpleCase_48_13; safecall;
    procedure GhostMethod_IRobotSimpleCase_52_14; safecall;
    procedure GhostMethod_IRobotSimpleCase_56_15; safecall;
    procedure GhostMethod_IRobotSimpleCase_60_16; safecall;
    function Get_Records: IRobotLoadRecordMngr; safecall;
    function Get_UniqueId: Integer; safecall;
    function Get_ModesCount: Integer; safecall;
    procedure Set_ModesCount(ret: Integer); safecall;
    function Get_MainMode: Integer; safecall;
    procedure Set_MainMode(ret: Integer); safecall;
    function GetAnalysisParams: IDispatch; safecall;
    function SetAnalysisParams(const _params: IDispatch): WordBool; safecall;
    function GetSeismicCode: WideString; safecall;
    function Get_UserId: Integer; safecall;
    procedure Set_UserId(ret: Integer); safecall;
    function Get_NatureName: WideString; safecall;
    procedure SetNatureExt(_rgl_action: Integer); safecall;
    function Get_TimeStepCount: Integer; safecall;
    function Get_label_: WideString; safecall;
    procedure Set_label_(const ret: WideString); safecall;
    function Get_IsAuxiliary: WordBool; safecall;
    procedure Set_IsAuxiliary(ret: WordBool); safecall;
    property Records: IRobotLoadRecordMngr read Get_Records;
    property UniqueId: Integer read Get_UniqueId;
    property ModesCount: Integer read Get_ModesCount write Set_ModesCount;
    property MainMode: Integer read Get_MainMode write Set_MainMode;
    property UserId: Integer read Get_UserId write Set_UserId;
    property NatureName: WideString read Get_NatureName;
    property TimeStepCount: Integer read Get_TimeStepCount;
    property label_: WideString read Get_label_ write Set_label_;
    property IsAuxiliary: WordBool read Get_IsAuxiliary write Set_IsAuxiliary;
  end;

// *********************************************************************//
// DispIntf:  IRobotSimpleCaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D556A42-CD92-11D2-986B-0080C86BE4DF}
// *********************************************************************//
  IRobotSimpleCaseDisp = dispinterface
    ['{2D556A42-CD92-11D2-986B-0080C86BE4DF}']
    procedure GhostMethod_IRobotSimpleCase_0_1; dispid 1610678272;
    procedure GhostMethod_IRobotSimpleCase_4_2; dispid 1610678273;
    procedure GhostMethod_IRobotSimpleCase_8_3; dispid 1610678274;
    procedure GhostMethod_IRobotSimpleCase_12_4; dispid 1610678275;
    procedure GhostMethod_IRobotSimpleCase_16_5; dispid 1610678276;
    procedure GhostMethod_IRobotSimpleCase_20_6; dispid 1610678277;
    procedure GhostMethod_IRobotSimpleCase_24_7; dispid 1610678278;
    procedure GhostMethod_IRobotSimpleCase_28_8; dispid 1610678279;
    procedure GhostMethod_IRobotSimpleCase_32_9; dispid 1610678280;
    procedure GhostMethod_IRobotSimpleCase_36_10; dispid 1610678281;
    procedure GhostMethod_IRobotSimpleCase_40_11; dispid 1610678282;
    procedure GhostMethod_IRobotSimpleCase_44_12; dispid 1610678283;
    procedure GhostMethod_IRobotSimpleCase_48_13; dispid 1610678284;
    procedure GhostMethod_IRobotSimpleCase_52_14; dispid 1610678285;
    procedure GhostMethod_IRobotSimpleCase_56_15; dispid 1610678286;
    procedure GhostMethod_IRobotSimpleCase_60_16; dispid 1610678287;
    property Records: IRobotLoadRecordMngr readonly dispid 1610809344;
    property UniqueId: Integer readonly dispid 1610809345;
    property ModesCount: Integer dispid 1610809346;
    property MainMode: Integer dispid 1610809348;
    function GetAnalysisParams: IDispatch; dispid 1610809350;
    function SetAnalysisParams(const _params: IDispatch): WordBool; dispid 1610809351;
    function GetSeismicCode: WideString; dispid 1610809352;
    property UserId: Integer dispid 1610809353;
    property NatureName: WideString readonly dispid 1610809355;
    procedure SetNatureExt(_rgl_action: Integer); dispid 1610809356;
    property TimeStepCount: Integer readonly dispid 1610809357;
    property label_: WideString dispid 1610809358;
    property IsAuxiliary: WordBool dispid 1610809360;
    property Number: Integer dispid 1610743808;
    property type_: IRobotCaseType readonly dispid 1610743810;
    property Name: WideString dispid 1610743811;
    property Nature: IRobotCaseNature dispid 1610743813;
    property AnalizeType: IRobotCaseAnalizeType dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotCaseCombination
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D556A43-CD92-11D2-986B-0080C86BE4DF}
// *********************************************************************//
  IRobotCaseCombination = interface(IRobotCase)
    ['{2D556A43-CD92-11D2-986B-0080C86BE4DF}']
    function Get_CaseFactors: IRobotCaseFactorMngr; safecall;
    function Get_CombinationType: IRobotCombinationType; safecall;
    procedure Set_CombinationType(ret: IRobotCombinationType); safecall;
    function Get_SeismicType: IRobotModeCombinationType; safecall;
    procedure Set_SeismicType(ret: IRobotModeCombinationType); safecall;
    function Get_Quadratic: Integer; safecall;
    procedure Set_Quadratic(ret: Integer); safecall;
    function Get_UniqueId: Integer; safecall;
    function Get_Signed: WordBool; safecall;
    procedure Set_Signed(ret: WordBool); safecall;
    function GetAnalysisParams: IDispatch; safecall;
    function SetAnalysisParams(const _params: IDispatch): WordBool; safecall;
    function Get_UserId: Integer; safecall;
    procedure Set_UserId(ret: Integer); safecall;
    function Get_NatureName: WideString; safecall;
    procedure SetNatureExt(_rgl_action: Integer); safecall;
    function Get_label_: WideString; safecall;
    procedure Set_label_(const ret: WideString); safecall;
    function Get_IsAuxiliary: WordBool; safecall;
    procedure Set_IsAuxiliary(ret: WordBool); safecall;
    property CaseFactors: IRobotCaseFactorMngr read Get_CaseFactors;
    property CombinationType: IRobotCombinationType read Get_CombinationType write Set_CombinationType;
    property SeismicType: IRobotModeCombinationType read Get_SeismicType write Set_SeismicType;
    property Quadratic: Integer read Get_Quadratic write Set_Quadratic;
    property UniqueId: Integer read Get_UniqueId;
    property Signed: WordBool read Get_Signed write Set_Signed;
    property UserId: Integer read Get_UserId write Set_UserId;
    property NatureName: WideString read Get_NatureName;
    property label_: WideString read Get_label_ write Set_label_;
    property IsAuxiliary: WordBool read Get_IsAuxiliary write Set_IsAuxiliary;
  end;

// *********************************************************************//
// DispIntf:  IRobotCaseCombinationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D556A43-CD92-11D2-986B-0080C86BE4DF}
// *********************************************************************//
  IRobotCaseCombinationDisp = dispinterface
    ['{2D556A43-CD92-11D2-986B-0080C86BE4DF}']
    property CaseFactors: IRobotCaseFactorMngr readonly dispid 1610809344;
    property CombinationType: IRobotCombinationType dispid 1610809345;
    property SeismicType: IRobotModeCombinationType dispid 1610809347;
    property Quadratic: Integer dispid 1610809349;
    property UniqueId: Integer readonly dispid 1610809351;
    property Signed: WordBool dispid 1610809352;
    function GetAnalysisParams: IDispatch; dispid 1610809354;
    function SetAnalysisParams(const _params: IDispatch): WordBool; dispid 1610809355;
    property UserId: Integer dispid 1610809356;
    property NatureName: WideString readonly dispid 1610809358;
    procedure SetNatureExt(_rgl_action: Integer); dispid 1610809359;
    property label_: WideString dispid 1610809360;
    property IsAuxiliary: WordBool dispid 1610809362;
    property Number: Integer dispid 1610743808;
    property type_: IRobotCaseType readonly dispid 1610743810;
    property Name: WideString dispid 1610743811;
    property Nature: IRobotCaseNature dispid 1610743813;
    property AnalizeType: IRobotCaseAnalizeType dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotCaseFactorMngr
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CEEC59F2-F651-11D2-98A8-0080C86BE4DF}
// *********************************************************************//
  IRobotCaseFactorMngr = interface(IDispatch)
    ['{CEEC59F2-F651-11D2-98A8-0080C86BE4DF}']
    function Get_Count: Integer; safecall;
    function New(case_number: Integer; _factor: Double): Integer; safecall;
    function Get(index: Integer): IRobotCaseFactor; safecall;
    procedure Delete(index: Integer); safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotCaseFactorMngrDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CEEC59F2-F651-11D2-98A8-0080C86BE4DF}
// *********************************************************************//
  IRobotCaseFactorMngrDisp = dispinterface
    ['{CEEC59F2-F651-11D2-98A8-0080C86BE4DF}']
    property Count: Integer readonly dispid 1610743808;
    function New(case_number: Integer; _factor: Double): Integer; dispid 1610743809;
    function Get(index: Integer): IRobotCaseFactor; dispid 1610743810;
    procedure Delete(index: Integer); dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotCaseFactor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CEEC59F0-F651-11D2-98A8-0080C86BE4DF}
// *********************************************************************//
  IRobotCaseFactor = interface(IDispatch)
    ['{CEEC59F0-F651-11D2-98A8-0080C86BE4DF}']
    function Get_CaseNumber: Integer; safecall;
    procedure Set_CaseNumber(ret: Integer); safecall;
    function Get_Factor: Double; safecall;
    procedure Set_Factor(ret: Double); safecall;
    property CaseNumber: Integer read Get_CaseNumber write Set_CaseNumber;
    property Factor: Double read Get_Factor write Set_Factor;
  end;

// *********************************************************************//
// DispIntf:  IRobotCaseFactorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CEEC59F0-F651-11D2-98A8-0080C86BE4DF}
// *********************************************************************//
  IRobotCaseFactorDisp = dispinterface
    ['{CEEC59F0-F651-11D2-98A8-0080C86BE4DF}']
    property CaseNumber: Integer dispid 1610743808;
    property Factor: Double dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotCaseCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D556A44-CD92-11D2-986B-0080C86BE4DF}
// *********************************************************************//
  IRobotCaseCollection = interface(IRobotCollection)
    ['{2D556A44-CD92-11D2-986B-0080C86BE4DF}']
  end;

// *********************************************************************//
// DispIntf:  IRobotCaseCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D556A44-CD92-11D2-986B-0080C86BE4DF}
// *********************************************************************//
  IRobotCaseCollectionDisp = dispinterface
    ['{2D556A44-CD92-11D2-986B-0080C86BE4DF}']
    property Count: Integer readonly dispid 1;
    function Get(idx: Integer): IDispatch; dispid 2;
  end;

// *********************************************************************//
// Interface: IRobotCaseServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D556A41-CD92-11D2-986B-0080C86BE4DF}
// *********************************************************************//
  IRobotCaseServer = interface(IDispatch)
    ['{2D556A41-CD92-11D2-986B-0080C86BE4DF}']
    function CreateSimple(num: Integer; const Name: WideString; Nature: IRobotCaseNature; 
                          analize: IRobotCaseAnalizeType): IRobotSimpleCase; safecall;
    function CreateCombination(num: Integer; const Name: WideString; ctype: IRobotCombinationType; 
                               Nature: IRobotCaseNature; analize: IRobotCaseAnalizeType): IRobotCaseCombination; safecall;
    function Exist(case_num: Integer): Integer; safecall;
    function Get(num: Integer): IRobotCase; safecall;
    function GetMany(const case_sel: IRobotSelection): IRobotCaseCollection; safecall;
    function GetAll: IRobotCaseCollection; safecall;
    procedure Delete(num: Integer); safecall;
    procedure DeleteMany(const case_sel: IRobotSelection); safecall;
    function Get_FreeNumber: Integer; safecall;
    function FindWithId(unique_id: Integer): Integer; safecall;
    function Get_SnowWindEngine: IRobotSnowWindEngine; safecall;
    function Get_CodeCmbEngine: IRobotCodeCombinationEngine; safecall;
    function Get_TimeHistoryFunctions: IRobotTimeHistoryFunctionList; safecall;
    function CreateMobile(_number: Integer; const _name: WideString; _nature: IRobotCaseNature): IRobotMobileCase; safecall;
    function Get_QCmbTau: Double; safecall;
    procedure Set_QCmbTau(ret: Double); safecall;
    function IsAuxiliary(_case_num: Integer): WordBool; safecall;
    procedure SetAuxiliary(_case_num: Integer; _is_aux: WordBool); safecall;
    function GetUniqueId(_case_num: Integer): Integer; safecall;
    function GetRelatedValue(_val_type: IRobotCaseRelatedValueType; _case: Integer; 
                             _case_cmpnt: Integer): OleVariant; safecall;
    function GetCmpntCount(_case: Integer): Integer; safecall;
    function Get_SELFSeismicEngine: IRobotSELFSeismicEngine; safecall;
    procedure BeginMultiOperation; safecall;
    procedure EndMultiOperation; safecall;
    function Get_WindLoadsSimulationEngine: IRobotWindLoadsSimulationEngine; safecall;
    property FreeNumber: Integer read Get_FreeNumber;
    property SnowWindEngine: IRobotSnowWindEngine read Get_SnowWindEngine;
    property CodeCmbEngine: IRobotCodeCombinationEngine read Get_CodeCmbEngine;
    property TimeHistoryFunctions: IRobotTimeHistoryFunctionList read Get_TimeHistoryFunctions;
    property QCmbTau: Double read Get_QCmbTau write Set_QCmbTau;
    property SELFSeismicEngine: IRobotSELFSeismicEngine read Get_SELFSeismicEngine;
    property WindLoadsSimulationEngine: IRobotWindLoadsSimulationEngine read Get_WindLoadsSimulationEngine;
  end;

// *********************************************************************//
// DispIntf:  IRobotCaseServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D556A41-CD92-11D2-986B-0080C86BE4DF}
// *********************************************************************//
  IRobotCaseServerDisp = dispinterface
    ['{2D556A41-CD92-11D2-986B-0080C86BE4DF}']
    function CreateSimple(num: Integer; const Name: WideString; Nature: IRobotCaseNature; 
                          analize: IRobotCaseAnalizeType): IRobotSimpleCase; dispid 1610743808;
    function CreateCombination(num: Integer; const Name: WideString; ctype: IRobotCombinationType; 
                               Nature: IRobotCaseNature; analize: IRobotCaseAnalizeType): IRobotCaseCombination; dispid 1610743809;
    function Exist(case_num: Integer): Integer; dispid 1610743810;
    function Get(num: Integer): IRobotCase; dispid 1610743811;
    function GetMany(const case_sel: IRobotSelection): IRobotCaseCollection; dispid 1610743812;
    function GetAll: IRobotCaseCollection; dispid 1610743813;
    procedure Delete(num: Integer); dispid 1610743814;
    procedure DeleteMany(const case_sel: IRobotSelection); dispid 1610743815;
    property FreeNumber: Integer readonly dispid 1610743816;
    function FindWithId(unique_id: Integer): Integer; dispid 1610743817;
    property SnowWindEngine: IRobotSnowWindEngine readonly dispid 1610743818;
    property CodeCmbEngine: IRobotCodeCombinationEngine readonly dispid 1610743819;
    property TimeHistoryFunctions: IRobotTimeHistoryFunctionList readonly dispid 1610743820;
    function CreateMobile(_number: Integer; const _name: WideString; _nature: IRobotCaseNature): IRobotMobileCase; dispid 1610743821;
    property QCmbTau: Double dispid 1610743822;
    function IsAuxiliary(_case_num: Integer): WordBool; dispid 1610743824;
    procedure SetAuxiliary(_case_num: Integer; _is_aux: WordBool); dispid 1610743825;
    function GetUniqueId(_case_num: Integer): Integer; dispid 1610743826;
    function GetRelatedValue(_val_type: IRobotCaseRelatedValueType; _case: Integer; 
                             _case_cmpnt: Integer): OleVariant; dispid 1610743827;
    function GetCmpntCount(_case: Integer): Integer; dispid 1610743828;
    property SELFSeismicEngine: IRobotSELFSeismicEngine readonly dispid 1610743829;
    procedure BeginMultiOperation; dispid 1610743830;
    procedure EndMultiOperation; dispid 1610743831;
    property WindLoadsSimulationEngine: IRobotWindLoadsSimulationEngine readonly dispid 1610743832;
  end;

// *********************************************************************//
// Interface: IRobotSnowWindEngine
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DDA75BE4-316F-11D4-B813-0050DA76755E}
// *********************************************************************//
  IRobotSnowWindEngine = interface(IDispatch)
    ['{DDA75BE4-316F-11D4-B813-0050DA76755E}']
    function Get_Params: IRobotSnowWindParams; safecall;
    function Get_CodeParams: IDispatch; safecall;
    function Generate: IRobotNumbersCollection; safecall;
    function GenerateStruct3D(const _gen_params: IRobotSWStruct3DGenParams): IRobotSWStruct3D; safecall;
    function Generate3D(const _struct_3d: IRobotSWStruct3D): IRobotNumbersCollection; safecall;
    function ShowParamsDlg: Integer; safecall;
    property Params: IRobotSnowWindParams read Get_Params;
    property CodeParams: IDispatch read Get_CodeParams;
  end;

// *********************************************************************//
// DispIntf:  IRobotSnowWindEngineDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DDA75BE4-316F-11D4-B813-0050DA76755E}
// *********************************************************************//
  IRobotSnowWindEngineDisp = dispinterface
    ['{DDA75BE4-316F-11D4-B813-0050DA76755E}']
    property Params: IRobotSnowWindParams readonly dispid 1610743808;
    property CodeParams: IDispatch readonly dispid 1610743809;
    function Generate: IRobotNumbersCollection; dispid 1610743810;
    function GenerateStruct3D(const _gen_params: IRobotSWStruct3DGenParams): IRobotSWStruct3D; dispid 1610743811;
    function Generate3D(const _struct_3d: IRobotSWStruct3D): IRobotNumbersCollection; dispid 1610743812;
    function ShowParamsDlg: Integer; dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotSnowWindParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DDA75BE2-316F-11D4-B813-0050DA76755E}
// *********************************************************************//
  IRobotSnowWindParams = interface(IDispatch)
    ['{DDA75BE2-316F-11D4-B813-0050DA76755E}']
    function Get_BaySpacing: Double; safecall;
    procedure Set_BaySpacing(ret: Double); safecall;
    function Get_TotalDepth: Double; safecall;
    procedure Set_TotalDepth(ret: Double); safecall;
    function Get_Envelope: WideString; safecall;
    procedure Set_Envelope(const ret: WideString); safecall;
    function Get_WithParapets: WordBool; safecall;
    procedure Set_WithParapets(ret: WordBool); safecall;
    function Get_WithCavities: WordBool; safecall;
    procedure Set_WithCavities(ret: WordBool); safecall;
    function Get_BaseOnGround: WordBool; safecall;
    procedure Set_BaseOnGround(ret: WordBool); safecall;
    function Get_IsolatedRoofs: WordBool; safecall;
    procedure Set_IsolatedRoofs(ret: WordBool); safecall;
    function Get_IsWind: WordBool; safecall;
    procedure Set_IsWind(ret: WordBool); safecall;
    function Get_IsSnow: WordBool; safecall;
    procedure Set_IsSnow(ret: WordBool); safecall;
    property BaySpacing: Double read Get_BaySpacing write Set_BaySpacing;
    property TotalDepth: Double read Get_TotalDepth write Set_TotalDepth;
    property Envelope: WideString read Get_Envelope write Set_Envelope;
    property WithParapets: WordBool read Get_WithParapets write Set_WithParapets;
    property WithCavities: WordBool read Get_WithCavities write Set_WithCavities;
    property BaseOnGround: WordBool read Get_BaseOnGround write Set_BaseOnGround;
    property IsolatedRoofs: WordBool read Get_IsolatedRoofs write Set_IsolatedRoofs;
    property IsWind: WordBool read Get_IsWind write Set_IsWind;
    property IsSnow: WordBool read Get_IsSnow write Set_IsSnow;
  end;

// *********************************************************************//
// DispIntf:  IRobotSnowWindParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DDA75BE2-316F-11D4-B813-0050DA76755E}
// *********************************************************************//
  IRobotSnowWindParamsDisp = dispinterface
    ['{DDA75BE2-316F-11D4-B813-0050DA76755E}']
    property BaySpacing: Double dispid 1610743808;
    property TotalDepth: Double dispid 1610743810;
    property Envelope: WideString dispid 1610743812;
    property WithParapets: WordBool dispid 1610743814;
    property WithCavities: WordBool dispid 1610743816;
    property BaseOnGround: WordBool dispid 1610743818;
    property IsolatedRoofs: WordBool dispid 1610743820;
    property IsWind: WordBool dispid 1610743822;
    property IsSnow: WordBool dispid 1610743824;
  end;

// *********************************************************************//
// Interface: IRobotNumbersCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8BCE3174-C81D-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotNumbersCollection = interface(IDispatch)
    ['{8BCE3174-C81D-11D3-B7B9-0050DA76755E}']
    function Get_Count: Integer; safecall;
    function Get(idx: Integer): Integer; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotNumbersCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8BCE3174-C81D-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotNumbersCollectionDisp = dispinterface
    ['{8BCE3174-C81D-11D3-B7B9-0050DA76755E}']
    property Count: Integer readonly dispid 1610743808;
    function Get(idx: Integer): Integer; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotSWStruct3DGenParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {48325303-04D3-47F0-B065-68C81192812E}
// *********************************************************************//
  IRobotSWStruct3DGenParams = interface(IDispatch)
    ['{48325303-04D3-47F0-B065-68C81192812E}']
    function Get_FrameCount: Integer; safecall;
    procedure Set_FrameCount(ret: Integer); safecall;
    function Get_Spacings: IRobotValuesArray; safecall;
    function Get_FacadeOnlyBars: WideString; safecall;
    procedure Set_FacadeOnlyBars(const ret: WideString); safecall;
    function Get_FacadeLoadedBars: WideString; safecall;
    procedure Set_FacadeLoadedBars(const ret: WideString); safecall;
    function Get_Offsets: WordBool; safecall;
    procedure Set_Offsets(ret: WordBool); safecall;
    function Get_Bars: WideString; safecall;
    procedure Set_Bars(const ret: WideString); safecall;
    procedure SetPurlins(_bar_num: Integer; const _purlins_def: IRobotSWStruct3DPurlinGenParams); safecall;
    function GetPurlins(_bar_num: Integer): IRobotSWStruct3DPurlinGenParams; safecall;
    property FrameCount: Integer read Get_FrameCount write Set_FrameCount;
    property Spacings: IRobotValuesArray read Get_Spacings;
    property FacadeOnlyBars: WideString read Get_FacadeOnlyBars write Set_FacadeOnlyBars;
    property FacadeLoadedBars: WideString read Get_FacadeLoadedBars write Set_FacadeLoadedBars;
    property Offsets: WordBool read Get_Offsets write Set_Offsets;
    property Bars: WideString read Get_Bars write Set_Bars;
  end;

// *********************************************************************//
// DispIntf:  IRobotSWStruct3DGenParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {48325303-04D3-47F0-B065-68C81192812E}
// *********************************************************************//
  IRobotSWStruct3DGenParamsDisp = dispinterface
    ['{48325303-04D3-47F0-B065-68C81192812E}']
    property FrameCount: Integer dispid 1610743808;
    property Spacings: IRobotValuesArray readonly dispid 1610743810;
    property FacadeOnlyBars: WideString dispid 1610743811;
    property FacadeLoadedBars: WideString dispid 1610743813;
    property Offsets: WordBool dispid 1610743815;
    property Bars: WideString dispid 1610743817;
    procedure SetPurlins(_bar_num: Integer; const _purlins_def: IRobotSWStruct3DPurlinGenParams); dispid 1610743819;
    function GetPurlins(_bar_num: Integer): IRobotSWStruct3DPurlinGenParams; dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRobotValuesArray
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {419B03C0-B850-11D3-B7AB-0050DA76755E}
// *********************************************************************//
  IRobotValuesArray = interface(IDispatch)
    ['{419B03C0-B850-11D3-B7AB-0050DA76755E}']
    function Get_Count: Integer; safecall;
    procedure SetSize(Count: Integer); safecall;
    procedure Set_(idx: Integer; val: Double); safecall;
    function Get(idx: Integer): Double; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotValuesArrayDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {419B03C0-B850-11D3-B7AB-0050DA76755E}
// *********************************************************************//
  IRobotValuesArrayDisp = dispinterface
    ['{419B03C0-B850-11D3-B7AB-0050DA76755E}']
    property Count: Integer readonly dispid 1610743808;
    procedure SetSize(Count: Integer); dispid 1610743809;
    procedure Set_(idx: Integer; val: Double); dispid 1610743810;
    function Get(idx: Integer): Double; dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotSWStruct3DPurlinGenParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C3D4FEA6-9731-4B6E-AB9C-B9A7AB7FE393}
// *********************************************************************//
  IRobotSWStruct3DPurlinGenParams = interface(IDispatch)
    ['{C3D4FEA6-9731-4B6E-AB9C-B9A7AB7FE393}']
    function Get_SectionName: WideString; safecall;
    procedure Set_SectionName(const ret: WideString); safecall;
    function Get_RelativeLocations: WordBool; safecall;
    procedure Set_RelativeLocations(ret: WordBool); safecall;
    function Get_Locations: IRobotValuesArray; safecall;
    property SectionName: WideString read Get_SectionName write Set_SectionName;
    property RelativeLocations: WordBool read Get_RelativeLocations write Set_RelativeLocations;
    property Locations: IRobotValuesArray read Get_Locations;
  end;

// *********************************************************************//
// DispIntf:  IRobotSWStruct3DPurlinGenParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C3D4FEA6-9731-4B6E-AB9C-B9A7AB7FE393}
// *********************************************************************//
  IRobotSWStruct3DPurlinGenParamsDisp = dispinterface
    ['{C3D4FEA6-9731-4B6E-AB9C-B9A7AB7FE393}']
    property SectionName: WideString dispid 1610743808;
    property RelativeLocations: WordBool dispid 1610743810;
    property Locations: IRobotValuesArray readonly dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotSWStruct3D
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FF11392C-D171-49F6-9AFE-2900F5869BA2}
// *********************************************************************//
  IRobotSWStruct3D = interface(IDispatch)
    ['{FF11392C-D171-49F6-9AFE-2900F5869BA2}']
    function Get_FrameCount: Integer; safecall;
    procedure Set_FrameCount(ret: Integer); safecall;
    function Get_FrameElemCount: Integer; safecall;
    function GetFrame(_frame_idx: Integer): IRobotSWStruct3DFrame; safecall;
    procedure SetFrame(_frame_idx: Integer; const _frame: IRobotSWStruct3DFrame); safecall;
    property FrameCount: Integer read Get_FrameCount write Set_FrameCount;
    property FrameElemCount: Integer read Get_FrameElemCount;
  end;

// *********************************************************************//
// DispIntf:  IRobotSWStruct3DDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FF11392C-D171-49F6-9AFE-2900F5869BA2}
// *********************************************************************//
  IRobotSWStruct3DDisp = dispinterface
    ['{FF11392C-D171-49F6-9AFE-2900F5869BA2}']
    property FrameCount: Integer dispid 1610743808;
    property FrameElemCount: Integer readonly dispid 1610743810;
    function GetFrame(_frame_idx: Integer): IRobotSWStruct3DFrame; dispid 1610743811;
    procedure SetFrame(_frame_idx: Integer; const _frame: IRobotSWStruct3DFrame); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotSWStruct3DFrame
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4196599B-6FB2-4728-BE6D-CA621DAE8757}
// *********************************************************************//
  IRobotSWStruct3DFrame = interface(IDispatch)
    ['{4196599B-6FB2-4728-BE6D-CA621DAE8757}']
    function Get_ElemCount: Integer; safecall;
    procedure SetElem(_elem_idx: Integer; const _elem: IRobotSWStruct3DElement); safecall;
    function GetElem(_elem_idx: Integer): IRobotSWStruct3DElement; safecall;
    property ElemCount: Integer read Get_ElemCount;
  end;

// *********************************************************************//
// DispIntf:  IRobotSWStruct3DFrameDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4196599B-6FB2-4728-BE6D-CA621DAE8757}
// *********************************************************************//
  IRobotSWStruct3DFrameDisp = dispinterface
    ['{4196599B-6FB2-4728-BE6D-CA621DAE8757}']
    property ElemCount: Integer readonly dispid 1610743808;
    procedure SetElem(_elem_idx: Integer; const _elem: IRobotSWStruct3DElement); dispid 1610743809;
    function GetElem(_elem_idx: Integer): IRobotSWStruct3DElement; dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotSWStruct3DElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {189781B4-DE37-4A05-8CB1-6F74A61682E3}
// *********************************************************************//
  IRobotSWStruct3DElement = interface(IDispatch)
    ['{189781B4-DE37-4A05-8CB1-6F74A61682E3}']
    function Get_Bar: Integer; safecall;
    procedure Set_Bar(ret: Integer); safecall;
    function Get_IsFacadeOnly: WordBool; safecall;
    procedure Set_IsFacadeOnly(ret: WordBool); safecall;
    function Get_IsFacadeLoaded: WordBool; safecall;
    procedure Set_IsFacadeLoaded(ret: WordBool); safecall;
    function Get_Purlins: IRobotNumbersArray; safecall;
    property Bar: Integer read Get_Bar write Set_Bar;
    property IsFacadeOnly: WordBool read Get_IsFacadeOnly write Set_IsFacadeOnly;
    property IsFacadeLoaded: WordBool read Get_IsFacadeLoaded write Set_IsFacadeLoaded;
    property Purlins: IRobotNumbersArray read Get_Purlins;
  end;

// *********************************************************************//
// DispIntf:  IRobotSWStruct3DElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {189781B4-DE37-4A05-8CB1-6F74A61682E3}
// *********************************************************************//
  IRobotSWStruct3DElementDisp = dispinterface
    ['{189781B4-DE37-4A05-8CB1-6F74A61682E3}']
    property Bar: Integer dispid 1610743808;
    property IsFacadeOnly: WordBool dispid 1610743810;
    property IsFacadeLoaded: WordBool dispid 1610743812;
    property Purlins: IRobotNumbersArray readonly dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotNumbersArray
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {419B03C4-B850-11D3-B7AB-0050DA76755E}
// *********************************************************************//
  IRobotNumbersArray = interface(IDispatch)
    ['{419B03C4-B850-11D3-B7AB-0050DA76755E}']
    function Get_Count: Integer; safecall;
    procedure SetSize(Count: Integer); safecall;
    function Get(idx: Integer): Integer; safecall;
    procedure Set_(idx: Integer; val: Integer); safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotNumbersArrayDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {419B03C4-B850-11D3-B7AB-0050DA76755E}
// *********************************************************************//
  IRobotNumbersArrayDisp = dispinterface
    ['{419B03C4-B850-11D3-B7AB-0050DA76755E}']
    property Count: Integer readonly dispid 1610743808;
    procedure SetSize(Count: Integer); dispid 1610743809;
    function Get(idx: Integer): Integer; dispid 1610743810;
    procedure Set_(idx: Integer; val: Integer); dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotCodeCombinationEngine
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63DEEDA2-4113-11D4-B822-0050DA76755E}
// *********************************************************************//
  IRobotCodeCombinationEngine = interface(IDispatch)
    ['{63DEEDA2-4113-11D4-B822-0050DA76755E}']
    function Get_Params: IRobotCodeCmbGenerationParams; safecall;
    procedure Generate; safecall;
    property Params: IRobotCodeCmbGenerationParams read Get_Params;
  end;

// *********************************************************************//
// DispIntf:  IRobotCodeCombinationEngineDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63DEEDA2-4113-11D4-B822-0050DA76755E}
// *********************************************************************//
  IRobotCodeCombinationEngineDisp = dispinterface
    ['{63DEEDA2-4113-11D4-B822-0050DA76755E}']
    property Params: IRobotCodeCmbGenerationParams readonly dispid 1610743808;
    procedure Generate; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotCodeCmbGenerationParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2E0F6BB8-5190-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbGenerationParams = interface(IDispatch)
    ['{2E0F6BB8-5190-11D4-B83E-0050DA76755E}']
    function Get_AllNodes: WordBool; safecall;
    procedure Set_AllNodes(ret: WordBool); safecall;
    function Get_NodeSel: WideString; safecall;
    procedure Set_NodeSel(const ret: WideString); safecall;
    function Get_AllBars: WordBool; safecall;
    procedure Set_AllBars(ret: WordBool); safecall;
    function Get_BarSel: WideString; safecall;
    procedure Set_BarSel(const ret: WideString); safecall;
    function Get_Simplified: WordBool; safecall;
    procedure Set_Simplified(ret: WordBool); safecall;
    function Get_PointsOnBar: Smallint; safecall;
    procedure Set_PointsOnBar(ret: Smallint); safecall;
    function Get_ExtremalSnowFactor: Double; safecall;
    procedure Set_ExtremalSnowFactor(ret: Double); safecall;
    function Get_Regulations: IRobotCodeCmbRegulations; safecall;
    function Get_Groups: IRobotCodeCmbGroupServer; safecall;
    function Get_Relations: IRobotCodeCmbGroupRelationServer; safecall;
    function Get_ActiveCases: IRobotCollection; safecall;
    procedure SelectDecidingValue(dvalue: IRobotCodeCmbDecidingValueType; _select: WordBool); safecall;
    function IsDecidingValueSelected(dvalue: IRobotCodeCmbDecidingValueType): WordBool; safecall;
    procedure SelectCombination(cmb_idx: Integer; _select: WordBool); safecall;
    function IsCombinationSelected(cmd_idx: Integer): WordBool; safecall;
    function Get_GenType: IRobotCodeCmbGenerationType; safecall;
    procedure Set_GenType(ret: IRobotCodeCmbGenerationType); safecall;
    procedure SelectCombinationType(_cmb_type: IRobotCombinationType; _select: WordBool); safecall;
    function IsCombinationTypeSelected(_cmb_type: IRobotCombinationType): WordBool; safecall;
    property AllNodes: WordBool read Get_AllNodes write Set_AllNodes;
    property NodeSel: WideString read Get_NodeSel write Set_NodeSel;
    property AllBars: WordBool read Get_AllBars write Set_AllBars;
    property BarSel: WideString read Get_BarSel write Set_BarSel;
    property Simplified: WordBool read Get_Simplified write Set_Simplified;
    property PointsOnBar: Smallint read Get_PointsOnBar write Set_PointsOnBar;
    property ExtremalSnowFactor: Double read Get_ExtremalSnowFactor write Set_ExtremalSnowFactor;
    property Regulations: IRobotCodeCmbRegulations read Get_Regulations;
    property Groups: IRobotCodeCmbGroupServer read Get_Groups;
    property Relations: IRobotCodeCmbGroupRelationServer read Get_Relations;
    property ActiveCases: IRobotCollection read Get_ActiveCases;
    property GenType: IRobotCodeCmbGenerationType read Get_GenType write Set_GenType;
  end;

// *********************************************************************//
// DispIntf:  IRobotCodeCmbGenerationParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2E0F6BB8-5190-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbGenerationParamsDisp = dispinterface
    ['{2E0F6BB8-5190-11D4-B83E-0050DA76755E}']
    property AllNodes: WordBool dispid 1610743808;
    property NodeSel: WideString dispid 1610743810;
    property AllBars: WordBool dispid 1610743812;
    property BarSel: WideString dispid 1610743814;
    property Simplified: WordBool dispid 1610743816;
    property PointsOnBar: Smallint dispid 1610743818;
    property ExtremalSnowFactor: Double dispid 1610743820;
    property Regulations: IRobotCodeCmbRegulations readonly dispid 1610743822;
    property Groups: IRobotCodeCmbGroupServer readonly dispid 1610743823;
    property Relations: IRobotCodeCmbGroupRelationServer readonly dispid 1610743824;
    property ActiveCases: IRobotCollection readonly dispid 1610743825;
    procedure SelectDecidingValue(dvalue: IRobotCodeCmbDecidingValueType; _select: WordBool); dispid 1610743826;
    function IsDecidingValueSelected(dvalue: IRobotCodeCmbDecidingValueType): WordBool; dispid 1610743827;
    procedure SelectCombination(cmb_idx: Integer; _select: WordBool); dispid 1610743828;
    function IsCombinationSelected(cmd_idx: Integer): WordBool; dispid 1610743829;
    property GenType: IRobotCodeCmbGenerationType dispid 1610743830;
    procedure SelectCombinationType(_cmb_type: IRobotCombinationType; _select: WordBool); dispid 1610743832;
    function IsCombinationTypeSelected(_cmb_type: IRobotCombinationType): WordBool; dispid 1610743833;
  end;

// *********************************************************************//
// Interface: IRobotCodeCmbRegulations
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2E0F6BB2-5190-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbRegulations = interface(IDispatch)
    ['{2E0F6BB2-5190-11D4-B83E-0050DA76755E}']
    function Get_IsEuroCode: WordBool; safecall;
    procedure Set_IsEuroCode(ret: WordBool); safecall;
    function Get_CodeName: WideString; safecall;
    procedure Set_CodeName(const ret: WideString); safecall;
    function Get_MaterialType: IRobotMaterialType; safecall;
    procedure Set_MaterialType(ret: IRobotMaterialType); safecall;
    function Get_Version: WideString; safecall;
    procedure Set_Version(const ret: WideString); safecall;
    function Get_Actions: IRobotCodeCmbActionServer; safecall;
    function Get_Combinations: IRobotCodeCmbCombs; safecall;
    property IsEuroCode: WordBool read Get_IsEuroCode write Set_IsEuroCode;
    property CodeName: WideString read Get_CodeName write Set_CodeName;
    property MaterialType: IRobotMaterialType read Get_MaterialType write Set_MaterialType;
    property Version: WideString read Get_Version write Set_Version;
    property Actions: IRobotCodeCmbActionServer read Get_Actions;
    property Combinations: IRobotCodeCmbCombs read Get_Combinations;
  end;

// *********************************************************************//
// DispIntf:  IRobotCodeCmbRegulationsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2E0F6BB2-5190-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbRegulationsDisp = dispinterface
    ['{2E0F6BB2-5190-11D4-B83E-0050DA76755E}']
    property IsEuroCode: WordBool dispid 1610743808;
    property CodeName: WideString dispid 1610743810;
    property MaterialType: IRobotMaterialType dispid 1610743812;
    property Version: WideString dispid 1610743814;
    property Actions: IRobotCodeCmbActionServer readonly dispid 1610743816;
    property Combinations: IRobotCodeCmbCombs readonly dispid 1610743817;
  end;

// *********************************************************************//
// Interface: IRobotCodeCmbActionServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2E0F6BB4-5190-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbActionServer = interface(IDispatch)
    ['{2E0F6BB4-5190-11D4-B83E-0050DA76755E}']
    function Get_Count: Integer; safecall;
    procedure SetCoeff(idx: Integer; coeff_type: IRobotCodeCmbActionCoeffType; coeff_val: Double); safecall;
    function GetCoeff(idx: Integer; coeff_type: IRobotCodeCmbActionCoeffType): Double; safecall;
    function New(case_nature: IRobotCaseNature; const _name: WideString): Integer; safecall;
    procedure Remove(idx: Integer); safecall;
    function GetNature(idx: Integer): IRobotCaseNature; safecall;
    procedure SetNature(idx: Integer; case_nat: IRobotCaseNature); safecall;
    function GetName(idx: Integer): WideString; safecall;
    procedure SetName(idx: Integer; const _name: WideString); safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotCodeCmbActionServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2E0F6BB4-5190-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbActionServerDisp = dispinterface
    ['{2E0F6BB4-5190-11D4-B83E-0050DA76755E}']
    property Count: Integer readonly dispid 1610743808;
    procedure SetCoeff(idx: Integer; coeff_type: IRobotCodeCmbActionCoeffType; coeff_val: Double); dispid 1610743809;
    function GetCoeff(idx: Integer; coeff_type: IRobotCodeCmbActionCoeffType): Double; dispid 1610743810;
    function New(case_nature: IRobotCaseNature; const _name: WideString): Integer; dispid 1610743811;
    procedure Remove(idx: Integer); dispid 1610743812;
    function GetNature(idx: Integer): IRobotCaseNature; dispid 1610743813;
    procedure SetNature(idx: Integer; case_nat: IRobotCaseNature); dispid 1610743814;
    function GetName(idx: Integer): WideString; dispid 1610743815;
    procedure SetName(idx: Integer; const _name: WideString); dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRobotCodeCmbCombs
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2E0F6BB6-5190-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbCombs = interface(IDispatch)
    ['{2E0F6BB6-5190-11D4-B83E-0050DA76755E}']
    function Get_Count: Integer; safecall;
    function New(lim_state: IRobotLimitState; cmb_type: IRobotCodeCmbCombType; 
                 const _name: WideString; dead_coeff: Smallint; live_coeff: Smallint; 
                 acc_coeff: Smallint; seis_coeff: Smallint): Integer; safecall;
    procedure Get(idx: Integer; out limit_state: IRobotLimitState; 
                  out cmb_type: IRobotCodeCmbCombType; out _name: WideString; 
                  out dead_coef: Smallint; out live_coef: Smallint; out acc_coef: Smallint; 
                  out seis_coef: Smallint); safecall;
    procedure Set_(idx: Integer; limit_state: IRobotLimitState; cmb_type: IRobotCodeCmbCombType; 
                   const _name: WideString; dead_coef: Smallint; live_coef: Smallint; 
                   acc_coef: Smallint; seis_coef: Smallint); safecall;
    procedure Remove(idx: Integer); safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotCodeCmbCombsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2E0F6BB6-5190-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbCombsDisp = dispinterface
    ['{2E0F6BB6-5190-11D4-B83E-0050DA76755E}']
    property Count: Integer readonly dispid 1610743808;
    function New(lim_state: IRobotLimitState; cmb_type: IRobotCodeCmbCombType; 
                 const _name: WideString; dead_coeff: Smallint; live_coeff: Smallint; 
                 acc_coeff: Smallint; seis_coeff: Smallint): Integer; dispid 1610743809;
    procedure Get(idx: Integer; out limit_state: IRobotLimitState; 
                  out cmb_type: IRobotCodeCmbCombType; out _name: WideString; 
                  out dead_coef: Smallint; out live_coef: Smallint; out acc_coef: Smallint; 
                  out seis_coef: Smallint); dispid 1610743810;
    procedure Set_(idx: Integer; limit_state: IRobotLimitState; cmb_type: IRobotCodeCmbCombType; 
                   const _name: WideString; dead_coef: Smallint; live_coef: Smallint; 
                   acc_coef: Smallint; seis_coef: Smallint); dispid 1610743811;
    procedure Remove(idx: Integer); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotCodeCmbGroupServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2E0F6BBC-5190-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbGroupServer = interface(IDispatch)
    ['{2E0F6BBC-5190-11D4-B83E-0050DA76755E}']
    function New(grp_nature: IRobotCaseNature; oper: IRobotCodeCmbOperator; 
                 const case_list: WideString): Integer; safecall;
    function Get(grp_nature: IRobotCaseNature; grp_number: Integer): IRobotCodeCmbGroup; safecall;
    function FindByCase(case_num: Integer): Integer; safecall;
    function GetCount(grp_nature: IRobotCaseNature): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotCodeCmbGroupServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2E0F6BBC-5190-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbGroupServerDisp = dispinterface
    ['{2E0F6BBC-5190-11D4-B83E-0050DA76755E}']
    function New(grp_nature: IRobotCaseNature; oper: IRobotCodeCmbOperator; 
                 const case_list: WideString): Integer; dispid 1610743808;
    function Get(grp_nature: IRobotCaseNature; grp_number: Integer): IRobotCodeCmbGroup; dispid 1610743809;
    function FindByCase(case_num: Integer): Integer; dispid 1610743810;
    function GetCount(grp_nature: IRobotCaseNature): Integer; dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotCodeCmbGroup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2E0F6BBA-5190-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbGroup = interface(IDispatch)
    ['{2E0F6BBA-5190-11D4-B83E-0050DA76755E}']
    function Get_Nature: IRobotCaseNature; safecall;
    function Get_Operator: IRobotCodeCmbOperator; safecall;
    procedure Set_Operator(ret: IRobotCodeCmbOperator); safecall;
    function Get_CaseCount: Integer; safecall;
    function Add(case_num: Integer): WordBool; safecall;
    procedure AddAll; safecall;
    function IsFull: WordBool; safecall;
    property Nature: IRobotCaseNature read Get_Nature;
    property Operator: IRobotCodeCmbOperator read Get_Operator write Set_Operator;
    property CaseCount: Integer read Get_CaseCount;
  end;

// *********************************************************************//
// DispIntf:  IRobotCodeCmbGroupDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2E0F6BBA-5190-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbGroupDisp = dispinterface
    ['{2E0F6BBA-5190-11D4-B83E-0050DA76755E}']
    property Nature: IRobotCaseNature readonly dispid 1610743808;
    property Operator: IRobotCodeCmbOperator dispid 1610743809;
    property CaseCount: Integer readonly dispid 1610743811;
    function Add(case_num: Integer): WordBool; dispid 1610743812;
    procedure AddAll; dispid 1610743813;
    function IsFull: WordBool; dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotCodeCmbGroupRelationServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2E0F6BC0-5190-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbGroupRelationServer = interface(IDispatch)
    ['{2E0F6BC0-5190-11D4-B83E-0050DA76755E}']
    function Get(rel_nature: IRobotCaseNature): IRobotCodeCmbGroupRelation; safecall;
    procedure Set_(const rel_def: IRobotCodeCmbGroupRelation); safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotCodeCmbGroupRelationServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2E0F6BC0-5190-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbGroupRelationServerDisp = dispinterface
    ['{2E0F6BC0-5190-11D4-B83E-0050DA76755E}']
    function Get(rel_nature: IRobotCaseNature): IRobotCodeCmbGroupRelation; dispid 1610743808;
    procedure Set_(const rel_def: IRobotCodeCmbGroupRelation); dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotCodeCmbGroupRelation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2E0F6BBE-5190-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbGroupRelation = interface(IDispatch)
    ['{2E0F6BBE-5190-11D4-B83E-0050DA76755E}']
    function Get_Nature: IRobotCaseNature; safecall;
    function Get_RowCount: Integer; safecall;
    function GetGroupCount(row_idx: Integer): Integer; safecall;
    function GetGroup(row_idx: Integer; grp_idx: Integer): Integer; safecall;
    procedure SetGroup(row_idx: Integer; grp_idx: Integer; grp_number: Integer); safecall;
    procedure AddGroup(row_idx: Integer; grp_number: Integer); safecall;
    procedure SetOperator(row_idx: Integer; oper_id: IRobotCodeCmbOperator); safecall;
    function GetOperator(row_idx: Integer): IRobotCodeCmbOperator; safecall;
    function NewRow(oper_id: IRobotCodeCmbOperator): Integer; safecall;
    procedure RemoveRow(row_idx: Integer); safecall;
    procedure Clear; safecall;
    property Nature: IRobotCaseNature read Get_Nature;
    property RowCount: Integer read Get_RowCount;
  end;

// *********************************************************************//
// DispIntf:  IRobotCodeCmbGroupRelationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2E0F6BBE-5190-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbGroupRelationDisp = dispinterface
    ['{2E0F6BBE-5190-11D4-B83E-0050DA76755E}']
    property Nature: IRobotCaseNature readonly dispid 1610743808;
    property RowCount: Integer readonly dispid 1610743809;
    function GetGroupCount(row_idx: Integer): Integer; dispid 1610743810;
    function GetGroup(row_idx: Integer; grp_idx: Integer): Integer; dispid 1610743811;
    procedure SetGroup(row_idx: Integer; grp_idx: Integer; grp_number: Integer); dispid 1610743812;
    procedure AddGroup(row_idx: Integer; grp_number: Integer); dispid 1610743813;
    procedure SetOperator(row_idx: Integer; oper_id: IRobotCodeCmbOperator); dispid 1610743814;
    function GetOperator(row_idx: Integer): IRobotCodeCmbOperator; dispid 1610743815;
    function NewRow(oper_id: IRobotCodeCmbOperator): Integer; dispid 1610743816;
    procedure RemoveRow(row_idx: Integer); dispid 1610743817;
    procedure Clear; dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRobotTimeHistoryFunctionList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {987BDB2F-03DB-4C0B-8FA0-ED420DC35C4C}
// *********************************************************************//
  IRobotTimeHistoryFunctionList = interface(IDispatch)
    ['{987BDB2F-03DB-4C0B-8FA0-ED420DC35C4C}']
    function Get_Count: Integer; safecall;
    function Get(_idx: Integer): IRobotTimeHistoryPointsCollection; safecall;
    procedure Delete(_idx: Integer); safecall;
    function Create: IRobotTimeHistoryPointsCollection; safecall;
    function Store(const _function_name: WideString; 
                   const _points: IRobotTimeHistoryPointsCollection): Integer; safecall;
    function Find(const _function_name: WideString): Integer; safecall;
    function GetName(_idx: Integer): WideString; safecall;
    function CreateSum(_fun1_idx: Integer; _fun1_coeff: Double; _fun2_idx: Integer; 
                       _fun2_coeff: Double): IRobotTimeHistoryPointsCollection; safecall;
    procedure AddFromFile(const _file_path: WideString); safecall;
    procedure SaveToFile(const _file_path: WideString); safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotTimeHistoryFunctionListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {987BDB2F-03DB-4C0B-8FA0-ED420DC35C4C}
// *********************************************************************//
  IRobotTimeHistoryFunctionListDisp = dispinterface
    ['{987BDB2F-03DB-4C0B-8FA0-ED420DC35C4C}']
    property Count: Integer readonly dispid 1610743808;
    function Get(_idx: Integer): IRobotTimeHistoryPointsCollection; dispid 1610743809;
    procedure Delete(_idx: Integer); dispid 1610743810;
    function Create: IRobotTimeHistoryPointsCollection; dispid 1610743811;
    function Store(const _function_name: WideString; 
                   const _points: IRobotTimeHistoryPointsCollection): Integer; dispid 1610743812;
    function Find(const _function_name: WideString): Integer; dispid 1610743813;
    function GetName(_idx: Integer): WideString; dispid 1610743814;
    function CreateSum(_fun1_idx: Integer; _fun1_coeff: Double; _fun2_idx: Integer; 
                       _fun2_coeff: Double): IRobotTimeHistoryPointsCollection; dispid 1610743815;
    procedure AddFromFile(const _file_path: WideString); dispid 1610743816;
    procedure SaveToFile(const _file_path: WideString); dispid 1610743817;
  end;

// *********************************************************************//
// Interface: IRobotTimeHistoryPointsCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F0A096D6-36DF-4FB5-B7CE-A38ED3B8B0F4}
// *********************************************************************//
  IRobotTimeHistoryPointsCollection = interface(IDispatch)
    ['{F0A096D6-36DF-4FB5-B7CE-A38ED3B8B0F4}']
    function Get_Count: Integer; safecall;
    procedure Add(_x: Double; _y: Double); safecall;
    procedure Clear; safecall;
    function Find(_x: Double): Integer; safecall;
    procedure Get(_idx: Integer; out _x: Double; out _y: Double); safecall;
    procedure Delete(_idx: Integer); safecall;
    procedure LoadFromFile(const _file_path: WideString); safecall;
    procedure SaveToFile(const _file_path: WideString); safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotTimeHistoryPointsCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F0A096D6-36DF-4FB5-B7CE-A38ED3B8B0F4}
// *********************************************************************//
  IRobotTimeHistoryPointsCollectionDisp = dispinterface
    ['{F0A096D6-36DF-4FB5-B7CE-A38ED3B8B0F4}']
    property Count: Integer readonly dispid 1610743808;
    procedure Add(_x: Double; _y: Double); dispid 1610743809;
    procedure Clear; dispid 1610743810;
    function Find(_x: Double): Integer; dispid 1610743811;
    procedure Get(_idx: Integer; out _x: Double; out _y: Double); dispid 1610743812;
    procedure Delete(_idx: Integer); dispid 1610743813;
    procedure LoadFromFile(const _file_path: WideString); dispid 1610743814;
    procedure SaveToFile(const _file_path: WideString); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotMobileCase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {61642592-E89C-11D4-B8AB-0050DA76755E}
// *********************************************************************//
  IRobotMobileCase = interface(IRobotCase)
    ['{61642592-E89C-11D4-B8AB-0050DA76755E}']
    function Get_Components: IRobotMobileCaseComponentMngr; safecall;
    function Get_Flag: IRobotMobileCaseFlag; safecall;
    function Get_UniqueId: Integer; safecall;
    function FindByFlag(_mc_flag: IRobotMobileCaseFlag): Integer; safecall;
    function Get_UserId: Integer; safecall;
    procedure Set_UserId(ret: Integer); safecall;
    function Get_ApplicationPlaneType: IRobotMobileCaseApplicationPlaneType; safecall;
    procedure Set_ApplicationPlaneType(ret: IRobotMobileCaseApplicationPlaneType); safecall;
    function Get_Vehicle: WideString; safecall;
    procedure Set_Vehicle(const ret: WideString); safecall;
    function GetRoute: IRobotMobileCaseRoute; safecall;
    procedure SetRoute(const _route: IRobotMobileCaseRoute); safecall;
    function Get_ApplicationPlaneBars: WideString; safecall;
    procedure Set_ApplicationPlaneBars(const ret: WideString); safecall;
    function Get_NatureName: WideString; safecall;
    procedure SetNatureExt(_rgl_action: Integer); safecall;
    function Get_label_: WideString; safecall;
    procedure Set_label_(const ret: WideString); safecall;
    function Get_IsAuxiliary: WordBool; safecall;
    procedure Set_IsAuxiliary(ret: WordBool); safecall;
    property Components: IRobotMobileCaseComponentMngr read Get_Components;
    property Flag: IRobotMobileCaseFlag read Get_Flag;
    property UniqueId: Integer read Get_UniqueId;
    property UserId: Integer read Get_UserId write Set_UserId;
    property ApplicationPlaneType: IRobotMobileCaseApplicationPlaneType read Get_ApplicationPlaneType write Set_ApplicationPlaneType;
    property Vehicle: WideString read Get_Vehicle write Set_Vehicle;
    property ApplicationPlaneBars: WideString read Get_ApplicationPlaneBars write Set_ApplicationPlaneBars;
    property NatureName: WideString read Get_NatureName;
    property label_: WideString read Get_label_ write Set_label_;
    property IsAuxiliary: WordBool read Get_IsAuxiliary write Set_IsAuxiliary;
  end;

// *********************************************************************//
// DispIntf:  IRobotMobileCaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {61642592-E89C-11D4-B8AB-0050DA76755E}
// *********************************************************************//
  IRobotMobileCaseDisp = dispinterface
    ['{61642592-E89C-11D4-B8AB-0050DA76755E}']
    property Components: IRobotMobileCaseComponentMngr readonly dispid 1610809344;
    property Flag: IRobotMobileCaseFlag readonly dispid 1610809345;
    property UniqueId: Integer readonly dispid 1610809346;
    function FindByFlag(_mc_flag: IRobotMobileCaseFlag): Integer; dispid 1610809347;
    property UserId: Integer dispid 1610809348;
    property ApplicationPlaneType: IRobotMobileCaseApplicationPlaneType dispid 1610809350;
    property Vehicle: WideString dispid 1610809352;
    function GetRoute: IRobotMobileCaseRoute; dispid 1610809354;
    procedure SetRoute(const _route: IRobotMobileCaseRoute); dispid 1610809355;
    property ApplicationPlaneBars: WideString dispid 1610809356;
    property NatureName: WideString readonly dispid 1610809358;
    procedure SetNatureExt(_rgl_action: Integer); dispid 1610809359;
    property label_: WideString dispid 1610809360;
    property IsAuxiliary: WordBool dispid 1610809362;
    property Number: Integer dispid 1610743808;
    property type_: IRobotCaseType readonly dispid 1610743810;
    property Name: WideString dispid 1610743811;
    property Nature: IRobotCaseNature dispid 1610743813;
    property AnalizeType: IRobotCaseAnalizeType dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotMobileCaseComponentMngr
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {61642594-E89C-11D4-B8AB-0050DA76755E}
// *********************************************************************//
  IRobotMobileCaseComponentMngr = interface(IDispatch)
    ['{61642594-E89C-11D4-B8AB-0050DA76755E}']
    function Get_Count: Integer; safecall;
    function Get(_cmpnt_idx: Integer): IRobotMobileCaseComponent; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotMobileCaseComponentMngrDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {61642594-E89C-11D4-B8AB-0050DA76755E}
// *********************************************************************//
  IRobotMobileCaseComponentMngrDisp = dispinterface
    ['{61642594-E89C-11D4-B8AB-0050DA76755E}']
    property Count: Integer readonly dispid 1610743808;
    function Get(_cmpnt_idx: Integer): IRobotMobileCaseComponent; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotMobileCaseComponent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {61642596-E89C-11D4-B8AB-0050DA76755E}
// *********************************************************************//
  IRobotMobileCaseComponent = interface(IDispatch)
    ['{61642596-E89C-11D4-B8AB-0050DA76755E}']
    function Get_Point: Integer; safecall;
    function Get_Records: IRobotLoadRecordMngr; safecall;
    property Point: Integer read Get_Point;
    property Records: IRobotLoadRecordMngr read Get_Records;
  end;

// *********************************************************************//
// DispIntf:  IRobotMobileCaseComponentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {61642596-E89C-11D4-B8AB-0050DA76755E}
// *********************************************************************//
  IRobotMobileCaseComponentDisp = dispinterface
    ['{61642596-E89C-11D4-B8AB-0050DA76755E}']
    property Point: Integer readonly dispid 1610743808;
    property Records: IRobotLoadRecordMngr readonly dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotMobileCaseRoute
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {14267019-37AD-44ED-88B8-4BC236E47F9D}
// *********************************************************************//
  IRobotMobileCaseRoute = interface(IDispatch)
    ['{14267019-37AD-44ED-88B8-4BC236E47F9D}']
    function Get_Geometry: Integer; safecall;
    procedure Set_Geometry(ret: Integer); safecall;
    function Get_Step: Double; safecall;
    procedure Set_Step(ret: Double); safecall;
    function Get_LoadDirection: IRobotGeoPoint3D; safecall;
    function Get_EndRouteLimit: WordBool; safecall;
    procedure Set_EndRouteLimit(ret: WordBool); safecall;
    function Get_BeginingRouteLimit: WordBool; safecall;
    procedure Set_BeginingRouteLimit(ret: WordBool); safecall;
    function Get_Tolerance: Double; safecall;
    procedure Set_Tolerance(ret: Double); safecall;
    function GetFactors(segment: Integer): IRobotMobileCaseSegmentFactors; safecall;
    procedure SetFactors(segment: Integer; const _factors: IRobotMobileCaseSegmentFactors); safecall;
    property Geometry: Integer read Get_Geometry write Set_Geometry;
    property Step: Double read Get_Step write Set_Step;
    property LoadDirection: IRobotGeoPoint3D read Get_LoadDirection;
    property EndRouteLimit: WordBool read Get_EndRouteLimit write Set_EndRouteLimit;
    property BeginingRouteLimit: WordBool read Get_BeginingRouteLimit write Set_BeginingRouteLimit;
    property Tolerance: Double read Get_Tolerance write Set_Tolerance;
  end;

// *********************************************************************//
// DispIntf:  IRobotMobileCaseRouteDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {14267019-37AD-44ED-88B8-4BC236E47F9D}
// *********************************************************************//
  IRobotMobileCaseRouteDisp = dispinterface
    ['{14267019-37AD-44ED-88B8-4BC236E47F9D}']
    property Geometry: Integer dispid 1610743808;
    property Step: Double dispid 1610743810;
    property LoadDirection: IRobotGeoPoint3D readonly dispid 1610743812;
    property EndRouteLimit: WordBool dispid 1610743813;
    property BeginingRouteLimit: WordBool dispid 1610743815;
    property Tolerance: Double dispid 1610743817;
    function GetFactors(segment: Integer): IRobotMobileCaseSegmentFactors; dispid 1610743819;
    procedure SetFactors(segment: Integer; const _factors: IRobotMobileCaseSegmentFactors); dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRobotMobileCaseSegmentFactors
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D3882ACF-A33D-4D7A-97BF-3DCCBDC56E2F}
// *********************************************************************//
  IRobotMobileCaseSegmentFactors = interface(IDispatch)
    ['{D3882ACF-A33D-4D7A-97BF-3DCCBDC56E2F}']
    function Get_Gamma: Double; safecall;
    procedure Set_Gamma(ret: Double); safecall;
    function Get_VR: Double; safecall;
    procedure Set_VR(ret: Double); safecall;
    function Get_VL: Double; safecall;
    procedure Set_VL(ret: Double); safecall;
    function Get_HR: Double; safecall;
    procedure Set_HR(ret: Double); safecall;
    function Get_HL: Double; safecall;
    procedure Set_HL(ret: Double); safecall;
    function Get_LR: Double; safecall;
    procedure Set_LR(ret: Double); safecall;
    function Get_LL: Double; safecall;
    procedure Set_LL(ret: Double); safecall;
    property Gamma: Double read Get_Gamma write Set_Gamma;
    property VR: Double read Get_VR write Set_VR;
    property VL: Double read Get_VL write Set_VL;
    property HR: Double read Get_HR write Set_HR;
    property HL: Double read Get_HL write Set_HL;
    property LR: Double read Get_LR write Set_LR;
    property LL: Double read Get_LL write Set_LL;
  end;

// *********************************************************************//
// DispIntf:  IRobotMobileCaseSegmentFactorsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D3882ACF-A33D-4D7A-97BF-3DCCBDC56E2F}
// *********************************************************************//
  IRobotMobileCaseSegmentFactorsDisp = dispinterface
    ['{D3882ACF-A33D-4D7A-97BF-3DCCBDC56E2F}']
    property Gamma: Double dispid 1610743808;
    property VR: Double dispid 1610743810;
    property VL: Double dispid 1610743812;
    property HR: Double dispid 1610743814;
    property HL: Double dispid 1610743816;
    property LR: Double dispid 1610743818;
    property LL: Double dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRobotSELFSeismicEngine
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BA190245-7B25-4446-80E1-93BEA09F5D36}
// *********************************************************************//
  IRobotSELFSeismicEngine = interface(IDispatch)
    ['{BA190245-7B25-4446-80E1-93BEA09F5D36}']
    function Get_GenerationParams: IRobotSELFSeismicGenerationParams; safecall;
    function GenerateLoadCases: Integer; safecall;
    property GenerationParams: IRobotSELFSeismicGenerationParams read Get_GenerationParams;
  end;

// *********************************************************************//
// DispIntf:  IRobotSELFSeismicEngineDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BA190245-7B25-4446-80E1-93BEA09F5D36}
// *********************************************************************//
  IRobotSELFSeismicEngineDisp = dispinterface
    ['{BA190245-7B25-4446-80E1-93BEA09F5D36}']
    property GenerationParams: IRobotSELFSeismicGenerationParams readonly dispid 1610743808;
    function GenerateLoadCases: Integer; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotSELFSeismicGenerationParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01297317-B940-446C-B0E8-19B61946D26F}
// *********************************************************************//
  IRobotSELFSeismicGenerationParams = interface(IDispatch)
    ['{01297317-B940-446C-B0E8-19B61946D26F}']
    function Get_ModalCaseParams: IRobotModalAnalysisParams; safecall;
    function Get_ExcitationDir: IRobotDynamicAnalysisExcitationDirection; safecall;
    function Get_TBaseMethod: IRobotSELFSeismicTBaseMethod; safecall;
    procedure Set_TBaseMethod(ret: IRobotSELFSeismicTBaseMethod); safecall;
    function Get_SeismicParams: IRobotSELFSeismicAnalysisParams; safecall;
    function Get_CodeName: WideString; safecall;
    procedure Set_CodeName(const ret: WideString); safecall;
    function Get_CodeNumber: Integer; safecall;
    procedure Set_CodeNumber(ret: Integer); safecall;
    property ModalCaseParams: IRobotModalAnalysisParams read Get_ModalCaseParams;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection read Get_ExcitationDir;
    property TBaseMethod: IRobotSELFSeismicTBaseMethod read Get_TBaseMethod write Set_TBaseMethod;
    property SeismicParams: IRobotSELFSeismicAnalysisParams read Get_SeismicParams;
    property CodeName: WideString read Get_CodeName write Set_CodeName;
    property CodeNumber: Integer read Get_CodeNumber write Set_CodeNumber;
  end;

// *********************************************************************//
// DispIntf:  IRobotSELFSeismicGenerationParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01297317-B940-446C-B0E8-19B61946D26F}
// *********************************************************************//
  IRobotSELFSeismicGenerationParamsDisp = dispinterface
    ['{01297317-B940-446C-B0E8-19B61946D26F}']
    property ModalCaseParams: IRobotModalAnalysisParams readonly dispid 1610743808;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection readonly dispid 1610743809;
    property TBaseMethod: IRobotSELFSeismicTBaseMethod dispid 1610743810;
    property SeismicParams: IRobotSELFSeismicAnalysisParams readonly dispid 1610743812;
    property CodeName: WideString dispid 1610743813;
    property CodeNumber: Integer dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotModalAnalysisParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {134B5582-982B-11D4-A395-00105ADE99A8}
// *********************************************************************//
  IRobotModalAnalysisParams = interface(IDispatch)
    ['{134B5582-982B-11D4-A395-00105ADE99A8}']
    function Get_Mode: IRobotModalAnalysisMode; safecall;
    procedure Set_Mode(ret: IRobotModalAnalysisMode); safecall;
    function Get_ModesCount: Integer; safecall;
    procedure Set_ModesCount(ret: Integer); safecall;
    function Get_Tolerance: Double; safecall;
    procedure Set_Tolerance(ret: Double); safecall;
    function Get_IterationsCount: Integer; safecall;
    procedure Set_IterationsCount(ret: Integer); safecall;
    function Get_Damping: Double; safecall;
    procedure Set_Damping(ret: Double); safecall;
    function Get_IncludeDampingInCalculations: WordBool; safecall;
    procedure Set_IncludeDampingInCalculations(ret: WordBool); safecall;
    function Get_MassMatrix: IRobotModalAnalysisMassMatrixType; safecall;
    procedure Set_MassMatrix(ret: IRobotModalAnalysisMassMatrixType); safecall;
    function Get_MassParticipation: Double; safecall;
    procedure Set_MassParticipation(ret: Double); safecall;
    function Get_DisregardDensity: WordBool; safecall;
    procedure Set_DisregardDensity(ret: WordBool); safecall;
    function Get_Method: IRobotModalAnalysisAlgorithm; safecall;
    procedure Set_Method(ret: IRobotModalAnalysisAlgorithm); safecall;
    function Get_Shifts: IRobotModalAnalysisShifts; safecall;
    function Get_Acceleration: Double; safecall;
    procedure Set_Acceleration(ret: Double); safecall;
    function Get_Limits: IRobotModalAnalysisLimits; safecall;
    function Get_SturmVerification: WordBool; safecall;
    procedure Set_SturmVerification(ret: WordBool); safecall;
    function Get_Base: IRobotModalAnalysisBase; safecall;
    function Get_MassEccentricities: IRobotMassEccentricities; safecall;
    property Mode: IRobotModalAnalysisMode read Get_Mode write Set_Mode;
    property ModesCount: Integer read Get_ModesCount write Set_ModesCount;
    property Tolerance: Double read Get_Tolerance write Set_Tolerance;
    property IterationsCount: Integer read Get_IterationsCount write Set_IterationsCount;
    property Damping: Double read Get_Damping write Set_Damping;
    property IncludeDampingInCalculations: WordBool read Get_IncludeDampingInCalculations write Set_IncludeDampingInCalculations;
    property MassMatrix: IRobotModalAnalysisMassMatrixType read Get_MassMatrix write Set_MassMatrix;
    property MassParticipation: Double read Get_MassParticipation write Set_MassParticipation;
    property DisregardDensity: WordBool read Get_DisregardDensity write Set_DisregardDensity;
    property Method: IRobotModalAnalysisAlgorithm read Get_Method write Set_Method;
    property Shifts: IRobotModalAnalysisShifts read Get_Shifts;
    property Acceleration: Double read Get_Acceleration write Set_Acceleration;
    property Limits: IRobotModalAnalysisLimits read Get_Limits;
    property SturmVerification: WordBool read Get_SturmVerification write Set_SturmVerification;
    property Base: IRobotModalAnalysisBase read Get_Base;
    property MassEccentricities: IRobotMassEccentricities read Get_MassEccentricities;
  end;

// *********************************************************************//
// DispIntf:  IRobotModalAnalysisParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {134B5582-982B-11D4-A395-00105ADE99A8}
// *********************************************************************//
  IRobotModalAnalysisParamsDisp = dispinterface
    ['{134B5582-982B-11D4-A395-00105ADE99A8}']
    property Mode: IRobotModalAnalysisMode dispid 1610743808;
    property ModesCount: Integer dispid 1610743810;
    property Tolerance: Double dispid 1610743812;
    property IterationsCount: Integer dispid 1610743814;
    property Damping: Double dispid 1610743816;
    property IncludeDampingInCalculations: WordBool dispid 1610743818;
    property MassMatrix: IRobotModalAnalysisMassMatrixType dispid 1610743820;
    property MassParticipation: Double dispid 1610743822;
    property DisregardDensity: WordBool dispid 1610743824;
    property Method: IRobotModalAnalysisAlgorithm dispid 1610743826;
    property Shifts: IRobotModalAnalysisShifts readonly dispid 1610743828;
    property Acceleration: Double dispid 1610743829;
    property Limits: IRobotModalAnalysisLimits readonly dispid 1610743831;
    property SturmVerification: WordBool dispid 1610743832;
    property Base: IRobotModalAnalysisBase readonly dispid 1610743834;
    property MassEccentricities: IRobotMassEccentricities readonly dispid 1610743835;
  end;

// *********************************************************************//
// Interface: IRobotModalAnalysisShifts
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9147DC34-A0DD-11D4-A3A2-00105ADE99A8}
// *********************************************************************//
  IRobotModalAnalysisShifts = interface(IDispatch)
    ['{9147DC34-A0DD-11D4-A3A2-00105ADE99A8}']
    function Get_IterationsCount: Integer; safecall;
    procedure Set_IterationsCount(ret: Integer); safecall;
    procedure SetDefault; safecall;
    property IterationsCount: Integer read Get_IterationsCount write Set_IterationsCount;
  end;

// *********************************************************************//
// DispIntf:  IRobotModalAnalysisShiftsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9147DC34-A0DD-11D4-A3A2-00105ADE99A8}
// *********************************************************************//
  IRobotModalAnalysisShiftsDisp = dispinterface
    ['{9147DC34-A0DD-11D4-A3A2-00105ADE99A8}']
    property IterationsCount: Integer dispid 1610743808;
    procedure SetDefault; dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotModalAnalysisLimits
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9147DC32-A0DD-11D4-A3A2-00105ADE99A8}
// *********************************************************************//
  IRobotModalAnalysisLimits = interface(IDispatch)
    ['{9147DC32-A0DD-11D4-A3A2-00105ADE99A8}']
    function Get_PulsationLimitValue: Double; safecall;
    function Get_FrequencyLimitValue: Double; safecall;
    function Get_PeriodLimitValue: Double; safecall;
    procedure DefineLimits(_limit_type: IRobotModalAnalysisLimitType; _value: Double); safecall;
    property PulsationLimitValue: Double read Get_PulsationLimitValue;
    property FrequencyLimitValue: Double read Get_FrequencyLimitValue;
    property PeriodLimitValue: Double read Get_PeriodLimitValue;
  end;

// *********************************************************************//
// DispIntf:  IRobotModalAnalysisLimitsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9147DC32-A0DD-11D4-A3A2-00105ADE99A8}
// *********************************************************************//
  IRobotModalAnalysisLimitsDisp = dispinterface
    ['{9147DC32-A0DD-11D4-A3A2-00105ADE99A8}']
    property PulsationLimitValue: Double readonly dispid 1610743808;
    property FrequencyLimitValue: Double readonly dispid 1610743809;
    property PeriodLimitValue: Double readonly dispid 1610743810;
    procedure DefineLimits(_limit_type: IRobotModalAnalysisLimitType; _value: Double); dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotModalAnalysisBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8460B0D2-9842-11D4-A395-00105ADE99A8}
// *********************************************************************//
  IRobotModalAnalysisBase = interface(IDispatch)
    ['{8460B0D2-9842-11D4-A395-00105ADE99A8}']
    function Add(const _nodes: WideString; _ux: WordBool; _uy: WordBool; _uz: WordBool): Integer; safecall;
    function Delete(_idx: Integer): WordBool; safecall;
    procedure Get(_idx: Integer; out _nodes: WideString; out _ux: Integer; out _uy: Integer; 
                  out _uz: Integer); safecall;
    function Count: Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotModalAnalysisBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8460B0D2-9842-11D4-A395-00105ADE99A8}
// *********************************************************************//
  IRobotModalAnalysisBaseDisp = dispinterface
    ['{8460B0D2-9842-11D4-A395-00105ADE99A8}']
    function Add(const _nodes: WideString; _ux: WordBool; _uy: WordBool; _uz: WordBool): Integer; dispid 1610743808;
    function Delete(_idx: Integer): WordBool; dispid 1610743809;
    procedure Get(_idx: Integer; out _nodes: WideString; out _ux: Integer; out _uy: Integer; 
                  out _uz: Integer); dispid 1610743810;
    function Count: Integer; dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotMassEccentricities
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D8FF09A5-36F5-43EE-AC3E-22C83687643C}
// *********************************************************************//
  IRobotMassEccentricities = interface(IDispatch)
    ['{D8FF09A5-36F5-43EE-AC3E-22C83687643C}']
    function Get_RelativeValues: WordBool; safecall;
    procedure Set_RelativeValues(ret: WordBool); safecall;
    function Get_IsDirX: WordBool; safecall;
    procedure Set_IsDirX(ret: WordBool); safecall;
    function Get_IsDirY: WordBool; safecall;
    procedure Set_IsDirY(ret: WordBool); safecall;
    function Get_ValueDirX: Double; safecall;
    procedure Set_ValueDirX(ret: Double); safecall;
    function Get_ValueDirY: Double; safecall;
    procedure Set_ValueDirY(ret: Double); safecall;
    property RelativeValues: WordBool read Get_RelativeValues write Set_RelativeValues;
    property IsDirX: WordBool read Get_IsDirX write Set_IsDirX;
    property IsDirY: WordBool read Get_IsDirY write Set_IsDirY;
    property ValueDirX: Double read Get_ValueDirX write Set_ValueDirX;
    property ValueDirY: Double read Get_ValueDirY write Set_ValueDirY;
  end;

// *********************************************************************//
// DispIntf:  IRobotMassEccentricitiesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D8FF09A5-36F5-43EE-AC3E-22C83687643C}
// *********************************************************************//
  IRobotMassEccentricitiesDisp = dispinterface
    ['{D8FF09A5-36F5-43EE-AC3E-22C83687643C}']
    property RelativeValues: WordBool dispid 1610743808;
    property IsDirX: WordBool dispid 1610743810;
    property IsDirY: WordBool dispid 1610743812;
    property ValueDirX: Double dispid 1610743814;
    property ValueDirY: Double dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRobotDynamicAnalysisExcitationDirection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A0C42C00-4CD9-4E83-A601-D61CDD4C1CDE}
// *********************************************************************//
  IRobotDynamicAnalysisExcitationDirection = interface(IDispatch)
    ['{A0C42C00-4CD9-4E83-A601-D61CDD4C1CDE}']
    function Get_X: Double; safecall;
    procedure Set_X(ret: Double); safecall;
    function Get_Y: Double; safecall;
    procedure Set_Y(ret: Double); safecall;
    function Get_Z: Double; safecall;
    procedure Set_Z(ret: Double); safecall;
    function Get_UseNormalized: WordBool; safecall;
    procedure Set_UseNormalized(ret: WordBool); safecall;
    function Get_NormalizedX: Double; safecall;
    function Get_NormalizedY: Double; safecall;
    function Get_NormalizedZ: Double; safecall;
    function Get_ResolutionActive: WordBool; safecall;
    procedure Set_ResolutionActive(ret: WordBool); safecall;
    function Get_QuadraticActive: WordBool; safecall;
    procedure Set_QuadraticActive(ret: WordBool); safecall;
    function Get_RX: Double; safecall;
    procedure Set_RX(ret: Double); safecall;
    function Get_RY: Double; safecall;
    procedure Set_RY(ret: Double); safecall;
    function Get_RZ: Double; safecall;
    procedure Set_RZ(ret: Double); safecall;
    function Get_QuadraticSigned: WordBool; safecall;
    procedure Set_QuadraticSigned(ret: WordBool); safecall;
    function Get_Group1: WordBool; safecall;
    procedure Set_Group1(ret: WordBool); safecall;
    function Get_Group2: WordBool; safecall;
    procedure Set_Group2(ret: WordBool); safecall;
    function Get_Group3: WordBool; safecall;
    procedure Set_Group3(ret: WordBool); safecall;
    function Get_Mi: Double; safecall;
    procedure Set_Mi(ret: Double); safecall;
    function Get_Lambda: Double; safecall;
    procedure Set_Lambda(ret: Double); safecall;
    function Get_CombType: IRobotModeCombinationType; safecall;
    procedure Set_CombType(ret: IRobotModeCombinationType); safecall;
    property X: Double read Get_X write Set_X;
    property Y: Double read Get_Y write Set_Y;
    property Z: Double read Get_Z write Set_Z;
    property UseNormalized: WordBool read Get_UseNormalized write Set_UseNormalized;
    property NormalizedX: Double read Get_NormalizedX;
    property NormalizedY: Double read Get_NormalizedY;
    property NormalizedZ: Double read Get_NormalizedZ;
    property ResolutionActive: WordBool read Get_ResolutionActive write Set_ResolutionActive;
    property QuadraticActive: WordBool read Get_QuadraticActive write Set_QuadraticActive;
    property RX: Double read Get_RX write Set_RX;
    property RY: Double read Get_RY write Set_RY;
    property RZ: Double read Get_RZ write Set_RZ;
    property QuadraticSigned: WordBool read Get_QuadraticSigned write Set_QuadraticSigned;
    property Group1: WordBool read Get_Group1 write Set_Group1;
    property Group2: WordBool read Get_Group2 write Set_Group2;
    property Group3: WordBool read Get_Group3 write Set_Group3;
    property Mi: Double read Get_Mi write Set_Mi;
    property Lambda: Double read Get_Lambda write Set_Lambda;
    property CombType: IRobotModeCombinationType read Get_CombType write Set_CombType;
  end;

// *********************************************************************//
// DispIntf:  IRobotDynamicAnalysisExcitationDirectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A0C42C00-4CD9-4E83-A601-D61CDD4C1CDE}
// *********************************************************************//
  IRobotDynamicAnalysisExcitationDirectionDisp = dispinterface
    ['{A0C42C00-4CD9-4E83-A601-D61CDD4C1CDE}']
    property X: Double dispid 1610743808;
    property Y: Double dispid 1610743810;
    property Z: Double dispid 1610743812;
    property UseNormalized: WordBool dispid 1610743814;
    property NormalizedX: Double readonly dispid 1610743816;
    property NormalizedY: Double readonly dispid 1610743817;
    property NormalizedZ: Double readonly dispid 1610743818;
    property ResolutionActive: WordBool dispid 1610743819;
    property QuadraticActive: WordBool dispid 1610743821;
    property RX: Double dispid 1610743823;
    property RY: Double dispid 1610743825;
    property RZ: Double dispid 1610743827;
    property QuadraticSigned: WordBool dispid 1610743829;
    property Group1: WordBool dispid 1610743831;
    property Group2: WordBool dispid 1610743833;
    property Group3: WordBool dispid 1610743835;
    property Mi: Double dispid 1610743837;
    property Lambda: Double dispid 1610743839;
    property CombType: IRobotModeCombinationType dispid 1610743841;
  end;

// *********************************************************************//
// Interface: IRobotSELFSeismicAnalysisParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {342B2C05-9385-4B20-84AF-D69E51ECC103}
// *********************************************************************//
  IRobotSELFSeismicAnalysisParams = interface(IDispatch)
    ['{342B2C05-9385-4B20-84AF-D69E51ECC103}']
    function Get_Eccentricities: IRobotMassEccentricities; safecall;
    function Get_StructureParams: IRobotSELFSeismicStructureParams; safecall;
    function Get_TBaseMethod: IRobotSELFSeismicTBaseMethod; safecall;
    function Get_CodeParams: IDispatch; safecall;
    function Get_CodeName: WideString; safecall;
    function Get_CodeNumber: Integer; safecall;
    function GetExcitationDir: IRobotDynamicAnalysisExcitationDirection; safecall;
    property Eccentricities: IRobotMassEccentricities read Get_Eccentricities;
    property StructureParams: IRobotSELFSeismicStructureParams read Get_StructureParams;
    property TBaseMethod: IRobotSELFSeismicTBaseMethod read Get_TBaseMethod;
    property CodeParams: IDispatch read Get_CodeParams;
    property CodeName: WideString read Get_CodeName;
    property CodeNumber: Integer read Get_CodeNumber;
  end;

// *********************************************************************//
// DispIntf:  IRobotSELFSeismicAnalysisParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {342B2C05-9385-4B20-84AF-D69E51ECC103}
// *********************************************************************//
  IRobotSELFSeismicAnalysisParamsDisp = dispinterface
    ['{342B2C05-9385-4B20-84AF-D69E51ECC103}']
    property Eccentricities: IRobotMassEccentricities readonly dispid 1610743808;
    property StructureParams: IRobotSELFSeismicStructureParams readonly dispid 1610743809;
    property TBaseMethod: IRobotSELFSeismicTBaseMethod readonly dispid 1610743810;
    property CodeParams: IDispatch readonly dispid 1610743811;
    property CodeName: WideString readonly dispid 1610743812;
    property CodeNumber: Integer readonly dispid 1610743813;
    function GetExcitationDir: IRobotDynamicAnalysisExcitationDirection; dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotSELFSeismicStructureParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {416F4776-D7DF-43B5-B34A-72A4869BCA38}
// *********************************************************************//
  IRobotSELFSeismicStructureParams = interface(IDispatch)
    ['{416F4776-D7DF-43B5-B34A-72A4869BCA38}']
    function Get_BaseLevelDefMethod: IRobotSELFSeismicLevelDefinitionMethod; safecall;
    procedure Set_BaseLevelDefMethod(ret: IRobotSELFSeismicLevelDefinitionMethod); safecall;
    function Get_BaseLevelCoordZ: Double; safecall;
    procedure Set_BaseLevelCoordZ(ret: Double); safecall;
    function Get_BaseLevelStorey: Integer; safecall;
    procedure Set_BaseLevelStorey(ret: Integer); safecall;
    function Get_TopLevelDefMethod: IRobotSELFSeismicLevelDefinitionMethod; safecall;
    procedure Set_TopLevelDefMethod(ret: IRobotSELFSeismicLevelDefinitionMethod); safecall;
    function Get_TopLevelCoordZ: Double; safecall;
    procedure Set_TopLevelCoordZ(ret: Double); safecall;
    function Get_TopLevelStorey: Integer; safecall;
    procedure Set_TopLevelStorey(ret: Integer); safecall;
    property BaseLevelDefMethod: IRobotSELFSeismicLevelDefinitionMethod read Get_BaseLevelDefMethod write Set_BaseLevelDefMethod;
    property BaseLevelCoordZ: Double read Get_BaseLevelCoordZ write Set_BaseLevelCoordZ;
    property BaseLevelStorey: Integer read Get_BaseLevelStorey write Set_BaseLevelStorey;
    property TopLevelDefMethod: IRobotSELFSeismicLevelDefinitionMethod read Get_TopLevelDefMethod write Set_TopLevelDefMethod;
    property TopLevelCoordZ: Double read Get_TopLevelCoordZ write Set_TopLevelCoordZ;
    property TopLevelStorey: Integer read Get_TopLevelStorey write Set_TopLevelStorey;
  end;

// *********************************************************************//
// DispIntf:  IRobotSELFSeismicStructureParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {416F4776-D7DF-43B5-B34A-72A4869BCA38}
// *********************************************************************//
  IRobotSELFSeismicStructureParamsDisp = dispinterface
    ['{416F4776-D7DF-43B5-B34A-72A4869BCA38}']
    property BaseLevelDefMethod: IRobotSELFSeismicLevelDefinitionMethod dispid 1610743808;
    property BaseLevelCoordZ: Double dispid 1610743810;
    property BaseLevelStorey: Integer dispid 1610743812;
    property TopLevelDefMethod: IRobotSELFSeismicLevelDefinitionMethod dispid 1610743814;
    property TopLevelCoordZ: Double dispid 1610743816;
    property TopLevelStorey: Integer dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRobotWindLoadsSimulationEngine
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {29E8AFF6-DDF8-4D8C-9FF8-BF414D0E717C}
// *********************************************************************//
  IRobotWindLoadsSimulationEngine = interface(IDispatch)
    ['{29E8AFF6-DDF8-4D8C-9FF8-BF414D0E717C}']
    function Generate: WordBool; safecall;
    function Get_Params: IRobotWindLoadsSimulationParams; safecall;
    property Params: IRobotWindLoadsSimulationParams read Get_Params;
  end;

// *********************************************************************//
// DispIntf:  IRobotWindLoadsSimulationEngineDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {29E8AFF6-DDF8-4D8C-9FF8-BF414D0E717C}
// *********************************************************************//
  IRobotWindLoadsSimulationEngineDisp = dispinterface
    ['{29E8AFF6-DDF8-4D8C-9FF8-BF414D0E717C}']
    function Generate: WordBool; dispid 1610743808;
    property Params: IRobotWindLoadsSimulationParams readonly dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotWindLoadsSimulationParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3EF0F59D-921B-4DB3-8266-921C19C5C98A}
// *********************************************************************//
  IRobotWindLoadsSimulationParams = interface(IDispatch)
    ['{3EF0F59D-921B-4DB3-8266-921C19C5C98A}']
    function Get_Elements: IRobotSelection; safecall;
    function Get_DirectionXPEnabled: WordBool; safecall;
    procedure Set_DirectionXPEnabled(ret: WordBool); safecall;
    function Get_DirectionXPYPEnabled: WordBool; safecall;
    procedure Set_DirectionXPYPEnabled(ret: WordBool); safecall;
    function Get_DirectionYPEnabled: WordBool; safecall;
    procedure Set_DirectionYPEnabled(ret: WordBool); safecall;
    function Get_DirectionXNYPEnabled: WordBool; safecall;
    procedure Set_DirectionXNYPEnabled(ret: WordBool); safecall;
    function Get_DirectionXNEnabled: WordBool; safecall;
    procedure Set_DirectionXNEnabled(ret: WordBool); safecall;
    function Get_DirectionXNYNEnabled: WordBool; safecall;
    procedure Set_DirectionXNYNEnabled(ret: WordBool); safecall;
    function Get_DirectionYNEnabled: WordBool; safecall;
    procedure Set_DirectionYNEnabled(ret: WordBool); safecall;
    function Get_DirectionXPYNEnabled: WordBool; safecall;
    procedure Set_DirectionXPYNEnabled(ret: WordBool); safecall;
    function Get_Velocity: Double; safecall;
    procedure Set_Velocity(ret: Double); safecall;
    function Get_TerrainLevel: Double; safecall;
    procedure Set_TerrainLevel(ret: Double); safecall;
    function Get_OpeningsClosed: WordBool; safecall;
    procedure Set_OpeningsClosed(ret: WordBool); safecall;
    function Get_DeviationPercent: Double; safecall;
    procedure Set_DeviationPercent(ret: Double); safecall;
    property Elements: IRobotSelection read Get_Elements;
    property DirectionXPEnabled: WordBool read Get_DirectionXPEnabled write Set_DirectionXPEnabled;
    property DirectionXPYPEnabled: WordBool read Get_DirectionXPYPEnabled write Set_DirectionXPYPEnabled;
    property DirectionYPEnabled: WordBool read Get_DirectionYPEnabled write Set_DirectionYPEnabled;
    property DirectionXNYPEnabled: WordBool read Get_DirectionXNYPEnabled write Set_DirectionXNYPEnabled;
    property DirectionXNEnabled: WordBool read Get_DirectionXNEnabled write Set_DirectionXNEnabled;
    property DirectionXNYNEnabled: WordBool read Get_DirectionXNYNEnabled write Set_DirectionXNYNEnabled;
    property DirectionYNEnabled: WordBool read Get_DirectionYNEnabled write Set_DirectionYNEnabled;
    property DirectionXPYNEnabled: WordBool read Get_DirectionXPYNEnabled write Set_DirectionXPYNEnabled;
    property Velocity: Double read Get_Velocity write Set_Velocity;
    property TerrainLevel: Double read Get_TerrainLevel write Set_TerrainLevel;
    property OpeningsClosed: WordBool read Get_OpeningsClosed write Set_OpeningsClosed;
    property DeviationPercent: Double read Get_DeviationPercent write Set_DeviationPercent;
  end;

// *********************************************************************//
// DispIntf:  IRobotWindLoadsSimulationParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3EF0F59D-921B-4DB3-8266-921C19C5C98A}
// *********************************************************************//
  IRobotWindLoadsSimulationParamsDisp = dispinterface
    ['{3EF0F59D-921B-4DB3-8266-921C19C5C98A}']
    property Elements: IRobotSelection readonly dispid 1610743808;
    property DirectionXPEnabled: WordBool dispid 1610743809;
    property DirectionXPYPEnabled: WordBool dispid 1610743811;
    property DirectionYPEnabled: WordBool dispid 1610743813;
    property DirectionXNYPEnabled: WordBool dispid 1610743815;
    property DirectionXNEnabled: WordBool dispid 1610743817;
    property DirectionXNYNEnabled: WordBool dispid 1610743819;
    property DirectionYNEnabled: WordBool dispid 1610743821;
    property DirectionXPYNEnabled: WordBool dispid 1610743823;
    property Velocity: Double dispid 1610743825;
    property TerrainLevel: Double dispid 1610743827;
    property OpeningsClosed: WordBool dispid 1610743829;
    property DeviationPercent: Double dispid 1610743831;
  end;

// *********************************************************************//
// Interface: IRobotCodeCmbComponentMngr
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F7217B2-2743-11D4-B808-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbComponentMngr = interface(IDispatch)
    ['{0F7217B2-2743-11D4-B808-0050DA76755E}']
    function Get_Count: Integer; safecall;
    function Get(cmb_idx: Integer): IRobotCodeCmbComponent; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotCodeCmbComponentMngrDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F7217B2-2743-11D4-B808-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbComponentMngrDisp = dispinterface
    ['{0F7217B2-2743-11D4-B808-0050DA76755E}']
    property Count: Integer readonly dispid 1610743808;
    function Get(cmb_idx: Integer): IRobotCodeCmbComponent; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotCodeCmbComponent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {90DF0B34-37CD-11D4-B819-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbComponent = interface(IDispatch)
    ['{90DF0B34-37CD-11D4-B819-0050DA76755E}']
    function Get_Count: Integer; safecall;
    function Get(idx: Integer): IRobotCodeCmbFactor; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotCodeCmbComponentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {90DF0B34-37CD-11D4-B819-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbComponentDisp = dispinterface
    ['{90DF0B34-37CD-11D4-B819-0050DA76755E}']
    property Count: Integer readonly dispid 1610743808;
    function Get(idx: Integer): IRobotCodeCmbFactor; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotCodeCmbFactor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {90DF0B32-37CD-11D4-B819-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbFactor = interface(IDispatch)
    ['{90DF0B32-37CD-11D4-B819-0050DA76755E}']
    function Get_CaseNumber: Integer; safecall;
    function Get_Factor: Double; safecall;
    property CaseNumber: Integer read Get_CaseNumber;
    property Factor: Double read Get_Factor;
  end;

// *********************************************************************//
// DispIntf:  IRobotCodeCmbFactorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {90DF0B32-37CD-11D4-B819-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbFactorDisp = dispinterface
    ['{90DF0B32-37CD-11D4-B819-0050DA76755E}']
    property CaseNumber: Integer readonly dispid 1610743808;
    property Factor: Double readonly dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotCodeCombination
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F7217B4-2743-11D4-B808-0050DA76755E}
// *********************************************************************//
  IRobotCodeCombination = interface(IRobotCase)
    ['{0F7217B4-2743-11D4-B808-0050DA76755E}']
    function Get_UniqueId: Integer; safecall;
    function Get_CombinationType: IRobotCombinationType; safecall;
    procedure Set_CombinationType(ret: IRobotCombinationType); safecall;
    function Get_Flag: IRobotCodeCmbFlag; safecall;
    function Get_Components: IRobotCodeCmbComponentMngr; safecall;
    function FindByFlag(cmb_flag: IRobotCodeCmbFlag): Integer; safecall;
    function Get_UserId: Integer; safecall;
    procedure Set_UserId(ret: Integer); safecall;
    property UniqueId: Integer read Get_UniqueId;
    property CombinationType: IRobotCombinationType read Get_CombinationType write Set_CombinationType;
    property Flag: IRobotCodeCmbFlag read Get_Flag;
    property Components: IRobotCodeCmbComponentMngr read Get_Components;
    property UserId: Integer read Get_UserId write Set_UserId;
  end;

// *********************************************************************//
// DispIntf:  IRobotCodeCombinationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F7217B4-2743-11D4-B808-0050DA76755E}
// *********************************************************************//
  IRobotCodeCombinationDisp = dispinterface
    ['{0F7217B4-2743-11D4-B808-0050DA76755E}']
    property UniqueId: Integer readonly dispid 1610809344;
    property CombinationType: IRobotCombinationType dispid 1610809345;
    property Flag: IRobotCodeCmbFlag readonly dispid 1610809347;
    property Components: IRobotCodeCmbComponentMngr readonly dispid 1610809348;
    function FindByFlag(cmb_flag: IRobotCodeCmbFlag): Integer; dispid 1610809349;
    property UserId: Integer dispid 1610809350;
    property Number: Integer dispid 1610743808;
    property type_: IRobotCaseType readonly dispid 1610743810;
    property Name: WideString dispid 1610743811;
    property Nature: IRobotCaseNature dispid 1610743813;
    property AnalizeType: IRobotCaseAnalizeType dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotDataObject
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B9E29FE0-AB0D-11D2-9845-0080C86BE4DF}
// *********************************************************************//
  IRobotDataObject = interface(IDispatch)
    ['{B9E29FE0-AB0D-11D2-9845-0080C86BE4DF}']
    function Get_Number: Integer; safecall;
    procedure SetLabel(lab_type: IRobotLabelType; const lab_name: WideString); safecall;
    function HasLabel(lab_type: IRobotLabelType): Integer; safecall;
    procedure RemoveLabel(lab_type: IRobotLabelType); safecall;
    function GetLabelName(lab_type: IRobotLabelType): WideString; safecall;
    function GetLabel(lab_type: IRobotLabelType): IRobotLabel; safecall;
    function GetLabels: IRobotCollection; safecall;
    property Number: Integer read Get_Number;
  end;

// *********************************************************************//
// DispIntf:  IRobotDataObjectDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B9E29FE0-AB0D-11D2-9845-0080C86BE4DF}
// *********************************************************************//
  IRobotDataObjectDisp = dispinterface
    ['{B9E29FE0-AB0D-11D2-9845-0080C86BE4DF}']
    property Number: Integer readonly dispid 1610743808;
    procedure SetLabel(lab_type: IRobotLabelType; const lab_name: WideString); dispid 1610743809;
    function HasLabel(lab_type: IRobotLabelType): Integer; dispid 1610743810;
    procedure RemoveLabel(lab_type: IRobotLabelType); dispid 1610743811;
    function GetLabelName(lab_type: IRobotLabelType): WideString; dispid 1610743812;
    function GetLabel(lab_type: IRobotLabelType): IRobotLabel; dispid 1610743813;
    function GetLabels: IRobotCollection; dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BC4268D0-B46D-11D2-984A-0080C86BE4DF}
// *********************************************************************//
  IRobotNode = interface(IRobotDataObject)
    ['{BC4268D0-B46D-11D2-984A-0080C86BE4DF}']
    procedure GhostMethod_IRobotNode_0_1; safecall;
    procedure GhostMethod_IRobotNode_4_2; safecall;
    procedure GhostMethod_IRobotNode_8_3; safecall;
    procedure GhostMethod_IRobotNode_12_4; safecall;
    procedure GhostMethod_IRobotNode_16_5; safecall;
    procedure GhostMethod_IRobotNode_20_6; safecall;
    procedure GhostMethod_IRobotNode_24_7; safecall;
    procedure GhostMethod_IRobotNode_28_8; safecall;
    procedure GhostMethod_IRobotNode_32_9; safecall;
    procedure GhostMethod_IRobotNode_36_10; safecall;
    procedure GhostMethod_IRobotNode_40_11; safecall;
    procedure GhostMethod_IRobotNode_44_12; safecall;
    procedure GhostMethod_IRobotNode_48_13; safecall;
    procedure GhostMethod_IRobotNode_52_14; safecall;
    function Get_X: Double; safecall;
    procedure Set_X(__MIDL__IRobotNode0000: Double); safecall;
    function Get_Y: Double; safecall;
    procedure Set_Y(__MIDL__IRobotNode0002: Double); safecall;
    function Get_Z: Double; safecall;
    procedure Set_Z(__MIDL__IRobotNode0004: Double); safecall;
    function Get_UniqueId: Integer; safecall;
    function Get_HasEmitter: WordBool; safecall;
    procedure SetEmitter(const emit: IRobotEmitter); safecall;
    function GetEmitter: IRobotEmitter; safecall;
    procedure RemoveEmitter; safecall;
    function Get_UserId: Integer; safecall;
    procedure Set_UserId(ret: Integer); safecall;
    function Get_IsCalc: WordBool; safecall;
    function Get_HasCalcSupport: WordBool; safecall;
    function GetCalcSupport: IRobotNodeSupportData; safecall;
    property X: Double read Get_X write Set_X;
    property Y: Double read Get_Y write Set_Y;
    property Z: Double read Get_Z write Set_Z;
    property UniqueId: Integer read Get_UniqueId;
    property HasEmitter: WordBool read Get_HasEmitter;
    property UserId: Integer read Get_UserId write Set_UserId;
    property IsCalc: WordBool read Get_IsCalc;
    property HasCalcSupport: WordBool read Get_HasCalcSupport;
  end;

// *********************************************************************//
// DispIntf:  IRobotNodeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BC4268D0-B46D-11D2-984A-0080C86BE4DF}
// *********************************************************************//
  IRobotNodeDisp = dispinterface
    ['{BC4268D0-B46D-11D2-984A-0080C86BE4DF}']
    procedure GhostMethod_IRobotNode_0_1; dispid 1610678272;
    procedure GhostMethod_IRobotNode_4_2; dispid 1610678273;
    procedure GhostMethod_IRobotNode_8_3; dispid 1610678274;
    procedure GhostMethod_IRobotNode_12_4; dispid 1610678275;
    procedure GhostMethod_IRobotNode_16_5; dispid 1610678276;
    procedure GhostMethod_IRobotNode_20_6; dispid 1610678277;
    procedure GhostMethod_IRobotNode_24_7; dispid 1610678278;
    procedure GhostMethod_IRobotNode_28_8; dispid 1610678279;
    procedure GhostMethod_IRobotNode_32_9; dispid 1610678280;
    procedure GhostMethod_IRobotNode_36_10; dispid 1610678281;
    procedure GhostMethod_IRobotNode_40_11; dispid 1610678282;
    procedure GhostMethod_IRobotNode_44_12; dispid 1610678283;
    procedure GhostMethod_IRobotNode_48_13; dispid 1610678284;
    procedure GhostMethod_IRobotNode_52_14; dispid 1610678285;
    property X: Double dispid 1610809344;
    property Y: Double dispid 1610809346;
    property Z: Double dispid 1610809348;
    property UniqueId: Integer readonly dispid 1610809350;
    property HasEmitter: WordBool readonly dispid 1610809351;
    procedure SetEmitter(const emit: IRobotEmitter); dispid 1610809352;
    function GetEmitter: IRobotEmitter; dispid 1610809353;
    procedure RemoveEmitter; dispid 1610809354;
    property UserId: Integer dispid 1610809355;
    property IsCalc: WordBool readonly dispid 1610809357;
    property HasCalcSupport: WordBool readonly dispid 1610809358;
    function GetCalcSupport: IRobotNodeSupportData; dispid 1610809359;
    property Number: Integer readonly dispid 1610743808;
    procedure SetLabel(lab_type: IRobotLabelType; const lab_name: WideString); dispid 1610743809;
    function HasLabel(lab_type: IRobotLabelType): Integer; dispid 1610743810;
    procedure RemoveLabel(lab_type: IRobotLabelType); dispid 1610743811;
    function GetLabelName(lab_type: IRobotLabelType): WideString; dispid 1610743812;
    function GetLabel(lab_type: IRobotLabelType): IRobotLabel; dispid 1610743813;
    function GetLabels: IRobotCollection; dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotEmitter
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F06BD3F2-4CD7-11D4-B835-0050DA76755E}
// *********************************************************************//
  IRobotEmitter = interface(IDispatch)
    ['{F06BD3F2-4CD7-11D4-B835-0050DA76755E}']
    function Get_VariableMeshDensityIncrement: WordBool; safecall;
    procedure Set_VariableMeshDensityIncrement(ret: WordBool); safecall;
    function Get_H0: Double; safecall;
    procedure Set_H0(ret: Double); safecall;
    function Get_R1: Double; safecall;
    procedure Set_R1(ret: Double); safecall;
    function Get_R2: Double; safecall;
    procedure Set_R2(ret: Double); safecall;
    function Get_EstimatedElemNumber: Integer; safecall;
    property VariableMeshDensityIncrement: WordBool read Get_VariableMeshDensityIncrement write Set_VariableMeshDensityIncrement;
    property H0: Double read Get_H0 write Set_H0;
    property R1: Double read Get_R1 write Set_R1;
    property R2: Double read Get_R2 write Set_R2;
    property EstimatedElemNumber: Integer read Get_EstimatedElemNumber;
  end;

// *********************************************************************//
// DispIntf:  IRobotEmitterDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F06BD3F2-4CD7-11D4-B835-0050DA76755E}
// *********************************************************************//
  IRobotEmitterDisp = dispinterface
    ['{F06BD3F2-4CD7-11D4-B835-0050DA76755E}']
    property VariableMeshDensityIncrement: WordBool dispid 1610743808;
    property H0: Double dispid 1610743810;
    property R1: Double dispid 1610743812;
    property R2: Double dispid 1610743814;
    property EstimatedElemNumber: Integer readonly dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRobotNodeSupportData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B4598F11-C5BE-11D2-9860-0080C86BE4DF}
// *********************************************************************//
  IRobotNodeSupportData = interface(IDispatch)
    ['{B4598F11-C5BE-11D2-9860-0080C86BE4DF}']
    function Get_UX: Integer; safecall;
    procedure Set_UX(ret: Integer); safecall;
    function Get_UY: Integer; safecall;
    procedure Set_UY(ret: Integer); safecall;
    function Get_UZ: Integer; safecall;
    procedure Set_UZ(ret: Integer); safecall;
    function Get_RX: Integer; safecall;
    procedure Set_RX(ret: Integer); safecall;
    function Get_RY: Integer; safecall;
    procedure Set_RY(ret: Integer); safecall;
    function Get_RZ: Integer; safecall;
    procedure Set_RZ(ret: Integer); safecall;
    function Get_KX: Double; safecall;
    procedure Set_KX(ret: Double); safecall;
    function Get_KY: Double; safecall;
    procedure Set_KY(ret: Double); safecall;
    function Get_KZ: Double; safecall;
    procedure Set_KZ(ret: Double); safecall;
    function Get_HX: Double; safecall;
    procedure Set_HX(ret: Double); safecall;
    function Get_HY: Double; safecall;
    procedure Set_HY(ret: Double); safecall;
    function Get_HZ: Double; safecall;
    procedure Set_HZ(ret: Double); safecall;
    function Get_Alpha: Double; safecall;
    procedure Set_Alpha(ret: Double); safecall;
    function Get_Beta: Double; safecall;
    procedure Set_Beta(ret: Double); safecall;
    function Get_Gamma: Double; safecall;
    procedure Set_Gamma(ret: Double); safecall;
    function Get_AX: Double; safecall;
    procedure Set_AX(ret: Double); safecall;
    function Get_AY: Double; safecall;
    procedure Set_AY(ret: Double); safecall;
    function Get_AZ: Double; safecall;
    procedure Set_AZ(ret: Double); safecall;
    function Get_BX: Double; safecall;
    procedure Set_BX(ret: Double); safecall;
    function Get_BY: Double; safecall;
    procedure Set_BY(ret: Double); safecall;
    function Get_BZ: Double; safecall;
    procedure Set_BZ(ret: Double); safecall;
    function Get_GlobalCoordSystem: WordBool; safecall;
    procedure Set_GlobalCoordSystem(ret: WordBool); safecall;
    function Get_ElasticLinear: WordBool; safecall;
    procedure Set_ElasticLinear(ret: WordBool); safecall;
    function Get_ElasticSurface: WordBool; safecall;
    procedure Set_ElasticSurface(ret: WordBool); safecall;
    function IsFixed(_direction: IRobotNodeSupportFixingDirection): Integer; safecall;
    procedure SetFixed(_direction: IRobotNodeSupportFixingDirection; fixed: Integer); safecall;
    function GetOneDir(_direction: IRobotNodeSupportFixingDirection): IRobotNodeSupportOneDirectionFixingType; safecall;
    procedure SetOneDir(_direction: IRobotNodeSupportFixingDirection; 
                        how_blocked: IRobotNodeSupportOneDirectionFixingType); safecall;
    procedure SetAdvanced(_type: IRobotAdvancedSupportType; _b: Double; _h: Double); safecall;
    function GetAdvanced(out _b: Double; out _h: Double): IRobotAdvancedSupportType; safecall;
    function Get_NonlinearModel: IRobotNonlinearLinkMngr; safecall;
    function Get_Advanced: IRobotAdvancedSupportData; safecall;
    property UX: Integer read Get_UX write Set_UX;
    property UY: Integer read Get_UY write Set_UY;
    property UZ: Integer read Get_UZ write Set_UZ;
    property RX: Integer read Get_RX write Set_RX;
    property RY: Integer read Get_RY write Set_RY;
    property RZ: Integer read Get_RZ write Set_RZ;
    property KX: Double read Get_KX write Set_KX;
    property KY: Double read Get_KY write Set_KY;
    property KZ: Double read Get_KZ write Set_KZ;
    property HX: Double read Get_HX write Set_HX;
    property HY: Double read Get_HY write Set_HY;
    property HZ: Double read Get_HZ write Set_HZ;
    property Alpha: Double read Get_Alpha write Set_Alpha;
    property Beta: Double read Get_Beta write Set_Beta;
    property Gamma: Double read Get_Gamma write Set_Gamma;
    property AX: Double read Get_AX write Set_AX;
    property AY: Double read Get_AY write Set_AY;
    property AZ: Double read Get_AZ write Set_AZ;
    property BX: Double read Get_BX write Set_BX;
    property BY: Double read Get_BY write Set_BY;
    property BZ: Double read Get_BZ write Set_BZ;
    property GlobalCoordSystem: WordBool read Get_GlobalCoordSystem write Set_GlobalCoordSystem;
    property ElasticLinear: WordBool read Get_ElasticLinear write Set_ElasticLinear;
    property ElasticSurface: WordBool read Get_ElasticSurface write Set_ElasticSurface;
    property NonlinearModel: IRobotNonlinearLinkMngr read Get_NonlinearModel;
    property Advanced: IRobotAdvancedSupportData read Get_Advanced;
  end;

// *********************************************************************//
// DispIntf:  IRobotNodeSupportDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B4598F11-C5BE-11D2-9860-0080C86BE4DF}
// *********************************************************************//
  IRobotNodeSupportDataDisp = dispinterface
    ['{B4598F11-C5BE-11D2-9860-0080C86BE4DF}']
    property UX: Integer dispid 1610743808;
    property UY: Integer dispid 1610743810;
    property UZ: Integer dispid 1610743812;
    property RX: Integer dispid 1610743814;
    property RY: Integer dispid 1610743816;
    property RZ: Integer dispid 1610743818;
    property KX: Double dispid 1610743820;
    property KY: Double dispid 1610743822;
    property KZ: Double dispid 1610743824;
    property HX: Double dispid 1610743826;
    property HY: Double dispid 1610743828;
    property HZ: Double dispid 1610743830;
    property Alpha: Double dispid 1610743832;
    property Beta: Double dispid 1610743834;
    property Gamma: Double dispid 1610743836;
    property AX: Double dispid 1610743838;
    property AY: Double dispid 1610743840;
    property AZ: Double dispid 1610743842;
    property BX: Double dispid 1610743844;
    property BY: Double dispid 1610743846;
    property BZ: Double dispid 1610743848;
    property GlobalCoordSystem: WordBool dispid 1610743850;
    property ElasticLinear: WordBool dispid 1610743852;
    property ElasticSurface: WordBool dispid 1610743854;
    function IsFixed(_direction: IRobotNodeSupportFixingDirection): Integer; dispid 1610743856;
    procedure SetFixed(_direction: IRobotNodeSupportFixingDirection; fixed: Integer); dispid 1610743857;
    function GetOneDir(_direction: IRobotNodeSupportFixingDirection): IRobotNodeSupportOneDirectionFixingType; dispid 1610743858;
    procedure SetOneDir(_direction: IRobotNodeSupportFixingDirection; 
                        how_blocked: IRobotNodeSupportOneDirectionFixingType); dispid 1610743859;
    procedure SetAdvanced(_type: IRobotAdvancedSupportType; _b: Double; _h: Double); dispid 1610743860;
    function GetAdvanced(out _b: Double; out _h: Double): IRobotAdvancedSupportType; dispid 1610743861;
    property NonlinearModel: IRobotNonlinearLinkMngr readonly dispid 1610743862;
    property Advanced: IRobotAdvancedSupportData readonly dispid 1610743863;
  end;

// *********************************************************************//
// Interface: IRobotNonlinearLinkMngr
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {29C5F20E-0828-44BB-B457-67F395CC152E}
// *********************************************************************//
  IRobotNonlinearLinkMngr = interface(IDispatch)
    ['{29C5F20E-0828-44BB-B457-67F395CC152E}']
    procedure Set_(_direction: IRobotDegreeOfFreedom; const _model_name: WideString); safecall;
    function Get(_direction: IRobotDegreeOfFreedom): WideString; safecall;
    function IsDefined(_direction: IRobotDegreeOfFreedom): WordBool; safecall;
    procedure Delete(_direction: IRobotDegreeOfFreedom); safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotNonlinearLinkMngrDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {29C5F20E-0828-44BB-B457-67F395CC152E}
// *********************************************************************//
  IRobotNonlinearLinkMngrDisp = dispinterface
    ['{29C5F20E-0828-44BB-B457-67F395CC152E}']
    procedure Set_(_direction: IRobotDegreeOfFreedom; const _model_name: WideString); dispid 1610743808;
    function Get(_direction: IRobotDegreeOfFreedom): WideString; dispid 1610743809;
    function IsDefined(_direction: IRobotDegreeOfFreedom): WordBool; dispid 1610743810;
    procedure Delete(_direction: IRobotDegreeOfFreedom); dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotAdvancedSupportData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE2E4938-C0F4-47C7-BB8F-BAC0DBE72B72}
// *********************************************************************//
  IRobotAdvancedSupportData = interface(IDispatch)
    ['{EE2E4938-C0F4-47C7-BB8F-BAC0DBE72B72}']
    function Get_type_: IRobotAdvancedSupportType; safecall;
    procedure Set_type_(ret: IRobotAdvancedSupportType); safecall;
    function Get_B: Double; safecall;
    procedure Set_B(ret: Double); safecall;
    function Get_H: Double; safecall;
    procedure Set_H(ret: Double); safecall;
    function Get_D: Double; safecall;
    procedure Set_D(ret: Double); safecall;
    function Get_IsEquivalentElasticity: WordBool; safecall;
    procedure Set_IsEquivalentElasticity(ret: WordBool); safecall;
    function Get_EquivalentElasticity: IRobotSupportEquivalentElasticity; safecall;
    property type_: IRobotAdvancedSupportType read Get_type_ write Set_type_;
    property B: Double read Get_B write Set_B;
    property H: Double read Get_H write Set_H;
    property D: Double read Get_D write Set_D;
    property IsEquivalentElasticity: WordBool read Get_IsEquivalentElasticity write Set_IsEquivalentElasticity;
    property EquivalentElasticity: IRobotSupportEquivalentElasticity read Get_EquivalentElasticity;
  end;

// *********************************************************************//
// DispIntf:  IRobotAdvancedSupportDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE2E4938-C0F4-47C7-BB8F-BAC0DBE72B72}
// *********************************************************************//
  IRobotAdvancedSupportDataDisp = dispinterface
    ['{EE2E4938-C0F4-47C7-BB8F-BAC0DBE72B72}']
    property type_: IRobotAdvancedSupportType dispid 1610743808;
    property B: Double dispid 1610743810;
    property H: Double dispid 1610743812;
    property D: Double dispid 1610743814;
    property IsEquivalentElasticity: WordBool dispid 1610743816;
    property EquivalentElasticity: IRobotSupportEquivalentElasticity readonly dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRobotSupportEquivalentElasticity
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2ECFF111-C772-4CC1-8A78-5CC0247BDFEC}
// *********************************************************************//
  IRobotSupportEquivalentElasticity = interface(IDispatch)
    ['{2ECFF111-C772-4CC1-8A78-5CC0247BDFEC}']
    function Get_type_: IRobotSupportEquivalentElasticityType; safecall;
    function Get_E: Double; safecall;
    procedure Set_E(ret: Double); safecall;
    function Get_PoissonRatio: Double; safecall;
    procedure Set_PoissonRatio(ret: Double); safecall;
    procedure SetMaterial(const _material_name: WideString); safecall;
    property type_: IRobotSupportEquivalentElasticityType read Get_type_;
    property E: Double read Get_E write Set_E;
    property PoissonRatio: Double read Get_PoissonRatio write Set_PoissonRatio;
  end;

// *********************************************************************//
// DispIntf:  IRobotSupportEquivalentElasticityDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2ECFF111-C772-4CC1-8A78-5CC0247BDFEC}
// *********************************************************************//
  IRobotSupportEquivalentElasticityDisp = dispinterface
    ['{2ECFF111-C772-4CC1-8A78-5CC0247BDFEC}']
    property type_: IRobotSupportEquivalentElasticityType readonly dispid 1610743808;
    property E: Double dispid 1610743809;
    property PoissonRatio: Double dispid 1610743811;
    procedure SetMaterial(const _material_name: WideString); dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotDataObjectServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B9E29FE2-AB0D-11D2-9845-0080C86BE4DF}
// *********************************************************************//
  IRobotDataObjectServer = interface(IDispatch)
    ['{B9E29FE2-AB0D-11D2-9845-0080C86BE4DF}']
    function Exist(obj_num: Integer): Integer; safecall;
    function Get(obj_num: Integer): IRobotDataObject; safecall;
    function GetMany(const obj_sel: IRobotSelection): IRobotCollection; safecall;
    function GetAll: IRobotCollection; safecall;
    procedure Delete(obj_num: Integer); safecall;
    procedure DeleteMany(const obj_sel: IRobotSelection); safecall;
    procedure SetLabel(const obj_sel: IRobotSelection; lab_type: IRobotLabelType; 
                       const lab_name: WideString); safecall;
    procedure RemoveLabel(const obj_sel: IRobotSelection; lab_type: IRobotLabelType); safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotDataObjectServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B9E29FE2-AB0D-11D2-9845-0080C86BE4DF}
// *********************************************************************//
  IRobotDataObjectServerDisp = dispinterface
    ['{B9E29FE2-AB0D-11D2-9845-0080C86BE4DF}']
    function Exist(obj_num: Integer): Integer; dispid 1610743808;
    function Get(obj_num: Integer): IRobotDataObject; dispid 1610743809;
    function GetMany(const obj_sel: IRobotSelection): IRobotCollection; dispid 1610743810;
    function GetAll: IRobotCollection; dispid 1610743811;
    procedure Delete(obj_num: Integer); dispid 1610743812;
    procedure DeleteMany(const obj_sel: IRobotSelection); dispid 1610743813;
    procedure SetLabel(const obj_sel: IRobotSelection; lab_type: IRobotLabelType; 
                       const lab_name: WideString); dispid 1610743814;
    procedure RemoveLabel(const obj_sel: IRobotSelection; lab_type: IRobotLabelType); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotNodeServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BC4268D1-B46D-11D2-984A-0080C86BE4DF}
// *********************************************************************//
  IRobotNodeServer = interface(IRobotDataObjectServer)
    ['{BC4268D1-B46D-11D2-984A-0080C86BE4DF}']
    procedure GhostMethod_IRobotNodeServer_0_1; safecall;
    procedure GhostMethod_IRobotNodeServer_4_2; safecall;
    procedure GhostMethod_IRobotNodeServer_8_3; safecall;
    procedure GhostMethod_IRobotNodeServer_12_4; safecall;
    procedure GhostMethod_IRobotNodeServer_16_5; safecall;
    procedure GhostMethod_IRobotNodeServer_20_6; safecall;
    procedure GhostMethod_IRobotNodeServer_24_7; safecall;
    procedure GhostMethod_IRobotNodeServer_28_8; safecall;
    procedure GhostMethod_IRobotNodeServer_32_9; safecall;
    procedure GhostMethod_IRobotNodeServer_36_10; safecall;
    procedure GhostMethod_IRobotNodeServer_40_11; safecall;
    procedure GhostMethod_IRobotNodeServer_44_12; safecall;
    procedure GhostMethod_IRobotNodeServer_48_13; safecall;
    procedure GhostMethod_IRobotNodeServer_52_14; safecall;
    procedure GhostMethod_IRobotNodeServer_56_15; safecall;
    procedure Create(num: Integer; _x: Double; _y: Double; _z: Double); safecall;
    function Get_FreeNumber: Integer; safecall;
    function FindWithId(unique_id: Integer): Integer; safecall;
    procedure SetEmitter(const node_sel: IRobotSelection; const emit: IRobotEmitter); safecall;
    procedure RemoveEmitter(const node_sel: IRobotSelection); safecall;
    function Get_RigidLinks: IRobotNodeRigidLinkServer; safecall;
    function Get_CompatibleNodes: IRobotNodeCompatibilityServer; safecall;
    function IsCalc(_node_num: Integer): WordBool; safecall;
    function GetUserNodes: IRobotCollection; safecall;
    function GetCalcNodes: IRobotCollection; safecall;
    function Get_NonlinearLinks: IRobotNonlinearLinkServer; safecall;
    function GetConnectedBars(const _node_sel: WideString): IRobotNumbersArray; safecall;
    function HasCalcSupport(_node_number: Integer): WordBool; safecall;
    function GetCalcSupport(_node_number: Integer): IRobotNodeSupportData; safecall;
    function GetUniqueId(_node_num: Integer): Integer; safecall;
    property FreeNumber: Integer read Get_FreeNumber;
    property RigidLinks: IRobotNodeRigidLinkServer read Get_RigidLinks;
    property CompatibleNodes: IRobotNodeCompatibilityServer read Get_CompatibleNodes;
    property NonlinearLinks: IRobotNonlinearLinkServer read Get_NonlinearLinks;
  end;

// *********************************************************************//
// DispIntf:  IRobotNodeServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BC4268D1-B46D-11D2-984A-0080C86BE4DF}
// *********************************************************************//
  IRobotNodeServerDisp = dispinterface
    ['{BC4268D1-B46D-11D2-984A-0080C86BE4DF}']
    procedure GhostMethod_IRobotNodeServer_0_1; dispid 1610678272;
    procedure GhostMethod_IRobotNodeServer_4_2; dispid 1610678273;
    procedure GhostMethod_IRobotNodeServer_8_3; dispid 1610678274;
    procedure GhostMethod_IRobotNodeServer_12_4; dispid 1610678275;
    procedure GhostMethod_IRobotNodeServer_16_5; dispid 1610678276;
    procedure GhostMethod_IRobotNodeServer_20_6; dispid 1610678277;
    procedure GhostMethod_IRobotNodeServer_24_7; dispid 1610678278;
    procedure GhostMethod_IRobotNodeServer_28_8; dispid 1610678279;
    procedure GhostMethod_IRobotNodeServer_32_9; dispid 1610678280;
    procedure GhostMethod_IRobotNodeServer_36_10; dispid 1610678281;
    procedure GhostMethod_IRobotNodeServer_40_11; dispid 1610678282;
    procedure GhostMethod_IRobotNodeServer_44_12; dispid 1610678283;
    procedure GhostMethod_IRobotNodeServer_48_13; dispid 1610678284;
    procedure GhostMethod_IRobotNodeServer_52_14; dispid 1610678285;
    procedure GhostMethod_IRobotNodeServer_56_15; dispid 1610678286;
    procedure Create(num: Integer; _x: Double; _y: Double; _z: Double); dispid 1610809344;
    property FreeNumber: Integer readonly dispid 1610809345;
    function FindWithId(unique_id: Integer): Integer; dispid 1610809346;
    procedure SetEmitter(const node_sel: IRobotSelection; const emit: IRobotEmitter); dispid 1610809347;
    procedure RemoveEmitter(const node_sel: IRobotSelection); dispid 1610809348;
    property RigidLinks: IRobotNodeRigidLinkServer readonly dispid 1610809349;
    property CompatibleNodes: IRobotNodeCompatibilityServer readonly dispid 1610809350;
    function IsCalc(_node_num: Integer): WordBool; dispid 1610809351;
    function GetUserNodes: IRobotCollection; dispid 1610809352;
    function GetCalcNodes: IRobotCollection; dispid 1610809353;
    property NonlinearLinks: IRobotNonlinearLinkServer readonly dispid 1610809354;
    function GetConnectedBars(const _node_sel: WideString): IRobotNumbersArray; dispid 1610809355;
    function HasCalcSupport(_node_number: Integer): WordBool; dispid 1610809356;
    function GetCalcSupport(_node_number: Integer): IRobotNodeSupportData; dispid 1610809357;
    function GetUniqueId(_node_num: Integer): Integer; dispid 1610809358;
    function Exist(obj_num: Integer): Integer; dispid 1610743808;
    function Get(obj_num: Integer): IRobotDataObject; dispid 1610743809;
    function GetMany(const obj_sel: IRobotSelection): IRobotCollection; dispid 1610743810;
    function GetAll: IRobotCollection; dispid 1610743811;
    procedure Delete(obj_num: Integer); dispid 1610743812;
    procedure DeleteMany(const obj_sel: IRobotSelection); dispid 1610743813;
    procedure SetLabel(const obj_sel: IRobotSelection; lab_type: IRobotLabelType; 
                       const lab_name: WideString); dispid 1610743814;
    procedure RemoveLabel(const obj_sel: IRobotSelection; lab_type: IRobotLabelType); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotNodeRigidLinkServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C0EB8034-BAD3-11D4-B884-0050DA76755E}
// *********************************************************************//
  IRobotNodeRigidLinkServer = interface(IDispatch)
    ['{C0EB8034-BAD3-11D4-B884-0050DA76755E}']
    function Get_Count: Integer; safecall;
    function Set_(_master: Integer; const _slaves: WideString; const _label_name: WideString): WordBool; safecall;
    procedure RemoveSlave(_slave: Integer); safecall;
    function FindMaster(_master: Integer): Integer; safecall;
    function Get(_def_idx: Integer): IRobotNodeRigidLinkDef; safecall;
    procedure Remove(_def_idx: Integer); safecall;
    function GetLabel(_def_idx: Integer): IRobotLabel; safecall;
    function FindSlave(_slave_node: Integer): Integer; safecall;
    function Find(_node_num: Integer): Integer; safecall;
    function FindLabel(const _label_name: WideString; _start_def_idx: Integer): Integer; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotNodeRigidLinkServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C0EB8034-BAD3-11D4-B884-0050DA76755E}
// *********************************************************************//
  IRobotNodeRigidLinkServerDisp = dispinterface
    ['{C0EB8034-BAD3-11D4-B884-0050DA76755E}']
    property Count: Integer readonly dispid 1610743808;
    function Set_(_master: Integer; const _slaves: WideString; const _label_name: WideString): WordBool; dispid 1610743809;
    procedure RemoveSlave(_slave: Integer); dispid 1610743810;
    function FindMaster(_master: Integer): Integer; dispid 1610743811;
    function Get(_def_idx: Integer): IRobotNodeRigidLinkDef; dispid 1610743812;
    procedure Remove(_def_idx: Integer); dispid 1610743813;
    function GetLabel(_def_idx: Integer): IRobotLabel; dispid 1610743814;
    function FindSlave(_slave_node: Integer): Integer; dispid 1610743815;
    function Find(_node_num: Integer): Integer; dispid 1610743816;
    function FindLabel(const _label_name: WideString; _start_def_idx: Integer): Integer; dispid 1610743817;
  end;

// *********************************************************************//
// Interface: IRobotNodeRigidLinkDef
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C0EB8032-BAD3-11D4-B884-0050DA76755E}
// *********************************************************************//
  IRobotNodeRigidLinkDef = interface(IDispatch)
    ['{C0EB8032-BAD3-11D4-B884-0050DA76755E}']
    function Get_Master: Integer; safecall;
    procedure Set_Master(ret: Integer); safecall;
    function Get_Slaves: WideString; safecall;
    procedure Set_Slaves(const ret: WideString); safecall;
    function Get_LabelName: WideString; safecall;
    procedure Set_LabelName(const ret: WideString); safecall;
    property Master: Integer read Get_Master write Set_Master;
    property Slaves: WideString read Get_Slaves write Set_Slaves;
    property LabelName: WideString read Get_LabelName write Set_LabelName;
  end;

// *********************************************************************//
// DispIntf:  IRobotNodeRigidLinkDefDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C0EB8032-BAD3-11D4-B884-0050DA76755E}
// *********************************************************************//
  IRobotNodeRigidLinkDefDisp = dispinterface
    ['{C0EB8032-BAD3-11D4-B884-0050DA76755E}']
    property Master: Integer dispid 1610743808;
    property Slaves: WideString dispid 1610743810;
    property LabelName: WideString dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotNodeCompatibilityServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {07E84B04-C6AA-11D4-B890-0050DA76755E}
// *********************************************************************//
  IRobotNodeCompatibilityServer = interface(IDispatch)
    ['{07E84B04-C6AA-11D4-B890-0050DA76755E}']
    function Get_Count: Integer; safecall;
    function FindMain(_main_node: Integer; _start_def_idx: Integer): Integer; safecall;
    function Set_(_node: Integer; const _bar_list: WideString; const _label_name: WideString): WordBool; safecall;
    function Get(_def_idx: Integer): IRobotNodeCompatibilityDef; safecall;
    procedure Remove(_def_idx: Integer); safecall;
    function GetLabel(_def_idx: Integer): IRobotLabel; safecall;
    function FindCompatible(_compatible_node: Integer): Integer; safecall;
    function Find(_node: Integer; _start_def_idx: Integer): Integer; safecall;
    function FindLabel(const _label_name: WideString; _start_def_idx: Integer): Integer; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotNodeCompatibilityServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {07E84B04-C6AA-11D4-B890-0050DA76755E}
// *********************************************************************//
  IRobotNodeCompatibilityServerDisp = dispinterface
    ['{07E84B04-C6AA-11D4-B890-0050DA76755E}']
    property Count: Integer readonly dispid 1610743808;
    function FindMain(_main_node: Integer; _start_def_idx: Integer): Integer; dispid 1610743809;
    function Set_(_node: Integer; const _bar_list: WideString; const _label_name: WideString): WordBool; dispid 1610743810;
    function Get(_def_idx: Integer): IRobotNodeCompatibilityDef; dispid 1610743811;
    procedure Remove(_def_idx: Integer); dispid 1610743812;
    function GetLabel(_def_idx: Integer): IRobotLabel; dispid 1610743813;
    function FindCompatible(_compatible_node: Integer): Integer; dispid 1610743814;
    function Find(_node: Integer; _start_def_idx: Integer): Integer; dispid 1610743815;
    function FindLabel(const _label_name: WideString; _start_def_idx: Integer): Integer; dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRobotNodeCompatibilityDef
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {07E84B02-C6AA-11D4-B890-0050DA76755E}
// *********************************************************************//
  IRobotNodeCompatibilityDef = interface(IDispatch)
    ['{07E84B02-C6AA-11D4-B890-0050DA76755E}']
    function Get_Main: Integer; safecall;
    procedure Set_Main(ret: Integer); safecall;
    function Get_Compatible: Integer; safecall;
    procedure Set_Compatible(ret: Integer); safecall;
    function Get_LabelName: WideString; safecall;
    procedure Set_LabelName(const ret: WideString); safecall;
    function Get_Bars: WideString; safecall;
    procedure Set_Bars(const ret: WideString); safecall;
    property Main: Integer read Get_Main write Set_Main;
    property Compatible: Integer read Get_Compatible write Set_Compatible;
    property LabelName: WideString read Get_LabelName write Set_LabelName;
    property Bars: WideString read Get_Bars write Set_Bars;
  end;

// *********************************************************************//
// DispIntf:  IRobotNodeCompatibilityDefDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {07E84B02-C6AA-11D4-B890-0050DA76755E}
// *********************************************************************//
  IRobotNodeCompatibilityDefDisp = dispinterface
    ['{07E84B02-C6AA-11D4-B890-0050DA76755E}']
    property Main: Integer dispid 1610743808;
    property Compatible: Integer dispid 1610743810;
    property LabelName: WideString dispid 1610743812;
    property Bars: WideString dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotNonlinearLinkServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {73F13E38-49A3-473D-94F4-ADA69BA9F1D0}
// *********************************************************************//
  IRobotNonlinearLinkServer = interface(IDispatch)
    ['{73F13E38-49A3-473D-94F4-ADA69BA9F1D0}']
    function Get_Count: Integer; safecall;
    function Get(_idx: Integer): IRobotNonlinearLink; safecall;
    function Create(const _name: WideString): IRobotNonlinearLink; safecall;
    function Find(const _name: WideString): Integer; safecall;
    procedure Remove(_idx: Integer); safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotNonlinearLinkServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {73F13E38-49A3-473D-94F4-ADA69BA9F1D0}
// *********************************************************************//
  IRobotNonlinearLinkServerDisp = dispinterface
    ['{73F13E38-49A3-473D-94F4-ADA69BA9F1D0}']
    property Count: Integer readonly dispid 1610743808;
    function Get(_idx: Integer): IRobotNonlinearLink; dispid 1610743809;
    function Create(const _name: WideString): IRobotNonlinearLink; dispid 1610743810;
    function Find(const _name: WideString): Integer; dispid 1610743811;
    procedure Remove(_idx: Integer); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotNonlinearLink
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {42891CCF-96BB-45DA-869E-75D2DD427D28}
// *********************************************************************//
  IRobotNonlinearLink = interface(IDispatch)
    ['{42891CCF-96BB-45DA-869E-75D2DD427D28}']
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_ModelType: IRobotNonlinearLinkModelType; safecall;
    procedure Set_ModelType(ret: IRobotNonlinearLinkModelType); safecall;
    function GetParams(_axis_type: IRobotNonlinearLinkSemiAxisType): IRobotNonlinearLinkParams; safecall;
    procedure SetParams(const _params: IRobotNonlinearLinkParams; 
                        _axis_type: IRobotNonlinearLinkSemiAxisType); safecall;
    function Get_Symetry: WordBool; safecall;
    procedure SetCurveType(_curve_type: IRobotNonlinearLinkCurveType; 
                           _axis_type: IRobotNonlinearLinkSemiAxisType); safecall;
    function GetCurveType(_axis_type: IRobotNonlinearLinkSemiAxisType): IRobotNonlinearLinkCurveType; safecall;
    property Name: WideString read Get_Name write Set_Name;
    property ModelType: IRobotNonlinearLinkModelType read Get_ModelType write Set_ModelType;
    property Symetry: WordBool read Get_Symetry;
  end;

// *********************************************************************//
// DispIntf:  IRobotNonlinearLinkDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {42891CCF-96BB-45DA-869E-75D2DD427D28}
// *********************************************************************//
  IRobotNonlinearLinkDisp = dispinterface
    ['{42891CCF-96BB-45DA-869E-75D2DD427D28}']
    property Name: WideString dispid 1610743808;
    property ModelType: IRobotNonlinearLinkModelType dispid 1610743810;
    function GetParams(_axis_type: IRobotNonlinearLinkSemiAxisType): IRobotNonlinearLinkParams; dispid 1610743812;
    procedure SetParams(const _params: IRobotNonlinearLinkParams; 
                        _axis_type: IRobotNonlinearLinkSemiAxisType); dispid 1610743813;
    property Symetry: WordBool readonly dispid 1610743814;
    procedure SetCurveType(_curve_type: IRobotNonlinearLinkCurveType; 
                           _axis_type: IRobotNonlinearLinkSemiAxisType); dispid 1610743815;
    function GetCurveType(_axis_type: IRobotNonlinearLinkSemiAxisType): IRobotNonlinearLinkCurveType; dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRobotNonlinearLinkParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B93C00C6-02C9-4955-A872-9F7E95328541}
// *********************************************************************//
  IRobotNonlinearLinkParams = interface(IDispatch)
    ['{B93C00C6-02C9-4955-A872-9F7E95328541}']
    function Get_CurveType: IRobotNonlinearLinkCurveType; safecall;
    property CurveType: IRobotNonlinearLinkCurveType read Get_CurveType;
  end;

// *********************************************************************//
// DispIntf:  IRobotNonlinearLinkParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B93C00C6-02C9-4955-A872-9F7E95328541}
// *********************************************************************//
  IRobotNonlinearLinkParamsDisp = dispinterface
    ['{B93C00C6-02C9-4955-A872-9F7E95328541}']
    property CurveType: IRobotNonlinearLinkCurveType readonly dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRobotBarEnd
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8EE4B3A0-C5B7-11D3-B7B7-0050DA76755E}
// *********************************************************************//
  IRobotBarEnd = interface(IDispatch)
    ['{8EE4B3A0-C5B7-11D3-B7B7-0050DA76755E}']
    function Get_Node: Integer; safecall;
    procedure Set_Node(ret: Integer); safecall;
    procedure SetLabel(lab_type: IRobotLabelType; const lab_name: WideString); safecall;
    function HasLabel(lab_type: IRobotLabelType): Integer; safecall;
    function GetLabel(lab_type: IRobotLabelType): IRobotLabel; safecall;
    procedure RemoveLabel(lab_type: IRobotLabelType); safecall;
    function GetLabelName(lab_type: IRobotLabelType): WideString; safecall;
    function GetLabels: IRobotCollection; safecall;
    function GetOffsetValue: IRobotBarEndOffsetData; safecall;
    property Node: Integer read Get_Node write Set_Node;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarEndDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8EE4B3A0-C5B7-11D3-B7B7-0050DA76755E}
// *********************************************************************//
  IRobotBarEndDisp = dispinterface
    ['{8EE4B3A0-C5B7-11D3-B7B7-0050DA76755E}']
    property Node: Integer dispid 1610743808;
    procedure SetLabel(lab_type: IRobotLabelType; const lab_name: WideString); dispid 1610743810;
    function HasLabel(lab_type: IRobotLabelType): Integer; dispid 1610743811;
    function GetLabel(lab_type: IRobotLabelType): IRobotLabel; dispid 1610743812;
    procedure RemoveLabel(lab_type: IRobotLabelType); dispid 1610743813;
    function GetLabelName(lab_type: IRobotLabelType): WideString; dispid 1610743814;
    function GetLabels: IRobotCollection; dispid 1610743815;
    function GetOffsetValue: IRobotBarEndOffsetData; dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRobotBarEndOffsetData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {704C42A3-C5D2-11D3-B7B7-0050DA76755E}
// *********************************************************************//
  IRobotBarEndOffsetData = interface(IDispatch)
    ['{704C42A3-C5D2-11D3-B7B7-0050DA76755E}']
    function Get_UX: Double; safecall;
    procedure Set_UX(ret: Double); safecall;
    function Get_UY: Double; safecall;
    procedure Set_UY(ret: Double); safecall;
    function Get_UZ: Double; safecall;
    procedure Set_UZ(ret: Double); safecall;
    function Get_MemberLength: IRobotBarOffsetMemberLength; safecall;
    procedure Set_MemberLength(ret: IRobotBarOffsetMemberLength); safecall;
    property UX: Double read Get_UX write Set_UX;
    property UY: Double read Get_UY write Set_UY;
    property UZ: Double read Get_UZ write Set_UZ;
    property MemberLength: IRobotBarOffsetMemberLength read Get_MemberLength write Set_MemberLength;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarEndOffsetDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {704C42A3-C5D2-11D3-B7B7-0050DA76755E}
// *********************************************************************//
  IRobotBarEndOffsetDataDisp = dispinterface
    ['{704C42A3-C5D2-11D3-B7B7-0050DA76755E}']
    property UX: Double dispid 1610743808;
    property UY: Double dispid 1610743810;
    property UZ: Double dispid 1610743812;
    property MemberLength: IRobotBarOffsetMemberLength dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotBar
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97185C20-BC4A-11D2-9854-0080C86BE4DF}
// *********************************************************************//
  IRobotBar = interface(IRobotDataObject)
    ['{97185C20-BC4A-11D2-9854-0080C86BE4DF}']
    function Get_StartNode: Integer; safecall;
    procedure Set_StartNode(ret: Integer); safecall;
    function Get_EndNode: Integer; safecall;
    procedure Set_EndNode(ret: Integer); safecall;
    function Get_Gamma: Double; safecall;
    procedure Set_Gamma(ret: Double); safecall;
    function Get_Start: IRobotBarEnd; safecall;
    function Get_End_: IRobotBarEnd; safecall;
    function Get_UniqueId: Integer; safecall;
    function Get_TensionCompression: IRobotBarTensionCompression; safecall;
    procedure Set_TensionCompression(ret: IRobotBarTensionCompression); safecall;
    function Get_ShearForces: WordBool; safecall;
    procedure Set_ShearForces(ret: WordBool); safecall;
    function Get_Length: Double; safecall;
    function Get_ReversedSection: WordBool; safecall;
    procedure Set_ReversedSection(ret: WordBool); safecall;
    procedure SetSection(const _section_name: WideString; _reverse: WordBool); safecall;
    function Get_UserId: Integer; safecall;
    procedure Set_UserId(ret: Integer); safecall;
    function Get_TrussBar: WordBool; safecall;
    procedure Set_TrussBar(ret: WordBool); safecall;
    function Get_Elements: IRobotCollection; safecall;
    function Get_IsSuperBar: WordBool; safecall;
    function GetSimpleBars: IRobotSelection; safecall;
    function Get_ReversedOffset: WordBool; safecall;
    procedure Set_ReversedOffset(ret: WordBool); safecall;
    procedure SetOffset(const _offset_name: WideString; _reverse: WordBool); safecall;
    procedure ChangeOrientation; safecall;
    procedure SetOrientation(_dir: IRobotGeoCoordinateAxisSense); safecall;
    function Get_InactiveBar: WordBool; safecall;
    procedure Set_InactiveBar(ret: WordBool); safecall;
    procedure GetLocalMtx(out _m00: Double; out _m01: Double; out _m02: Double; out _m10: Double; 
                          out _m11: Double; out _m12: Double; out _m20: Double; out _m21: Double; 
                          out _m22: Double); safecall;
    function CalcGamma(_local_Z_x: Double; _local_Z_y: Double; _local_Z_z: Double): Double; safecall;
    function Get_Name: WideString; safecall;
    function Get_NameTemplate: WideString; safecall;
    procedure Set_NameTemplate(const ret: WideString); safecall;
    procedure GetElemsData(const _ret_data: IRobotBarElementDataSet); safecall;
    function Get_StructuralType: IRobotObjectStructuralType; safecall;
    procedure Set_StructuralType(ret: IRobotObjectStructuralType); safecall;
    function Get_ReversedRelease: WordBool; safecall;
    procedure Set_ReversedRelease(ret: WordBool); safecall;
    function Get_AnalyzeTTMethod: WordBool; safecall;
    procedure Set_AnalyzeTTMethod(ret: WordBool); safecall;
    procedure GetLCS(const _x: IRobotGeoPoint3D; const _y: IRobotGeoPoint3D; 
                     const _z: IRobotGeoPoint3D); safecall;
    property StartNode: Integer read Get_StartNode write Set_StartNode;
    property EndNode: Integer read Get_EndNode write Set_EndNode;
    property Gamma: Double read Get_Gamma write Set_Gamma;
    property Start: IRobotBarEnd read Get_Start;
    property End_: IRobotBarEnd read Get_End_;
    property UniqueId: Integer read Get_UniqueId;
    property TensionCompression: IRobotBarTensionCompression read Get_TensionCompression write Set_TensionCompression;
    property ShearForces: WordBool read Get_ShearForces write Set_ShearForces;
    property Length: Double read Get_Length;
    property ReversedSection: WordBool read Get_ReversedSection write Set_ReversedSection;
    property UserId: Integer read Get_UserId write Set_UserId;
    property TrussBar: WordBool read Get_TrussBar write Set_TrussBar;
    property Elements: IRobotCollection read Get_Elements;
    property IsSuperBar: WordBool read Get_IsSuperBar;
    property ReversedOffset: WordBool read Get_ReversedOffset write Set_ReversedOffset;
    property InactiveBar: WordBool read Get_InactiveBar write Set_InactiveBar;
    property Name: WideString read Get_Name;
    property NameTemplate: WideString read Get_NameTemplate write Set_NameTemplate;
    property StructuralType: IRobotObjectStructuralType read Get_StructuralType write Set_StructuralType;
    property ReversedRelease: WordBool read Get_ReversedRelease write Set_ReversedRelease;
    property AnalyzeTTMethod: WordBool read Get_AnalyzeTTMethod write Set_AnalyzeTTMethod;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97185C20-BC4A-11D2-9854-0080C86BE4DF}
// *********************************************************************//
  IRobotBarDisp = dispinterface
    ['{97185C20-BC4A-11D2-9854-0080C86BE4DF}']
    property StartNode: Integer dispid 1610809344;
    property EndNode: Integer dispid 1610809346;
    property Gamma: Double dispid 1610809348;
    property Start: IRobotBarEnd readonly dispid 1610809350;
    property End_: IRobotBarEnd readonly dispid 1610809351;
    property UniqueId: Integer readonly dispid 1610809352;
    property TensionCompression: IRobotBarTensionCompression dispid 1610809353;
    property ShearForces: WordBool dispid 1610809355;
    property Length: Double readonly dispid 1610809357;
    property ReversedSection: WordBool dispid 1610809358;
    procedure SetSection(const _section_name: WideString; _reverse: WordBool); dispid 1610809360;
    property UserId: Integer dispid 1610809361;
    property TrussBar: WordBool dispid 1610809363;
    property Elements: IRobotCollection readonly dispid 1610809365;
    property IsSuperBar: WordBool readonly dispid 1610809366;
    function GetSimpleBars: IRobotSelection; dispid 1610809367;
    property ReversedOffset: WordBool dispid 1610809368;
    procedure SetOffset(const _offset_name: WideString; _reverse: WordBool); dispid 1610809370;
    procedure ChangeOrientation; dispid 1610809371;
    procedure SetOrientation(_dir: IRobotGeoCoordinateAxisSense); dispid 1610809372;
    property InactiveBar: WordBool dispid 1610809373;
    procedure GetLocalMtx(out _m00: Double; out _m01: Double; out _m02: Double; out _m10: Double; 
                          out _m11: Double; out _m12: Double; out _m20: Double; out _m21: Double; 
                          out _m22: Double); dispid 1610809375;
    function CalcGamma(_local_Z_x: Double; _local_Z_y: Double; _local_Z_z: Double): Double; dispid 1610809376;
    property Name: WideString readonly dispid 1610809377;
    property NameTemplate: WideString dispid 1610809378;
    procedure GetElemsData(const _ret_data: IRobotBarElementDataSet); dispid 1610809380;
    property StructuralType: IRobotObjectStructuralType dispid 1610809381;
    property ReversedRelease: WordBool dispid 1610809383;
    property AnalyzeTTMethod: WordBool dispid 1610809385;
    procedure GetLCS(const _x: IRobotGeoPoint3D; const _y: IRobotGeoPoint3D; 
                     const _z: IRobotGeoPoint3D); dispid 1610809387;
    property Number: Integer readonly dispid 1610743808;
    procedure SetLabel(lab_type: IRobotLabelType; const lab_name: WideString); dispid 1610743809;
    function HasLabel(lab_type: IRobotLabelType): Integer; dispid 1610743810;
    procedure RemoveLabel(lab_type: IRobotLabelType); dispid 1610743811;
    function GetLabelName(lab_type: IRobotLabelType): WideString; dispid 1610743812;
    function GetLabel(lab_type: IRobotLabelType): IRobotLabel; dispid 1610743813;
    function GetLabels: IRobotCollection; dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotBarElementDataSet
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F9E584FD-457C-4A66-9B13-231A32E58F9F}
// *********************************************************************//
  IRobotBarElementDataSet = interface(IDispatch)
    ['{F9E584FD-457C-4A66-9B13-231A32E58F9F}']
    function Get_ElemCount: Integer; safecall;
    function GetElem(_elem_idx: Integer; const _ret_data: IRobotBarElementData): Integer; safecall;
    function Get_BarCount: Integer; safecall;
    function GetBarNumber(_bar_idx: Integer): Integer; safecall;
    function GetElemCountForBar(_bar_idx: Integer): Integer; safecall;
    function GetElemForBar(_bar_idx: Integer; _elem_idx: Integer; 
                           const _ret_data: IRobotBarElementData): Integer; safecall;
    property ElemCount: Integer read Get_ElemCount;
    property BarCount: Integer read Get_BarCount;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarElementDataSetDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F9E584FD-457C-4A66-9B13-231A32E58F9F}
// *********************************************************************//
  IRobotBarElementDataSetDisp = dispinterface
    ['{F9E584FD-457C-4A66-9B13-231A32E58F9F}']
    property ElemCount: Integer readonly dispid 1610743808;
    function GetElem(_elem_idx: Integer; const _ret_data: IRobotBarElementData): Integer; dispid 1610743809;
    property BarCount: Integer readonly dispid 1610743810;
    function GetBarNumber(_bar_idx: Integer): Integer; dispid 1610743811;
    function GetElemCountForBar(_bar_idx: Integer): Integer; dispid 1610743812;
    function GetElemForBar(_bar_idx: Integer; _elem_idx: Integer; 
                           const _ret_data: IRobotBarElementData): Integer; dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotBarElementData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E9F00C52-CF2D-4CD1-AA39-0A1C2FF22A6F}
// *********************************************************************//
  IRobotBarElementData = interface(IDispatch)
    ['{E9F00C52-CF2D-4CD1-AA39-0A1C2FF22A6F}']
    function Get_Number: Integer; safecall;
    function GetStartNode(out _x: Double; out _y: Double; out _z: Double): Integer; safecall;
    function GetEndNode(out _x: Double; out _y: Double; out _z: Double): Integer; safecall;
    function Get_Bar: Integer; safecall;
    property Number: Integer read Get_Number;
    property Bar: Integer read Get_Bar;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarElementDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E9F00C52-CF2D-4CD1-AA39-0A1C2FF22A6F}
// *********************************************************************//
  IRobotBarElementDataDisp = dispinterface
    ['{E9F00C52-CF2D-4CD1-AA39-0A1C2FF22A6F}']
    property Number: Integer readonly dispid 1610743808;
    function GetStartNode(out _x: Double; out _y: Double; out _z: Double): Integer; dispid 1610743809;
    function GetEndNode(out _x: Double; out _y: Double; out _z: Double): Integer; dispid 1610743810;
    property Bar: Integer readonly dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotBarServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97185C21-BC4A-11D2-9854-0080C86BE4DF}
// *********************************************************************//
  IRobotBarServer = interface(IRobotDataObjectServer)
    ['{97185C21-BC4A-11D2-9854-0080C86BE4DF}']
    procedure Create(num: Integer; start_node: Integer; end_node: Integer); safecall;
    function Get_FreeNumber: Integer; safecall;
    function FindWithId(unique_id: Integer): Integer; safecall;
    procedure SetTensionCompression(const _bar_sel: IRobotSelection; 
                                    _tc: IRobotBarTensionCompression); safecall;
    procedure SetShearForces(const _bar_sel: IRobotSelection; _set: WordBool); safecall;
    procedure CreateSuperBar(_number: Integer; const _simple_bars: WideString); safecall;
    function Get_NonlinearHingeModels: IRobotNonlinearHingeModelServer; safecall;
    function Get_NonlinearHinges: IRobotNonlinearHingeServer; safecall;
    procedure Update; safecall;
    procedure ChangeOrientation(const _bars: WideString); safecall;
    procedure SetOrientation(const _bars: WideString; _dir: IRobotGeoCoordinateAxisSense); safecall;
    function IsInactive(_bar_num: Integer): WordBool; safecall;
    procedure SetInactive(const _bars: WideString; _inactive: WordBool); safecall;
    procedure GetLocalMtx(_bar_num: Integer; out _m00: Double; out _m01: Double; out _m02: Double; 
                          out _m10: Double; out _m11: Double; out _m12: Double; out _m20: Double; 
                          out _m21: Double; out _m22: Double); safecall;
    function CalcGamma(_bar_num: Integer; _local_Z_x: Double; _local_Z_y: Double; _local_Z_z: Double): Double; safecall;
    procedure SetTrussBar(const _bars: WideString; _truss_bar: WordBool); safecall;
    function IsTrussBar(_bar_num: Integer): WordBool; safecall;
    function GetName(_bar_num: Integer): WideString; safecall;
    function GetNameTemplate(_bar_num: Integer): WideString; safecall;
    procedure SetNameTemplate(_bar_num: Integer; const _name_tmpl: WideString); safecall;
    function GetUniqueId(_bar_num: Integer): Integer; safecall;
    procedure GetElemsData(const _bar_sel_txt: WideString; const _ret_data: IRobotBarElementDataSet); safecall;
    function GetStructuralType(_bar: Integer): IRobotObjectStructuralType; safecall;
    procedure SetStructuralType(const _bar_sel: WideString; _str_type: IRobotObjectStructuralType); safecall;
    procedure SetAnalyzeTTMethod(const _bars: WideString; _analyze: WordBool); safecall;
    function GetAnalyzeTTMethodEnabled: IRobotSelection; safecall;
    procedure GetLCS(_bar_num: Integer; const _x: IRobotGeoPoint3D; const _y: IRobotGeoPoint3D; 
                     const _z: IRobotGeoPoint3D); safecall;
    procedure BeginMultiOperation; safecall;
    procedure EndMultiOperation; safecall;
    procedure SetLabelExt(const _bars: IRobotSelection; _lab_type: IRobotLabelType; 
                          const _lab_name: WideString; _ext_param: Integer); safecall;
    property FreeNumber: Integer read Get_FreeNumber;
    property NonlinearHingeModels: IRobotNonlinearHingeModelServer read Get_NonlinearHingeModels;
    property NonlinearHinges: IRobotNonlinearHingeServer read Get_NonlinearHinges;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97185C21-BC4A-11D2-9854-0080C86BE4DF}
// *********************************************************************//
  IRobotBarServerDisp = dispinterface
    ['{97185C21-BC4A-11D2-9854-0080C86BE4DF}']
    procedure Create(num: Integer; start_node: Integer; end_node: Integer); dispid 1610809344;
    property FreeNumber: Integer readonly dispid 1610809345;
    function FindWithId(unique_id: Integer): Integer; dispid 1610809346;
    procedure SetTensionCompression(const _bar_sel: IRobotSelection; 
                                    _tc: IRobotBarTensionCompression); dispid 1610809347;
    procedure SetShearForces(const _bar_sel: IRobotSelection; _set: WordBool); dispid 1610809348;
    procedure CreateSuperBar(_number: Integer; const _simple_bars: WideString); dispid 1610809349;
    property NonlinearHingeModels: IRobotNonlinearHingeModelServer readonly dispid 1610809350;
    property NonlinearHinges: IRobotNonlinearHingeServer readonly dispid 1610809351;
    procedure Update; dispid 1610809352;
    procedure ChangeOrientation(const _bars: WideString); dispid 1610809353;
    procedure SetOrientation(const _bars: WideString; _dir: IRobotGeoCoordinateAxisSense); dispid 1610809354;
    function IsInactive(_bar_num: Integer): WordBool; dispid 1610809355;
    procedure SetInactive(const _bars: WideString; _inactive: WordBool); dispid 1610809356;
    procedure GetLocalMtx(_bar_num: Integer; out _m00: Double; out _m01: Double; out _m02: Double; 
                          out _m10: Double; out _m11: Double; out _m12: Double; out _m20: Double; 
                          out _m21: Double; out _m22: Double); dispid 1610809357;
    function CalcGamma(_bar_num: Integer; _local_Z_x: Double; _local_Z_y: Double; _local_Z_z: Double): Double; dispid 1610809358;
    procedure SetTrussBar(const _bars: WideString; _truss_bar: WordBool); dispid 1610809359;
    function IsTrussBar(_bar_num: Integer): WordBool; dispid 1610809360;
    function GetName(_bar_num: Integer): WideString; dispid 1610809361;
    function GetNameTemplate(_bar_num: Integer): WideString; dispid 1610809362;
    procedure SetNameTemplate(_bar_num: Integer; const _name_tmpl: WideString); dispid 1610809363;
    function GetUniqueId(_bar_num: Integer): Integer; dispid 1610809364;
    procedure GetElemsData(const _bar_sel_txt: WideString; const _ret_data: IRobotBarElementDataSet); dispid 1610809365;
    function GetStructuralType(_bar: Integer): IRobotObjectStructuralType; dispid 1610809366;
    procedure SetStructuralType(const _bar_sel: WideString; _str_type: IRobotObjectStructuralType); dispid 1610809367;
    procedure SetAnalyzeTTMethod(const _bars: WideString; _analyze: WordBool); dispid 1610809368;
    function GetAnalyzeTTMethodEnabled: IRobotSelection; dispid 1610809369;
    procedure GetLCS(_bar_num: Integer; const _x: IRobotGeoPoint3D; const _y: IRobotGeoPoint3D; 
                     const _z: IRobotGeoPoint3D); dispid 1610809370;
    procedure BeginMultiOperation; dispid 1610809371;
    procedure EndMultiOperation; dispid 1610809372;
    procedure SetLabelExt(const _bars: IRobotSelection; _lab_type: IRobotLabelType; 
                          const _lab_name: WideString; _ext_param: Integer); dispid 1610809373;
    function Exist(obj_num: Integer): Integer; dispid 1610743808;
    function Get(obj_num: Integer): IRobotDataObject; dispid 1610743809;
    function GetMany(const obj_sel: IRobotSelection): IRobotCollection; dispid 1610743810;
    function GetAll: IRobotCollection; dispid 1610743811;
    procedure Delete(obj_num: Integer); dispid 1610743812;
    procedure DeleteMany(const obj_sel: IRobotSelection); dispid 1610743813;
    procedure SetLabel(const obj_sel: IRobotSelection; lab_type: IRobotLabelType; 
                       const lab_name: WideString); dispid 1610743814;
    procedure RemoveLabel(const obj_sel: IRobotSelection; lab_type: IRobotLabelType); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotNonlinearHingeModelServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4C655156-5510-4638-8704-57E365FF9B8B}
// *********************************************************************//
  IRobotNonlinearHingeModelServer = interface(IDispatch)
    ['{4C655156-5510-4638-8704-57E365FF9B8B}']
    function Get_Count: Integer; safecall;
    function Get(_idx: Integer): IRobotNonlinearHingeModel; safecall;
    function Create(const _name: WideString): IRobotNonlinearHingeModel; safecall;
    function Find(const _name: WideString): Integer; safecall;
    procedure Delete(_idx: Integer); safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotNonlinearHingeModelServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4C655156-5510-4638-8704-57E365FF9B8B}
// *********************************************************************//
  IRobotNonlinearHingeModelServerDisp = dispinterface
    ['{4C655156-5510-4638-8704-57E365FF9B8B}']
    property Count: Integer readonly dispid 1610743808;
    function Get(_idx: Integer): IRobotNonlinearHingeModel; dispid 1610743809;
    function Create(const _name: WideString): IRobotNonlinearHingeModel; dispid 1610743810;
    function Find(const _name: WideString): Integer; dispid 1610743811;
    procedure Delete(_idx: Integer); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotNonlinearHingeModel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {03D77B95-D30B-478B-8534-2A60CF4D5292}
// *********************************************************************//
  IRobotNonlinearHingeModel = interface(IDispatch)
    ['{03D77B95-D30B-478B-8534-2A60CF4D5292}']
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_ModelType: IRobotNonlinearHingeModelType; safecall;
    procedure Set_ModelType(ret: IRobotNonlinearHingeModelType); safecall;
    function Get_Symetry: WordBool; safecall;
    function Get_LimitCoordX: WordBool; safecall;
    procedure Set_LimitCoordX(ret: WordBool); safecall;
    function Get_LimitCoordY: WordBool; safecall;
    procedure Set_LimitCoordY(ret: WordBool); safecall;
    function Get_LimitCoordXValue: Double; safecall;
    procedure Set_LimitCoordXValue(ret: Double); safecall;
    function Get_LimitCoordYValue: Double; safecall;
    procedure Set_LimitCoordYValue(ret: Double); safecall;
    function Get_UnloadingMethod: IRobotNonlinearHingeModelUnloadingType; safecall;
    procedure Set_UnloadingMethod(ret: IRobotNonlinearHingeModelUnloadingType); safecall;
    function Get_MixedUnloadingValue: Double; safecall;
    procedure Set_MixedUnloadingValue(ret: Double); safecall;
    function GetPoints(_axis: IRobotNonlinearLinkSemiAxisType): IRobotNonlinearHingeModelPoints; safecall;
    procedure SetPoints(_axis: IRobotNonlinearLinkSemiAxisType; 
                        const _points: IRobotNonlinearHingeModelPoints); safecall;
    function GetAxisParams(_axis: IRobotNonlinearLinkSemiAxisType): IRobotNonlinearHingeModelAxisParams; safecall;
    procedure SetAxisParams(_axis: IRobotNonlinearLinkSemiAxisType; 
                            const _params: IRobotNonlinearHingeModelAxisParams); safecall;
    property Name: WideString read Get_Name write Set_Name;
    property ModelType: IRobotNonlinearHingeModelType read Get_ModelType write Set_ModelType;
    property Symetry: WordBool read Get_Symetry;
    property LimitCoordX: WordBool read Get_LimitCoordX write Set_LimitCoordX;
    property LimitCoordY: WordBool read Get_LimitCoordY write Set_LimitCoordY;
    property LimitCoordXValue: Double read Get_LimitCoordXValue write Set_LimitCoordXValue;
    property LimitCoordYValue: Double read Get_LimitCoordYValue write Set_LimitCoordYValue;
    property UnloadingMethod: IRobotNonlinearHingeModelUnloadingType read Get_UnloadingMethod write Set_UnloadingMethod;
    property MixedUnloadingValue: Double read Get_MixedUnloadingValue write Set_MixedUnloadingValue;
  end;

// *********************************************************************//
// DispIntf:  IRobotNonlinearHingeModelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {03D77B95-D30B-478B-8534-2A60CF4D5292}
// *********************************************************************//
  IRobotNonlinearHingeModelDisp = dispinterface
    ['{03D77B95-D30B-478B-8534-2A60CF4D5292}']
    property Name: WideString dispid 1610743808;
    property ModelType: IRobotNonlinearHingeModelType dispid 1610743810;
    property Symetry: WordBool readonly dispid 1610743812;
    property LimitCoordX: WordBool dispid 1610743813;
    property LimitCoordY: WordBool dispid 1610743815;
    property LimitCoordXValue: Double dispid 1610743817;
    property LimitCoordYValue: Double dispid 1610743819;
    property UnloadingMethod: IRobotNonlinearHingeModelUnloadingType dispid 1610743821;
    property MixedUnloadingValue: Double dispid 1610743823;
    function GetPoints(_axis: IRobotNonlinearLinkSemiAxisType): IRobotNonlinearHingeModelPoints; dispid 1610743825;
    procedure SetPoints(_axis: IRobotNonlinearLinkSemiAxisType; 
                        const _points: IRobotNonlinearHingeModelPoints); dispid 1610743826;
    function GetAxisParams(_axis: IRobotNonlinearLinkSemiAxisType): IRobotNonlinearHingeModelAxisParams; dispid 1610743827;
    procedure SetAxisParams(_axis: IRobotNonlinearLinkSemiAxisType; 
                            const _params: IRobotNonlinearHingeModelAxisParams); dispid 1610743828;
  end;

// *********************************************************************//
// Interface: IRobotNonlinearHingeModelPoints
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {59AE9E62-C5F0-4A4A-9781-F3448C954451}
// *********************************************************************//
  IRobotNonlinearHingeModelPoints = interface(IDispatch)
    ['{59AE9E62-C5F0-4A4A-9781-F3448C954451}']
    function Get_Count: Integer; safecall;
    function Get(_idx: Integer): IRobotGeoPoint2D; safecall;
    procedure Set_(_idx: Integer; const _point: IRobotGeoPoint2D); safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotNonlinearHingeModelPointsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {59AE9E62-C5F0-4A4A-9781-F3448C954451}
// *********************************************************************//
  IRobotNonlinearHingeModelPointsDisp = dispinterface
    ['{59AE9E62-C5F0-4A4A-9781-F3448C954451}']
    property Count: Integer readonly dispid 1610743808;
    function Get(_idx: Integer): IRobotGeoPoint2D; dispid 1610743809;
    procedure Set_(_idx: Integer; const _point: IRobotGeoPoint2D); dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotGeoPoint2D
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5A3594B0-B23D-11D3-9975-0080C86BE4DF}
// *********************************************************************//
  IRobotGeoPoint2D = interface(IDispatch)
    ['{5A3594B0-B23D-11D3-9975-0080C86BE4DF}']
    function Get_X: Double; safecall;
    procedure Set_X(ret: Double); safecall;
    function Get_Y: Double; safecall;
    procedure Set_Y(ret: Double); safecall;
    procedure Get(out _x: Double; out _y: Double); safecall;
    procedure Set_(_x: Double; _y: Double); safecall;
    property X: Double read Get_X write Set_X;
    property Y: Double read Get_Y write Set_Y;
  end;

// *********************************************************************//
// DispIntf:  IRobotGeoPoint2DDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5A3594B0-B23D-11D3-9975-0080C86BE4DF}
// *********************************************************************//
  IRobotGeoPoint2DDisp = dispinterface
    ['{5A3594B0-B23D-11D3-9975-0080C86BE4DF}']
    property X: Double dispid 1610743808;
    property Y: Double dispid 1610743810;
    procedure Get(out _x: Double; out _y: Double); dispid 1610743812;
    procedure Set_(_x: Double; _y: Double); dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotNonlinearHingeModelAxisParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A3DBC390-C50E-4A64-85A5-FB36EA0361A9}
// *********************************************************************//
  IRobotNonlinearHingeModelAxisParams = interface(IDispatch)
    ['{A3DBC390-C50E-4A64-85A5-FB36EA0361A9}']
    function Get_ImmediateOccupancy: Double; safecall;
    procedure Set_ImmediateOccupancy(ret: Double); safecall;
    function Get_LifeSafety: Double; safecall;
    procedure Set_LifeSafety(ret: Double); safecall;
    function Get_StructuralStability: Double; safecall;
    procedure Set_StructuralStability(ret: Double); safecall;
    property ImmediateOccupancy: Double read Get_ImmediateOccupancy write Set_ImmediateOccupancy;
    property LifeSafety: Double read Get_LifeSafety write Set_LifeSafety;
    property StructuralStability: Double read Get_StructuralStability write Set_StructuralStability;
  end;

// *********************************************************************//
// DispIntf:  IRobotNonlinearHingeModelAxisParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A3DBC390-C50E-4A64-85A5-FB36EA0361A9}
// *********************************************************************//
  IRobotNonlinearHingeModelAxisParamsDisp = dispinterface
    ['{A3DBC390-C50E-4A64-85A5-FB36EA0361A9}']
    property ImmediateOccupancy: Double dispid 1610743808;
    property LifeSafety: Double dispid 1610743810;
    property StructuralStability: Double dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotNonlinearHingeServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD581E27-BB81-445A-9D30-B8CBA41122D4}
// *********************************************************************//
  IRobotNonlinearHingeServer = interface(IDispatch)
    ['{BD581E27-BB81-445A-9D30-B8CBA41122D4}']
    function Count(_bar_number: Integer): Integer; safecall;
    function Get(_hinge_idx: Integer; _bar_number: Integer): IRobotNonlinearHingeDef; safecall;
    function Set_(_bar_number: Integer; const _label: WideString; _offset: Double; 
                  _relative: WordBool): Integer; safecall;
    procedure Remove(_hinge_idx: Integer; _bar_number: Integer); safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotNonlinearHingeServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD581E27-BB81-445A-9D30-B8CBA41122D4}
// *********************************************************************//
  IRobotNonlinearHingeServerDisp = dispinterface
    ['{BD581E27-BB81-445A-9D30-B8CBA41122D4}']
    function Count(_bar_number: Integer): Integer; dispid 1610743808;
    function Get(_hinge_idx: Integer; _bar_number: Integer): IRobotNonlinearHingeDef; dispid 1610743809;
    function Set_(_bar_number: Integer; const _label: WideString; _offset: Double; 
                  _relative: WordBool): Integer; dispid 1610743810;
    procedure Remove(_hinge_idx: Integer; _bar_number: Integer); dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotNonlinearHingeDef
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EDA15EF4-3BA0-4B51-BD5C-3AF0C649BEA7}
// *********************************************************************//
  IRobotNonlinearHingeDef = interface(IDispatch)
    ['{EDA15EF4-3BA0-4B51-BD5C-3AF0C649BEA7}']
    function Get_LabelName: WideString; safecall;
    procedure Set_LabelName(const ret: WideString); safecall;
    function Get_Offset: Integer; safecall;
    procedure Set_Offset(ret: Integer); safecall;
    function Get_Relative: WordBool; safecall;
    procedure Set_Relative(ret: WordBool); safecall;
    function Get_Bar: Integer; safecall;
    procedure Set_Bar(ret: Integer); safecall;
    property LabelName: WideString read Get_LabelName write Set_LabelName;
    property Offset: Integer read Get_Offset write Set_Offset;
    property Relative: WordBool read Get_Relative write Set_Relative;
    property Bar: Integer read Get_Bar write Set_Bar;
  end;

// *********************************************************************//
// DispIntf:  IRobotNonlinearHingeDefDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EDA15EF4-3BA0-4B51-BD5C-3AF0C649BEA7}
// *********************************************************************//
  IRobotNonlinearHingeDefDisp = dispinterface
    ['{EDA15EF4-3BA0-4B51-BD5C-3AF0C649BEA7}']
    property LabelName: WideString dispid 1610743808;
    property Offset: Integer dispid 1610743810;
    property Relative: WordBool dispid 1610743812;
    property Bar: Integer dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotBarReleaseData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BB798AC0-D611-11D2-9879-0080C86BE4DF}
// *********************************************************************//
  IRobotBarReleaseData = interface(IDispatch)
    ['{BB798AC0-D611-11D2-9879-0080C86BE4DF}']
    function Get_StartNode: IRobotBarEndReleaseData; safecall;
    procedure Set_StartNode(const ret: IRobotBarEndReleaseData); safecall;
    function Get_EndNode: IRobotBarEndReleaseData; safecall;
    procedure Set_EndNode(const ret: IRobotBarEndReleaseData); safecall;
    property StartNode: IRobotBarEndReleaseData read Get_StartNode write Set_StartNode;
    property EndNode: IRobotBarEndReleaseData read Get_EndNode write Set_EndNode;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarReleaseDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BB798AC0-D611-11D2-9879-0080C86BE4DF}
// *********************************************************************//
  IRobotBarReleaseDataDisp = dispinterface
    ['{BB798AC0-D611-11D2-9879-0080C86BE4DF}']
    property StartNode: IRobotBarEndReleaseData dispid 1610743808;
    property EndNode: IRobotBarEndReleaseData dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotBarEndReleaseData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BB798AC1-D611-11D2-9879-0080C86BE4DF}
// *********************************************************************//
  IRobotBarEndReleaseData = interface(IDispatch)
    ['{BB798AC1-D611-11D2-9879-0080C86BE4DF}']
    function Get_UX: IRobotBarEndReleaseValue; safecall;
    procedure Set_UX(ret: IRobotBarEndReleaseValue); safecall;
    function Get_UY: IRobotBarEndReleaseValue; safecall;
    procedure Set_UY(ret: IRobotBarEndReleaseValue); safecall;
    function Get_UZ: IRobotBarEndReleaseValue; safecall;
    procedure Set_UZ(ret: IRobotBarEndReleaseValue); safecall;
    function Get_RX: IRobotBarEndReleaseValue; safecall;
    procedure Set_RX(ret: IRobotBarEndReleaseValue); safecall;
    function Get_RY: IRobotBarEndReleaseValue; safecall;
    procedure Set_RY(ret: IRobotBarEndReleaseValue); safecall;
    function Get_RZ: IRobotBarEndReleaseValue; safecall;
    procedure Set_RZ(ret: IRobotBarEndReleaseValue); safecall;
    function Get_KX: Double; safecall;
    procedure Set_KX(ret: Double); safecall;
    function Get_KY: Double; safecall;
    procedure Set_KY(ret: Double); safecall;
    function Get_KZ: Double; safecall;
    procedure Set_KZ(ret: Double); safecall;
    function Get_HX: Double; safecall;
    procedure Set_HX(ret: Double); safecall;
    function Get_HY: Double; safecall;
    procedure Set_HY(ret: Double); safecall;
    function Get_HZ: Double; safecall;
    procedure Set_HZ(ret: Double); safecall;
    function Get_AX: Double; safecall;
    procedure Set_AX(ret: Double); safecall;
    function Get_AY: Double; safecall;
    procedure Set_AY(ret: Double); safecall;
    function Get_AZ: Double; safecall;
    procedure Set_AZ(ret: Double); safecall;
    function Get_BX: Double; safecall;
    procedure Set_BX(ret: Double); safecall;
    function Get_BY: Double; safecall;
    procedure Set_BY(ret: Double); safecall;
    function Get_BZ: Double; safecall;
    procedure Set_BZ(ret: Double); safecall;
    function Get_NonlinearModel: IRobotNonlinearLinkMngr; safecall;
    property UX: IRobotBarEndReleaseValue read Get_UX write Set_UX;
    property UY: IRobotBarEndReleaseValue read Get_UY write Set_UY;
    property UZ: IRobotBarEndReleaseValue read Get_UZ write Set_UZ;
    property RX: IRobotBarEndReleaseValue read Get_RX write Set_RX;
    property RY: IRobotBarEndReleaseValue read Get_RY write Set_RY;
    property RZ: IRobotBarEndReleaseValue read Get_RZ write Set_RZ;
    property KX: Double read Get_KX write Set_KX;
    property KY: Double read Get_KY write Set_KY;
    property KZ: Double read Get_KZ write Set_KZ;
    property HX: Double read Get_HX write Set_HX;
    property HY: Double read Get_HY write Set_HY;
    property HZ: Double read Get_HZ write Set_HZ;
    property AX: Double read Get_AX write Set_AX;
    property AY: Double read Get_AY write Set_AY;
    property AZ: Double read Get_AZ write Set_AZ;
    property BX: Double read Get_BX write Set_BX;
    property BY: Double read Get_BY write Set_BY;
    property BZ: Double read Get_BZ write Set_BZ;
    property NonlinearModel: IRobotNonlinearLinkMngr read Get_NonlinearModel;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarEndReleaseDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BB798AC1-D611-11D2-9879-0080C86BE4DF}
// *********************************************************************//
  IRobotBarEndReleaseDataDisp = dispinterface
    ['{BB798AC1-D611-11D2-9879-0080C86BE4DF}']
    property UX: IRobotBarEndReleaseValue dispid 1610743808;
    property UY: IRobotBarEndReleaseValue dispid 1610743810;
    property UZ: IRobotBarEndReleaseValue dispid 1610743812;
    property RX: IRobotBarEndReleaseValue dispid 1610743814;
    property RY: IRobotBarEndReleaseValue dispid 1610743816;
    property RZ: IRobotBarEndReleaseValue dispid 1610743818;
    property KX: Double dispid 1610743820;
    property KY: Double dispid 1610743822;
    property KZ: Double dispid 1610743824;
    property HX: Double dispid 1610743826;
    property HY: Double dispid 1610743828;
    property HZ: Double dispid 1610743830;
    property AX: Double dispid 1610743832;
    property AY: Double dispid 1610743834;
    property AZ: Double dispid 1610743836;
    property BX: Double dispid 1610743838;
    property BY: Double dispid 1610743840;
    property BZ: Double dispid 1610743842;
    property NonlinearModel: IRobotNonlinearLinkMngr readonly dispid 1610743844;
  end;

// *********************************************************************//
// Interface: IRobotMaterialData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5BCE6340-F7F8-11D2-98AB-0080C86BE4DF}
// *********************************************************************//
  IRobotMaterialData = interface(IDispatch)
    ['{5BCE6340-F7F8-11D2-98AB-0080C86BE4DF}']
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_Nuance: WideString; safecall;
    procedure Set_Nuance(const ret: WideString); safecall;
    function Get_type_: IRobotMaterialType; safecall;
    procedure Set_type_(ret: IRobotMaterialType); safecall;
    function Get_Steel_Thermal: Integer; safecall;
    procedure Set_Steel_Thermal(ret: Integer); safecall;
    function Get_Timber_Type: IRobotMaterialTimberType; safecall;
    procedure Set_Timber_Type(ret: IRobotMaterialTimberType); safecall;
    function Get_Default: Integer; safecall;
    procedure Set_Default(ret: Integer); safecall;
    function Get_SecondName: WideString; safecall;
    procedure Set_SecondName(const ret: WideString); safecall;
    function Get_CB71_Category: SYSINT; safecall;
    procedure Set_CB71_Category(ret: SYSINT); safecall;
    function Get_CB71_Nature: SYSINT; safecall;
    procedure Set_CB71_Nature(ret: SYSINT); safecall;
    function Get_E: Double; safecall;
    procedure Set_E(ret: Double); safecall;
    function Get_NU: Double; safecall;
    procedure Set_NU(ret: Double); safecall;
    function Get_LX: Double; safecall;
    procedure Set_LX(ret: Double); safecall;
    function Get_RO: Double; safecall;
    procedure Set_RO(ret: Double); safecall;
    function Get_RE: Double; safecall;
    procedure Set_RE(ret: Double); safecall;
    function Get_RE_AxCompr: Double; safecall;
    procedure Set_RE_AxCompr(ret: Double); safecall;
    function Get_CS: Double; safecall;
    procedure Set_CS(ret: Double); safecall;
    function Get_RT: Double; safecall;
    procedure Set_RT(ret: Double); safecall;
    function Get_E_5: Double; safecall;
    procedure Set_E_5(ret: Double); safecall;
    function Get_E_Trans: Double; safecall;
    procedure Set_E_Trans(ret: Double); safecall;
    function Get_PN_E_Trans: Double; safecall;
    procedure Set_PN_E_Trans(ret: Double); safecall;
    function Get_PN_E_Additional: Double; safecall;
    procedure Set_PN_E_Additional(ret: Double); safecall;
    function Get_RE_Bending: Double; safecall;
    procedure Set_RE_Bending(ret: Double); safecall;
    function Get_RE_AxTens: Double; safecall;
    procedure Set_RE_AxTens(ret: Double); safecall;
    function Get_RE_TrTens: Double; safecall;
    procedure Set_RE_TrTens(ret: Double); safecall;
    function Get_RE_TrCompr: Double; safecall;
    procedure Set_RE_TrCompr(ret: Double); safecall;
    function Get_RE_Shear: Double; safecall;
    procedure Set_RE_Shear(ret: Double); safecall;
    function Get_DumpCoef: Double; safecall;
    procedure Set_DumpCoef(ret: Double); safecall;
    function Get_CB71_Retreat: Double; safecall;
    procedure Set_CB71_Retreat(ret: Double); safecall;
    function Get_CB71_Humidity: Double; safecall;
    procedure Set_CB71_Humidity(ret: Double); safecall;
    function Get_EC_Deformation: Double; safecall;
    procedure Set_EC_Deformation(ret: Double); safecall;
    function Get_PN_Deformation: Double; safecall;
    procedure Set_PN_Deformation(ret: Double); safecall;
    function Get_GMean: Double; safecall;
    procedure Set_GMean(ret: Double); safecall;
    function Get_Kirchoff: Double; safecall;
    procedure Set_Kirchoff(ret: Double); safecall;
    function LoadFromDBase(const mater_name: WideString): Integer; safecall;
    procedure SaveToDBase; safecall;
    property Name: WideString read Get_Name write Set_Name;
    property Nuance: WideString read Get_Nuance write Set_Nuance;
    property type_: IRobotMaterialType read Get_type_ write Set_type_;
    property Steel_Thermal: Integer read Get_Steel_Thermal write Set_Steel_Thermal;
    property Timber_Type: IRobotMaterialTimberType read Get_Timber_Type write Set_Timber_Type;
    property Default: Integer read Get_Default write Set_Default;
    property SecondName: WideString read Get_SecondName write Set_SecondName;
    property CB71_Category: SYSINT read Get_CB71_Category write Set_CB71_Category;
    property CB71_Nature: SYSINT read Get_CB71_Nature write Set_CB71_Nature;
    property E: Double read Get_E write Set_E;
    property NU: Double read Get_NU write Set_NU;
    property LX: Double read Get_LX write Set_LX;
    property RO: Double read Get_RO write Set_RO;
    property RE: Double read Get_RE write Set_RE;
    property RE_AxCompr: Double read Get_RE_AxCompr write Set_RE_AxCompr;
    property CS: Double read Get_CS write Set_CS;
    property RT: Double read Get_RT write Set_RT;
    property E_5: Double read Get_E_5 write Set_E_5;
    property E_Trans: Double read Get_E_Trans write Set_E_Trans;
    property PN_E_Trans: Double read Get_PN_E_Trans write Set_PN_E_Trans;
    property PN_E_Additional: Double read Get_PN_E_Additional write Set_PN_E_Additional;
    property RE_Bending: Double read Get_RE_Bending write Set_RE_Bending;
    property RE_AxTens: Double read Get_RE_AxTens write Set_RE_AxTens;
    property RE_TrTens: Double read Get_RE_TrTens write Set_RE_TrTens;
    property RE_TrCompr: Double read Get_RE_TrCompr write Set_RE_TrCompr;
    property RE_Shear: Double read Get_RE_Shear write Set_RE_Shear;
    property DumpCoef: Double read Get_DumpCoef write Set_DumpCoef;
    property CB71_Retreat: Double read Get_CB71_Retreat write Set_CB71_Retreat;
    property CB71_Humidity: Double read Get_CB71_Humidity write Set_CB71_Humidity;
    property EC_Deformation: Double read Get_EC_Deformation write Set_EC_Deformation;
    property PN_Deformation: Double read Get_PN_Deformation write Set_PN_Deformation;
    property GMean: Double read Get_GMean write Set_GMean;
    property Kirchoff: Double read Get_Kirchoff write Set_Kirchoff;
  end;

// *********************************************************************//
// DispIntf:  IRobotMaterialDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5BCE6340-F7F8-11D2-98AB-0080C86BE4DF}
// *********************************************************************//
  IRobotMaterialDataDisp = dispinterface
    ['{5BCE6340-F7F8-11D2-98AB-0080C86BE4DF}']
    property Name: WideString dispid 1610743808;
    property Nuance: WideString dispid 1610743810;
    property type_: IRobotMaterialType dispid 1610743812;
    property Steel_Thermal: Integer dispid 1610743814;
    property Timber_Type: IRobotMaterialTimberType dispid 1610743816;
    property Default: Integer dispid 1610743818;
    property SecondName: WideString dispid 1610743820;
    property CB71_Category: SYSINT dispid 1610743822;
    property CB71_Nature: SYSINT dispid 1610743824;
    property E: Double dispid 1610743826;
    property NU: Double dispid 1610743828;
    property LX: Double dispid 1610743830;
    property RO: Double dispid 1610743832;
    property RE: Double dispid 1610743834;
    property RE_AxCompr: Double dispid 1610743836;
    property CS: Double dispid 1610743838;
    property RT: Double dispid 1610743840;
    property E_5: Double dispid 1610743842;
    property E_Trans: Double dispid 1610743844;
    property PN_E_Trans: Double dispid 1610743846;
    property PN_E_Additional: Double dispid 1610743848;
    property RE_Bending: Double dispid 1610743850;
    property RE_AxTens: Double dispid 1610743852;
    property RE_TrTens: Double dispid 1610743854;
    property RE_TrCompr: Double dispid 1610743856;
    property RE_Shear: Double dispid 1610743858;
    property DumpCoef: Double dispid 1610743860;
    property CB71_Retreat: Double dispid 1610743862;
    property CB71_Humidity: Double dispid 1610743864;
    property EC_Deformation: Double dispid 1610743866;
    property PN_Deformation: Double dispid 1610743868;
    property GMean: Double dispid 1610743870;
    property Kirchoff: Double dispid 1610743872;
    function LoadFromDBase(const mater_name: WideString): Integer; dispid 1610743874;
    procedure SaveToDBase; dispid 1610743875;
  end;

// *********************************************************************//
// Interface: IRobotBarSectionNonstdData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {37B08340-127C-11D3-98C6-0080C86BE4DF}
// *********************************************************************//
  IRobotBarSectionNonstdData = interface(IDispatch)
    ['{37B08340-127C-11D3-98C6-0080C86BE4DF}']
    function Get_Position: Double; safecall;
    procedure SetValue(_attribute: IRobotBarSectionNonstdDataValue; _value: Double); safecall;
    function GetValue(_attribute: IRobotBarSectionNonstdDataValue): Double; safecall;
    property Position: Double read Get_Position;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarSectionNonstdDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {37B08340-127C-11D3-98C6-0080C86BE4DF}
// *********************************************************************//
  IRobotBarSectionNonstdDataDisp = dispinterface
    ['{37B08340-127C-11D3-98C6-0080C86BE4DF}']
    property Position: Double readonly dispid 1610743808;
    procedure SetValue(_attribute: IRobotBarSectionNonstdDataValue; _value: Double); dispid 1610743809;
    function GetValue(_attribute: IRobotBarSectionNonstdDataValue): Double; dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotBarSectionData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FECA9F20-06B4-11D3-98B9-0080C86BE4DF}
// *********************************************************************//
  IRobotBarSectionData = interface(IDispatch)
    ['{FECA9F20-06B4-11D3-98B9-0080C86BE4DF}']
    function Get_type_: IRobotBarSectionType; safecall;
    procedure Set_type_(ret: IRobotBarSectionType); safecall;
    function Get_ShapeType: IRobotBarSectionShapeType; safecall;
    procedure Set_ShapeType(ret: IRobotBarSectionShapeType); safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_NonstdCount: Integer; safecall;
    function LoadFromDBase(const section_name: WideString): Integer; safecall;
    function GetValue(_attribute: IRobotBarSectionDataValue): Double; safecall;
    procedure SetValue(_attribute: IRobotBarSectionDataValue; _value: Double); safecall;
    function CreateNonstd(relative_pos: Double): IRobotBarSectionNonstdData; safecall;
    function GetNonstd(index: Integer): IRobotBarSectionNonstdData; safecall;
    function FindNonstd(relative_pos: Double): Integer; safecall;
    procedure RemoveNonstd(index: Integer); safecall;
    procedure CalcNonstdGeometry; safecall;
    function Get_IsConcrete: WordBool; safecall;
    function Get_Concrete: IRobotBarSectionConcreteData; safecall;
    function Get_MaterialName: WideString; safecall;
    procedure Set_MaterialName(const ret: WideString); safecall;
    function Get_ElasticParams: IRobotBarSectionElasticParams; safecall;
    function Get_Members: IRobotBarSectionComplexData; safecall;
    function Get_AliasCount: Integer; safecall;
    function GetAlias(_idx: Integer): WideString; safecall;
    procedure DrawSymbol(_window_handle: Integer; _left: Integer; _top: Integer; _right: Integer; 
                         _bottom: Integer); safecall;
    function LoadFromDBase2(const _section_name: WideString; const _dbase_name: WideString): WordBool; safecall;
    function GetAliasEx(_idx: Integer; out _alias_id: WideString): WideString; safecall;
    function FindAlias(const _alias_id: WideString; out _alias: WideString): WordBool; safecall;
    function Get_Special: IRobotBarSectionSpecialData; safecall;
    function Get_IsSpecial: WordBool; safecall;
    function Get_IsJoist: WordBool; safecall;
    property type_: IRobotBarSectionType read Get_type_ write Set_type_;
    property ShapeType: IRobotBarSectionShapeType read Get_ShapeType write Set_ShapeType;
    property Name: WideString read Get_Name write Set_Name;
    property NonstdCount: Integer read Get_NonstdCount;
    property IsConcrete: WordBool read Get_IsConcrete;
    property Concrete: IRobotBarSectionConcreteData read Get_Concrete;
    property MaterialName: WideString read Get_MaterialName write Set_MaterialName;
    property ElasticParams: IRobotBarSectionElasticParams read Get_ElasticParams;
    property Members: IRobotBarSectionComplexData read Get_Members;
    property AliasCount: Integer read Get_AliasCount;
    property Special: IRobotBarSectionSpecialData read Get_Special;
    property IsSpecial: WordBool read Get_IsSpecial;
    property IsJoist: WordBool read Get_IsJoist;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarSectionDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FECA9F20-06B4-11D3-98B9-0080C86BE4DF}
// *********************************************************************//
  IRobotBarSectionDataDisp = dispinterface
    ['{FECA9F20-06B4-11D3-98B9-0080C86BE4DF}']
    property type_: IRobotBarSectionType dispid 1610743808;
    property ShapeType: IRobotBarSectionShapeType dispid 1610743810;
    property Name: WideString dispid 1610743812;
    property NonstdCount: Integer readonly dispid 1610743814;
    function LoadFromDBase(const section_name: WideString): Integer; dispid 1610743815;
    function GetValue(_attribute: IRobotBarSectionDataValue): Double; dispid 1610743816;
    procedure SetValue(_attribute: IRobotBarSectionDataValue; _value: Double); dispid 1610743817;
    function CreateNonstd(relative_pos: Double): IRobotBarSectionNonstdData; dispid 1610743818;
    function GetNonstd(index: Integer): IRobotBarSectionNonstdData; dispid 1610743819;
    function FindNonstd(relative_pos: Double): Integer; dispid 1610743820;
    procedure RemoveNonstd(index: Integer); dispid 1610743821;
    procedure CalcNonstdGeometry; dispid 1610743822;
    property IsConcrete: WordBool readonly dispid 1610743823;
    property Concrete: IRobotBarSectionConcreteData readonly dispid 1610743824;
    property MaterialName: WideString dispid 1610743825;
    property ElasticParams: IRobotBarSectionElasticParams readonly dispid 1610743827;
    property Members: IRobotBarSectionComplexData readonly dispid 1610743828;
    property AliasCount: Integer readonly dispid 1610743829;
    function GetAlias(_idx: Integer): WideString; dispid 1610743830;
    procedure DrawSymbol(_window_handle: Integer; _left: Integer; _top: Integer; _right: Integer; 
                         _bottom: Integer); dispid 1610743831;
    function LoadFromDBase2(const _section_name: WideString; const _dbase_name: WideString): WordBool; dispid 1610743832;
    function GetAliasEx(_idx: Integer; out _alias_id: WideString): WideString; dispid 1610743833;
    function FindAlias(const _alias_id: WideString; out _alias: WideString): WordBool; dispid 1610743834;
    property Special: IRobotBarSectionSpecialData readonly dispid 1610743835;
    property IsSpecial: WordBool readonly dispid 1610743836;
    property IsJoist: WordBool readonly dispid 1610743837;
  end;

// *********************************************************************//
// Interface: IRobotBarSectionConcreteData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0D3F8D92-00CE-11D5-B8C3-0050DA76755E}
// *********************************************************************//
  IRobotBarSectionConcreteData = interface(IDispatch)
    ['{0D3F8D92-00CE-11D5-B8C3-0050DA76755E}']
    function Get_IsColumn: WordBool; safecall;
    function Get_IsBeam: WordBool; safecall;
    function Get_BeamCutsPosition: IRobotBarSectionConcreteCutsPosition; safecall;
    procedure Set_BeamCutsPosition(ret: IRobotBarSectionConcreteCutsPosition); safecall;
    procedure SetValue(_param: IRobotBarSectionConcreteDataValue; _val: Double); safecall;
    function GetValue(_param: IRobotBarSectionConcreteDataValue): Double; safecall;
    procedure SetTapered(_h2: Double); safecall;
    function GetTapered(out _h2: Double): WordBool; safecall;
    procedure CalcGeometry; safecall;
    procedure SetReduction(_set: WordBool; _Ix_cf: Double; _Iy_cf: Double; _Iz_cf: Double); safecall;
    function GetReduction(out _Ix_cf: Double; out _Iy_cf: Double; out _Iz_cf: Double): WordBool; safecall;
    property IsColumn: WordBool read Get_IsColumn;
    property IsBeam: WordBool read Get_IsBeam;
    property BeamCutsPosition: IRobotBarSectionConcreteCutsPosition read Get_BeamCutsPosition write Set_BeamCutsPosition;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarSectionConcreteDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0D3F8D92-00CE-11D5-B8C3-0050DA76755E}
// *********************************************************************//
  IRobotBarSectionConcreteDataDisp = dispinterface
    ['{0D3F8D92-00CE-11D5-B8C3-0050DA76755E}']
    property IsColumn: WordBool readonly dispid 1610743808;
    property IsBeam: WordBool readonly dispid 1610743809;
    property BeamCutsPosition: IRobotBarSectionConcreteCutsPosition dispid 1610743810;
    procedure SetValue(_param: IRobotBarSectionConcreteDataValue; _val: Double); dispid 1610743812;
    function GetValue(_param: IRobotBarSectionConcreteDataValue): Double; dispid 1610743813;
    procedure SetTapered(_h2: Double); dispid 1610743814;
    function GetTapered(out _h2: Double): WordBool; dispid 1610743815;
    procedure CalcGeometry; dispid 1610743816;
    procedure SetReduction(_set: WordBool; _Ix_cf: Double; _Iy_cf: Double; _Iz_cf: Double); dispid 1610743817;
    function GetReduction(out _Ix_cf: Double; out _Iy_cf: Double; out _Iz_cf: Double): WordBool; dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRobotBarSectionElasticParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E54A7D9B-C5D8-419F-B29A-CC1C194C0029}
// *********************************************************************//
  IRobotBarSectionElasticParams = interface(IDispatch)
    ['{E54A7D9B-C5D8-419F-B29A-CC1C194C0029}']
    function Get_Active: WordBool; safecall;
    procedure Set_Active(ret: WordBool); safecall;
    function Get_MaterialModel: IRobotMaterialElasticModel; safecall;
    function Get_N: Double; safecall;
    procedure Set_N(ret: Double); safecall;
    function Get_N1: Double; safecall;
    procedure Set_N1(ret: Double); safecall;
    function Get_N2: Double; safecall;
    procedure Set_N2(ret: Double); safecall;
    function Get_L1: Double; safecall;
    procedure Set_L1(ret: Double); safecall;
    function Get_L2: Double; safecall;
    procedure Set_L2(ret: Double); safecall;
    property Active: WordBool read Get_Active write Set_Active;
    property MaterialModel: IRobotMaterialElasticModel read Get_MaterialModel;
    property N: Double read Get_N write Set_N;
    property N1: Double read Get_N1 write Set_N1;
    property N2: Double read Get_N2 write Set_N2;
    property L1: Double read Get_L1 write Set_L1;
    property L2: Double read Get_L2 write Set_L2;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarSectionElasticParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E54A7D9B-C5D8-419F-B29A-CC1C194C0029}
// *********************************************************************//
  IRobotBarSectionElasticParamsDisp = dispinterface
    ['{E54A7D9B-C5D8-419F-B29A-CC1C194C0029}']
    property Active: WordBool dispid 1610743808;
    property MaterialModel: IRobotMaterialElasticModel readonly dispid 1610743810;
    property N: Double dispid 1610743811;
    property N1: Double dispid 1610743813;
    property N2: Double dispid 1610743815;
    property L1: Double dispid 1610743817;
    property L2: Double dispid 1610743819;
  end;

// *********************************************************************//
// Interface: IRobotMaterialElasticModel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C4A3E6AC-7D07-4A3D-9B74-51A86D6EF184}
// *********************************************************************//
  IRobotMaterialElasticModel = interface(IDispatch)
    ['{C4A3E6AC-7D07-4A3D-9B74-51A86D6EF184}']
    function Get_Model: IRobotMaterialElasticType; safecall;
    procedure Set_Model(ret: IRobotMaterialElasticType); safecall;
    function Get_Coeff: Double; safecall;
    procedure Set_Coeff(ret: Double); safecall;
    function Get_UnloadingMethod: IRobotMaterialElasticUnloadingMethod; safecall;
    procedure Set_UnloadingMethod(ret: IRobotMaterialElasticUnloadingMethod); safecall;
    function Get_UnloadingCoeff: Double; safecall;
    procedure Set_UnloadingCoeff(ret: Double); safecall;
    property Model: IRobotMaterialElasticType read Get_Model write Set_Model;
    property Coeff: Double read Get_Coeff write Set_Coeff;
    property UnloadingMethod: IRobotMaterialElasticUnloadingMethod read Get_UnloadingMethod write Set_UnloadingMethod;
    property UnloadingCoeff: Double read Get_UnloadingCoeff write Set_UnloadingCoeff;
  end;

// *********************************************************************//
// DispIntf:  IRobotMaterialElasticModelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C4A3E6AC-7D07-4A3D-9B74-51A86D6EF184}
// *********************************************************************//
  IRobotMaterialElasticModelDisp = dispinterface
    ['{C4A3E6AC-7D07-4A3D-9B74-51A86D6EF184}']
    property Model: IRobotMaterialElasticType dispid 1610743808;
    property Coeff: Double dispid 1610743810;
    property UnloadingMethod: IRobotMaterialElasticUnloadingMethod dispid 1610743812;
    property UnloadingCoeff: Double dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotBarSectionComplexData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {695FA1C7-DA42-4B93-829B-D84FA214173E}
// *********************************************************************//
  IRobotBarSectionComplexData = interface(IDispatch)
    ['{695FA1C7-DA42-4B93-829B-D84FA214173E}']
    function Get_Count: Integer; safecall;
    function Get_D: Double; safecall;
    procedure Set_D(ret: Double); safecall;
    function Get_B: Double; safecall;
    procedure Set_B(ret: Double); safecall;
    function GetShape(_idx: Integer): IRobotBarSectionComponentShape; safecall;
    function Get(_shape: IRobotBarSectionComponentShape; out _database_name: WideString; 
                 out _section_name: WideString): WordBool; safecall;
    function Set_(_shape: IRobotBarSectionComponentShape; const _database_name: WideString; 
                  const _section_name: WideString): WordBool; safecall;
    function GetValue(_shape: IRobotBarSectionComponentShape; _val_id: IRobotBarSectionDataValue): Double; safecall;
    property Count: Integer read Get_Count;
    property D: Double read Get_D write Set_D;
    property B: Double read Get_B write Set_B;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarSectionComplexDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {695FA1C7-DA42-4B93-829B-D84FA214173E}
// *********************************************************************//
  IRobotBarSectionComplexDataDisp = dispinterface
    ['{695FA1C7-DA42-4B93-829B-D84FA214173E}']
    property Count: Integer readonly dispid 1610743808;
    property D: Double dispid 1610743809;
    property B: Double dispid 1610743811;
    function GetShape(_idx: Integer): IRobotBarSectionComponentShape; dispid 1610743813;
    function Get(_shape: IRobotBarSectionComponentShape; out _database_name: WideString; 
                 out _section_name: WideString): WordBool; dispid 1610743814;
    function Set_(_shape: IRobotBarSectionComponentShape; const _database_name: WideString; 
                  const _section_name: WideString): WordBool; dispid 1610743815;
    function GetValue(_shape: IRobotBarSectionComponentShape; _val_id: IRobotBarSectionDataValue): Double; dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRobotBarSectionSpecialData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EAC7C11E-8F96-4603-8EF1-D43709BC42CD}
// *********************************************************************//
  IRobotBarSectionSpecialData = interface(IDispatch)
    ['{EAC7C11E-8F96-4603-8EF1-D43709BC42CD}']
    function Get_DbName: WideString; safecall;
    procedure Set_DbName(const ret: WideString); safecall;
    function Get_Section: WideString; safecall;
    procedure Set_Section(const ret: WideString); safecall;
    function Get_DbFullName: WideString; safecall;
    procedure Set_DbFullName(const ret: WideString); safecall;
    procedure SetValue(_param_id: IRobotBarSectionSpecialDataValue; _param_value: Double); safecall;
    function GetValue(_param_id: IRobotBarSectionSpecialDataValue): Double; safecall;
    property DbName: WideString read Get_DbName write Set_DbName;
    property Section: WideString read Get_Section write Set_Section;
    property DbFullName: WideString read Get_DbFullName write Set_DbFullName;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarSectionSpecialDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EAC7C11E-8F96-4603-8EF1-D43709BC42CD}
// *********************************************************************//
  IRobotBarSectionSpecialDataDisp = dispinterface
    ['{EAC7C11E-8F96-4603-8EF1-D43709BC42CD}']
    property DbName: WideString dispid 1610743808;
    property Section: WideString dispid 1610743810;
    property DbFullName: WideString dispid 1610743812;
    procedure SetValue(_param_id: IRobotBarSectionSpecialDataValue; _param_value: Double); dispid 1610743814;
    function GetValue(_param_id: IRobotBarSectionSpecialDataValue): Double; dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotBarEndBracketData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {704C42A0-C5D2-11D3-B7B7-0050DA76755E}
// *********************************************************************//
  IRobotBarEndBracketData = interface(IDispatch)
    ['{704C42A0-C5D2-11D3-B7B7-0050DA76755E}']
    function Get_type_: IRobotBarEndBracketType; safecall;
    procedure Set_type_(ret: IRobotBarEndBracketType); safecall;
    procedure SetValue(_param: IRobotBarEndBracketDataValue; _value: Double; Relative: Integer); safecall;
    function GetValue(_param: IRobotBarEndBracketDataValue): Double; safecall;
    function IsValueRelative(_param: IRobotBarEndBracketDataValue): Integer; safecall;
    property type_: IRobotBarEndBracketType read Get_type_ write Set_type_;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarEndBracketDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {704C42A0-C5D2-11D3-B7B7-0050DA76755E}
// *********************************************************************//
  IRobotBarEndBracketDataDisp = dispinterface
    ['{704C42A0-C5D2-11D3-B7B7-0050DA76755E}']
    property type_: IRobotBarEndBracketType dispid 1610743808;
    procedure SetValue(_param: IRobotBarEndBracketDataValue; _value: Double; Relative: Integer); dispid 1610743810;
    function GetValue(_param: IRobotBarEndBracketDataValue): Double; dispid 1610743811;
    function IsValueRelative(_param: IRobotBarEndBracketDataValue): Integer; dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotBarOffsetData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {704C42A5-C5D2-11D3-B7B7-0050DA76755E}
// *********************************************************************//
  IRobotBarOffsetData = interface(IDispatch)
    ['{704C42A5-C5D2-11D3-B7B7-0050DA76755E}']
    function Get_CoordinateSystem: IRobotGeoCoordinateSystem; safecall;
    procedure Set_CoordinateSystem(ret: IRobotGeoCoordinateSystem); safecall;
    function Get_Start: IRobotBarEndOffsetData; safecall;
    function Get_End_: IRobotBarEndOffsetData; safecall;
    function Get_Position: IRobotBarOffsetAutoPosition; safecall;
    procedure Set_Position(ret: IRobotBarOffsetAutoPosition); safecall;
    function Get_AxisOffset: IRobotBarOffsetAutoPosition; safecall;
    procedure Set_AxisOffset(ret: IRobotBarOffsetAutoPosition); safecall;
    function Get_ObjectNumber: Integer; safecall;
    procedure Set_ObjectNumber(ret: Integer); safecall;
    property CoordinateSystem: IRobotGeoCoordinateSystem read Get_CoordinateSystem write Set_CoordinateSystem;
    property Start: IRobotBarEndOffsetData read Get_Start;
    property End_: IRobotBarEndOffsetData read Get_End_;
    property Position: IRobotBarOffsetAutoPosition read Get_Position write Set_Position;
    property AxisOffset: IRobotBarOffsetAutoPosition read Get_AxisOffset write Set_AxisOffset;
    property ObjectNumber: Integer read Get_ObjectNumber write Set_ObjectNumber;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarOffsetDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {704C42A5-C5D2-11D3-B7B7-0050DA76755E}
// *********************************************************************//
  IRobotBarOffsetDataDisp = dispinterface
    ['{704C42A5-C5D2-11D3-B7B7-0050DA76755E}']
    property CoordinateSystem: IRobotGeoCoordinateSystem dispid 1610743808;
    property Start: IRobotBarEndOffsetData readonly dispid 1610743810;
    property End_: IRobotBarEndOffsetData readonly dispid 1610743811;
    property Position: IRobotBarOffsetAutoPosition dispid 1610743812;
    property AxisOffset: IRobotBarOffsetAutoPosition dispid 1610743814;
    property ObjectNumber: Integer dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRobotThicknessData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2502E052-2B28-11D4-B80B-0050DA76755E}
// *********************************************************************//
  IRobotThicknessData = interface(IDispatch)
    ['{2502E052-2B28-11D4-B80B-0050DA76755E}']
    function Get_ThicknessType: IRobotThicknessType; safecall;
    procedure Set_ThicknessType(ret: IRobotThicknessType); safecall;
    function Get_ElasticFoundation: Double; safecall;
    procedure Set_ElasticFoundation(ret: Double); safecall;
    function Get_Uplift: IRobotThicknessUpliftType; safecall;
    procedure Set_Uplift(ret: IRobotThicknessUpliftType); safecall;
    function Get_Data: IDispatch; safecall;
    function Get_MaterialName: WideString; safecall;
    procedure Set_MaterialName(const ret: WideString); safecall;
    property ThicknessType: IRobotThicknessType read Get_ThicknessType write Set_ThicknessType;
    property ElasticFoundation: Double read Get_ElasticFoundation write Set_ElasticFoundation;
    property Uplift: IRobotThicknessUpliftType read Get_Uplift write Set_Uplift;
    property Data: IDispatch read Get_Data;
    property MaterialName: WideString read Get_MaterialName write Set_MaterialName;
  end;

// *********************************************************************//
// DispIntf:  IRobotThicknessDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2502E052-2B28-11D4-B80B-0050DA76755E}
// *********************************************************************//
  IRobotThicknessDataDisp = dispinterface
    ['{2502E052-2B28-11D4-B80B-0050DA76755E}']
    property ThicknessType: IRobotThicknessType dispid 1610743808;
    property ElasticFoundation: Double dispid 1610743810;
    property Uplift: IRobotThicknessUpliftType dispid 1610743812;
    property Data: IDispatch readonly dispid 1610743814;
    property MaterialName: WideString dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotThicknessHomoData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {21C4B122-2B3C-11D4-B80B-0050DA76755E}
// *********************************************************************//
  IRobotThicknessHomoData = interface(IDispatch)
    ['{21C4B122-2B3C-11D4-B80B-0050DA76755E}']
    function Get_type_: IRobotThicknessHomoType; safecall;
    procedure Set_type_(ret: IRobotThicknessHomoType); safecall;
    function Get_Thick1: Double; safecall;
    procedure Set_Thick1(ret: Double); safecall;
    function Get_Thick2: Double; safecall;
    procedure Set_Thick2(ret: Double); safecall;
    function Get_Thick3: Double; safecall;
    procedure Set_Thick3(ret: Double); safecall;
    function Get_ThickConst: Double; safecall;
    procedure Set_ThickConst(ret: Double); safecall;
    procedure SetP1(_x: Double; _y: Double; _z: Double); safecall;
    procedure GetP1(out _x: Double; out _y: Double; out _z: Double); safecall;
    procedure SetP2(_x: Double; _y: Double; _z: Double); safecall;
    procedure GetP2(out _x: Double; out _y: Double; out _z: Double); safecall;
    procedure SetP3(_x: Double; _y: Double; _z: Double); safecall;
    procedure GetP3(out _x: Double; out _y: Double; out _z: Double); safecall;
    procedure SetReduction(_set: WordBool; _Ig_cf: Double); safecall;
    function GetReduction(out _Ig_cf: Double): WordBool; safecall;
    property type_: IRobotThicknessHomoType read Get_type_ write Set_type_;
    property Thick1: Double read Get_Thick1 write Set_Thick1;
    property Thick2: Double read Get_Thick2 write Set_Thick2;
    property Thick3: Double read Get_Thick3 write Set_Thick3;
    property ThickConst: Double read Get_ThickConst write Set_ThickConst;
  end;

// *********************************************************************//
// DispIntf:  IRobotThicknessHomoDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {21C4B122-2B3C-11D4-B80B-0050DA76755E}
// *********************************************************************//
  IRobotThicknessHomoDataDisp = dispinterface
    ['{21C4B122-2B3C-11D4-B80B-0050DA76755E}']
    property type_: IRobotThicknessHomoType dispid 1610743808;
    property Thick1: Double dispid 1610743810;
    property Thick2: Double dispid 1610743812;
    property Thick3: Double dispid 1610743814;
    property ThickConst: Double dispid 1610743816;
    procedure SetP1(_x: Double; _y: Double; _z: Double); dispid 1610743818;
    procedure GetP1(out _x: Double; out _y: Double; out _z: Double); dispid 1610743819;
    procedure SetP2(_x: Double; _y: Double; _z: Double); dispid 1610743820;
    procedure GetP2(out _x: Double; out _y: Double; out _z: Double); dispid 1610743821;
    procedure SetP3(_x: Double; _y: Double; _z: Double); dispid 1610743822;
    procedure GetP3(out _x: Double; out _y: Double; out _z: Double); dispid 1610743823;
    procedure SetReduction(_set: WordBool; _Ig_cf: Double); dispid 1610743824;
    function GetReduction(out _Ig_cf: Double): WordBool; dispid 1610743825;
  end;

// *********************************************************************//
// Interface: IRobotThicknessMatrix
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AD8D51E2-2CA8-11D4-B80E-0050DA76755E}
// *********************************************************************//
  IRobotThicknessMatrix = interface(IDispatch)
    ['{AD8D51E2-2CA8-11D4-B80E-0050DA76755E}']
    function GetValue(val_id: IRobotThicknessMatrixValue): Double; safecall;
    procedure SetValue(val_id: IRobotThicknessMatrixValue; val: Double); safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotThicknessMatrixDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AD8D51E2-2CA8-11D4-B80E-0050DA76755E}
// *********************************************************************//
  IRobotThicknessMatrixDisp = dispinterface
    ['{AD8D51E2-2CA8-11D4-B80E-0050DA76755E}']
    function GetValue(val_id: IRobotThicknessMatrixValue): Double; dispid 1610743808;
    procedure SetValue(val_id: IRobotThicknessMatrixValue; val: Double); dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotThicknessOrthoData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AD8D51E4-2CA8-11D4-B80E-0050DA76755E}
// *********************************************************************//
  IRobotThicknessOrthoData = interface(IDispatch)
    ['{AD8D51E4-2CA8-11D4-B80E-0050DA76755E}']
    function Get_type_: IRobotThicknessOrthoType; safecall;
    procedure Set_type_(ret: IRobotThicknessOrthoType); safecall;
    function Get_DirType: IRobotThicknessOrthoDirType; safecall;
    procedure Set_DirType(ret: IRobotThicknessOrthoDirType); safecall;
    function Get_H: Double; safecall;
    procedure Set_H(ret: Double); safecall;
    function Get_HA: Double; safecall;
    procedure Set_HA(ret: Double); safecall;
    function Get_HB: Double; safecall;
    procedure Set_HB(ret: Double); safecall;
    function Get_H1: Double; safecall;
    procedure Set_H1(ret: Double); safecall;
    function Get_H2: Double; safecall;
    procedure Set_H2(ret: Double); safecall;
    function Get_A: Double; safecall;
    procedure Set_A(ret: Double); safecall;
    function Get_A1: Double; safecall;
    procedure Set_A1(ret: Double); safecall;
    function Get_A2: Double; safecall;
    procedure Set_A2(ret: Double); safecall;
    function Get_B: Double; safecall;
    procedure Set_B(ret: Double); safecall;
    function Get_B1: Double; safecall;
    procedure Set_B1(ret: Double); safecall;
    function Get_Thick1: Double; safecall;
    procedure Set_Thick1(ret: Double); safecall;
    function Get_Thick2: Double; safecall;
    procedure Set_Thick2(ret: Double); safecall;
    function Get_Thick3: Double; safecall;
    procedure Set_Thick3(ret: Double); safecall;
    function Get_Matrix: IRobotThicknessMatrix; safecall;
    function Get_N1: Double; safecall;
    procedure Set_N1(ret: Double); safecall;
    function Get_N2: Double; safecall;
    procedure Set_N2(ret: Double); safecall;
    procedure SetVector(_x: Double; _y: Double; _z: Double); safecall;
    procedure GetVector(out _x: Double; out _y: Double; out _z: Double); safecall;
    function Get_HC: Double; safecall;
    procedure Set_HC(ret: Double); safecall;
    function Get_H0: Double; safecall;
    procedure Set_H0(ret: Double); safecall;
    function Get_DisregardBendStiffDirY: WordBool; safecall;
    procedure Set_DisregardBendStiffDirY(ret: WordBool); safecall;
    function Get_T: Double; safecall;
    procedure Set_T(ret: Double); safecall;
    function Get_ES: Double; safecall;
    procedure Set_ES(ret: Double); safecall;
    function Get_VS: Double; safecall;
    procedure Set_VS(ret: Double); safecall;
    property type_: IRobotThicknessOrthoType read Get_type_ write Set_type_;
    property DirType: IRobotThicknessOrthoDirType read Get_DirType write Set_DirType;
    property H: Double read Get_H write Set_H;
    property HA: Double read Get_HA write Set_HA;
    property HB: Double read Get_HB write Set_HB;
    property H1: Double read Get_H1 write Set_H1;
    property H2: Double read Get_H2 write Set_H2;
    property A: Double read Get_A write Set_A;
    property A1: Double read Get_A1 write Set_A1;
    property A2: Double read Get_A2 write Set_A2;
    property B: Double read Get_B write Set_B;
    property B1: Double read Get_B1 write Set_B1;
    property Thick1: Double read Get_Thick1 write Set_Thick1;
    property Thick2: Double read Get_Thick2 write Set_Thick2;
    property Thick3: Double read Get_Thick3 write Set_Thick3;
    property Matrix: IRobotThicknessMatrix read Get_Matrix;
    property N1: Double read Get_N1 write Set_N1;
    property N2: Double read Get_N2 write Set_N2;
    property HC: Double read Get_HC write Set_HC;
    property H0: Double read Get_H0 write Set_H0;
    property DisregardBendStiffDirY: WordBool read Get_DisregardBendStiffDirY write Set_DisregardBendStiffDirY;
    property T: Double read Get_T write Set_T;
    property ES: Double read Get_ES write Set_ES;
    property VS: Double read Get_VS write Set_VS;
  end;

// *********************************************************************//
// DispIntf:  IRobotThicknessOrthoDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AD8D51E4-2CA8-11D4-B80E-0050DA76755E}
// *********************************************************************//
  IRobotThicknessOrthoDataDisp = dispinterface
    ['{AD8D51E4-2CA8-11D4-B80E-0050DA76755E}']
    property type_: IRobotThicknessOrthoType dispid 1610743808;
    property DirType: IRobotThicknessOrthoDirType dispid 1610743810;
    property H: Double dispid 1610743812;
    property HA: Double dispid 1610743814;
    property HB: Double dispid 1610743816;
    property H1: Double dispid 1610743818;
    property H2: Double dispid 1610743820;
    property A: Double dispid 1610743822;
    property A1: Double dispid 1610743824;
    property A2: Double dispid 1610743826;
    property B: Double dispid 1610743828;
    property B1: Double dispid 1610743830;
    property Thick1: Double dispid 1610743832;
    property Thick2: Double dispid 1610743834;
    property Thick3: Double dispid 1610743836;
    property Matrix: IRobotThicknessMatrix readonly dispid 1610743838;
    property N1: Double dispid 1610743839;
    property N2: Double dispid 1610743841;
    procedure SetVector(_x: Double; _y: Double; _z: Double); dispid 1610743843;
    procedure GetVector(out _x: Double; out _y: Double; out _z: Double); dispid 1610743844;
    property HC: Double dispid 1610743845;
    property H0: Double dispid 1610743847;
    property DisregardBendStiffDirY: WordBool dispid 1610743849;
    property T: Double dispid 1610743851;
    property ES: Double dispid 1610743853;
    property VS: Double dispid 1610743855;
  end;

// *********************************************************************//
// Interface: IRobotResultServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DDF180C1-D17B-11D2-986F-0080C86BE4DF}
// *********************************************************************//
  IRobotResultServer = interface(IDispatch)
    ['{DDF180C1-D17B-11D2-986F-0080C86BE4DF}']
    function Get_Available: Integer; safecall;
    function Get_Nodes: IRobotNodeResultServer; safecall;
    function Get_Bars: IRobotBarResultServer; safecall;
    function Get_Advanced: IRobotAdvancedResultServer; safecall;
    function Get_FiniteElems: IRobotFeResultServer; safecall;
    function Get_Extremes: IRobotExtremeResultServer; safecall;
    function Get_Any: IRobotUniversalResultAccess; safecall;
    function Get_Total: IRobotStructureValues; safecall;
    function Query(const _params: IRobotResultQueryParams; const _ret_results: IRobotResultRowSet): IRobotResultQueryReturnType; safecall;
    function Get_Storeys: IRobotStoreyResultServer; safecall;
    function Get_Status: IRobotResultStatusType; safecall;
    function Get_CalculationResume: IRobotCalculationResume; safecall;
    property Available: Integer read Get_Available;
    property Nodes: IRobotNodeResultServer read Get_Nodes;
    property Bars: IRobotBarResultServer read Get_Bars;
    property Advanced: IRobotAdvancedResultServer read Get_Advanced;
    property FiniteElems: IRobotFeResultServer read Get_FiniteElems;
    property Extremes: IRobotExtremeResultServer read Get_Extremes;
    property Any: IRobotUniversalResultAccess read Get_Any;
    property Total: IRobotStructureValues read Get_Total;
    property Storeys: IRobotStoreyResultServer read Get_Storeys;
    property Status: IRobotResultStatusType read Get_Status;
    property CalculationResume: IRobotCalculationResume read Get_CalculationResume;
  end;

// *********************************************************************//
// DispIntf:  IRobotResultServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DDF180C1-D17B-11D2-986F-0080C86BE4DF}
// *********************************************************************//
  IRobotResultServerDisp = dispinterface
    ['{DDF180C1-D17B-11D2-986F-0080C86BE4DF}']
    property Available: Integer readonly dispid 1610743808;
    property Nodes: IRobotNodeResultServer readonly dispid 1610743809;
    property Bars: IRobotBarResultServer readonly dispid 1610743810;
    property Advanced: IRobotAdvancedResultServer readonly dispid 1610743811;
    property FiniteElems: IRobotFeResultServer readonly dispid 1610743812;
    property Extremes: IRobotExtremeResultServer readonly dispid 1610743813;
    property Any: IRobotUniversalResultAccess readonly dispid 1610743814;
    property Total: IRobotStructureValues readonly dispid 1610743815;
    function Query(const _params: IRobotResultQueryParams; const _ret_results: IRobotResultRowSet): IRobotResultQueryReturnType; dispid 1610743816;
    property Storeys: IRobotStoreyResultServer readonly dispid 1610743817;
    property Status: IRobotResultStatusType readonly dispid 1610743818;
    property CalculationResume: IRobotCalculationResume readonly dispid 1610743819;
  end;

// *********************************************************************//
// Interface: IRobotNodeResultServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DDF180C3-D17B-11D2-986F-0080C86BE4DF}
// *********************************************************************//
  IRobotNodeResultServer = interface(IDispatch)
    ['{DDF180C3-D17B-11D2-986F-0080C86BE4DF}']
    function Get_Reactions: IRobotReactionServer; safecall;
    function Get_Displacements: IRobotNodeDisplacementServer; safecall;
    function Get_Buckling: IRobotNodeBucklingServer; safecall;
    function Get_PseudostaticForces: IRobotPseudostaticForceServer; safecall;
    property Reactions: IRobotReactionServer read Get_Reactions;
    property Displacements: IRobotNodeDisplacementServer read Get_Displacements;
    property Buckling: IRobotNodeBucklingServer read Get_Buckling;
    property PseudostaticForces: IRobotPseudostaticForceServer read Get_PseudostaticForces;
  end;

// *********************************************************************//
// DispIntf:  IRobotNodeResultServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DDF180C3-D17B-11D2-986F-0080C86BE4DF}
// *********************************************************************//
  IRobotNodeResultServerDisp = dispinterface
    ['{DDF180C3-D17B-11D2-986F-0080C86BE4DF}']
    property Reactions: IRobotReactionServer readonly dispid 1610743808;
    property Displacements: IRobotNodeDisplacementServer readonly dispid 1610743809;
    property Buckling: IRobotNodeBucklingServer readonly dispid 1610743810;
    property PseudostaticForces: IRobotPseudostaticForceServer readonly dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotReactionServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DDF180C2-D17B-11D2-986F-0080C86BE4DF}
// *********************************************************************//
  IRobotReactionServer = interface(IDispatch)
    ['{DDF180C2-D17B-11D2-986F-0080C86BE4DF}']
    function Value(node_num: Integer; case_num: Integer): IRobotReactionData; safecall;
    function Local(node_num: Integer; case_num: Integer): IRobotReactionData; safecall;
    function DDC(node_num: Integer; case_num: Integer): IRobotReactionData; safecall;
    function DDCLocal(node_num: Integer; case_num: Integer): IRobotReactionData; safecall;
    function Sum(case_num: Integer): IRobotReactionData; safecall;
    function DDCSum(case_num: Integer): IRobotReactionData; safecall;
    function SumForce(case_num: Integer): IRobotReactionData; safecall;
    function ValueEx(node_num: Integer; case_num: Integer; case_cmpnt: Integer): IRobotReactionData; safecall;
    function LocalEx(node_num: Integer; _case: Integer; case_cmpnt: Integer): IRobotReactionData; safecall;
    function DDCEx(node_num: Integer; _case: Integer; case_cmpnt: Integer): IRobotReactionData; safecall;
    function DDCLocalEx(node_num: Integer; _case: Integer; case_cmpnt: Integer): IRobotReactionData; safecall;
    function SumEx(_case: Integer; case_cmpnt: Integer): IRobotReactionData; safecall;
    function DDCSumEx(_case: Integer; case_cmpnt: Integer): IRobotReactionData; safecall;
    function SumForceEx(_case: Integer; case_cmpnt: Integer): IRobotReactionData; safecall;
    function DynValue(node_num: Integer; _case: Integer; mode_num: Integer): IRobotReactionData; safecall;
    function DynLocal(node_num: Integer; _case: Integer; mode_num: Integer): IRobotReactionData; safecall;
    function DynDDC(node_num: Integer; _case: Integer; mode_num: Integer): IRobotReactionData; safecall;
    function DynDDCLocal(node_num: Integer; _case: Integer; mode_num: Integer): IRobotReactionData; safecall;
    function DynSum(_case: Integer; mode_num: Integer): IRobotReactionData; safecall;
    function DynDDCSum(_case: Integer; mode_num: Integer): IRobotReactionData; safecall;
    function DynSumForce(_case: Integer; mode_num: Integer): IRobotReactionData; safecall;
    function DynCombValue(node_num: Integer; _case: Integer; mode_cmb: IRobotModeCombinationType): IRobotReactionData; safecall;
    function DynCombLocal(node_num: Integer; _case: Integer; mode_cmb: IRobotModeCombinationType): IRobotReactionData; safecall;
    function DynCombDDC(node_num: Integer; _case: Integer; mode_cmb: IRobotModeCombinationType): IRobotReactionData; safecall;
    function DynCombDDCLocal(node_num: Integer; _case: Integer; mode_cmb: IRobotModeCombinationType): IRobotReactionData; safecall;
    function DynCombSum(_case: Integer; mode_cmb: IRobotModeCombinationType): IRobotReactionData; safecall;
    function DynCombDDCSum(_case: Integer; mode_cmb: IRobotModeCombinationType): IRobotReactionData; safecall;
    function DynCombSumForce(_case: Integer; mode_cmb: IRobotModeCombinationType): IRobotReactionData; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotReactionServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DDF180C2-D17B-11D2-986F-0080C86BE4DF}
// *********************************************************************//
  IRobotReactionServerDisp = dispinterface
    ['{DDF180C2-D17B-11D2-986F-0080C86BE4DF}']
    function Value(node_num: Integer; case_num: Integer): IRobotReactionData; dispid 1610743808;
    function Local(node_num: Integer; case_num: Integer): IRobotReactionData; dispid 1610743809;
    function DDC(node_num: Integer; case_num: Integer): IRobotReactionData; dispid 1610743810;
    function DDCLocal(node_num: Integer; case_num: Integer): IRobotReactionData; dispid 1610743811;
    function Sum(case_num: Integer): IRobotReactionData; dispid 1610743812;
    function DDCSum(case_num: Integer): IRobotReactionData; dispid 1610743813;
    function SumForce(case_num: Integer): IRobotReactionData; dispid 1610743814;
    function ValueEx(node_num: Integer; case_num: Integer; case_cmpnt: Integer): IRobotReactionData; dispid 1610743815;
    function LocalEx(node_num: Integer; _case: Integer; case_cmpnt: Integer): IRobotReactionData; dispid 1610743816;
    function DDCEx(node_num: Integer; _case: Integer; case_cmpnt: Integer): IRobotReactionData; dispid 1610743817;
    function DDCLocalEx(node_num: Integer; _case: Integer; case_cmpnt: Integer): IRobotReactionData; dispid 1610743818;
    function SumEx(_case: Integer; case_cmpnt: Integer): IRobotReactionData; dispid 1610743819;
    function DDCSumEx(_case: Integer; case_cmpnt: Integer): IRobotReactionData; dispid 1610743820;
    function SumForceEx(_case: Integer; case_cmpnt: Integer): IRobotReactionData; dispid 1610743821;
    function DynValue(node_num: Integer; _case: Integer; mode_num: Integer): IRobotReactionData; dispid 1610743822;
    function DynLocal(node_num: Integer; _case: Integer; mode_num: Integer): IRobotReactionData; dispid 1610743823;
    function DynDDC(node_num: Integer; _case: Integer; mode_num: Integer): IRobotReactionData; dispid 1610743824;
    function DynDDCLocal(node_num: Integer; _case: Integer; mode_num: Integer): IRobotReactionData; dispid 1610743825;
    function DynSum(_case: Integer; mode_num: Integer): IRobotReactionData; dispid 1610743826;
    function DynDDCSum(_case: Integer; mode_num: Integer): IRobotReactionData; dispid 1610743827;
    function DynSumForce(_case: Integer; mode_num: Integer): IRobotReactionData; dispid 1610743828;
    function DynCombValue(node_num: Integer; _case: Integer; mode_cmb: IRobotModeCombinationType): IRobotReactionData; dispid 1610743829;
    function DynCombLocal(node_num: Integer; _case: Integer; mode_cmb: IRobotModeCombinationType): IRobotReactionData; dispid 1610743830;
    function DynCombDDC(node_num: Integer; _case: Integer; mode_cmb: IRobotModeCombinationType): IRobotReactionData; dispid 1610743831;
    function DynCombDDCLocal(node_num: Integer; _case: Integer; mode_cmb: IRobotModeCombinationType): IRobotReactionData; dispid 1610743832;
    function DynCombSum(_case: Integer; mode_cmb: IRobotModeCombinationType): IRobotReactionData; dispid 1610743833;
    function DynCombDDCSum(_case: Integer; mode_cmb: IRobotModeCombinationType): IRobotReactionData; dispid 1610743834;
    function DynCombSumForce(_case: Integer; mode_cmb: IRobotModeCombinationType): IRobotReactionData; dispid 1610743835;
  end;

// *********************************************************************//
// Interface: IRobotReactionData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DDF180C0-D17B-11D2-986F-0080C86BE4DF}
// *********************************************************************//
  IRobotReactionData = interface(IDispatch)
    ['{DDF180C0-D17B-11D2-986F-0080C86BE4DF}']
    function Get_FX: Double; safecall;
    function Get_FY: Double; safecall;
    function Get_FZ: Double; safecall;
    function Get_MX: Double; safecall;
    function Get_MY: Double; safecall;
    function Get_MZ: Double; safecall;
    property FX: Double read Get_FX;
    property FY: Double read Get_FY;
    property FZ: Double read Get_FZ;
    property MX: Double read Get_MX;
    property MY: Double read Get_MY;
    property MZ: Double read Get_MZ;
  end;

// *********************************************************************//
// DispIntf:  IRobotReactionDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DDF180C0-D17B-11D2-986F-0080C86BE4DF}
// *********************************************************************//
  IRobotReactionDataDisp = dispinterface
    ['{DDF180C0-D17B-11D2-986F-0080C86BE4DF}']
    property FX: Double readonly dispid 1610743808;
    property FY: Double readonly dispid 1610743809;
    property FZ: Double readonly dispid 1610743810;
    property MX: Double readonly dispid 1610743811;
    property MY: Double readonly dispid 1610743812;
    property MZ: Double readonly dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotNodeDisplacementServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {85EF7901-D2DB-11D2-9871-0080C86BE4DF}
// *********************************************************************//
  IRobotNodeDisplacementServer = interface(IDispatch)
    ['{85EF7901-D2DB-11D2-9871-0080C86BE4DF}']
    function Value(node_num: Integer; case_num: Integer): IRobotDisplacementData; safecall;
    function ValueEx(node_num: Integer; _case: Integer; case_cmpnt: Integer): IRobotDisplacementData; safecall;
    function DynValue(node_num: Integer; case_num: Integer; _mode: Integer): IRobotDisplacementData; safecall;
    function DynCombValue(node_num: Integer; case_num: Integer; mode_cmb: IRobotModeCombinationType): IRobotDisplacementData; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotNodeDisplacementServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {85EF7901-D2DB-11D2-9871-0080C86BE4DF}
// *********************************************************************//
  IRobotNodeDisplacementServerDisp = dispinterface
    ['{85EF7901-D2DB-11D2-9871-0080C86BE4DF}']
    function Value(node_num: Integer; case_num: Integer): IRobotDisplacementData; dispid 1610743808;
    function ValueEx(node_num: Integer; _case: Integer; case_cmpnt: Integer): IRobotDisplacementData; dispid 1610743809;
    function DynValue(node_num: Integer; case_num: Integer; _mode: Integer): IRobotDisplacementData; dispid 1610743810;
    function DynCombValue(node_num: Integer; case_num: Integer; mode_cmb: IRobotModeCombinationType): IRobotDisplacementData; dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotDisplacementData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {85EF7900-D2DB-11D2-9871-0080C86BE4DF}
// *********************************************************************//
  IRobotDisplacementData = interface(IDispatch)
    ['{85EF7900-D2DB-11D2-9871-0080C86BE4DF}']
    function Get_UX: Double; safecall;
    function Get_UY: Double; safecall;
    function Get_UZ: Double; safecall;
    function Get_RX: Double; safecall;
    function Get_RY: Double; safecall;
    function Get_RZ: Double; safecall;
    property UX: Double read Get_UX;
    property UY: Double read Get_UY;
    property UZ: Double read Get_UZ;
    property RX: Double read Get_RX;
    property RY: Double read Get_RY;
    property RZ: Double read Get_RZ;
  end;

// *********************************************************************//
// DispIntf:  IRobotDisplacementDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {85EF7900-D2DB-11D2-9871-0080C86BE4DF}
// *********************************************************************//
  IRobotDisplacementDataDisp = dispinterface
    ['{85EF7900-D2DB-11D2-9871-0080C86BE4DF}']
    property UX: Double readonly dispid 1610743808;
    property UY: Double readonly dispid 1610743809;
    property UZ: Double readonly dispid 1610743810;
    property RX: Double readonly dispid 1610743811;
    property RY: Double readonly dispid 1610743812;
    property RZ: Double readonly dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotNodeBucklingServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {203AE946-C29D-11D3-B7B3-0050DA76755E}
// *********************************************************************//
  IRobotNodeBucklingServer = interface(IDispatch)
    ['{203AE946-C29D-11D3-B7B3-0050DA76755E}']
    function EigenVector(node_num: Integer; case_num: Integer; mode_num: Integer): IRobotDisplacementData; safecall;
    function EigenVectorCmb(node_num: Integer; _case: Integer; mode_cmb: IRobotModeCombinationType): IRobotDisplacementData; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotNodeBucklingServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {203AE946-C29D-11D3-B7B3-0050DA76755E}
// *********************************************************************//
  IRobotNodeBucklingServerDisp = dispinterface
    ['{203AE946-C29D-11D3-B7B3-0050DA76755E}']
    function EigenVector(node_num: Integer; case_num: Integer; mode_num: Integer): IRobotDisplacementData; dispid 1610743808;
    function EigenVectorCmb(node_num: Integer; _case: Integer; mode_cmb: IRobotModeCombinationType): IRobotDisplacementData; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotPseudostaticForceServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E172DD44-42C7-11D4-B827-0050DA76755E}
// *********************************************************************//
  IRobotPseudostaticForceServer = interface(IDispatch)
    ['{E172DD44-42C7-11D4-B827-0050DA76755E}']
    function Value(node_num: Integer; case_num: Integer; mode_num: Integer): IRobotForcesData; safecall;
    function CombValue(node_num: Integer; case_num: Integer; mode_cmb: IRobotModeCombinationType): IRobotForcesData; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotPseudostaticForceServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E172DD44-42C7-11D4-B827-0050DA76755E}
// *********************************************************************//
  IRobotPseudostaticForceServerDisp = dispinterface
    ['{E172DD44-42C7-11D4-B827-0050DA76755E}']
    function Value(node_num: Integer; case_num: Integer; mode_num: Integer): IRobotForcesData; dispid 1610743808;
    function CombValue(node_num: Integer; case_num: Integer; mode_cmb: IRobotModeCombinationType): IRobotForcesData; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotForcesData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E172DD42-42C7-11D4-B827-0050DA76755E}
// *********************************************************************//
  IRobotForcesData = interface(IDispatch)
    ['{E172DD42-42C7-11D4-B827-0050DA76755E}']
    function Get_FX: Double; safecall;
    function Get_FY: Double; safecall;
    function Get_FZ: Double; safecall;
    function Get_MX: Double; safecall;
    function Get_MY: Double; safecall;
    function Get_MZ: Double; safecall;
    property FX: Double read Get_FX;
    property FY: Double read Get_FY;
    property FZ: Double read Get_FZ;
    property MX: Double read Get_MX;
    property MY: Double read Get_MY;
    property MZ: Double read Get_MZ;
  end;

// *********************************************************************//
// DispIntf:  IRobotForcesDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E172DD42-42C7-11D4-B827-0050DA76755E}
// *********************************************************************//
  IRobotForcesDataDisp = dispinterface
    ['{E172DD42-42C7-11D4-B827-0050DA76755E}']
    property FX: Double readonly dispid 1610743808;
    property FY: Double readonly dispid 1610743809;
    property FZ: Double readonly dispid 1610743810;
    property MX: Double readonly dispid 1610743811;
    property MY: Double readonly dispid 1610743812;
    property MZ: Double readonly dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotBarResultServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1B0E6EE0-D30F-11D2-9871-0080C86BE4DF}
// *********************************************************************//
  IRobotBarResultServer = interface(IDispatch)
    ['{1B0E6EE0-D30F-11D2-9871-0080C86BE4DF}']
    function Get_Forces: IRobotBarForceServer; safecall;
    function Get_Deflections: IRobotBarDeflectionServer; safecall;
    function Get_Stresses: IRobotBarStressServer; safecall;
    function Get_Buckling: IRobotBarBucklingServer; safecall;
    function Get_Displacements: IRobotBarDisplacementServer; safecall;
    function GeoImperfections(_bar: Integer): IRobotBarDeflectionData; safecall;
    property Forces: IRobotBarForceServer read Get_Forces;
    property Deflections: IRobotBarDeflectionServer read Get_Deflections;
    property Stresses: IRobotBarStressServer read Get_Stresses;
    property Buckling: IRobotBarBucklingServer read Get_Buckling;
    property Displacements: IRobotBarDisplacementServer read Get_Displacements;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarResultServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1B0E6EE0-D30F-11D2-9871-0080C86BE4DF}
// *********************************************************************//
  IRobotBarResultServerDisp = dispinterface
    ['{1B0E6EE0-D30F-11D2-9871-0080C86BE4DF}']
    property Forces: IRobotBarForceServer readonly dispid 1610743808;
    property Deflections: IRobotBarDeflectionServer readonly dispid 1610743809;
    property Stresses: IRobotBarStressServer readonly dispid 1610743810;
    property Buckling: IRobotBarBucklingServer readonly dispid 1610743811;
    property Displacements: IRobotBarDisplacementServer readonly dispid 1610743812;
    function GeoImperfections(_bar: Integer): IRobotBarDeflectionData; dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotBarForceServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1B0E6EE1-D30F-11D2-9871-0080C86BE4DF}
// *********************************************************************//
  IRobotBarForceServer = interface(IDispatch)
    ['{1B0E6EE1-D30F-11D2-9871-0080C86BE4DF}']
    function Value(bar_num: Integer; case_num: Integer; Point: Double): IRobotBarForceData; safecall;
    function ValueByNPoints(bar_num: Integer; case_num: Integer; no_points: SYSINT; Point: SYSINT): IRobotBarForceData; safecall;
    function ValueEx(bar_num: Integer; case_num: Integer; case_cmpnt: Integer; Point: Double): IRobotBarForceData; safecall;
    function ValueByNPointsEx(bar_num: Integer; case_num: Integer; case_cmpnt: Integer; 
                              no_points: SYSINT; Point: SYSINT): IRobotBarForceData; safecall;
    function DynValue(bar_num: Integer; case_num: Integer; _mode: Integer; _point: Double): IRobotBarForceData; safecall;
    function DynValueByNPoints(bar_num: Integer; case_num: Integer; _mode: Integer; 
                               no_points: SYSINT; _point: SYSINT): IRobotBarForceData; safecall;
    function DynCombValue(bar_num: Integer; case_num: Integer; mode_cmb: IRobotModeCombinationType; 
                          _point: Double): IRobotBarForceData; safecall;
    function DynCombValueByNPoints(bar_num: Integer; case_num: Integer; 
                                   mode_cmb: IRobotModeCombinationType; no_points: SYSINT; 
                                   _point: SYSINT): IRobotBarForceData; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarForceServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1B0E6EE1-D30F-11D2-9871-0080C86BE4DF}
// *********************************************************************//
  IRobotBarForceServerDisp = dispinterface
    ['{1B0E6EE1-D30F-11D2-9871-0080C86BE4DF}']
    function Value(bar_num: Integer; case_num: Integer; Point: Double): IRobotBarForceData; dispid 1610743808;
    function ValueByNPoints(bar_num: Integer; case_num: Integer; no_points: SYSINT; Point: SYSINT): IRobotBarForceData; dispid 1610743809;
    function ValueEx(bar_num: Integer; case_num: Integer; case_cmpnt: Integer; Point: Double): IRobotBarForceData; dispid 1610743810;
    function ValueByNPointsEx(bar_num: Integer; case_num: Integer; case_cmpnt: Integer; 
                              no_points: SYSINT; Point: SYSINT): IRobotBarForceData; dispid 1610743811;
    function DynValue(bar_num: Integer; case_num: Integer; _mode: Integer; _point: Double): IRobotBarForceData; dispid 1610743812;
    function DynValueByNPoints(bar_num: Integer; case_num: Integer; _mode: Integer; 
                               no_points: SYSINT; _point: SYSINT): IRobotBarForceData; dispid 1610743813;
    function DynCombValue(bar_num: Integer; case_num: Integer; mode_cmb: IRobotModeCombinationType; 
                          _point: Double): IRobotBarForceData; dispid 1610743814;
    function DynCombValueByNPoints(bar_num: Integer; case_num: Integer; 
                                   mode_cmb: IRobotModeCombinationType; no_points: SYSINT; 
                                   _point: SYSINT): IRobotBarForceData; dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotBarForceData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1B0E6EE2-D30F-11D2-9871-0080C86BE4DF}
// *********************************************************************//
  IRobotBarForceData = interface(IDispatch)
    ['{1B0E6EE2-D30F-11D2-9871-0080C86BE4DF}']
    function Get_FX: Double; safecall;
    function Get_FY: Double; safecall;
    function Get_FZ: Double; safecall;
    function Get_MX: Double; safecall;
    function Get_MY: Double; safecall;
    function Get_MZ: Double; safecall;
    function Get_KYAvailable: WordBool; safecall;
    function Get_KZAvailable: WordBool; safecall;
    function Get_KY: Double; safecall;
    function Get_KZ: Double; safecall;
    property FX: Double read Get_FX;
    property FY: Double read Get_FY;
    property FZ: Double read Get_FZ;
    property MX: Double read Get_MX;
    property MY: Double read Get_MY;
    property MZ: Double read Get_MZ;
    property KYAvailable: WordBool read Get_KYAvailable;
    property KZAvailable: WordBool read Get_KZAvailable;
    property KY: Double read Get_KY;
    property KZ: Double read Get_KZ;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarForceDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1B0E6EE2-D30F-11D2-9871-0080C86BE4DF}
// *********************************************************************//
  IRobotBarForceDataDisp = dispinterface
    ['{1B0E6EE2-D30F-11D2-9871-0080C86BE4DF}']
    property FX: Double readonly dispid 1610743808;
    property FY: Double readonly dispid 1610743809;
    property FZ: Double readonly dispid 1610743810;
    property MX: Double readonly dispid 1610743811;
    property MY: Double readonly dispid 1610743812;
    property MZ: Double readonly dispid 1610743813;
    property KYAvailable: WordBool readonly dispid 1610743814;
    property KZAvailable: WordBool readonly dispid 1610743815;
    property KY: Double readonly dispid 1610743816;
    property KZ: Double readonly dispid 1610743817;
  end;

// *********************************************************************//
// Interface: IRobotBarDeflectionServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E348600-B787-11D3-B7AA-0050DA76755E}
// *********************************************************************//
  IRobotBarDeflectionServer = interface(IDispatch)
    ['{7E348600-B787-11D3-B7AA-0050DA76755E}']
    function Value(bar_num: Integer; case_num: Integer; pos: Double): IRobotBarDeflectionData; safecall;
    function MaxValue(bar_num: Integer; case_num: Integer): IRobotBarDeflectionData; safecall;
    function DynValue(bar_num: Integer; case_num: Integer; mode_num: Integer; pos: Double): IRobotBarDeflectionData; safecall;
    function DynCombValue(bar_num: Integer; case_num: Integer; pos: Double; 
                          cmb: IRobotModeCombinationType): IRobotBarDeflectionData; safecall;
    function DynMaxValue(bar_num: Integer; case_num: Integer; mode_num: Integer): IRobotBarDeflectionData; safecall;
    function DynCombMaxValue(bar_num: Integer; case_num: Integer; cmb: IRobotModeCombinationType): IRobotBarDeflectionData; safecall;
    function ValueEx(bar_num: Integer; case_num: Integer; case_cmpnt: Integer; pos: Double): IRobotBarDeflectionData; safecall;
    function MaxValueEx(bar_num: Integer; case_num: Integer; case_cmpnt: Integer): IRobotBarDeflectionData; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarDeflectionServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E348600-B787-11D3-B7AA-0050DA76755E}
// *********************************************************************//
  IRobotBarDeflectionServerDisp = dispinterface
    ['{7E348600-B787-11D3-B7AA-0050DA76755E}']
    function Value(bar_num: Integer; case_num: Integer; pos: Double): IRobotBarDeflectionData; dispid 1610743808;
    function MaxValue(bar_num: Integer; case_num: Integer): IRobotBarDeflectionData; dispid 1610743809;
    function DynValue(bar_num: Integer; case_num: Integer; mode_num: Integer; pos: Double): IRobotBarDeflectionData; dispid 1610743810;
    function DynCombValue(bar_num: Integer; case_num: Integer; pos: Double; 
                          cmb: IRobotModeCombinationType): IRobotBarDeflectionData; dispid 1610743811;
    function DynMaxValue(bar_num: Integer; case_num: Integer; mode_num: Integer): IRobotBarDeflectionData; dispid 1610743812;
    function DynCombMaxValue(bar_num: Integer; case_num: Integer; cmb: IRobotModeCombinationType): IRobotBarDeflectionData; dispid 1610743813;
    function ValueEx(bar_num: Integer; case_num: Integer; case_cmpnt: Integer; pos: Double): IRobotBarDeflectionData; dispid 1610743814;
    function MaxValueEx(bar_num: Integer; case_num: Integer; case_cmpnt: Integer): IRobotBarDeflectionData; dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotBarDeflectionData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E348601-B787-11D3-B7AA-0050DA76755E}
// *********************************************************************//
  IRobotBarDeflectionData = interface(IDispatch)
    ['{7E348601-B787-11D3-B7AA-0050DA76755E}']
    function Get_UX: Double; safecall;
    function Get_UY: Double; safecall;
    function Get_UZ: Double; safecall;
    function Get_PosUX: Double; safecall;
    function Get_PosUY: Double; safecall;
    function Get_PosUZ: Double; safecall;
    property UX: Double read Get_UX;
    property UY: Double read Get_UY;
    property UZ: Double read Get_UZ;
    property PosUX: Double read Get_PosUX;
    property PosUY: Double read Get_PosUY;
    property PosUZ: Double read Get_PosUZ;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarDeflectionDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E348601-B787-11D3-B7AA-0050DA76755E}
// *********************************************************************//
  IRobotBarDeflectionDataDisp = dispinterface
    ['{7E348601-B787-11D3-B7AA-0050DA76755E}']
    property UX: Double readonly dispid 1610743808;
    property UY: Double readonly dispid 1610743809;
    property UZ: Double readonly dispid 1610743810;
    property PosUX: Double readonly dispid 1610743811;
    property PosUY: Double readonly dispid 1610743812;
    property PosUZ: Double readonly dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotBarStressServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {282A9860-B3B7-11D3-9978-0080C86BE4DF}
// *********************************************************************//
  IRobotBarStressServer = interface(IDispatch)
    ['{282A9860-B3B7-11D3-9978-0080C86BE4DF}']
    function Value(bar_num: Integer; case_num: Integer; pos: Double): IRobotBarStressData; safecall;
    function ValueEx(bar_num: Integer; case_num: Integer; case_cmpnt: Integer; pos: Double): IRobotBarStressData; safecall;
    function DynValue(bar_num: Integer; case_num: Integer; mode_num: Integer; pos: Double): IRobotBarStressData; safecall;
    function DynCombValue(bar_num: Integer; case_num: Integer; mode_cmb: IRobotModeCombinationType; 
                          pos: Double): IRobotBarStressData; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarStressServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {282A9860-B3B7-11D3-9978-0080C86BE4DF}
// *********************************************************************//
  IRobotBarStressServerDisp = dispinterface
    ['{282A9860-B3B7-11D3-9978-0080C86BE4DF}']
    function Value(bar_num: Integer; case_num: Integer; pos: Double): IRobotBarStressData; dispid 1610743808;
    function ValueEx(bar_num: Integer; case_num: Integer; case_cmpnt: Integer; pos: Double): IRobotBarStressData; dispid 1610743809;
    function DynValue(bar_num: Integer; case_num: Integer; mode_num: Integer; pos: Double): IRobotBarStressData; dispid 1610743810;
    function DynCombValue(bar_num: Integer; case_num: Integer; mode_cmb: IRobotModeCombinationType; 
                          pos: Double): IRobotBarStressData; dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotBarStressData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B14A5290-A32A-11D3-9967-0080C86BE4DF}
// *********************************************************************//
  IRobotBarStressData = interface(IDispatch)
    ['{B14A5290-A32A-11D3-9967-0080C86BE4DF}']
    function Get_Smax: Double; safecall;
    function Get_Smin: Double; safecall;
    function Get_SmaxMY: Double; safecall;
    function Get_SminMY: Double; safecall;
    function Get_SmaxMZ: Double; safecall;
    function Get_SminMZ: Double; safecall;
    function Get_FXSX: Double; safecall;
    function Get_ShearY: Double; safecall;
    function Get_ShearZ: Double; safecall;
    function Get_Torsion: Double; safecall;
    property Smax: Double read Get_Smax;
    property Smin: Double read Get_Smin;
    property SmaxMY: Double read Get_SmaxMY;
    property SminMY: Double read Get_SminMY;
    property SmaxMZ: Double read Get_SmaxMZ;
    property SminMZ: Double read Get_SminMZ;
    property FXSX: Double read Get_FXSX;
    property ShearY: Double read Get_ShearY;
    property ShearZ: Double read Get_ShearZ;
    property Torsion: Double read Get_Torsion;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarStressDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B14A5290-A32A-11D3-9967-0080C86BE4DF}
// *********************************************************************//
  IRobotBarStressDataDisp = dispinterface
    ['{B14A5290-A32A-11D3-9967-0080C86BE4DF}']
    property Smax: Double readonly dispid 1610743808;
    property Smin: Double readonly dispid 1610743809;
    property SmaxMY: Double readonly dispid 1610743810;
    property SminMY: Double readonly dispid 1610743811;
    property SmaxMZ: Double readonly dispid 1610743812;
    property SminMZ: Double readonly dispid 1610743813;
    property FXSX: Double readonly dispid 1610743814;
    property ShearY: Double readonly dispid 1610743815;
    property ShearZ: Double readonly dispid 1610743816;
    property Torsion: Double readonly dispid 1610743817;
  end;

// *********************************************************************//
// Interface: IRobotBarBucklingServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {203AE944-C29D-11D3-B7B3-0050DA76755E}
// *********************************************************************//
  IRobotBarBucklingServer = interface(IDispatch)
    ['{203AE944-C29D-11D3-B7B3-0050DA76755E}']
    function CriticalCoef(case_num: Integer; mode_num: Integer): Double; safecall;
    function EigenValue(bar_num: Integer; case_num: Integer; mode_num: Integer): IRobotBarBucklingData; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarBucklingServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {203AE944-C29D-11D3-B7B3-0050DA76755E}
// *********************************************************************//
  IRobotBarBucklingServerDisp = dispinterface
    ['{203AE944-C29D-11D3-B7B3-0050DA76755E}']
    function CriticalCoef(case_num: Integer; mode_num: Integer): Double; dispid 1610743808;
    function EigenValue(bar_num: Integer; case_num: Integer; mode_num: Integer): IRobotBarBucklingData; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotBarBucklingData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {203AE941-C29D-11D3-B7B3-0050DA76755E}
// *********************************************************************//
  IRobotBarBucklingData = interface(IDispatch)
    ['{203AE941-C29D-11D3-B7B3-0050DA76755E}']
    function Get_CriticalCoef: Double; safecall;
    function Get_CriticalForce: Double; safecall;
    function Get_BuckLengthY: Double; safecall;
    function Get_BuckLengthZ: Double; safecall;
    function Get_SlendY: Double; safecall;
    function Get_SlendZ: Double; safecall;
    property CriticalCoef: Double read Get_CriticalCoef;
    property CriticalForce: Double read Get_CriticalForce;
    property BuckLengthY: Double read Get_BuckLengthY;
    property BuckLengthZ: Double read Get_BuckLengthZ;
    property SlendY: Double read Get_SlendY;
    property SlendZ: Double read Get_SlendZ;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarBucklingDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {203AE941-C29D-11D3-B7B3-0050DA76755E}
// *********************************************************************//
  IRobotBarBucklingDataDisp = dispinterface
    ['{203AE941-C29D-11D3-B7B3-0050DA76755E}']
    property CriticalCoef: Double readonly dispid 1610743808;
    property CriticalForce: Double readonly dispid 1610743809;
    property BuckLengthY: Double readonly dispid 1610743810;
    property BuckLengthZ: Double readonly dispid 1610743811;
    property SlendY: Double readonly dispid 1610743812;
    property SlendZ: Double readonly dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotBarDisplacementServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A16F5742-C135-11D4-B88A-0050DA76755E}
// *********************************************************************//
  IRobotBarDisplacementServer = interface(IDispatch)
    ['{A16F5742-C135-11D4-B88A-0050DA76755E}']
    function Value(_bar_num: Integer; _pos: Double; _case_num: Integer; _case_cmpnt: Integer): IRobotDisplacementData; safecall;
    function DynValue(_bar_num: Integer; _pos: Double; _case_num: Integer; _mode: Integer): IRobotDisplacementData; safecall;
    function DynCombValue(_bar_num: Integer; _pos: Double; _case_num: Integer; 
                          _mode_cmb: IRobotModeCombinationType): IRobotDisplacementData; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarDisplacementServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A16F5742-C135-11D4-B88A-0050DA76755E}
// *********************************************************************//
  IRobotBarDisplacementServerDisp = dispinterface
    ['{A16F5742-C135-11D4-B88A-0050DA76755E}']
    function Value(_bar_num: Integer; _pos: Double; _case_num: Integer; _case_cmpnt: Integer): IRobotDisplacementData; dispid 1610743808;
    function DynValue(_bar_num: Integer; _pos: Double; _case_num: Integer; _mode: Integer): IRobotDisplacementData; dispid 1610743809;
    function DynCombValue(_bar_num: Integer; _pos: Double; _case_num: Integer; 
                          _mode_cmb: IRobotModeCombinationType): IRobotDisplacementData; dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotAdvancedResultServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5D2C16E2-41F0-11D4-B823-0050DA76755E}
// *********************************************************************//
  IRobotAdvancedResultServer = interface(IDispatch)
    ['{5D2C16E2-41F0-11D4-B823-0050DA76755E}']
    function Get_Eigenvalues: IRobotEigenvaluesServer; safecall;
    function Get_MassSum: IRobotMassSumServer; safecall;
    function Get_SpectralCoeffs: IRobotSpectralCoefficients; safecall;
    function Get_Eigenvectors: IRobotEigenvectorsServer; safecall;
    function Get_TimeHistory: IRobotTimeHistoryResultServer; safecall;
    function Get_FRF: IRobotFRFResultServer; safecall;
    function FootfallValue(_node: Integer; _case: Integer): IRobotFootfallResults; safecall;
    property Eigenvalues: IRobotEigenvaluesServer read Get_Eigenvalues;
    property MassSum: IRobotMassSumServer read Get_MassSum;
    property SpectralCoeffs: IRobotSpectralCoefficients read Get_SpectralCoeffs;
    property Eigenvectors: IRobotEigenvectorsServer read Get_Eigenvectors;
    property TimeHistory: IRobotTimeHistoryResultServer read Get_TimeHistory;
    property FRF: IRobotFRFResultServer read Get_FRF;
  end;

// *********************************************************************//
// DispIntf:  IRobotAdvancedResultServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5D2C16E2-41F0-11D4-B823-0050DA76755E}
// *********************************************************************//
  IRobotAdvancedResultServerDisp = dispinterface
    ['{5D2C16E2-41F0-11D4-B823-0050DA76755E}']
    property Eigenvalues: IRobotEigenvaluesServer readonly dispid 1610743808;
    property MassSum: IRobotMassSumServer readonly dispid 1610743809;
    property SpectralCoeffs: IRobotSpectralCoefficients readonly dispid 1610743810;
    property Eigenvectors: IRobotEigenvectorsServer readonly dispid 1610743811;
    property TimeHistory: IRobotTimeHistoryResultServer readonly dispid 1610743812;
    property FRF: IRobotFRFResultServer readonly dispid 1610743813;
    function FootfallValue(_node: Integer; _case: Integer): IRobotFootfallResults; dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotEigenvaluesServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {976214D6-3DDF-11D4-B820-0050DA76755E}
// *********************************************************************//
  IRobotEigenvaluesServer = interface(IDispatch)
    ['{976214D6-3DDF-11D4-B820-0050DA76755E}']
    function Value(case_num: Integer; mode_num: Integer): IRobotEigenvalues; safecall;
    function CombValue(case_num: Integer; mode_cmb: IRobotModeCombinationType): IRobotEigenvalues; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotEigenvaluesServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {976214D6-3DDF-11D4-B820-0050DA76755E}
// *********************************************************************//
  IRobotEigenvaluesServerDisp = dispinterface
    ['{976214D6-3DDF-11D4-B820-0050DA76755E}']
    function Value(case_num: Integer; mode_num: Integer): IRobotEigenvalues; dispid 1610743808;
    function CombValue(case_num: Integer; mode_cmb: IRobotModeCombinationType): IRobotEigenvalues; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotEigenvalues
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {976214D2-3DDF-11D4-B820-0050DA76755E}
// *********************************************************************//
  IRobotEigenvalues = interface(IDispatch)
    ['{976214D2-3DDF-11D4-B820-0050DA76755E}']
    function Get_EigenValue: Double; safecall;
    function Get_Frequence: Double; safecall;
    function Get_Period: Double; safecall;
    function Get_Pulsation: Double; safecall;
    function Get_Damping: Double; safecall;
    function Get_Precision: Double; safecall;
    function Get_Energy: Double; safecall;
    function Get_AvPartCoeff: Double; safecall;
    property EigenValue: Double read Get_EigenValue;
    property Frequence: Double read Get_Frequence;
    property Period: Double read Get_Period;
    property Pulsation: Double read Get_Pulsation;
    property Damping: Double read Get_Damping;
    property Precision: Double read Get_Precision;
    property Energy: Double read Get_Energy;
    property AvPartCoeff: Double read Get_AvPartCoeff;
  end;

// *********************************************************************//
// DispIntf:  IRobotEigenvaluesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {976214D2-3DDF-11D4-B820-0050DA76755E}
// *********************************************************************//
  IRobotEigenvaluesDisp = dispinterface
    ['{976214D2-3DDF-11D4-B820-0050DA76755E}']
    property EigenValue: Double readonly dispid 1610743808;
    property Frequence: Double readonly dispid 1610743809;
    property Period: Double readonly dispid 1610743810;
    property Pulsation: Double readonly dispid 1610743811;
    property Damping: Double readonly dispid 1610743812;
    property Precision: Double readonly dispid 1610743813;
    property Energy: Double readonly dispid 1610743814;
    property AvPartCoeff: Double readonly dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotMassSumServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5D2C16E4-41F0-11D4-B823-0050DA76755E}
// *********************************************************************//
  IRobotMassSumServer = interface(IDispatch)
    ['{5D2C16E4-41F0-11D4-B823-0050DA76755E}']
    function Current(case_num: Integer; mode_num: Integer): IRobotDisplacementData; safecall;
    function Relative(case_num: Integer; mode_num: Integer): IRobotDisplacementData; safecall;
    function Total(case_num: Integer; mode_num: Integer): IRobotDisplacementData; safecall;
    function PartCoeff(case_num: Integer; mode_num: Integer): IRobotDisplacementData; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotMassSumServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5D2C16E4-41F0-11D4-B823-0050DA76755E}
// *********************************************************************//
  IRobotMassSumServerDisp = dispinterface
    ['{5D2C16E4-41F0-11D4-B823-0050DA76755E}']
    function Current(case_num: Integer; mode_num: Integer): IRobotDisplacementData; dispid 1610743808;
    function Relative(case_num: Integer; mode_num: Integer): IRobotDisplacementData; dispid 1610743809;
    function Total(case_num: Integer; mode_num: Integer): IRobotDisplacementData; dispid 1610743810;
    function PartCoeff(case_num: Integer; mode_num: Integer): IRobotDisplacementData; dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotSpectralCoefficients
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5D2C16E6-41F0-11D4-B823-0050DA76755E}
// *********************************************************************//
  IRobotSpectralCoefficients = interface(IDispatch)
    ['{5D2C16E6-41F0-11D4-B823-0050DA76755E}']
    function SpectrCoef(case_num: Integer; mode_num: Integer): Double; safecall;
    function PartCoef(case_num: Integer; mode_num: Integer): IRobotDisplacementData; safecall;
    function ModeCoef(case_num: Integer; mode_num: Integer): IRobotDisplacementData; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotSpectralCoefficientsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5D2C16E6-41F0-11D4-B823-0050DA76755E}
// *********************************************************************//
  IRobotSpectralCoefficientsDisp = dispinterface
    ['{5D2C16E6-41F0-11D4-B823-0050DA76755E}']
    function SpectrCoef(case_num: Integer; mode_num: Integer): Double; dispid 1610743808;
    function PartCoef(case_num: Integer; mode_num: Integer): IRobotDisplacementData; dispid 1610743809;
    function ModeCoef(case_num: Integer; mode_num: Integer): IRobotDisplacementData; dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotEigenvectorsServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3516D052-54B1-11D4-B842-0050DA76755E}
// *********************************************************************//
  IRobotEigenvectorsServer = interface(IDispatch)
    ['{3516D052-54B1-11D4-B842-0050DA76755E}']
    function Value(node_num: Integer; case_num: Integer; mode_num: Integer): IRobotDisplacementData; safecall;
    function CombValue(node_num: Integer; case_num: Integer; mode_cmb: IRobotModeCombinationType): IRobotDisplacementData; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotEigenvectorsServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3516D052-54B1-11D4-B842-0050DA76755E}
// *********************************************************************//
  IRobotEigenvectorsServerDisp = dispinterface
    ['{3516D052-54B1-11D4-B842-0050DA76755E}']
    function Value(node_num: Integer; case_num: Integer; mode_num: Integer): IRobotDisplacementData; dispid 1610743808;
    function CombValue(node_num: Integer; case_num: Integer; mode_cmb: IRobotModeCombinationType): IRobotDisplacementData; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotTimeHistoryResultServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF2F9A52-A04A-401C-A4E2-4538F0552DE6}
// *********************************************************************//
  IRobotTimeHistoryResultServer = interface(IDispatch)
    ['{BF2F9A52-A04A-401C-A4E2-4538F0552DE6}']
    function Value(_node: Integer; _case: Integer; _step: Integer): IRobotTimeHistoryResults; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotTimeHistoryResultServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF2F9A52-A04A-401C-A4E2-4538F0552DE6}
// *********************************************************************//
  IRobotTimeHistoryResultServerDisp = dispinterface
    ['{BF2F9A52-A04A-401C-A4E2-4538F0552DE6}']
    function Value(_node: Integer; _case: Integer; _step: Integer): IRobotTimeHistoryResults; dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRobotTimeHistoryResults
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE79FD8C-F199-4C00-A39D-B49D3CB91058}
// *********************************************************************//
  IRobotTimeHistoryResults = interface(IDispatch)
    ['{EE79FD8C-F199-4C00-A39D-B49D3CB91058}']
    function Get_vx: Double; safecall;
    function Get_vy: Double; safecall;
    function Get_vz: Double; safecall;
    function Get_VRX: Double; safecall;
    function Get_VRY: Double; safecall;
    function Get_VRZ: Double; safecall;
    function Get_AX: Double; safecall;
    function Get_AY: Double; safecall;
    function Get_AZ: Double; safecall;
    function Get_ARX: Double; safecall;
    function Get_ARY: Double; safecall;
    function Get_ARZ: Double; safecall;
    function Get_Time: Double; safecall;
    property vx: Double read Get_vx;
    property vy: Double read Get_vy;
    property vz: Double read Get_vz;
    property VRX: Double read Get_VRX;
    property VRY: Double read Get_VRY;
    property VRZ: Double read Get_VRZ;
    property AX: Double read Get_AX;
    property AY: Double read Get_AY;
    property AZ: Double read Get_AZ;
    property ARX: Double read Get_ARX;
    property ARY: Double read Get_ARY;
    property ARZ: Double read Get_ARZ;
    property Time: Double read Get_Time;
  end;

// *********************************************************************//
// DispIntf:  IRobotTimeHistoryResultsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE79FD8C-F199-4C00-A39D-B49D3CB91058}
// *********************************************************************//
  IRobotTimeHistoryResultsDisp = dispinterface
    ['{EE79FD8C-F199-4C00-A39D-B49D3CB91058}']
    property vx: Double readonly dispid 1610743808;
    property vy: Double readonly dispid 1610743809;
    property vz: Double readonly dispid 1610743810;
    property VRX: Double readonly dispid 1610743811;
    property VRY: Double readonly dispid 1610743812;
    property VRZ: Double readonly dispid 1610743813;
    property AX: Double readonly dispid 1610743814;
    property AY: Double readonly dispid 1610743815;
    property AZ: Double readonly dispid 1610743816;
    property ARX: Double readonly dispid 1610743817;
    property ARY: Double readonly dispid 1610743818;
    property ARZ: Double readonly dispid 1610743819;
    property Time: Double readonly dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRobotFRFResultServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {457A6489-D1EC-44EA-8C11-29A81108BA5E}
// *********************************************************************//
  IRobotFRFResultServer = interface(IDispatch)
    ['{457A6489-D1EC-44EA-8C11-29A81108BA5E}']
    function Value(_node: Integer; _case: Integer; _step: Integer): IRobotFRFResults; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotFRFResultServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {457A6489-D1EC-44EA-8C11-29A81108BA5E}
// *********************************************************************//
  IRobotFRFResultServerDisp = dispinterface
    ['{457A6489-D1EC-44EA-8C11-29A81108BA5E}']
    function Value(_node: Integer; _case: Integer; _step: Integer): IRobotFRFResults; dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRobotFRFResults
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CC5BFD97-6E81-4E42-B78B-16FF70D71696}
// *********************************************************************//
  IRobotFRFResults = interface(IDispatch)
    ['{CC5BFD97-6E81-4E42-B78B-16FF70D71696}']
    function Get_vx: Double; safecall;
    function Get_vy: Double; safecall;
    function Get_vz: Double; safecall;
    function Get_Frequency: Double; safecall;
    property vx: Double read Get_vx;
    property vy: Double read Get_vy;
    property vz: Double read Get_vz;
    property Frequency: Double read Get_Frequency;
  end;

// *********************************************************************//
// DispIntf:  IRobotFRFResultsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CC5BFD97-6E81-4E42-B78B-16FF70D71696}
// *********************************************************************//
  IRobotFRFResultsDisp = dispinterface
    ['{CC5BFD97-6E81-4E42-B78B-16FF70D71696}']
    property vx: Double readonly dispid 1610743808;
    property vy: Double readonly dispid 1610743809;
    property vz: Double readonly dispid 1610743810;
    property Frequency: Double readonly dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotFootfallResults
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BC150BF4-2301-46A7-891E-5A76D4A21334}
// *********************************************************************//
  IRobotFootfallResults = interface(IDispatch)
    ['{BC150BF4-2301-46A7-891E-5A76D4A21334}']
    function Get_A: Double; safecall;
    function Get_RF_Resonant: Double; safecall;
    function Get_RF_Transient: Double; safecall;
    function Get_RF_Overall: Double; safecall;
    function Get_VRMS: Double; safecall;
    function Get_VRMQ: Double; safecall;
    function Get_ExcitationNode: Integer; safecall;
    function Get_Frequency: Double; safecall;
    property A: Double read Get_A;
    property RF_Resonant: Double read Get_RF_Resonant;
    property RF_Transient: Double read Get_RF_Transient;
    property RF_Overall: Double read Get_RF_Overall;
    property VRMS: Double read Get_VRMS;
    property VRMQ: Double read Get_VRMQ;
    property ExcitationNode: Integer read Get_ExcitationNode;
    property Frequency: Double read Get_Frequency;
  end;

// *********************************************************************//
// DispIntf:  IRobotFootfallResultsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BC150BF4-2301-46A7-891E-5A76D4A21334}
// *********************************************************************//
  IRobotFootfallResultsDisp = dispinterface
    ['{BC150BF4-2301-46A7-891E-5A76D4A21334}']
    property A: Double readonly dispid 1610743808;
    property RF_Resonant: Double readonly dispid 1610743809;
    property RF_Transient: Double readonly dispid 1610743810;
    property RF_Overall: Double readonly dispid 1610743811;
    property VRMS: Double readonly dispid 1610743812;
    property VRMQ: Double readonly dispid 1610743813;
    property ExcitationNode: Integer readonly dispid 1610743814;
    property Frequency: Double readonly dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotFeResultServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B65378E2-192C-11D5-B8DE-0050DA76755E}
// *********************************************************************//
  IRobotFeResultServer = interface(IDispatch)
    ['{B65378E2-192C-11D5-B8DE-0050DA76755E}']
    function Detailed(const _param: IRobotFeResultParams): IRobotFeResultDetailed; safecall;
    function Principal(const _param: IRobotFeResultParams): IRobotFeResultPrincipal; safecall;
    function Complex(const _param: IRobotFeResultParams): IRobotFeResultComplex; safecall;
    function Reinforcement(_elem_or_panel: Integer; _node: Integer): IRobotFeResultReinforcement; safecall;
    function Reduced(_panel: Integer; _cut: IRobotFeResultReducedCutPosition; _case: Integer): IRobotFeResultReduced; safecall;
    function Get_PanelCuts: IRobotPanelCutMngr; safecall;
    function MinValue(const _params: IRobotFeExtremeParams): IRobotFeExtremeValue; safecall;
    function MaxValue(const _params: IRobotFeExtremeParams): IRobotFeExtremeValue; safecall;
    function MultiMinValue(const _params: IRobotFeExtremeParams; 
                           const _result_ids: IRobotFeMultiResultType): IRobotFeMultiExtremeValue; safecall;
    function MultiMaxValue(const _params: IRobotFeExtremeParams; 
                           const _result_ids: IRobotFeMultiResultType): IRobotFeMultiExtremeValue; safecall;
    function ReducedEx(_panel: Integer; _part_idx: Integer; 
                       _cut_pos: IRobotFeResultReducedCutPosition; _case: Integer; 
                       _case_cmpnt: Integer): IRobotFeResultReduced; safecall;
    property PanelCuts: IRobotPanelCutMngr read Get_PanelCuts;
  end;

// *********************************************************************//
// DispIntf:  IRobotFeResultServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B65378E2-192C-11D5-B8DE-0050DA76755E}
// *********************************************************************//
  IRobotFeResultServerDisp = dispinterface
    ['{B65378E2-192C-11D5-B8DE-0050DA76755E}']
    function Detailed(const _param: IRobotFeResultParams): IRobotFeResultDetailed; dispid 1610743808;
    function Principal(const _param: IRobotFeResultParams): IRobotFeResultPrincipal; dispid 1610743809;
    function Complex(const _param: IRobotFeResultParams): IRobotFeResultComplex; dispid 1610743810;
    function Reinforcement(_elem_or_panel: Integer; _node: Integer): IRobotFeResultReinforcement; dispid 1610743811;
    function Reduced(_panel: Integer; _cut: IRobotFeResultReducedCutPosition; _case: Integer): IRobotFeResultReduced; dispid 1610743812;
    property PanelCuts: IRobotPanelCutMngr readonly dispid 1610743813;
    function MinValue(const _params: IRobotFeExtremeParams): IRobotFeExtremeValue; dispid 1610743814;
    function MaxValue(const _params: IRobotFeExtremeParams): IRobotFeExtremeValue; dispid 1610743815;
    function MultiMinValue(const _params: IRobotFeExtremeParams; 
                           const _result_ids: IRobotFeMultiResultType): IRobotFeMultiExtremeValue; dispid 1610743816;
    function MultiMaxValue(const _params: IRobotFeExtremeParams; 
                           const _result_ids: IRobotFeMultiResultType): IRobotFeMultiExtremeValue; dispid 1610743817;
    function ReducedEx(_panel: Integer; _part_idx: Integer; 
                       _cut_pos: IRobotFeResultReducedCutPosition; _case: Integer; 
                       _case_cmpnt: Integer): IRobotFeResultReduced; dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRobotFeResultParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5477A032-191C-11D5-B8DE-0050DA76755E}
// *********************************************************************//
  IRobotFeResultParams = interface(IDispatch)
    ['{5477A032-191C-11D5-B8DE-0050DA76755E}']
    function Get_Panel: Integer; safecall;
    procedure Set_Panel(ret: Integer); safecall;
    function Get_Node: Integer; safecall;
    procedure Set_Node(ret: Integer); safecall;
    function Get_Case_: Integer; safecall;
    procedure Set_Case_(ret: Integer); safecall;
    function Get_Layer: IRobotFeLayerType; safecall;
    procedure Set_Layer(ret: IRobotFeLayerType); safecall;
    function Get_CaseCmpnt: Integer; safecall;
    procedure Set_CaseCmpnt(ret: Integer); safecall;
    function Get_Element: Integer; safecall;
    procedure Set_Element(ret: Integer); safecall;
    function Get_LayerArbitraryValue: Double; safecall;
    procedure Set_LayerArbitraryValue(ret: Double); safecall;
    function Get_ModeCmb: IRobotModeCombinationType; safecall;
    procedure Set_ModeCmb(ret: IRobotModeCombinationType); safecall;
    function Get_CalcMethod: IRobotReinforceCalcMethods; safecall;
    procedure Set_CalcMethod(ret: IRobotReinforceCalcMethods); safecall;
    procedure SetDirX(_def_type: IRobotObjLocalXDirDefinitionType; _x: Double; _y: Double; 
                      _z: Double); safecall;
    function GetDirX(out _x: Double; out _y: Double; out _z: Double): IRobotObjLocalXDirDefinitionType; safecall;
    property Panel: Integer read Get_Panel write Set_Panel;
    property Node: Integer read Get_Node write Set_Node;
    property Case_: Integer read Get_Case_ write Set_Case_;
    property Layer: IRobotFeLayerType read Get_Layer write Set_Layer;
    property CaseCmpnt: Integer read Get_CaseCmpnt write Set_CaseCmpnt;
    property Element: Integer read Get_Element write Set_Element;
    property LayerArbitraryValue: Double read Get_LayerArbitraryValue write Set_LayerArbitraryValue;
    property ModeCmb: IRobotModeCombinationType read Get_ModeCmb write Set_ModeCmb;
    property CalcMethod: IRobotReinforceCalcMethods read Get_CalcMethod write Set_CalcMethod;
  end;

// *********************************************************************//
// DispIntf:  IRobotFeResultParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5477A032-191C-11D5-B8DE-0050DA76755E}
// *********************************************************************//
  IRobotFeResultParamsDisp = dispinterface
    ['{5477A032-191C-11D5-B8DE-0050DA76755E}']
    property Panel: Integer dispid 1610743808;
    property Node: Integer dispid 1610743810;
    property Case_: Integer dispid 1610743812;
    property Layer: IRobotFeLayerType dispid 1610743814;
    property CaseCmpnt: Integer dispid 1610743816;
    property Element: Integer dispid 1610743818;
    property LayerArbitraryValue: Double dispid 1610743820;
    property ModeCmb: IRobotModeCombinationType dispid 1610743822;
    property CalcMethod: IRobotReinforceCalcMethods dispid 1610743824;
    procedure SetDirX(_def_type: IRobotObjLocalXDirDefinitionType; _x: Double; _y: Double; 
                      _z: Double); dispid 1610743826;
    function GetDirX(out _x: Double; out _y: Double; out _z: Double): IRobotObjLocalXDirDefinitionType; dispid 1610743827;
  end;

// *********************************************************************//
// Interface: IRobotFeResultDetailed
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B65378E4-192C-11D5-B8DE-0050DA76755E}
// *********************************************************************//
  IRobotFeResultDetailed = interface(IDispatch)
    ['{B65378E4-192C-11D5-B8DE-0050DA76755E}']
    function Get_SXX: Double; safecall;
    function Get_SYY: Double; safecall;
    function Get_SXY: Double; safecall;
    function Get_NXX: Double; safecall;
    function Get_NYY: Double; safecall;
    function Get_NXY: Double; safecall;
    function Get_MXX: Double; safecall;
    function Get_MYY: Double; safecall;
    function Get_MXY: Double; safecall;
    function Get_TXX: Double; safecall;
    function Get_TYY: Double; safecall;
    function Get_QXX: Double; safecall;
    function Get_QYY: Double; safecall;
    function Get_UXX: Double; safecall;
    function Get_UYY: Double; safecall;
    function Get_WNorm: Double; safecall;
    function Get_RXX: Double; safecall;
    function Get_RYY: Double; safecall;
    function Get_RNorm: Double; safecall;
    function Get_PNorm: Double; safecall;
    property SXX: Double read Get_SXX;
    property SYY: Double read Get_SYY;
    property SXY: Double read Get_SXY;
    property NXX: Double read Get_NXX;
    property NYY: Double read Get_NYY;
    property NXY: Double read Get_NXY;
    property MXX: Double read Get_MXX;
    property MYY: Double read Get_MYY;
    property MXY: Double read Get_MXY;
    property TXX: Double read Get_TXX;
    property TYY: Double read Get_TYY;
    property QXX: Double read Get_QXX;
    property QYY: Double read Get_QYY;
    property UXX: Double read Get_UXX;
    property UYY: Double read Get_UYY;
    property WNorm: Double read Get_WNorm;
    property RXX: Double read Get_RXX;
    property RYY: Double read Get_RYY;
    property RNorm: Double read Get_RNorm;
    property PNorm: Double read Get_PNorm;
  end;

// *********************************************************************//
// DispIntf:  IRobotFeResultDetailedDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B65378E4-192C-11D5-B8DE-0050DA76755E}
// *********************************************************************//
  IRobotFeResultDetailedDisp = dispinterface
    ['{B65378E4-192C-11D5-B8DE-0050DA76755E}']
    property SXX: Double readonly dispid 1610743808;
    property SYY: Double readonly dispid 1610743809;
    property SXY: Double readonly dispid 1610743810;
    property NXX: Double readonly dispid 1610743811;
    property NYY: Double readonly dispid 1610743812;
    property NXY: Double readonly dispid 1610743813;
    property MXX: Double readonly dispid 1610743814;
    property MYY: Double readonly dispid 1610743815;
    property MXY: Double readonly dispid 1610743816;
    property TXX: Double readonly dispid 1610743817;
    property TYY: Double readonly dispid 1610743818;
    property QXX: Double readonly dispid 1610743819;
    property QYY: Double readonly dispid 1610743820;
    property UXX: Double readonly dispid 1610743821;
    property UYY: Double readonly dispid 1610743822;
    property WNorm: Double readonly dispid 1610743823;
    property RXX: Double readonly dispid 1610743824;
    property RYY: Double readonly dispid 1610743825;
    property RNorm: Double readonly dispid 1610743826;
    property PNorm: Double readonly dispid 1610743827;
  end;

// *********************************************************************//
// Interface: IRobotFeResultPrincipal
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63D4E832-22B5-11D5-B8EB-FFFFFF000000}
// *********************************************************************//
  IRobotFeResultPrincipal = interface(IDispatch)
    ['{63D4E832-22B5-11D5-B8EB-FFFFFF000000}']
    function Get_S1: Double; safecall;
    function Get_S2: Double; safecall;
    function Get_S1_2: Double; safecall;
    function Get_SAL: Double; safecall;
    function Get_N1: Double; safecall;
    function Get_N2: Double; safecall;
    function Get_N1_2: Double; safecall;
    function Get_NAL: Double; safecall;
    function Get_M1: Double; safecall;
    function Get_M2: Double; safecall;
    function Get_M1_2: Double; safecall;
    function Get_MAL: Double; safecall;
    function Get_T1_2: Double; safecall;
    function Get_Q1_2: Double; safecall;
    function Get_UGX: Double; safecall;
    function Get_UGY: Double; safecall;
    function Get_UGZ: Double; safecall;
    function Get_U: Double; safecall;
    property S1: Double read Get_S1;
    property S2: Double read Get_S2;
    property S1_2: Double read Get_S1_2;
    property SAL: Double read Get_SAL;
    property N1: Double read Get_N1;
    property N2: Double read Get_N2;
    property N1_2: Double read Get_N1_2;
    property NAL: Double read Get_NAL;
    property M1: Double read Get_M1;
    property M2: Double read Get_M2;
    property M1_2: Double read Get_M1_2;
    property MAL: Double read Get_MAL;
    property T1_2: Double read Get_T1_2;
    property Q1_2: Double read Get_Q1_2;
    property UGX: Double read Get_UGX;
    property UGY: Double read Get_UGY;
    property UGZ: Double read Get_UGZ;
    property U: Double read Get_U;
  end;

// *********************************************************************//
// DispIntf:  IRobotFeResultPrincipalDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63D4E832-22B5-11D5-B8EB-FFFFFF000000}
// *********************************************************************//
  IRobotFeResultPrincipalDisp = dispinterface
    ['{63D4E832-22B5-11D5-B8EB-FFFFFF000000}']
    property S1: Double readonly dispid 1610743808;
    property S2: Double readonly dispid 1610743809;
    property S1_2: Double readonly dispid 1610743810;
    property SAL: Double readonly dispid 1610743811;
    property N1: Double readonly dispid 1610743812;
    property N2: Double readonly dispid 1610743813;
    property N1_2: Double readonly dispid 1610743814;
    property NAL: Double readonly dispid 1610743815;
    property M1: Double readonly dispid 1610743816;
    property M2: Double readonly dispid 1610743817;
    property M1_2: Double readonly dispid 1610743818;
    property MAL: Double readonly dispid 1610743819;
    property T1_2: Double readonly dispid 1610743820;
    property Q1_2: Double readonly dispid 1610743821;
    property UGX: Double readonly dispid 1610743822;
    property UGY: Double readonly dispid 1610743823;
    property UGZ: Double readonly dispid 1610743824;
    property U: Double readonly dispid 1610743825;
  end;

// *********************************************************************//
// Interface: IRobotFeResultComplex
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0E7E147F-2201-4721-AC62-BD6EE52FDC47}
// *********************************************************************//
  IRobotFeResultComplex = interface(IDispatch)
    ['{0E7E147F-2201-4721-AC62-BD6EE52FDC47}']
    function Get_MXX_TOP: Double; safecall;
    function Get_MXX_BOTTOM: Double; safecall;
    function Get_MYY_TOP: Double; safecall;
    function Get_MYY_BOTTOM: Double; safecall;
    function Get_S_MISES: Double; safecall;
    function Get_N_MISES: Double; safecall;
    function Get_M_MISES: Double; safecall;
    property MXX_TOP: Double read Get_MXX_TOP;
    property MXX_BOTTOM: Double read Get_MXX_BOTTOM;
    property MYY_TOP: Double read Get_MYY_TOP;
    property MYY_BOTTOM: Double read Get_MYY_BOTTOM;
    property S_MISES: Double read Get_S_MISES;
    property N_MISES: Double read Get_N_MISES;
    property M_MISES: Double read Get_M_MISES;
  end;

// *********************************************************************//
// DispIntf:  IRobotFeResultComplexDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0E7E147F-2201-4721-AC62-BD6EE52FDC47}
// *********************************************************************//
  IRobotFeResultComplexDisp = dispinterface
    ['{0E7E147F-2201-4721-AC62-BD6EE52FDC47}']
    property MXX_TOP: Double readonly dispid 1610743808;
    property MXX_BOTTOM: Double readonly dispid 1610743809;
    property MYY_TOP: Double readonly dispid 1610743810;
    property MYY_BOTTOM: Double readonly dispid 1610743811;
    property S_MISES: Double readonly dispid 1610743812;
    property N_MISES: Double readonly dispid 1610743813;
    property M_MISES: Double readonly dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotFeResultReinforcement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {80C44EE2-2E8C-4AA6-ACD9-514A25DDFB69}
// *********************************************************************//
  IRobotFeResultReinforcement = interface(IDispatch)
    ['{80C44EE2-2E8C-4AA6-ACD9-514A25DDFB69}']
    function Get_AY_TOP: Double; safecall;
    function Get_AY_BOTTOM: Double; safecall;
    function Get_AX_TOP: Double; safecall;
    function Get_AX_BOTTOM: Double; safecall;
    function Get_E_AY_TOP: Double; safecall;
    function Get_E_AY_BOTTOM: Double; safecall;
    function Get_E_AX_TOP: Double; safecall;
    function Get_E_AX_BOTTOM: Double; safecall;
    function Get_A_MIN: Double; safecall;
    function Get_AY: Double; safecall;
    function Get_AX: Double; safecall;
    function Get_F: Double; safecall;
    function Get_CalcError: WordBool; safecall;
    property AY_TOP: Double read Get_AY_TOP;
    property AY_BOTTOM: Double read Get_AY_BOTTOM;
    property AX_TOP: Double read Get_AX_TOP;
    property AX_BOTTOM: Double read Get_AX_BOTTOM;
    property E_AY_TOP: Double read Get_E_AY_TOP;
    property E_AY_BOTTOM: Double read Get_E_AY_BOTTOM;
    property E_AX_TOP: Double read Get_E_AX_TOP;
    property E_AX_BOTTOM: Double read Get_E_AX_BOTTOM;
    property A_MIN: Double read Get_A_MIN;
    property AY: Double read Get_AY;
    property AX: Double read Get_AX;
    property F: Double read Get_F;
    property CalcError: WordBool read Get_CalcError;
  end;

// *********************************************************************//
// DispIntf:  IRobotFeResultReinforcementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {80C44EE2-2E8C-4AA6-ACD9-514A25DDFB69}
// *********************************************************************//
  IRobotFeResultReinforcementDisp = dispinterface
    ['{80C44EE2-2E8C-4AA6-ACD9-514A25DDFB69}']
    property AY_TOP: Double readonly dispid 1610743808;
    property AY_BOTTOM: Double readonly dispid 1610743809;
    property AX_TOP: Double readonly dispid 1610743810;
    property AX_BOTTOM: Double readonly dispid 1610743811;
    property E_AY_TOP: Double readonly dispid 1610743812;
    property E_AY_BOTTOM: Double readonly dispid 1610743813;
    property E_AX_TOP: Double readonly dispid 1610743814;
    property E_AX_BOTTOM: Double readonly dispid 1610743815;
    property A_MIN: Double readonly dispid 1610743816;
    property AY: Double readonly dispid 1610743817;
    property AX: Double readonly dispid 1610743818;
    property F: Double readonly dispid 1610743819;
    property CalcError: WordBool readonly dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRobotFeResultReduced
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5FE03B67-F8FB-488A-ACEC-C4B1B836B4A6}
// *********************************************************************//
  IRobotFeResultReduced = interface(IDispatch)
    ['{5FE03B67-F8FB-488A-ACEC-C4B1B836B4A6}']
    function Get_NX: Double; safecall;
    function Get_MZ: Double; safecall;
    function Get_TY: Double; safecall;
    function Get_SO: Double; safecall;
    function Get_SE: Double; safecall;
    function Get_T: Double; safecall;
    function Get_TZ: Double; safecall;
    function Get_MY: Double; safecall;
    function Get_Length: Double; safecall;
    function Get_Height: Double; safecall;
    function Get_CutPos: IRobotFeResultReducedCutPosition; safecall;
    function Get_NodeLeftTop: Integer; safecall;
    function Get_NodeRightTop: Integer; safecall;
    function Get_NodeLeftBottom: Integer; safecall;
    function Get_NodeRightBottom: Integer; safecall;
    property NX: Double read Get_NX;
    property MZ: Double read Get_MZ;
    property TY: Double read Get_TY;
    property SO: Double read Get_SO;
    property SE: Double read Get_SE;
    property T: Double read Get_T;
    property TZ: Double read Get_TZ;
    property MY: Double read Get_MY;
    property Length: Double read Get_Length;
    property Height: Double read Get_Height;
    property CutPos: IRobotFeResultReducedCutPosition read Get_CutPos;
    property NodeLeftTop: Integer read Get_NodeLeftTop;
    property NodeRightTop: Integer read Get_NodeRightTop;
    property NodeLeftBottom: Integer read Get_NodeLeftBottom;
    property NodeRightBottom: Integer read Get_NodeRightBottom;
  end;

// *********************************************************************//
// DispIntf:  IRobotFeResultReducedDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5FE03B67-F8FB-488A-ACEC-C4B1B836B4A6}
// *********************************************************************//
  IRobotFeResultReducedDisp = dispinterface
    ['{5FE03B67-F8FB-488A-ACEC-C4B1B836B4A6}']
    property NX: Double readonly dispid 1610743808;
    property MZ: Double readonly dispid 1610743809;
    property TY: Double readonly dispid 1610743810;
    property SO: Double readonly dispid 1610743811;
    property SE: Double readonly dispid 1610743812;
    property T: Double readonly dispid 1610743813;
    property TZ: Double readonly dispid 1610743814;
    property MY: Double readonly dispid 1610743815;
    property Length: Double readonly dispid 1610743816;
    property Height: Double readonly dispid 1610743817;
    property CutPos: IRobotFeResultReducedCutPosition readonly dispid 1610743818;
    property NodeLeftTop: Integer readonly dispid 1610743819;
    property NodeRightTop: Integer readonly dispid 1610743820;
    property NodeLeftBottom: Integer readonly dispid 1610743821;
    property NodeRightBottom: Integer readonly dispid 1610743822;
  end;

// *********************************************************************//
// Interface: IRobotPanelCutMngr
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {727FE479-C4B7-441D-8737-92313A65A661}
// *********************************************************************//
  IRobotPanelCutMngr = interface(IDispatch)
    ['{727FE479-C4B7-441D-8737-92313A65A661}']
    function Get_Count: Integer; safecall;
    function Get(_idx: Integer): IRobotPanelCut; safecall;
    function Create: IRobotPanelCut; safecall;
    function Find(const _cut_name: WideString): Integer; safecall;
    procedure Store(const _cut: IRobotPanelCut; const _name: WideString); safecall;
    function GetName(_idx: Integer): WideString; safecall;
    procedure Remove(_idx: Integer); safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotPanelCutMngrDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {727FE479-C4B7-441D-8737-92313A65A661}
// *********************************************************************//
  IRobotPanelCutMngrDisp = dispinterface
    ['{727FE479-C4B7-441D-8737-92313A65A661}']
    property Count: Integer readonly dispid 1610743808;
    function Get(_idx: Integer): IRobotPanelCut; dispid 1610743809;
    function Create: IRobotPanelCut; dispid 1610743810;
    function Find(const _cut_name: WideString): Integer; dispid 1610743811;
    procedure Store(const _cut: IRobotPanelCut; const _name: WideString); dispid 1610743812;
    function GetName(_idx: Integer): WideString; dispid 1610743813;
    procedure Remove(_idx: Integer); dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotPanelCut
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {48B4EB8A-C7EC-4529-BB93-952532FE97B8}
// *********************************************************************//
  IRobotPanelCut = interface(IDispatch)
    ['{48B4EB8A-C7EC-4529-BB93-952532FE97B8}']
    function Get_Point1: IRobotGeoPoint3D; safecall;
    function Get_Point2: IRobotGeoPoint3D; safecall;
    function Get_Point3: IRobotGeoPoint3D; safecall;
    function Get_DefinitionType: IRobotPanelCutDefinitionType; safecall;
    procedure Set_DefinitionType(ret: IRobotPanelCutDefinitionType); safecall;
    function Get_Color: Integer; safecall;
    procedure Set_Color(ret: Integer); safecall;
    function Get_Active: WordBool; safecall;
    procedure Set_Active(ret: WordBool); safecall;
    property Point1: IRobotGeoPoint3D read Get_Point1;
    property Point2: IRobotGeoPoint3D read Get_Point2;
    property Point3: IRobotGeoPoint3D read Get_Point3;
    property DefinitionType: IRobotPanelCutDefinitionType read Get_DefinitionType write Set_DefinitionType;
    property Color: Integer read Get_Color write Set_Color;
    property Active: WordBool read Get_Active write Set_Active;
  end;

// *********************************************************************//
// DispIntf:  IRobotPanelCutDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {48B4EB8A-C7EC-4529-BB93-952532FE97B8}
// *********************************************************************//
  IRobotPanelCutDisp = dispinterface
    ['{48B4EB8A-C7EC-4529-BB93-952532FE97B8}']
    property Point1: IRobotGeoPoint3D readonly dispid 1610743808;
    property Point2: IRobotGeoPoint3D readonly dispid 1610743809;
    property Point3: IRobotGeoPoint3D readonly dispid 1610743810;
    property DefinitionType: IRobotPanelCutDefinitionType dispid 1610743811;
    property Color: Integer dispid 1610743813;
    property Active: WordBool dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotFeExtremeParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4CF01CFB-532C-4CB4-A9EF-9E6BB86A4D21}
// *********************************************************************//
  IRobotFeExtremeParams = interface(IDispatch)
    ['{4CF01CFB-532C-4CB4-A9EF-9E6BB86A4D21}']
    function Get_ResultId: IRobotFeResultType; safecall;
    procedure Set_ResultId(ret: IRobotFeResultType); safecall;
    function Get_PanelSel: WideString; safecall;
    procedure Set_PanelSel(const ret: WideString); safecall;
    function Get_ElementSel: WideString; safecall;
    procedure Set_ElementSel(const ret: WideString); safecall;
    function Get_NodeSel: WideString; safecall;
    procedure Set_NodeSel(const ret: WideString); safecall;
    function Get_CaseSel: WideString; safecall;
    procedure Set_CaseSel(const ret: WideString); safecall;
    function Get_Layer: IRobotFeLayerType; safecall;
    procedure Set_Layer(ret: IRobotFeLayerType); safecall;
    function Get_LayerArbitraryValue: Double; safecall;
    procedure Set_LayerArbitraryValue(ret: Double); safecall;
    function Get_Smoothing: IRobotFeResultSmoothing; safecall;
    procedure Set_Smoothing(ret: IRobotFeResultSmoothing); safecall;
    function Get_ReducedCutPos: IRobotFeResultReducedCutPosition; safecall;
    procedure Set_ReducedCutPos(ret: IRobotFeResultReducedCutPosition); safecall;
    procedure SetDirX(_def_type: IRobotObjLocalXDirDefinitionType; _x: Double; _y: Double; 
                      _z: Double); safecall;
    function GetDirX(out _x: Double; out _y: Double; out _z: Double): IRobotObjLocalXDirDefinitionType; safecall;
    procedure Reset; safecall;
    function Get_CaseCmpnt: Integer; safecall;
    procedure Set_CaseCmpnt(ret: Integer); safecall;
    function Get_ModeCmb: IRobotModeCombinationType; safecall;
    procedure Set_ModeCmb(ret: IRobotModeCombinationType); safecall;
    property ResultId: IRobotFeResultType read Get_ResultId write Set_ResultId;
    property PanelSel: WideString read Get_PanelSel write Set_PanelSel;
    property ElementSel: WideString read Get_ElementSel write Set_ElementSel;
    property NodeSel: WideString read Get_NodeSel write Set_NodeSel;
    property CaseSel: WideString read Get_CaseSel write Set_CaseSel;
    property Layer: IRobotFeLayerType read Get_Layer write Set_Layer;
    property LayerArbitraryValue: Double read Get_LayerArbitraryValue write Set_LayerArbitraryValue;
    property Smoothing: IRobotFeResultSmoothing read Get_Smoothing write Set_Smoothing;
    property ReducedCutPos: IRobotFeResultReducedCutPosition read Get_ReducedCutPos write Set_ReducedCutPos;
    property CaseCmpnt: Integer read Get_CaseCmpnt write Set_CaseCmpnt;
    property ModeCmb: IRobotModeCombinationType read Get_ModeCmb write Set_ModeCmb;
  end;

// *********************************************************************//
// DispIntf:  IRobotFeExtremeParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4CF01CFB-532C-4CB4-A9EF-9E6BB86A4D21}
// *********************************************************************//
  IRobotFeExtremeParamsDisp = dispinterface
    ['{4CF01CFB-532C-4CB4-A9EF-9E6BB86A4D21}']
    property ResultId: IRobotFeResultType dispid 1610743808;
    property PanelSel: WideString dispid 1610743810;
    property ElementSel: WideString dispid 1610743812;
    property NodeSel: WideString dispid 1610743814;
    property CaseSel: WideString dispid 1610743816;
    property Layer: IRobotFeLayerType dispid 1610743818;
    property LayerArbitraryValue: Double dispid 1610743820;
    property Smoothing: IRobotFeResultSmoothing dispid 1610743822;
    property ReducedCutPos: IRobotFeResultReducedCutPosition dispid 1610743824;
    procedure SetDirX(_def_type: IRobotObjLocalXDirDefinitionType; _x: Double; _y: Double; 
                      _z: Double); dispid 1610743826;
    function GetDirX(out _x: Double; out _y: Double; out _z: Double): IRobotObjLocalXDirDefinitionType; dispid 1610743827;
    procedure Reset; dispid 1610743828;
    property CaseCmpnt: Integer dispid 1610743829;
    property ModeCmb: IRobotModeCombinationType dispid 1610743831;
  end;

// *********************************************************************//
// Interface: IRobotFeExtremeValue
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6CF0C60E-7E47-4797-9AFF-F04E37DDECAA}
// *********************************************************************//
  IRobotFeExtremeValue = interface(IDispatch)
    ['{6CF0C60E-7E47-4797-9AFF-F04E37DDECAA}']
    function Get_ResultId: IRobotFeResultType; safecall;
    function Get_Value: Double; safecall;
    function Get_IsAvailable: WordBool; safecall;
    function Get_Smoothing: IRobotFeResultSmoothing; safecall;
    function Get_Node: Integer; safecall;
    function Get_Panel: Integer; safecall;
    function Get_Element: Integer; safecall;
    function Get_Case_: Integer; safecall;
    function Get_CaseCmpnt: Integer; safecall;
    function Get_ModeCmb: IRobotModeCombinationType; safecall;
    function Get_Layer: IRobotFeLayerType; safecall;
    function Get_LayerArbitraryValue: Double; safecall;
    function Get_ReducedCutPos: IRobotFeResultReducedCutPosition; safecall;
    function GetDirX(out _x: Double; out _y: Double; out _z: Double): IRobotObjLocalXDirDefinitionType; safecall;
    property ResultId: IRobotFeResultType read Get_ResultId;
    property Value: Double read Get_Value;
    property IsAvailable: WordBool read Get_IsAvailable;
    property Smoothing: IRobotFeResultSmoothing read Get_Smoothing;
    property Node: Integer read Get_Node;
    property Panel: Integer read Get_Panel;
    property Element: Integer read Get_Element;
    property Case_: Integer read Get_Case_;
    property CaseCmpnt: Integer read Get_CaseCmpnt;
    property ModeCmb: IRobotModeCombinationType read Get_ModeCmb;
    property Layer: IRobotFeLayerType read Get_Layer;
    property LayerArbitraryValue: Double read Get_LayerArbitraryValue;
    property ReducedCutPos: IRobotFeResultReducedCutPosition read Get_ReducedCutPos;
  end;

// *********************************************************************//
// DispIntf:  IRobotFeExtremeValueDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6CF0C60E-7E47-4797-9AFF-F04E37DDECAA}
// *********************************************************************//
  IRobotFeExtremeValueDisp = dispinterface
    ['{6CF0C60E-7E47-4797-9AFF-F04E37DDECAA}']
    property ResultId: IRobotFeResultType readonly dispid 1610743808;
    property Value: Double readonly dispid 1610743809;
    property IsAvailable: WordBool readonly dispid 1610743810;
    property Smoothing: IRobotFeResultSmoothing readonly dispid 1610743811;
    property Node: Integer readonly dispid 1610743812;
    property Panel: Integer readonly dispid 1610743813;
    property Element: Integer readonly dispid 1610743814;
    property Case_: Integer readonly dispid 1610743815;
    property CaseCmpnt: Integer readonly dispid 1610743816;
    property ModeCmb: IRobotModeCombinationType readonly dispid 1610743817;
    property Layer: IRobotFeLayerType readonly dispid 1610743818;
    property LayerArbitraryValue: Double readonly dispid 1610743819;
    property ReducedCutPos: IRobotFeResultReducedCutPosition readonly dispid 1610743820;
    function GetDirX(out _x: Double; out _y: Double; out _z: Double): IRobotObjLocalXDirDefinitionType; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IRobotFeMultiResultType
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {87F73842-D429-408F-856F-2FFD2DD90EA0}
// *********************************************************************//
  IRobotFeMultiResultType = interface(IDispatch)
    ['{87F73842-D429-408F-856F-2FFD2DD90EA0}']
    function Get_Count: Integer; safecall;
    procedure Add(_result_type: IRobotFeResultType); safecall;
    procedure Remove(_result_type: IRobotFeResultType); safecall;
    function Get(_idx: Integer): IRobotFeResultType; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotFeMultiResultTypeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {87F73842-D429-408F-856F-2FFD2DD90EA0}
// *********************************************************************//
  IRobotFeMultiResultTypeDisp = dispinterface
    ['{87F73842-D429-408F-856F-2FFD2DD90EA0}']
    property Count: Integer readonly dispid 1610743808;
    procedure Add(_result_type: IRobotFeResultType); dispid 1610743809;
    procedure Remove(_result_type: IRobotFeResultType); dispid 1610743810;
    function Get(_idx: Integer): IRobotFeResultType; dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotFeMultiExtremeValue
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3B05F3DB-BD6A-4FB0-9540-94BC7E2B6706}
// *********************************************************************//
  IRobotFeMultiExtremeValue = interface(IDispatch)
    ['{3B05F3DB-BD6A-4FB0-9540-94BC7E2B6706}']
    function Get_Count: Integer; safecall;
    function GetByResType(_result_type: IRobotFeResultType): IRobotFeExtremeValue; safecall;
    function Get(_idx: Integer): IRobotFeExtremeValue; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotFeMultiExtremeValueDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3B05F3DB-BD6A-4FB0-9540-94BC7E2B6706}
// *********************************************************************//
  IRobotFeMultiExtremeValueDisp = dispinterface
    ['{3B05F3DB-BD6A-4FB0-9540-94BC7E2B6706}']
    property Count: Integer readonly dispid 1610743808;
    function GetByResType(_result_type: IRobotFeResultType): IRobotFeExtremeValue; dispid 1610743809;
    function Get(_idx: Integer): IRobotFeExtremeValue; dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotExtremeResultServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {14218059-EB5E-4B84-8C32-7683B4AFB7F9}
// *********************************************************************//
  IRobotExtremeResultServer = interface(IDispatch)
    ['{14218059-EB5E-4B84-8C32-7683B4AFB7F9}']
    function MinValue(const _params: IRobotExtremeParams): IRobotExtremeValue; safecall;
    function MaxValue(const _params: IRobotExtremeParams): IRobotExtremeValue; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotExtremeResultServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {14218059-EB5E-4B84-8C32-7683B4AFB7F9}
// *********************************************************************//
  IRobotExtremeResultServerDisp = dispinterface
    ['{14218059-EB5E-4B84-8C32-7683B4AFB7F9}']
    function MinValue(const _params: IRobotExtremeParams): IRobotExtremeValue; dispid 1610743808;
    function MaxValue(const _params: IRobotExtremeParams): IRobotExtremeValue; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotExtremeParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {99E9E497-F464-4AD3-99AA-EE1E699C73B2}
// *********************************************************************//
  IRobotExtremeParams = interface(IDispatch)
    ['{99E9E497-F464-4AD3-99AA-EE1E699C73B2}']
    function Get_Selection: IRobotMultiSelection; safecall;
    function Get_ValueType: IRobotExtremeValueType; safecall;
    procedure Set_ValueType(ret: IRobotExtremeValueType); safecall;
    function Get_BarDivision: Integer; safecall;
    procedure Set_BarDivision(ret: Integer); safecall;
    property Selection: IRobotMultiSelection read Get_Selection;
    property ValueType: IRobotExtremeValueType read Get_ValueType write Set_ValueType;
    property BarDivision: Integer read Get_BarDivision write Set_BarDivision;
  end;

// *********************************************************************//
// DispIntf:  IRobotExtremeParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {99E9E497-F464-4AD3-99AA-EE1E699C73B2}
// *********************************************************************//
  IRobotExtremeParamsDisp = dispinterface
    ['{99E9E497-F464-4AD3-99AA-EE1E699C73B2}']
    property Selection: IRobotMultiSelection readonly dispid 1610743808;
    property ValueType: IRobotExtremeValueType dispid 1610743809;
    property BarDivision: Integer dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotMultiSelection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {79173860-0C32-11D3-98BF-0080C86BE4DF}
// *********************************************************************//
  IRobotMultiSelection = interface(IDispatch)
    ['{79173860-0C32-11D3-98BF-0080C86BE4DF}']
    function Exist(obj_type: IRobotObjectType): Integer; safecall;
    procedure Set_(obj_type: IRobotObjectType; const sel: IRobotSelection); safecall;
    function Get(obj_type: IRobotObjectType): IRobotSelection; safecall;
    function Get_Modes: IRobotModeSelection; safecall;
    function Get_CaseCmpnt: Integer; safecall;
    procedure Set_CaseCmpnt(ret: Integer); safecall;
    property Modes: IRobotModeSelection read Get_Modes;
    property CaseCmpnt: Integer read Get_CaseCmpnt write Set_CaseCmpnt;
  end;

// *********************************************************************//
// DispIntf:  IRobotMultiSelectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {79173860-0C32-11D3-98BF-0080C86BE4DF}
// *********************************************************************//
  IRobotMultiSelectionDisp = dispinterface
    ['{79173860-0C32-11D3-98BF-0080C86BE4DF}']
    function Exist(obj_type: IRobotObjectType): Integer; dispid 1610743808;
    procedure Set_(obj_type: IRobotObjectType; const sel: IRobotSelection); dispid 1610743809;
    function Get(obj_type: IRobotObjectType): IRobotSelection; dispid 1610743810;
    property Modes: IRobotModeSelection readonly dispid 1610743811;
    property CaseCmpnt: Integer dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotModeSelection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {25DD8F10-597F-4DD9-A7DB-D8C63B0F4B00}
// *********************************************************************//
  IRobotModeSelection = interface(IDispatch)
    ['{25DD8F10-597F-4DD9-A7DB-D8C63B0F4B00}']
    function Get_type_: IRobotModeSelectionType; safecall;
    procedure Set_type_(ret: IRobotModeSelectionType); safecall;
    function Get_Mode: Integer; safecall;
    procedure Set_Mode(ret: Integer); safecall;
    function Get_Combination: IRobotModeCombinationType; safecall;
    procedure Set_Combination(ret: IRobotModeCombinationType); safecall;
    property type_: IRobotModeSelectionType read Get_type_ write Set_type_;
    property Mode: Integer read Get_Mode write Set_Mode;
    property Combination: IRobotModeCombinationType read Get_Combination write Set_Combination;
  end;

// *********************************************************************//
// DispIntf:  IRobotModeSelectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {25DD8F10-597F-4DD9-A7DB-D8C63B0F4B00}
// *********************************************************************//
  IRobotModeSelectionDisp = dispinterface
    ['{25DD8F10-597F-4DD9-A7DB-D8C63B0F4B00}']
    property type_: IRobotModeSelectionType dispid 1610743808;
    property Mode: Integer dispid 1610743810;
    property Combination: IRobotModeCombinationType dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotExtremeValue
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A9A7EC2B-B25E-4F67-9835-BEAEE5A9EED3}
// *********************************************************************//
  IRobotExtremeValue = interface(IDispatch)
    ['{A9A7EC2B-B25E-4F67-9835-BEAEE5A9EED3}']
    function Get_Value: Double; safecall;
    function Get_Case_: Integer; safecall;
    function Get_CaseCmpnt: Integer; safecall;
    function Get_Node: Integer; safecall;
    function Get_Position: Double; safecall;
    function Get_Bar: Integer; safecall;
    function Get_ModeCmb: IRobotModeCombinationType; safecall;
    function Get_IsAvailable: WordBool; safecall;
    property Value: Double read Get_Value;
    property Case_: Integer read Get_Case_;
    property CaseCmpnt: Integer read Get_CaseCmpnt;
    property Node: Integer read Get_Node;
    property Position: Double read Get_Position;
    property Bar: Integer read Get_Bar;
    property ModeCmb: IRobotModeCombinationType read Get_ModeCmb;
    property IsAvailable: WordBool read Get_IsAvailable;
  end;

// *********************************************************************//
// DispIntf:  IRobotExtremeValueDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A9A7EC2B-B25E-4F67-9835-BEAEE5A9EED3}
// *********************************************************************//
  IRobotExtremeValueDisp = dispinterface
    ['{A9A7EC2B-B25E-4F67-9835-BEAEE5A9EED3}']
    property Value: Double readonly dispid 1610743808;
    property Case_: Integer readonly dispid 1610743809;
    property CaseCmpnt: Integer readonly dispid 1610743810;
    property Node: Integer readonly dispid 1610743811;
    property Position: Double readonly dispid 1610743812;
    property Bar: Integer readonly dispid 1610743813;
    property ModeCmb: IRobotModeCombinationType readonly dispid 1610743814;
    property IsAvailable: WordBool readonly dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotUniversalResultAccess
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A14CB3E2-4B73-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRobotUniversalResultAccess = interface(IDispatch)
    ['{A14CB3E2-4B73-11D4-B832-0050DA76755E}']
    function Get_ResultId: Integer; safecall;
    procedure Set_ResultId(ret: Integer); safecall;
    function Get_Node: Integer; safecall;
    procedure Set_Node(ret: Integer); safecall;
    function Get_Bar: Integer; safecall;
    procedure Set_Bar(ret: Integer); safecall;
    function Get_DivCount: Integer; safecall;
    procedure Set_DivCount(ret: Integer); safecall;
    function Get_DivPoint: Integer; safecall;
    procedure Set_DivPoint(ret: Integer); safecall;
    function Get_RelativePoint: Double; safecall;
    procedure Set_RelativePoint(ret: Double); safecall;
    function Get_LoadCase: Integer; safecall;
    procedure Set_LoadCase(ret: Integer); safecall;
    function Get_LoadCaseCmpnt: Integer; safecall;
    procedure Set_LoadCaseCmpnt(ret: Integer); safecall;
    function Get_Mode: Integer; safecall;
    procedure Set_Mode(ret: Integer); safecall;
    function Get_ModeCmb: IRobotModeCombinationType; safecall;
    procedure Set_ModeCmb(ret: IRobotModeCombinationType); safecall;
    function Get_Available: WordBool; safecall;
    function Get_ResultValue: Double; safecall;
    function Get_Panel: Integer; safecall;
    procedure Set_Panel(ret: Integer); safecall;
    function Get_Element: Integer; safecall;
    procedure Set_Element(ret: Integer); safecall;
    function Get_Layer: IRobotFeLayerType; safecall;
    procedure Set_Layer(ret: IRobotFeLayerType); safecall;
    function Get_LayerArbitraryValue: Double; safecall;
    procedure Set_LayerArbitraryValue(ret: Double); safecall;
    function Get_ReinforceCalcMethod: IRobotReinforceCalcMethods; safecall;
    procedure Set_ReinforceCalcMethod(ret: IRobotReinforceCalcMethods); safecall;
    function Get_ReducedCutPos: IRobotFeResultReducedCutPosition; safecall;
    procedure Set_ReducedCutPos(ret: IRobotFeResultReducedCutPosition); safecall;
    procedure Reset; safecall;
    procedure SetDirX(_def_type: IRobotObjLocalXDirDefinitionType; _x: Double; _y: Double; 
                      _z: Double); safecall;
    function GetDirX(out _x: Double; out _y: Double; out _z: Double): IRobotObjLocalXDirDefinitionType; safecall;
    function Get_ResultType: IRobotUniversalResultType; safecall;
    function Get_Storey: WideString; safecall;
    procedure Set_Storey(const ret: WideString); safecall;
    procedure ResultValue3D(out _val1: Double; out _val2: Double; out _val3: Double); safecall;
    function Get_CalcPoint: Integer; safecall;
    procedure Set_CalcPoint(ret: Integer); safecall;
    function Get_LinearSupports: WordBool; safecall;
    procedure Set_LinearSupports(ret: WordBool); safecall;
    property ResultId: Integer read Get_ResultId write Set_ResultId;
    property Node: Integer read Get_Node write Set_Node;
    property Bar: Integer read Get_Bar write Set_Bar;
    property DivCount: Integer read Get_DivCount write Set_DivCount;
    property DivPoint: Integer read Get_DivPoint write Set_DivPoint;
    property RelativePoint: Double read Get_RelativePoint write Set_RelativePoint;
    property LoadCase: Integer read Get_LoadCase write Set_LoadCase;
    property LoadCaseCmpnt: Integer read Get_LoadCaseCmpnt write Set_LoadCaseCmpnt;
    property Mode: Integer read Get_Mode write Set_Mode;
    property ModeCmb: IRobotModeCombinationType read Get_ModeCmb write Set_ModeCmb;
    property Available: WordBool read Get_Available;
    property ResultValue: Double read Get_ResultValue;
    property Panel: Integer read Get_Panel write Set_Panel;
    property Element: Integer read Get_Element write Set_Element;
    property Layer: IRobotFeLayerType read Get_Layer write Set_Layer;
    property LayerArbitraryValue: Double read Get_LayerArbitraryValue write Set_LayerArbitraryValue;
    property ReinforceCalcMethod: IRobotReinforceCalcMethods read Get_ReinforceCalcMethod write Set_ReinforceCalcMethod;
    property ReducedCutPos: IRobotFeResultReducedCutPosition read Get_ReducedCutPos write Set_ReducedCutPos;
    property ResultType: IRobotUniversalResultType read Get_ResultType;
    property Storey: WideString read Get_Storey write Set_Storey;
    property CalcPoint: Integer read Get_CalcPoint write Set_CalcPoint;
    property LinearSupports: WordBool read Get_LinearSupports write Set_LinearSupports;
  end;

// *********************************************************************//
// DispIntf:  IRobotUniversalResultAccessDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A14CB3E2-4B73-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRobotUniversalResultAccessDisp = dispinterface
    ['{A14CB3E2-4B73-11D4-B832-0050DA76755E}']
    property ResultId: Integer dispid 1610743808;
    property Node: Integer dispid 1610743810;
    property Bar: Integer dispid 1610743812;
    property DivCount: Integer dispid 1610743814;
    property DivPoint: Integer dispid 1610743816;
    property RelativePoint: Double dispid 1610743818;
    property LoadCase: Integer dispid 1610743820;
    property LoadCaseCmpnt: Integer dispid 1610743822;
    property Mode: Integer dispid 1610743824;
    property ModeCmb: IRobotModeCombinationType dispid 1610743826;
    property Available: WordBool readonly dispid 1610743828;
    property ResultValue: Double readonly dispid 1610743829;
    property Panel: Integer dispid 1610743830;
    property Element: Integer dispid 1610743832;
    property Layer: IRobotFeLayerType dispid 1610743834;
    property LayerArbitraryValue: Double dispid 1610743836;
    property ReinforceCalcMethod: IRobotReinforceCalcMethods dispid 1610743838;
    property ReducedCutPos: IRobotFeResultReducedCutPosition dispid 1610743840;
    procedure Reset; dispid 1610743842;
    procedure SetDirX(_def_type: IRobotObjLocalXDirDefinitionType; _x: Double; _y: Double; 
                      _z: Double); dispid 1610743843;
    function GetDirX(out _x: Double; out _y: Double; out _z: Double): IRobotObjLocalXDirDefinitionType; dispid 1610743844;
    property ResultType: IRobotUniversalResultType readonly dispid 1610743845;
    property Storey: WideString dispid 1610743846;
    procedure ResultValue3D(out _val1: Double; out _val2: Double; out _val3: Double); dispid 1610743848;
    property CalcPoint: Integer dispid 1610743849;
    property LinearSupports: WordBool dispid 1610743851;
  end;

// *********************************************************************//
// Interface: IRobotStructureValues
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {29E921DE-DFD0-4989-894B-5178AE5CE5FE}
// *********************************************************************//
  IRobotStructureValues = interface(IDispatch)
    ['{29E921DE-DFD0-4989-894B-5178AE5CE5FE}']
    function GetMass(_case_num: Integer): Double; safecall;
    function GetG(_case_num: Integer): IRobotGeoPoint3D; safecall;
    function GetT(_case_num: Integer): IRobotGeoPoint3D; safecall;
    function GetIx(_case_num: Integer): Double; safecall;
    function GetIy(_case_num: Integer): Double; safecall;
    function GetIz(_case_num: Integer): Double; safecall;
    function GetEx2(_case_num: Integer): Double; safecall;
    function GetEy2(_case_num: Integer): Double; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotStructureValuesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {29E921DE-DFD0-4989-894B-5178AE5CE5FE}
// *********************************************************************//
  IRobotStructureValuesDisp = dispinterface
    ['{29E921DE-DFD0-4989-894B-5178AE5CE5FE}']
    function GetMass(_case_num: Integer): Double; dispid 1610743808;
    function GetG(_case_num: Integer): IRobotGeoPoint3D; dispid 1610743809;
    function GetT(_case_num: Integer): IRobotGeoPoint3D; dispid 1610743810;
    function GetIx(_case_num: Integer): Double; dispid 1610743811;
    function GetIy(_case_num: Integer): Double; dispid 1610743812;
    function GetIz(_case_num: Integer): Double; dispid 1610743813;
    function GetEx2(_case_num: Integer): Double; dispid 1610743814;
    function GetEy2(_case_num: Integer): Double; dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotResultQueryParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {67F19EF2-BD15-4485-BA2C-2ADEDCBCDE1A}
// *********************************************************************//
  IRobotResultQueryParams = interface(IDispatch)
    ['{67F19EF2-BD15-4485-BA2C-2ADEDCBCDE1A}']
    function Get_Selection: IRobotMultiSelection; safecall;
    function Get_ResultIds: IRobotNumbersArray; safecall;
    procedure Reset; safecall;
    procedure SetParam(_param_id: IRobotResultParamType; _param_value: OleVariant); safecall;
    function IsParamSet(_param_id: IRobotResultParamType): WordBool; safecall;
    function GetParam(_param_id: IRobotResultParamType): OleVariant; safecall;
    property Selection: IRobotMultiSelection read Get_Selection;
    property ResultIds: IRobotNumbersArray read Get_ResultIds;
  end;

// *********************************************************************//
// DispIntf:  IRobotResultQueryParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {67F19EF2-BD15-4485-BA2C-2ADEDCBCDE1A}
// *********************************************************************//
  IRobotResultQueryParamsDisp = dispinterface
    ['{67F19EF2-BD15-4485-BA2C-2ADEDCBCDE1A}']
    property Selection: IRobotMultiSelection readonly dispid 1610743808;
    property ResultIds: IRobotNumbersArray readonly dispid 1610743809;
    procedure Reset; dispid 1610743810;
    procedure SetParam(_param_id: IRobotResultParamType; _param_value: OleVariant); dispid 1610743811;
    function IsParamSet(_param_id: IRobotResultParamType): WordBool; dispid 1610743812;
    function GetParam(_param_id: IRobotResultParamType): OleVariant; dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotResultRowSet
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0EA557D8-86C1-4827-B0F4-84300FDF9A8F}
// *********************************************************************//
  IRobotResultRowSet = interface(IDispatch)
    ['{0EA557D8-86C1-4827-B0F4-84300FDF9A8F}']
    function Get_CurrentRow: IRobotResultRow; safecall;
    function Get_ResultIds: IRobotNumbersCollection; safecall;
    function MoveFirst: WordBool; safecall;
    function MoveNext: WordBool; safecall;
    procedure Clear; safecall;
    property CurrentRow: IRobotResultRow read Get_CurrentRow;
    property ResultIds: IRobotNumbersCollection read Get_ResultIds;
  end;

// *********************************************************************//
// DispIntf:  IRobotResultRowSetDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0EA557D8-86C1-4827-B0F4-84300FDF9A8F}
// *********************************************************************//
  IRobotResultRowSetDisp = dispinterface
    ['{0EA557D8-86C1-4827-B0F4-84300FDF9A8F}']
    property CurrentRow: IRobotResultRow readonly dispid 1610743808;
    property ResultIds: IRobotNumbersCollection readonly dispid 1610743809;
    function MoveFirst: WordBool; dispid 1610743810;
    function MoveNext: WordBool; dispid 1610743811;
    procedure Clear; dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotResultRow
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DAB65BBD-06B7-408F-9395-25C077BA97BA}
// *********************************************************************//
  IRobotResultRow = interface(IDispatch)
    ['{DAB65BBD-06B7-408F-9395-25C077BA97BA}']
    function IsAvailable(_result_id: Integer): WordBool; safecall;
    function GetValueType(_result_id: Integer): IRobotUniversalResultType; safecall;
    function GetValue(_result_id: Integer): OleVariant; safecall;
    function GetParam(_result_param_id: IRobotResultParamType): OleVariant; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotResultRowDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DAB65BBD-06B7-408F-9395-25C077BA97BA}
// *********************************************************************//
  IRobotResultRowDisp = dispinterface
    ['{DAB65BBD-06B7-408F-9395-25C077BA97BA}']
    function IsAvailable(_result_id: Integer): WordBool; dispid 1610743808;
    function GetValueType(_result_id: Integer): IRobotUniversalResultType; dispid 1610743809;
    function GetValue(_result_id: Integer): OleVariant; dispid 1610743810;
    function GetParam(_result_param_id: IRobotResultParamType): OleVariant; dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotStoreyResultServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {903278F0-7DE7-4800-BFBB-71B2241D32C2}
// *********************************************************************//
  IRobotStoreyResultServer = interface(IDispatch)
    ['{903278F0-7DE7-4800-BFBB-71B2241D32C2}']
    function Values(_storey: Integer; _case: Integer): IRobotStoreyValues; safecall;
    function Displacements(_storey: Integer; _case: Integer): IRobotStoreyDisplacements; safecall;
    function ReducedForces(_storey: Integer; _case: Integer): IRobotStoreyReducedForces; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotStoreyResultServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {903278F0-7DE7-4800-BFBB-71B2241D32C2}
// *********************************************************************//
  IRobotStoreyResultServerDisp = dispinterface
    ['{903278F0-7DE7-4800-BFBB-71B2241D32C2}']
    function Values(_storey: Integer; _case: Integer): IRobotStoreyValues; dispid 1610743808;
    function Displacements(_storey: Integer; _case: Integer): IRobotStoreyDisplacements; dispid 1610743809;
    function ReducedForces(_storey: Integer; _case: Integer): IRobotStoreyReducedForces; dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotStoreyValues
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2CF1571B-B2CF-4B3B-9DC4-1B3DE9C952FB}
// *********************************************************************//
  IRobotStoreyValues = interface(IDispatch)
    ['{2CF1571B-B2CF-4B3B-9DC4-1B3DE9C952FB}']
    function Get_Mass: Double; safecall;
    function Get_G: IRobotGeoPoint3D; safecall;
    function Get_R: IRobotGeoPoint3D; safecall;
    function Get_Ix: Double; safecall;
    function Get_Iy: Double; safecall;
    function Get_Iz: Double; safecall;
    function Get_Ex0: Double; safecall;
    function Get_Ey0: Double; safecall;
    function Get_Ex2: Double; safecall;
    function Get_Ey2: Double; safecall;
    function Get_Ex1: Double; safecall;
    function Get_Ey1: Double; safecall;
    function Get_F: IRobotGeoPoint3D; safecall;
    property Mass: Double read Get_Mass;
    property G: IRobotGeoPoint3D read Get_G;
    property R: IRobotGeoPoint3D read Get_R;
    property Ix: Double read Get_Ix;
    property Iy: Double read Get_Iy;
    property Iz: Double read Get_Iz;
    property Ex0: Double read Get_Ex0;
    property Ey0: Double read Get_Ey0;
    property Ex2: Double read Get_Ex2;
    property Ey2: Double read Get_Ey2;
    property Ex1: Double read Get_Ex1;
    property Ey1: Double read Get_Ey1;
    property F: IRobotGeoPoint3D read Get_F;
  end;

// *********************************************************************//
// DispIntf:  IRobotStoreyValuesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2CF1571B-B2CF-4B3B-9DC4-1B3DE9C952FB}
// *********************************************************************//
  IRobotStoreyValuesDisp = dispinterface
    ['{2CF1571B-B2CF-4B3B-9DC4-1B3DE9C952FB}']
    property Mass: Double readonly dispid 1610743808;
    property G: IRobotGeoPoint3D readonly dispid 1610743809;
    property R: IRobotGeoPoint3D readonly dispid 1610743810;
    property Ix: Double readonly dispid 1610743811;
    property Iy: Double readonly dispid 1610743812;
    property Iz: Double readonly dispid 1610743813;
    property Ex0: Double readonly dispid 1610743814;
    property Ey0: Double readonly dispid 1610743815;
    property Ex2: Double readonly dispid 1610743816;
    property Ey2: Double readonly dispid 1610743817;
    property Ex1: Double readonly dispid 1610743818;
    property Ey1: Double readonly dispid 1610743819;
    property F: IRobotGeoPoint3D readonly dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRobotStoreyDisplacements
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F65BA016-B591-4D04-941F-E5FC5FCA4B32}
// *********************************************************************//
  IRobotStoreyDisplacements = interface(IDispatch)
    ['{F65BA016-B591-4D04-941F-E5FC5FCA4B32}']
    function Get_MaxUX: Double; safecall;
    function Get_NodeMaxUX: Integer; safecall;
    function Get_MaxUY: Double; safecall;
    function Get_NodeMaxUY: Integer; safecall;
    function Get_DrUX: Double; safecall;
    function Get_DrUY: Double; safecall;
    function Get_MinUX: Double; safecall;
    function Get_NodeMinUX: Integer; safecall;
    function Get_MinUY: Double; safecall;
    function Get_NodeMinUY: Integer; safecall;
    property MaxUX: Double read Get_MaxUX;
    property NodeMaxUX: Integer read Get_NodeMaxUX;
    property MaxUY: Double read Get_MaxUY;
    property NodeMaxUY: Integer read Get_NodeMaxUY;
    property DrUX: Double read Get_DrUX;
    property DrUY: Double read Get_DrUY;
    property MinUX: Double read Get_MinUX;
    property NodeMinUX: Integer read Get_NodeMinUX;
    property MinUY: Double read Get_MinUY;
    property NodeMinUY: Integer read Get_NodeMinUY;
  end;

// *********************************************************************//
// DispIntf:  IRobotStoreyDisplacementsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F65BA016-B591-4D04-941F-E5FC5FCA4B32}
// *********************************************************************//
  IRobotStoreyDisplacementsDisp = dispinterface
    ['{F65BA016-B591-4D04-941F-E5FC5FCA4B32}']
    property MaxUX: Double readonly dispid 1610743808;
    property NodeMaxUX: Integer readonly dispid 1610743809;
    property MaxUY: Double readonly dispid 1610743810;
    property NodeMaxUY: Integer readonly dispid 1610743811;
    property DrUX: Double readonly dispid 1610743812;
    property DrUY: Double readonly dispid 1610743813;
    property MinUX: Double readonly dispid 1610743814;
    property NodeMinUX: Integer readonly dispid 1610743815;
    property MinUY: Double readonly dispid 1610743816;
    property NodeMinUY: Integer readonly dispid 1610743817;
  end;

// *********************************************************************//
// Interface: IRobotStoreyReducedForces
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1A65169A-A42C-4600-887E-29ED11ACBC04}
// *********************************************************************//
  IRobotStoreyReducedForces = interface(IDispatch)
    ['{1A65169A-A42C-4600-887E-29ED11ACBC04}']
    function Get_FX: Double; safecall;
    function Get_FY: Double; safecall;
    function Get_FZ: Double; safecall;
    function Get_MX: Double; safecall;
    function Get_MY: Double; safecall;
    function Get_MZ: Double; safecall;
    function Get_FX_ToColumns: Double; safecall;
    function Get_FY_ToColumns: Double; safecall;
    function Get_FZ_ToColumns: Double; safecall;
    function Get_FX_ToWalls: Double; safecall;
    function Get_FY_ToWalls: Double; safecall;
    function Get_FZ_ToWalls: Double; safecall;
    property FX: Double read Get_FX;
    property FY: Double read Get_FY;
    property FZ: Double read Get_FZ;
    property MX: Double read Get_MX;
    property MY: Double read Get_MY;
    property MZ: Double read Get_MZ;
    property FX_ToColumns: Double read Get_FX_ToColumns;
    property FY_ToColumns: Double read Get_FY_ToColumns;
    property FZ_ToColumns: Double read Get_FZ_ToColumns;
    property FX_ToWalls: Double read Get_FX_ToWalls;
    property FY_ToWalls: Double read Get_FY_ToWalls;
    property FZ_ToWalls: Double read Get_FZ_ToWalls;
  end;

// *********************************************************************//
// DispIntf:  IRobotStoreyReducedForcesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1A65169A-A42C-4600-887E-29ED11ACBC04}
// *********************************************************************//
  IRobotStoreyReducedForcesDisp = dispinterface
    ['{1A65169A-A42C-4600-887E-29ED11ACBC04}']
    property FX: Double readonly dispid 1610743808;
    property FY: Double readonly dispid 1610743809;
    property FZ: Double readonly dispid 1610743810;
    property MX: Double readonly dispid 1610743811;
    property MY: Double readonly dispid 1610743812;
    property MZ: Double readonly dispid 1610743813;
    property FX_ToColumns: Double readonly dispid 1610743814;
    property FY_ToColumns: Double readonly dispid 1610743815;
    property FZ_ToColumns: Double readonly dispid 1610743816;
    property FX_ToWalls: Double readonly dispid 1610743817;
    property FY_ToWalls: Double readonly dispid 1610743818;
    property FZ_ToWalls: Double readonly dispid 1610743819;
  end;

// *********************************************************************//
// Interface: IRobotCalculationResume
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {500875E5-8C21-4B3A-BA6C-1F730DD6B5CF}
// *********************************************************************//
  IRobotCalculationResume = interface(IDispatch)
    ['{500875E5-8C21-4B3A-BA6C-1F730DD6B5CF}']
    function Get_DiagonalStiffnessMatrixPrecision: Double; safecall;
    function Get_DiagonalStiffnessMatrixMin: Double; safecall;
    function Get_DiagonalStiffnessMatrixMax: Double; safecall;
    function GetEnergyPrecision(_load_case: Integer): Double; safecall;
    function GetEnergy(_load_case: Integer): Double; safecall;
    function Get_EquationSolvingMethodUsed: IRobotEquationSolvingMethod; safecall;
    property DiagonalStiffnessMatrixPrecision: Double read Get_DiagonalStiffnessMatrixPrecision;
    property DiagonalStiffnessMatrixMin: Double read Get_DiagonalStiffnessMatrixMin;
    property DiagonalStiffnessMatrixMax: Double read Get_DiagonalStiffnessMatrixMax;
    property EquationSolvingMethodUsed: IRobotEquationSolvingMethod read Get_EquationSolvingMethodUsed;
  end;

// *********************************************************************//
// DispIntf:  IRobotCalculationResumeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {500875E5-8C21-4B3A-BA6C-1F730DD6B5CF}
// *********************************************************************//
  IRobotCalculationResumeDisp = dispinterface
    ['{500875E5-8C21-4B3A-BA6C-1F730DD6B5CF}']
    property DiagonalStiffnessMatrixPrecision: Double readonly dispid 1610743808;
    property DiagonalStiffnessMatrixMin: Double readonly dispid 1610743809;
    property DiagonalStiffnessMatrixMax: Double readonly dispid 1610743810;
    function GetEnergyPrecision(_load_case: Integer): Double; dispid 1610743811;
    function GetEnergy(_load_case: Integer): Double; dispid 1610743812;
    property EquationSolvingMethodUsed: IRobotEquationSolvingMethod readonly dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotVehicleData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9BEBB9EB-4C93-418D-BF31-390449DC32B1}
// *********************************************************************//
  IRobotVehicleData = interface(IDispatch)
    ['{9BEBB9EB-4C93-418D-BF31-390449DC32B1}']
    function Get_B: Double; safecall;
    procedure Set_B(ret: Double); safecall;
    function Get_d1: Double; safecall;
    procedure Set_d1(ret: Double); safecall;
    function Get_d2: Double; safecall;
    procedure Set_d2(ret: Double); safecall;
    function Get_Loads: IRobotVehicleLoadMngr; safecall;
    function LoadFromDBase(const _vehicle_name: WideString; const _db_name: WideString): WordBool; safecall;
    function StoreToDBase(const _vehicle_name: WideString; const _db_name: WideString): WordBool; safecall;
    property B: Double read Get_B write Set_B;
    property d1: Double read Get_d1 write Set_d1;
    property d2: Double read Get_d2 write Set_d2;
    property Loads: IRobotVehicleLoadMngr read Get_Loads;
  end;

// *********************************************************************//
// DispIntf:  IRobotVehicleDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9BEBB9EB-4C93-418D-BF31-390449DC32B1}
// *********************************************************************//
  IRobotVehicleDataDisp = dispinterface
    ['{9BEBB9EB-4C93-418D-BF31-390449DC32B1}']
    property B: Double dispid 1610743808;
    property d1: Double dispid 1610743810;
    property d2: Double dispid 1610743812;
    property Loads: IRobotVehicleLoadMngr readonly dispid 1610743814;
    function LoadFromDBase(const _vehicle_name: WideString; const _db_name: WideString): WordBool; dispid 1610743815;
    function StoreToDBase(const _vehicle_name: WideString; const _db_name: WideString): WordBool; dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRobotVehicleLoadMngr
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4D239F52-7340-4E74-A88E-2E2984677A5F}
// *********************************************************************//
  IRobotVehicleLoadMngr = interface(IDispatch)
    ['{4D239F52-7340-4E74-A88E-2E2984677A5F}']
    function Get_Count: Integer; safecall;
    function Get(_idx: Integer): IRobotVehicleLoad; safecall;
    procedure Delete(_idx: Integer); safecall;
    function New: IRobotVehicleLoad; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotVehicleLoadMngrDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4D239F52-7340-4E74-A88E-2E2984677A5F}
// *********************************************************************//
  IRobotVehicleLoadMngrDisp = dispinterface
    ['{4D239F52-7340-4E74-A88E-2E2984677A5F}']
    property Count: Integer readonly dispid 1610743808;
    function Get(_idx: Integer): IRobotVehicleLoad; dispid 1610743809;
    procedure Delete(_idx: Integer); dispid 1610743810;
    function New: IRobotVehicleLoad; dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotVehicleLoad
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C731567B-3EBF-47E1-8952-A0B17A2532E8}
// *********************************************************************//
  IRobotVehicleLoad = interface(IDispatch)
    ['{C731567B-3EBF-47E1-8952-A0B17A2532E8}']
    function Get_F: Double; safecall;
    procedure Set_F(ret: Double); safecall;
    function Get_X: Double; safecall;
    procedure Set_X(ret: Double); safecall;
    function Get_S: Double; safecall;
    procedure Set_S(ret: Double); safecall;
    function Get_DX: Double; safecall;
    procedure Set_DX(ret: Double); safecall;
    function Get_DY: Double; safecall;
    procedure Set_DY(ret: Double); safecall;
    function Get_type_: IRobotVehicleLoadType; safecall;
    procedure Set_type_(ret: IRobotVehicleLoadType); safecall;
    property F: Double read Get_F write Set_F;
    property X: Double read Get_X write Set_X;
    property S: Double read Get_S write Set_S;
    property DX: Double read Get_DX write Set_DX;
    property DY: Double read Get_DY write Set_DY;
    property type_: IRobotVehicleLoadType read Get_type_ write Set_type_;
  end;

// *********************************************************************//
// DispIntf:  IRobotVehicleLoadDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C731567B-3EBF-47E1-8952-A0B17A2532E8}
// *********************************************************************//
  IRobotVehicleLoadDisp = dispinterface
    ['{C731567B-3EBF-47E1-8952-A0B17A2532E8}']
    property F: Double dispid 1610743808;
    property X: Double dispid 1610743810;
    property S: Double dispid 1610743812;
    property DX: Double dispid 1610743814;
    property DY: Double dispid 1610743816;
    property type_: IRobotVehicleLoadType dispid 1610743818;
  end;

// *********************************************************************//
// DispIntf:  _IRobotStructureEvents
// Flags:     (4096) Dispatchable
// GUID:      {EBC2714E-43B4-4619-A639-21E260FBBAB3}
// *********************************************************************//
  _IRobotStructureEvents = dispinterface
    ['{EBC2714E-43B4-4619-A639-21E260FBBAB3}']
    procedure ProgressNotify(const strText: WideString; nType: Integer; lParam: Integer; 
                             wParam: Integer; out nReturnValue: Integer); dispid 1;
    procedure ResultStatusChanged(_new_status: IRobotResultStatusType); dispid 2;
  end;

// *********************************************************************//
// Interface: IRobotStructure
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F5E4E9F0-B604-11D2-984C-0080C86BE4DF}
// *********************************************************************//
  IRobotStructure = interface(IDispatch)
    ['{F5E4E9F0-B604-11D2-984C-0080C86BE4DF}']
    function Get_Labels: IRobotLabelServer; safecall;
    function Get_Nodes: IRobotNodeServer; safecall;
    function Get_Bars: IRobotBarServer; safecall;
    function Get_Cases: IRobotCaseServer; safecall;
    function Get_Results: IRobotResultServer; safecall;
    function Get_Selections: IRobotSelectionFactory; safecall;
    function Get_Objects: IRobotObjObjectServer; safecall;
    function Get_FiniteElems: IRobotFiniteElementServer; safecall;
    function Get_Groups: IRobotGroupServer; safecall;
    function Get_Edit: IRobotStructureEditTools; safecall;
    function CreateCache: IRobotStructureCache; safecall;
    function ApplyCache(const _struct_cache: IRobotStructureCache): IRobotStructureApplyInfo; safecall;
    function Get_ResultsFreeze: WordBool; safecall;
    procedure Set_ResultsFreeze(ret: WordBool); safecall;
    procedure ExportXml(const _input_xml: WideString; const _output_xml: WideString); safecall;
    function Get_Storeys: IRobotStoreyMngr; safecall;
    procedure Clear; safecall;
    function Get_GroupObjects: IRobotGroupObjectServer; safecall;
    function Get_QuantitySurvey: IRobotStructureQuantitySurvey; safecall;
    procedure Merge(const _data: IRobotStructureMergeData; const _params: IUnknown); safecall;
    function Get_type_: IRobotProjectType; safecall;
    function Get_ExtParams: IRobotParamServer; safecall;
    function Get_IsCalcModelGenerated: WordBool; safecall;
    property Labels: IRobotLabelServer read Get_Labels;
    property Nodes: IRobotNodeServer read Get_Nodes;
    property Bars: IRobotBarServer read Get_Bars;
    property Cases: IRobotCaseServer read Get_Cases;
    property Results: IRobotResultServer read Get_Results;
    property Selections: IRobotSelectionFactory read Get_Selections;
    property Objects: IRobotObjObjectServer read Get_Objects;
    property FiniteElems: IRobotFiniteElementServer read Get_FiniteElems;
    property Groups: IRobotGroupServer read Get_Groups;
    property Edit: IRobotStructureEditTools read Get_Edit;
    property ResultsFreeze: WordBool read Get_ResultsFreeze write Set_ResultsFreeze;
    property Storeys: IRobotStoreyMngr read Get_Storeys;
    property GroupObjects: IRobotGroupObjectServer read Get_GroupObjects;
    property QuantitySurvey: IRobotStructureQuantitySurvey read Get_QuantitySurvey;
    property type_: IRobotProjectType read Get_type_;
    property ExtParams: IRobotParamServer read Get_ExtParams;
    property IsCalcModelGenerated: WordBool read Get_IsCalcModelGenerated;
  end;

// *********************************************************************//
// DispIntf:  IRobotStructureDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F5E4E9F0-B604-11D2-984C-0080C86BE4DF}
// *********************************************************************//
  IRobotStructureDisp = dispinterface
    ['{F5E4E9F0-B604-11D2-984C-0080C86BE4DF}']
    property Labels: IRobotLabelServer readonly dispid 1610743808;
    property Nodes: IRobotNodeServer readonly dispid 1610743809;
    property Bars: IRobotBarServer readonly dispid 1610743810;
    property Cases: IRobotCaseServer readonly dispid 1610743811;
    property Results: IRobotResultServer readonly dispid 1610743812;
    property Selections: IRobotSelectionFactory readonly dispid 1610743813;
    property Objects: IRobotObjObjectServer readonly dispid 1610743814;
    property FiniteElems: IRobotFiniteElementServer readonly dispid 1610743815;
    property Groups: IRobotGroupServer readonly dispid 1610743816;
    property Edit: IRobotStructureEditTools readonly dispid 1610743817;
    function CreateCache: IRobotStructureCache; dispid 1610743818;
    function ApplyCache(const _struct_cache: IRobotStructureCache): IRobotStructureApplyInfo; dispid 1610743819;
    property ResultsFreeze: WordBool dispid 1610743820;
    procedure ExportXml(const _input_xml: WideString; const _output_xml: WideString); dispid 1610743822;
    property Storeys: IRobotStoreyMngr readonly dispid 1610743823;
    procedure Clear; dispid 1610743824;
    property GroupObjects: IRobotGroupObjectServer readonly dispid 1610743825;
    property QuantitySurvey: IRobotStructureQuantitySurvey readonly dispid 1610743826;
    procedure Merge(const _data: IRobotStructureMergeData; const _params: IUnknown); dispid 1610743827;
    property type_: IRobotProjectType readonly dispid 1610743828;
    property ExtParams: IRobotParamServer readonly dispid 1610743829;
    property IsCalcModelGenerated: WordBool readonly dispid 1610743830;
  end;

// *********************************************************************//
// Interface: IRobotSelectionFactory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE906AA0-95D2-11D3-9954-0080C86BE4DF}
// *********************************************************************//
  IRobotSelectionFactory = interface(IDispatch)
    ['{FE906AA0-95D2-11D3-9954-0080C86BE4DF}']
    function Create(object_type: IRobotObjectType): IRobotSelection; safecall;
    function CreateMulti: IRobotMultiSelection; safecall;
    function Get(obj_type: IRobotObjectType): IRobotSelection; safecall;
    function CreateFull(obj_type: IRobotObjectType): IRobotSelection; safecall;
    function CreatePredefined(predefined_sel: IRobotPredefinedSelection): IRobotSelection; safecall;
    function CreateByLabel(_obj_type: IRobotObjectType; _label_type: IRobotLabelType; 
                           const _label_name: WideString): IRobotSelection; safecall;
    function CreateByStorey(_obj_type: IRobotObjectType; const _storey: WideString): IRobotSelection; safecall;
    function CreateEdgeSelection: IRobotObjEdgeSelection; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotSelectionFactoryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE906AA0-95D2-11D3-9954-0080C86BE4DF}
// *********************************************************************//
  IRobotSelectionFactoryDisp = dispinterface
    ['{FE906AA0-95D2-11D3-9954-0080C86BE4DF}']
    function Create(object_type: IRobotObjectType): IRobotSelection; dispid 1610743808;
    function CreateMulti: IRobotMultiSelection; dispid 1610743809;
    function Get(obj_type: IRobotObjectType): IRobotSelection; dispid 1610743810;
    function CreateFull(obj_type: IRobotObjectType): IRobotSelection; dispid 1610743811;
    function CreatePredefined(predefined_sel: IRobotPredefinedSelection): IRobotSelection; dispid 1610743812;
    function CreateByLabel(_obj_type: IRobotObjectType; _label_type: IRobotLabelType; 
                           const _label_name: WideString): IRobotSelection; dispid 1610743813;
    function CreateByStorey(_obj_type: IRobotObjectType; const _storey: WideString): IRobotSelection; dispid 1610743814;
    function CreateEdgeSelection: IRobotObjEdgeSelection; dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotObjEdgeSelection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A6AAA616-94CA-40D2-90D9-07162FA6DF14}
// *********************************************************************//
  IRobotObjEdgeSelection = interface(IDispatch)
    ['{A6AAA616-94CA-40D2-90D9-07162FA6DF14}']
    function Get_Count: Integer; safecall;
    procedure Get(_idx: Integer; out _obj_num: Integer; out _edge_idx: Integer); safecall;
    function ToText: WideString; safecall;
    procedure FromText(const _sel_text: WideString); safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotObjEdgeSelectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A6AAA616-94CA-40D2-90D9-07162FA6DF14}
// *********************************************************************//
  IRobotObjEdgeSelectionDisp = dispinterface
    ['{A6AAA616-94CA-40D2-90D9-07162FA6DF14}']
    property Count: Integer readonly dispid 1610743808;
    procedure Get(_idx: Integer; out _obj_num: Integer; out _edge_idx: Integer); dispid 1610743809;
    function ToText: WideString; dispid 1610743810;
    procedure FromText(const _sel_text: WideString); dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotObjObjectServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE241050-CA62-11D3-B7BC-0050DA76755E}
// *********************************************************************//
  IRobotObjObjectServer = interface(IRobotDataObjectServer)
    ['{EE241050-CA62-11D3-B7BC-0050DA76755E}']
    function Create(num: Integer): IRobotObjObject; safecall;
    function Get_FreeNumber: Integer; safecall;
    function FindWithId(unique_id: Integer): Integer; safecall;
    function Get_LinearReleases: IRobotLinearReleaseServer; safecall;
    function Get_Mesh: IRobotObjMesh; safecall;
    function CreateCube(_number: Integer; const _points: IRobotPointsArray; _has_base: WordBool; 
                        _has_top: WordBool; _divisions: Integer; _is_volume: WordBool): IRobotObjObject; safecall;
    function CreateCylinder(_number: Integer; const _points: IRobotPointsArray; 
                            _has_base: WordBool; _has_top: WordBool; _divisions: Integer; 
                            _sides: Integer; _is_volume: WordBool): IRobotObjObject; safecall;
    function CreateCone(_number: Integer; const _points: IRobotPointsArray; _has_base: WordBool; 
                        _divisions: Integer; _sides: Integer; _is_volume: WordBool; 
                        _has_top: WordBool): IRobotObjObject; safecall;
    function CreateOnFiniteElems(const _finite_elems: WideString; _first_number: Integer): IRobotNumbersCollection; safecall;
    procedure CreatePolyline(_number: Integer; const _points: IRobotPointsArray); safecall;
    procedure CreateContour(_number: Integer; const _points: IRobotPointsArray); safecall;
    procedure CreateArc(_number: Integer; const _points: IRobotPointsArray; 
                        _creation_type: IRobotGeoArcDefinitionMethod); safecall;
    procedure CreateCircle(_number: Integer; const _points: IRobotPointsArray); safecall;
    function Get_AutoRecalcHoles: WordBool; safecall;
    procedure Set_AutoRecalcHoles(ret: WordBool); safecall;
    procedure BeginMultiOperation; safecall;
    procedure EndMultiOperation; safecall;
    function CalcArea(_obj_num: Integer; _part_idx: Integer): Double; safecall;
    function CalcVol(_obj_num: Integer; _part_idx: Integer): Double; safecall;
    function IsVolume(_obj_num: Integer): WordBool; safecall;
    function GetName(_obj_num: Integer): WideString; safecall;
    function GetNameTemplate(_obj_num: Integer): WideString; safecall;
    procedure SetNameTemplate(_obj_num: Integer; const _name_tmpl: WideString); safecall;
    function GetUniqueId(_obj_num: Integer): Integer; safecall;
    function CreateSolid(_number: Integer; const _objlist: WideString): IRobotObjObject; safecall;
    procedure GetFiniteElemsData(const _obj_sel_txt: WideString; 
                                 const _ret_data: IRobotFiniteElementDataSet); safecall;
    function GetStructuralType(_obj_num: Integer): IRobotObjectStructuralType; safecall;
    procedure SetStructuralType(const _obj_sel: WideString; _str_type: IRobotObjectStructuralType); safecall;
    function GetHost(_obj_num: Integer): Integer; safecall;
    procedure SetHost(_obj_num: Integer; _host_num: Integer); safecall;
    function GetHostedObjects(_obj_num: Integer): IRobotSelection; safecall;
    procedure SetHostedObjects(_obj_num: Integer; const _hosted_objs: IRobotSelection); safecall;
    procedure SetAnalyzeTTMethod(const _objs: WideString; _analyze: WordBool); safecall;
    function GetAnalyzeTTMethodEnabled: IRobotSelection; safecall;
    property FreeNumber: Integer read Get_FreeNumber;
    property LinearReleases: IRobotLinearReleaseServer read Get_LinearReleases;
    property Mesh: IRobotObjMesh read Get_Mesh;
    property AutoRecalcHoles: WordBool read Get_AutoRecalcHoles write Set_AutoRecalcHoles;
  end;

// *********************************************************************//
// DispIntf:  IRobotObjObjectServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE241050-CA62-11D3-B7BC-0050DA76755E}
// *********************************************************************//
  IRobotObjObjectServerDisp = dispinterface
    ['{EE241050-CA62-11D3-B7BC-0050DA76755E}']
    function Create(num: Integer): IRobotObjObject; dispid 1610809344;
    property FreeNumber: Integer readonly dispid 1610809345;
    function FindWithId(unique_id: Integer): Integer; dispid 1610809346;
    property LinearReleases: IRobotLinearReleaseServer readonly dispid 1610809347;
    property Mesh: IRobotObjMesh readonly dispid 1610809348;
    function CreateCube(_number: Integer; const _points: IRobotPointsArray; _has_base: WordBool; 
                        _has_top: WordBool; _divisions: Integer; _is_volume: WordBool): IRobotObjObject; dispid 1610809349;
    function CreateCylinder(_number: Integer; const _points: IRobotPointsArray; 
                            _has_base: WordBool; _has_top: WordBool; _divisions: Integer; 
                            _sides: Integer; _is_volume: WordBool): IRobotObjObject; dispid 1610809350;
    function CreateCone(_number: Integer; const _points: IRobotPointsArray; _has_base: WordBool; 
                        _divisions: Integer; _sides: Integer; _is_volume: WordBool; 
                        _has_top: WordBool): IRobotObjObject; dispid 1610809351;
    function CreateOnFiniteElems(const _finite_elems: WideString; _first_number: Integer): IRobotNumbersCollection; dispid 1610809352;
    procedure CreatePolyline(_number: Integer; const _points: IRobotPointsArray); dispid 1610809353;
    procedure CreateContour(_number: Integer; const _points: IRobotPointsArray); dispid 1610809354;
    procedure CreateArc(_number: Integer; const _points: IRobotPointsArray; 
                        _creation_type: IRobotGeoArcDefinitionMethod); dispid 1610809355;
    procedure CreateCircle(_number: Integer; const _points: IRobotPointsArray); dispid 1610809356;
    property AutoRecalcHoles: WordBool dispid 1610809357;
    procedure BeginMultiOperation; dispid 1610809359;
    procedure EndMultiOperation; dispid 1610809360;
    function CalcArea(_obj_num: Integer; _part_idx: Integer): Double; dispid 1610809361;
    function CalcVol(_obj_num: Integer; _part_idx: Integer): Double; dispid 1610809362;
    function IsVolume(_obj_num: Integer): WordBool; dispid 1610809363;
    function GetName(_obj_num: Integer): WideString; dispid 1610809364;
    function GetNameTemplate(_obj_num: Integer): WideString; dispid 1610809365;
    procedure SetNameTemplate(_obj_num: Integer; const _name_tmpl: WideString); dispid 1610809366;
    function GetUniqueId(_obj_num: Integer): Integer; dispid 1610809367;
    function CreateSolid(_number: Integer; const _objlist: WideString): IRobotObjObject; dispid 1610809368;
    procedure GetFiniteElemsData(const _obj_sel_txt: WideString; 
                                 const _ret_data: IRobotFiniteElementDataSet); dispid 1610809369;
    function GetStructuralType(_obj_num: Integer): IRobotObjectStructuralType; dispid 1610809370;
    procedure SetStructuralType(const _obj_sel: WideString; _str_type: IRobotObjectStructuralType); dispid 1610809371;
    function GetHost(_obj_num: Integer): Integer; dispid 1610809372;
    procedure SetHost(_obj_num: Integer; _host_num: Integer); dispid 1610809373;
    function GetHostedObjects(_obj_num: Integer): IRobotSelection; dispid 1610809374;
    procedure SetHostedObjects(_obj_num: Integer; const _hosted_objs: IRobotSelection); dispid 1610809375;
    procedure SetAnalyzeTTMethod(const _objs: WideString; _analyze: WordBool); dispid 1610809376;
    function GetAnalyzeTTMethodEnabled: IRobotSelection; dispid 1610809377;
    function Exist(obj_num: Integer): Integer; dispid 1610743808;
    function Get(obj_num: Integer): IRobotDataObject; dispid 1610743809;
    function GetMany(const obj_sel: IRobotSelection): IRobotCollection; dispid 1610743810;
    function GetAll: IRobotCollection; dispid 1610743811;
    procedure Delete(obj_num: Integer); dispid 1610743812;
    procedure DeleteMany(const obj_sel: IRobotSelection); dispid 1610743813;
    procedure SetLabel(const obj_sel: IRobotSelection; lab_type: IRobotLabelType; 
                       const lab_name: WideString); dispid 1610743814;
    procedure RemoveLabel(const obj_sel: IRobotSelection; lab_type: IRobotLabelType); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotObjObject
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8BCE3162-C81D-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjObject = interface(IRobotDataObject)
    ['{8BCE3162-C81D-11D3-B7B9-0050DA76755E}']
    function Get_Main: IRobotObjPartMain; safecall;
    function Get_PartsCount: Integer; safecall;
    function GetPartType(part_num: Integer): IRobotObjPartType; safecall;
    function GetPart(_part_num: Integer): IRobotObjPart; safecall;
    procedure Initialize; safecall;
    procedure Update; safecall;
    function Get_UniqueId: Integer; safecall;
    function Get_Reference: IRobotObjPartReference; safecall;
    function Get_FiniteElems: WideString; safecall;
    function Get_UserId: Integer; safecall;
    procedure Set_UserId(ret: Integer); safecall;
    function Get_Mesh: IRobotObjMesh; safecall;
    function Get_Nodes: WideString; safecall;
    function Get_IsVolume: WordBool; safecall;
    function CalcArea: Double; safecall;
    function CalcVol: Double; safecall;
    function Get_Name: WideString; safecall;
    function Get_NameTemplate: WideString; safecall;
    procedure Set_NameTemplate(const ret: WideString); safecall;
    procedure GetFiniteElemsData(const _ret_data: IRobotFiniteElementDataSet); safecall;
    function Get_StructuralType: IRobotObjectStructuralType; safecall;
    procedure Set_StructuralType(ret: IRobotObjectStructuralType); safecall;
    function Get_Host: Integer; safecall;
    procedure Set_Host(ret: Integer); safecall;
    function GetHostedObjects: IRobotSelection; safecall;
    procedure SetHostedObjects(const _obj_sel: IRobotSelection); safecall;
    function Get_AnalyzeTTMethod: WordBool; safecall;
    procedure Set_AnalyzeTTMethod(ret: WordBool); safecall;
    property Main: IRobotObjPartMain read Get_Main;
    property PartsCount: Integer read Get_PartsCount;
    property UniqueId: Integer read Get_UniqueId;
    property Reference: IRobotObjPartReference read Get_Reference;
    property FiniteElems: WideString read Get_FiniteElems;
    property UserId: Integer read Get_UserId write Set_UserId;
    property Mesh: IRobotObjMesh read Get_Mesh;
    property Nodes: WideString read Get_Nodes;
    property IsVolume: WordBool read Get_IsVolume;
    property Name: WideString read Get_Name;
    property NameTemplate: WideString read Get_NameTemplate write Set_NameTemplate;
    property StructuralType: IRobotObjectStructuralType read Get_StructuralType write Set_StructuralType;
    property Host: Integer read Get_Host write Set_Host;
    property AnalyzeTTMethod: WordBool read Get_AnalyzeTTMethod write Set_AnalyzeTTMethod;
  end;

// *********************************************************************//
// DispIntf:  IRobotObjObjectDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8BCE3162-C81D-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjObjectDisp = dispinterface
    ['{8BCE3162-C81D-11D3-B7B9-0050DA76755E}']
    property Main: IRobotObjPartMain readonly dispid 1610809344;
    property PartsCount: Integer readonly dispid 1610809345;
    function GetPartType(part_num: Integer): IRobotObjPartType; dispid 1610809346;
    function GetPart(_part_num: Integer): IRobotObjPart; dispid 1610809347;
    procedure Initialize; dispid 1610809348;
    procedure Update; dispid 1610809349;
    property UniqueId: Integer readonly dispid 1610809350;
    property Reference: IRobotObjPartReference readonly dispid 1610809351;
    property FiniteElems: WideString readonly dispid 1610809352;
    property UserId: Integer dispid 1610809353;
    property Mesh: IRobotObjMesh readonly dispid 1610809355;
    property Nodes: WideString readonly dispid 1610809356;
    property IsVolume: WordBool readonly dispid 1610809357;
    function CalcArea: Double; dispid 1610809358;
    function CalcVol: Double; dispid 1610809359;
    property Name: WideString readonly dispid 1610809360;
    property NameTemplate: WideString dispid 1610809361;
    procedure GetFiniteElemsData(const _ret_data: IRobotFiniteElementDataSet); dispid 1610809363;
    property StructuralType: IRobotObjectStructuralType dispid 1610809364;
    property Host: Integer dispid 1610809366;
    function GetHostedObjects: IRobotSelection; dispid 1610809368;
    procedure SetHostedObjects(const _obj_sel: IRobotSelection); dispid 1610809369;
    property AnalyzeTTMethod: WordBool dispid 1610809370;
    property Number: Integer readonly dispid 1610743808;
    procedure SetLabel(lab_type: IRobotLabelType; const lab_name: WideString); dispid 1610743809;
    function HasLabel(lab_type: IRobotLabelType): Integer; dispid 1610743810;
    procedure RemoveLabel(lab_type: IRobotLabelType); dispid 1610743811;
    function GetLabelName(lab_type: IRobotLabelType): WideString; dispid 1610743812;
    function GetLabel(lab_type: IRobotLabelType): IRobotLabel; dispid 1610743813;
    function GetLabels: IRobotCollection; dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotObjPart
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FDA31DC2-8F88-11D4-B864-0050DA76755E}
// *********************************************************************//
  IRobotObjPart = interface(IDispatch)
    ['{FDA31DC2-8F88-11D4-B864-0050DA76755E}']
    function Get_Attribs: IRobotObjAttributes; safecall;
    function Get_type_: IRobotObjPartType; safecall;
    function GetGeometry: IRobotGeoObject; safecall;
    property Attribs: IRobotObjAttributes read Get_Attribs;
    property type_: IRobotObjPartType read Get_type_;
  end;

// *********************************************************************//
// DispIntf:  IRobotObjPartDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FDA31DC2-8F88-11D4-B864-0050DA76755E}
// *********************************************************************//
  IRobotObjPartDisp = dispinterface
    ['{FDA31DC2-8F88-11D4-B864-0050DA76755E}']
    property Attribs: IRobotObjAttributes readonly dispid 1610743808;
    property type_: IRobotObjPartType readonly dispid 1610743809;
    function GetGeometry: IRobotGeoObject; dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotObjPartMain
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8BCE3161-C81D-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjPartMain = interface(IRobotObjPart)
    ['{8BCE3161-C81D-11D3-B7B9-0050DA76755E}']
    procedure GhostMethod_IRobotObjPartMain_0_1; safecall;
    procedure GhostMethod_IRobotObjPartMain_4_2; safecall;
    procedure GhostMethod_IRobotObjPartMain_8_3; safecall;
    procedure GhostMethod_IRobotObjPartMain_12_4; safecall;
    procedure GhostMethod_IRobotObjPartMain_16_5; safecall;
    procedure GhostMethod_IRobotObjPartMain_20_6; safecall;
    procedure GhostMethod_IRobotObjPartMain_24_7; safecall;
    procedure GhostMethod_IRobotObjPartMain_28_8; safecall;
    procedure GhostMethod_IRobotObjPartMain_32_9; safecall;
    procedure GhostMethod_IRobotObjPartMain_36_10; safecall;
    function Get_Geometry: IRobotGeoObject; safecall;
    procedure Set_Geometry(const ret: IRobotGeoObject); safecall;
    function Get_Modifications: IRobotCollection; safecall;
    function Get_CurveDiv: IRobotGeoCurveDiv; safecall;
    procedure Set_CurveDiv(const ret: IRobotGeoCurveDiv); safecall;
    function Get_DefPoints: IRobotCollection; safecall;
    function Get_Edges: IRobotCollection; safecall;
    procedure ClearModifications; safecall;
    procedure AddModification(const _mod_def: IRobotObjModification); safecall;
    function Get_FiniteElems: WideString; safecall;
    function Get_ModelPoints: IRobotCollection; safecall;
    function Get_Nodes: WideString; safecall;
    function CalcArea: Double; safecall;
    function CalcVol: Double; safecall;
    property Geometry: IRobotGeoObject read Get_Geometry write Set_Geometry;
    property Modifications: IRobotCollection read Get_Modifications;
    property CurveDiv: IRobotGeoCurveDiv read Get_CurveDiv write Set_CurveDiv;
    property DefPoints: IRobotCollection read Get_DefPoints;
    property Edges: IRobotCollection read Get_Edges;
    property FiniteElems: WideString read Get_FiniteElems;
    property ModelPoints: IRobotCollection read Get_ModelPoints;
    property Nodes: WideString read Get_Nodes;
  end;

// *********************************************************************//
// DispIntf:  IRobotObjPartMainDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8BCE3161-C81D-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjPartMainDisp = dispinterface
    ['{8BCE3161-C81D-11D3-B7B9-0050DA76755E}']
    procedure GhostMethod_IRobotObjPartMain_0_1; dispid 1610678272;
    procedure GhostMethod_IRobotObjPartMain_4_2; dispid 1610678273;
    procedure GhostMethod_IRobotObjPartMain_8_3; dispid 1610678274;
    procedure GhostMethod_IRobotObjPartMain_12_4; dispid 1610678275;
    procedure GhostMethod_IRobotObjPartMain_16_5; dispid 1610678276;
    procedure GhostMethod_IRobotObjPartMain_20_6; dispid 1610678277;
    procedure GhostMethod_IRobotObjPartMain_24_7; dispid 1610678278;
    procedure GhostMethod_IRobotObjPartMain_28_8; dispid 1610678279;
    procedure GhostMethod_IRobotObjPartMain_32_9; dispid 1610678280;
    procedure GhostMethod_IRobotObjPartMain_36_10; dispid 1610678281;
    property Geometry: IRobotGeoObject dispid 1610809344;
    property Modifications: IRobotCollection readonly dispid 1610809346;
    property CurveDiv: IRobotGeoCurveDiv dispid 1610809347;
    property DefPoints: IRobotCollection readonly dispid 1610809349;
    property Edges: IRobotCollection readonly dispid 1610809350;
    procedure ClearModifications; dispid 1610809351;
    procedure AddModification(const _mod_def: IRobotObjModification); dispid 1610809352;
    property FiniteElems: WideString readonly dispid 1610809353;
    property ModelPoints: IRobotCollection readonly dispid 1610809354;
    property Nodes: WideString readonly dispid 1610809355;
    function CalcArea: Double; dispid 1610809356;
    function CalcVol: Double; dispid 1610809357;
    property Attribs: IRobotObjAttributes readonly dispid 1610743808;
    property type_: IRobotObjPartType readonly dispid 1610743809;
    function GetGeometry: IRobotGeoObject; dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotObjAttributes
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8BCE3160-C81D-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjAttributes = interface(IDispatch)
    ['{8BCE3160-C81D-11D3-B7B9-0050DA76755E}']
    function Get_Meshed: Integer; safecall;
    procedure Set_Meshed(ret: Integer); safecall;
    function Get_DirZ: Integer; safecall;
    procedure Set_DirZ(ret: Integer); safecall;
    procedure SetLabel(lab_type: IRobotLabelType; const lab_name: WideString); safecall;
    function HasLabel(lab_type: IRobotLabelType): Integer; safecall;
    function GetLabelName(lab_type: IRobotLabelType): WideString; safecall;
    procedure RemoveLabel(lab_type: IRobotLabelType); safecall;
    function GetLabels: IRobotCollection; safecall;
    procedure SetDirX(def_type: IRobotObjLocalXDirDefinitionType; _x: Double; _y: Double; _z: Double); safecall;
    function GetDirX(out _x: Double; out _y: Double; out _z: Double): IRobotObjLocalXDirDefinitionType; safecall;
    procedure GetLCS(const _x: IRobotGeoPoint3D; const _y: IRobotGeoPoint3D; 
                     const _z: IRobotGeoPoint3D); safecall;
    procedure GetLCSDisplayPosition(const _pt: IRobotGeoPoint3D); safecall;
    property Meshed: Integer read Get_Meshed write Set_Meshed;
    property DirZ: Integer read Get_DirZ write Set_DirZ;
  end;

// *********************************************************************//
// DispIntf:  IRobotObjAttributesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8BCE3160-C81D-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjAttributesDisp = dispinterface
    ['{8BCE3160-C81D-11D3-B7B9-0050DA76755E}']
    property Meshed: Integer dispid 1610743808;
    property DirZ: Integer dispid 1610743810;
    procedure SetLabel(lab_type: IRobotLabelType; const lab_name: WideString); dispid 1610743812;
    function HasLabel(lab_type: IRobotLabelType): Integer; dispid 1610743813;
    function GetLabelName(lab_type: IRobotLabelType): WideString; dispid 1610743814;
    procedure RemoveLabel(lab_type: IRobotLabelType); dispid 1610743815;
    function GetLabels: IRobotCollection; dispid 1610743816;
    procedure SetDirX(def_type: IRobotObjLocalXDirDefinitionType; _x: Double; _y: Double; _z: Double); dispid 1610743817;
    function GetDirX(out _x: Double; out _y: Double; out _z: Double): IRobotObjLocalXDirDefinitionType; dispid 1610743818;
    procedure GetLCS(const _x: IRobotGeoPoint3D; const _y: IRobotGeoPoint3D; 
                     const _z: IRobotGeoPoint3D); dispid 1610743819;
    procedure GetLCSDisplayPosition(const _pt: IRobotGeoPoint3D); dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRobotGeoObject
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306734-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotGeoObject = interface(IDispatch)
    ['{3E306734-C804-11D3-B7B9-0050DA76755E}']
    function Get_type_: IRobotGeoObjectType; safecall;
    procedure Initialize; safecall;
    property type_: IRobotGeoObjectType read Get_type_;
  end;

// *********************************************************************//
// DispIntf:  IRobotGeoObjectDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306734-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotGeoObjectDisp = dispinterface
    ['{3E306734-C804-11D3-B7B9-0050DA76755E}']
    property type_: IRobotGeoObjectType readonly dispid 1610743808;
    procedure Initialize; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotGeoCurveDiv
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306730-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotGeoCurveDiv = interface(IDispatch)
    ['{3E306730-C804-11D3-B7B9-0050DA76755E}']
    function Get_Mode: Integer; safecall;
    procedure Set_Mode(ret: Integer); safecall;
    function Get_N: Integer; safecall;
    procedure Set_N(ret: Integer); safecall;
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_IsAnalytical: WordBool; safecall;
    procedure Set_IsAnalytical(ret: WordBool); safecall;
    property Mode: Integer read Get_Mode write Set_Mode;
    property N: Integer read Get_N write Set_N;
    property Length: Double read Get_Length write Set_Length;
    property IsAnalytical: WordBool read Get_IsAnalytical write Set_IsAnalytical;
  end;

// *********************************************************************//
// DispIntf:  IRobotGeoCurveDivDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306730-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotGeoCurveDivDisp = dispinterface
    ['{3E306730-C804-11D3-B7B9-0050DA76755E}']
    property Mode: Integer dispid 1610743808;
    property N: Integer dispid 1610743810;
    property Length: Double dispid 1610743812;
    property IsAnalytical: WordBool dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotObjModification
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306747-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjModification = interface(IDispatch)
    ['{3E306747-C804-11D3-B7B9-0050DA76755E}']
    function Get_type_: IRobotObjModificationType; safecall;
    function Get_Operations: IRobotCollection; safecall;
    function Get_Filled: Integer; safecall;
    procedure Set_Filled(ret: Integer); safecall;
    function Get_NDiv: Integer; safecall;
    procedure Set_NDiv(ret: Integer); safecall;
    procedure Clear; safecall;
    procedure Add(const operation: IRobotObjOperation); safecall;
    property type_: IRobotObjModificationType read Get_type_;
    property Operations: IRobotCollection read Get_Operations;
    property Filled: Integer read Get_Filled write Set_Filled;
    property NDiv: Integer read Get_NDiv write Set_NDiv;
  end;

// *********************************************************************//
// DispIntf:  IRobotObjModificationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306747-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjModificationDisp = dispinterface
    ['{3E306747-C804-11D3-B7B9-0050DA76755E}']
    property type_: IRobotObjModificationType readonly dispid 1610743808;
    property Operations: IRobotCollection readonly dispid 1610743809;
    property Filled: Integer dispid 1610743810;
    property NDiv: Integer dispid 1610743812;
    procedure Clear; dispid 1610743814;
    procedure Add(const operation: IRobotObjOperation); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotObjOperation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306748-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjOperation = interface(IDispatch)
    ['{3E306748-C804-11D3-B7B9-0050DA76755E}']
    function Get_type_: IRobotObjOperationType; safecall;
    property type_: IRobotObjOperationType read Get_type_;
  end;

// *********************************************************************//
// DispIntf:  IRobotObjOperationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306748-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjOperationDisp = dispinterface
    ['{3E306748-C804-11D3-B7B9-0050DA76755E}']
    property type_: IRobotObjOperationType readonly dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRobotObjPartReference
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FDA31DC6-8F88-11D4-B864-0050DA76755E}
// *********************************************************************//
  IRobotObjPartReference = interface(IRobotObjPart)
    ['{FDA31DC6-8F88-11D4-B864-0050DA76755E}']
    function Get_FiniteElems: WideString; safecall;
    function Get_Nodes: WideString; safecall;
    function CalcArea: Double; safecall;
    function CalcVol: Double; safecall;
    property FiniteElems: WideString read Get_FiniteElems;
    property Nodes: WideString read Get_Nodes;
  end;

// *********************************************************************//
// DispIntf:  IRobotObjPartReferenceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FDA31DC6-8F88-11D4-B864-0050DA76755E}
// *********************************************************************//
  IRobotObjPartReferenceDisp = dispinterface
    ['{FDA31DC6-8F88-11D4-B864-0050DA76755E}']
    property FiniteElems: WideString readonly dispid 1610809344;
    property Nodes: WideString readonly dispid 1610809345;
    function CalcArea: Double; dispid 1610809346;
    function CalcVol: Double; dispid 1610809347;
    property Attribs: IRobotObjAttributes readonly dispid 1610743808;
    property type_: IRobotObjPartType readonly dispid 1610743809;
    function GetGeometry: IRobotGeoObject; dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotObjMesh
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D8710336-0DA6-4A25-BB70-DAA48157C822}
// *********************************************************************//
  IRobotObjMesh = interface(IDispatch)
    ['{D8710336-0DA6-4A25-BB70-DAA48157C822}']
    function Get_IsGenerated: WordBool; safecall;
    function Get_Freeze: WordBool; safecall;
    procedure Set_Freeze(ret: WordBool); safecall;
    procedure Generate; safecall;
    procedure Remove; safecall;
    function Get_Params: IRobotMeshParams; safecall;
    procedure GetQuality(out _out_q1: Double; out _out_q2: Double; out _out_fes: WideString; 
                         _in_precision: Double; const _in_objs: WideString); safecall;
    procedure SetBasePoints(const _model_points: IRobotNumbersArray); safecall;
    function GetBasePoints: IRobotNumbersArray; safecall;
    property IsGenerated: WordBool read Get_IsGenerated;
    property Freeze: WordBool read Get_Freeze write Set_Freeze;
    property Params: IRobotMeshParams read Get_Params;
  end;

// *********************************************************************//
// DispIntf:  IRobotObjMeshDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D8710336-0DA6-4A25-BB70-DAA48157C822}
// *********************************************************************//
  IRobotObjMeshDisp = dispinterface
    ['{D8710336-0DA6-4A25-BB70-DAA48157C822}']
    property IsGenerated: WordBool readonly dispid 1610743808;
    property Freeze: WordBool dispid 1610743809;
    procedure Generate; dispid 1610743811;
    procedure Remove; dispid 1610743812;
    property Params: IRobotMeshParams readonly dispid 1610743813;
    procedure GetQuality(out _out_q1: Double; out _out_q2: Double; out _out_fes: WideString; 
                         _in_precision: Double; const _in_objs: WideString); dispid 1610743814;
    procedure SetBasePoints(const _model_points: IRobotNumbersArray); dispid 1610743815;
    function GetBasePoints: IRobotNumbersArray; dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRobotMeshParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DEA28C48-9BB1-4FD1-87C5-F45694AA3A2D}
// *********************************************************************//
  IRobotMeshParams = interface(IDispatch)
    ['{DEA28C48-9BB1-4FD1-87C5-F45694AA3A2D}']
    function Get_VolumeParams: IRobotMeshVolumeParams; safecall;
    function Get_SurfaceParams: IRobotMeshSurfaceParams; safecall;
    function Get_Flag: IRobotMeshAccessType; safecall;
    function Get_MeshType: IRobotMeshType; safecall;
    procedure Set_MeshType(ret: IRobotMeshType); safecall;
    property VolumeParams: IRobotMeshVolumeParams read Get_VolumeParams;
    property SurfaceParams: IRobotMeshSurfaceParams read Get_SurfaceParams;
    property Flag: IRobotMeshAccessType read Get_Flag;
    property MeshType: IRobotMeshType read Get_MeshType write Set_MeshType;
  end;

// *********************************************************************//
// DispIntf:  IRobotMeshParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DEA28C48-9BB1-4FD1-87C5-F45694AA3A2D}
// *********************************************************************//
  IRobotMeshParamsDisp = dispinterface
    ['{DEA28C48-9BB1-4FD1-87C5-F45694AA3A2D}']
    property VolumeParams: IRobotMeshVolumeParams readonly dispid 1610743808;
    property SurfaceParams: IRobotMeshSurfaceParams readonly dispid 1610743809;
    property Flag: IRobotMeshAccessType readonly dispid 1610743810;
    property MeshType: IRobotMeshType dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotMeshVolumeParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C9A8B671-9803-4E2D-A9F9-1BCB536B569F}
// *********************************************************************//
  IRobotMeshVolumeParams = interface(IDispatch)
    ['{C9A8B671-9803-4E2D-A9F9-1BCB536B569F}']
    function Get_MeshDensity: Double; safecall;
    procedure Set_MeshDensity(ret: Double); safecall;
    function Get_AdditionalSurfaceMeshing: WordBool; safecall;
    procedure Set_AdditionalSurfaceMeshing(ret: WordBool); safecall;
    function Get_FiniteElemsType: IRobotMeshVolumetricFEType; safecall;
    procedure Set_FiniteElemsType(ret: IRobotMeshVolumetricFEType); safecall;
    property MeshDensity: Double read Get_MeshDensity write Set_MeshDensity;
    property AdditionalSurfaceMeshing: WordBool read Get_AdditionalSurfaceMeshing write Set_AdditionalSurfaceMeshing;
    property FiniteElemsType: IRobotMeshVolumetricFEType read Get_FiniteElemsType write Set_FiniteElemsType;
  end;

// *********************************************************************//
// DispIntf:  IRobotMeshVolumeParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C9A8B671-9803-4E2D-A9F9-1BCB536B569F}
// *********************************************************************//
  IRobotMeshVolumeParamsDisp = dispinterface
    ['{C9A8B671-9803-4E2D-A9F9-1BCB536B569F}']
    property MeshDensity: Double dispid 1610743808;
    property AdditionalSurfaceMeshing: WordBool dispid 1610743810;
    property FiniteElemsType: IRobotMeshVolumetricFEType dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotMeshSurfaceParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {77F4A2AE-1E6D-4E42-8A48-E7292B85E7C4}
// *********************************************************************//
  IRobotMeshSurfaceParams = interface(IDispatch)
    ['{77F4A2AE-1E6D-4E42-8A48-E7292B85E7C4}']
    function Get_Method: IRobotMeshMethod; safecall;
    function Get_Generation: IRobotMeshGeneration; safecall;
    function Get_FiniteElems: IRobotMeshSurfaceFiniteElems; safecall;
    function Get_Coons: IRobotMeshCoonsParams; safecall;
    function Get_Delaunay: IRobotMeshDelaunayParams; safecall;
    property Method: IRobotMeshMethod read Get_Method;
    property Generation: IRobotMeshGeneration read Get_Generation;
    property FiniteElems: IRobotMeshSurfaceFiniteElems read Get_FiniteElems;
    property Coons: IRobotMeshCoonsParams read Get_Coons;
    property Delaunay: IRobotMeshDelaunayParams read Get_Delaunay;
  end;

// *********************************************************************//
// DispIntf:  IRobotMeshSurfaceParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {77F4A2AE-1E6D-4E42-8A48-E7292B85E7C4}
// *********************************************************************//
  IRobotMeshSurfaceParamsDisp = dispinterface
    ['{77F4A2AE-1E6D-4E42-8A48-E7292B85E7C4}']
    property Method: IRobotMeshMethod readonly dispid 1610743808;
    property Generation: IRobotMeshGeneration readonly dispid 1610743809;
    property FiniteElems: IRobotMeshSurfaceFiniteElems readonly dispid 1610743810;
    property Coons: IRobotMeshCoonsParams readonly dispid 1610743811;
    property Delaunay: IRobotMeshDelaunayParams readonly dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotMeshMethod
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CCA32E7D-C01B-4AA2-8521-553B6A7375CC}
// *********************************************************************//
  IRobotMeshMethod = interface(IDispatch)
    ['{CCA32E7D-C01B-4AA2-8521-553B6A7375CC}']
    function Get_Method: IRobotMeshMethodType; safecall;
    procedure Set_Method(ret: IRobotMeshMethodType); safecall;
    function Get_ForcingRatio: IRobotMeshForcingRatio; safecall;
    procedure Set_ForcingRatio(ret: IRobotMeshForcingRatio); safecall;
    function Get_ImplementDegree: IRobotMeshImplementDegree; safecall;
    procedure Set_ImplementDegree(ret: IRobotMeshImplementDegree); safecall;
    property Method: IRobotMeshMethodType read Get_Method write Set_Method;
    property ForcingRatio: IRobotMeshForcingRatio read Get_ForcingRatio write Set_ForcingRatio;
    property ImplementDegree: IRobotMeshImplementDegree read Get_ImplementDegree write Set_ImplementDegree;
  end;

// *********************************************************************//
// DispIntf:  IRobotMeshMethodDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CCA32E7D-C01B-4AA2-8521-553B6A7375CC}
// *********************************************************************//
  IRobotMeshMethodDisp = dispinterface
    ['{CCA32E7D-C01B-4AA2-8521-553B6A7375CC}']
    property Method: IRobotMeshMethodType dispid 1610743808;
    property ForcingRatio: IRobotMeshForcingRatio dispid 1610743810;
    property ImplementDegree: IRobotMeshImplementDegree dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotMeshGeneration
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F4FB50A2-6B8E-4D44-B198-668BBD1A78B9}
// *********************************************************************//
  IRobotMeshGeneration = interface(IDispatch)
    ['{F4FB50A2-6B8E-4D44-B198-668BBD1A78B9}']
    function Get_type_: IRobotMeshGenerationType; safecall;
    procedure Set_type_(ret: IRobotMeshGenerationType); safecall;
    function Get_Division1: Double; safecall;
    procedure Set_Division1(ret: Double); safecall;
    function Get_Division2: Double; safecall;
    procedure Set_Division2(ret: Double); safecall;
    function Get_ElementSize: Double; safecall;
    procedure Set_ElementSize(ret: Double); safecall;
    property type_: IRobotMeshGenerationType read Get_type_ write Set_type_;
    property Division1: Double read Get_Division1 write Set_Division1;
    property Division2: Double read Get_Division2 write Set_Division2;
    property ElementSize: Double read Get_ElementSize write Set_ElementSize;
  end;

// *********************************************************************//
// DispIntf:  IRobotMeshGenerationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F4FB50A2-6B8E-4D44-B198-668BBD1A78B9}
// *********************************************************************//
  IRobotMeshGenerationDisp = dispinterface
    ['{F4FB50A2-6B8E-4D44-B198-668BBD1A78B9}']
    property type_: IRobotMeshGenerationType dispid 1610743808;
    property Division1: Double dispid 1610743810;
    property Division2: Double dispid 1610743812;
    property ElementSize: Double dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotMeshSurfaceFiniteElems
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AE110C49-E3FC-43C9-83E5-CAC9E2E7494E}
// *********************************************************************//
  IRobotMeshSurfaceFiniteElems = interface(IDispatch)
    ['{AE110C49-E3FC-43C9-83E5-CAC9E2E7494E}']
    function Get_type_: IRobotMeshSurfaceFEType; safecall;
    procedure Set_type_(ret: IRobotMeshSurfaceFEType); safecall;
    function Get_ConversionCoeff: Double; safecall;
    procedure Set_ConversionCoeff(ret: Double); safecall;
    function Get_ForcingRatio: IRobotMeshForcingRatio; safecall;
    procedure Set_ForcingRatio(ret: IRobotMeshForcingRatio); safecall;
    property type_: IRobotMeshSurfaceFEType read Get_type_ write Set_type_;
    property ConversionCoeff: Double read Get_ConversionCoeff write Set_ConversionCoeff;
    property ForcingRatio: IRobotMeshForcingRatio read Get_ForcingRatio write Set_ForcingRatio;
  end;

// *********************************************************************//
// DispIntf:  IRobotMeshSurfaceFiniteElemsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AE110C49-E3FC-43C9-83E5-CAC9E2E7494E}
// *********************************************************************//
  IRobotMeshSurfaceFiniteElemsDisp = dispinterface
    ['{AE110C49-E3FC-43C9-83E5-CAC9E2E7494E}']
    property type_: IRobotMeshSurfaceFEType dispid 1610743808;
    property ConversionCoeff: Double dispid 1610743810;
    property ForcingRatio: IRobotMeshForcingRatio dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotMeshCoonsParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A96801E5-90D1-4830-BB83-9D771B23C623}
// *********************************************************************//
  IRobotMeshCoonsParams = interface(IDispatch)
    ['{A96801E5-90D1-4830-BB83-9D771B23C623}']
    function Get_PanelDivisionType: IRobotMeshPanelDivType; safecall;
    procedure Set_PanelDivisionType(ret: IRobotMeshPanelDivType); safecall;
    function Get_ForcingRatio: IRobotMeshForcingRatio; safecall;
    procedure Set_ForcingRatio(ret: IRobotMeshForcingRatio); safecall;
    property PanelDivisionType: IRobotMeshPanelDivType read Get_PanelDivisionType write Set_PanelDivisionType;
    property ForcingRatio: IRobotMeshForcingRatio read Get_ForcingRatio write Set_ForcingRatio;
  end;

// *********************************************************************//
// DispIntf:  IRobotMeshCoonsParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A96801E5-90D1-4830-BB83-9D771B23C623}
// *********************************************************************//
  IRobotMeshCoonsParamsDisp = dispinterface
    ['{A96801E5-90D1-4830-BB83-9D771B23C623}']
    property PanelDivisionType: IRobotMeshPanelDivType dispid 1610743808;
    property ForcingRatio: IRobotMeshForcingRatio dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotMeshDelaunayParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A373A3C7-8239-4D16-A10F-81A8932085F1}
// *********************************************************************//
  IRobotMeshDelaunayParams = interface(IDispatch)
    ['{A373A3C7-8239-4D16-A10F-81A8932085F1}']
    function Get_type_: IRobotMeshDelaunayType; safecall;
    procedure Set_type_(ret: IRobotMeshDelaunayType); safecall;
    function Get_H_max: Double; safecall;
    procedure Set_H_max(ret: Double); safecall;
    function Get_Q: Double; safecall;
    procedure Set_Q(ret: Double); safecall;
    function Get_EmittersDefault: WordBool; safecall;
    procedure Set_EmittersDefault(ret: WordBool); safecall;
    function Get_EmittersUser: WordBool; safecall;
    procedure Set_EmittersUser(ret: WordBool); safecall;
    function Get_EmittersSmoothing: WordBool; safecall;
    procedure Set_EmittersSmoothing(ret: WordBool); safecall;
    function Get_H0: Double; safecall;
    procedure Set_H0(ret: Double); safecall;
    function Get_RegularMesh: WordBool; safecall;
    procedure Set_RegularMesh(ret: WordBool); safecall;
    function Get_NumberOfLevels: Integer; safecall;
    procedure Set_NumberOfLevels(ret: Integer); safecall;
    function Get_MeshDensity: Double; safecall;
    procedure Set_MeshDensity(ret: Double); safecall;
    property type_: IRobotMeshDelaunayType read Get_type_ write Set_type_;
    property H_max: Double read Get_H_max write Set_H_max;
    property Q: Double read Get_Q write Set_Q;
    property EmittersDefault: WordBool read Get_EmittersDefault write Set_EmittersDefault;
    property EmittersUser: WordBool read Get_EmittersUser write Set_EmittersUser;
    property EmittersSmoothing: WordBool read Get_EmittersSmoothing write Set_EmittersSmoothing;
    property H0: Double read Get_H0 write Set_H0;
    property RegularMesh: WordBool read Get_RegularMesh write Set_RegularMesh;
    property NumberOfLevels: Integer read Get_NumberOfLevels write Set_NumberOfLevels;
    property MeshDensity: Double read Get_MeshDensity write Set_MeshDensity;
  end;

// *********************************************************************//
// DispIntf:  IRobotMeshDelaunayParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A373A3C7-8239-4D16-A10F-81A8932085F1}
// *********************************************************************//
  IRobotMeshDelaunayParamsDisp = dispinterface
    ['{A373A3C7-8239-4D16-A10F-81A8932085F1}']
    property type_: IRobotMeshDelaunayType dispid 1610743808;
    property H_max: Double dispid 1610743810;
    property Q: Double dispid 1610743812;
    property EmittersDefault: WordBool dispid 1610743814;
    property EmittersUser: WordBool dispid 1610743816;
    property EmittersSmoothing: WordBool dispid 1610743818;
    property H0: Double dispid 1610743820;
    property RegularMesh: WordBool dispid 1610743822;
    property NumberOfLevels: Integer dispid 1610743824;
    property MeshDensity: Double dispid 1610743826;
  end;

// *********************************************************************//
// Interface: IRobotFiniteElementDataSet
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E699411F-FBB2-4F7F-B221-8B8E8E4EB598}
// *********************************************************************//
  IRobotFiniteElementDataSet = interface(IDispatch)
    ['{E699411F-FBB2-4F7F-B221-8B8E8E4EB598}']
    function Get_ElemCount: Integer; safecall;
    function GetElem(_elem_idx: Integer; const _elem_data: IRobotFiniteElementData): Integer; safecall;
    function Get_ObjectCount: Integer; safecall;
    function GetObjectNumber(_obj_idx: Integer): Integer; safecall;
    function GetElemCountForObject(_obj_idx: Integer): Integer; safecall;
    function GetElemForObject(_obj_idx: Integer; _elem_idx: Integer; 
                              const _ret_data: IRobotFiniteElementData): Integer; safecall;
    property ElemCount: Integer read Get_ElemCount;
    property ObjectCount: Integer read Get_ObjectCount;
  end;

// *********************************************************************//
// DispIntf:  IRobotFiniteElementDataSetDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E699411F-FBB2-4F7F-B221-8B8E8E4EB598}
// *********************************************************************//
  IRobotFiniteElementDataSetDisp = dispinterface
    ['{E699411F-FBB2-4F7F-B221-8B8E8E4EB598}']
    property ElemCount: Integer readonly dispid 1610743808;
    function GetElem(_elem_idx: Integer; const _elem_data: IRobotFiniteElementData): Integer; dispid 1610743809;
    property ObjectCount: Integer readonly dispid 1610743810;
    function GetObjectNumber(_obj_idx: Integer): Integer; dispid 1610743811;
    function GetElemCountForObject(_obj_idx: Integer): Integer; dispid 1610743812;
    function GetElemForObject(_obj_idx: Integer; _elem_idx: Integer; 
                              const _ret_data: IRobotFiniteElementData): Integer; dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotFiniteElementData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {947BFF1C-1565-46D1-A1B6-2C7CD9884A52}
// *********************************************************************//
  IRobotFiniteElementData = interface(IDispatch)
    ['{947BFF1C-1565-46D1-A1B6-2C7CD9884A52}']
    function Get_Number: Integer; safecall;
    function Get_NodeCount: Integer; safecall;
    function GetNode(_node_idx: Integer; out _ret_x: Double; out _ret_y: Double; out _ret_z: Double): Integer; safecall;
    function Get_Object_: Integer; safecall;
    property Number: Integer read Get_Number;
    property NodeCount: Integer read Get_NodeCount;
    property Object_: Integer read Get_Object_;
  end;

// *********************************************************************//
// DispIntf:  IRobotFiniteElementDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {947BFF1C-1565-46D1-A1B6-2C7CD9884A52}
// *********************************************************************//
  IRobotFiniteElementDataDisp = dispinterface
    ['{947BFF1C-1565-46D1-A1B6-2C7CD9884A52}']
    property Number: Integer readonly dispid 1610743808;
    property NodeCount: Integer readonly dispid 1610743809;
    function GetNode(_node_idx: Integer; out _ret_x: Double; out _ret_y: Double; out _ret_z: Double): Integer; dispid 1610743810;
    property Object_: Integer readonly dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotLinearReleaseServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F7AA0C2-AA40-11D4-B879-0050DA76755E}
// *********************************************************************//
  IRobotLinearReleaseServer = interface(IDispatch)
    ['{4F7AA0C2-AA40-11D4-B879-0050DA76755E}']
    function Get_Count: Integer; safecall;
    function Set_(_edge_obj_num: Integer; _edge_idx: Integer; _obj_num: Integer; 
                  _part_idx: Integer; const _label_name: WideString): WordBool; safecall;
    procedure Remove(_def_idx: Integer); safecall;
    function Find(_edge_obj_num: Integer; _edge_idx: Integer; _obj_num: Integer; _part_idx: Integer): Integer; safecall;
    function GetLabel(_def_idx: Integer): IRobotLabel; safecall;
    function Get(_def_idx: Integer): IRobotLinearReleaseDef; safecall;
    function FindObject(_obj_num: Integer; _part_idx: Integer; _start_def_idx: Integer): Integer; safecall;
    function FindEdge(_edge_obj: Integer; _edge_idx: Integer; _start_def_idx: Integer): Integer; safecall;
    function FindLabel(const _label_name: WideString; _start_def_idx: Integer): Integer; safecall;
    procedure SetMany(const _deflist: IRobotLinearReleaseDefList); safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotLinearReleaseServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F7AA0C2-AA40-11D4-B879-0050DA76755E}
// *********************************************************************//
  IRobotLinearReleaseServerDisp = dispinterface
    ['{4F7AA0C2-AA40-11D4-B879-0050DA76755E}']
    property Count: Integer readonly dispid 1610743808;
    function Set_(_edge_obj_num: Integer; _edge_idx: Integer; _obj_num: Integer; 
                  _part_idx: Integer; const _label_name: WideString): WordBool; dispid 1610743809;
    procedure Remove(_def_idx: Integer); dispid 1610743810;
    function Find(_edge_obj_num: Integer; _edge_idx: Integer; _obj_num: Integer; _part_idx: Integer): Integer; dispid 1610743811;
    function GetLabel(_def_idx: Integer): IRobotLabel; dispid 1610743812;
    function Get(_def_idx: Integer): IRobotLinearReleaseDef; dispid 1610743813;
    function FindObject(_obj_num: Integer; _part_idx: Integer; _start_def_idx: Integer): Integer; dispid 1610743814;
    function FindEdge(_edge_obj: Integer; _edge_idx: Integer; _start_def_idx: Integer): Integer; dispid 1610743815;
    function FindLabel(const _label_name: WideString; _start_def_idx: Integer): Integer; dispid 1610743816;
    procedure SetMany(const _deflist: IRobotLinearReleaseDefList); dispid 1610743817;
  end;

// *********************************************************************//
// Interface: IRobotLinearReleaseDef
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {00552E42-BA0A-11D4-B883-0050DA76755E}
// *********************************************************************//
  IRobotLinearReleaseDef = interface(IDispatch)
    ['{00552E42-BA0A-11D4-B883-0050DA76755E}']
    function Get_EdgeObject: Integer; safecall;
    procedure Set_EdgeObject(ret: Integer); safecall;
    function Get_EdgeIdx: Integer; safecall;
    procedure Set_EdgeIdx(ret: Integer); safecall;
    function Get_Object_: Integer; safecall;
    procedure Set_Object_(ret: Integer); safecall;
    function Get_PartIdx: Integer; safecall;
    procedure Set_PartIdx(ret: Integer); safecall;
    function Get_LabelName: WideString; safecall;
    procedure Set_LabelName(const ret: WideString); safecall;
    property EdgeObject: Integer read Get_EdgeObject write Set_EdgeObject;
    property EdgeIdx: Integer read Get_EdgeIdx write Set_EdgeIdx;
    property Object_: Integer read Get_Object_ write Set_Object_;
    property PartIdx: Integer read Get_PartIdx write Set_PartIdx;
    property LabelName: WideString read Get_LabelName write Set_LabelName;
  end;

// *********************************************************************//
// DispIntf:  IRobotLinearReleaseDefDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {00552E42-BA0A-11D4-B883-0050DA76755E}
// *********************************************************************//
  IRobotLinearReleaseDefDisp = dispinterface
    ['{00552E42-BA0A-11D4-B883-0050DA76755E}']
    property EdgeObject: Integer dispid 1610743808;
    property EdgeIdx: Integer dispid 1610743810;
    property Object_: Integer dispid 1610743812;
    property PartIdx: Integer dispid 1610743814;
    property LabelName: WideString dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRobotLinearReleaseDefList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {432DD6F4-1C8A-4262-A37E-993861B40DC8}
// *********************************************************************//
  IRobotLinearReleaseDefList = interface(IDispatch)
    ['{432DD6F4-1C8A-4262-A37E-993861B40DC8}']
    function Get_Count: Integer; safecall;
    function Add(_edge_obj_num: Integer; _edge_idx: Integer; _obj_num: Integer; _part_idx: Integer; 
                 const _label_name: WideString): Integer; safecall;
    procedure Clear; safecall;
    function Get(_idx: Integer; out _edge_obj_num: Integer; out _edge_idx: Integer; 
                 out _obj_num: Integer; out _part_idx: Integer; out _label_name: WideString): WordBool; safecall;
    procedure Remove(_idx: Integer); safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotLinearReleaseDefListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {432DD6F4-1C8A-4262-A37E-993861B40DC8}
// *********************************************************************//
  IRobotLinearReleaseDefListDisp = dispinterface
    ['{432DD6F4-1C8A-4262-A37E-993861B40DC8}']
    property Count: Integer readonly dispid 1610743808;
    function Add(_edge_obj_num: Integer; _edge_idx: Integer; _obj_num: Integer; _part_idx: Integer; 
                 const _label_name: WideString): Integer; dispid 1610743809;
    procedure Clear; dispid 1610743810;
    function Get(_idx: Integer; out _edge_obj_num: Integer; out _edge_idx: Integer; 
                 out _obj_num: Integer; out _part_idx: Integer; out _label_name: WideString): WordBool; dispid 1610743811;
    procedure Remove(_idx: Integer); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotPointsArray
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ED408960-197C-4ED7-AFE1-63C7A833525C}
// *********************************************************************//
  IRobotPointsArray = interface(IDispatch)
    ['{ED408960-197C-4ED7-AFE1-63C7A833525C}']
    function Get_Count: Integer; safecall;
    procedure SetSize(_size: Integer); safecall;
    procedure Set_(_idx: Integer; _x: Double; _y: Double; _z: Double); safecall;
    procedure Get(_idx: Integer; out _x: Double; out _y: Double; out _z: Double); safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotPointsArrayDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ED408960-197C-4ED7-AFE1-63C7A833525C}
// *********************************************************************//
  IRobotPointsArrayDisp = dispinterface
    ['{ED408960-197C-4ED7-AFE1-63C7A833525C}']
    property Count: Integer readonly dispid 1610743808;
    procedure SetSize(_size: Integer); dispid 1610743809;
    procedure Set_(_idx: Integer; _x: Double; _y: Double; _z: Double); dispid 1610743810;
    procedure Get(_idx: Integer; out _x: Double; out _y: Double; out _z: Double); dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotFiniteElementServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {78AFC7B6-C43A-11D4-B88D-0050DA76755E}
// *********************************************************************//
  IRobotFiniteElementServer = interface(IRobotDataObjectServer)
    ['{78AFC7B6-C43A-11D4-B88D-0050DA76755E}']
    function Get_FreeNumber: Integer; safecall;
    procedure MeshConsolidate(_coeff: Double; const _sel: IRobotSelection; _auto_freeze: WordBool); safecall;
    procedure MeshConcentrate(_type: IRobotMeshRefinementType; const _sel: IRobotSelection; 
                              _auto_freeze: WordBool); safecall;
    procedure Create(_number: Integer; const _nodes: IRobotNumbersArray; _update_model: WordBool); safecall;
    procedure Update; safecall;
    function CalcArea(_ele_num: Integer): Double; safecall;
    property FreeNumber: Integer read Get_FreeNumber;
  end;

// *********************************************************************//
// DispIntf:  IRobotFiniteElementServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {78AFC7B6-C43A-11D4-B88D-0050DA76755E}
// *********************************************************************//
  IRobotFiniteElementServerDisp = dispinterface
    ['{78AFC7B6-C43A-11D4-B88D-0050DA76755E}']
    property FreeNumber: Integer readonly dispid 1610809344;
    procedure MeshConsolidate(_coeff: Double; const _sel: IRobotSelection; _auto_freeze: WordBool); dispid 1610809345;
    procedure MeshConcentrate(_type: IRobotMeshRefinementType; const _sel: IRobotSelection; 
                              _auto_freeze: WordBool); dispid 1610809346;
    procedure Create(_number: Integer; const _nodes: IRobotNumbersArray; _update_model: WordBool); dispid 1610809347;
    procedure Update; dispid 1610809348;
    function CalcArea(_ele_num: Integer): Double; dispid 1610809349;
    function Exist(obj_num: Integer): Integer; dispid 1610743808;
    function Get(obj_num: Integer): IRobotDataObject; dispid 1610743809;
    function GetMany(const obj_sel: IRobotSelection): IRobotCollection; dispid 1610743810;
    function GetAll: IRobotCollection; dispid 1610743811;
    procedure Delete(obj_num: Integer); dispid 1610743812;
    procedure DeleteMany(const obj_sel: IRobotSelection); dispid 1610743813;
    procedure SetLabel(const obj_sel: IRobotSelection; lab_type: IRobotLabelType; 
                       const lab_name: WideString); dispid 1610743814;
    procedure RemoveLabel(const obj_sel: IRobotSelection; lab_type: IRobotLabelType); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotGroupServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {82448565-0567-4D66-88EE-AE70FAD07F51}
// *********************************************************************//
  IRobotGroupServer = interface(IDispatch)
    ['{82448565-0567-4D66-88EE-AE70FAD07F51}']
    function GetCount(_obj_type: IRobotObjectType): Integer; safecall;
    function Get(_obj_type: IRobotObjectType; _idx: Integer): IRobotGroup; safecall;
    function Find(_obj_type: IRobotObjectType; const _grp_name: WideString): Integer; safecall;
    procedure Delete(_obj_type: IRobotObjectType; _idx: Integer); safecall;
    function Create(_obj_type: IRobotObjectType; const _name: WideString; 
                    const _sel_list: WideString; _color: Integer): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotGroupServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {82448565-0567-4D66-88EE-AE70FAD07F51}
// *********************************************************************//
  IRobotGroupServerDisp = dispinterface
    ['{82448565-0567-4D66-88EE-AE70FAD07F51}']
    function GetCount(_obj_type: IRobotObjectType): Integer; dispid 1610743808;
    function Get(_obj_type: IRobotObjectType; _idx: Integer): IRobotGroup; dispid 1610743809;
    function Find(_obj_type: IRobotObjectType; const _grp_name: WideString): Integer; dispid 1610743810;
    procedure Delete(_obj_type: IRobotObjectType; _idx: Integer); dispid 1610743811;
    function Create(_obj_type: IRobotObjectType; const _name: WideString; 
                    const _sel_list: WideString; _color: Integer): Integer; dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotGroup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {24A518D7-EEE2-442E-BB52-826434CA8C05}
// *********************************************************************//
  IRobotGroup = interface(IDispatch)
    ['{24A518D7-EEE2-442E-BB52-826434CA8C05}']
    function Get_ObjectType: IRobotObjectType; safecall;
    procedure Set_ObjectType(ret: IRobotObjectType); safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_SelList: WideString; safecall;
    procedure Set_SelList(const ret: WideString); safecall;
    function Get_Color: Integer; safecall;
    procedure Set_Color(ret: Integer); safecall;
    function CreateSelection: IRobotSelection; safecall;
    function CreateCollection: IRobotCollection; safecall;
    procedure Read; safecall;
    procedure Store; safecall;
    property ObjectType: IRobotObjectType read Get_ObjectType write Set_ObjectType;
    property Name: WideString read Get_Name write Set_Name;
    property SelList: WideString read Get_SelList write Set_SelList;
    property Color: Integer read Get_Color write Set_Color;
  end;

// *********************************************************************//
// DispIntf:  IRobotGroupDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {24A518D7-EEE2-442E-BB52-826434CA8C05}
// *********************************************************************//
  IRobotGroupDisp = dispinterface
    ['{24A518D7-EEE2-442E-BB52-826434CA8C05}']
    property ObjectType: IRobotObjectType dispid 1610743808;
    property Name: WideString dispid 1610743810;
    property SelList: WideString dispid 1610743812;
    property Color: Integer dispid 1610743814;
    function CreateSelection: IRobotSelection; dispid 1610743816;
    function CreateCollection: IRobotCollection; dispid 1610743817;
    procedure Read; dispid 1610743818;
    procedure Store; dispid 1610743819;
  end;

// *********************************************************************//
// Interface: IRobotStructureEditTools
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E298E2D4-5331-4BE3-8C21-72B42CDECE9F}
// *********************************************************************//
  IRobotStructureEditTools = interface(IDispatch)
    ['{E298E2D4-5331-4BE3-8C21-72B42CDECE9F}']
    function DivideBar(_bar_number: Integer; const _div_points: IRobotValuesArray; 
                       _relative: WordBool): IRobotNumbersArray; safecall;
    function TranslateBar(_bar_number: Integer; _dx: Double; _dy: Double; _dz: Double; 
                          _trans_option: IRobotTranslateOptions; _repetitions: Integer): IRobotNumbersArray; safecall;
    function TranslateNode(_node_number: Integer; _dx: Double; _dy: Double; _dz: Double; 
                           _trans_option: IRobotTranslateOptions; _repetitions: Integer): IRobotNumbersArray; safecall;
    procedure SelTranslate(_dx: Double; _dy: Double; _dz: Double; _options: IRobotTranslateOptions; 
                           _repetitions: Integer); safecall;
    procedure SelRotate(_p0x: Double; _p0y: Double; _p0z: Double; _p1x: Double; _p1y: Double; 
                        _p1z: Double; _angle: Double; _options: IRobotTranslateOptions; 
                        _repetitions: Integer); safecall;
    procedure SelScale(_p0x: Double; _p0y: Double; _p0z: Double; _factor: Double; 
                       _options: IRobotTranslateOptions; _repetitions: Integer); safecall;
    procedure SelMirror(_p0x: Double; _p0y: Double; _p0z: Double; _p1x: Double; _p1y: Double; 
                        _p1z: Double; _p2x: Double; _p2y: Double; _p2z: Double; 
                        _options: IRobotTranslateOptions; _repetitions: Integer); safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotStructureEditToolsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E298E2D4-5331-4BE3-8C21-72B42CDECE9F}
// *********************************************************************//
  IRobotStructureEditToolsDisp = dispinterface
    ['{E298E2D4-5331-4BE3-8C21-72B42CDECE9F}']
    function DivideBar(_bar_number: Integer; const _div_points: IRobotValuesArray; 
                       _relative: WordBool): IRobotNumbersArray; dispid 1610743808;
    function TranslateBar(_bar_number: Integer; _dx: Double; _dy: Double; _dz: Double; 
                          _trans_option: IRobotTranslateOptions; _repetitions: Integer): IRobotNumbersArray; dispid 1610743809;
    function TranslateNode(_node_number: Integer; _dx: Double; _dy: Double; _dz: Double; 
                           _trans_option: IRobotTranslateOptions; _repetitions: Integer): IRobotNumbersArray; dispid 1610743810;
    procedure SelTranslate(_dx: Double; _dy: Double; _dz: Double; _options: IRobotTranslateOptions; 
                           _repetitions: Integer); dispid 1610743811;
    procedure SelRotate(_p0x: Double; _p0y: Double; _p0z: Double; _p1x: Double; _p1y: Double; 
                        _p1z: Double; _angle: Double; _options: IRobotTranslateOptions; 
                        _repetitions: Integer); dispid 1610743812;
    procedure SelScale(_p0x: Double; _p0y: Double; _p0z: Double; _factor: Double; 
                       _options: IRobotTranslateOptions; _repetitions: Integer); dispid 1610743813;
    procedure SelMirror(_p0x: Double; _p0y: Double; _p0z: Double; _p1x: Double; _p1y: Double; 
                        _p1z: Double; _p2x: Double; _p2y: Double; _p2z: Double; 
                        _options: IRobotTranslateOptions; _repetitions: Integer); dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotStructureCache
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B4BD2F67-C09D-4F38-83B7-FF261369E38D}
// *********************************************************************//
  IRobotStructureCache = interface(IDispatch)
    ['{B4BD2F67-C09D-4F38-83B7-FF261369E38D}']
    procedure AddNode(_number: Integer; _x: Double; _y: Double; _z: Double); safecall;
    procedure AddBar(_number: Integer; _start_node: Integer; _end_node: Integer; 
                     const _sect_name: WideString; const _mater_name: WideString; _gamma: Double); safecall;
    procedure SetBarLabel(_bar: Integer; _lab_type: IRobotLabelType; const _lab_name: WideString; 
                          _ext_par: Integer); safecall;
    function EnsureNodeExist(_x: Double; _y: Double; _z: Double): Integer; safecall;
    procedure SetBarName(_bar_num: Integer; const _name_tmpl: WideString); safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotStructureCacheDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B4BD2F67-C09D-4F38-83B7-FF261369E38D}
// *********************************************************************//
  IRobotStructureCacheDisp = dispinterface
    ['{B4BD2F67-C09D-4F38-83B7-FF261369E38D}']
    procedure AddNode(_number: Integer; _x: Double; _y: Double; _z: Double); dispid 1610743808;
    procedure AddBar(_number: Integer; _start_node: Integer; _end_node: Integer; 
                     const _sect_name: WideString; const _mater_name: WideString; _gamma: Double); dispid 1610743809;
    procedure SetBarLabel(_bar: Integer; _lab_type: IRobotLabelType; const _lab_name: WideString; 
                          _ext_par: Integer); dispid 1610743810;
    function EnsureNodeExist(_x: Double; _y: Double; _z: Double): Integer; dispid 1610743811;
    procedure SetBarName(_bar_num: Integer; const _name_tmpl: WideString); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotStructureApplyInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2663B709-C3C5-43A2-964F-9129F6BD2281}
// *********************************************************************//
  IRobotStructureApplyInfo = interface(IDispatch)
    ['{2663B709-C3C5-43A2-964F-9129F6BD2281}']
    function Get_Nodes: IRobotNumbersArray; safecall;
    function Get_Bars: IRobotNumbersArray; safecall;
    property Nodes: IRobotNumbersArray read Get_Nodes;
    property Bars: IRobotNumbersArray read Get_Bars;
  end;

// *********************************************************************//
// DispIntf:  IRobotStructureApplyInfoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2663B709-C3C5-43A2-964F-9129F6BD2281}
// *********************************************************************//
  IRobotStructureApplyInfoDisp = dispinterface
    ['{2663B709-C3C5-43A2-964F-9129F6BD2281}']
    property Nodes: IRobotNumbersArray readonly dispid 1610743808;
    property Bars: IRobotNumbersArray readonly dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotStoreyMngr
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4FD29987-1B66-4941-9C26-BF4EFAF53F2B}
// *********************************************************************//
  IRobotStoreyMngr = interface(IDispatch)
    ['{4FD29987-1B66-4941-9C26-BF4EFAF53F2B}']
    function Get_DisregardedObjects: WideString; safecall;
    procedure Set_DisregardedObjects(const ret: WideString); safecall;
    function Get_Count: Integer; safecall;
    function Get(_idx: Integer): IRobotStorey; safecall;
    function Find(const _story_name: WideString): Integer; safecall;
    procedure Delete(_idx: Integer); safecall;
    procedure DeleteAll; safecall;
    function CreateEx(const _name: WideString; _bottom_level: Double; _height: Double; 
                      const _objects: WideString; _color: Integer): Integer; safecall;
    function Create(const _name: WideString; _bottom_level: Double; _height: Double): Integer; safecall;
    function Get_FilterStorey: WideString; safecall;
    procedure Set_FilterStorey(const ret: WideString); safecall;
    function Get_BaseLevel: Double; safecall;
    procedure Set_BaseLevel(ret: Double); safecall;
    function Create2(const _name: WideString; _top_level: Double): Integer; safecall;
    function Create2Ex(const _name: WideString; _top_level: Double; const _objects: WideString; 
                       _color: Integer): Integer; safecall;
    property DisregardedObjects: WideString read Get_DisregardedObjects write Set_DisregardedObjects;
    property Count: Integer read Get_Count;
    property FilterStorey: WideString read Get_FilterStorey write Set_FilterStorey;
    property BaseLevel: Double read Get_BaseLevel write Set_BaseLevel;
  end;

// *********************************************************************//
// DispIntf:  IRobotStoreyMngrDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4FD29987-1B66-4941-9C26-BF4EFAF53F2B}
// *********************************************************************//
  IRobotStoreyMngrDisp = dispinterface
    ['{4FD29987-1B66-4941-9C26-BF4EFAF53F2B}']
    property DisregardedObjects: WideString dispid 1610743808;
    property Count: Integer readonly dispid 1610743810;
    function Get(_idx: Integer): IRobotStorey; dispid 1610743811;
    function Find(const _story_name: WideString): Integer; dispid 1610743812;
    procedure Delete(_idx: Integer); dispid 1610743813;
    procedure DeleteAll; dispid 1610743814;
    function CreateEx(const _name: WideString; _bottom_level: Double; _height: Double; 
                      const _objects: WideString; _color: Integer): Integer; dispid 1610743815;
    function Create(const _name: WideString; _bottom_level: Double; _height: Double): Integer; dispid 1610743816;
    property FilterStorey: WideString dispid 1610743817;
    property BaseLevel: Double dispid 1610743819;
    function Create2(const _name: WideString; _top_level: Double): Integer; dispid 1610743821;
    function Create2Ex(const _name: WideString; _top_level: Double; const _objects: WideString; 
                       _color: Integer): Integer; dispid 1610743822;
  end;

// *********************************************************************//
// Interface: IRobotStorey
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5212BDE1-FB5F-423D-B631-156E6B3E4156}
// *********************************************************************//
  IRobotStorey = interface(IDispatch)
    ['{5212BDE1-FB5F-423D-B631-156E6B3E4156}']
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_Level: Double; safecall;
    procedure Set_Level(ret: Double); safecall;
    function Get_Height: Double; safecall;
    procedure Set_Height(ret: Double); safecall;
    function Get_Color: Integer; safecall;
    procedure Set_Color(ret: Integer); safecall;
    function Get_AutomaticSelection: WordBool; safecall;
    procedure Set_AutomaticSelection(ret: WordBool); safecall;
    function Get_Objects: WideString; safecall;
    procedure Set_Objects(const ret: WideString); safecall;
    function Get_TopLevel: Double; safecall;
    procedure Set_TopLevel(ret: Double); safecall;
    procedure SetTopLevel(_top_level: Double; _affect_geometry: WordBool); safecall;
    procedure SetHeight(_height: Double; _affect_geometry: WordBool); safecall;
    function Get_LX: Double; safecall;
    function Get_Ly: Double; safecall;
    function Get_Ex1: Double; safecall;
    function Get_Ey1: Double; safecall;
    property Name: WideString read Get_Name write Set_Name;
    property Level: Double read Get_Level write Set_Level;
    property Height: Double read Get_Height write Set_Height;
    property Color: Integer read Get_Color write Set_Color;
    property AutomaticSelection: WordBool read Get_AutomaticSelection write Set_AutomaticSelection;
    property Objects: WideString read Get_Objects write Set_Objects;
    property TopLevel: Double read Get_TopLevel write Set_TopLevel;
    property LX: Double read Get_LX;
    property Ly: Double read Get_Ly;
    property Ex1: Double read Get_Ex1;
    property Ey1: Double read Get_Ey1;
  end;

// *********************************************************************//
// DispIntf:  IRobotStoreyDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5212BDE1-FB5F-423D-B631-156E6B3E4156}
// *********************************************************************//
  IRobotStoreyDisp = dispinterface
    ['{5212BDE1-FB5F-423D-B631-156E6B3E4156}']
    property Name: WideString dispid 1610743808;
    property Level: Double dispid 1610743810;
    property Height: Double dispid 1610743812;
    property Color: Integer dispid 1610743814;
    property AutomaticSelection: WordBool dispid 1610743816;
    property Objects: WideString dispid 1610743818;
    property TopLevel: Double dispid 1610743820;
    procedure SetTopLevel(_top_level: Double; _affect_geometry: WordBool); dispid 1610743822;
    procedure SetHeight(_height: Double; _affect_geometry: WordBool); dispid 1610743823;
    property LX: Double readonly dispid 1610743824;
    property Ly: Double readonly dispid 1610743825;
    property Ex1: Double readonly dispid 1610743826;
    property Ey1: Double readonly dispid 1610743827;
  end;

// *********************************************************************//
// Interface: IRobotGroupObjectServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2574657F-483A-4513-B4D8-79DAC2CCBB56}
// *********************************************************************//
  IRobotGroupObjectServer = interface(IDispatch)
    ['{2574657F-483A-4513-B4D8-79DAC2CCBB56}']
    function GroupSelected: Integer; safecall;
    function GroupGiven(const _object_sel: WideString; const _fe_sel: WideString; 
                        const _node_sel: WideString; _auto_include: WordBool): Integer; safecall;
    function FindFirst: Integer; safecall;
    function FindNext(_prev_group_obj: Integer): Integer; safecall;
    procedure Explode(_group_obj: Integer); safecall;
    procedure GetContents(_group_obj: Integer; out _object_sel: WideString; 
                          out _fe_sel: WideString; out _node_sel: WideString); safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotGroupObjectServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2574657F-483A-4513-B4D8-79DAC2CCBB56}
// *********************************************************************//
  IRobotGroupObjectServerDisp = dispinterface
    ['{2574657F-483A-4513-B4D8-79DAC2CCBB56}']
    function GroupSelected: Integer; dispid 1610743808;
    function GroupGiven(const _object_sel: WideString; const _fe_sel: WideString; 
                        const _node_sel: WideString; _auto_include: WordBool): Integer; dispid 1610743809;
    function FindFirst: Integer; dispid 1610743810;
    function FindNext(_prev_group_obj: Integer): Integer; dispid 1610743811;
    procedure Explode(_group_obj: Integer); dispid 1610743812;
    procedure GetContents(_group_obj: Integer; out _object_sel: WideString; 
                          out _fe_sel: WideString; out _node_sel: WideString); dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotStructureQuantitySurvey
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DC424D31-F411-4061-8D21-BCE3F367094F}
// *********************************************************************//
  IRobotStructureQuantitySurvey = interface(IDispatch)
    ['{DC424D31-F411-4061-8D21-BCE3F367094F}']
    function Get_Materials: IRobotMaterialQuantitySurvey; safecall;
    function Get_BarSections: IRobotBarSectionQuantitySurvey; safecall;
    function Get_PanelThickness: IRobotThicknessQuantitySurvey; safecall;
    property Materials: IRobotMaterialQuantitySurvey read Get_Materials;
    property BarSections: IRobotBarSectionQuantitySurvey read Get_BarSections;
    property PanelThickness: IRobotThicknessQuantitySurvey read Get_PanelThickness;
  end;

// *********************************************************************//
// DispIntf:  IRobotStructureQuantitySurveyDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DC424D31-F411-4061-8D21-BCE3F367094F}
// *********************************************************************//
  IRobotStructureQuantitySurveyDisp = dispinterface
    ['{DC424D31-F411-4061-8D21-BCE3F367094F}']
    property Materials: IRobotMaterialQuantitySurvey readonly dispid 1610743808;
    property BarSections: IRobotBarSectionQuantitySurvey readonly dispid 1610743809;
    property PanelThickness: IRobotThicknessQuantitySurvey readonly dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotMaterialQuantitySurvey
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6728D546-E5C1-4020-878A-C8610F67205D}
// *********************************************************************//
  IRobotMaterialQuantitySurvey = interface(IDispatch)
    ['{6728D546-E5C1-4020-878A-C8610F67205D}']
    function Get_Count: Integer; safecall;
    function GetName(_idx: Integer): WideString; safecall;
    function GetWeight(_obj_type: IRobotObjectType; _idx_or_name: OleVariant): Double; safecall;
    function GetVolume(_obj_type: IRobotObjectType; _idx_or_name: OleVariant): Double; safecall;
    function GetType(_idx_or_name: OleVariant): IRobotMaterialType; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotMaterialQuantitySurveyDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6728D546-E5C1-4020-878A-C8610F67205D}
// *********************************************************************//
  IRobotMaterialQuantitySurveyDisp = dispinterface
    ['{6728D546-E5C1-4020-878A-C8610F67205D}']
    property Count: Integer readonly dispid 1610743808;
    function GetName(_idx: Integer): WideString; dispid 1610743809;
    function GetWeight(_obj_type: IRobotObjectType; _idx_or_name: OleVariant): Double; dispid 1610743810;
    function GetVolume(_obj_type: IRobotObjectType; _idx_or_name: OleVariant): Double; dispid 1610743811;
    function GetType(_idx_or_name: OleVariant): IRobotMaterialType; dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotBarSectionQuantitySurvey
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {001CD2EA-6E65-4344-BAD3-0499ED029040}
// *********************************************************************//
  IRobotBarSectionQuantitySurvey = interface(IDispatch)
    ['{001CD2EA-6E65-4344-BAD3-0499ED029040}']
    function Get_Count: Integer; safecall;
    function GetName(_idx: Integer): WideString; safecall;
    function GetUnitWeight(_idx_or_name: OleVariant): Double; safecall;
    function GetWeight(_idx_or_name: OleVariant): Double; safecall;
    function GetVolume(_idx_or_name: OleVariant): Double; safecall;
    function GetPaintArea(_idx_or_name: OleVariant): Double; safecall;
    function GetLength(_idx_or_name: OleVariant): Double; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarSectionQuantitySurveyDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {001CD2EA-6E65-4344-BAD3-0499ED029040}
// *********************************************************************//
  IRobotBarSectionQuantitySurveyDisp = dispinterface
    ['{001CD2EA-6E65-4344-BAD3-0499ED029040}']
    property Count: Integer readonly dispid 1610743808;
    function GetName(_idx: Integer): WideString; dispid 1610743809;
    function GetUnitWeight(_idx_or_name: OleVariant): Double; dispid 1610743810;
    function GetWeight(_idx_or_name: OleVariant): Double; dispid 1610743811;
    function GetVolume(_idx_or_name: OleVariant): Double; dispid 1610743812;
    function GetPaintArea(_idx_or_name: OleVariant): Double; dispid 1610743813;
    function GetLength(_idx_or_name: OleVariant): Double; dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotThicknessQuantitySurvey
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {606EFDBD-4EB7-4F67-8718-5C1E07D70707}
// *********************************************************************//
  IRobotThicknessQuantitySurvey = interface(IDispatch)
    ['{606EFDBD-4EB7-4F67-8718-5C1E07D70707}']
    function Get_Count: Integer; safecall;
    function GetName(_idx: Integer): WideString; safecall;
    function GetUnitWeight(_idx_or_name: OleVariant): Double; safecall;
    function GetWeight(_idx_or_name: OleVariant): Double; safecall;
    function GetVolume(_idx_or_name: OleVariant): Double; safecall;
    function GetArea(_idx_or_name: OleVariant): Double; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotThicknessQuantitySurveyDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {606EFDBD-4EB7-4F67-8718-5C1E07D70707}
// *********************************************************************//
  IRobotThicknessQuantitySurveyDisp = dispinterface
    ['{606EFDBD-4EB7-4F67-8718-5C1E07D70707}']
    property Count: Integer readonly dispid 1610743808;
    function GetName(_idx: Integer): WideString; dispid 1610743809;
    function GetUnitWeight(_idx_or_name: OleVariant): Double; dispid 1610743810;
    function GetWeight(_idx_or_name: OleVariant): Double; dispid 1610743811;
    function GetVolume(_idx_or_name: OleVariant): Double; dispid 1610743812;
    function GetArea(_idx_or_name: OleVariant): Double; dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotStructureMergeData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {39D37C34-DDFD-4405-BD42-4457F14E20AC}
// *********************************************************************//
  IRobotStructureMergeData = interface(IDispatch)
    ['{39D37C34-DDFD-4405-BD42-4457F14E20AC}']
    function Get_Structure: IRobotStructure; safecall;
    function CreateStructure(_type: IRobotProjectType): WordBool; safecall;
    function LoadStructure(const _rtd_fpath: WideString): WordBool; safecall;
    property Structure: IRobotStructure read Get_Structure;
  end;

// *********************************************************************//
// DispIntf:  IRobotStructureMergeDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {39D37C34-DDFD-4405-BD42-4457F14E20AC}
// *********************************************************************//
  IRobotStructureMergeDataDisp = dispinterface
    ['{39D37C34-DDFD-4405-BD42-4457F14E20AC}']
    property Structure: IRobotStructure readonly dispid 1610743808;
    function CreateStructure(_type: IRobotProjectType): WordBool; dispid 1610743809;
    function LoadStructure(const _rtd_fpath: WideString): WordBool; dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotParamServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {007F6329-BF6A-4BD7-9FEE-4AC451E7D57E}
// *********************************************************************//
  IRobotParamServer = interface(IDispatch)
    ['{007F6329-BF6A-4BD7-9FEE-4AC451E7D57E}']
    function Get_Schemas: IRobotParamSchemaMngr; safecall;
    procedure SetParam(_unique_obj_id: Integer; const _param_id: WideString; 
                       const _param_val: WideString); safecall;
    procedure ResetParam(_unique_obj_id: Integer; const _param_id: WideString); safecall;
    function GetParam(_unique_obj_id: Integer; const _param_id: WideString; 
                      out _ret_param_val: WideString): WordBool; safecall;
    procedure RemoveParam(_unique_obj_id: Integer; const _param_id: WideString); safecall;
    function GetObjectsWithParam(const _param_id: WideString; const _obj_ids: IRobotNumbersArray): Integer; safecall;
    function GetObjectsWithParamVal(const _param_id: WideString; const _param_val: WideString; 
                                    const _obj_ids: IRobotNumbersArray): Integer; safecall;
    function GetAllParams(_unique_obj_id: Integer; const _params_col: IRobotParamCollection): Integer; safecall;
    function GetAllParamsForSchema(_unique_obj_id: Integer; const _schema_name: WideString; 
                                   const _params_col: IRobotParamCollection): Integer; safecall;
    function ParamUniqueIdToName(const _param_id: WideString; out _ret_schema_name: WideString; 
                                 out _ret_param_name: WideString): WordBool; safecall;
    procedure RemoveSchemaParams(_unique_obj_id: Integer; const _schema_name: WideString); safecall;
    property Schemas: IRobotParamSchemaMngr read Get_Schemas;
  end;

// *********************************************************************//
// DispIntf:  IRobotParamServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {007F6329-BF6A-4BD7-9FEE-4AC451E7D57E}
// *********************************************************************//
  IRobotParamServerDisp = dispinterface
    ['{007F6329-BF6A-4BD7-9FEE-4AC451E7D57E}']
    property Schemas: IRobotParamSchemaMngr readonly dispid 1610743808;
    procedure SetParam(_unique_obj_id: Integer; const _param_id: WideString; 
                       const _param_val: WideString); dispid 1610743809;
    procedure ResetParam(_unique_obj_id: Integer; const _param_id: WideString); dispid 1610743810;
    function GetParam(_unique_obj_id: Integer; const _param_id: WideString; 
                      out _ret_param_val: WideString): WordBool; dispid 1610743811;
    procedure RemoveParam(_unique_obj_id: Integer; const _param_id: WideString); dispid 1610743812;
    function GetObjectsWithParam(const _param_id: WideString; const _obj_ids: IRobotNumbersArray): Integer; dispid 1610743813;
    function GetObjectsWithParamVal(const _param_id: WideString; const _param_val: WideString; 
                                    const _obj_ids: IRobotNumbersArray): Integer; dispid 1610743814;
    function GetAllParams(_unique_obj_id: Integer; const _params_col: IRobotParamCollection): Integer; dispid 1610743815;
    function GetAllParamsForSchema(_unique_obj_id: Integer; const _schema_name: WideString; 
                                   const _params_col: IRobotParamCollection): Integer; dispid 1610743816;
    function ParamUniqueIdToName(const _param_id: WideString; out _ret_schema_name: WideString; 
                                 out _ret_param_name: WideString): WordBool; dispid 1610743817;
    procedure RemoveSchemaParams(_unique_obj_id: Integer; const _schema_name: WideString); dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRobotParamSchemaMngr
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {79DF4395-C649-46AA-A128-5D9BD6325962}
// *********************************************************************//
  IRobotParamSchemaMngr = interface(IDispatch)
    ['{79DF4395-C649-46AA-A128-5D9BD6325962}']
    function Get_SchemaCount: Integer; safecall;
    function Create(const _schema_name: WideString): IRobotParamSchema; safecall;
    function Get(_idx: Integer): IRobotParamSchema; safecall;
    function GetByName(const _schema_name: WideString): IRobotParamSchema; safecall;
    procedure Remove(_idx: Integer); safecall;
    procedure RemoveByName(const _schema_name: WideString); safecall;
    procedure Clear; safecall;
    function Exist(const _schema_name: WideString): WordBool; safecall;
    property SchemaCount: Integer read Get_SchemaCount;
  end;

// *********************************************************************//
// DispIntf:  IRobotParamSchemaMngrDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {79DF4395-C649-46AA-A128-5D9BD6325962}
// *********************************************************************//
  IRobotParamSchemaMngrDisp = dispinterface
    ['{79DF4395-C649-46AA-A128-5D9BD6325962}']
    property SchemaCount: Integer readonly dispid 1610743808;
    function Create(const _schema_name: WideString): IRobotParamSchema; dispid 1610743809;
    function Get(_idx: Integer): IRobotParamSchema; dispid 1610743810;
    function GetByName(const _schema_name: WideString): IRobotParamSchema; dispid 1610743811;
    procedure Remove(_idx: Integer); dispid 1610743812;
    procedure RemoveByName(const _schema_name: WideString); dispid 1610743813;
    procedure Clear; dispid 1610743814;
    function Exist(const _schema_name: WideString): WordBool; dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotParamSchema
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5592E0B4-569C-4495-A34E-3803B7C5E096}
// *********************************************************************//
  IRobotParamSchema = interface(IDispatch)
    ['{5592E0B4-569C-4495-A34E-3803B7C5E096}']
    function Get_Def: IRobotParamSchemaDef; safecall;
    procedure SetParam(_unique_obj_id: Integer; const _param_name: WideString; 
                       const _param_val: WideString); safecall;
    procedure ResetParam(_unique_obj_id: Integer; const _param_name: WideString); safecall;
    function GetParam(_unique_obj_id: Integer; const _param_name: WideString; 
                      out _ret_param_val: WideString): WordBool; safecall;
    procedure RemoveParam(_unique_obj_id: Integer; const _param_name: WideString); safecall;
    function GetObjectsWithParam(const _param_name: WideString; const _obj_ids: IRobotNumbersArray): Integer; safecall;
    function GetObjectsWithParamVal(const _param_name: WideString; const _param_val: WideString; 
                                    const _obj_ids: IRobotNumbersArray): Integer; safecall;
    function GetAllParams(_unique_obj_id: Integer; const _params_col: IRobotParamCollection): Integer; safecall;
    procedure RemoveAllParams(_unique_obj_id: Integer); safecall;
    property Def: IRobotParamSchemaDef read Get_Def;
  end;

// *********************************************************************//
// DispIntf:  IRobotParamSchemaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5592E0B4-569C-4495-A34E-3803B7C5E096}
// *********************************************************************//
  IRobotParamSchemaDisp = dispinterface
    ['{5592E0B4-569C-4495-A34E-3803B7C5E096}']
    property Def: IRobotParamSchemaDef readonly dispid 1610743808;
    procedure SetParam(_unique_obj_id: Integer; const _param_name: WideString; 
                       const _param_val: WideString); dispid 1610743809;
    procedure ResetParam(_unique_obj_id: Integer; const _param_name: WideString); dispid 1610743810;
    function GetParam(_unique_obj_id: Integer; const _param_name: WideString; 
                      out _ret_param_val: WideString): WordBool; dispid 1610743811;
    procedure RemoveParam(_unique_obj_id: Integer; const _param_name: WideString); dispid 1610743812;
    function GetObjectsWithParam(const _param_name: WideString; const _obj_ids: IRobotNumbersArray): Integer; dispid 1610743813;
    function GetObjectsWithParamVal(const _param_name: WideString; const _param_val: WideString; 
                                    const _obj_ids: IRobotNumbersArray): Integer; dispid 1610743814;
    function GetAllParams(_unique_obj_id: Integer; const _params_col: IRobotParamCollection): Integer; dispid 1610743815;
    procedure RemoveAllParams(_unique_obj_id: Integer); dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRobotParamSchemaDef
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C0E90675-53E7-4591-842B-FF2A79B36AA3}
// *********************************************************************//
  IRobotParamSchemaDef = interface(IDispatch)
    ['{C0E90675-53E7-4591-842B-FF2A79B36AA3}']
    function Get_Name: WideString; safecall;
    function Get_ParamCount: Integer; safecall;
    function AddSimpleParam(const _name: WideString; const _default_val: WideString): WordBool; safecall;
    function ParamNameToUniqueId(const _name: WideString): WideString; safecall;
    function GetParamName(_idx: Integer): WideString; safecall;
    procedure RemoveParam(const _param_name: WideString); safecall;
    function AddParam(const _param_def: IRobotParamDef): WordBool; safecall;
    function GetParam(_idx: Integer): IRobotParamDef; safecall;
    property Name: WideString read Get_Name;
    property ParamCount: Integer read Get_ParamCount;
  end;

// *********************************************************************//
// DispIntf:  IRobotParamSchemaDefDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C0E90675-53E7-4591-842B-FF2A79B36AA3}
// *********************************************************************//
  IRobotParamSchemaDefDisp = dispinterface
    ['{C0E90675-53E7-4591-842B-FF2A79B36AA3}']
    property Name: WideString readonly dispid 1610743808;
    property ParamCount: Integer readonly dispid 1610743809;
    function AddSimpleParam(const _name: WideString; const _default_val: WideString): WordBool; dispid 1610743810;
    function ParamNameToUniqueId(const _name: WideString): WideString; dispid 1610743811;
    function GetParamName(_idx: Integer): WideString; dispid 1610743812;
    procedure RemoveParam(const _param_name: WideString); dispid 1610743813;
    function AddParam(const _param_def: IRobotParamDef): WordBool; dispid 1610743814;
    function GetParam(_idx: Integer): IRobotParamDef; dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotParamDef
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6BF6F0A7-BCF2-4350-B48C-BE0759FDDEFC}
// *********************************************************************//
  IRobotParamDef = interface(IDispatch)
    ['{6BF6F0A7-BCF2-4350-B48C-BE0759FDDEFC}']
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_DefaultValue: WideString; safecall;
    procedure Set_DefaultValue(const ret: WideString); safecall;
    function Get_ValueList: IRobotNamesArray; safecall;
    function Get_ValueType: IRobotParamValueType; safecall;
    procedure Set_ValueType(ret: IRobotParamValueType); safecall;
    function Get_GuiVisible: WordBool; safecall;
    procedure Set_GuiVisible(ret: WordBool); safecall;
    function Get_GuiReadOnly: WordBool; safecall;
    procedure Set_GuiReadOnly(ret: WordBool); safecall;
    function Get_UniqueId: WideString; safecall;
    procedure GuiSetName(_lang_id: Integer; const _name: WideString); safecall;
    function GuiGetName(_lang_id: Integer): WideString; safecall;
    property Name: WideString read Get_Name write Set_Name;
    property DefaultValue: WideString read Get_DefaultValue write Set_DefaultValue;
    property ValueList: IRobotNamesArray read Get_ValueList;
    property ValueType: IRobotParamValueType read Get_ValueType write Set_ValueType;
    property GuiVisible: WordBool read Get_GuiVisible write Set_GuiVisible;
    property GuiReadOnly: WordBool read Get_GuiReadOnly write Set_GuiReadOnly;
    property UniqueId: WideString read Get_UniqueId;
  end;

// *********************************************************************//
// DispIntf:  IRobotParamDefDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6BF6F0A7-BCF2-4350-B48C-BE0759FDDEFC}
// *********************************************************************//
  IRobotParamDefDisp = dispinterface
    ['{6BF6F0A7-BCF2-4350-B48C-BE0759FDDEFC}']
    property Name: WideString dispid 1610743808;
    property DefaultValue: WideString dispid 1610743810;
    property ValueList: IRobotNamesArray readonly dispid 1610743812;
    property ValueType: IRobotParamValueType dispid 1610743813;
    property GuiVisible: WordBool dispid 1610743815;
    property GuiReadOnly: WordBool dispid 1610743817;
    property UniqueId: WideString readonly dispid 1610743819;
    procedure GuiSetName(_lang_id: Integer; const _name: WideString); dispid 1610743820;
    function GuiGetName(_lang_id: Integer): WideString; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IRobotParamCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {958D2D23-A854-4C99-B84A-014D511505D8}
// *********************************************************************//
  IRobotParamCollection = interface(IDispatch)
    ['{958D2D23-A854-4C99-B84A-014D511505D8}']
    function Get_Count: Integer; safecall;
    function GetValue(_idx: Integer): WideString; safecall;
    procedure GetFullName(_idx: Integer; out _param_name: WideString; out _schema_name: WideString); safecall;
    function GetId(_idx: Integer): WideString; safecall;
    function GetName(_idx: Integer): WideString; safecall;
    function Find(const _param_name: WideString; const _schema_name: WideString): Integer; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotParamCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {958D2D23-A854-4C99-B84A-014D511505D8}
// *********************************************************************//
  IRobotParamCollectionDisp = dispinterface
    ['{958D2D23-A854-4C99-B84A-014D511505D8}']
    property Count: Integer readonly dispid 1610743808;
    function GetValue(_idx: Integer): WideString; dispid 1610743809;
    procedure GetFullName(_idx: Integer; out _param_name: WideString; out _schema_name: WideString); dispid 1610743810;
    function GetId(_idx: Integer): WideString; dispid 1610743811;
    function GetName(_idx: Integer): WideString; dispid 1610743812;
    function Find(const _param_name: WideString; const _schema_name: WideString): Integer; dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotCodeCmbActiveCaseInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2E0F6BC2-5190-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbActiveCaseInfo = interface(IDispatch)
    ['{2E0F6BC2-5190-11D4-B83E-0050DA76755E}']
    function Get_IsSelected: WordBool; safecall;
    procedure Set_IsSelected(ret: WordBool); safecall;
    function Get_CaseNumber: Integer; safecall;
    function Get_CaseNature: IRobotCaseNature; safecall;
    function Get_GroupNumber: Integer; safecall;
    function Get_Coefficient: Double; safecall;
    procedure Set_Coefficient(ret: Double); safecall;
    property IsSelected: WordBool read Get_IsSelected write Set_IsSelected;
    property CaseNumber: Integer read Get_CaseNumber;
    property CaseNature: IRobotCaseNature read Get_CaseNature;
    property GroupNumber: Integer read Get_GroupNumber;
    property Coefficient: Double read Get_Coefficient write Set_Coefficient;
  end;

// *********************************************************************//
// DispIntf:  IRobotCodeCmbActiveCaseInfoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2E0F6BC2-5190-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRobotCodeCmbActiveCaseInfoDisp = dispinterface
    ['{2E0F6BC2-5190-11D4-B83E-0050DA76755E}']
    property IsSelected: WordBool dispid 1610743808;
    property CaseNumber: Integer readonly dispid 1610743810;
    property CaseNature: IRobotCaseNature readonly dispid 1610743811;
    property GroupNumber: Integer readonly dispid 1610743812;
    property Coefficient: Double dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotBarCableData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2B3902B2-A58F-11D4-A3A4-00105ADE99A8}
// *********************************************************************//
  IRobotBarCableData = interface(IDispatch)
    ['{2B3902B2-A58F-11D4-A3A4-00105ADE99A8}']
    function Get_SectionAX: Double; safecall;
    procedure Set_SectionAX(ret: Double); safecall;
    function Get_MaterialName: WideString; safecall;
    procedure Set_MaterialName(const ret: WideString); safecall;
    function Get_AssemblingParam: IRobotBarCableAssemblingParamType; safecall;
    procedure Set_AssemblingParam(ret: IRobotBarCableAssemblingParamType); safecall;
    function Get_AssemblingParamValue: Double; safecall;
    procedure Set_AssemblingParamValue(ret: Double); safecall;
    property SectionAX: Double read Get_SectionAX write Set_SectionAX;
    property MaterialName: WideString read Get_MaterialName write Set_MaterialName;
    property AssemblingParam: IRobotBarCableAssemblingParamType read Get_AssemblingParam write Set_AssemblingParam;
    property AssemblingParamValue: Double read Get_AssemblingParamValue write Set_AssemblingParamValue;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarCableDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2B3902B2-A58F-11D4-A3A4-00105ADE99A8}
// *********************************************************************//
  IRobotBarCableDataDisp = dispinterface
    ['{2B3902B2-A58F-11D4-A3A4-00105ADE99A8}']
    property SectionAX: Double dispid 1610743808;
    property MaterialName: WideString dispid 1610743810;
    property AssemblingParam: IRobotBarCableAssemblingParamType dispid 1610743812;
    property AssemblingParamValue: Double dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotLinearReleaseData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {19D1B942-A673-11D4-B876-0050DA76755E}
// *********************************************************************//
  IRobotLinearReleaseData = interface(IDispatch)
    ['{19D1B942-A673-11D4-B876-0050DA76755E}']
    function Get_UX: IRobotLinearReleaseDefinitionType; safecall;
    procedure Set_UX(ret: IRobotLinearReleaseDefinitionType); safecall;
    function Get_UY: IRobotLinearReleaseDefinitionType; safecall;
    procedure Set_UY(ret: IRobotLinearReleaseDefinitionType); safecall;
    function Get_UZ: IRobotLinearReleaseDefinitionType; safecall;
    procedure Set_UZ(ret: IRobotLinearReleaseDefinitionType); safecall;
    function Get_RX: IRobotLinearReleaseDefinitionType; safecall;
    procedure Set_RX(ret: IRobotLinearReleaseDefinitionType); safecall;
    function Get_KX: Double; safecall;
    procedure Set_KX(ret: Double); safecall;
    function Get_KY: Double; safecall;
    procedure Set_KY(ret: Double); safecall;
    function Get_KZ: Double; safecall;
    procedure Set_KZ(ret: Double); safecall;
    function Get_HX: Double; safecall;
    procedure Set_HX(ret: Double); safecall;
    property UX: IRobotLinearReleaseDefinitionType read Get_UX write Set_UX;
    property UY: IRobotLinearReleaseDefinitionType read Get_UY write Set_UY;
    property UZ: IRobotLinearReleaseDefinitionType read Get_UZ write Set_UZ;
    property RX: IRobotLinearReleaseDefinitionType read Get_RX write Set_RX;
    property KX: Double read Get_KX write Set_KX;
    property KY: Double read Get_KY write Set_KY;
    property KZ: Double read Get_KZ write Set_KZ;
    property HX: Double read Get_HX write Set_HX;
  end;

// *********************************************************************//
// DispIntf:  IRobotLinearReleaseDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {19D1B942-A673-11D4-B876-0050DA76755E}
// *********************************************************************//
  IRobotLinearReleaseDataDisp = dispinterface
    ['{19D1B942-A673-11D4-B876-0050DA76755E}']
    property UX: IRobotLinearReleaseDefinitionType dispid 1610743808;
    property UY: IRobotLinearReleaseDefinitionType dispid 1610743810;
    property UZ: IRobotLinearReleaseDefinitionType dispid 1610743812;
    property RX: IRobotLinearReleaseDefinitionType dispid 1610743814;
    property KX: Double dispid 1610743816;
    property KY: Double dispid 1610743818;
    property KZ: Double dispid 1610743820;
    property HX: Double dispid 1610743822;
  end;

// *********************************************************************//
// Interface: IRobotBarElasticGroundData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {446E6472-AB48-11D4-B87A-0050DA76755E}
// *********************************************************************//
  IRobotBarElasticGroundData = interface(IDispatch)
    ['{446E6472-AB48-11D4-B87A-0050DA76755E}']
    function Get_KY: Double; safecall;
    procedure Set_KY(ret: Double); safecall;
    function Get_KZ: Double; safecall;
    procedure Set_KZ(ret: Double); safecall;
    function Get_HX: Double; safecall;
    procedure Set_HX(ret: Double); safecall;
    procedure SetOneDir(_uplift_dir: IRobotUpliftDirection; _uplift_type: IRobotUpliftSense); safecall;
    function GetOneDir(_uplift_dir: IRobotUpliftDirection): IRobotUpliftSense; safecall;
    property KY: Double read Get_KY write Set_KY;
    property KZ: Double read Get_KZ write Set_KZ;
    property HX: Double read Get_HX write Set_HX;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarElasticGroundDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {446E6472-AB48-11D4-B87A-0050DA76755E}
// *********************************************************************//
  IRobotBarElasticGroundDataDisp = dispinterface
    ['{446E6472-AB48-11D4-B87A-0050DA76755E}']
    property KY: Double dispid 1610743808;
    property KZ: Double dispid 1610743810;
    property HX: Double dispid 1610743812;
    procedure SetOneDir(_uplift_dir: IRobotUpliftDirection; _uplift_type: IRobotUpliftSense); dispid 1610743814;
    function GetOneDir(_uplift_dir: IRobotUpliftDirection): IRobotUpliftSense; dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotNodeRigidLinkData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FF4E0492-ABDC-11D4-B87B-0050DA76755E}
// *********************************************************************//
  IRobotNodeRigidLinkData = interface(IDispatch)
    ['{FF4E0492-ABDC-11D4-B87B-0050DA76755E}']
    function Get_UX: WordBool; safecall;
    procedure Set_UX(ret: WordBool); safecall;
    function Get_UY: WordBool; safecall;
    procedure Set_UY(ret: WordBool); safecall;
    function Get_UZ: WordBool; safecall;
    procedure Set_UZ(ret: WordBool); safecall;
    function Get_RX: WordBool; safecall;
    procedure Set_RX(ret: WordBool); safecall;
    function Get_RY: WordBool; safecall;
    procedure Set_RY(ret: WordBool); safecall;
    function Get_RZ: WordBool; safecall;
    procedure Set_RZ(ret: WordBool); safecall;
    property UX: WordBool read Get_UX write Set_UX;
    property UY: WordBool read Get_UY write Set_UY;
    property UZ: WordBool read Get_UZ write Set_UZ;
    property RX: WordBool read Get_RX write Set_RX;
    property RY: WordBool read Get_RY write Set_RY;
    property RZ: WordBool read Get_RZ write Set_RZ;
  end;

// *********************************************************************//
// DispIntf:  IRobotNodeRigidLinkDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FF4E0492-ABDC-11D4-B87B-0050DA76755E}
// *********************************************************************//
  IRobotNodeRigidLinkDataDisp = dispinterface
    ['{FF4E0492-ABDC-11D4-B87B-0050DA76755E}']
    property UX: WordBool dispid 1610743808;
    property UY: WordBool dispid 1610743810;
    property UZ: WordBool dispid 1610743812;
    property RX: WordBool dispid 1610743814;
    property RY: WordBool dispid 1610743816;
    property RZ: WordBool dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRobotNonlinearAnalysisParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1291AB32-BA23-11D4-B883-0050DA76755E}
// *********************************************************************//
  IRobotNonlinearAnalysisParams = interface(IDispatch)
    ['{1291AB32-BA23-11D4-B883-0050DA76755E}']
    function Get_PDelta: WordBool; safecall;
    procedure Set_PDelta(ret: WordBool); safecall;
    function Get_Algorithm: IRobotNonlinearAnalysisAlgorithmType; safecall;
    procedure Set_Algorithm(ret: IRobotNonlinearAnalysisAlgorithmType); safecall;
    function Get_LoadIncrementNumber: Integer; safecall;
    procedure Set_LoadIncrementNumber(ret: Integer); safecall;
    function Get_MaximumIterationNumberForOneIncrement: Integer; safecall;
    procedure Set_MaximumIterationNumberForOneIncrement(ret: Integer); safecall;
    function Get_IncrementLengthReductionNumber: Integer; safecall;
    procedure Set_IncrementLengthReductionNumber(ret: Integer); safecall;
    function Get_IncrementLengthReductionFactor: Double; safecall;
    procedure Set_IncrementLengthReductionFactor(ret: Double); safecall;
    function Get_MaximumNumberOfLineSearches: Integer; safecall;
    procedure Set_MaximumNumberOfLineSearches(ret: Integer); safecall;
    function Get_LineSearchMethodFactor: Double; safecall;
    procedure Set_LineSearchMethodFactor(ret: Double); safecall;
    function Get_MaximumNumberOfBFGSCorrections: Integer; safecall;
    procedure Set_MaximumNumberOfBFGSCorrections(ret: Integer); safecall;
    function Get_MatrixUpdateAfterEachSubdivision: WordBool; safecall;
    procedure Set_MatrixUpdateAfterEachSubdivision(ret: WordBool); safecall;
    function Get_MatrixUpdateAfterEachIteration: WordBool; safecall;
    procedure Set_MatrixUpdateAfterEachIteration(ret: WordBool); safecall;
    function Get_ResultListEachIteration: WordBool; safecall;
    procedure Set_ResultListEachIteration(ret: WordBool); safecall;
    function Get_ResidualForcesRelativeCodeTolerance: Double; safecall;
    procedure Set_ResidualForcesRelativeCodeTolerance(ret: Double); safecall;
    function Get_DisplacementsRelativeCodeTolerance: Double; safecall;
    procedure Set_DisplacementsRelativeCodeTolerance(ret: Double); safecall;
    function Get_MaxLoadFactor: Double; safecall;
    procedure Set_MaxLoadFactor(ret: Double); safecall;
    function Get_NodeNumber: Integer; safecall;
    procedure Set_NodeNumber(ret: Integer); safecall;
    function Get_DegreeOfFreedom: IRobotDegreeOfFreedom; safecall;
    procedure Set_DegreeOfFreedom(ret: IRobotDegreeOfFreedom); safecall;
    function Get_MaxDisplacement: Double; safecall;
    procedure Set_MaxDisplacement(ret: Double); safecall;
    procedure GetSettingsFromPreferences; safecall;
    procedure SaveSettingsInPreferences; safecall;
    function Get_Stiff: WordBool; safecall;
    procedure Set_Stiff(ret: WordBool); safecall;
    property PDelta: WordBool read Get_PDelta write Set_PDelta;
    property Algorithm: IRobotNonlinearAnalysisAlgorithmType read Get_Algorithm write Set_Algorithm;
    property LoadIncrementNumber: Integer read Get_LoadIncrementNumber write Set_LoadIncrementNumber;
    property MaximumIterationNumberForOneIncrement: Integer read Get_MaximumIterationNumberForOneIncrement write Set_MaximumIterationNumberForOneIncrement;
    property IncrementLengthReductionNumber: Integer read Get_IncrementLengthReductionNumber write Set_IncrementLengthReductionNumber;
    property IncrementLengthReductionFactor: Double read Get_IncrementLengthReductionFactor write Set_IncrementLengthReductionFactor;
    property MaximumNumberOfLineSearches: Integer read Get_MaximumNumberOfLineSearches write Set_MaximumNumberOfLineSearches;
    property LineSearchMethodFactor: Double read Get_LineSearchMethodFactor write Set_LineSearchMethodFactor;
    property MaximumNumberOfBFGSCorrections: Integer read Get_MaximumNumberOfBFGSCorrections write Set_MaximumNumberOfBFGSCorrections;
    property MatrixUpdateAfterEachSubdivision: WordBool read Get_MatrixUpdateAfterEachSubdivision write Set_MatrixUpdateAfterEachSubdivision;
    property MatrixUpdateAfterEachIteration: WordBool read Get_MatrixUpdateAfterEachIteration write Set_MatrixUpdateAfterEachIteration;
    property ResultListEachIteration: WordBool read Get_ResultListEachIteration write Set_ResultListEachIteration;
    property ResidualForcesRelativeCodeTolerance: Double read Get_ResidualForcesRelativeCodeTolerance write Set_ResidualForcesRelativeCodeTolerance;
    property DisplacementsRelativeCodeTolerance: Double read Get_DisplacementsRelativeCodeTolerance write Set_DisplacementsRelativeCodeTolerance;
    property MaxLoadFactor: Double read Get_MaxLoadFactor write Set_MaxLoadFactor;
    property NodeNumber: Integer read Get_NodeNumber write Set_NodeNumber;
    property DegreeOfFreedom: IRobotDegreeOfFreedom read Get_DegreeOfFreedom write Set_DegreeOfFreedom;
    property MaxDisplacement: Double read Get_MaxDisplacement write Set_MaxDisplacement;
    property Stiff: WordBool read Get_Stiff write Set_Stiff;
  end;

// *********************************************************************//
// DispIntf:  IRobotNonlinearAnalysisParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1291AB32-BA23-11D4-B883-0050DA76755E}
// *********************************************************************//
  IRobotNonlinearAnalysisParamsDisp = dispinterface
    ['{1291AB32-BA23-11D4-B883-0050DA76755E}']
    property PDelta: WordBool dispid 1610743808;
    property Algorithm: IRobotNonlinearAnalysisAlgorithmType dispid 1610743810;
    property LoadIncrementNumber: Integer dispid 1610743812;
    property MaximumIterationNumberForOneIncrement: Integer dispid 1610743814;
    property IncrementLengthReductionNumber: Integer dispid 1610743816;
    property IncrementLengthReductionFactor: Double dispid 1610743818;
    property MaximumNumberOfLineSearches: Integer dispid 1610743820;
    property LineSearchMethodFactor: Double dispid 1610743822;
    property MaximumNumberOfBFGSCorrections: Integer dispid 1610743824;
    property MatrixUpdateAfterEachSubdivision: WordBool dispid 1610743826;
    property MatrixUpdateAfterEachIteration: WordBool dispid 1610743828;
    property ResultListEachIteration: WordBool dispid 1610743830;
    property ResidualForcesRelativeCodeTolerance: Double dispid 1610743832;
    property DisplacementsRelativeCodeTolerance: Double dispid 1610743834;
    property MaxLoadFactor: Double dispid 1610743836;
    property NodeNumber: Integer dispid 1610743838;
    property DegreeOfFreedom: IRobotDegreeOfFreedom dispid 1610743840;
    property MaxDisplacement: Double dispid 1610743842;
    procedure GetSettingsFromPreferences; dispid 1610743844;
    procedure SaveSettingsInPreferences; dispid 1610743845;
    property Stiff: WordBool dispid 1610743846;
  end;

// *********************************************************************//
// Interface: IRobotCaseAnalysisModesFilter
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9617FBC4-B95D-11D4-B882-0050DA76755E}
// *********************************************************************//
  IRobotCaseAnalysisModesFilter = interface(IDispatch)
    ['{9617FBC4-B95D-11D4-B882-0050DA76755E}']
    function Get_type_: IRobotCaseAnalysisModesFilterType; safecall;
    procedure Set_type_(ret: IRobotCaseAnalysisModesFilterType); safecall;
    function Get_MassPercentage: Double; safecall;
    procedure Set_MassPercentage(ret: Double); safecall;
    function Get_Modes: WideString; safecall;
    procedure Set_Modes(const ret: WideString); safecall;
    property type_: IRobotCaseAnalysisModesFilterType read Get_type_ write Set_type_;
    property MassPercentage: Double read Get_MassPercentage write Set_MassPercentage;
    property Modes: WideString read Get_Modes write Set_Modes;
  end;

// *********************************************************************//
// DispIntf:  IRobotCaseAnalysisModesFilterDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9617FBC4-B95D-11D4-B882-0050DA76755E}
// *********************************************************************//
  IRobotCaseAnalysisModesFilterDisp = dispinterface
    ['{9617FBC4-B95D-11D4-B882-0050DA76755E}']
    property type_: IRobotCaseAnalysisModesFilterType dispid 1610743808;
    property MassPercentage: Double dispid 1610743810;
    property Modes: WideString dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_PS_92_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF10-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_PS_92_Params = interface(IDispatch)
    ['{B249EF10-B3D5-11D4-B87E-0050DA76755E}']
    function Get_Direction: IRobotGeoPoint3D; safecall;
    procedure Set_Direction(const ret: IRobotGeoPoint3D); safecall;
    function Get_Filter: IRobotCaseAnalysisModesFilter; safecall;
    procedure Set_Filter(const ret: IRobotCaseAnalysisModesFilter); safecall;
    function Get_ZoneType: IRobotSeismicAnalysis_PS_92_ZoneType; safecall;
    procedure Set_ZoneType(ret: IRobotSeismicAnalysis_PS_92_ZoneType); safecall;
    function Get_Topography: Double; safecall;
    procedure Set_Topography(ret: Double); safecall;
    function Get_StructureType: IRobotSeismicAnalysis_PS_92_StructureType; safecall;
    procedure Set_StructureType(ret: IRobotSeismicAnalysis_PS_92_StructureType); safecall;
    function Get_Site: IRobotSeismicAnalysis_PS_92_SiteType; safecall;
    procedure Set_Site(ret: IRobotSeismicAnalysis_PS_92_SiteType); safecall;
    function Get_SpectrumType: IRobotSeismicAnalysisSpectrumType; safecall;
    procedure Set_SpectrumType(ret: IRobotSeismicAnalysisSpectrumType); safecall;
    function Get_DirectionType: IRobotSeismicAnalysisDirectionType; safecall;
    procedure Set_DirectionType(ret: IRobotSeismicAnalysisDirectionType); safecall;
    function Get_BehaviorFactor: Double; safecall;
    procedure Set_BehaviorFactor(ret: Double); safecall;
    function Get_SiteEnvelope: IRobotSeismicAnalysis_PS_92_SiteEnvelope; safecall;
    function Get_ExcitationDir: IRobotDynamicAnalysisExcitationDirection; safecall;
    function Get_ResidualMode: IRobotSeismicResidualMode; safecall;
    property Direction: IRobotGeoPoint3D read Get_Direction write Set_Direction;
    property Filter: IRobotCaseAnalysisModesFilter read Get_Filter write Set_Filter;
    property ZoneType: IRobotSeismicAnalysis_PS_92_ZoneType read Get_ZoneType write Set_ZoneType;
    property Topography: Double read Get_Topography write Set_Topography;
    property StructureType: IRobotSeismicAnalysis_PS_92_StructureType read Get_StructureType write Set_StructureType;
    property Site: IRobotSeismicAnalysis_PS_92_SiteType read Get_Site write Set_Site;
    property SpectrumType: IRobotSeismicAnalysisSpectrumType read Get_SpectrumType write Set_SpectrumType;
    property DirectionType: IRobotSeismicAnalysisDirectionType read Get_DirectionType write Set_DirectionType;
    property BehaviorFactor: Double read Get_BehaviorFactor write Set_BehaviorFactor;
    property SiteEnvelope: IRobotSeismicAnalysis_PS_92_SiteEnvelope read Get_SiteEnvelope;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection read Get_ExcitationDir;
    property ResidualMode: IRobotSeismicResidualMode read Get_ResidualMode;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_PS_92_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF10-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_PS_92_ParamsDisp = dispinterface
    ['{B249EF10-B3D5-11D4-B87E-0050DA76755E}']
    property Direction: IRobotGeoPoint3D dispid 1610743808;
    property Filter: IRobotCaseAnalysisModesFilter dispid 1610743810;
    property ZoneType: IRobotSeismicAnalysis_PS_92_ZoneType dispid 1610743812;
    property Topography: Double dispid 1610743814;
    property StructureType: IRobotSeismicAnalysis_PS_92_StructureType dispid 1610743816;
    property Site: IRobotSeismicAnalysis_PS_92_SiteType dispid 1610743818;
    property SpectrumType: IRobotSeismicAnalysisSpectrumType dispid 1610743820;
    property DirectionType: IRobotSeismicAnalysisDirectionType dispid 1610743822;
    property BehaviorFactor: Double dispid 1610743824;
    property SiteEnvelope: IRobotSeismicAnalysis_PS_92_SiteEnvelope readonly dispid 1610743826;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection readonly dispid 1610743827;
    property ResidualMode: IRobotSeismicResidualMode readonly dispid 1610743828;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_PS_92_SiteEnvelope
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {934FE8DE-55BE-46DB-BD17-FC8FA91EFAB2}
// *********************************************************************//
  IRobotSeismicAnalysis_PS_92_SiteEnvelope = interface(IDispatch)
    ['{934FE8DE-55BE-46DB-BD17-FC8FA91EFAB2}']
    procedure SetActive(_site: IRobotSeismicAnalysis_PS_92_SiteType; _is_active: WordBool); safecall;
    function IsActive(_site: IRobotSeismicAnalysis_PS_92_SiteType): WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_PS_92_SiteEnvelopeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {934FE8DE-55BE-46DB-BD17-FC8FA91EFAB2}
// *********************************************************************//
  IRobotSeismicAnalysis_PS_92_SiteEnvelopeDisp = dispinterface
    ['{934FE8DE-55BE-46DB-BD17-FC8FA91EFAB2}']
    procedure SetActive(_site: IRobotSeismicAnalysis_PS_92_SiteType; _is_active: WordBool); dispid 1610743808;
    function IsActive(_site: IRobotSeismicAnalysis_PS_92_SiteType): WordBool; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotSeismicResidualMode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DE9F8211-9021-4163-8C8A-887BCDF36F92}
// *********************************************************************//
  IRobotSeismicResidualMode = interface(IDispatch)
    ['{DE9F8211-9021-4163-8C8A-887BCDF36F92}']
    function Get_IsActive: WordBool; safecall;
    procedure Set_IsActive(ret: WordBool); safecall;
    function Get_DefinitionMethod: IRobotSeismicResidualModeDefinitionType; safecall;
    procedure Set_DefinitionMethod(ret: IRobotSeismicResidualModeDefinitionType); safecall;
    function Get_AugmentationFactor: Double; safecall;
    procedure Set_AugmentationFactor(ret: Double); safecall;
    function Get_LimitFrequency: Double; safecall;
    procedure Set_LimitFrequency(ret: Double); safecall;
    property IsActive: WordBool read Get_IsActive write Set_IsActive;
    property DefinitionMethod: IRobotSeismicResidualModeDefinitionType read Get_DefinitionMethod write Set_DefinitionMethod;
    property AugmentationFactor: Double read Get_AugmentationFactor write Set_AugmentationFactor;
    property LimitFrequency: Double read Get_LimitFrequency write Set_LimitFrequency;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicResidualModeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DE9F8211-9021-4163-8C8A-887BCDF36F92}
// *********************************************************************//
  IRobotSeismicResidualModeDisp = dispinterface
    ['{DE9F8211-9021-4163-8C8A-887BCDF36F92}']
    property IsActive: WordBool dispid 1610743808;
    property DefinitionMethod: IRobotSeismicResidualModeDefinitionType dispid 1610743810;
    property AugmentationFactor: Double dispid 1610743812;
    property LimitFrequency: Double dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_PS_69_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF0E-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_PS_69_Params = interface(IDispatch)
    ['{B249EF0E-B3D5-11D4-B87E-0050DA76755E}']
    function Get_Direction: IRobotGeoPoint3D; safecall;
    procedure Set_Direction(const ret: IRobotGeoPoint3D); safecall;
    function Get_Filter: IRobotCaseAnalysisModesFilter; safecall;
    procedure Set_Filter(const ret: IRobotCaseAnalysisModesFilter); safecall;
    function Get_Damping: IRobotSeismicAnalysis_PS_69_DampingType; safecall;
    procedure Set_Damping(ret: IRobotSeismicAnalysis_PS_69_DampingType); safecall;
    function Get_Soil: IRobotSeismicAnalysis_PS_69_SoilType; safecall;
    procedure Set_Soil(ret: IRobotSeismicAnalysis_PS_69_SoilType); safecall;
    function Get_Alpha: Double; safecall;
    procedure Set_Alpha(ret: Double); safecall;
    function Get_Delta: Double; safecall;
    procedure Set_Delta(ret: Double); safecall;
    property Direction: IRobotGeoPoint3D read Get_Direction write Set_Direction;
    property Filter: IRobotCaseAnalysisModesFilter read Get_Filter write Set_Filter;
    property Damping: IRobotSeismicAnalysis_PS_69_DampingType read Get_Damping write Set_Damping;
    property Soil: IRobotSeismicAnalysis_PS_69_SoilType read Get_Soil write Set_Soil;
    property Alpha: Double read Get_Alpha write Set_Alpha;
    property Delta: Double read Get_Delta write Set_Delta;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_PS_69_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF0E-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_PS_69_ParamsDisp = dispinterface
    ['{B249EF0E-B3D5-11D4-B87E-0050DA76755E}']
    property Direction: IRobotGeoPoint3D dispid 1610743808;
    property Filter: IRobotCaseAnalysisModesFilter dispid 1610743810;
    property Damping: IRobotSeismicAnalysis_PS_69_DampingType dispid 1610743812;
    property Soil: IRobotSeismicAnalysis_PS_69_SoilType dispid 1610743814;
    property Alpha: Double dispid 1610743816;
    property Delta: Double dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_P_100_92_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF0C-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_P_100_92_Params = interface(IDispatch)
    ['{B249EF0C-B3D5-11D4-B87E-0050DA76755E}']
    function Get_Direction: IRobotGeoPoint3D; safecall;
    procedure Set_Direction(const ret: IRobotGeoPoint3D); safecall;
    function Get_Filter: IRobotCaseAnalysisModesFilter; safecall;
    procedure Set_Filter(const ret: IRobotCaseAnalysisModesFilter); safecall;
    function Get_ZoneType: IRobotSeismicAnalysis_P_100_92_ZoneType; safecall;
    procedure Set_ZoneType(ret: IRobotSeismicAnalysis_P_100_92_ZoneType); safecall;
    function Get_ImportanceClass: IRobotSeismicAnalysis_P_100_92_ImportanceClassType; safecall;
    procedure Set_ImportanceClass(ret: IRobotSeismicAnalysis_P_100_92_ImportanceClassType); safecall;
    function Get_Tc: Double; safecall;
    procedure Set_Tc(ret: Double); safecall;
    function Get_Psi: Double; safecall;
    procedure Set_Psi(ret: Double); safecall;
    function Get_ExcitationDir: IRobotDynamicAnalysisExcitationDirection; safecall;
    property Direction: IRobotGeoPoint3D read Get_Direction write Set_Direction;
    property Filter: IRobotCaseAnalysisModesFilter read Get_Filter write Set_Filter;
    property ZoneType: IRobotSeismicAnalysis_P_100_92_ZoneType read Get_ZoneType write Set_ZoneType;
    property ImportanceClass: IRobotSeismicAnalysis_P_100_92_ImportanceClassType read Get_ImportanceClass write Set_ImportanceClass;
    property Tc: Double read Get_Tc write Set_Tc;
    property Psi: Double read Get_Psi write Set_Psi;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection read Get_ExcitationDir;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_P_100_92_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF0C-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_P_100_92_ParamsDisp = dispinterface
    ['{B249EF0C-B3D5-11D4-B87E-0050DA76755E}']
    property Direction: IRobotGeoPoint3D dispid 1610743808;
    property Filter: IRobotCaseAnalysisModesFilter dispid 1610743810;
    property ZoneType: IRobotSeismicAnalysis_P_100_92_ZoneType dispid 1610743812;
    property ImportanceClass: IRobotSeismicAnalysis_P_100_92_ImportanceClassType dispid 1610743814;
    property Tc: Double dispid 1610743816;
    property Psi: Double dispid 1610743818;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection readonly dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_EC_8_Params
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {B249EF0A-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_EC_8_Params = interface(IDispatch)
    ['{B249EF0A-B3D5-11D4-B87E-0050DA76755E}']
    function Get_Direction: IRobotGeoPoint3D; safecall;
    procedure Set_Direction(const ret: IRobotGeoPoint3D); safecall;
    function Get_Filter: IRobotCaseAnalysisModesFilter; safecall;
    procedure Set_Filter(const ret: IRobotCaseAnalysisModesFilter); safecall;
    function Get_ZoneType: IRobotSeismicAnalysis_EC_8_ZoneType; safecall;
    procedure Set_ZoneType(ret: IRobotSeismicAnalysis_EC_8_ZoneType); safecall;
    function Get_StructureType: IRobotSeismicAnalysis_EC_8_StructureType; safecall;
    procedure Set_StructureType(ret: IRobotSeismicAnalysis_EC_8_StructureType); safecall;
    function Get_SoilClass: IRobotSeismicAnalysis_EC_8_SoilType; safecall;
    procedure Set_SoilClass(ret: IRobotSeismicAnalysis_EC_8_SoilType); safecall;
    function Get_SpectrumType: IRobotSeismicAnalysisSpectrumType; safecall;
    procedure Set_SpectrumType(ret: IRobotSeismicAnalysisSpectrumType); safecall;
    function Get_DirectionType: IRobotSeismicAnalysisDirectionType; safecall;
    procedure Set_DirectionType(ret: IRobotSeismicAnalysisDirectionType); safecall;
    function Get_BehaviorFactor: Double; safecall;
    procedure Set_BehaviorFactor(ret: Double); safecall;
    property Direction: IRobotGeoPoint3D read Get_Direction write Set_Direction;
    property Filter: IRobotCaseAnalysisModesFilter read Get_Filter write Set_Filter;
    property ZoneType: IRobotSeismicAnalysis_EC_8_ZoneType read Get_ZoneType write Set_ZoneType;
    property StructureType: IRobotSeismicAnalysis_EC_8_StructureType read Get_StructureType write Set_StructureType;
    property SoilClass: IRobotSeismicAnalysis_EC_8_SoilType read Get_SoilClass write Set_SoilClass;
    property SpectrumType: IRobotSeismicAnalysisSpectrumType read Get_SpectrumType write Set_SpectrumType;
    property DirectionType: IRobotSeismicAnalysisDirectionType read Get_DirectionType write Set_DirectionType;
    property BehaviorFactor: Double read Get_BehaviorFactor write Set_BehaviorFactor;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_EC_8_ParamsDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {B249EF0A-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_EC_8_ParamsDisp = dispinterface
    ['{B249EF0A-B3D5-11D4-B87E-0050DA76755E}']
    property Direction: IRobotGeoPoint3D dispid 1610743808;
    property Filter: IRobotCaseAnalysisModesFilter dispid 1610743810;
    property ZoneType: IRobotSeismicAnalysis_EC_8_ZoneType dispid 1610743812;
    property StructureType: IRobotSeismicAnalysis_EC_8_StructureType dispid 1610743814;
    property SoilClass: IRobotSeismicAnalysis_EC_8_SoilType dispid 1610743816;
    property SpectrumType: IRobotSeismicAnalysisSpectrumType dispid 1610743818;
    property DirectionType: IRobotSeismicAnalysisDirectionType dispid 1610743820;
    property BehaviorFactor: Double dispid 1610743822;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_EAK_2000_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF1A-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_EAK_2000_Params = interface(IDispatch)
    ['{B249EF1A-B3D5-11D4-B87E-0050DA76755E}']
    function Get_Direction: IRobotGeoPoint3D; safecall;
    procedure Set_Direction(const ret: IRobotGeoPoint3D); safecall;
    function Get_Filter: IRobotCaseAnalysisModesFilter; safecall;
    procedure Set_Filter(const ret: IRobotCaseAnalysisModesFilter); safecall;
    function Get_ZoneType: IRobotSeismicAnalysis_EAK_2000_ZoneType; safecall;
    procedure Set_ZoneType(ret: IRobotSeismicAnalysis_EAK_2000_ZoneType); safecall;
    function Get_FoundationFactor: Double; safecall;
    procedure Set_FoundationFactor(ret: Double); safecall;
    function Get_ImportanceFactor: IRobotSeismicAnalysis_EAK_2000_ImportanceFactorType; safecall;
    procedure Set_ImportanceFactor(ret: IRobotSeismicAnalysis_EAK_2000_ImportanceFactorType); safecall;
    function Get_GroundCategory: IRobotSeismicAnalysis_EAK_2000_GroundCategoryType; safecall;
    procedure Set_GroundCategory(ret: IRobotSeismicAnalysis_EAK_2000_GroundCategoryType); safecall;
    function Get_DirectionType: IRobotSeismicAnalysisDirectionType; safecall;
    procedure Set_DirectionType(ret: IRobotSeismicAnalysisDirectionType); safecall;
    function Get_BehaviorFactor: Double; safecall;
    procedure Set_BehaviorFactor(ret: Double); safecall;
    function Get_VerticalFoundationFactor: Double; safecall;
    function Get_VerticalBehaviorFactor: Double; safecall;
    property Direction: IRobotGeoPoint3D read Get_Direction write Set_Direction;
    property Filter: IRobotCaseAnalysisModesFilter read Get_Filter write Set_Filter;
    property ZoneType: IRobotSeismicAnalysis_EAK_2000_ZoneType read Get_ZoneType write Set_ZoneType;
    property FoundationFactor: Double read Get_FoundationFactor write Set_FoundationFactor;
    property ImportanceFactor: IRobotSeismicAnalysis_EAK_2000_ImportanceFactorType read Get_ImportanceFactor write Set_ImportanceFactor;
    property GroundCategory: IRobotSeismicAnalysis_EAK_2000_GroundCategoryType read Get_GroundCategory write Set_GroundCategory;
    property DirectionType: IRobotSeismicAnalysisDirectionType read Get_DirectionType write Set_DirectionType;
    property BehaviorFactor: Double read Get_BehaviorFactor write Set_BehaviorFactor;
    property VerticalFoundationFactor: Double read Get_VerticalFoundationFactor;
    property VerticalBehaviorFactor: Double read Get_VerticalBehaviorFactor;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_EAK_2000_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF1A-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_EAK_2000_ParamsDisp = dispinterface
    ['{B249EF1A-B3D5-11D4-B87E-0050DA76755E}']
    property Direction: IRobotGeoPoint3D dispid 1610743808;
    property Filter: IRobotCaseAnalysisModesFilter dispid 1610743810;
    property ZoneType: IRobotSeismicAnalysis_EAK_2000_ZoneType dispid 1610743812;
    property FoundationFactor: Double dispid 1610743814;
    property ImportanceFactor: IRobotSeismicAnalysis_EAK_2000_ImportanceFactorType dispid 1610743816;
    property GroundCategory: IRobotSeismicAnalysis_EAK_2000_GroundCategoryType dispid 1610743818;
    property DirectionType: IRobotSeismicAnalysisDirectionType dispid 1610743820;
    property BehaviorFactor: Double dispid 1610743822;
    property VerticalFoundationFactor: Double readonly dispid 1610743824;
    property VerticalBehaviorFactor: Double readonly dispid 1610743825;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_P_100_2006_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D3FFD10F-ACAF-449C-AE3D-253E460EA52B}
// *********************************************************************//
  IRobotSeismicAnalysis_P_100_2006_Params = interface(IDispatch)
    ['{D3FFD10F-ACAF-449C-AE3D-253E460EA52B}']
    function Get_SpectrumType: IRobotSeismicAnalysisSpectrumType; safecall;
    procedure Set_SpectrumType(ret: IRobotSeismicAnalysisSpectrumType); safecall;
    function Get_ExcitationDir: IRobotDynamicAnalysisExcitationDirection; safecall;
    function Get_Agg: Double; safecall;
    procedure Set_Agg(ret: Double); safecall;
    function Get_B0: Double; safecall;
    procedure Set_B0(ret: Double); safecall;
    function Get_Tb: Double; safecall;
    procedure Set_Tb(ret: Double); safecall;
    function Get_Tc: Double; safecall;
    procedure Set_Tc(ret: Double); safecall;
    function Get_Td: Double; safecall;
    procedure Set_Td(ret: Double); safecall;
    function Get_BehaviorFactor: Double; safecall;
    procedure Set_BehaviorFactor(ret: Double); safecall;
    function Get_ImportanceFactor: Double; safecall;
    procedure Set_ImportanceFactor(ret: Double); safecall;
    property SpectrumType: IRobotSeismicAnalysisSpectrumType read Get_SpectrumType write Set_SpectrumType;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection read Get_ExcitationDir;
    property Agg: Double read Get_Agg write Set_Agg;
    property B0: Double read Get_B0 write Set_B0;
    property Tb: Double read Get_Tb write Set_Tb;
    property Tc: Double read Get_Tc write Set_Tc;
    property Td: Double read Get_Td write Set_Td;
    property BehaviorFactor: Double read Get_BehaviorFactor write Set_BehaviorFactor;
    property ImportanceFactor: Double read Get_ImportanceFactor write Set_ImportanceFactor;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_P_100_2006_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D3FFD10F-ACAF-449C-AE3D-253E460EA52B}
// *********************************************************************//
  IRobotSeismicAnalysis_P_100_2006_ParamsDisp = dispinterface
    ['{D3FFD10F-ACAF-449C-AE3D-253E460EA52B}']
    property SpectrumType: IRobotSeismicAnalysisSpectrumType dispid 1610743808;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection readonly dispid 1610743810;
    property Agg: Double dispid 1610743811;
    property B0: Double dispid 1610743813;
    property Tb: Double dispid 1610743815;
    property Tc: Double dispid 1610743817;
    property Td: Double dispid 1610743819;
    property BehaviorFactor: Double dispid 1610743821;
    property ImportanceFactor: Double dispid 1610743823;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_IBC_2006_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {38CEDCB8-0073-42D4-AD14-C7A5AE282C78}
// *********************************************************************//
  IRobotSeismicAnalysis_IBC_2006_Params = interface(IDispatch)
    ['{38CEDCB8-0073-42D4-AD14-C7A5AE282C78}']
    function Get_Direction: IRobotGeoPoint3D; safecall;
    procedure Set_Direction(const ret: IRobotGeoPoint3D); safecall;
    function Get_Filter: IRobotCaseAnalysisModesFilter; safecall;
    procedure Set_Filter(const ret: IRobotCaseAnalysisModesFilter); safecall;
    function Get_SiteClass: IRobotSeismicAnalysis_IBC_2006_SiteClassType; safecall;
    procedure Set_SiteClass(ret: IRobotSeismicAnalysis_IBC_2006_SiteClassType); safecall;
    function Get_S1: Double; safecall;
    procedure Set_S1(ret: Double); safecall;
    function Get_Ss: Double; safecall;
    procedure Set_Ss(ret: Double); safecall;
    function Get_ExcitationDir: IRobotDynamicAnalysisExcitationDirection; safecall;
    function Get_I: Double; safecall;
    procedure Set_I(ret: Double); safecall;
    function Get_BehaviorFactor: Double; safecall;
    procedure Set_BehaviorFactor(ret: Double); safecall;
    function Get_TL: Double; safecall;
    procedure Set_TL(ret: Double); safecall;
    property Direction: IRobotGeoPoint3D read Get_Direction write Set_Direction;
    property Filter: IRobotCaseAnalysisModesFilter read Get_Filter write Set_Filter;
    property SiteClass: IRobotSeismicAnalysis_IBC_2006_SiteClassType read Get_SiteClass write Set_SiteClass;
    property S1: Double read Get_S1 write Set_S1;
    property Ss: Double read Get_Ss write Set_Ss;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection read Get_ExcitationDir;
    property I: Double read Get_I write Set_I;
    property BehaviorFactor: Double read Get_BehaviorFactor write Set_BehaviorFactor;
    property TL: Double read Get_TL write Set_TL;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_IBC_2006_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {38CEDCB8-0073-42D4-AD14-C7A5AE282C78}
// *********************************************************************//
  IRobotSeismicAnalysis_IBC_2006_ParamsDisp = dispinterface
    ['{38CEDCB8-0073-42D4-AD14-C7A5AE282C78}']
    property Direction: IRobotGeoPoint3D dispid 1610743808;
    property Filter: IRobotCaseAnalysisModesFilter dispid 1610743810;
    property SiteClass: IRobotSeismicAnalysis_IBC_2006_SiteClassType dispid 1610743812;
    property S1: Double dispid 1610743814;
    property Ss: Double dispid 1610743816;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection readonly dispid 1610743818;
    property I: Double dispid 1610743819;
    property BehaviorFactor: Double dispid 1610743821;
    property TL: Double dispid 1610743823;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_IBC_2000_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF18-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_IBC_2000_Params = interface(IDispatch)
    ['{B249EF18-B3D5-11D4-B87E-0050DA76755E}']
    function Get_Direction: IRobotGeoPoint3D; safecall;
    procedure Set_Direction(const ret: IRobotGeoPoint3D); safecall;
    function Get_Filter: IRobotCaseAnalysisModesFilter; safecall;
    procedure Set_Filter(const ret: IRobotCaseAnalysisModesFilter); safecall;
    function Get_SiteClass: IRobotSeismicAnalysis_IBC_2000_SiteClassType; safecall;
    procedure Set_SiteClass(ret: IRobotSeismicAnalysis_IBC_2000_SiteClassType); safecall;
    function Get_S1: Double; safecall;
    procedure Set_S1(ret: Double); safecall;
    function Get_Ss: Double; safecall;
    procedure Set_Ss(ret: Double); safecall;
    function Get_ExcitationDir: IRobotDynamicAnalysisExcitationDirection; safecall;
    function Get_Ie: Double; safecall;
    procedure Set_Ie(ret: Double); safecall;
    function Get_BehaviorFactor: Double; safecall;
    procedure Set_BehaviorFactor(ret: Double); safecall;
    property Direction: IRobotGeoPoint3D read Get_Direction write Set_Direction;
    property Filter: IRobotCaseAnalysisModesFilter read Get_Filter write Set_Filter;
    property SiteClass: IRobotSeismicAnalysis_IBC_2000_SiteClassType read Get_SiteClass write Set_SiteClass;
    property S1: Double read Get_S1 write Set_S1;
    property Ss: Double read Get_Ss write Set_Ss;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection read Get_ExcitationDir;
    property Ie: Double read Get_Ie write Set_Ie;
    property BehaviorFactor: Double read Get_BehaviorFactor write Set_BehaviorFactor;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_IBC_2000_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF18-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_IBC_2000_ParamsDisp = dispinterface
    ['{B249EF18-B3D5-11D4-B87E-0050DA76755E}']
    property Direction: IRobotGeoPoint3D dispid 1610743808;
    property Filter: IRobotCaseAnalysisModesFilter dispid 1610743810;
    property SiteClass: IRobotSeismicAnalysis_IBC_2000_SiteClassType dispid 1610743812;
    property S1: Double dispid 1610743814;
    property Ss: Double dispid 1610743816;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection readonly dispid 1610743818;
    property Ie: Double dispid 1610743819;
    property BehaviorFactor: Double dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_UBC_97_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF16-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_UBC_97_Params = interface(IDispatch)
    ['{B249EF16-B3D5-11D4-B87E-0050DA76755E}']
    function Get_Direction: IRobotGeoPoint3D; safecall;
    procedure Set_Direction(const ret: IRobotGeoPoint3D); safecall;
    function Get_Filter: IRobotCaseAnalysisModesFilter; safecall;
    procedure Set_Filter(const ret: IRobotCaseAnalysisModesFilter); safecall;
    function Get_ZoneType: IRobotSeismicAnalysis_UBC_97_ZoneType; safecall;
    procedure Set_ZoneType(ret: IRobotSeismicAnalysis_UBC_97_ZoneType); safecall;
    function Get_Soil: IRobotSeismicAnalysis_UBC_97_SoilType; safecall;
    procedure Set_Soil(ret: IRobotSeismicAnalysis_UBC_97_SoilType); safecall;
    function Get_ClosestDistance: Double; safecall;
    procedure Set_ClosestDistance(ret: Double); safecall;
    function Get_Source: IRobotSeismicAnalysis_UBC_97_SourceType; safecall;
    procedure Set_Source(ret: IRobotSeismicAnalysis_UBC_97_SourceType); safecall;
    function Get_ExcitationDir: IRobotDynamicAnalysisExcitationDirection; safecall;
    function Get_BehaviorFactor: Double; safecall;
    procedure Set_BehaviorFactor(ret: Double); safecall;
    function Get_I: Double; safecall;
    procedure Set_I(ret: Double); safecall;
    property Direction: IRobotGeoPoint3D read Get_Direction write Set_Direction;
    property Filter: IRobotCaseAnalysisModesFilter read Get_Filter write Set_Filter;
    property ZoneType: IRobotSeismicAnalysis_UBC_97_ZoneType read Get_ZoneType write Set_ZoneType;
    property Soil: IRobotSeismicAnalysis_UBC_97_SoilType read Get_Soil write Set_Soil;
    property ClosestDistance: Double read Get_ClosestDistance write Set_ClosestDistance;
    property Source: IRobotSeismicAnalysis_UBC_97_SourceType read Get_Source write Set_Source;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection read Get_ExcitationDir;
    property BehaviorFactor: Double read Get_BehaviorFactor write Set_BehaviorFactor;
    property I: Double read Get_I write Set_I;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_UBC_97_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF16-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_UBC_97_ParamsDisp = dispinterface
    ['{B249EF16-B3D5-11D4-B87E-0050DA76755E}']
    property Direction: IRobotGeoPoint3D dispid 1610743808;
    property Filter: IRobotCaseAnalysisModesFilter dispid 1610743810;
    property ZoneType: IRobotSeismicAnalysis_UBC_97_ZoneType dispid 1610743812;
    property Soil: IRobotSeismicAnalysis_UBC_97_SoilType dispid 1610743814;
    property ClosestDistance: Double dispid 1610743816;
    property Source: IRobotSeismicAnalysis_UBC_97_SourceType dispid 1610743818;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection readonly dispid 1610743820;
    property BehaviorFactor: Double dispid 1610743821;
    property I: Double dispid 1610743823;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_TURKISH_23098_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF14-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_TURKISH_23098_Params = interface(IDispatch)
    ['{B249EF14-B3D5-11D4-B87E-0050DA76755E}']
    function Get_Direction: IRobotGeoPoint3D; safecall;
    procedure Set_Direction(const ret: IRobotGeoPoint3D); safecall;
    function Get_Filter: IRobotCaseAnalysisModesFilter; safecall;
    procedure Set_Filter(const ret: IRobotCaseAnalysisModesFilter); safecall;
    function Get_ZoneType: IRobotSeismicAnalysis_TURKISH_23098_ZoneType; safecall;
    procedure Set_ZoneType(ret: IRobotSeismicAnalysis_TURKISH_23098_ZoneType); safecall;
    function Get_SoilType: IRobotSeismicAnalysis_TURKISH_23098_SoilType; safecall;
    procedure Set_SoilType(ret: IRobotSeismicAnalysis_TURKISH_23098_SoilType); safecall;
    function Get_StructureImportance: Double; safecall;
    procedure Set_StructureImportance(ret: Double); safecall;
    function Get_BehaviorFactor: Double; safecall;
    procedure Set_BehaviorFactor(ret: Double); safecall;
    property Direction: IRobotGeoPoint3D read Get_Direction write Set_Direction;
    property Filter: IRobotCaseAnalysisModesFilter read Get_Filter write Set_Filter;
    property ZoneType: IRobotSeismicAnalysis_TURKISH_23098_ZoneType read Get_ZoneType write Set_ZoneType;
    property SoilType: IRobotSeismicAnalysis_TURKISH_23098_SoilType read Get_SoilType write Set_SoilType;
    property StructureImportance: Double read Get_StructureImportance write Set_StructureImportance;
    property BehaviorFactor: Double read Get_BehaviorFactor write Set_BehaviorFactor;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_TURKISH_23098_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF14-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_TURKISH_23098_ParamsDisp = dispinterface
    ['{B249EF14-B3D5-11D4-B87E-0050DA76755E}']
    property Direction: IRobotGeoPoint3D dispid 1610743808;
    property Filter: IRobotCaseAnalysisModesFilter dispid 1610743810;
    property ZoneType: IRobotSeismicAnalysis_TURKISH_23098_ZoneType dispid 1610743812;
    property SoilType: IRobotSeismicAnalysis_TURKISH_23098_SoilType dispid 1610743814;
    property StructureImportance: Double dispid 1610743816;
    property BehaviorFactor: Double dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_RPA_88_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF12-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_RPA_88_Params = interface(IDispatch)
    ['{B249EF12-B3D5-11D4-B87E-0050DA76755E}']
    function Get_Direction: IRobotGeoPoint3D; safecall;
    procedure Set_Direction(const ret: IRobotGeoPoint3D); safecall;
    function Get_Filter: IRobotCaseAnalysisModesFilter; safecall;
    procedure Set_Filter(const ret: IRobotCaseAnalysisModesFilter); safecall;
    function Get_ZoneType: IRobotSeismicAnalysis_RPA_88_ZoneType; safecall;
    procedure Set_ZoneType(ret: IRobotSeismicAnalysis_RPA_88_ZoneType); safecall;
    function Get_Usage: IRobotSeismicAnalysis_RPA_88_UsageType; safecall;
    procedure Set_Usage(ret: IRobotSeismicAnalysis_RPA_88_UsageType); safecall;
    function Get_Category: IRobotSeismicAnalysis_RPA_88_CategoryType; safecall;
    procedure Set_Category(ret: IRobotSeismicAnalysis_RPA_88_CategoryType); safecall;
    function Get_Soil: IRobotSeismicAnalysis_RPA_88_SoilType; safecall;
    procedure Set_Soil(ret: IRobotSeismicAnalysis_RPA_88_SoilType); safecall;
    function Get_QualityFactor: Double; safecall;
    procedure Set_QualityFactor(ret: Double); safecall;
    property Direction: IRobotGeoPoint3D read Get_Direction write Set_Direction;
    property Filter: IRobotCaseAnalysisModesFilter read Get_Filter write Set_Filter;
    property ZoneType: IRobotSeismicAnalysis_RPA_88_ZoneType read Get_ZoneType write Set_ZoneType;
    property Usage: IRobotSeismicAnalysis_RPA_88_UsageType read Get_Usage write Set_Usage;
    property Category: IRobotSeismicAnalysis_RPA_88_CategoryType read Get_Category write Set_Category;
    property Soil: IRobotSeismicAnalysis_RPA_88_SoilType read Get_Soil write Set_Soil;
    property QualityFactor: Double read Get_QualityFactor write Set_QualityFactor;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_RPA_88_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF12-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_RPA_88_ParamsDisp = dispinterface
    ['{B249EF12-B3D5-11D4-B87E-0050DA76755E}']
    property Direction: IRobotGeoPoint3D dispid 1610743808;
    property Filter: IRobotCaseAnalysisModesFilter dispid 1610743810;
    property ZoneType: IRobotSeismicAnalysis_RPA_88_ZoneType dispid 1610743812;
    property Usage: IRobotSeismicAnalysis_RPA_88_UsageType dispid 1610743814;
    property Category: IRobotSeismicAnalysis_RPA_88_CategoryType dispid 1610743816;
    property Soil: IRobotSeismicAnalysis_RPA_88_SoilType dispid 1610743818;
    property QualityFactor: Double dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_DM_16_1_96_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF08-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_DM_16_1_96_Params = interface(IDispatch)
    ['{B249EF08-B3D5-11D4-B87E-0050DA76755E}']
    function Get_Direction: IRobotGeoPoint3D; safecall;
    procedure Set_Direction(const ret: IRobotGeoPoint3D); safecall;
    function Get_Filter: IRobotCaseAnalysisModesFilter; safecall;
    procedure Set_Filter(const ret: IRobotCaseAnalysisModesFilter); safecall;
    function Get_SeismicProtectionCoeff: IRobotSeismicAnalysis_DM_16_1_96_ProtectionCoeffType; safecall;
    procedure Set_SeismicProtectionCoeff(ret: IRobotSeismicAnalysis_DM_16_1_96_ProtectionCoeffType); safecall;
    function Get_SeismicCoeff: Double; safecall;
    procedure Set_SeismicCoeff(ret: Double); safecall;
    property Direction: IRobotGeoPoint3D read Get_Direction write Set_Direction;
    property Filter: IRobotCaseAnalysisModesFilter read Get_Filter write Set_Filter;
    property SeismicProtectionCoeff: IRobotSeismicAnalysis_DM_16_1_96_ProtectionCoeffType read Get_SeismicProtectionCoeff write Set_SeismicProtectionCoeff;
    property SeismicCoeff: Double read Get_SeismicCoeff write Set_SeismicCoeff;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_DM_16_1_96_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF08-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_DM_16_1_96_ParamsDisp = dispinterface
    ['{B249EF08-B3D5-11D4-B87E-0050DA76755E}']
    property Direction: IRobotGeoPoint3D dispid 1610743808;
    property Filter: IRobotCaseAnalysisModesFilter dispid 1610743810;
    property SeismicProtectionCoeff: IRobotSeismicAnalysis_DM_16_1_96_ProtectionCoeffType dispid 1610743812;
    property SeismicCoeff: Double dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_AFPS_90_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF02-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_AFPS_90_Params = interface(IDispatch)
    ['{B249EF02-B3D5-11D4-B87E-0050DA76755E}']
    function Get_Direction: IRobotGeoPoint3D; safecall;
    procedure Set_Direction(const ret: IRobotGeoPoint3D); safecall;
    function Get_Filter: IRobotCaseAnalysisModesFilter; safecall;
    procedure Set_Filter(const ret: IRobotCaseAnalysisModesFilter); safecall;
    function Get_ZoneType: IRobotSeismicAnalysis_AFPS_90_ZoneType; safecall;
    procedure Set_ZoneType(ret: IRobotSeismicAnalysis_AFPS_90_ZoneType); safecall;
    function Get_Topography: Double; safecall;
    procedure Set_Topography(ret: Double); safecall;
    function Get_BehaviorFactor: Double; safecall;
    procedure Set_BehaviorFactor(ret: Double); safecall;
    function Get_StructureType: IRobotSeismicAnalysis_AFPS_90_StructureType; safecall;
    procedure Set_StructureType(ret: IRobotSeismicAnalysis_AFPS_90_StructureType); safecall;
    function Get_Site: IRobotSeismicAnalysis_AFPS_90_SiteType; safecall;
    procedure Set_Site(ret: IRobotSeismicAnalysis_AFPS_90_SiteType); safecall;
    function Get_SpectrumType: IRobotSeismicAnalysisSpectrumType; safecall;
    procedure Set_SpectrumType(ret: IRobotSeismicAnalysisSpectrumType); safecall;
    function Get_DirectionType: IRobotSeismicAnalysisDirectionType; safecall;
    procedure Set_DirectionType(ret: IRobotSeismicAnalysisDirectionType); safecall;
    function Get_ResidualMode: IRobotSeismicResidualMode; safecall;
    property Direction: IRobotGeoPoint3D read Get_Direction write Set_Direction;
    property Filter: IRobotCaseAnalysisModesFilter read Get_Filter write Set_Filter;
    property ZoneType: IRobotSeismicAnalysis_AFPS_90_ZoneType read Get_ZoneType write Set_ZoneType;
    property Topography: Double read Get_Topography write Set_Topography;
    property BehaviorFactor: Double read Get_BehaviorFactor write Set_BehaviorFactor;
    property StructureType: IRobotSeismicAnalysis_AFPS_90_StructureType read Get_StructureType write Set_StructureType;
    property Site: IRobotSeismicAnalysis_AFPS_90_SiteType read Get_Site write Set_Site;
    property SpectrumType: IRobotSeismicAnalysisSpectrumType read Get_SpectrumType write Set_SpectrumType;
    property DirectionType: IRobotSeismicAnalysisDirectionType read Get_DirectionType write Set_DirectionType;
    property ResidualMode: IRobotSeismicResidualMode read Get_ResidualMode;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_AFPS_90_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF02-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_AFPS_90_ParamsDisp = dispinterface
    ['{B249EF02-B3D5-11D4-B87E-0050DA76755E}']
    property Direction: IRobotGeoPoint3D dispid 1610743808;
    property Filter: IRobotCaseAnalysisModesFilter dispid 1610743810;
    property ZoneType: IRobotSeismicAnalysis_AFPS_90_ZoneType dispid 1610743812;
    property Topography: Double dispid 1610743814;
    property BehaviorFactor: Double dispid 1610743816;
    property StructureType: IRobotSeismicAnalysis_AFPS_90_StructureType dispid 1610743818;
    property Site: IRobotSeismicAnalysis_AFPS_90_SiteType dispid 1610743820;
    property SpectrumType: IRobotSeismicAnalysisSpectrumType dispid 1610743822;
    property DirectionType: IRobotSeismicAnalysisDirectionType dispid 1610743824;
    property ResidualMode: IRobotSeismicResidualMode readonly dispid 1610743826;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_CHINESE_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF04-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_CHINESE_Params = interface(IDispatch)
    ['{B249EF04-B3D5-11D4-B87E-0050DA76755E}']
    function Get_Direction: IRobotGeoPoint3D; safecall;
    procedure Set_Direction(const ret: IRobotGeoPoint3D); safecall;
    function Get_Filter: IRobotCaseAnalysisModesFilter; safecall;
    procedure Set_Filter(const ret: IRobotCaseAnalysisModesFilter); safecall;
    function Get_StructureType: IRobotSeismicAnalysis_CHINESE_StructureType; safecall;
    procedure Set_StructureType(ret: IRobotSeismicAnalysis_CHINESE_StructureType); safecall;
    function Get_Site: IRobotSeismicAnalysis_CHINESE_SiteType; safecall;
    procedure Set_Site(ret: IRobotSeismicAnalysis_CHINESE_SiteType); safecall;
    function Get_DesignStandard: IRobotSeismicAnalysis_CHINESE_DesignType; safecall;
    procedure Set_DesignStandard(ret: IRobotSeismicAnalysis_CHINESE_DesignType); safecall;
    function Get_Intensity: IRobotSeismicAnalysis_CHINESE_IntensityType; safecall;
    procedure Set_Intensity(ret: IRobotSeismicAnalysis_CHINESE_IntensityType); safecall;
    function Get_EarthquakeType: IRobotSeismicAnalysis_CHINESE_EarthquakeType; safecall;
    procedure Set_EarthquakeType(ret: IRobotSeismicAnalysis_CHINESE_EarthquakeType); safecall;
    function Get_Factor: Double; safecall;
    procedure Set_Factor(ret: Double); safecall;
    function Get_SiteTg: Double; safecall;
    procedure Set_SiteTg(ret: Double); safecall;
    property Direction: IRobotGeoPoint3D read Get_Direction write Set_Direction;
    property Filter: IRobotCaseAnalysisModesFilter read Get_Filter write Set_Filter;
    property StructureType: IRobotSeismicAnalysis_CHINESE_StructureType read Get_StructureType write Set_StructureType;
    property Site: IRobotSeismicAnalysis_CHINESE_SiteType read Get_Site write Set_Site;
    property DesignStandard: IRobotSeismicAnalysis_CHINESE_DesignType read Get_DesignStandard write Set_DesignStandard;
    property Intensity: IRobotSeismicAnalysis_CHINESE_IntensityType read Get_Intensity write Set_Intensity;
    property EarthquakeType: IRobotSeismicAnalysis_CHINESE_EarthquakeType read Get_EarthquakeType write Set_EarthquakeType;
    property Factor: Double read Get_Factor write Set_Factor;
    property SiteTg: Double read Get_SiteTg write Set_SiteTg;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_CHINESE_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF04-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_CHINESE_ParamsDisp = dispinterface
    ['{B249EF04-B3D5-11D4-B87E-0050DA76755E}']
    property Direction: IRobotGeoPoint3D dispid 1610743808;
    property Filter: IRobotCaseAnalysisModesFilter dispid 1610743810;
    property StructureType: IRobotSeismicAnalysis_CHINESE_StructureType dispid 1610743812;
    property Site: IRobotSeismicAnalysis_CHINESE_SiteType dispid 1610743814;
    property DesignStandard: IRobotSeismicAnalysis_CHINESE_DesignType dispid 1610743816;
    property Intensity: IRobotSeismicAnalysis_CHINESE_IntensityType dispid 1610743818;
    property EarthquakeType: IRobotSeismicAnalysis_CHINESE_EarthquakeType dispid 1610743820;
    property Factor: Double dispid 1610743822;
    property SiteTg: Double dispid 1610743824;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_CIRSOC_103_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF06-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_CIRSOC_103_Params = interface(IDispatch)
    ['{B249EF06-B3D5-11D4-B87E-0050DA76755E}']
    function Get_Direction: IRobotGeoPoint3D; safecall;
    procedure Set_Direction(const ret: IRobotGeoPoint3D); safecall;
    function Get_Filter: IRobotCaseAnalysisModesFilter; safecall;
    procedure Set_Filter(const ret: IRobotCaseAnalysisModesFilter); safecall;
    function Get_ZoneType: IRobotSeismicAnalysis_CIRSOC_103_ZoneType; safecall;
    procedure Set_ZoneType(ret: IRobotSeismicAnalysis_CIRSOC_103_ZoneType); safecall;
    function Get_DirectionType: IRobotSeismicAnalysisDirectionType; safecall;
    procedure Set_DirectionType(ret: IRobotSeismicAnalysisDirectionType); safecall;
    function Get_StructureType: IRobotSeismicAnalysis_CIRSOC_103_StructureType; safecall;
    procedure Set_StructureType(ret: IRobotSeismicAnalysis_CIRSOC_103_StructureType); safecall;
    function Get_PlasticityCoeff: Double; safecall;
    procedure Set_PlasticityCoeff(ret: Double); safecall;
    function Get_Soil: IRobotSeismicAnalysis_CIRSOC_103_SoilType; safecall;
    procedure Set_Soil(ret: IRobotSeismicAnalysis_CIRSOC_103_SoilType); safecall;
    property Direction: IRobotGeoPoint3D read Get_Direction write Set_Direction;
    property Filter: IRobotCaseAnalysisModesFilter read Get_Filter write Set_Filter;
    property ZoneType: IRobotSeismicAnalysis_CIRSOC_103_ZoneType read Get_ZoneType write Set_ZoneType;
    property DirectionType: IRobotSeismicAnalysisDirectionType read Get_DirectionType write Set_DirectionType;
    property StructureType: IRobotSeismicAnalysis_CIRSOC_103_StructureType read Get_StructureType write Set_StructureType;
    property PlasticityCoeff: Double read Get_PlasticityCoeff write Set_PlasticityCoeff;
    property Soil: IRobotSeismicAnalysis_CIRSOC_103_SoilType read Get_Soil write Set_Soil;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_CIRSOC_103_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B249EF06-B3D5-11D4-B87E-0050DA76755E}
// *********************************************************************//
  IRobotSeismicAnalysis_CIRSOC_103_ParamsDisp = dispinterface
    ['{B249EF06-B3D5-11D4-B87E-0050DA76755E}']
    property Direction: IRobotGeoPoint3D dispid 1610743808;
    property Filter: IRobotCaseAnalysisModesFilter dispid 1610743810;
    property ZoneType: IRobotSeismicAnalysis_CIRSOC_103_ZoneType dispid 1610743812;
    property DirectionType: IRobotSeismicAnalysisDirectionType dispid 1610743814;
    property StructureType: IRobotSeismicAnalysis_CIRSOC_103_StructureType dispid 1610743816;
    property PlasticityCoeff: Double dispid 1610743818;
    property Soil: IRobotSeismicAnalysis_CIRSOC_103_SoilType dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRobotSpectralAnalysisSpectrum
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F3041224-B93C-11D4-B882-0050DA76755E}
// *********************************************************************//
  IRobotSpectralAnalysisSpectrum = interface(IDispatch)
    ['{F3041224-B93C-11D4-B882-0050DA76755E}']
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_Damping: Double; safecall;
    procedure Set_Damping(ret: Double); safecall;
    function Get_AbscissaXAxisLogarithmicScale: WordBool; safecall;
    procedure Set_AbscissaXAxisLogarithmicScale(ret: WordBool); safecall;
    function Get_AbscissaXAxis: IRobotSpectralAnalysisAbscissaXAxisType; safecall;
    procedure Set_AbscissaXAxis(ret: IRobotSpectralAnalysisAbscissaXAxisType); safecall;
    function Get_OrdinateYAxisLogarithmicScale: WordBool; safecall;
    procedure Set_OrdinateYAxisLogarithmicScale(ret: WordBool); safecall;
    function Get_OrdinateYAxis: IRobotSpectralAnalysisOrdinateYAxisType; safecall;
    procedure Set_OrdinateYAxis(ret: IRobotSpectralAnalysisOrdinateYAxisType); safecall;
    function Get_Points: IRobotSpectralAnalysisPointsCollection; safecall;
    procedure Set_Points(const ret: IRobotSpectralAnalysisPointsCollection); safecall;
    procedure SaveToFile(const _file_path: WideString); safecall;
    procedure LoadFromFile(const _file_path: WideString; const _spectrum_name: WideString); safecall;
    procedure Average(const _spectrum_1: IRobotSpectralAnalysisSpectrum; 
                      const _spectrum_2: IRobotSpectralAnalysisSpectrum; _damping: Double); safecall;
    procedure AddFromTimeHistory(const _time_history: IRobotSpectralAnalysisPointsCollection; 
                                 _t_min: Double; _t_max: Double; _points_count: Integer; 
                                 _damping: Double); safecall;
    property Name: WideString read Get_Name write Set_Name;
    property Damping: Double read Get_Damping write Set_Damping;
    property AbscissaXAxisLogarithmicScale: WordBool read Get_AbscissaXAxisLogarithmicScale write Set_AbscissaXAxisLogarithmicScale;
    property AbscissaXAxis: IRobotSpectralAnalysisAbscissaXAxisType read Get_AbscissaXAxis write Set_AbscissaXAxis;
    property OrdinateYAxisLogarithmicScale: WordBool read Get_OrdinateYAxisLogarithmicScale write Set_OrdinateYAxisLogarithmicScale;
    property OrdinateYAxis: IRobotSpectralAnalysisOrdinateYAxisType read Get_OrdinateYAxis write Set_OrdinateYAxis;
    property Points: IRobotSpectralAnalysisPointsCollection read Get_Points write Set_Points;
  end;

// *********************************************************************//
// DispIntf:  IRobotSpectralAnalysisSpectrumDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F3041224-B93C-11D4-B882-0050DA76755E}
// *********************************************************************//
  IRobotSpectralAnalysisSpectrumDisp = dispinterface
    ['{F3041224-B93C-11D4-B882-0050DA76755E}']
    property Name: WideString dispid 1610743808;
    property Damping: Double dispid 1610743810;
    property AbscissaXAxisLogarithmicScale: WordBool dispid 1610743812;
    property AbscissaXAxis: IRobotSpectralAnalysisAbscissaXAxisType dispid 1610743814;
    property OrdinateYAxisLogarithmicScale: WordBool dispid 1610743816;
    property OrdinateYAxis: IRobotSpectralAnalysisOrdinateYAxisType dispid 1610743818;
    property Points: IRobotSpectralAnalysisPointsCollection dispid 1610743820;
    procedure SaveToFile(const _file_path: WideString); dispid 1610743822;
    procedure LoadFromFile(const _file_path: WideString; const _spectrum_name: WideString); dispid 1610743823;
    procedure Average(const _spectrum_1: IRobotSpectralAnalysisSpectrum; 
                      const _spectrum_2: IRobotSpectralAnalysisSpectrum; _damping: Double); dispid 1610743824;
    procedure AddFromTimeHistory(const _time_history: IRobotSpectralAnalysisPointsCollection; 
                                 _t_min: Double; _t_max: Double; _points_count: Integer; 
                                 _damping: Double); dispid 1610743825;
  end;

// *********************************************************************//
// Interface: IRobotSpectralAnalysisPointsCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F3041228-B93C-11D4-B882-0050DA76755E}
// *********************************************************************//
  IRobotSpectralAnalysisPointsCollection = interface(IDispatch)
    ['{F3041228-B93C-11D4-B882-0050DA76755E}']
    function Get_Count: Integer; safecall;
    procedure Add(_x: Double; _y: Double); safecall;
    procedure Set_(_pos: Integer; _x: Double; _y: Double); safecall;
    procedure Get(_pos: Integer; out _x: Double; out _y: Double); safecall;
    procedure Remove(_pos: Integer); safecall;
    procedure LoadFromFile(const _file_path: WideString); safecall;
    procedure SaveToFile(const _file_path: WideString); safecall;
    procedure Clear; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotSpectralAnalysisPointsCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F3041228-B93C-11D4-B882-0050DA76755E}
// *********************************************************************//
  IRobotSpectralAnalysisPointsCollectionDisp = dispinterface
    ['{F3041228-B93C-11D4-B882-0050DA76755E}']
    property Count: Integer readonly dispid 1610743808;
    procedure Add(_x: Double; _y: Double); dispid 1610743809;
    procedure Set_(_pos: Integer; _x: Double; _y: Double); dispid 1610743810;
    procedure Get(_pos: Integer; out _x: Double; out _y: Double); dispid 1610743811;
    procedure Remove(_pos: Integer); dispid 1610743812;
    procedure LoadFromFile(const _file_path: WideString); dispid 1610743813;
    procedure SaveToFile(const _file_path: WideString); dispid 1610743814;
    procedure Clear; dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotSpectralAnalysisParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F3041222-B93C-11D4-B882-0050DA76755E}
// *********************************************************************//
  IRobotSpectralAnalysisParams = interface(IDispatch)
    ['{F3041222-B93C-11D4-B882-0050DA76755E}']
    function Get_Direction: IRobotGeoPoint3D; safecall;
    procedure Set_Direction(const ret: IRobotGeoPoint3D); safecall;
    function Get_Filter: IRobotCaseAnalysisModesFilter; safecall;
    procedure Set_Filter(const ret: IRobotCaseAnalysisModesFilter); safecall;
    function Get_Spectrum: IRobotSpectralAnalysisSpectrum; safecall;
    procedure Set_Spectrum(const ret: IRobotSpectralAnalysisSpectrum); safecall;
    function Get_ExcitationDir: IRobotDynamicAnalysisExcitationDirection; safecall;
    property Direction: IRobotGeoPoint3D read Get_Direction write Set_Direction;
    property Filter: IRobotCaseAnalysisModesFilter read Get_Filter write Set_Filter;
    property Spectrum: IRobotSpectralAnalysisSpectrum read Get_Spectrum write Set_Spectrum;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection read Get_ExcitationDir;
  end;

// *********************************************************************//
// DispIntf:  IRobotSpectralAnalysisParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F3041222-B93C-11D4-B882-0050DA76755E}
// *********************************************************************//
  IRobotSpectralAnalysisParamsDisp = dispinterface
    ['{F3041222-B93C-11D4-B882-0050DA76755E}']
    property Direction: IRobotGeoPoint3D dispid 1610743808;
    property Filter: IRobotCaseAnalysisModesFilter dispid 1610743810;
    property Spectrum: IRobotSpectralAnalysisSpectrum dispid 1610743812;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection readonly dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotNodeCompatibilityData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ADAC3BB2-C5CB-11D4-B88F-0050DA76755E}
// *********************************************************************//
  IRobotNodeCompatibilityData = interface(IDispatch)
    ['{ADAC3BB2-C5CB-11D4-B88F-0050DA76755E}']
    function Get_UX: WordBool; safecall;
    procedure Set_UX(ret: WordBool); safecall;
    function Get_UY: WordBool; safecall;
    procedure Set_UY(ret: WordBool); safecall;
    function Get_UZ: WordBool; safecall;
    procedure Set_UZ(ret: WordBool); safecall;
    function Get_RX: WordBool; safecall;
    procedure Set_RX(ret: WordBool); safecall;
    function Get_RY: WordBool; safecall;
    procedure Set_RY(ret: WordBool); safecall;
    function Get_RZ: WordBool; safecall;
    procedure Set_RZ(ret: WordBool); safecall;
    function Get_AX: Double; safecall;
    procedure Set_AX(ret: Double); safecall;
    function Get_AY: Double; safecall;
    procedure Set_AY(ret: Double); safecall;
    function Get_AZ: Double; safecall;
    procedure Set_AZ(ret: Double); safecall;
    function Get_KX: Double; safecall;
    procedure Set_KX(ret: Double); safecall;
    function Get_KY: Double; safecall;
    procedure Set_KY(ret: Double); safecall;
    function Get_KZ: Double; safecall;
    procedure Set_KZ(ret: Double); safecall;
    function Get_Alpha: Double; safecall;
    procedure Set_Alpha(ret: Double); safecall;
    function Get_Beta: Double; safecall;
    procedure Set_Beta(ret: Double); safecall;
    function Get_Gamma: Double; safecall;
    procedure Set_Gamma(ret: Double); safecall;
    function Get_HX: Double; safecall;
    procedure Set_HX(ret: Double); safecall;
    function Get_HY: Double; safecall;
    procedure Set_HY(ret: Double); safecall;
    function Get_HZ: Double; safecall;
    procedure Set_HZ(ret: Double); safecall;
    function Get_BX: Double; safecall;
    procedure Set_BX(ret: Double); safecall;
    function Get_BY: Double; safecall;
    procedure Set_BY(ret: Double); safecall;
    function Get_BZ: Double; safecall;
    procedure Set_BZ(ret: Double); safecall;
    function Get_NonlinearModel: IRobotNonlinearLinkMngr; safecall;
    property UX: WordBool read Get_UX write Set_UX;
    property UY: WordBool read Get_UY write Set_UY;
    property UZ: WordBool read Get_UZ write Set_UZ;
    property RX: WordBool read Get_RX write Set_RX;
    property RY: WordBool read Get_RY write Set_RY;
    property RZ: WordBool read Get_RZ write Set_RZ;
    property AX: Double read Get_AX write Set_AX;
    property AY: Double read Get_AY write Set_AY;
    property AZ: Double read Get_AZ write Set_AZ;
    property KX: Double read Get_KX write Set_KX;
    property KY: Double read Get_KY write Set_KY;
    property KZ: Double read Get_KZ write Set_KZ;
    property Alpha: Double read Get_Alpha write Set_Alpha;
    property Beta: Double read Get_Beta write Set_Beta;
    property Gamma: Double read Get_Gamma write Set_Gamma;
    property HX: Double read Get_HX write Set_HX;
    property HY: Double read Get_HY write Set_HY;
    property HZ: Double read Get_HZ write Set_HZ;
    property BX: Double read Get_BX write Set_BX;
    property BY: Double read Get_BY write Set_BY;
    property BZ: Double read Get_BZ write Set_BZ;
    property NonlinearModel: IRobotNonlinearLinkMngr read Get_NonlinearModel;
  end;

// *********************************************************************//
// DispIntf:  IRobotNodeCompatibilityDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ADAC3BB2-C5CB-11D4-B88F-0050DA76755E}
// *********************************************************************//
  IRobotNodeCompatibilityDataDisp = dispinterface
    ['{ADAC3BB2-C5CB-11D4-B88F-0050DA76755E}']
    property UX: WordBool dispid 1610743808;
    property UY: WordBool dispid 1610743810;
    property UZ: WordBool dispid 1610743812;
    property RX: WordBool dispid 1610743814;
    property RY: WordBool dispid 1610743816;
    property RZ: WordBool dispid 1610743818;
    property AX: Double dispid 1610743820;
    property AY: Double dispid 1610743822;
    property AZ: Double dispid 1610743824;
    property KX: Double dispid 1610743826;
    property KY: Double dispid 1610743828;
    property KZ: Double dispid 1610743830;
    property Alpha: Double dispid 1610743832;
    property Beta: Double dispid 1610743834;
    property Gamma: Double dispid 1610743836;
    property HX: Double dispid 1610743838;
    property HY: Double dispid 1610743840;
    property HZ: Double dispid 1610743842;
    property BX: Double dispid 1610743844;
    property BY: Double dispid 1610743846;
    property BZ: Double dispid 1610743848;
    property NonlinearModel: IRobotNonlinearLinkMngr readonly dispid 1610743850;
  end;

// *********************************************************************//
// Interface: IRobotModalWithStaticForcesAnalysisParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {23B1A842-D01C-11D4-B897-0050DA76755E}
// *********************************************************************//
  IRobotModalWithStaticForcesAnalysisParams = interface(IRobotModalAnalysisParams)
    ['{23B1A842-D01C-11D4-B897-0050DA76755E}']
    function Get_Nonlinear: WordBool; safecall;
    procedure Set_Nonlinear(ret: WordBool); safecall;
    function GetStaticStateParams: IRobotNonlinearAnalysisParams; safecall;
    procedure SetStaticStateParams(const _params: IRobotNonlinearAnalysisParams); safecall;
    function CreateFromStatic(_static_case_num: Integer): WordBool; safecall;
    property Nonlinear: WordBool read Get_Nonlinear write Set_Nonlinear;
  end;

// *********************************************************************//
// DispIntf:  IRobotModalWithStaticForcesAnalysisParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {23B1A842-D01C-11D4-B897-0050DA76755E}
// *********************************************************************//
  IRobotModalWithStaticForcesAnalysisParamsDisp = dispinterface
    ['{23B1A842-D01C-11D4-B897-0050DA76755E}']
    property Nonlinear: WordBool dispid 1610809344;
    function GetStaticStateParams: IRobotNonlinearAnalysisParams; dispid 1610809346;
    procedure SetStaticStateParams(const _params: IRobotNonlinearAnalysisParams); dispid 1610809347;
    function CreateFromStatic(_static_case_num: Integer): WordBool; dispid 1610809348;
    property Mode: IRobotModalAnalysisMode dispid 1610743808;
    property ModesCount: Integer dispid 1610743810;
    property Tolerance: Double dispid 1610743812;
    property IterationsCount: Integer dispid 1610743814;
    property Damping: Double dispid 1610743816;
    property IncludeDampingInCalculations: WordBool dispid 1610743818;
    property MassMatrix: IRobotModalAnalysisMassMatrixType dispid 1610743820;
    property MassParticipation: Double dispid 1610743822;
    property DisregardDensity: WordBool dispid 1610743824;
    property Method: IRobotModalAnalysisAlgorithm dispid 1610743826;
    property Shifts: IRobotModalAnalysisShifts readonly dispid 1610743828;
    property Acceleration: Double dispid 1610743829;
    property Limits: IRobotModalAnalysisLimits readonly dispid 1610743831;
    property SturmVerification: WordBool dispid 1610743832;
    property Base: IRobotModalAnalysisBase readonly dispid 1610743834;
    property MassEccentricities: IRobotMassEccentricities readonly dispid 1610743835;
  end;

// *********************************************************************//
// Interface: IRobotKernel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9526D7E2-D659-11D4-B89E-0050DA76755E}
// *********************************************************************//
  IRobotKernel = interface(IDispatch)
    ['{9526D7E2-D659-11D4-B89E-0050DA76755E}']
    function Get_Version: Double; safecall;
    function Get_Preferences: IRobotKernelPreferences; safecall;
    function Get_ProjectPreferences: IRobotProjectPreferences; safecall;
    function Get_Structure: IRobotStructure; safecall;
    function Get_CmpntFactory: IRobotComponentFactory; safecall;
    function Get_CalcEngine: IRobotCalcEngine; safecall;
    function Get_ProjectUniqueId: WideString; safecall;
    function ProjectNew(_prj_type: IRobotProjectType): WordBool; safecall;
    function ProjectOpen(const _file_path: WideString): WordBool; safecall;
    procedure ProjectSave; safecall;
    procedure ProjectSaveAs(const _file_path: WideString); safecall;
    function GetExtension(const _extmdl_name: WideString): IDispatch; safecall;
    function Get_AuthenticateService: IRobotAuthenticateService; safecall;
    function ProjectNewFromTemplate(const _tmpl_file: WideString): WordBool; safecall;
    function Get_ProgramVersion: WideString; safecall;
    function Get_ProgramName: WideString; safecall;
    function Get_ConcrReinfEngine: IRConcrCalcEngine; safecall;
    function Get_ProgramPath: WideString; safecall;
    function Get_ProjectActiveModel: IRobotActiveModelType; safecall;
    procedure Set_ProjectActiveModel(ret: IRobotActiveModelType); safecall;
    property Version: Double read Get_Version;
    property Preferences: IRobotKernelPreferences read Get_Preferences;
    property ProjectPreferences: IRobotProjectPreferences read Get_ProjectPreferences;
    property Structure: IRobotStructure read Get_Structure;
    property CmpntFactory: IRobotComponentFactory read Get_CmpntFactory;
    property CalcEngine: IRobotCalcEngine read Get_CalcEngine;
    property ProjectUniqueId: WideString read Get_ProjectUniqueId;
    property AuthenticateService: IRobotAuthenticateService read Get_AuthenticateService;
    property ProgramVersion: WideString read Get_ProgramVersion;
    property ProgramName: WideString read Get_ProgramName;
    property ConcrReinfEngine: IRConcrCalcEngine read Get_ConcrReinfEngine;
    property ProgramPath: WideString read Get_ProgramPath;
    property ProjectActiveModel: IRobotActiveModelType read Get_ProjectActiveModel write Set_ProjectActiveModel;
  end;

// *********************************************************************//
// DispIntf:  IRobotKernelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9526D7E2-D659-11D4-B89E-0050DA76755E}
// *********************************************************************//
  IRobotKernelDisp = dispinterface
    ['{9526D7E2-D659-11D4-B89E-0050DA76755E}']
    property Version: Double readonly dispid 1610743808;
    property Preferences: IRobotKernelPreferences readonly dispid 1610743809;
    property ProjectPreferences: IRobotProjectPreferences readonly dispid 1610743810;
    property Structure: IRobotStructure readonly dispid 1610743811;
    property CmpntFactory: IRobotComponentFactory readonly dispid 1610743812;
    property CalcEngine: IRobotCalcEngine readonly dispid 1610743813;
    property ProjectUniqueId: WideString readonly dispid 1610743814;
    function ProjectNew(_prj_type: IRobotProjectType): WordBool; dispid 1610743815;
    function ProjectOpen(const _file_path: WideString): WordBool; dispid 1610743816;
    procedure ProjectSave; dispid 1610743817;
    procedure ProjectSaveAs(const _file_path: WideString); dispid 1610743818;
    function GetExtension(const _extmdl_name: WideString): IDispatch; dispid 1610743819;
    property AuthenticateService: IRobotAuthenticateService readonly dispid 1610743820;
    function ProjectNewFromTemplate(const _tmpl_file: WideString): WordBool; dispid 1610743821;
    property ProgramVersion: WideString readonly dispid 1610743822;
    property ProgramName: WideString readonly dispid 1610743823;
    property ConcrReinfEngine: IRConcrCalcEngine readonly dispid 1610743824;
    property ProgramPath: WideString readonly dispid 1610743825;
    property ProjectActiveModel: IRobotActiveModelType dispid 1610743826;
  end;

// *********************************************************************//
// Interface: IRobotKernelPreferences
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1DC41BF2-DCCE-11D4-B8A0-0050DA76755E}
// *********************************************************************//
  IRobotKernelPreferences = interface(IDispatch)
    ['{1DC41BF2-DCCE-11D4-B8A0-0050DA76755E}']
    function GetLanguage(_lang_id: IRobotLanguage): SYSINT; safecall;
    function GetDirectory(_rob_dir: IRobotDirectory): WideString; safecall;
    procedure SetLanguage(_lang_id: IRobotLanguage; _lang_num: SYSINT); safecall;
    procedure SetDirectoryExt(_dir_ext: IRobotDirectoryExtension; const _full_path: WideString); safecall;
    function GetDirectoryExt(_dir_ext: IRobotDirectoryExtension): WideString; safecall;
    function Get_Multiprocessing: WordBool; safecall;
    procedure Set_Multiprocessing(ret: WordBool); safecall;
    property Multiprocessing: WordBool read Get_Multiprocessing write Set_Multiprocessing;
  end;

// *********************************************************************//
// DispIntf:  IRobotKernelPreferencesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1DC41BF2-DCCE-11D4-B8A0-0050DA76755E}
// *********************************************************************//
  IRobotKernelPreferencesDisp = dispinterface
    ['{1DC41BF2-DCCE-11D4-B8A0-0050DA76755E}']
    function GetLanguage(_lang_id: IRobotLanguage): SYSINT; dispid 1610743808;
    function GetDirectory(_rob_dir: IRobotDirectory): WideString; dispid 1610743809;
    procedure SetLanguage(_lang_id: IRobotLanguage; _lang_num: SYSINT); dispid 1610743810;
    procedure SetDirectoryExt(_dir_ext: IRobotDirectoryExtension; const _full_path: WideString); dispid 1610743811;
    function GetDirectoryExt(_dir_ext: IRobotDirectoryExtension): WideString; dispid 1610743812;
    property Multiprocessing: WordBool dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotProjectPreferences
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56AFE688-C294-11D3-B7B3-0050DA76755E}
// *********************************************************************//
  IRobotProjectPreferences = interface(IDispatch)
    ['{56AFE688-C294-11D3-B7B3-0050DA76755E}']
    function Get_SectionsFound: IRobotSectionDatabaseList; safecall;
    function Get_SectionsActive: IRobotSectionDatabaseList; safecall;
    function Get_Materials: IRobotMaterialDatabase; safecall;
    function GetActiveCode(code_type: IRobotCodeType): WideString; safecall;
    function SetActiveCode(code_type: IRobotCodeType; const code_name: WideString): Integer; safecall;
    function Get_MeshParams: IRobotMeshParams; safecall;
    function Get_VehiclesFound: IRobotVehicleDatabaseList; safecall;
    function Get_VehiclesActive: IRobotVehicleDatabaseList; safecall;
    function Get_Units: IRobotUnitMngr; safecall;
    function Get_MeshAutoAdjust: WordBool; safecall;
    procedure Set_MeshAutoAdjust(ret: WordBool); safecall;
    procedure Save; safecall;
    function GetActiveCodeNumber(_code_type: IRobotCodeType): Integer; safecall;
    function SetActiveCodeNumber(_code_type: IRobotCodeType; _code_number: Integer): WordBool; safecall;
    function Get_EurocodeFactors: IRobotEurocodeFactors; safecall;
    function SetCurrentDatabase(_db_type: IRobotDatabaseType; const _db_name: WideString): WordBool; safecall;
    function GetCurrentDatabase(_db_type: IRobotDatabaseType): WideString; safecall;
    function Get_CalcModelCoherence: IRobotCalculationModelCoherence; safecall;
    procedure Set_CalcModelCoherence(ret: IRobotCalculationModelCoherence); safecall;
    function Get_KinematicConstraints: WordBool; safecall;
    procedure Set_KinematicConstraints(ret: WordBool); safecall;
    function Get_MeshParamsWalls: IRobotMeshParams; safecall;
    function Get_MeshParamsFloors: IRobotMeshParams; safecall;
    function Get_MeshAutoAdjustIterationCount: Integer; safecall;
    procedure Set_MeshAutoAdjustIterationCount(ret: Integer); safecall;
    property SectionsFound: IRobotSectionDatabaseList read Get_SectionsFound;
    property SectionsActive: IRobotSectionDatabaseList read Get_SectionsActive;
    property Materials: IRobotMaterialDatabase read Get_Materials;
    property MeshParams: IRobotMeshParams read Get_MeshParams;
    property VehiclesFound: IRobotVehicleDatabaseList read Get_VehiclesFound;
    property VehiclesActive: IRobotVehicleDatabaseList read Get_VehiclesActive;
    property Units: IRobotUnitMngr read Get_Units;
    property MeshAutoAdjust: WordBool read Get_MeshAutoAdjust write Set_MeshAutoAdjust;
    property EurocodeFactors: IRobotEurocodeFactors read Get_EurocodeFactors;
    property CalcModelCoherence: IRobotCalculationModelCoherence read Get_CalcModelCoherence write Set_CalcModelCoherence;
    property KinematicConstraints: WordBool read Get_KinematicConstraints write Set_KinematicConstraints;
    property MeshParamsWalls: IRobotMeshParams read Get_MeshParamsWalls;
    property MeshParamsFloors: IRobotMeshParams read Get_MeshParamsFloors;
    property MeshAutoAdjustIterationCount: Integer read Get_MeshAutoAdjustIterationCount write Set_MeshAutoAdjustIterationCount;
  end;

// *********************************************************************//
// DispIntf:  IRobotProjectPreferencesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56AFE688-C294-11D3-B7B3-0050DA76755E}
// *********************************************************************//
  IRobotProjectPreferencesDisp = dispinterface
    ['{56AFE688-C294-11D3-B7B3-0050DA76755E}']
    property SectionsFound: IRobotSectionDatabaseList readonly dispid 1610743808;
    property SectionsActive: IRobotSectionDatabaseList readonly dispid 1610743809;
    property Materials: IRobotMaterialDatabase readonly dispid 1610743810;
    function GetActiveCode(code_type: IRobotCodeType): WideString; dispid 1610743811;
    function SetActiveCode(code_type: IRobotCodeType; const code_name: WideString): Integer; dispid 1610743812;
    property MeshParams: IRobotMeshParams readonly dispid 1610743813;
    property VehiclesFound: IRobotVehicleDatabaseList readonly dispid 1610743814;
    property VehiclesActive: IRobotVehicleDatabaseList readonly dispid 1610743815;
    property Units: IRobotUnitMngr readonly dispid 1610743816;
    property MeshAutoAdjust: WordBool dispid 1610743817;
    procedure Save; dispid 1610743819;
    function GetActiveCodeNumber(_code_type: IRobotCodeType): Integer; dispid 1610743820;
    function SetActiveCodeNumber(_code_type: IRobotCodeType; _code_number: Integer): WordBool; dispid 1610743821;
    property EurocodeFactors: IRobotEurocodeFactors readonly dispid 1610743822;
    function SetCurrentDatabase(_db_type: IRobotDatabaseType; const _db_name: WideString): WordBool; dispid 1610743823;
    function GetCurrentDatabase(_db_type: IRobotDatabaseType): WideString; dispid 1610743824;
    property CalcModelCoherence: IRobotCalculationModelCoherence dispid 1610743825;
    property KinematicConstraints: WordBool dispid 1610743827;
    property MeshParamsWalls: IRobotMeshParams readonly dispid 1610743829;
    property MeshParamsFloors: IRobotMeshParams readonly dispid 1610743830;
    property MeshAutoAdjustIterationCount: Integer dispid 1610743831;
  end;

// *********************************************************************//
// Interface: IRobotSectionDatabaseList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56AFE686-C294-11D3-B7B3-0050DA76755E}
// *********************************************************************//
  IRobotSectionDatabaseList = interface(IDispatch)
    ['{56AFE686-C294-11D3-B7B3-0050DA76755E}']
    function Get_Count: SYSINT; safecall;
    function Get(idx: SYSINT): WideString; safecall;
    function Find(const db_name: WideString): SYSINT; safecall;
    procedure ChangeIndex(cur_idx: SYSINT; new_idx: SYSINT); safecall;
    function Add(const db_name: WideString): Integer; safecall;
    function AddFromFile(const file_path: WideString): Integer; safecall;
    procedure Remove(idx: SYSINT); safecall;
    function GetDatabase(idx: SYSINT): IRobotSectionDatabase; safecall;
    property Count: SYSINT read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotSectionDatabaseListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56AFE686-C294-11D3-B7B3-0050DA76755E}
// *********************************************************************//
  IRobotSectionDatabaseListDisp = dispinterface
    ['{56AFE686-C294-11D3-B7B3-0050DA76755E}']
    property Count: SYSINT readonly dispid 1610743808;
    function Get(idx: SYSINT): WideString; dispid 1610743809;
    function Find(const db_name: WideString): SYSINT; dispid 1610743810;
    procedure ChangeIndex(cur_idx: SYSINT; new_idx: SYSINT); dispid 1610743811;
    function Add(const db_name: WideString): Integer; dispid 1610743812;
    function AddFromFile(const file_path: WideString): Integer; dispid 1610743813;
    procedure Remove(idx: SYSINT); dispid 1610743814;
    function GetDatabase(idx: SYSINT): IRobotSectionDatabase; dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotSectionDatabase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56AFE682-C294-11D3-B7B3-0050DA76755E}
// *********************************************************************//
  IRobotSectionDatabase = interface(IDispatch)
    ['{56AFE682-C294-11D3-B7B3-0050DA76755E}']
    function Get_Name: WideString; safecall;
    function GetAll: IRobotNamesArray; safecall;
    function Load(const db_name: WideString): Integer; safecall;
    function LoadFromFile(const file_path: WideString): Integer; safecall;
    function Get_FullName: WideString; safecall;
    function Get_Description: WideString; safecall;
    property Name: WideString read Get_Name;
    property FullName: WideString read Get_FullName;
    property Description: WideString read Get_Description;
  end;

// *********************************************************************//
// DispIntf:  IRobotSectionDatabaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56AFE682-C294-11D3-B7B3-0050DA76755E}
// *********************************************************************//
  IRobotSectionDatabaseDisp = dispinterface
    ['{56AFE682-C294-11D3-B7B3-0050DA76755E}']
    property Name: WideString readonly dispid 1610743808;
    function GetAll: IRobotNamesArray; dispid 1610743809;
    function Load(const db_name: WideString): Integer; dispid 1610743810;
    function LoadFromFile(const file_path: WideString): Integer; dispid 1610743811;
    property FullName: WideString readonly dispid 1610743812;
    property Description: WideString readonly dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotMaterialDatabase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56AFE684-C294-11D3-B7B3-0050DA76755E}
// *********************************************************************//
  IRobotMaterialDatabase = interface(IDispatch)
    ['{56AFE684-C294-11D3-B7B3-0050DA76755E}']
    function Get_Name: WideString; safecall;
    function GetAll: IRobotNamesArray; safecall;
    function Get(mater_type: IRobotMaterialType): IRobotNamesArray; safecall;
    function LoadFromFile(const file_path: WideString): Integer; safecall;
    function Load(const dbase_name: WideString): Integer; safecall;
    function GetDefault(_mater_type: IRobotMaterialType): WideString; safecall;
    procedure SetDefault(_mater_type: IRobotMaterialType; const _mater_name: WideString); safecall;
    property Name: WideString read Get_Name;
  end;

// *********************************************************************//
// DispIntf:  IRobotMaterialDatabaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56AFE684-C294-11D3-B7B3-0050DA76755E}
// *********************************************************************//
  IRobotMaterialDatabaseDisp = dispinterface
    ['{56AFE684-C294-11D3-B7B3-0050DA76755E}']
    property Name: WideString readonly dispid 1610743808;
    function GetAll: IRobotNamesArray; dispid 1610743809;
    function Get(mater_type: IRobotMaterialType): IRobotNamesArray; dispid 1610743810;
    function LoadFromFile(const file_path: WideString): Integer; dispid 1610743811;
    function Load(const dbase_name: WideString): Integer; dispid 1610743812;
    function GetDefault(_mater_type: IRobotMaterialType): WideString; dispid 1610743813;
    procedure SetDefault(_mater_type: IRobotMaterialType; const _mater_name: WideString); dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotVehicleDatabaseList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5A36E3B8-8295-4F58-AA07-1D90F7256B69}
// *********************************************************************//
  IRobotVehicleDatabaseList = interface(IDispatch)
    ['{5A36E3B8-8295-4F58-AA07-1D90F7256B69}']
    function Get_Count: SYSINT; safecall;
    function Get_Default: SYSINT; safecall;
    procedure Set_Default(ret: SYSINT); safecall;
    function Add(const _db_name: WideString): WordBool; safecall;
    function Find(const _db_name: WideString): SYSINT; safecall;
    function GetDatabase(_idx: SYSINT): IRobotVehicleDatabase; safecall;
    function Get(_idx: SYSINT): WideString; safecall;
    procedure Remove(_idx: SYSINT); safecall;
    function AddFromFile(const _file_path: WideString): WordBool; safecall;
    procedure Create(const _db_name: WideString; const _long_db_name: WideString; 
                     const _description: WideString); safecall;
    property Count: SYSINT read Get_Count;
    property Default: SYSINT read Get_Default write Set_Default;
  end;

// *********************************************************************//
// DispIntf:  IRobotVehicleDatabaseListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5A36E3B8-8295-4F58-AA07-1D90F7256B69}
// *********************************************************************//
  IRobotVehicleDatabaseListDisp = dispinterface
    ['{5A36E3B8-8295-4F58-AA07-1D90F7256B69}']
    property Count: SYSINT readonly dispid 1610743808;
    property Default: SYSINT dispid 1610743809;
    function Add(const _db_name: WideString): WordBool; dispid 1610743811;
    function Find(const _db_name: WideString): SYSINT; dispid 1610743812;
    function GetDatabase(_idx: SYSINT): IRobotVehicleDatabase; dispid 1610743813;
    function Get(_idx: SYSINT): WideString; dispid 1610743814;
    procedure Remove(_idx: SYSINT); dispid 1610743815;
    function AddFromFile(const _file_path: WideString): WordBool; dispid 1610743816;
    procedure Create(const _db_name: WideString; const _long_db_name: WideString; 
                     const _description: WideString); dispid 1610743817;
  end;

// *********************************************************************//
// Interface: IRobotVehicleDatabase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EBDC08F9-40C6-4A04-A61B-C65A737859F6}
// *********************************************************************//
  IRobotVehicleDatabase = interface(IDispatch)
    ['{EBDC08F9-40C6-4A04-A61B-C65A737859F6}']
    function Get_Name: WideString; safecall;
    function Get_LongName: WideString; safecall;
    function Get_Description: WideString; safecall;
    function Load(const _db_name: WideString): WordBool; safecall;
    function GetAll: IRobotNamesArray; safecall;
    function LoadFromFile(const _file_path: WideString): WordBool; safecall;
    property Name: WideString read Get_Name;
    property LongName: WideString read Get_LongName;
    property Description: WideString read Get_Description;
  end;

// *********************************************************************//
// DispIntf:  IRobotVehicleDatabaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EBDC08F9-40C6-4A04-A61B-C65A737859F6}
// *********************************************************************//
  IRobotVehicleDatabaseDisp = dispinterface
    ['{EBDC08F9-40C6-4A04-A61B-C65A737859F6}']
    property Name: WideString readonly dispid 1610743808;
    property LongName: WideString readonly dispid 1610743809;
    property Description: WideString readonly dispid 1610743810;
    function Load(const _db_name: WideString): WordBool; dispid 1610743811;
    function GetAll: IRobotNamesArray; dispid 1610743812;
    function LoadFromFile(const _file_path: WideString): WordBool; dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotUnitMngr
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E151B9A-FFB8-40AE-9A09-20EFDC3D0596}
// *********************************************************************//
  IRobotUnitMngr = interface(IDispatch)
    ['{7E151B9A-FFB8-40AE-9A09-20EFDC3D0596}']
    function Get_UnitEdition: IRobotUnitEditionServer; safecall;
    function Count(_type: IRobotUnitType): Integer; safecall;
    procedure Set_(_type: IRobotUnitType; const _data: IRobotUnitData); safecall;
    function Get(_type: IRobotUnitType): IRobotUnitData; safecall;
    function GetName(_type: IRobotUnitType; _idx: Integer): WideString; safecall;
    function GetCoeff(_type: IRobotUnitType): Double; safecall;
    procedure Refresh; safecall;
    function Get_UseMetricAsDefault: WordBool; safecall;
    procedure Set_UseMetricAsDefault(ret: WordBool); safecall;
    function GetCoeff2(_unit_type: IRobotUnitType; _unit_idx: Integer): Double; safecall;
    property UnitEdition: IRobotUnitEditionServer read Get_UnitEdition;
    property UseMetricAsDefault: WordBool read Get_UseMetricAsDefault write Set_UseMetricAsDefault;
  end;

// *********************************************************************//
// DispIntf:  IRobotUnitMngrDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E151B9A-FFB8-40AE-9A09-20EFDC3D0596}
// *********************************************************************//
  IRobotUnitMngrDisp = dispinterface
    ['{7E151B9A-FFB8-40AE-9A09-20EFDC3D0596}']
    property UnitEdition: IRobotUnitEditionServer readonly dispid 1610743808;
    function Count(_type: IRobotUnitType): Integer; dispid 1610743809;
    procedure Set_(_type: IRobotUnitType; const _data: IRobotUnitData); dispid 1610743810;
    function Get(_type: IRobotUnitType): IRobotUnitData; dispid 1610743811;
    function GetName(_type: IRobotUnitType; _idx: Integer): WideString; dispid 1610743812;
    function GetCoeff(_type: IRobotUnitType): Double; dispid 1610743813;
    procedure Refresh; dispid 1610743814;
    property UseMetricAsDefault: WordBool dispid 1610743815;
    function GetCoeff2(_unit_type: IRobotUnitType; _unit_idx: Integer): Double; dispid 1610743817;
  end;

// *********************************************************************//
// Interface: IRobotUnitEditionServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C4FC7CF3-42D7-4AC9-8A0A-18D57322DA45}
// *********************************************************************//
  IRobotUnitEditionServer = interface(IDispatch)
    ['{C4FC7CF3-42D7-4AC9-8A0A-18D57322DA45}']
    function Get(_type: IRobotUnitEditionType; _idx: Integer): IRobotUnitEditionData; safecall;
    procedure Set_(const _data: IRobotUnitEditionData); safecall;
    function Find(_type: IRobotUnitEditionType; const _name: WideString): Integer; safecall;
    function New(_type: IRobotUnitEditionType; const _unit: WideString; _coeff: Double): Integer; safecall;
    procedure Delete(_type: IRobotUnitEditionType; _idx: Integer); safecall;
    function Count(_type: IRobotUnitEditionType): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotUnitEditionServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C4FC7CF3-42D7-4AC9-8A0A-18D57322DA45}
// *********************************************************************//
  IRobotUnitEditionServerDisp = dispinterface
    ['{C4FC7CF3-42D7-4AC9-8A0A-18D57322DA45}']
    function Get(_type: IRobotUnitEditionType; _idx: Integer): IRobotUnitEditionData; dispid 1610743808;
    procedure Set_(const _data: IRobotUnitEditionData); dispid 1610743809;
    function Find(_type: IRobotUnitEditionType; const _name: WideString): Integer; dispid 1610743810;
    function New(_type: IRobotUnitEditionType; const _unit: WideString; _coeff: Double): Integer; dispid 1610743811;
    procedure Delete(_type: IRobotUnitEditionType; _idx: Integer); dispid 1610743812;
    function Count(_type: IRobotUnitEditionType): Integer; dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotUnitEditionData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {14969280-09D5-4E20-A1BB-949AA7357A07}
// *********************************************************************//
  IRobotUnitEditionData = interface(IDispatch)
    ['{14969280-09D5-4E20-A1BB-949AA7357A07}']
    function Get_Unit_: WideString; safecall;
    procedure Set_Unit_(const ret: WideString); safecall;
    function Get_Coefficient: Double; safecall;
    procedure Set_Coefficient(ret: Double); safecall;
    function Get_type_: IRobotUnitEditionType; safecall;
    property Unit_: WideString read Get_Unit_ write Set_Unit_;
    property Coefficient: Double read Get_Coefficient write Set_Coefficient;
    property type_: IRobotUnitEditionType read Get_type_;
  end;

// *********************************************************************//
// DispIntf:  IRobotUnitEditionDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {14969280-09D5-4E20-A1BB-949AA7357A07}
// *********************************************************************//
  IRobotUnitEditionDataDisp = dispinterface
    ['{14969280-09D5-4E20-A1BB-949AA7357A07}']
    property Unit_: WideString dispid 1610743808;
    property Coefficient: Double dispid 1610743810;
    property type_: IRobotUnitEditionType readonly dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotUnitData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DFDD1BFD-7251-4D3A-90E1-78B54C067B83}
// *********************************************************************//
  IRobotUnitData = interface(IDispatch)
    ['{DFDD1BFD-7251-4D3A-90E1-78B54C067B83}']
    function Get_Precision: Integer; safecall;
    procedure Set_Precision(ret: Integer); safecall;
    function Get_E: WordBool; safecall;
    procedure Set_E(ret: WordBool); safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_type_: IRobotUnitType; safecall;
    property Precision: Integer read Get_Precision write Set_Precision;
    property E: WordBool read Get_E write Set_E;
    property Name: WideString read Get_Name write Set_Name;
    property type_: IRobotUnitType read Get_type_;
  end;

// *********************************************************************//
// DispIntf:  IRobotUnitDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DFDD1BFD-7251-4D3A-90E1-78B54C067B83}
// *********************************************************************//
  IRobotUnitDataDisp = dispinterface
    ['{DFDD1BFD-7251-4D3A-90E1-78B54C067B83}']
    property Precision: Integer dispid 1610743808;
    property E: WordBool dispid 1610743810;
    property Name: WideString dispid 1610743812;
    property type_: IRobotUnitType readonly dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotEurocodeFactors
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B7B03310-3D0C-4D3E-8C3E-755FF0129018}
// *********************************************************************//
  IRobotEurocodeFactors = interface(IDispatch)
    ['{B7B03310-3D0C-4D3E-8C3E-755FF0129018}']
    function Get_SteelDesign: IRobotEurocodeSteelDesignFactors; safecall;
    function Get_SteelConnections: IRobotEurocodeSteelConnectionFactors; safecall;
    property SteelDesign: IRobotEurocodeSteelDesignFactors read Get_SteelDesign;
    property SteelConnections: IRobotEurocodeSteelConnectionFactors read Get_SteelConnections;
  end;

// *********************************************************************//
// DispIntf:  IRobotEurocodeFactorsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B7B03310-3D0C-4D3E-8C3E-755FF0129018}
// *********************************************************************//
  IRobotEurocodeFactorsDisp = dispinterface
    ['{B7B03310-3D0C-4D3E-8C3E-755FF0129018}']
    property SteelDesign: IRobotEurocodeSteelDesignFactors readonly dispid 1610743808;
    property SteelConnections: IRobotEurocodeSteelConnectionFactors readonly dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotEurocodeSteelDesignFactors
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1A277BA2-9D81-4F52-8556-70FFBAB120A5}
// *********************************************************************//
  IRobotEurocodeSteelDesignFactors = interface(IDispatch)
    ['{1A277BA2-9D81-4F52-8556-70FFBAB120A5}']
    function Get_Gamma0: Double; safecall;
    procedure Set_Gamma0(ret: Double); safecall;
    function Get_Gamma1: Double; safecall;
    procedure Set_Gamma1(ret: Double); safecall;
    function Get_Gamma2: Double; safecall;
    procedure Set_Gamma2(ret: Double); safecall;
    function Get_GammaFire: Double; safecall;
    procedure Set_GammaFire(ret: Double); safecall;
    function LoadFromCodeNumber(_code_number: Integer): WordBool; safecall;
    function LoadFromCode(const _code_name: WideString): WordBool; safecall;
    property Gamma0: Double read Get_Gamma0 write Set_Gamma0;
    property Gamma1: Double read Get_Gamma1 write Set_Gamma1;
    property Gamma2: Double read Get_Gamma2 write Set_Gamma2;
    property GammaFire: Double read Get_GammaFire write Set_GammaFire;
  end;

// *********************************************************************//
// DispIntf:  IRobotEurocodeSteelDesignFactorsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1A277BA2-9D81-4F52-8556-70FFBAB120A5}
// *********************************************************************//
  IRobotEurocodeSteelDesignFactorsDisp = dispinterface
    ['{1A277BA2-9D81-4F52-8556-70FFBAB120A5}']
    property Gamma0: Double dispid 1610743808;
    property Gamma1: Double dispid 1610743810;
    property Gamma2: Double dispid 1610743812;
    property GammaFire: Double dispid 1610743814;
    function LoadFromCodeNumber(_code_number: Integer): WordBool; dispid 1610743816;
    function LoadFromCode(const _code_name: WideString): WordBool; dispid 1610743817;
  end;

// *********************************************************************//
// Interface: IRobotEurocodeSteelConnectionFactors
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E10264C8-79A1-452A-A586-587A081D4B80}
// *********************************************************************//
  IRobotEurocodeSteelConnectionFactors = interface(IDispatch)
    ['{E10264C8-79A1-452A-A586-587A081D4B80}']
    function Get_Gamma0: Double; safecall;
    procedure Set_Gamma0(ret: Double); safecall;
    function Get_Gamma1: Double; safecall;
    procedure Set_Gamma1(ret: Double); safecall;
    function Get_Gamma2: Double; safecall;
    procedure Set_Gamma2(ret: Double); safecall;
    function Get_Gamma3: Double; safecall;
    procedure Set_Gamma3(ret: Double); safecall;
    function Get_Gamma3Ser: Double; safecall;
    procedure Set_Gamma3Ser(ret: Double); safecall;
    function Get_Gamma4: Double; safecall;
    procedure Set_Gamma4(ret: Double); safecall;
    function Get_Gamma5: Double; safecall;
    procedure Set_Gamma5(ret: Double); safecall;
    function Get_Gamma6: Double; safecall;
    procedure Set_Gamma6(ret: Double); safecall;
    function Get_Gamma7: Double; safecall;
    procedure Set_Gamma7(ret: Double); safecall;
    function Get_GammaC: Double; safecall;
    procedure Set_GammaC(ret: Double); safecall;
    function LoadFromCodeNumber(_code_number: Integer): WordBool; safecall;
    function LoadFromCode(const _code_name: WideString): WordBool; safecall;
    property Gamma0: Double read Get_Gamma0 write Set_Gamma0;
    property Gamma1: Double read Get_Gamma1 write Set_Gamma1;
    property Gamma2: Double read Get_Gamma2 write Set_Gamma2;
    property Gamma3: Double read Get_Gamma3 write Set_Gamma3;
    property Gamma3Ser: Double read Get_Gamma3Ser write Set_Gamma3Ser;
    property Gamma4: Double read Get_Gamma4 write Set_Gamma4;
    property Gamma5: Double read Get_Gamma5 write Set_Gamma5;
    property Gamma6: Double read Get_Gamma6 write Set_Gamma6;
    property Gamma7: Double read Get_Gamma7 write Set_Gamma7;
    property GammaC: Double read Get_GammaC write Set_GammaC;
  end;

// *********************************************************************//
// DispIntf:  IRobotEurocodeSteelConnectionFactorsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E10264C8-79A1-452A-A586-587A081D4B80}
// *********************************************************************//
  IRobotEurocodeSteelConnectionFactorsDisp = dispinterface
    ['{E10264C8-79A1-452A-A586-587A081D4B80}']
    property Gamma0: Double dispid 1610743808;
    property Gamma1: Double dispid 1610743810;
    property Gamma2: Double dispid 1610743812;
    property Gamma3: Double dispid 1610743814;
    property Gamma3Ser: Double dispid 1610743816;
    property Gamma4: Double dispid 1610743818;
    property Gamma5: Double dispid 1610743820;
    property Gamma6: Double dispid 1610743822;
    property Gamma7: Double dispid 1610743824;
    property GammaC: Double dispid 1610743826;
    function LoadFromCodeNumber(_code_number: Integer): WordBool; dispid 1610743828;
    function LoadFromCode(const _code_name: WideString): WordBool; dispid 1610743829;
  end;

// *********************************************************************//
// Interface: IRobotComponentFactory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6DE0ABA2-D580-11D4-B89D-0050DA76755E}
// *********************************************************************//
  IRobotComponentFactory = interface(IDispatch)
    ['{6DE0ABA2-D580-11D4-B89D-0050DA76755E}']
    function Create(_cmpnt_type: IRobotComponentType): IDispatch; safecall;
    function CreateExt(const _extmdl_name: WideString; _cmpnt_type: Integer): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotComponentFactoryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6DE0ABA2-D580-11D4-B89D-0050DA76755E}
// *********************************************************************//
  IRobotComponentFactoryDisp = dispinterface
    ['{6DE0ABA2-D580-11D4-B89D-0050DA76755E}']
    function Create(_cmpnt_type: IRobotComponentType): IDispatch; dispid 1610743808;
    function CreateExt(const _extmdl_name: WideString; _cmpnt_type: Integer): IDispatch; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotCalcEngine
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {77106410-18E2-11D3-98CF-0080C86BE4DF}
// *********************************************************************//
  IRobotCalcEngine = interface(IDispatch)
    ['{77106410-18E2-11D3-98CF-0080C86BE4DF}']
    function Calculate: Integer; safecall;
    function Get_AutoGenerateModel: WordBool; safecall;
    procedure Set_AutoGenerateModel(ret: WordBool); safecall;
    function Get_AnalysisParams: IRobotStructureAnalysisParams; safecall;
    function Get_AutoFreezeResults: WordBool; safecall;
    procedure Set_AutoFreezeResults(ret: WordBool); safecall;
    function Get_SaveResultsInExternalFile: WordBool; safecall;
    procedure Set_SaveResultsInExternalFile(ret: WordBool); safecall;
    function Get_SeismicResultsSaveParams: IRobotSeismicResultsSaveParams; safecall;
    function Get_GenerationParams: IRobotModelGenerationParams; safecall;
    function Get_BucklingDeformation: IRobotBucklingDeformationParams; safecall;
    procedure GenerateModel; safecall;
    function Get_UseStatusWindow: WordBool; safecall;
    procedure Set_UseStatusWindow(ret: WordBool); safecall;
    function Get_StatusWindowParent: Integer; safecall;
    procedure Set_StatusWindowParent(ret: Integer); safecall;
    function CalculateEx(_calc_mode: IRobotCalculationMode): IRobotCalculationStatus; safecall;
    procedure StopCalculation; safecall;
    function Get_DAM: IRobotDAMCalcModule; safecall;
    property AutoGenerateModel: WordBool read Get_AutoGenerateModel write Set_AutoGenerateModel;
    property AnalysisParams: IRobotStructureAnalysisParams read Get_AnalysisParams;
    property AutoFreezeResults: WordBool read Get_AutoFreezeResults write Set_AutoFreezeResults;
    property SaveResultsInExternalFile: WordBool read Get_SaveResultsInExternalFile write Set_SaveResultsInExternalFile;
    property SeismicResultsSaveParams: IRobotSeismicResultsSaveParams read Get_SeismicResultsSaveParams;
    property GenerationParams: IRobotModelGenerationParams read Get_GenerationParams;
    property BucklingDeformation: IRobotBucklingDeformationParams read Get_BucklingDeformation;
    property UseStatusWindow: WordBool read Get_UseStatusWindow write Set_UseStatusWindow;
    property StatusWindowParent: Integer read Get_StatusWindowParent write Set_StatusWindowParent;
    property DAM: IRobotDAMCalcModule read Get_DAM;
  end;

// *********************************************************************//
// DispIntf:  IRobotCalcEngineDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {77106410-18E2-11D3-98CF-0080C86BE4DF}
// *********************************************************************//
  IRobotCalcEngineDisp = dispinterface
    ['{77106410-18E2-11D3-98CF-0080C86BE4DF}']
    function Calculate: Integer; dispid 1610743808;
    property AutoGenerateModel: WordBool dispid 1610743809;
    property AnalysisParams: IRobotStructureAnalysisParams readonly dispid 1610743811;
    property AutoFreezeResults: WordBool dispid 1610743812;
    property SaveResultsInExternalFile: WordBool dispid 1610743814;
    property SeismicResultsSaveParams: IRobotSeismicResultsSaveParams readonly dispid 1610743816;
    property GenerationParams: IRobotModelGenerationParams readonly dispid 1610743817;
    property BucklingDeformation: IRobotBucklingDeformationParams readonly dispid 1610743818;
    procedure GenerateModel; dispid 1610743819;
    property UseStatusWindow: WordBool dispid 1610743820;
    property StatusWindowParent: Integer dispid 1610743822;
    function CalculateEx(_calc_mode: IRobotCalculationMode): IRobotCalculationStatus; dispid 1610743824;
    procedure StopCalculation; dispid 1610743825;
    property DAM: IRobotDAMCalcModule readonly dispid 1610743826;
  end;

// *********************************************************************//
// Interface: IRobotStructureAnalysisParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A82C60B5-39B2-4A58-A218-338B5F969A6A}
// *********************************************************************//
  IRobotStructureAnalysisParams = interface(IDispatch)
    ['{A82C60B5-39B2-4A58-A218-338B5F969A6A}']
    function Get_EquationSolvingMethod: IRobotEquationSolvingMethod; safecall;
    procedure Set_EquationSolvingMethod(ret: IRobotEquationSolvingMethod); safecall;
    function Get_AutoVerification: IRobotStructureAutoVerificationType; safecall;
    procedure Set_AutoVerification(ret: IRobotStructureAutoVerificationType); safecall;
    function Get_IgnoreWarnings: WordBool; safecall;
    procedure Set_IgnoreWarnings(ret: WordBool); safecall;
    function Get_DSCAlgorithm: WordBool; safecall;
    procedure Set_DSCAlgorithm(ret: WordBool); safecall;
    function Get_FictitiousRigidityCoeff: Double; safecall;
    procedure Set_FictitiousRigidityCoeff(ret: Double); safecall;
    function Get_SparseMParams: IRobotSparseMSolverParams; safecall;
    function Get_IterativeParams: IRobotIterativeSolverParams; safecall;
    function Get_ModalParticipationCoeff: IRobotStructureAnalysisModalParticipationCoeff; safecall;
    procedure Set_ModalParticipationCoeff(ret: IRobotStructureAnalysisModalParticipationCoeff); safecall;
    function Get_AutoBarMerging: WordBool; safecall;
    procedure Set_AutoBarMerging(ret: WordBool); safecall;
    function Get_RLINKElements: WordBool; safecall;
    procedure Set_RLINKElements(ret: WordBool); safecall;
    property EquationSolvingMethod: IRobotEquationSolvingMethod read Get_EquationSolvingMethod write Set_EquationSolvingMethod;
    property AutoVerification: IRobotStructureAutoVerificationType read Get_AutoVerification write Set_AutoVerification;
    property IgnoreWarnings: WordBool read Get_IgnoreWarnings write Set_IgnoreWarnings;
    property DSCAlgorithm: WordBool read Get_DSCAlgorithm write Set_DSCAlgorithm;
    property FictitiousRigidityCoeff: Double read Get_FictitiousRigidityCoeff write Set_FictitiousRigidityCoeff;
    property SparseMParams: IRobotSparseMSolverParams read Get_SparseMParams;
    property IterativeParams: IRobotIterativeSolverParams read Get_IterativeParams;
    property ModalParticipationCoeff: IRobotStructureAnalysisModalParticipationCoeff read Get_ModalParticipationCoeff write Set_ModalParticipationCoeff;
    property AutoBarMerging: WordBool read Get_AutoBarMerging write Set_AutoBarMerging;
    property RLINKElements: WordBool read Get_RLINKElements write Set_RLINKElements;
  end;

// *********************************************************************//
// DispIntf:  IRobotStructureAnalysisParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A82C60B5-39B2-4A58-A218-338B5F969A6A}
// *********************************************************************//
  IRobotStructureAnalysisParamsDisp = dispinterface
    ['{A82C60B5-39B2-4A58-A218-338B5F969A6A}']
    property EquationSolvingMethod: IRobotEquationSolvingMethod dispid 1610743808;
    property AutoVerification: IRobotStructureAutoVerificationType dispid 1610743810;
    property IgnoreWarnings: WordBool dispid 1610743812;
    property DSCAlgorithm: WordBool dispid 1610743814;
    property FictitiousRigidityCoeff: Double dispid 1610743816;
    property SparseMParams: IRobotSparseMSolverParams readonly dispid 1610743818;
    property IterativeParams: IRobotIterativeSolverParams readonly dispid 1610743819;
    property ModalParticipationCoeff: IRobotStructureAnalysisModalParticipationCoeff dispid 1610743820;
    property AutoBarMerging: WordBool dispid 1610743822;
    property RLINKElements: WordBool dispid 1610743824;
  end;

// *********************************************************************//
// Interface: IRobotSparseMSolverParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C8B6FBFC-0C9C-4CD8-8681-9CDECBE6651F}
// *********************************************************************//
  IRobotSparseMSolverParams = interface(IDispatch)
    ['{C8B6FBFC-0C9C-4CD8-8681-9CDECBE6651F}']
    function Get_Method: IRobotSparseMSolverMethod; safecall;
    procedure Set_Method(ret: IRobotSparseMSolverMethod); safecall;
    property Method: IRobotSparseMSolverMethod read Get_Method write Set_Method;
  end;

// *********************************************************************//
// DispIntf:  IRobotSparseMSolverParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C8B6FBFC-0C9C-4CD8-8681-9CDECBE6651F}
// *********************************************************************//
  IRobotSparseMSolverParamsDisp = dispinterface
    ['{C8B6FBFC-0C9C-4CD8-8681-9CDECBE6651F}']
    property Method: IRobotSparseMSolverMethod dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRobotIterativeSolverParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DF2BA0FA-180B-42AF-BD49-E96E7944CBBB}
// *********************************************************************//
  IRobotIterativeSolverParams = interface(IDispatch)
    ['{DF2BA0FA-180B-42AF-BD49-E96E7944CBBB}']
    function Get_PrediconditionerType: IRobotIterativePrediconditionerType; safecall;
    procedure Set_PrediconditionerType(ret: IRobotIterativePrediconditionerType); safecall;
    function Get_Multilevel: WordBool; safecall;
    procedure Set_Multilevel(ret: WordBool); safecall;
    function Get_AggregationLevelsCount: Integer; safecall;
    procedure Set_AggregationLevelsCount(ret: Integer); safecall;
    function Get_InternalIterationsCount: Integer; safecall;
    procedure Set_InternalIterationsCount(ret: Integer); safecall;
    function Get_AnalyseDiagonale: WordBool; safecall;
    procedure Set_AnalyseDiagonale(ret: WordBool); safecall;
    function Get_CalcKMatrix: WordBool; safecall;
    procedure Set_CalcKMatrix(ret: WordBool); safecall;
    function Get_Method: IRobotIterativeSolverMethod; safecall;
    procedure Set_Method(ret: IRobotIterativeSolverMethod); safecall;
    function Get_MemoryUsage: IRobotIterativeSolverMemoryUsage; safecall;
    procedure Set_MemoryUsage(ret: IRobotIterativeSolverMemoryUsage); safecall;
    function Get_Tolerance: Double; safecall;
    procedure Set_Tolerance(ret: Double); safecall;
    property PrediconditionerType: IRobotIterativePrediconditionerType read Get_PrediconditionerType write Set_PrediconditionerType;
    property Multilevel: WordBool read Get_Multilevel write Set_Multilevel;
    property AggregationLevelsCount: Integer read Get_AggregationLevelsCount write Set_AggregationLevelsCount;
    property InternalIterationsCount: Integer read Get_InternalIterationsCount write Set_InternalIterationsCount;
    property AnalyseDiagonale: WordBool read Get_AnalyseDiagonale write Set_AnalyseDiagonale;
    property CalcKMatrix: WordBool read Get_CalcKMatrix write Set_CalcKMatrix;
    property Method: IRobotIterativeSolverMethod read Get_Method write Set_Method;
    property MemoryUsage: IRobotIterativeSolverMemoryUsage read Get_MemoryUsage write Set_MemoryUsage;
    property Tolerance: Double read Get_Tolerance write Set_Tolerance;
  end;

// *********************************************************************//
// DispIntf:  IRobotIterativeSolverParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DF2BA0FA-180B-42AF-BD49-E96E7944CBBB}
// *********************************************************************//
  IRobotIterativeSolverParamsDisp = dispinterface
    ['{DF2BA0FA-180B-42AF-BD49-E96E7944CBBB}']
    property PrediconditionerType: IRobotIterativePrediconditionerType dispid 1610743808;
    property Multilevel: WordBool dispid 1610743810;
    property AggregationLevelsCount: Integer dispid 1610743812;
    property InternalIterationsCount: Integer dispid 1610743814;
    property AnalyseDiagonale: WordBool dispid 1610743816;
    property CalcKMatrix: WordBool dispid 1610743818;
    property Method: IRobotIterativeSolverMethod dispid 1610743820;
    property MemoryUsage: IRobotIterativeSolverMemoryUsage dispid 1610743822;
    property Tolerance: Double dispid 1610743824;
  end;

// *********************************************************************//
// Interface: IRobotSeismicResultsSaveParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7D0F9ABE-3295-4E0E-B8C4-0F7334E12C8A}
// *********************************************************************//
  IRobotSeismicResultsSaveParams = interface(IDispatch)
    ['{7D0F9ABE-3295-4E0E-B8C4-0F7334E12C8A}']
    function Get_Save: WordBool; safecall;
    procedure Set_Save(ret: WordBool); safecall;
    function Get_Reactions: WordBool; safecall;
    procedure Set_Reactions(ret: WordBool); safecall;
    function Get_Displacements: WordBool; safecall;
    procedure Set_Displacements(ret: WordBool); safecall;
    function Get_Forces: WordBool; safecall;
    procedure Set_Forces(ret: WordBool); safecall;
    function Get_Stresses: WordBool; safecall;
    procedure Set_Stresses(ret: WordBool); safecall;
    function Get_NMQ: WordBool; safecall;
    procedure Set_NMQ(ret: WordBool); safecall;
    function Get_Reduced: WordBool; safecall;
    procedure Set_Reduced(ret: WordBool); safecall;
    function Get_PointNumber: Integer; safecall;
    procedure Set_PointNumber(ret: Integer); safecall;
    function Get_PanelsDir: IRobotSeismicResultsPanelDirection; safecall;
    procedure Set_PanelsDir(ret: IRobotSeismicResultsPanelDirection); safecall;
    function Get_OnlyQuadraticCombs: WordBool; safecall;
    procedure Set_OnlyQuadraticCombs(ret: WordBool); safecall;
    function Get_LocalDisplacements: WordBool; safecall;
    procedure Set_LocalDisplacements(ret: WordBool); safecall;
    property Save: WordBool read Get_Save write Set_Save;
    property Reactions: WordBool read Get_Reactions write Set_Reactions;
    property Displacements: WordBool read Get_Displacements write Set_Displacements;
    property Forces: WordBool read Get_Forces write Set_Forces;
    property Stresses: WordBool read Get_Stresses write Set_Stresses;
    property NMQ: WordBool read Get_NMQ write Set_NMQ;
    property Reduced: WordBool read Get_Reduced write Set_Reduced;
    property PointNumber: Integer read Get_PointNumber write Set_PointNumber;
    property PanelsDir: IRobotSeismicResultsPanelDirection read Get_PanelsDir write Set_PanelsDir;
    property OnlyQuadraticCombs: WordBool read Get_OnlyQuadraticCombs write Set_OnlyQuadraticCombs;
    property LocalDisplacements: WordBool read Get_LocalDisplacements write Set_LocalDisplacements;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicResultsSaveParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7D0F9ABE-3295-4E0E-B8C4-0F7334E12C8A}
// *********************************************************************//
  IRobotSeismicResultsSaveParamsDisp = dispinterface
    ['{7D0F9ABE-3295-4E0E-B8C4-0F7334E12C8A}']
    property Save: WordBool dispid 1610743808;
    property Reactions: WordBool dispid 1610743810;
    property Displacements: WordBool dispid 1610743812;
    property Forces: WordBool dispid 1610743814;
    property Stresses: WordBool dispid 1610743816;
    property NMQ: WordBool dispid 1610743818;
    property Reduced: WordBool dispid 1610743820;
    property PointNumber: Integer dispid 1610743822;
    property PanelsDir: IRobotSeismicResultsPanelDirection dispid 1610743824;
    property OnlyQuadraticCombs: WordBool dispid 1610743826;
    property LocalDisplacements: WordBool dispid 1610743828;
  end;

// *********************************************************************//
// Interface: IRobotModelGenerationParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {74F902A2-0FB5-48B9-9515-34869995AD1A}
// *********************************************************************//
  IRobotModelGenerationParams = interface(IDispatch)
    ['{74F902A2-0FB5-48B9-9515-34869995AD1A}']
    function Get_NeglectedBars: WideString; safecall;
    procedure Set_NeglectedBars(const ret: WideString); safecall;
    function Get_NeglectedGeoObjects: WideString; safecall;
    procedure Set_NeglectedGeoObjects(const ret: WideString); safecall;
    function Get_AssemblingCase: Integer; safecall;
    procedure Set_AssemblingCase(ret: Integer); safecall;
    function Get_ToleranceAutomatic: WordBool; safecall;
    procedure Set_ToleranceAutomatic(ret: WordBool); safecall;
    function Get_ToleranceValue: Double; safecall;
    procedure Set_ToleranceValue(ret: Double); safecall;
    function Get_GenerateNodes_DiagonalBars: WordBool; safecall;
    procedure Set_GenerateNodes_DiagonalBars(ret: WordBool); safecall;
    function Get_GenerateNodes_VertHorizBars: WordBool; safecall;
    procedure Set_GenerateNodes_VertHorizBars(ret: WordBool); safecall;
    function Get_GenerateNodes_BarsAndFiniteElems: WordBool; safecall;
    procedure Set_GenerateNodes_BarsAndFiniteElems(ret: WordBool); safecall;
    function Get_MaxElementLength: Double; safecall;
    procedure Set_MaxElementLength(ret: Double); safecall;
    property NeglectedBars: WideString read Get_NeglectedBars write Set_NeglectedBars;
    property NeglectedGeoObjects: WideString read Get_NeglectedGeoObjects write Set_NeglectedGeoObjects;
    property AssemblingCase: Integer read Get_AssemblingCase write Set_AssemblingCase;
    property ToleranceAutomatic: WordBool read Get_ToleranceAutomatic write Set_ToleranceAutomatic;
    property ToleranceValue: Double read Get_ToleranceValue write Set_ToleranceValue;
    property GenerateNodes_DiagonalBars: WordBool read Get_GenerateNodes_DiagonalBars write Set_GenerateNodes_DiagonalBars;
    property GenerateNodes_VertHorizBars: WordBool read Get_GenerateNodes_VertHorizBars write Set_GenerateNodes_VertHorizBars;
    property GenerateNodes_BarsAndFiniteElems: WordBool read Get_GenerateNodes_BarsAndFiniteElems write Set_GenerateNodes_BarsAndFiniteElems;
    property MaxElementLength: Double read Get_MaxElementLength write Set_MaxElementLength;
  end;

// *********************************************************************//
// DispIntf:  IRobotModelGenerationParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {74F902A2-0FB5-48B9-9515-34869995AD1A}
// *********************************************************************//
  IRobotModelGenerationParamsDisp = dispinterface
    ['{74F902A2-0FB5-48B9-9515-34869995AD1A}']
    property NeglectedBars: WideString dispid 1610743808;
    property NeglectedGeoObjects: WideString dispid 1610743810;
    property AssemblingCase: Integer dispid 1610743812;
    property ToleranceAutomatic: WordBool dispid 1610743814;
    property ToleranceValue: Double dispid 1610743816;
    property GenerateNodes_DiagonalBars: WordBool dispid 1610743818;
    property GenerateNodes_VertHorizBars: WordBool dispid 1610743820;
    property GenerateNodes_BarsAndFiniteElems: WordBool dispid 1610743822;
    property MaxElementLength: Double dispid 1610743824;
  end;

// *********************************************************************//
// Interface: IRobotBucklingDeformationParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ABE79E4F-3442-44DF-AA7F-2948A6CCECC7}
// *********************************************************************//
  IRobotBucklingDeformationParams = interface(IDispatch)
    ['{ABE79E4F-3442-44DF-AA7F-2948A6CCECC7}']
    function Get_CaseNumber: Integer; safecall;
    procedure Set_CaseNumber(ret: Integer); safecall;
    function Get_MaxDisplacement: Double; safecall;
    procedure Set_MaxDisplacement(ret: Double); safecall;
    function Get_OmitCaseForDeformations: WordBool; safecall;
    procedure Set_OmitCaseForDeformations(ret: WordBool); safecall;
    procedure SetModeCoeff(_mode: Integer; _coeff: Double); safecall;
    function GetModeCoeff(_mode: Integer): Double; safecall;
    property CaseNumber: Integer read Get_CaseNumber write Set_CaseNumber;
    property MaxDisplacement: Double read Get_MaxDisplacement write Set_MaxDisplacement;
    property OmitCaseForDeformations: WordBool read Get_OmitCaseForDeformations write Set_OmitCaseForDeformations;
  end;

// *********************************************************************//
// DispIntf:  IRobotBucklingDeformationParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ABE79E4F-3442-44DF-AA7F-2948A6CCECC7}
// *********************************************************************//
  IRobotBucklingDeformationParamsDisp = dispinterface
    ['{ABE79E4F-3442-44DF-AA7F-2948A6CCECC7}']
    property CaseNumber: Integer dispid 1610743808;
    property MaxDisplacement: Double dispid 1610743810;
    property OmitCaseForDeformations: WordBool dispid 1610743812;
    procedure SetModeCoeff(_mode: Integer; _coeff: Double); dispid 1610743814;
    function GetModeCoeff(_mode: Integer): Double; dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotDAMCalcModule
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C25E930A-3C2C-4BB3-9B56-0FCCC21BF171}
// *********************************************************************//
  IRobotDAMCalcModule = interface(IDispatch)
    ['{C25E930A-3C2C-4BB3-9B56-0FCCC21BF171}']
    function Get_IsActive: WordBool; safecall;
    procedure Set_IsActive(ret: WordBool); safecall;
    function Get_Params: IRobotDAMParams; safecall;
    function Run: WordBool; safecall;
    procedure DeleteModel; safecall;
    property IsActive: WordBool read Get_IsActive write Set_IsActive;
    property Params: IRobotDAMParams read Get_Params;
  end;

// *********************************************************************//
// DispIntf:  IRobotDAMCalcModuleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C25E930A-3C2C-4BB3-9B56-0FCCC21BF171}
// *********************************************************************//
  IRobotDAMCalcModuleDisp = dispinterface
    ['{C25E930A-3C2C-4BB3-9B56-0FCCC21BF171}']
    property IsActive: WordBool dispid 1610743808;
    property Params: IRobotDAMParams readonly dispid 1610743810;
    function Run: WordBool; dispid 1610743811;
    procedure DeleteModel; dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotDAMParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB6AE25D-6107-4A0A-9401-14DAA16CC356}
// *********************************************************************//
  IRobotDAMParams = interface(IDispatch)
    ['{CB6AE25D-6107-4A0A-9401-14DAA16CC356}']
    function Get_Analysis: IRobotDAMAnalysisType; safecall;
    procedure Set_Analysis(ret: IRobotDAMAnalysisType); safecall;
    function Get_NotionalLoads: IRobotDAMNotionalLoads; safecall;
    function Get_ReducedStiffness: IRobotDAMReducedStiffness; safecall;
    function GetNLPDParams: IRobotNonlinearAnalysisParams; safecall;
    procedure SetNLPDParams(const ret: IRobotNonlinearAnalysisParams); safecall;
    procedure Update; safecall;
    property Analysis: IRobotDAMAnalysisType read Get_Analysis write Set_Analysis;
    property NotionalLoads: IRobotDAMNotionalLoads read Get_NotionalLoads;
    property ReducedStiffness: IRobotDAMReducedStiffness read Get_ReducedStiffness;
  end;

// *********************************************************************//
// DispIntf:  IRobotDAMParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB6AE25D-6107-4A0A-9401-14DAA16CC356}
// *********************************************************************//
  IRobotDAMParamsDisp = dispinterface
    ['{CB6AE25D-6107-4A0A-9401-14DAA16CC356}']
    property Analysis: IRobotDAMAnalysisType dispid 1610743808;
    property NotionalLoads: IRobotDAMNotionalLoads readonly dispid 1610743810;
    property ReducedStiffness: IRobotDAMReducedStiffness readonly dispid 1610743811;
    function GetNLPDParams: IRobotNonlinearAnalysisParams; dispid 1610743812;
    procedure SetNLPDParams(const ret: IRobotNonlinearAnalysisParams); dispid 1610743813;
    procedure Update; dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotDAMNotionalLoads
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C53A76B8-5FB7-44E1-A390-E89D1772B642}
// *********************************************************************//
  IRobotDAMNotionalLoads = interface(IDispatch)
    ['{C53A76B8-5FB7-44E1-A390-E89D1772B642}']
    function Get_Coefficient: Double; safecall;
    procedure Set_Coefficient(ret: Double); safecall;
    function Get_ActiveXP: WordBool; safecall;
    procedure Set_ActiveXP(ret: WordBool); safecall;
    function Get_ActiveXN: WordBool; safecall;
    procedure Set_ActiveXN(ret: WordBool); safecall;
    function Get_ActiveYP: WordBool; safecall;
    procedure Set_ActiveYP(ret: WordBool); safecall;
    function Get_ActiveYN: WordBool; safecall;
    procedure Set_ActiveYN(ret: WordBool); safecall;
    function Get_GravityLoadCombEnabled: WordBool; safecall;
    procedure Set_GravityLoadCombEnabled(ret: WordBool); safecall;
    function Get_LateralLoadCombEnabled: WordBool; safecall;
    procedure Set_LateralLoadCombEnabled(ret: WordBool); safecall;
    function Get_LateralLoadCombType: IRobotDAMLateralLoadCombType; safecall;
    procedure Set_LateralLoadCombType(ret: IRobotDAMLateralLoadCombType); safecall;
    property Coefficient: Double read Get_Coefficient write Set_Coefficient;
    property ActiveXP: WordBool read Get_ActiveXP write Set_ActiveXP;
    property ActiveXN: WordBool read Get_ActiveXN write Set_ActiveXN;
    property ActiveYP: WordBool read Get_ActiveYP write Set_ActiveYP;
    property ActiveYN: WordBool read Get_ActiveYN write Set_ActiveYN;
    property GravityLoadCombEnabled: WordBool read Get_GravityLoadCombEnabled write Set_GravityLoadCombEnabled;
    property LateralLoadCombEnabled: WordBool read Get_LateralLoadCombEnabled write Set_LateralLoadCombEnabled;
    property LateralLoadCombType: IRobotDAMLateralLoadCombType read Get_LateralLoadCombType write Set_LateralLoadCombType;
  end;

// *********************************************************************//
// DispIntf:  IRobotDAMNotionalLoadsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C53A76B8-5FB7-44E1-A390-E89D1772B642}
// *********************************************************************//
  IRobotDAMNotionalLoadsDisp = dispinterface
    ['{C53A76B8-5FB7-44E1-A390-E89D1772B642}']
    property Coefficient: Double dispid 1610743808;
    property ActiveXP: WordBool dispid 1610743810;
    property ActiveXN: WordBool dispid 1610743812;
    property ActiveYP: WordBool dispid 1610743814;
    property ActiveYN: WordBool dispid 1610743816;
    property GravityLoadCombEnabled: WordBool dispid 1610743818;
    property LateralLoadCombEnabled: WordBool dispid 1610743820;
    property LateralLoadCombType: IRobotDAMLateralLoadCombType dispid 1610743822;
  end;

// *********************************************************************//
// Interface: IRobotDAMReducedStiffness
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DB1421C6-B7A2-4D8C-94CA-E09A66F44F23}
// *********************************************************************//
  IRobotDAMReducedStiffness = interface(IDispatch)
    ['{DB1421C6-B7A2-4D8C-94CA-E09A66F44F23}']
    function Get_RCColumnsAndWallsValue: Double; safecall;
    procedure Set_RCColumnsAndWallsValue(ret: Double); safecall;
    function Get_RCBeamsValue: Double; safecall;
    procedure Set_RCBeamsValue(ret: Double); safecall;
    function Get_RCSlabsValue: Double; safecall;
    procedure Set_RCSlabsValue(ret: Double); safecall;
    function Get_SteelMembersValue: Double; safecall;
    procedure Set_SteelMembersValue(ret: Double); safecall;
    function Get_SteelMembersTauBValue: Double; safecall;
    procedure Set_SteelMembersTauBValue(ret: Double); safecall;
    function Get_SteelMembersReductionType: IRobotDAMSteelMembersReductionType; safecall;
    procedure Set_SteelMembersReductionType(ret: IRobotDAMSteelMembersReductionType); safecall;
    property RCColumnsAndWallsValue: Double read Get_RCColumnsAndWallsValue write Set_RCColumnsAndWallsValue;
    property RCBeamsValue: Double read Get_RCBeamsValue write Set_RCBeamsValue;
    property RCSlabsValue: Double read Get_RCSlabsValue write Set_RCSlabsValue;
    property SteelMembersValue: Double read Get_SteelMembersValue write Set_SteelMembersValue;
    property SteelMembersTauBValue: Double read Get_SteelMembersTauBValue write Set_SteelMembersTauBValue;
    property SteelMembersReductionType: IRobotDAMSteelMembersReductionType read Get_SteelMembersReductionType write Set_SteelMembersReductionType;
  end;

// *********************************************************************//
// DispIntf:  IRobotDAMReducedStiffnessDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DB1421C6-B7A2-4D8C-94CA-E09A66F44F23}
// *********************************************************************//
  IRobotDAMReducedStiffnessDisp = dispinterface
    ['{DB1421C6-B7A2-4D8C-94CA-E09A66F44F23}']
    property RCColumnsAndWallsValue: Double dispid 1610743808;
    property RCBeamsValue: Double dispid 1610743810;
    property RCSlabsValue: Double dispid 1610743812;
    property SteelMembersValue: Double dispid 1610743814;
    property SteelMembersTauBValue: Double dispid 1610743816;
    property SteelMembersReductionType: IRobotDAMSteelMembersReductionType dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRobotAuthenticateService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0798A808-9209-483A-99C8-D59A36A861A1}
// *********************************************************************//
  IRobotAuthenticateService = interface(IDispatch)
    ['{0798A808-9209-483A-99C8-D59A36A861A1}']
    procedure Hello(const client_name: WideString; out _client_id: Integer; out _key_idx: Integer; 
                    out _challenge: WideString); safecall;
    procedure OpenSession(_client_id: Integer; const _passwd: WideString); safecall;
    procedure CloseSession(_client_id: Integer); safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotAuthenticateServiceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0798A808-9209-483A-99C8-D59A36A861A1}
// *********************************************************************//
  IRobotAuthenticateServiceDisp = dispinterface
    ['{0798A808-9209-483A-99C8-D59A36A861A1}']
    procedure Hello(const client_name: WideString; out _client_id: Integer; out _key_idx: Integer; 
                    out _challenge: WideString); dispid 1610743808;
    procedure OpenSession(_client_id: Integer; const _passwd: WideString); dispid 1610743809;
    procedure CloseSession(_client_id: Integer); dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRConcrCalcEngine
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E04BA49B-B01E-48EE-8D50-1C115042F4C8}
// *********************************************************************//
  IRConcrCalcEngine = interface(IDispatch)
    ['{E04BA49B-B01E-48EE-8D50-1C115042F4C8}']
    function Get_SlabRequiredReinf: IRConcrSlabRequiredReinfEngine; safecall;
    function Get_MemberRequiredReinf: IRConcrMemberRequiredReinfEngine; safecall;
    property SlabRequiredReinf: IRConcrSlabRequiredReinfEngine read Get_SlabRequiredReinf;
    property MemberRequiredReinf: IRConcrMemberRequiredReinfEngine read Get_MemberRequiredReinf;
  end;

// *********************************************************************//
// DispIntf:  IRConcrCalcEngineDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E04BA49B-B01E-48EE-8D50-1C115042F4C8}
// *********************************************************************//
  IRConcrCalcEngineDisp = dispinterface
    ['{E04BA49B-B01E-48EE-8D50-1C115042F4C8}']
    property SlabRequiredReinf: IRConcrSlabRequiredReinfEngine readonly dispid 1610743808;
    property MemberRequiredReinf: IRConcrMemberRequiredReinfEngine readonly dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRConcrSlabRequiredReinfEngine
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {55FD1418-7A72-4BDA-B630-D568A0643BCB}
// *********************************************************************//
  IRConcrSlabRequiredReinfEngine = interface(IDispatch)
    ['{55FD1418-7A72-4BDA-B630-D568A0643BCB}']
    function Get_Params: IRConcrSlabRequiredReinfCalcParams; safecall;
    function Calculate: WordBool; safecall;
    function GetCalculatedPanels: IRobotSelection; safecall;
    property Params: IRConcrSlabRequiredReinfCalcParams read Get_Params;
  end;

// *********************************************************************//
// DispIntf:  IRConcrSlabRequiredReinfEngineDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {55FD1418-7A72-4BDA-B630-D568A0643BCB}
// *********************************************************************//
  IRConcrSlabRequiredReinfEngineDisp = dispinterface
    ['{55FD1418-7A72-4BDA-B630-D568A0643BCB}']
    property Params: IRConcrSlabRequiredReinfCalcParams readonly dispid 1610743808;
    function Calculate: WordBool; dispid 1610743809;
    function GetCalculatedPanels: IRobotSelection; dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRConcrSlabRequiredReinfCalcParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8179B736-D35A-4AB5-81A6-6F8B8192987C}
// *********************************************************************//
  IRConcrSlabRequiredReinfCalcParams = interface(IDispatch)
    ['{8179B736-D35A-4AB5-81A6-6F8B8192987C}']
    function Get_Method: IRobotReinforceCalcMethods; safecall;
    procedure Set_Method(ret: IRobotReinforceCalcMethods); safecall;
    function Get_GloballyAvgDesginForces: WordBool; safecall;
    procedure Set_GloballyAvgDesginForces(ret: WordBool); safecall;
    function Get_ForcesReduction: WordBool; safecall;
    procedure Set_ForcesReduction(ret: WordBool); safecall;
    function Get_DisplayErrors: WordBool; safecall;
    procedure Set_DisplayErrors(ret: WordBool); safecall;
    function Get_Panels: IRobotSelection; safecall;
    function Get_CasesULS: IRobotSelection; safecall;
    function Get_CasesSLS: IRobotSelection; safecall;
    function Get_CasesACC: IRobotSelection; safecall;
    property Method: IRobotReinforceCalcMethods read Get_Method write Set_Method;
    property GloballyAvgDesginForces: WordBool read Get_GloballyAvgDesginForces write Set_GloballyAvgDesginForces;
    property ForcesReduction: WordBool read Get_ForcesReduction write Set_ForcesReduction;
    property DisplayErrors: WordBool read Get_DisplayErrors write Set_DisplayErrors;
    property Panels: IRobotSelection read Get_Panels;
    property CasesULS: IRobotSelection read Get_CasesULS;
    property CasesSLS: IRobotSelection read Get_CasesSLS;
    property CasesACC: IRobotSelection read Get_CasesACC;
  end;

// *********************************************************************//
// DispIntf:  IRConcrSlabRequiredReinfCalcParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8179B736-D35A-4AB5-81A6-6F8B8192987C}
// *********************************************************************//
  IRConcrSlabRequiredReinfCalcParamsDisp = dispinterface
    ['{8179B736-D35A-4AB5-81A6-6F8B8192987C}']
    property Method: IRobotReinforceCalcMethods dispid 1610743808;
    property GloballyAvgDesginForces: WordBool dispid 1610743810;
    property ForcesReduction: WordBool dispid 1610743812;
    property DisplayErrors: WordBool dispid 1610743814;
    property Panels: IRobotSelection readonly dispid 1610743816;
    property CasesULS: IRobotSelection readonly dispid 1610743817;
    property CasesSLS: IRobotSelection readonly dispid 1610743818;
    property CasesACC: IRobotSelection readonly dispid 1610743819;
  end;

// *********************************************************************//
// Interface: IRConcrMemberRequiredReinfEngine
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7ED2767F-EEC8-4880-91A5-05E8CBE19E1C}
// *********************************************************************//
  IRConcrMemberRequiredReinfEngine = interface(IDispatch)
    ['{7ED2767F-EEC8-4880-91A5-05E8CBE19E1C}']
    function Get_Params: IRConcrMemberRequiredReinfCalcParams; safecall;
    function Calculate: WordBool; safecall;
    function GetCalculatedMembers: IRobotSelection; safecall;
    property Params: IRConcrMemberRequiredReinfCalcParams read Get_Params;
  end;

// *********************************************************************//
// DispIntf:  IRConcrMemberRequiredReinfEngineDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7ED2767F-EEC8-4880-91A5-05E8CBE19E1C}
// *********************************************************************//
  IRConcrMemberRequiredReinfEngineDisp = dispinterface
    ['{7ED2767F-EEC8-4880-91A5-05E8CBE19E1C}']
    property Params: IRConcrMemberRequiredReinfCalcParams readonly dispid 1610743808;
    function Calculate: WordBool; dispid 1610743809;
    function GetCalculatedMembers: IRobotSelection; dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRConcrMemberRequiredReinfCalcParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D9372778-C862-40CC-94EA-8FE62828143A}
// *********************************************************************//
  IRConcrMemberRequiredReinfCalcParams = interface(IDispatch)
    ['{D9372778-C862-40CC-94EA-8FE62828143A}']
    function Get_Members: IRobotSelection; safecall;
    function Get_CasesULS: IRobotSelection; safecall;
    function Get_CasesSLS: IRobotSelection; safecall;
    function Get_CasesALS: IRobotSelection; safecall;
    function Get_BeamPointsType: IRConcrBeamCalcPointDefinitionType; safecall;
    procedure Set_BeamPointsType(ret: IRConcrBeamCalcPointDefinitionType); safecall;
    function Get_BeamPointsValue: Double; safecall;
    procedure Set_BeamPointsValue(ret: Double); safecall;
    function Get_CombULS: WordBool; safecall;
    procedure Set_CombULS(ret: WordBool); safecall;
    function Get_CombSLS: WordBool; safecall;
    procedure Set_CombSLS(ret: WordBool); safecall;
    function Get_CombALS: WordBool; safecall;
    procedure Set_CombALS(ret: WordBool); safecall;
    property Members: IRobotSelection read Get_Members;
    property CasesULS: IRobotSelection read Get_CasesULS;
    property CasesSLS: IRobotSelection read Get_CasesSLS;
    property CasesALS: IRobotSelection read Get_CasesALS;
    property BeamPointsType: IRConcrBeamCalcPointDefinitionType read Get_BeamPointsType write Set_BeamPointsType;
    property BeamPointsValue: Double read Get_BeamPointsValue write Set_BeamPointsValue;
    property CombULS: WordBool read Get_CombULS write Set_CombULS;
    property CombSLS: WordBool read Get_CombSLS write Set_CombSLS;
    property CombALS: WordBool read Get_CombALS write Set_CombALS;
  end;

// *********************************************************************//
// DispIntf:  IRConcrMemberRequiredReinfCalcParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D9372778-C862-40CC-94EA-8FE62828143A}
// *********************************************************************//
  IRConcrMemberRequiredReinfCalcParamsDisp = dispinterface
    ['{D9372778-C862-40CC-94EA-8FE62828143A}']
    property Members: IRobotSelection readonly dispid 1610743808;
    property CasesULS: IRobotSelection readonly dispid 1610743809;
    property CasesSLS: IRobotSelection readonly dispid 1610743810;
    property CasesALS: IRobotSelection readonly dispid 1610743811;
    property BeamPointsType: IRConcrBeamCalcPointDefinitionType dispid 1610743812;
    property BeamPointsValue: Double dispid 1610743814;
    property CombULS: WordBool dispid 1610743816;
    property CombSLS: WordBool dispid 1610743818;
    property CombALS: WordBool dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRDimMemberType
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F7581C4D-8F02-4AB1-B62A-F0B09E91AA9F}
// *********************************************************************//
  IRDimMemberType = interface(IRobotLabel)
    ['{F7581C4D-8F02-4AB1-B62A-F0B09E91AA9F}']
    function Get_MaterialType: IRDimMembDefMatType; safecall;
    procedure Set_MaterialType(ret: IRDimMembDefMatType); safecall;
    property MaterialType: IRDimMembDefMatType read Get_MaterialType write Set_MaterialType;
  end;

// *********************************************************************//
// DispIntf:  IRDimMemberTypeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F7581C4D-8F02-4AB1-B62A-F0B09E91AA9F}
// *********************************************************************//
  IRDimMemberTypeDisp = dispinterface
    ['{F7581C4D-8F02-4AB1-B62A-F0B09E91AA9F}']
    property MaterialType: IRDimMembDefMatType dispid 1610809344;
    property type_: IRobotLabelType readonly dispid 1;
    property Name: WideString readonly dispid 2;
    property Data: IDispatch readonly dispid 3;
    property UniqueId: Integer readonly dispid 1610743811;
    property UserId: Integer dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotBucklingAnalysisParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5E40A2A1-4360-40BF-9962-738F2C6FD9C1}
// *********************************************************************//
  IRobotBucklingAnalysisParams = interface(IDispatch)
    ['{5E40A2A1-4360-40BF-9962-738F2C6FD9C1}']
    function Get_ModesCount: Integer; safecall;
    procedure Set_ModesCount(ret: Integer); safecall;
    function Get_Tolerance: Double; safecall;
    procedure Set_Tolerance(ret: Double); safecall;
    function Get_IterationsCount: Integer; safecall;
    procedure Set_IterationsCount(ret: Integer); safecall;
    function Get_Shift: Double; safecall;
    procedure Set_Shift(ret: Double); safecall;
    function Get_Increment: Integer; safecall;
    procedure Set_Increment(ret: Integer); safecall;
    function Get_Method: IRobotBucklingAnalysisMethod; safecall;
    procedure Set_Method(ret: IRobotBucklingAnalysisMethod); safecall;
    function Get_SturmVerification: WordBool; safecall;
    procedure Set_SturmVerification(ret: WordBool); safecall;
    function Get_IsNonlinear: WordBool; safecall;
    function Get_NonlinearParams: IRobotNonlinearAnalysisParams; safecall;
    property ModesCount: Integer read Get_ModesCount write Set_ModesCount;
    property Tolerance: Double read Get_Tolerance write Set_Tolerance;
    property IterationsCount: Integer read Get_IterationsCount write Set_IterationsCount;
    property Shift: Double read Get_Shift write Set_Shift;
    property Increment: Integer read Get_Increment write Set_Increment;
    property Method: IRobotBucklingAnalysisMethod read Get_Method write Set_Method;
    property SturmVerification: WordBool read Get_SturmVerification write Set_SturmVerification;
    property IsNonlinear: WordBool read Get_IsNonlinear;
    property NonlinearParams: IRobotNonlinearAnalysisParams read Get_NonlinearParams;
  end;

// *********************************************************************//
// DispIntf:  IRobotBucklingAnalysisParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5E40A2A1-4360-40BF-9962-738F2C6FD9C1}
// *********************************************************************//
  IRobotBucklingAnalysisParamsDisp = dispinterface
    ['{5E40A2A1-4360-40BF-9962-738F2C6FD9C1}']
    property ModesCount: Integer dispid 1610743808;
    property Tolerance: Double dispid 1610743810;
    property IterationsCount: Integer dispid 1610743812;
    property Shift: Double dispid 1610743814;
    property Increment: Integer dispid 1610743816;
    property Method: IRobotBucklingAnalysisMethod dispid 1610743818;
    property SturmVerification: WordBool dispid 1610743820;
    property IsNonlinear: WordBool readonly dispid 1610743822;
    property NonlinearParams: IRobotNonlinearAnalysisParams readonly dispid 1610743823;
  end;

// *********************************************************************//
// Interface: IRobotHarmonicAnalysisParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF5188A1-A8AE-47C1-A5A9-4973B051B43A}
// *********************************************************************//
  IRobotHarmonicAnalysisParams = interface(IDispatch)
    ['{EF5188A1-A8AE-47C1-A5A9-4973B051B43A}']
    function Get_MassMatrix: IRobotModalAnalysisMassMatrixType; safecall;
    procedure Set_MassMatrix(ret: IRobotModalAnalysisMassMatrixType); safecall;
    function Get_Excitation: IRobotModalAnalysisLimits; safecall;
    property MassMatrix: IRobotModalAnalysisMassMatrixType read Get_MassMatrix write Set_MassMatrix;
    property Excitation: IRobotModalAnalysisLimits read Get_Excitation;
  end;

// *********************************************************************//
// DispIntf:  IRobotHarmonicAnalysisParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF5188A1-A8AE-47C1-A5A9-4973B051B43A}
// *********************************************************************//
  IRobotHarmonicAnalysisParamsDisp = dispinterface
    ['{EF5188A1-A8AE-47C1-A5A9-4973B051B43A}']
    property MassMatrix: IRobotModalAnalysisMassMatrixType dispid 1610743808;
    property Excitation: IRobotModalAnalysisLimits readonly dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotTimeHistoryAnalysisParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {980A53F4-F833-4738-8DC3-10AF1EF8D17F}
// *********************************************************************//
  IRobotTimeHistoryAnalysisParams = interface(IDispatch)
    ['{980A53F4-F833-4738-8DC3-10AF1EF8D17F}']
    function Get_Method: IRobotTimeHistoryAnalysisMethod; safecall;
    procedure Set_Method(ret: IRobotTimeHistoryAnalysisMethod); safecall;
    function Get_MethodParams: IDispatch; safecall;
    function Get_TimeStep: Double; safecall;
    procedure Set_TimeStep(ret: Double); safecall;
    function Get_Division: Integer; safecall;
    procedure Set_Division(ret: Integer); safecall;
    function Get_End_: Double; safecall;
    procedure Set_End_(ret: Double); safecall;
    function Get_Count: Integer; safecall;
    procedure Set_(_case_num: Integer; const _time_fun: WideString; _coeff: Double; _shift: Double); safecall;
    function Find(_case_num: Integer): Integer; safecall;
    procedure Delete(_idx: Integer); safecall;
    procedure Get(_idx: Integer; out _case_num: Integer; out _time_fun: WideString; 
                  out _coeff: Double; out _shift: Double); safecall;
    function Get_InitialCase: Integer; safecall;
    procedure Set_InitialCase(ret: Integer); safecall;
    property Method: IRobotTimeHistoryAnalysisMethod read Get_Method write Set_Method;
    property MethodParams: IDispatch read Get_MethodParams;
    property TimeStep: Double read Get_TimeStep write Set_TimeStep;
    property Division: Integer read Get_Division write Set_Division;
    property End_: Double read Get_End_ write Set_End_;
    property Count: Integer read Get_Count;
    property InitialCase: Integer read Get_InitialCase write Set_InitialCase;
  end;

// *********************************************************************//
// DispIntf:  IRobotTimeHistoryAnalysisParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {980A53F4-F833-4738-8DC3-10AF1EF8D17F}
// *********************************************************************//
  IRobotTimeHistoryAnalysisParamsDisp = dispinterface
    ['{980A53F4-F833-4738-8DC3-10AF1EF8D17F}']
    property Method: IRobotTimeHistoryAnalysisMethod dispid 1610743808;
    property MethodParams: IDispatch readonly dispid 1610743810;
    property TimeStep: Double dispid 1610743811;
    property Division: Integer dispid 1610743813;
    property End_: Double dispid 1610743815;
    property Count: Integer readonly dispid 1610743817;
    procedure Set_(_case_num: Integer; const _time_fun: WideString; _coeff: Double; _shift: Double); dispid 1610743818;
    function Find(_case_num: Integer): Integer; dispid 1610743819;
    procedure Delete(_idx: Integer); dispid 1610743820;
    procedure Get(_idx: Integer; out _case_num: Integer; out _time_fun: WideString; 
                  out _coeff: Double; out _shift: Double); dispid 1610743821;
    property InitialCase: Integer dispid 1610743822;
  end;

// *********************************************************************//
// Interface: IRobotTimeHistoryNewmarkParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BB01DB63-14CF-40E5-95AD-702C449CE77B}
// *********************************************************************//
  IRobotTimeHistoryNewmarkParams = interface(IDispatch)
    ['{BB01DB63-14CF-40E5-95AD-702C449CE77B}']
    function Get_MassMatrixType: IRobotModalAnalysisMassMatrixType; safecall;
    procedure Set_MassMatrixType(ret: IRobotModalAnalysisMassMatrixType); safecall;
    function Get_Alpha: Double; safecall;
    procedure Set_Alpha(ret: Double); safecall;
    function Get_Beta: Double; safecall;
    procedure Set_Beta(ret: Double); safecall;
    property MassMatrixType: IRobotModalAnalysisMassMatrixType read Get_MassMatrixType write Set_MassMatrixType;
    property Alpha: Double read Get_Alpha write Set_Alpha;
    property Beta: Double read Get_Beta write Set_Beta;
  end;

// *********************************************************************//
// DispIntf:  IRobotTimeHistoryNewmarkParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BB01DB63-14CF-40E5-95AD-702C449CE77B}
// *********************************************************************//
  IRobotTimeHistoryNewmarkParamsDisp = dispinterface
    ['{BB01DB63-14CF-40E5-95AD-702C449CE77B}']
    property MassMatrixType: IRobotModalAnalysisMassMatrixType dispid 1610743808;
    property Alpha: Double dispid 1610743810;
    property Beta: Double dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotTimeHistoryModalDecompositionParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8D329C39-0FF0-445C-8407-7ED37079EA92}
// *********************************************************************//
  IRobotTimeHistoryModalDecompositionParams = interface(IDispatch)
    ['{8D329C39-0FF0-445C-8407-7ED37079EA92}']
    function Get_Count: Integer; safecall;
    procedure Get(_idx: Integer; out _mode: Integer; out _damp: Double); safecall;
    procedure Delete(_idx: Integer); safecall;
    procedure SetDamping(_mode: Integer; _damp: Double); safecall;
    function GetDamping(_mode: Integer): Double; safecall;
    function IsDefined(_mode: Integer): WordBool; safecall;
    procedure DeleteMode(_mode: Integer); safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotTimeHistoryModalDecompositionParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8D329C39-0FF0-445C-8407-7ED37079EA92}
// *********************************************************************//
  IRobotTimeHistoryModalDecompositionParamsDisp = dispinterface
    ['{8D329C39-0FF0-445C-8407-7ED37079EA92}']
    property Count: Integer readonly dispid 1610743808;
    procedure Get(_idx: Integer; out _mode: Integer; out _damp: Double); dispid 1610743809;
    procedure Delete(_idx: Integer); dispid 1610743810;
    procedure SetDamping(_mode: Integer; _damp: Double); dispid 1610743811;
    function GetDamping(_mode: Integer): Double; dispid 1610743812;
    function IsDefined(_mode: Integer): WordBool; dispid 1610743813;
    procedure DeleteMode(_mode: Integer); dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotTimeHistoryNonlinearParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {990B3636-FEED-421B-BBBB-B5709FF3C7CA}
// *********************************************************************//
  IRobotTimeHistoryNonlinearParams = interface(IDispatch)
    ['{990B3636-FEED-421B-BBBB-B5709FF3C7CA}']
    function Get_PDelta: WordBool; safecall;
    procedure Set_PDelta(ret: WordBool); safecall;
    function Get_MaximumIterationNumberForOneIncrement: Integer; safecall;
    procedure Set_MaximumIterationNumberForOneIncrement(ret: Integer); safecall;
    function Get_ResidualForcesRelativeCodeTolerance: Double; safecall;
    procedure Set_ResidualForcesRelativeCodeTolerance(ret: Double); safecall;
    function Get_MatrixUpdateAfterEachSubdivision: WordBool; safecall;
    procedure Set_MatrixUpdateAfterEachSubdivision(ret: WordBool); safecall;
    function Get_MatrixUpdateAfterEachIteration: WordBool; safecall;
    procedure Set_MatrixUpdateAfterEachIteration(ret: WordBool); safecall;
    property PDelta: WordBool read Get_PDelta write Set_PDelta;
    property MaximumIterationNumberForOneIncrement: Integer read Get_MaximumIterationNumberForOneIncrement write Set_MaximumIterationNumberForOneIncrement;
    property ResidualForcesRelativeCodeTolerance: Double read Get_ResidualForcesRelativeCodeTolerance write Set_ResidualForcesRelativeCodeTolerance;
    property MatrixUpdateAfterEachSubdivision: WordBool read Get_MatrixUpdateAfterEachSubdivision write Set_MatrixUpdateAfterEachSubdivision;
    property MatrixUpdateAfterEachIteration: WordBool read Get_MatrixUpdateAfterEachIteration write Set_MatrixUpdateAfterEachIteration;
  end;

// *********************************************************************//
// DispIntf:  IRobotTimeHistoryNonlinearParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {990B3636-FEED-421B-BBBB-B5709FF3C7CA}
// *********************************************************************//
  IRobotTimeHistoryNonlinearParamsDisp = dispinterface
    ['{990B3636-FEED-421B-BBBB-B5709FF3C7CA}']
    property PDelta: WordBool dispid 1610743808;
    property MaximumIterationNumberForOneIncrement: Integer dispid 1610743810;
    property ResidualForcesRelativeCodeTolerance: Double dispid 1610743812;
    property MatrixUpdateAfterEachSubdivision: WordBool dispid 1610743814;
    property MatrixUpdateAfterEachIteration: WordBool dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRobotTimeHistoryPredictorCorectorParams
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {07BBD58F-2350-4D36-AE6B-EAEF8338192D}
// *********************************************************************//
  IRobotTimeHistoryPredictorCorectorParams = interface(IDispatch)
    ['{07BBD58F-2350-4D36-AE6B-EAEF8338192D}']
    function Get_Beta: Double; safecall;
    procedure Set_Beta(ret: Double); safecall;
    function Get_NonlinearParams: IRobotTimeHistoryNonlinearParams; safecall;
    property Beta: Double read Get_Beta write Set_Beta;
    property NonlinearParams: IRobotTimeHistoryNonlinearParams read Get_NonlinearParams;
  end;

// *********************************************************************//
// DispIntf:  IRobotTimeHistoryPredictorCorectorParamsDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {07BBD58F-2350-4D36-AE6B-EAEF8338192D}
// *********************************************************************//
  IRobotTimeHistoryPredictorCorectorParamsDisp = dispinterface
    ['{07BBD58F-2350-4D36-AE6B-EAEF8338192D}']
    property Beta: Double dispid 1610743808;
    property NonlinearParams: IRobotTimeHistoryNonlinearParams readonly dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotBarElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {959605AA-8769-4694-9A05-9780B4193675}
// *********************************************************************//
  IRobotBarElement = interface(IDispatch)
    ['{959605AA-8769-4694-9A05-9780B4193675}']
    function Get_Number: Integer; safecall;
    function Get_StartNode: Integer; safecall;
    function Get_EndNode: Integer; safecall;
    function Get_IsCalc: WordBool; safecall;
    function Get_Inactive: WordBool; safecall;
    procedure Set_Inactive(ret: WordBool); safecall;
    property Number: Integer read Get_Number;
    property StartNode: Integer read Get_StartNode;
    property EndNode: Integer read Get_EndNode;
    property IsCalc: WordBool read Get_IsCalc;
    property Inactive: WordBool read Get_Inactive write Set_Inactive;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {959605AA-8769-4694-9A05-9780B4193675}
// *********************************************************************//
  IRobotBarElementDisp = dispinterface
    ['{959605AA-8769-4694-9A05-9780B4193675}']
    property Number: Integer readonly dispid 1610743808;
    property StartNode: Integer readonly dispid 1610743809;
    property EndNode: Integer readonly dispid 1610743810;
    property IsCalc: WordBool readonly dispid 1610743811;
    property Inactive: WordBool dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotPushOverAnalysisParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B3E140B3-EFF1-4B64-8321-DEEF16E76DDC}
// *********************************************************************//
  IRobotPushOverAnalysisParams = interface(IDispatch)
    ['{B3E140B3-EFF1-4B64-8321-DEEF16E76DDC}']
    function Get_Node: Integer; safecall;
    procedure Set_Node(ret: Integer); safecall;
    function Get_Direction: IRobotPushOverDirection; safecall;
    procedure Set_Direction(ret: IRobotPushOverDirection); safecall;
    function Get_MaxDisplacement: Double; safecall;
    procedure Set_MaxDisplacement(ret: Double); safecall;
    function Get_LoadDefinition: IRobotPushOverLoadDefinitionMethod; safecall;
    procedure Set_LoadDefinition(ret: IRobotPushOverLoadDefinitionMethod); safecall;
    function Get_Nonlinear: WordBool; safecall;
    procedure Set_Nonlinear(ret: WordBool); safecall;
    function Get_NonlinearParams: IRobotNonlinearAnalysisParams; safecall;
    property Node: Integer read Get_Node write Set_Node;
    property Direction: IRobotPushOverDirection read Get_Direction write Set_Direction;
    property MaxDisplacement: Double read Get_MaxDisplacement write Set_MaxDisplacement;
    property LoadDefinition: IRobotPushOverLoadDefinitionMethod read Get_LoadDefinition write Set_LoadDefinition;
    property Nonlinear: WordBool read Get_Nonlinear write Set_Nonlinear;
    property NonlinearParams: IRobotNonlinearAnalysisParams read Get_NonlinearParams;
  end;

// *********************************************************************//
// DispIntf:  IRobotPushOverAnalysisParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B3E140B3-EFF1-4B64-8321-DEEF16E76DDC}
// *********************************************************************//
  IRobotPushOverAnalysisParamsDisp = dispinterface
    ['{B3E140B3-EFF1-4B64-8321-DEEF16E76DDC}']
    property Node: Integer dispid 1610743808;
    property Direction: IRobotPushOverDirection dispid 1610743810;
    property MaxDisplacement: Double dispid 1610743812;
    property LoadDefinition: IRobotPushOverLoadDefinitionMethod dispid 1610743814;
    property Nonlinear: WordBool dispid 1610743816;
    property NonlinearParams: IRobotNonlinearAnalysisParams readonly dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRobotSolidPropertiesData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1A5AA1A1-E3BE-4EB5-88FC-A0F761B1E9D1}
// *********************************************************************//
  IRobotSolidPropertiesData = interface(IDispatch)
    ['{1A5AA1A1-E3BE-4EB5-88FC-A0F761B1E9D1}']
    function Get_MaterialModel: IRobotMaterialModel; safecall;
    procedure Set_MaterialModel(ret: IRobotMaterialModel); safecall;
    function Get_E: Double; safecall;
    procedure Set_E(ret: Double); safecall;
    function Get_NU: Double; safecall;
    procedure Set_NU(ret: Double); safecall;
    function Get_RO: Double; safecall;
    procedure Set_RO(ret: Double); safecall;
    function Get_LX: Double; safecall;
    procedure Set_LX(ret: Double); safecall;
    function Get_DampCoef: Double; safecall;
    procedure Set_DampCoef(ret: Double); safecall;
    function LoadFromDBase(const _material_name: WideString): WordBool; safecall;
    property MaterialModel: IRobotMaterialModel read Get_MaterialModel write Set_MaterialModel;
    property E: Double read Get_E write Set_E;
    property NU: Double read Get_NU write Set_NU;
    property RO: Double read Get_RO write Set_RO;
    property LX: Double read Get_LX write Set_LX;
    property DampCoef: Double read Get_DampCoef write Set_DampCoef;
  end;

// *********************************************************************//
// DispIntf:  IRobotSolidPropertiesDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1A5AA1A1-E3BE-4EB5-88FC-A0F761B1E9D1}
// *********************************************************************//
  IRobotSolidPropertiesDataDisp = dispinterface
    ['{1A5AA1A1-E3BE-4EB5-88FC-A0F761B1E9D1}']
    property MaterialModel: IRobotMaterialModel dispid 1610743808;
    property E: Double dispid 1610743810;
    property NU: Double dispid 1610743812;
    property RO: Double dispid 1610743814;
    property LX: Double dispid 1610743816;
    property DampCoef: Double dispid 1610743818;
    function LoadFromDBase(const _material_name: WideString): WordBool; dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRobotNonlinearLinkParamsLinear
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {41E19983-04DE-47BC-AAA0-4D16BD9BC114}
// *********************************************************************//
  IRobotNonlinearLinkParamsLinear = interface(IRobotNonlinearLinkParams)
    ['{41E19983-04DE-47BC-AAA0-4D16BD9BC114}']
    function Get_K: Double; safecall;
    procedure Set_K(ret: Double); safecall;
    property K: Double read Get_K write Set_K;
  end;

// *********************************************************************//
// DispIntf:  IRobotNonlinearLinkParamsLinearDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {41E19983-04DE-47BC-AAA0-4D16BD9BC114}
// *********************************************************************//
  IRobotNonlinearLinkParamsLinearDisp = dispinterface
    ['{41E19983-04DE-47BC-AAA0-4D16BD9BC114}']
    property K: Double dispid 1610809344;
    property CurveType: IRobotNonlinearLinkCurveType readonly dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRobotNonlinearLinkParamsBLinear
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6AA8F81F-1A41-4901-B9F5-0FC13B8EEE6D}
// *********************************************************************//
  IRobotNonlinearLinkParamsBLinear = interface(IRobotNonlinearLinkParams)
    ['{6AA8F81F-1A41-4901-B9F5-0FC13B8EEE6D}']
    function Get_K1: Double; safecall;
    procedure Set_K1(ret: Double); safecall;
    function Get_d1: Double; safecall;
    procedure Set_d1(ret: Double); safecall;
    function Get_K2: Double; safecall;
    procedure Set_K2(ret: Double); safecall;
    property K1: Double read Get_K1 write Set_K1;
    property d1: Double read Get_d1 write Set_d1;
    property K2: Double read Get_K2 write Set_K2;
  end;

// *********************************************************************//
// DispIntf:  IRobotNonlinearLinkParamsBLinearDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6AA8F81F-1A41-4901-B9F5-0FC13B8EEE6D}
// *********************************************************************//
  IRobotNonlinearLinkParamsBLinearDisp = dispinterface
    ['{6AA8F81F-1A41-4901-B9F5-0FC13B8EEE6D}']
    property K1: Double dispid 1610809344;
    property d1: Double dispid 1610809346;
    property K2: Double dispid 1610809348;
    property CurveType: IRobotNonlinearLinkCurveType readonly dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRobotNonlinearLinkParamsParabolic
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {688A1589-3BAB-41BD-BF62-FABE1195202B}
// *********************************************************************//
  IRobotNonlinearLinkParamsParabolic = interface(IRobotNonlinearLinkParams)
    ['{688A1589-3BAB-41BD-BF62-FABE1195202B}']
    function Get_K: Double; safecall;
    procedure Set_K(ret: Double); safecall;
    function Get_Dlim: Double; safecall;
    procedure Set_Dlim(ret: Double); safecall;
    function Get_Dmax: Double; safecall;
    procedure Set_Dmax(ret: Double); safecall;
    function Get_Flim: Double; safecall;
    procedure Set_Flim(ret: Double); safecall;
    property K: Double read Get_K write Set_K;
    property Dlim: Double read Get_Dlim write Set_Dlim;
    property Dmax: Double read Get_Dmax write Set_Dmax;
    property Flim: Double read Get_Flim write Set_Flim;
  end;

// *********************************************************************//
// DispIntf:  IRobotNonlinearLinkParamsParabolicDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {688A1589-3BAB-41BD-BF62-FABE1195202B}
// *********************************************************************//
  IRobotNonlinearLinkParamsParabolicDisp = dispinterface
    ['{688A1589-3BAB-41BD-BF62-FABE1195202B}']
    property K: Double dispid 1610809344;
    property Dlim: Double dispid 1610809346;
    property Dmax: Double dispid 1610809348;
    property Flim: Double dispid 1610809350;
    property CurveType: IRobotNonlinearLinkCurveType readonly dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRobotNonlinearLinkParamsPlastic
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2B237436-5783-4AC9-B2E6-B2B251149363}
// *********************************************************************//
  IRobotNonlinearLinkParamsPlastic = interface(IRobotNonlinearLinkParams)
    ['{2B237436-5783-4AC9-B2E6-B2B251149363}']
    function Get_K: Double; safecall;
    procedure Set_K(ret: Double); safecall;
    function Get_Dlim: Double; safecall;
    procedure Set_Dlim(ret: Double); safecall;
    function Get_Flim: Double; safecall;
    procedure Set_Flim(ret: Double); safecall;
    function Get_W: Double; safecall;
    procedure Set_W(ret: Double); safecall;
    property K: Double read Get_K write Set_K;
    property Dlim: Double read Get_Dlim write Set_Dlim;
    property Flim: Double read Get_Flim write Set_Flim;
    property W: Double read Get_W write Set_W;
  end;

// *********************************************************************//
// DispIntf:  IRobotNonlinearLinkParamsPlasticDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2B237436-5783-4AC9-B2E6-B2B251149363}
// *********************************************************************//
  IRobotNonlinearLinkParamsPlasticDisp = dispinterface
    ['{2B237436-5783-4AC9-B2E6-B2B251149363}']
    property K: Double dispid 1610809344;
    property Dlim: Double dispid 1610809346;
    property Flim: Double dispid 1610809348;
    property W: Double dispid 1610809350;
    property CurveType: IRobotNonlinearLinkCurveType readonly dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRobotNonlinearLinkParamsPlasticHardening
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EEA4A9E9-54E9-45DF-A9A8-D900F84F771A}
// *********************************************************************//
  IRobotNonlinearLinkParamsPlasticHardening = interface(IRobotNonlinearLinkParams)
    ['{EEA4A9E9-54E9-45DF-A9A8-D900F84F771A}']
    function Get_K0: Double; safecall;
    procedure Set_K0(ret: Double); safecall;
    function Get_K1: Double; safecall;
    procedure Set_K1(ret: Double); safecall;
    function Get_Dlim: Double; safecall;
    procedure Set_Dlim(ret: Double); safecall;
    function Get_Flim: Double; safecall;
    procedure Set_Flim(ret: Double); safecall;
    function Get_W: Double; safecall;
    procedure Set_W(ret: Double); safecall;
    property K0: Double read Get_K0 write Set_K0;
    property K1: Double read Get_K1 write Set_K1;
    property Dlim: Double read Get_Dlim write Set_Dlim;
    property Flim: Double read Get_Flim write Set_Flim;
    property W: Double read Get_W write Set_W;
  end;

// *********************************************************************//
// DispIntf:  IRobotNonlinearLinkParamsPlasticHardeningDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EEA4A9E9-54E9-45DF-A9A8-D900F84F771A}
// *********************************************************************//
  IRobotNonlinearLinkParamsPlasticHardeningDisp = dispinterface
    ['{EEA4A9E9-54E9-45DF-A9A8-D900F84F771A}']
    property K0: Double dispid 1610809344;
    property K1: Double dispid 1610809346;
    property Dlim: Double dispid 1610809348;
    property Flim: Double dispid 1610809350;
    property W: Double dispid 1610809352;
    property CurveType: IRobotNonlinearLinkCurveType readonly dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRobotNonlinearLinkParamsGapHook
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {74340AFD-0771-4FF3-82CF-7805185CCD90}
// *********************************************************************//
  IRobotNonlinearLinkParamsGapHook = interface(IRobotNonlinearLinkParams)
    ['{74340AFD-0771-4FF3-82CF-7805185CCD90}']
    function Get_K: Double; safecall;
    procedure Set_K(ret: Double); safecall;
    function Get_D: Double; safecall;
    procedure Set_D(ret: Double); safecall;
    property K: Double read Get_K write Set_K;
    property D: Double read Get_D write Set_D;
  end;

// *********************************************************************//
// DispIntf:  IRobotNonlinearLinkParamsGapHookDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {74340AFD-0771-4FF3-82CF-7805185CCD90}
// *********************************************************************//
  IRobotNonlinearLinkParamsGapHookDisp = dispinterface
    ['{74340AFD-0771-4FF3-82CF-7805185CCD90}']
    property K: Double dispid 1610809344;
    property D: Double dispid 1610809346;
    property CurveType: IRobotNonlinearLinkCurveType readonly dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRobotNonlinearLinkParamsCustom
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {70561D4E-EA31-4D97-8E9D-A779B44DD555}
// *********************************************************************//
  IRobotNonlinearLinkParamsCustom = interface(IRobotNonlinearLinkParams)
    ['{70561D4E-EA31-4D97-8E9D-A779B44DD555}']
    function Get_Count: Integer; safecall;
    function Get(_idx: Integer): IRobotNonlinearLinkParamsCustomSegment; safecall;
    function New: IRobotNonlinearLinkParamsCustomSegment; safecall;
    procedure Set_(_idx: Integer; const _seg: IRobotNonlinearLinkParamsCustomSegment); safecall;
    procedure Remove(_idx: Integer); safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotNonlinearLinkParamsCustomDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {70561D4E-EA31-4D97-8E9D-A779B44DD555}
// *********************************************************************//
  IRobotNonlinearLinkParamsCustomDisp = dispinterface
    ['{70561D4E-EA31-4D97-8E9D-A779B44DD555}']
    property Count: Integer readonly dispid 1610809344;
    function Get(_idx: Integer): IRobotNonlinearLinkParamsCustomSegment; dispid 1610809345;
    function New: IRobotNonlinearLinkParamsCustomSegment; dispid 1610809346;
    procedure Set_(_idx: Integer; const _seg: IRobotNonlinearLinkParamsCustomSegment); dispid 1610809347;
    procedure Remove(_idx: Integer); dispid 1610809348;
    property CurveType: IRobotNonlinearLinkCurveType readonly dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRobotNonlinearLinkParamsCustomSegment
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {231BCB78-EDAA-41AC-90C7-E986BF5BC0CC}
// *********************************************************************//
  IRobotNonlinearLinkParamsCustomSegment = interface(IDispatch)
    ['{231BCB78-EDAA-41AC-90C7-E986BF5BC0CC}']
    function Get_OriginPoint: Double; safecall;
    procedure Set_OriginPoint(ret: Double); safecall;
    function Get_Expression: WideString; safecall;
    procedure Set_Expression(const ret: WideString); safecall;
    function Get_Constant: WordBool; safecall;
    procedure Set_Constant(ret: WordBool); safecall;
    property OriginPoint: Double read Get_OriginPoint write Set_OriginPoint;
    property Expression: WideString read Get_Expression write Set_Expression;
    property Constant: WordBool read Get_Constant write Set_Constant;
  end;

// *********************************************************************//
// DispIntf:  IRobotNonlinearLinkParamsCustomSegmentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {231BCB78-EDAA-41AC-90C7-E986BF5BC0CC}
// *********************************************************************//
  IRobotNonlinearLinkParamsCustomSegmentDisp = dispinterface
    ['{231BCB78-EDAA-41AC-90C7-E986BF5BC0CC}']
    property OriginPoint: Double dispid 1610743808;
    property Expression: WideString dispid 1610743810;
    property Constant: WordBool dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotBarGeoImperfectionsData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A8AEAD95-F123-4540-8D52-A537179708B5}
// *********************************************************************//
  IRobotBarGeoImperfectionsData = interface(IDispatch)
    ['{A8AEAD95-F123-4540-8D52-A537179708B5}']
    procedure SetAutomatic(_axis: IRobotBarGeoImperfectionsAxis; _automatic: WordBool; 
                           _coeff: Double); safecall;
    function IsAutomatic(_axis: IRobotBarGeoImperfectionsAxis): WordBool; safecall;
    function GetBucklingCoeff(_axis: IRobotBarGeoImperfectionsAxis): Double; safecall;
    procedure SetUser(_axis: IRobotBarGeoImperfectionsAxis; _val: Double); safecall;
    function GetUser(_axis: IRobotBarGeoImperfectionsAxis): Double; safecall;
    procedure SetMinus(_axis: IRobotBarGeoImperfectionsAxis; _minus: WordBool); safecall;
    function IsMinus(_axis: IRobotBarGeoImperfectionsAxis): WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotBarGeoImperfectionsDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A8AEAD95-F123-4540-8D52-A537179708B5}
// *********************************************************************//
  IRobotBarGeoImperfectionsDataDisp = dispinterface
    ['{A8AEAD95-F123-4540-8D52-A537179708B5}']
    procedure SetAutomatic(_axis: IRobotBarGeoImperfectionsAxis; _automatic: WordBool; 
                           _coeff: Double); dispid 1610743808;
    function IsAutomatic(_axis: IRobotBarGeoImperfectionsAxis): WordBool; dispid 1610743809;
    function GetBucklingCoeff(_axis: IRobotBarGeoImperfectionsAxis): Double; dispid 1610743810;
    procedure SetUser(_axis: IRobotBarGeoImperfectionsAxis; _val: Double); dispid 1610743811;
    function GetUser(_axis: IRobotBarGeoImperfectionsAxis): Double; dispid 1610743812;
    procedure SetMinus(_axis: IRobotBarGeoImperfectionsAxis; _minus: WordBool); dispid 1610743813;
    function IsMinus(_axis: IRobotBarGeoImperfectionsAxis): WordBool; dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_RPS_2000_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4297D489-32C8-404C-A895-CA23562EC45A}
// *********************************************************************//
  IRobotSeismicAnalysis_RPS_2000_Params = interface(IDispatch)
    ['{4297D489-32C8-404C-A895-CA23562EC45A}']
    function Get_Zone: IRobotSeismicAnalysis_RPS_2000_ZoneType; safecall;
    procedure Set_Zone(ret: IRobotSeismicAnalysis_RPS_2000_ZoneType); safecall;
    function Get_Site: IRobotSeismicAnalysis_RPS_2000_SiteType; safecall;
    procedure Set_Site(ret: IRobotSeismicAnalysis_RPS_2000_SiteType); safecall;
    function Get_StructureClass: IRobotSeismicAnalysis_RPS_2000_StructureClass; safecall;
    procedure Set_StructureClass(ret: IRobotSeismicAnalysis_RPS_2000_StructureClass); safecall;
    function Get_DirectionType: IRobotSeismicAnalysisDirectionType; safecall;
    procedure Set_DirectionType(ret: IRobotSeismicAnalysisDirectionType); safecall;
    function Get_BehaviorFactor: Double; safecall;
    procedure Set_BehaviorFactor(ret: Double); safecall;
    function Get_Filter: IRobotCaseAnalysisModesFilter; safecall;
    procedure Set_Filter(const ret: IRobotCaseAnalysisModesFilter); safecall;
    function Get_ExcitationDir: IRobotDynamicAnalysisExcitationDirection; safecall;
    function Get_ResidualMode: IRobotSeismicResidualMode; safecall;
    property Zone: IRobotSeismicAnalysis_RPS_2000_ZoneType read Get_Zone write Set_Zone;
    property Site: IRobotSeismicAnalysis_RPS_2000_SiteType read Get_Site write Set_Site;
    property StructureClass: IRobotSeismicAnalysis_RPS_2000_StructureClass read Get_StructureClass write Set_StructureClass;
    property DirectionType: IRobotSeismicAnalysisDirectionType read Get_DirectionType write Set_DirectionType;
    property BehaviorFactor: Double read Get_BehaviorFactor write Set_BehaviorFactor;
    property Filter: IRobotCaseAnalysisModesFilter read Get_Filter write Set_Filter;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection read Get_ExcitationDir;
    property ResidualMode: IRobotSeismicResidualMode read Get_ResidualMode;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_RPS_2000_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4297D489-32C8-404C-A895-CA23562EC45A}
// *********************************************************************//
  IRobotSeismicAnalysis_RPS_2000_ParamsDisp = dispinterface
    ['{4297D489-32C8-404C-A895-CA23562EC45A}']
    property Zone: IRobotSeismicAnalysis_RPS_2000_ZoneType dispid 1610743808;
    property Site: IRobotSeismicAnalysis_RPS_2000_SiteType dispid 1610743810;
    property StructureClass: IRobotSeismicAnalysis_RPS_2000_StructureClass dispid 1610743812;
    property DirectionType: IRobotSeismicAnalysisDirectionType dispid 1610743814;
    property BehaviorFactor: Double dispid 1610743816;
    property Filter: IRobotCaseAnalysisModesFilter dispid 1610743818;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection readonly dispid 1610743820;
    property ResidualMode: IRobotSeismicResidualMode readonly dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_RPA_2003_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {15EED91E-F9A1-4850-9FC1-EB27884CBA49}
// *********************************************************************//
  IRobotSeismicAnalysis_RPA_2003_Params = interface(IDispatch)
    ['{15EED91E-F9A1-4850-9FC1-EB27884CBA49}']
    function Get_Zone: IRobotSeismicAnalysis_RPA_2003_ZoneType; safecall;
    procedure Set_Zone(ret: IRobotSeismicAnalysis_RPA_2003_ZoneType); safecall;
    function Get_Usage: IRobotSeismicAnalysis_RPA_2003_UsageType; safecall;
    procedure Set_Usage(ret: IRobotSeismicAnalysis_RPA_2003_UsageType); safecall;
    function Get_Site: IRobotSeismicAnalysis_RPA_2003_SiteType; safecall;
    procedure Set_Site(ret: IRobotSeismicAnalysis_RPA_2003_SiteType); safecall;
    function Get_BehaviorFactor: Double; safecall;
    procedure Set_BehaviorFactor(ret: Double); safecall;
    function Get_QualityCoef: Double; safecall;
    procedure Set_QualityCoef(ret: Double); safecall;
    function Get_ExcitationDir: IRobotDynamicAnalysisExcitationDirection; safecall;
    function Get_Filter: IRobotCaseAnalysisModesFilter; safecall;
    procedure Set_Filter(const ret: IRobotCaseAnalysisModesFilter); safecall;
    function Get_ResidualMode: IRobotSeismicResidualMode; safecall;
    property Zone: IRobotSeismicAnalysis_RPA_2003_ZoneType read Get_Zone write Set_Zone;
    property Usage: IRobotSeismicAnalysis_RPA_2003_UsageType read Get_Usage write Set_Usage;
    property Site: IRobotSeismicAnalysis_RPA_2003_SiteType read Get_Site write Set_Site;
    property BehaviorFactor: Double read Get_BehaviorFactor write Set_BehaviorFactor;
    property QualityCoef: Double read Get_QualityCoef write Set_QualityCoef;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection read Get_ExcitationDir;
    property Filter: IRobotCaseAnalysisModesFilter read Get_Filter write Set_Filter;
    property ResidualMode: IRobotSeismicResidualMode read Get_ResidualMode;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_RPA_2003_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {15EED91E-F9A1-4850-9FC1-EB27884CBA49}
// *********************************************************************//
  IRobotSeismicAnalysis_RPA_2003_ParamsDisp = dispinterface
    ['{15EED91E-F9A1-4850-9FC1-EB27884CBA49}']
    property Zone: IRobotSeismicAnalysis_RPA_2003_ZoneType dispid 1610743808;
    property Usage: IRobotSeismicAnalysis_RPA_2003_UsageType dispid 1610743810;
    property Site: IRobotSeismicAnalysis_RPA_2003_SiteType dispid 1610743812;
    property BehaviorFactor: Double dispid 1610743814;
    property QualityCoef: Double dispid 1610743816;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection readonly dispid 1610743818;
    property Filter: IRobotCaseAnalysisModesFilter dispid 1610743819;
    property ResidualMode: IRobotSeismicResidualMode readonly dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_ITALY_ORDINANZA_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6E774EA6-48DC-4307-A2E3-32D92193D0C7}
// *********************************************************************//
  IRobotSeismicAnalysis_ITALY_ORDINANZA_Params = interface(IDispatch)
    ['{6E774EA6-48DC-4307-A2E3-32D92193D0C7}']
    function Get_Soil: IRobotSeismicAnalysis_ITALY_ORDINANZA_SoilType; safecall;
    procedure Set_Soil(ret: IRobotSeismicAnalysis_ITALY_ORDINANZA_SoilType); safecall;
    function Get_Zone: IRobotSeismicAnalysis_ITALY_ORDINANZA_ZoneType; safecall;
    procedure Set_Zone(ret: IRobotSeismicAnalysis_ITALY_ORDINANZA_ZoneType); safecall;
    function Get_Spectrum: IRobotSeismicAnalysis_ITALY_ORDINANZA_Spectrum; safecall;
    procedure Set_Spectrum(ret: IRobotSeismicAnalysis_ITALY_ORDINANZA_Spectrum); safecall;
    function Get_FactorQ: Double; safecall;
    procedure Set_FactorQ(ret: Double); safecall;
    function Get_Direction: IRobotSeismicAnalysis_ITALY_ORDINANZA_Direction; safecall;
    procedure Set_Direction(ret: IRobotSeismicAnalysis_ITALY_ORDINANZA_Direction); safecall;
    function Get_ExcitationDir: IRobotDynamicAnalysisExcitationDirection; safecall;
    function Get_Filter: IRobotCaseAnalysisModesFilter; safecall;
    procedure Set_Filter(const ret: IRobotCaseAnalysisModesFilter); safecall;
    property Soil: IRobotSeismicAnalysis_ITALY_ORDINANZA_SoilType read Get_Soil write Set_Soil;
    property Zone: IRobotSeismicAnalysis_ITALY_ORDINANZA_ZoneType read Get_Zone write Set_Zone;
    property Spectrum: IRobotSeismicAnalysis_ITALY_ORDINANZA_Spectrum read Get_Spectrum write Set_Spectrum;
    property FactorQ: Double read Get_FactorQ write Set_FactorQ;
    property Direction: IRobotSeismicAnalysis_ITALY_ORDINANZA_Direction read Get_Direction write Set_Direction;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection read Get_ExcitationDir;
    property Filter: IRobotCaseAnalysisModesFilter read Get_Filter write Set_Filter;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_ITALY_ORDINANZA_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6E774EA6-48DC-4307-A2E3-32D92193D0C7}
// *********************************************************************//
  IRobotSeismicAnalysis_ITALY_ORDINANZA_ParamsDisp = dispinterface
    ['{6E774EA6-48DC-4307-A2E3-32D92193D0C7}']
    property Soil: IRobotSeismicAnalysis_ITALY_ORDINANZA_SoilType dispid 1610743808;
    property Zone: IRobotSeismicAnalysis_ITALY_ORDINANZA_ZoneType dispid 1610743810;
    property Spectrum: IRobotSeismicAnalysis_ITALY_ORDINANZA_Spectrum dispid 1610743812;
    property FactorQ: Double dispid 1610743814;
    property Direction: IRobotSeismicAnalysis_ITALY_ORDINANZA_Direction dispid 1610743816;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection readonly dispid 1610743818;
    property Filter: IRobotCaseAnalysisModesFilter dispid 1610743819;
  end;

// *********************************************************************//
// Interface: IRobotSupportEquivalentWallElasticity
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {16CB9399-7312-4711-81EB-E02C8F4E3579}
// *********************************************************************//
  IRobotSupportEquivalentWallElasticity = interface(IRobotSupportEquivalentElasticity)
    ['{16CB9399-7312-4711-81EB-E02C8F4E3579}']
    function Get_ThroughTwoStories: WordBool; safecall;
    procedure Set_ThroughTwoStories(ret: WordBool); safecall;
    function Get_L1: Double; safecall;
    procedure Set_L1(ret: Double); safecall;
    function Get_L2: Double; safecall;
    procedure Set_L2(ret: Double); safecall;
    property ThroughTwoStories: WordBool read Get_ThroughTwoStories write Set_ThroughTwoStories;
    property L1: Double read Get_L1 write Set_L1;
    property L2: Double read Get_L2 write Set_L2;
  end;

// *********************************************************************//
// DispIntf:  IRobotSupportEquivalentWallElasticityDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {16CB9399-7312-4711-81EB-E02C8F4E3579}
// *********************************************************************//
  IRobotSupportEquivalentWallElasticityDisp = dispinterface
    ['{16CB9399-7312-4711-81EB-E02C8F4E3579}']
    property ThroughTwoStories: WordBool dispid 1610809344;
    property L1: Double dispid 1610809346;
    property L2: Double dispid 1610809348;
    property type_: IRobotSupportEquivalentElasticityType readonly dispid 1610743808;
    property E: Double dispid 1610743809;
    property PoissonRatio: Double dispid 1610743811;
    procedure SetMaterial(const _material_name: WideString); dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotSupportEquivalentColumnElasticity
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9C307EE1-CE7A-4E2D-BACF-AA4722339BFB}
// *********************************************************************//
  IRobotSupportEquivalentColumnElasticity = interface(IRobotSupportEquivalentElasticity)
    ['{9C307EE1-CE7A-4E2D-BACF-AA4722339BFB}']
    function Get_ThroughTwoStories: WordBool; safecall;
    procedure Set_ThroughTwoStories(ret: WordBool); safecall;
    function Get_L1: Double; safecall;
    procedure Set_L1(ret: Double); safecall;
    function Get_Fixing1: IRobotSupportColumnFixingType; safecall;
    procedure Set_Fixing1(ret: IRobotSupportColumnFixingType); safecall;
    function Get_L2: Double; safecall;
    procedure Set_L2(ret: Double); safecall;
    function Get_Fixing2: IRobotSupportColumnFixingType; safecall;
    procedure Set_Fixing2(ret: IRobotSupportColumnFixingType); safecall;
    property ThroughTwoStories: WordBool read Get_ThroughTwoStories write Set_ThroughTwoStories;
    property L1: Double read Get_L1 write Set_L1;
    property Fixing1: IRobotSupportColumnFixingType read Get_Fixing1 write Set_Fixing1;
    property L2: Double read Get_L2 write Set_L2;
    property Fixing2: IRobotSupportColumnFixingType read Get_Fixing2 write Set_Fixing2;
  end;

// *********************************************************************//
// DispIntf:  IRobotSupportEquivalentColumnElasticityDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9C307EE1-CE7A-4E2D-BACF-AA4722339BFB}
// *********************************************************************//
  IRobotSupportEquivalentColumnElasticityDisp = dispinterface
    ['{9C307EE1-CE7A-4E2D-BACF-AA4722339BFB}']
    property ThroughTwoStories: WordBool dispid 1610809344;
    property L1: Double dispid 1610809346;
    property Fixing1: IRobotSupportColumnFixingType dispid 1610809348;
    property L2: Double dispid 1610809350;
    property Fixing2: IRobotSupportColumnFixingType dispid 1610809352;
    property type_: IRobotSupportEquivalentElasticityType readonly dispid 1610743808;
    property E: Double dispid 1610743809;
    property PoissonRatio: Double dispid 1610743811;
    procedure SetMaterial(const _material_name: WideString); dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotLoadRecordBarTrapezoidal
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9E1246A5-7EE1-490C-87CF-D2A8B2D4433C}
// *********************************************************************//
  IRobotLoadRecordBarTrapezoidal = interface(IRobotLoadRecord2)
    ['{9E1246A5-7EE1-490C-87CF-D2A8B2D4433C}']
    function Get_PointCount: Integer; safecall;
    procedure Set_PointCount(ret: Integer); safecall;
    procedure SetPoint(_pt_idx: Integer; _px: Double; _py: Double; _pz: Double; _x: Double); safecall;
    procedure GetPoint(_pt_idx: Integer; out _px: Double; out _py: Double; out _pz: Double; 
                       out _x: Double); safecall;
    property PointCount: Integer read Get_PointCount write Set_PointCount;
  end;

// *********************************************************************//
// DispIntf:  IRobotLoadRecordBarTrapezoidalDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9E1246A5-7EE1-490C-87CF-D2A8B2D4433C}
// *********************************************************************//
  IRobotLoadRecordBarTrapezoidalDisp = dispinterface
    ['{9E1246A5-7EE1-490C-87CF-D2A8B2D4433C}']
    property PointCount: Integer dispid 1610874880;
    procedure SetPoint(_pt_idx: Integer; _px: Double; _py: Double; _pz: Double; _x: Double); dispid 1610874882;
    procedure GetPoint(_pt_idx: Integer; out _px: Double; out _py: Double; out _pz: Double; 
                       out _x: Double); dispid 1610874883;
    procedure GhostMethod_IRobotLoadRecord2_0_1; dispid 1610678272;
    procedure GhostMethod_IRobotLoadRecord2_4_2; dispid 1610678273;
    procedure GhostMethod_IRobotLoadRecord2_8_3; dispid 1610678274;
    procedure GhostMethod_IRobotLoadRecord2_12_4; dispid 1610678275;
    procedure GhostMethod_IRobotLoadRecord2_16_5; dispid 1610678276;
    procedure GhostMethod_IRobotLoadRecord2_20_6; dispid 1610678277;
    procedure GhostMethod_IRobotLoadRecord2_24_7; dispid 1610678278;
    procedure GhostMethod_IRobotLoadRecord2_28_8; dispid 1610678279;
    procedure GhostMethod_IRobotLoadRecord2_32_9; dispid 1610678280;
    procedure GhostMethod_IRobotLoadRecord2_36_10; dispid 1610678281;
    procedure GhostMethod_IRobotLoadRecord2_40_11; dispid 1610678282;
    procedure GhostMethod_IRobotLoadRecord2_44_12; dispid 1610678283;
    procedure GhostMethod_IRobotLoadRecord2_48_13; dispid 1610678284;
    procedure GhostMethod_IRobotLoadRecord2_52_14; dispid 1610678285;
    procedure GhostMethod_IRobotLoadRecord2_56_15; dispid 1610678286;
    property UniqueId: Integer readonly dispid 1610809344;
    function SetGeoLimits(const layer_def: IRobotGeoLayer): WordBool; dispid 1610809345;
    function GetGeoLimits: IRobotGeoLayer; dispid 1610809346;
    property UserId: Integer dispid 1610809347;
    property type_: IRobotLoadRecordType readonly dispid 1610743808;
    property ObjectType: IRobotObjectType dispid 1610743809;
    property Objects: IRobotSelection readonly dispid 1610743811;
    property Description: WideString dispid 1610743812;
    function GetValue(val_id: Smallint): Double; dispid 1610743814;
    procedure SetValue(val_id: Smallint; val: Double); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_PS_92_2008_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF45589B-8FBA-43B0-9BF9-EC7F5872C4C1}
// *********************************************************************//
  IRobotSeismicAnalysis_PS_92_2008_Params = interface(IDispatch)
    ['{EF45589B-8FBA-43B0-9BF9-EC7F5872C4C1}']
    function Get_ExcitationDir: IRobotDynamicAnalysisExcitationDirection; safecall;
    function Get_Direction: IRobotGeoPoint3D; safecall;
    procedure Set_Direction(const ret: IRobotGeoPoint3D); safecall;
    function Get_Filter: IRobotCaseAnalysisModesFilter; safecall;
    procedure Set_Filter(const ret: IRobotCaseAnalysisModesFilter); safecall;
    function Get_ZoneType: IRobotSeismicAnalysis_PS_92_2008_ZoneType; safecall;
    procedure Set_ZoneType(ret: IRobotSeismicAnalysis_PS_92_2008_ZoneType); safecall;
    function Get_Topography: Double; safecall;
    procedure Set_Topography(ret: Double); safecall;
    function Get_StructureType: IRobotSeismicAnalysis_PS_92_2008_StructureType; safecall;
    procedure Set_StructureType(ret: IRobotSeismicAnalysis_PS_92_2008_StructureType); safecall;
    function Get_Site: IRobotSeismicAnalysis_PS_92_2008_SiteType; safecall;
    procedure Set_Site(ret: IRobotSeismicAnalysis_PS_92_2008_SiteType); safecall;
    function Get_SpectrumType: IRobotSeismicAnalysisSpectrumType; safecall;
    procedure Set_SpectrumType(ret: IRobotSeismicAnalysisSpectrumType); safecall;
    function Get_DirectionType: IRobotSeismicAnalysisDirectionType; safecall;
    procedure Set_DirectionType(ret: IRobotSeismicAnalysisDirectionType); safecall;
    function Get_BehaviorFactor: Double; safecall;
    procedure Set_BehaviorFactor(ret: Double); safecall;
    function Get_SiteEnvelope: IRobotSeismicAnalysis_PS_92_2008_SiteEnvelope; safecall;
    function Get_Ag: Double; safecall;
    procedure Set_Ag(ret: Double); safecall;
    function Get_ResidualMode: IRobotSeismicResidualMode; safecall;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection read Get_ExcitationDir;
    property Direction: IRobotGeoPoint3D read Get_Direction write Set_Direction;
    property Filter: IRobotCaseAnalysisModesFilter read Get_Filter write Set_Filter;
    property ZoneType: IRobotSeismicAnalysis_PS_92_2008_ZoneType read Get_ZoneType write Set_ZoneType;
    property Topography: Double read Get_Topography write Set_Topography;
    property StructureType: IRobotSeismicAnalysis_PS_92_2008_StructureType read Get_StructureType write Set_StructureType;
    property Site: IRobotSeismicAnalysis_PS_92_2008_SiteType read Get_Site write Set_Site;
    property SpectrumType: IRobotSeismicAnalysisSpectrumType read Get_SpectrumType write Set_SpectrumType;
    property DirectionType: IRobotSeismicAnalysisDirectionType read Get_DirectionType write Set_DirectionType;
    property BehaviorFactor: Double read Get_BehaviorFactor write Set_BehaviorFactor;
    property SiteEnvelope: IRobotSeismicAnalysis_PS_92_2008_SiteEnvelope read Get_SiteEnvelope;
    property Ag: Double read Get_Ag write Set_Ag;
    property ResidualMode: IRobotSeismicResidualMode read Get_ResidualMode;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_PS_92_2008_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF45589B-8FBA-43B0-9BF9-EC7F5872C4C1}
// *********************************************************************//
  IRobotSeismicAnalysis_PS_92_2008_ParamsDisp = dispinterface
    ['{EF45589B-8FBA-43B0-9BF9-EC7F5872C4C1}']
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection readonly dispid 1610743808;
    property Direction: IRobotGeoPoint3D dispid 1610743809;
    property Filter: IRobotCaseAnalysisModesFilter dispid 1610743811;
    property ZoneType: IRobotSeismicAnalysis_PS_92_2008_ZoneType dispid 1610743813;
    property Topography: Double dispid 1610743815;
    property StructureType: IRobotSeismicAnalysis_PS_92_2008_StructureType dispid 1610743817;
    property Site: IRobotSeismicAnalysis_PS_92_2008_SiteType dispid 1610743819;
    property SpectrumType: IRobotSeismicAnalysisSpectrumType dispid 1610743821;
    property DirectionType: IRobotSeismicAnalysisDirectionType dispid 1610743823;
    property BehaviorFactor: Double dispid 1610743825;
    property SiteEnvelope: IRobotSeismicAnalysis_PS_92_2008_SiteEnvelope readonly dispid 1610743827;
    property Ag: Double dispid 1610743828;
    property ResidualMode: IRobotSeismicResidualMode readonly dispid 1610743830;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_PS_92_2008_SiteEnvelope
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {93540F72-A55F-4014-ADEE-F33C07D12B66}
// *********************************************************************//
  IRobotSeismicAnalysis_PS_92_2008_SiteEnvelope = interface(IDispatch)
    ['{93540F72-A55F-4014-ADEE-F33C07D12B66}']
    procedure SetActive(_site: IRobotSeismicAnalysis_PS_92_2008_SiteType; _is_active: WordBool); safecall;
    function IsActive(_site: IRobotSeismicAnalysis_PS_92_2008_SiteType): WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_PS_92_2008_SiteEnvelopeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {93540F72-A55F-4014-ADEE-F33C07D12B66}
// *********************************************************************//
  IRobotSeismicAnalysis_PS_92_2008_SiteEnvelopeDisp = dispinterface
    ['{93540F72-A55F-4014-ADEE-F33C07D12B66}']
    procedure SetActive(_site: IRobotSeismicAnalysis_PS_92_2008_SiteType; _is_active: WordBool); dispid 1610743808;
    function IsActive(_site: IRobotSeismicAnalysis_PS_92_2008_SiteType): WordBool; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotLoadRecordDead
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CC38346D-0306-4022-AB63-715BBB55A473}
// *********************************************************************//
  IRobotLoadRecordDead = interface(IRobotLoadRecord2)
    ['{CC38346D-0306-4022-AB63-715BBB55A473}']
    function Get_FiniteElems: WideString; safecall;
    procedure Set_FiniteElems(const ret: WideString); safecall;
    property FiniteElems: WideString read Get_FiniteElems write Set_FiniteElems;
  end;

// *********************************************************************//
// DispIntf:  IRobotLoadRecordDeadDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CC38346D-0306-4022-AB63-715BBB55A473}
// *********************************************************************//
  IRobotLoadRecordDeadDisp = dispinterface
    ['{CC38346D-0306-4022-AB63-715BBB55A473}']
    property FiniteElems: WideString dispid 1610874880;
    procedure GhostMethod_IRobotLoadRecord2_0_1; dispid 1610678272;
    procedure GhostMethod_IRobotLoadRecord2_4_2; dispid 1610678273;
    procedure GhostMethod_IRobotLoadRecord2_8_3; dispid 1610678274;
    procedure GhostMethod_IRobotLoadRecord2_12_4; dispid 1610678275;
    procedure GhostMethod_IRobotLoadRecord2_16_5; dispid 1610678276;
    procedure GhostMethod_IRobotLoadRecord2_20_6; dispid 1610678277;
    procedure GhostMethod_IRobotLoadRecord2_24_7; dispid 1610678278;
    procedure GhostMethod_IRobotLoadRecord2_28_8; dispid 1610678279;
    procedure GhostMethod_IRobotLoadRecord2_32_9; dispid 1610678280;
    procedure GhostMethod_IRobotLoadRecord2_36_10; dispid 1610678281;
    procedure GhostMethod_IRobotLoadRecord2_40_11; dispid 1610678282;
    procedure GhostMethod_IRobotLoadRecord2_44_12; dispid 1610678283;
    procedure GhostMethod_IRobotLoadRecord2_48_13; dispid 1610678284;
    procedure GhostMethod_IRobotLoadRecord2_52_14; dispid 1610678285;
    procedure GhostMethod_IRobotLoadRecord2_56_15; dispid 1610678286;
    property UniqueId: Integer readonly dispid 1610809344;
    function SetGeoLimits(const layer_def: IRobotGeoLayer): WordBool; dispid 1610809345;
    function GetGeoLimits: IRobotGeoLayer; dispid 1610809346;
    property UserId: Integer dispid 1610809347;
    property type_: IRobotLoadRecordType readonly dispid 1610743808;
    property ObjectType: IRobotObjectType dispid 1610743809;
    property Objects: IRobotSelection readonly dispid 1610743811;
    property Description: WideString dispid 1610743812;
    function GetValue(val_id: Smallint): Double; dispid 1610743814;
    procedure SetValue(val_id: Smallint; val: Double); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotStoreySelection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D516BAD3-C3FF-4695-83CB-68D8FBDB497E}
// *********************************************************************//
  IRobotStoreySelection = interface(IDispatch)
    ['{D516BAD3-C3FF-4695-83CB-68D8FBDB497E}']
    procedure Clear; safecall;
    procedure Add(_storey: OleVariant); safecall;
    procedure Remove(_storey: OleVariant); safecall;
    function GetNumbers: PSafeArray; safecall;
    function GetNames: PSafeArray; safecall;
    procedure AddAll; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotStoreySelectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D516BAD3-C3FF-4695-83CB-68D8FBDB497E}
// *********************************************************************//
  IRobotStoreySelectionDisp = dispinterface
    ['{D516BAD3-C3FF-4695-83CB-68D8FBDB497E}']
    procedure Clear; dispid 1610743808;
    procedure Add(_storey: OleVariant); dispid 1610743809;
    procedure Remove(_storey: OleVariant); dispid 1610743810;
    function GetNumbers: {??PSafeArray}OleVariant; dispid 1610743811;
    function GetNames: {??PSafeArray}OleVariant; dispid 1610743812;
    procedure AddAll; dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotDynamicAnalysisDamping
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E1F3F70C-5F5E-490D-8DEE-AFC26E6EE4E9}
// *********************************************************************//
  IRobotDynamicAnalysisDamping = interface(IDispatch)
    ['{E1F3F70C-5F5E-490D-8DEE-AFC26E6EE4E9}']
    function Get_type_: IRobotDynamicAnalysisDampingType; safecall;
    procedure Set_type_(ret: IRobotDynamicAnalysisDampingType); safecall;
    function Get_ConstValue: Double; safecall;
    procedure Set_ConstValue(ret: Double); safecall;
    procedure SetModeDamping(_mode: Integer; _damp_value: Double); safecall;
    function GetModeDamping(_mode: Integer): Double; safecall;
    procedure RemoveModeDamping(_mode: Integer); safecall;
    function GetModes: PSafeArray; safecall;
    property type_: IRobotDynamicAnalysisDampingType read Get_type_ write Set_type_;
    property ConstValue: Double read Get_ConstValue write Set_ConstValue;
  end;

// *********************************************************************//
// DispIntf:  IRobotDynamicAnalysisDampingDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E1F3F70C-5F5E-490D-8DEE-AFC26E6EE4E9}
// *********************************************************************//
  IRobotDynamicAnalysisDampingDisp = dispinterface
    ['{E1F3F70C-5F5E-490D-8DEE-AFC26E6EE4E9}']
    property type_: IRobotDynamicAnalysisDampingType dispid 1610743808;
    property ConstValue: Double dispid 1610743810;
    procedure SetModeDamping(_mode: Integer; _damp_value: Double); dispid 1610743812;
    function GetModeDamping(_mode: Integer): Double; dispid 1610743813;
    procedure RemoveModeDamping(_mode: Integer); dispid 1610743814;
    function GetModes: {??PSafeArray}OleVariant; dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotFRFAnalysisParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E3DD2E26-0B07-44D2-8307-F6DA261425AF}
// *********************************************************************//
  IRobotFRFAnalysisParams = interface(IDispatch)
    ['{E3DD2E26-0B07-44D2-8307-F6DA261425AF}']
    function Get_InitialFrequency: Double; safecall;
    procedure Set_InitialFrequency(ret: Double); safecall;
    function Get_FinalFrequency: Double; safecall;
    procedure Set_FinalFrequency(ret: Double); safecall;
    function Get_FrequencyDivision: Integer; safecall;
    procedure Set_FrequencyDivision(ret: Integer); safecall;
    function Get_IncludeEigenfrequencies: WordBool; safecall;
    procedure Set_IncludeEigenfrequencies(ret: WordBool); safecall;
    function Get_Damping: IRobotDynamicAnalysisDamping; safecall;
    property InitialFrequency: Double read Get_InitialFrequency write Set_InitialFrequency;
    property FinalFrequency: Double read Get_FinalFrequency write Set_FinalFrequency;
    property FrequencyDivision: Integer read Get_FrequencyDivision write Set_FrequencyDivision;
    property IncludeEigenfrequencies: WordBool read Get_IncludeEigenfrequencies write Set_IncludeEigenfrequencies;
    property Damping: IRobotDynamicAnalysisDamping read Get_Damping;
  end;

// *********************************************************************//
// DispIntf:  IRobotFRFAnalysisParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E3DD2E26-0B07-44D2-8307-F6DA261425AF}
// *********************************************************************//
  IRobotFRFAnalysisParamsDisp = dispinterface
    ['{E3DD2E26-0B07-44D2-8307-F6DA261425AF}']
    property InitialFrequency: Double dispid 1610743808;
    property FinalFrequency: Double dispid 1610743810;
    property FrequencyDivision: Integer dispid 1610743812;
    property IncludeEigenfrequencies: WordBool dispid 1610743814;
    property Damping: IRobotDynamicAnalysisDamping readonly dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRobotFootfallAnalysisNodeSelection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E57B7A35-0809-4B13-96BA-40A1DA4EB691}
// *********************************************************************//
  IRobotFootfallAnalysisNodeSelection = interface(IDispatch)
    ['{E57B7A35-0809-4B13-96BA-40A1DA4EB691}']
    function Get_type_: IRobotFootfallAnalysisNodeSelectionType; safecall;
    procedure Set_type_(ret: IRobotFootfallAnalysisNodeSelectionType); safecall;
    function Get_SelectedNodes: IRobotSelection; safecall;
    function Get_SelectedPanels: IRobotSelection; safecall;
    property type_: IRobotFootfallAnalysisNodeSelectionType read Get_type_ write Set_type_;
    property SelectedNodes: IRobotSelection read Get_SelectedNodes;
    property SelectedPanels: IRobotSelection read Get_SelectedPanels;
  end;

// *********************************************************************//
// DispIntf:  IRobotFootfallAnalysisNodeSelectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E57B7A35-0809-4B13-96BA-40A1DA4EB691}
// *********************************************************************//
  IRobotFootfallAnalysisNodeSelectionDisp = dispinterface
    ['{E57B7A35-0809-4B13-96BA-40A1DA4EB691}']
    property type_: IRobotFootfallAnalysisNodeSelectionType dispid 1610743808;
    property SelectedNodes: IRobotSelection readonly dispid 1610743810;
    property SelectedPanels: IRobotSelection readonly dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotFootfallAnalysisModalParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {619B77F2-862E-41BA-88E8-D2C5A9C0EA38}
// *********************************************************************//
  IRobotFootfallAnalysisModalParams = interface(IDispatch)
    ['{619B77F2-862E-41BA-88E8-D2C5A9C0EA38}']
    function Get_FrequencyLimit: Double; safecall;
    procedure Set_FrequencyLimit(ret: Double); safecall;
    function Get_IgnoreDensity: WordBool; safecall;
    procedure Set_IgnoreDensity(ret: WordBool); safecall;
    function Get_IncludeMassForDirX: WordBool; safecall;
    procedure Set_IncludeMassForDirX(ret: WordBool); safecall;
    function Get_IncludeMassForDirY: WordBool; safecall;
    procedure Set_IncludeMassForDirY(ret: WordBool); safecall;
    function Get_IncludeMassForDirZ: WordBool; safecall;
    procedure Set_IncludeMassForDirZ(ret: WordBool); safecall;
    property FrequencyLimit: Double read Get_FrequencyLimit write Set_FrequencyLimit;
    property IgnoreDensity: WordBool read Get_IgnoreDensity write Set_IgnoreDensity;
    property IncludeMassForDirX: WordBool read Get_IncludeMassForDirX write Set_IncludeMassForDirX;
    property IncludeMassForDirY: WordBool read Get_IncludeMassForDirY write Set_IncludeMassForDirY;
    property IncludeMassForDirZ: WordBool read Get_IncludeMassForDirZ write Set_IncludeMassForDirZ;
  end;

// *********************************************************************//
// DispIntf:  IRobotFootfallAnalysisModalParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {619B77F2-862E-41BA-88E8-D2C5A9C0EA38}
// *********************************************************************//
  IRobotFootfallAnalysisModalParamsDisp = dispinterface
    ['{619B77F2-862E-41BA-88E8-D2C5A9C0EA38}']
    property FrequencyLimit: Double dispid 1610743808;
    property IgnoreDensity: WordBool dispid 1610743810;
    property IncludeMassForDirX: WordBool dispid 1610743812;
    property IncludeMassForDirY: WordBool dispid 1610743814;
    property IncludeMassForDirZ: WordBool dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRobotFootfallAnalysisParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A9436EF4-BAEC-4815-9EFB-4E1ECD80BF38}
// *********************************************************************//
  IRobotFootfallAnalysisParams = interface(IDispatch)
    ['{A9436EF4-BAEC-4815-9EFB-4E1ECD80BF38}']
    function Get_ExcitationMethod: IRobotFootfallAnalysisExcitationMethod; safecall;
    procedure Set_ExcitationMethod(ret: IRobotFootfallAnalysisExcitationMethod); safecall;
    function Get_ExcitationForces: IRobotFootfallAnalysisExcitationForces; safecall;
    procedure Set_ExcitationForces(ret: IRobotFootfallAnalysisExcitationForces); safecall;
    function Get_MinWalkingFrequency: Double; safecall;
    procedure Set_MinWalkingFrequency(ret: Double); safecall;
    function Get_MaxWalkingFrequency: Double; safecall;
    procedure Set_MaxWalkingFrequency(ret: Double); safecall;
    function Get_FootstepsNumber: Integer; safecall;
    procedure Set_FootstepsNumber(ret: Integer); safecall;
    function Get_WalkersWeight: Double; safecall;
    procedure Set_WalkersWeight(ret: Double); safecall;
    function Get_ExcitationNodes: IRobotFootfallAnalysisNodeSelection; safecall;
    function Get_ResponseNodes: IRobotFootfallAnalysisNodeSelection; safecall;
    function Get_Damping: IRobotDynamicAnalysisDamping; safecall;
    function Get_ModalParams: IRobotFootfallAnalysisModalParams; safecall;
    property ExcitationMethod: IRobotFootfallAnalysisExcitationMethod read Get_ExcitationMethod write Set_ExcitationMethod;
    property ExcitationForces: IRobotFootfallAnalysisExcitationForces read Get_ExcitationForces write Set_ExcitationForces;
    property MinWalkingFrequency: Double read Get_MinWalkingFrequency write Set_MinWalkingFrequency;
    property MaxWalkingFrequency: Double read Get_MaxWalkingFrequency write Set_MaxWalkingFrequency;
    property FootstepsNumber: Integer read Get_FootstepsNumber write Set_FootstepsNumber;
    property WalkersWeight: Double read Get_WalkersWeight write Set_WalkersWeight;
    property ExcitationNodes: IRobotFootfallAnalysisNodeSelection read Get_ExcitationNodes;
    property ResponseNodes: IRobotFootfallAnalysisNodeSelection read Get_ResponseNodes;
    property Damping: IRobotDynamicAnalysisDamping read Get_Damping;
    property ModalParams: IRobotFootfallAnalysisModalParams read Get_ModalParams;
  end;

// *********************************************************************//
// DispIntf:  IRobotFootfallAnalysisParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A9436EF4-BAEC-4815-9EFB-4E1ECD80BF38}
// *********************************************************************//
  IRobotFootfallAnalysisParamsDisp = dispinterface
    ['{A9436EF4-BAEC-4815-9EFB-4E1ECD80BF38}']
    property ExcitationMethod: IRobotFootfallAnalysisExcitationMethod dispid 1610743808;
    property ExcitationForces: IRobotFootfallAnalysisExcitationForces dispid 1610743810;
    property MinWalkingFrequency: Double dispid 1610743812;
    property MaxWalkingFrequency: Double dispid 1610743814;
    property FootstepsNumber: Integer dispid 1610743816;
    property WalkersWeight: Double dispid 1610743818;
    property ExcitationNodes: IRobotFootfallAnalysisNodeSelection readonly dispid 1610743820;
    property ResponseNodes: IRobotFootfallAnalysisNodeSelection readonly dispid 1610743821;
    property Damping: IRobotDynamicAnalysisDamping readonly dispid 1610743822;
    property ModalParams: IRobotFootfallAnalysisModalParams readonly dispid 1610743823;
  end;

// *********************************************************************//
// Interface: IRobotTimeHistoryHHTParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {80E83A01-5541-4252-8331-969CC0BC4250}
// *********************************************************************//
  IRobotTimeHistoryHHTParams = interface(IDispatch)
    ['{80E83A01-5541-4252-8331-969CC0BC4250}']
    function Get_CoeffAlpha: Double; safecall;
    procedure Set_CoeffAlpha(ret: Double); safecall;
    function Get_Nonlinearity: WordBool; safecall;
    procedure Set_Nonlinearity(ret: WordBool); safecall;
    function Get_NonlinearParams: IRobotTimeHistoryNonlinearParams; safecall;
    function Get_Alpha: Double; safecall;
    procedure Set_Alpha(ret: Double); safecall;
    function Get_Beta: Double; safecall;
    procedure Set_Beta(ret: Double); safecall;
    property CoeffAlpha: Double read Get_CoeffAlpha write Set_CoeffAlpha;
    property Nonlinearity: WordBool read Get_Nonlinearity write Set_Nonlinearity;
    property NonlinearParams: IRobotTimeHistoryNonlinearParams read Get_NonlinearParams;
    property Alpha: Double read Get_Alpha write Set_Alpha;
    property Beta: Double read Get_Beta write Set_Beta;
  end;

// *********************************************************************//
// DispIntf:  IRobotTimeHistoryHHTParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {80E83A01-5541-4252-8331-969CC0BC4250}
// *********************************************************************//
  IRobotTimeHistoryHHTParamsDisp = dispinterface
    ['{80E83A01-5541-4252-8331-969CC0BC4250}']
    property CoeffAlpha: Double dispid 1610743808;
    property Nonlinearity: WordBool dispid 1610743810;
    property NonlinearParams: IRobotTimeHistoryNonlinearParams readonly dispid 1610743812;
    property Alpha: Double dispid 1610743813;
    property Beta: Double dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotTimeHistoryNewmarkAccelParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A77B68D9-4247-48A0-BBC8-07007BAC30AB}
// *********************************************************************//
  IRobotTimeHistoryNewmarkAccelParams = interface(IDispatch)
    ['{A77B68D9-4247-48A0-BBC8-07007BAC30AB}']
    function Get_Nonlinearity: WordBool; safecall;
    procedure Set_Nonlinearity(ret: WordBool); safecall;
    function Get_NonlinearParams: IRobotTimeHistoryNonlinearParams; safecall;
    function Get_Alpha: Double; safecall;
    procedure Set_Alpha(ret: Double); safecall;
    function Get_Beta: Double; safecall;
    procedure Set_Beta(ret: Double); safecall;
    property Nonlinearity: WordBool read Get_Nonlinearity write Set_Nonlinearity;
    property NonlinearParams: IRobotTimeHistoryNonlinearParams read Get_NonlinearParams;
    property Alpha: Double read Get_Alpha write Set_Alpha;
    property Beta: Double read Get_Beta write Set_Beta;
  end;

// *********************************************************************//
// DispIntf:  IRobotTimeHistoryNewmarkAccelParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A77B68D9-4247-48A0-BBC8-07007BAC30AB}
// *********************************************************************//
  IRobotTimeHistoryNewmarkAccelParamsDisp = dispinterface
    ['{A77B68D9-4247-48A0-BBC8-07007BAC30AB}']
    property Nonlinearity: WordBool dispid 1610743808;
    property NonlinearParams: IRobotTimeHistoryNonlinearParams readonly dispid 1610743810;
    property Alpha: Double dispid 1610743811;
    property Beta: Double dispid 1610743813;
  end;

// *********************************************************************//
// Interface: _IRobotWindLoadsSimulationParamsEx
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6EEB33AF-D9D8-475C-85FD-FD04F62EF595}
// *********************************************************************//
  _IRobotWindLoadsSimulationParamsEx = interface(IDispatch)
    ['{6EEB33AF-D9D8-475C-85FD-FD04F62EF595}']
    function Get_GenerateMaps: WordBool; safecall;
    procedure Set_GenerateMaps(ret: WordBool); safecall;
    property GenerateMaps: WordBool read Get_GenerateMaps write Set_GenerateMaps;
  end;

// *********************************************************************//
// DispIntf:  _IRobotWindLoadsSimulationParamsExDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6EEB33AF-D9D8-475C-85FD-FD04F62EF595}
// *********************************************************************//
  _IRobotWindLoadsSimulationParamsExDisp = dispinterface
    ['{6EEB33AF-D9D8-475C-85FD-FD04F62EF595}']
    property GenerateMaps: WordBool dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRobotSELFSeismic_ASCE_7_10_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {888E80DF-793F-4DA1-9A0E-8B3C2A57DE41}
// *********************************************************************//
  IRobotSELFSeismic_ASCE_7_10_Params = interface(IDispatch)
    ['{888E80DF-793F-4DA1-9A0E-8B3C2A57DE41}']
    function Get_S1: Double; safecall;
    procedure Set_S1(ret: Double); safecall;
    function Get_Ss: Double; safecall;
    procedure Set_Ss(ret: Double); safecall;
    function Get_TL: Double; safecall;
    procedure Set_TL(ret: Double); safecall;
    function Get_R: Double; safecall;
    procedure Set_R(ret: Double); safecall;
    function Get_I: Double; safecall;
    procedure Set_I(ret: Double); safecall;
    function Get_SiteClass: IRobotSELFSeismic_ASCE_7_10_SiteClassType; safecall;
    procedure Set_SiteClass(ret: IRobotSELFSeismic_ASCE_7_10_SiteClassType); safecall;
    function Get_StructureTypeX: IRobotSELFSeismic_ASCE_7_10_StructureType; safecall;
    procedure Set_StructureTypeX(ret: IRobotSELFSeismic_ASCE_7_10_StructureType); safecall;
    function Get_StructureTypeY: IRobotSELFSeismic_ASCE_7_10_StructureType; safecall;
    procedure Set_StructureTypeY(ret: IRobotSELFSeismic_ASCE_7_10_StructureType); safecall;
    function Get_TBaseValueX: Double; safecall;
    procedure Set_TBaseValueX(ret: Double); safecall;
    function Get_TBaseValueY: Double; safecall;
    procedure Set_TBaseValueY(ret: Double); safecall;
    property S1: Double read Get_S1 write Set_S1;
    property Ss: Double read Get_Ss write Set_Ss;
    property TL: Double read Get_TL write Set_TL;
    property R: Double read Get_R write Set_R;
    property I: Double read Get_I write Set_I;
    property SiteClass: IRobotSELFSeismic_ASCE_7_10_SiteClassType read Get_SiteClass write Set_SiteClass;
    property StructureTypeX: IRobotSELFSeismic_ASCE_7_10_StructureType read Get_StructureTypeX write Set_StructureTypeX;
    property StructureTypeY: IRobotSELFSeismic_ASCE_7_10_StructureType read Get_StructureTypeY write Set_StructureTypeY;
    property TBaseValueX: Double read Get_TBaseValueX write Set_TBaseValueX;
    property TBaseValueY: Double read Get_TBaseValueY write Set_TBaseValueY;
  end;

// *********************************************************************//
// DispIntf:  IRobotSELFSeismic_ASCE_7_10_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {888E80DF-793F-4DA1-9A0E-8B3C2A57DE41}
// *********************************************************************//
  IRobotSELFSeismic_ASCE_7_10_ParamsDisp = dispinterface
    ['{888E80DF-793F-4DA1-9A0E-8B3C2A57DE41}']
    property S1: Double dispid 1610743808;
    property Ss: Double dispid 1610743810;
    property TL: Double dispid 1610743812;
    property R: Double dispid 1610743814;
    property I: Double dispid 1610743816;
    property SiteClass: IRobotSELFSeismic_ASCE_7_10_SiteClassType dispid 1610743818;
    property StructureTypeX: IRobotSELFSeismic_ASCE_7_10_StructureType dispid 1610743820;
    property StructureTypeY: IRobotSELFSeismic_ASCE_7_10_StructureType dispid 1610743822;
    property TBaseValueX: Double dispid 1610743824;
    property TBaseValueY: Double dispid 1610743826;
  end;

// *********************************************************************//
// Interface: IRobotSELFSeismic_EC_8_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {197AD2E7-89FA-4F92-AF89-F138608AE446}
// *********************************************************************//
  IRobotSELFSeismic_EC_8_Params = interface(IDispatch)
    ['{197AD2E7-89FA-4F92-AF89-F138608AE446}']
    function Get_StructureTypeX: IRobotSELFSeismic_EC_8_StructureType; safecall;
    procedure Set_StructureTypeX(ret: IRobotSELFSeismic_EC_8_StructureType); safecall;
    function Get_StructureTypeY: IRobotSELFSeismic_EC_8_StructureType; safecall;
    procedure Set_StructureTypeY(ret: IRobotSELFSeismic_EC_8_StructureType); safecall;
    function Get_Ag: Double; safecall;
    procedure Set_Ag(ret: Double); safecall;
    function Get_Q: Double; safecall;
    procedure Set_Q(ret: Double); safecall;
    function Get_Beta: Double; safecall;
    procedure Set_Beta(ret: Double); safecall;
    function Get_SiteClass: IRobotSELFSeismic_EC_8_SiteClass; safecall;
    procedure Set_SiteClass(ret: IRobotSELFSeismic_EC_8_SiteClass); safecall;
    function Get_SpectrumType: IRobotSELFSeismic_EC_8_SpectrumType; safecall;
    procedure Set_SpectrumType(ret: IRobotSELFSeismic_EC_8_SpectrumType); safecall;
    procedure SiteClassEnvelopeCheck(_siteClass: IRobotSELFSeismic_EC_8_SiteClass; _check: WordBool); safecall;
    function SiteClassEnvelopeIsChecked(_siteClass: IRobotSELFSeismic_EC_8_SiteClass): WordBool; safecall;
    property StructureTypeX: IRobotSELFSeismic_EC_8_StructureType read Get_StructureTypeX write Set_StructureTypeX;
    property StructureTypeY: IRobotSELFSeismic_EC_8_StructureType read Get_StructureTypeY write Set_StructureTypeY;
    property Ag: Double read Get_Ag write Set_Ag;
    property Q: Double read Get_Q write Set_Q;
    property Beta: Double read Get_Beta write Set_Beta;
    property SiteClass: IRobotSELFSeismic_EC_8_SiteClass read Get_SiteClass write Set_SiteClass;
    property SpectrumType: IRobotSELFSeismic_EC_8_SpectrumType read Get_SpectrumType write Set_SpectrumType;
  end;

// *********************************************************************//
// DispIntf:  IRobotSELFSeismic_EC_8_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {197AD2E7-89FA-4F92-AF89-F138608AE446}
// *********************************************************************//
  IRobotSELFSeismic_EC_8_ParamsDisp = dispinterface
    ['{197AD2E7-89FA-4F92-AF89-F138608AE446}']
    property StructureTypeX: IRobotSELFSeismic_EC_8_StructureType dispid 1610743808;
    property StructureTypeY: IRobotSELFSeismic_EC_8_StructureType dispid 1610743810;
    property Ag: Double dispid 1610743812;
    property Q: Double dispid 1610743814;
    property Beta: Double dispid 1610743816;
    property SiteClass: IRobotSELFSeismic_EC_8_SiteClass dispid 1610743818;
    property SpectrumType: IRobotSELFSeismic_EC_8_SpectrumType dispid 1610743820;
    procedure SiteClassEnvelopeCheck(_siteClass: IRobotSELFSeismic_EC_8_SiteClass; _check: WordBool); dispid 1610743822;
    function SiteClassEnvelopeIsChecked(_siteClass: IRobotSELFSeismic_EC_8_SiteClass): WordBool; dispid 1610743823;
  end;

// *********************************************************************//
// Interface: IRobotSELFSeismic_AS_1170_4_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C0218450-9B38-4463-A661-EBDD00A504EB}
// *********************************************************************//
  IRobotSELFSeismic_AS_1170_4_Params = interface(IDispatch)
    ['{C0218450-9B38-4463-A661-EBDD00A504EB}']
    function Get_Sp: Double; safecall;
    procedure Set_Sp(ret: Double); safecall;
    function Get_Mi: Double; safecall;
    procedure Set_Mi(ret: Double); safecall;
    function Get_Kp: Double; safecall;
    procedure Set_Kp(ret: Double); safecall;
    function Get_SoilCategory: IRobotSELFSeismic_AS_1170_4_SoilCategoryType; safecall;
    procedure Set_SoilCategory(ret: IRobotSELFSeismic_AS_1170_4_SoilCategoryType); safecall;
    function Get_Z: Double; safecall;
    procedure Set_Z(ret: Double); safecall;
    function Get_StructureTypeX: IRobotSELFSeismic_AS_1170_4_StructureType; safecall;
    procedure Set_StructureTypeX(ret: IRobotSELFSeismic_AS_1170_4_StructureType); safecall;
    function Get_StructureTypeY: IRobotSELFSeismic_AS_1170_4_StructureType; safecall;
    procedure Set_StructureTypeY(ret: IRobotSELFSeismic_AS_1170_4_StructureType); safecall;
    function Get_Probability: IRobotSELFSeismic_AS_1170_4_ProbabilityType; safecall;
    procedure Set_Probability(ret: IRobotSELFSeismic_AS_1170_4_ProbabilityType); safecall;
    property Sp: Double read Get_Sp write Set_Sp;
    property Mi: Double read Get_Mi write Set_Mi;
    property Kp: Double read Get_Kp write Set_Kp;
    property SoilCategory: IRobotSELFSeismic_AS_1170_4_SoilCategoryType read Get_SoilCategory write Set_SoilCategory;
    property Z: Double read Get_Z write Set_Z;
    property StructureTypeX: IRobotSELFSeismic_AS_1170_4_StructureType read Get_StructureTypeX write Set_StructureTypeX;
    property StructureTypeY: IRobotSELFSeismic_AS_1170_4_StructureType read Get_StructureTypeY write Set_StructureTypeY;
    property Probability: IRobotSELFSeismic_AS_1170_4_ProbabilityType read Get_Probability write Set_Probability;
  end;

// *********************************************************************//
// DispIntf:  IRobotSELFSeismic_AS_1170_4_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C0218450-9B38-4463-A661-EBDD00A504EB}
// *********************************************************************//
  IRobotSELFSeismic_AS_1170_4_ParamsDisp = dispinterface
    ['{C0218450-9B38-4463-A661-EBDD00A504EB}']
    property Sp: Double dispid 1610743808;
    property Mi: Double dispid 1610743810;
    property Kp: Double dispid 1610743812;
    property SoilCategory: IRobotSELFSeismic_AS_1170_4_SoilCategoryType dispid 1610743814;
    property Z: Double dispid 1610743816;
    property StructureTypeX: IRobotSELFSeismic_AS_1170_4_StructureType dispid 1610743818;
    property StructureTypeY: IRobotSELFSeismic_AS_1170_4_StructureType dispid 1610743820;
    property Probability: IRobotSELFSeismic_AS_1170_4_ProbabilityType dispid 1610743822;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_EC8_General_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AEBB919D-1A75-4FA8-BDC3-A71E88DFF63A}
// *********************************************************************//
  IRobotSeismicAnalysis_EC8_General_Params = interface(IDispatch)
    ['{AEBB919D-1A75-4FA8-BDC3-A71E88DFF63A}']
    function Get_BehaviorFactor: Double; safecall;
    procedure Set_BehaviorFactor(ret: Double); safecall;
    function Get_Direction: IRobotGeoPoint3D; safecall;
    procedure Set_Direction(const ret: IRobotGeoPoint3D); safecall;
    function Get_DirectionType: IRobotSeismicAnalysisDirectionType; safecall;
    procedure Set_DirectionType(ret: IRobotSeismicAnalysisDirectionType); safecall;
    function Get_Filter: IRobotCaseAnalysisModesFilter; safecall;
    procedure Set_Filter(const ret: IRobotCaseAnalysisModesFilter); safecall;
    function Get_Spectrum: IRobotSeismicAnalysisSpectrumType; safecall;
    procedure Set_Spectrum(ret: IRobotSeismicAnalysisSpectrumType); safecall;
    function Get_ResidualMode: IRobotSeismicResidualMode; safecall;
    function Get_Ag: Double; safecall;
    procedure Set_Ag(ret: Double); safecall;
    function Get_S: Double; safecall;
    procedure Set_S(ret: Double); safecall;
    function Get_B: Double; safecall;
    procedure Set_B(ret: Double); safecall;
    function Get_Tb: Double; safecall;
    procedure Set_Tb(ret: Double); safecall;
    function Get_Tc: Double; safecall;
    procedure Set_Tc(ret: Double); safecall;
    function Get_Td: Double; safecall;
    procedure Set_Td(ret: Double); safecall;
    function Get_ExcitationDir: IRobotDynamicAnalysisExcitationDirection; safecall;
    property BehaviorFactor: Double read Get_BehaviorFactor write Set_BehaviorFactor;
    property Direction: IRobotGeoPoint3D read Get_Direction write Set_Direction;
    property DirectionType: IRobotSeismicAnalysisDirectionType read Get_DirectionType write Set_DirectionType;
    property Filter: IRobotCaseAnalysisModesFilter read Get_Filter write Set_Filter;
    property Spectrum: IRobotSeismicAnalysisSpectrumType read Get_Spectrum write Set_Spectrum;
    property ResidualMode: IRobotSeismicResidualMode read Get_ResidualMode;
    property Ag: Double read Get_Ag write Set_Ag;
    property S: Double read Get_S write Set_S;
    property B: Double read Get_B write Set_B;
    property Tb: Double read Get_Tb write Set_Tb;
    property Tc: Double read Get_Tc write Set_Tc;
    property Td: Double read Get_Td write Set_Td;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection read Get_ExcitationDir;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_EC8_General_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AEBB919D-1A75-4FA8-BDC3-A71E88DFF63A}
// *********************************************************************//
  IRobotSeismicAnalysis_EC8_General_ParamsDisp = dispinterface
    ['{AEBB919D-1A75-4FA8-BDC3-A71E88DFF63A}']
    property BehaviorFactor: Double dispid 1610743808;
    property Direction: IRobotGeoPoint3D dispid 1610743810;
    property DirectionType: IRobotSeismicAnalysisDirectionType dispid 1610743812;
    property Filter: IRobotCaseAnalysisModesFilter dispid 1610743814;
    property Spectrum: IRobotSeismicAnalysisSpectrumType dispid 1610743816;
    property ResidualMode: IRobotSeismicResidualMode readonly dispid 1610743818;
    property Ag: Double dispid 1610743819;
    property S: Double dispid 1610743821;
    property B: Double dispid 1610743823;
    property Tb: Double dispid 1610743825;
    property Tc: Double dispid 1610743827;
    property Td: Double dispid 1610743829;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection readonly dispid 1610743831;
  end;

// *********************************************************************//
// Interface: IRobotSeismicAnalysis_EC8_Params
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A824F3F8-74A9-4F83-81B1-9D8C1E7F2D6A}
// *********************************************************************//
  IRobotSeismicAnalysis_EC8_Params = interface(IDispatch)
    ['{A824F3F8-74A9-4F83-81B1-9D8C1E7F2D6A}']
    function Get_BehaviorFactor: Double; safecall;
    procedure Set_BehaviorFactor(ret: Double); safecall;
    function Get_Direction: IRobotGeoPoint3D; safecall;
    procedure Set_Direction(const ret: IRobotGeoPoint3D); safecall;
    function Get_DirectionType: IRobotSeismicAnalysisDirectionType; safecall;
    procedure Set_DirectionType(ret: IRobotSeismicAnalysisDirectionType); safecall;
    function Get_Filter: IRobotCaseAnalysisModesFilter; safecall;
    procedure Set_Filter(const ret: IRobotCaseAnalysisModesFilter); safecall;
    function Get_Spectrum: IRobotSeismicAnalysisSpectrumType; safecall;
    procedure Set_Spectrum(ret: IRobotSeismicAnalysisSpectrumType); safecall;
    function Get_ResidualMode: IRobotSeismicResidualMode; safecall;
    function Get_Ag: Double; safecall;
    procedure Set_Ag(ret: Double); safecall;
    function Get_GroundType: IRobotSeismicAnalysis_EC8_GroundType; safecall;
    procedure Set_GroundType(ret: IRobotSeismicAnalysis_EC8_GroundType); safecall;
    function Get_SpectrumType: IRobotSeismicAnalysis_EC8_SpectrumType; safecall;
    procedure Set_SpectrumType(ret: IRobotSeismicAnalysis_EC8_SpectrumType); safecall;
    function Get_ExcitationDir: IRobotDynamicAnalysisExcitationDirection; safecall;
    property BehaviorFactor: Double read Get_BehaviorFactor write Set_BehaviorFactor;
    property Direction: IRobotGeoPoint3D read Get_Direction write Set_Direction;
    property DirectionType: IRobotSeismicAnalysisDirectionType read Get_DirectionType write Set_DirectionType;
    property Filter: IRobotCaseAnalysisModesFilter read Get_Filter write Set_Filter;
    property Spectrum: IRobotSeismicAnalysisSpectrumType read Get_Spectrum write Set_Spectrum;
    property ResidualMode: IRobotSeismicResidualMode read Get_ResidualMode;
    property Ag: Double read Get_Ag write Set_Ag;
    property GroundType: IRobotSeismicAnalysis_EC8_GroundType read Get_GroundType write Set_GroundType;
    property SpectrumType: IRobotSeismicAnalysis_EC8_SpectrumType read Get_SpectrumType write Set_SpectrumType;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection read Get_ExcitationDir;
  end;

// *********************************************************************//
// DispIntf:  IRobotSeismicAnalysis_EC8_ParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A824F3F8-74A9-4F83-81B1-9D8C1E7F2D6A}
// *********************************************************************//
  IRobotSeismicAnalysis_EC8_ParamsDisp = dispinterface
    ['{A824F3F8-74A9-4F83-81B1-9D8C1E7F2D6A}']
    property BehaviorFactor: Double dispid 1610743808;
    property Direction: IRobotGeoPoint3D dispid 1610743810;
    property DirectionType: IRobotSeismicAnalysisDirectionType dispid 1610743812;
    property Filter: IRobotCaseAnalysisModesFilter dispid 1610743814;
    property Spectrum: IRobotSeismicAnalysisSpectrumType dispid 1610743816;
    property ResidualMode: IRobotSeismicResidualMode readonly dispid 1610743818;
    property Ag: Double dispid 1610743819;
    property GroundType: IRobotSeismicAnalysis_EC8_GroundType dispid 1610743821;
    property SpectrumType: IRobotSeismicAnalysis_EC8_SpectrumType dispid 1610743823;
    property ExcitationDir: IRobotDynamicAnalysisExcitationDirection readonly dispid 1610743825;
  end;

// *********************************************************************//
// DispIntf:  _IRobotCalcEngineEvents
// Flags:     (4096) Dispatchable
// GUID:      {8ED965EE-DCEE-4498-99BC-911962BA4805}
// *********************************************************************//
  _IRobotCalcEngineEvents = dispinterface
    ['{8ED965EE-DCEE-4498-99BC-911962BA4805}']
    procedure CalcNotify(const strText: WideString; nType: Integer; out bHandled: WordBool; 
                         out nReturnValue: Integer); dispid 1;
    procedure CalcNotifyEx(nCaller: Integer; const strText: WideString; 
                           const strFullText: WideString; const strCaption: WideString; 
                           nType: Integer; nDataType: Integer; const strSelection: WideString; 
                           out bHandled: WordBool; out nReturnValue: Integer); dispid 2;
    procedure CalcMessage(_msgSource: IRobotCalcMessageSource; 
                          _msgSeverity: IRobotCalcMessageSeverityLevel; _msgId: Integer; 
                          const _msgText: WideString; _objType: IRobotObjectType; 
                          const _objSel: WideString); dispid 3;
  end;

// *********************************************************************//
// DispIntf:  _IRobotPreferencesEvents
// Flags:     (4096) Dispatchable
// GUID:      {1E29F219-076A-4979-A9C8-F24CACFF814A}
// *********************************************************************//
  _IRobotPreferencesEvents = dispinterface
    ['{1E29F219-076A-4979-A9C8-F24CACFF814A}']
    procedure OnDialogOK; dispid 1;
  end;

// *********************************************************************//
// Interface: IRobotPreferences
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56AFE680-C294-11D3-B7B3-0050DA76755E}
// *********************************************************************//
  IRobotPreferences = interface(IDispatch)
    ['{56AFE680-C294-11D3-B7B3-0050DA76755E}']
    function GetDirectory(robot_dir: IRobotDirectory): WideString; safecall;
    function GetLanguage(lang_id: IRobotLanguage): SYSINT; safecall;
    function Get_OpenGL: WordBool; safecall;
    procedure Set_OpenGL(ret: WordBool); safecall;
    function Get_Multiprocessing: WordBool; safecall;
    procedure Set_Multiprocessing(ret: WordBool); safecall;
    function Get_CloudCalculationsEnabled: WordBool; safecall;
    procedure Set_CloudCalculationsEnabled(ret: WordBool); safecall;
    function Get_CalculationsType: IRobotCalculationsType; safecall;
    procedure Set_CalculationsType(ret: IRobotCalculationsType); safecall;
    property OpenGL: WordBool read Get_OpenGL write Set_OpenGL;
    property Multiprocessing: WordBool read Get_Multiprocessing write Set_Multiprocessing;
    property CloudCalculationsEnabled: WordBool read Get_CloudCalculationsEnabled write Set_CloudCalculationsEnabled;
    property CalculationsType: IRobotCalculationsType read Get_CalculationsType write Set_CalculationsType;
  end;

// *********************************************************************//
// DispIntf:  IRobotPreferencesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56AFE680-C294-11D3-B7B3-0050DA76755E}
// *********************************************************************//
  IRobotPreferencesDisp = dispinterface
    ['{56AFE680-C294-11D3-B7B3-0050DA76755E}']
    function GetDirectory(robot_dir: IRobotDirectory): WideString; dispid 1610743808;
    function GetLanguage(lang_id: IRobotLanguage): SYSINT; dispid 1610743809;
    property OpenGL: WordBool dispid 1610743810;
    property Multiprocessing: WordBool dispid 1610743812;
    property CloudCalculationsEnabled: WordBool dispid 1610743814;
    property CalculationsType: IRobotCalculationsType dispid 1610743816;
  end;

// *********************************************************************//
// DispIntf:  _IRobotProjectPreferencesEvents
// Flags:     (4096) Dispatchable
// GUID:      {5DA67861-5AC1-4713-BFE8-0615CC957FF6}
// *********************************************************************//
  _IRobotProjectPreferencesEvents = dispinterface
    ['{5DA67861-5AC1-4713-BFE8-0615CC957FF6}']
    procedure OnDialogOK; dispid 1;
  end;

// *********************************************************************//
// Interface: IRobotObjectsArray
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C8CC8D80-BC4B-11D3-B7AD-0050DA76755E}
// *********************************************************************//
  IRobotObjectsArray = interface(IDispatch)
    ['{C8CC8D80-BC4B-11D3-B7AD-0050DA76755E}']
    function Get_Count: Integer; safecall;
    procedure SetSize(Count: Integer); safecall;
    procedure Set_(idx: Integer; const Object_: IDispatch); safecall;
    function Get(idx: Integer): IDispatch; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotObjectsArrayDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C8CC8D80-BC4B-11D3-B7AD-0050DA76755E}
// *********************************************************************//
  IRobotObjectsArrayDisp = dispinterface
    ['{C8CC8D80-BC4B-11D3-B7AD-0050DA76755E}']
    property Count: Integer readonly dispid 1610743808;
    procedure SetSize(Count: Integer); dispid 1610743809;
    procedure Set_(idx: Integer; const Object_: IDispatch); dispid 1610743810;
    function Get(idx: Integer): IDispatch; dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotWindow
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0478BD22-063F-11D4-B7EE-0050DA76755E}
// *********************************************************************//
  IRobotWindow = interface(IDispatch)
    ['{0478BD22-063F-11D4-B7EE-0050DA76755E}']
    function Get_State: IRobotWindowState; safecall;
    procedure Set_State(ret: IRobotWindowState); safecall;
    function Get_IsActive: Integer; safecall;
    procedure Activate; safecall;
    function Get_Handle: Integer; safecall;
    function Get_Caption: WideString; safecall;
    procedure Set_Caption(const ret: WideString); safecall;
    procedure SendMessage(_msg_id: Integer; _w_param: Integer; _l_param: Integer); safecall;
    property State: IRobotWindowState read Get_State write Set_State;
    property IsActive: Integer read Get_IsActive;
    property Handle: Integer read Get_Handle;
    property Caption: WideString read Get_Caption write Set_Caption;
  end;

// *********************************************************************//
// DispIntf:  IRobotWindowDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0478BD22-063F-11D4-B7EE-0050DA76755E}
// *********************************************************************//
  IRobotWindowDisp = dispinterface
    ['{0478BD22-063F-11D4-B7EE-0050DA76755E}']
    property State: IRobotWindowState dispid 1610743808;
    property IsActive: Integer readonly dispid 1610743810;
    procedure Activate; dispid 1610743811;
    property Handle: Integer readonly dispid 1610743812;
    property Caption: WideString dispid 1610743813;
    procedure SendMessage(_msg_id: Integer; _w_param: Integer; _l_param: Integer); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotSerializable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4EDD84B8-6C15-4A27-995D-80220749C8CC}
// *********************************************************************//
  IRobotSerializable = interface(IDispatch)
    ['{4EDD84B8-6C15-4A27-995D-80220749C8CC}']
    function Write(const _dest_stream: IUnknown): WordBool; safecall;
    function Read(const _source_stream: IUnknown): WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotSerializableDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4EDD84B8-6C15-4A27-995D-80220749C8CC}
// *********************************************************************//
  IRobotSerializableDisp = dispinterface
    ['{4EDD84B8-6C15-4A27-995D-80220749C8CC}']
    function Write(const _dest_stream: IUnknown): WordBool; dispid 1610743808;
    function Read(const _source_stream: IUnknown): WordBool; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotNumbersDictionary
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {49EFBD7B-C6F4-41EA-9C67-3B03DDA66F7A}
// *********************************************************************//
  IRobotNumbersDictionary = interface(IDispatch)
    ['{49EFBD7B-C6F4-41EA-9C67-3B03DDA66F7A}']
    function Get_Count: Integer; safecall;
    procedure Set_(_key: Integer; _value: Integer); safecall;
    function Find(_key: Integer): Integer; safecall;
    procedure Delete(_key: Integer); safecall;
    procedure Get(_idx: Integer; out _key: Integer; out _value: Integer); safecall;
    function FindGet(_key: Integer; out _value: Integer): Integer; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotNumbersDictionaryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {49EFBD7B-C6F4-41EA-9C67-3B03DDA66F7A}
// *********************************************************************//
  IRobotNumbersDictionaryDisp = dispinterface
    ['{49EFBD7B-C6F4-41EA-9C67-3B03DDA66F7A}']
    property Count: Integer readonly dispid 1610743808;
    procedure Set_(_key: Integer; _value: Integer); dispid 1610743809;
    function Find(_key: Integer): Integer; dispid 1610743810;
    procedure Delete(_key: Integer); dispid 1610743811;
    procedure Get(_idx: Integer; out _key: Integer; out _value: Integer); dispid 1610743812;
    function FindGet(_key: Integer; out _value: Integer): Integer; dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotGeoSegment
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306731-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotGeoSegment = interface(IDispatch)
    ['{3E306731-C804-11D3-B7B9-0050DA76755E}']
    function Get_type_: IRobotGeoSegmentType; safecall;
    function Get_P1: IRobotGeoPoint3D; safecall;
    procedure Set_P1(const ret: IRobotGeoPoint3D); safecall;
    property type_: IRobotGeoSegmentType read Get_type_;
    property P1: IRobotGeoPoint3D read Get_P1 write Set_P1;
  end;

// *********************************************************************//
// DispIntf:  IRobotGeoSegmentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306731-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotGeoSegmentDisp = dispinterface
    ['{3E306731-C804-11D3-B7B9-0050DA76755E}']
    property type_: IRobotGeoSegmentType readonly dispid 1610743808;
    property P1: IRobotGeoPoint3D dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotGeoSegmentLine
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306732-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotGeoSegmentLine = interface(IRobotGeoSegment)
    ['{3E306732-C804-11D3-B7B9-0050DA76755E}']
    function Get_NDiv: Integer; safecall;
    procedure Set_NDiv(ret: Integer); safecall;
    function Get_Round: Integer; safecall;
    procedure Set_Round(ret: Integer); safecall;
    function Get_Radius: Double; safecall;
    procedure Set_Radius(ret: Double); safecall;
    function Get_Div_: IRobotGeoCurveDiv; safecall;
    procedure Set_Div_(const ret: IRobotGeoCurveDiv); safecall;
    property NDiv: Integer read Get_NDiv write Set_NDiv;
    property Round: Integer read Get_Round write Set_Round;
    property Radius: Double read Get_Radius write Set_Radius;
    property Div_: IRobotGeoCurveDiv read Get_Div_ write Set_Div_;
  end;

// *********************************************************************//
// DispIntf:  IRobotGeoSegmentLineDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306732-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotGeoSegmentLineDisp = dispinterface
    ['{3E306732-C804-11D3-B7B9-0050DA76755E}']
    property NDiv: Integer dispid 1610809344;
    property Round: Integer dispid 1610809346;
    property Radius: Double dispid 1610809348;
    property Div_: IRobotGeoCurveDiv dispid 1610809350;
    property type_: IRobotGeoSegmentType readonly dispid 1610743808;
    property P1: IRobotGeoPoint3D dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotGeoSegmentArc
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306733-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotGeoSegmentArc = interface(IRobotGeoSegment)
    ['{3E306733-C804-11D3-B7B9-0050DA76755E}']
    function Get_P2: IRobotGeoPoint3D; safecall;
    procedure Set_P2(const ret: IRobotGeoPoint3D); safecall;
    function Get_Div_: IRobotGeoCurveDiv; safecall;
    procedure Set_Div_(const ret: IRobotGeoCurveDiv); safecall;
    procedure Set_(const P1: IRobotGeoPoint3D; const P2: IRobotGeoPoint3D); safecall;
    property P2: IRobotGeoPoint3D read Get_P2 write Set_P2;
    property Div_: IRobotGeoCurveDiv read Get_Div_ write Set_Div_;
  end;

// *********************************************************************//
// DispIntf:  IRobotGeoSegmentArcDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306733-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotGeoSegmentArcDisp = dispinterface
    ['{3E306733-C804-11D3-B7B9-0050DA76755E}']
    property P2: IRobotGeoPoint3D dispid 1610809344;
    property Div_: IRobotGeoCurveDiv dispid 1610809346;
    procedure Set_(const P1: IRobotGeoPoint3D; const P2: IRobotGeoPoint3D); dispid 1610809348;
    property type_: IRobotGeoSegmentType readonly dispid 1610743808;
    property P1: IRobotGeoPoint3D dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotGeoPolyline
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306735-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotGeoPolyline = interface(IRobotGeoObject)
    ['{3E306735-C804-11D3-B7B9-0050DA76755E}']
    function Get_Segments: IRobotCollection; safecall;
    procedure Clear; safecall;
    procedure Add(const segment: IRobotGeoSegment); safecall;
    property Segments: IRobotCollection read Get_Segments;
  end;

// *********************************************************************//
// DispIntf:  IRobotGeoPolylineDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306735-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotGeoPolylineDisp = dispinterface
    ['{3E306735-C804-11D3-B7B9-0050DA76755E}']
    property Segments: IRobotCollection readonly dispid 1610809344;
    procedure Clear; dispid 1610809345;
    procedure Add(const segment: IRobotGeoSegment); dispid 1610809346;
    property type_: IRobotGeoObjectType readonly dispid 1610743808;
    procedure Initialize; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotGeoContour
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306736-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotGeoContour = interface(IRobotGeoObject)
    ['{3E306736-C804-11D3-B7B9-0050DA76755E}']
    function Get_Segments: IRobotCollection; safecall;
    procedure Clear; safecall;
    procedure Add(const segment: IRobotGeoSegment); safecall;
    property Segments: IRobotCollection read Get_Segments;
  end;

// *********************************************************************//
// DispIntf:  IRobotGeoContourDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306736-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotGeoContourDisp = dispinterface
    ['{3E306736-C804-11D3-B7B9-0050DA76755E}']
    property Segments: IRobotCollection readonly dispid 1610809344;
    procedure Clear; dispid 1610809345;
    procedure Add(const segment: IRobotGeoSegment); dispid 1610809346;
    property type_: IRobotGeoObjectType readonly dispid 1610743808;
    procedure Initialize; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotGeoArc
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306737-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotGeoArc = interface(IRobotGeoObject)
    ['{3E306737-C804-11D3-B7B9-0050DA76755E}']
    function Get_P1: IRobotGeoPoint3D; safecall;
    procedure Set_P1(const ret: IRobotGeoPoint3D); safecall;
    function Get_P2: IRobotGeoPoint3D; safecall;
    procedure Set_P2(const ret: IRobotGeoPoint3D); safecall;
    function Get_P3: IRobotGeoPoint3D; safecall;
    procedure Set_P3(const ret: IRobotGeoPoint3D); safecall;
    property P1: IRobotGeoPoint3D read Get_P1 write Set_P1;
    property P2: IRobotGeoPoint3D read Get_P2 write Set_P2;
    property P3: IRobotGeoPoint3D read Get_P3 write Set_P3;
  end;

// *********************************************************************//
// DispIntf:  IRobotGeoArcDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306737-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotGeoArcDisp = dispinterface
    ['{3E306737-C804-11D3-B7B9-0050DA76755E}']
    property P1: IRobotGeoPoint3D dispid 1610809344;
    property P2: IRobotGeoPoint3D dispid 1610809346;
    property P3: IRobotGeoPoint3D dispid 1610809348;
    property type_: IRobotGeoObjectType readonly dispid 1610743808;
    procedure Initialize; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotGeoCircle
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306738-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotGeoCircle = interface(IRobotGeoObject)
    ['{3E306738-C804-11D3-B7B9-0050DA76755E}']
    function Get_P1: IRobotGeoPoint3D; safecall;
    procedure Set_P1(const ret: IRobotGeoPoint3D); safecall;
    function Get_P2: IRobotGeoPoint3D; safecall;
    procedure Set_P2(const ret: IRobotGeoPoint3D); safecall;
    function Get_P3: IRobotGeoPoint3D; safecall;
    procedure Set_P3(const ret: IRobotGeoPoint3D); safecall;
    function Get_PC: IRobotGeoPoint3D; safecall;
    property P1: IRobotGeoPoint3D read Get_P1 write Set_P1;
    property P2: IRobotGeoPoint3D read Get_P2 write Set_P2;
    property P3: IRobotGeoPoint3D read Get_P3 write Set_P3;
    property PC: IRobotGeoPoint3D read Get_PC;
  end;

// *********************************************************************//
// DispIntf:  IRobotGeoCircleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306738-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotGeoCircleDisp = dispinterface
    ['{3E306738-C804-11D3-B7B9-0050DA76755E}']
    property P1: IRobotGeoPoint3D dispid 1610809344;
    property P2: IRobotGeoPoint3D dispid 1610809346;
    property P3: IRobotGeoPoint3D dispid 1610809348;
    property PC: IRobotGeoPoint3D readonly dispid 1610809350;
    property type_: IRobotGeoObjectType readonly dispid 1610743808;
    procedure Initialize; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotObjModifExtrusion
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306749-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjModifExtrusion = interface(IRobotObjModification)
    ['{3E306749-C804-11D3-B7B9-0050DA76755E}']
    function Get_Vector: IRobotGeoPoint3D; safecall;
    procedure Set_Vector(const ret: IRobotGeoPoint3D); safecall;
    property Vector: IRobotGeoPoint3D read Get_Vector write Set_Vector;
  end;

// *********************************************************************//
// DispIntf:  IRobotObjModifExtrusionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306749-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjModifExtrusionDisp = dispinterface
    ['{3E306749-C804-11D3-B7B9-0050DA76755E}']
    property Vector: IRobotGeoPoint3D dispid 1610809344;
    property type_: IRobotObjModificationType readonly dispid 1610743808;
    property Operations: IRobotCollection readonly dispid 1610743809;
    property Filled: Integer dispid 1610743810;
    property NDiv: Integer dispid 1610743812;
    procedure Clear; dispid 1610743814;
    procedure Add(const operation: IRobotObjOperation); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotObjModifLathe
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E30674A-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjModifLathe = interface(IRobotObjModification)
    ['{3E30674A-C804-11D3-B7B9-0050DA76755E}']
    function Get_AxsP1: IRobotGeoPoint3D; safecall;
    procedure Set_AxsP1(const ret: IRobotGeoPoint3D); safecall;
    function Get_AxsP2: IRobotGeoPoint3D; safecall;
    procedure Set_AxsP2(const ret: IRobotGeoPoint3D); safecall;
    function Get_Angle: Double; safecall;
    procedure Set_Angle(ret: Double); safecall;
    property AxsP1: IRobotGeoPoint3D read Get_AxsP1 write Set_AxsP1;
    property AxsP2: IRobotGeoPoint3D read Get_AxsP2 write Set_AxsP2;
    property Angle: Double read Get_Angle write Set_Angle;
  end;

// *********************************************************************//
// DispIntf:  IRobotObjModifLatheDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E30674A-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjModifLatheDisp = dispinterface
    ['{3E30674A-C804-11D3-B7B9-0050DA76755E}']
    property AxsP1: IRobotGeoPoint3D dispid 1610809344;
    property AxsP2: IRobotGeoPoint3D dispid 1610809346;
    property Angle: Double dispid 1610809348;
    property type_: IRobotObjModificationType readonly dispid 1610743808;
    property Operations: IRobotCollection readonly dispid 1610743809;
    property Filled: Integer dispid 1610743810;
    property NDiv: Integer dispid 1610743812;
    procedure Clear; dispid 1610743814;
    procedure Add(const operation: IRobotObjOperation); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotObjModifPyramid
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E30674B-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjModifPyramid = interface(IRobotObjModification)
    ['{3E30674B-C804-11D3-B7B9-0050DA76755E}']
    function Get_Points: IRobotCollection; safecall;
    function Get_Factors: IRobotCollection; safecall;
    procedure AddPoint(const Point: IRobotGeoPoint3D; const _factor: IRobotGeoPoint3D); safecall;
    procedure ClearPoints; safecall;
    property Points: IRobotCollection read Get_Points;
    property Factors: IRobotCollection read Get_Factors;
  end;

// *********************************************************************//
// DispIntf:  IRobotObjModifPyramidDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E30674B-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjModifPyramidDisp = dispinterface
    ['{3E30674B-C804-11D3-B7B9-0050DA76755E}']
    property Points: IRobotCollection readonly dispid 1610809344;
    property Factors: IRobotCollection readonly dispid 1610809345;
    procedure AddPoint(const Point: IRobotGeoPoint3D; const _factor: IRobotGeoPoint3D); dispid 1610809346;
    procedure ClearPoints; dispid 1610809347;
    property type_: IRobotObjModificationType readonly dispid 1610743808;
    property Operations: IRobotCollection readonly dispid 1610743809;
    property Filled: Integer dispid 1610743810;
    property NDiv: Integer dispid 1610743812;
    procedure Clear; dispid 1610743814;
    procedure Add(const operation: IRobotObjOperation); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotObjOperTranslation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E30674C-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjOperTranslation = interface(IRobotObjOperation)
    ['{3E30674C-C804-11D3-B7B9-0050DA76755E}']
    function Get_Vector: IRobotGeoPoint3D; safecall;
    procedure Set_Vector(const ret: IRobotGeoPoint3D); safecall;
    property Vector: IRobotGeoPoint3D read Get_Vector write Set_Vector;
  end;

// *********************************************************************//
// DispIntf:  IRobotObjOperTranslationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E30674C-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjOperTranslationDisp = dispinterface
    ['{3E30674C-C804-11D3-B7B9-0050DA76755E}']
    property Vector: IRobotGeoPoint3D dispid 1610809344;
    property type_: IRobotObjOperationType readonly dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRobotObjOperScaling
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E30674D-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjOperScaling = interface(IRobotObjOperation)
    ['{3E30674D-C804-11D3-B7B9-0050DA76755E}']
    function Get_Factor: IRobotGeoPoint3D; safecall;
    function Get_Center: IRobotGeoPoint3D; safecall;
    procedure Set_Center(const ret: IRobotGeoPoint3D); safecall;
    property Factor: IRobotGeoPoint3D read Get_Factor;
    property Center: IRobotGeoPoint3D read Get_Center write Set_Center;
  end;

// *********************************************************************//
// DispIntf:  IRobotObjOperScalingDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E30674D-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjOperScalingDisp = dispinterface
    ['{3E30674D-C804-11D3-B7B9-0050DA76755E}']
    property Factor: IRobotGeoPoint3D readonly dispid 1610809344;
    property Center: IRobotGeoPoint3D dispid 1610809345;
    property type_: IRobotObjOperationType readonly dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRobotObjOperRotation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E30674E-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjOperRotation = interface(IRobotObjOperation)
    ['{3E30674E-C804-11D3-B7B9-0050DA76755E}']
    function Get_AxsP1: IRobotGeoPoint3D; safecall;
    procedure Set_AxsP1(const ret: IRobotGeoPoint3D); safecall;
    function Get_AxsP2: IRobotGeoPoint3D; safecall;
    procedure Set_AxsP2(const ret: IRobotGeoPoint3D); safecall;
    function Get_Angle: Double; safecall;
    procedure Set_Angle(ret: Double); safecall;
    property AxsP1: IRobotGeoPoint3D read Get_AxsP1 write Set_AxsP1;
    property AxsP2: IRobotGeoPoint3D read Get_AxsP2 write Set_AxsP2;
    property Angle: Double read Get_Angle write Set_Angle;
  end;

// *********************************************************************//
// DispIntf:  IRobotObjOperRotationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E30674E-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjOperRotationDisp = dispinterface
    ['{3E30674E-C804-11D3-B7B9-0050DA76755E}']
    property AxsP1: IRobotGeoPoint3D dispid 1610809344;
    property AxsP2: IRobotGeoPoint3D dispid 1610809346;
    property Angle: Double dispid 1610809348;
    property type_: IRobotObjOperationType readonly dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRobotObjOperMeshing
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E30674F-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjOperMeshing = interface(IRobotObjOperation)
    ['{3E30674F-C804-11D3-B7B9-0050DA76755E}']
    function Get_Vectors: IRobotCollection; safecall;
    function Get_Points: IRobotCollection; safecall;
    procedure Clear; safecall;
    procedure Add(Point: Integer; const vect: IRobotGeoPoint3D); safecall;
    property Vectors: IRobotCollection read Get_Vectors;
    property Points: IRobotCollection read Get_Points;
  end;

// *********************************************************************//
// DispIntf:  IRobotObjOperMeshingDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E30674F-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjOperMeshingDisp = dispinterface
    ['{3E30674F-C804-11D3-B7B9-0050DA76755E}']
    property Vectors: IRobotCollection readonly dispid 1610809344;
    property Points: IRobotCollection readonly dispid 1610809345;
    procedure Clear; dispid 1610809346;
    procedure Add(Point: Integer; const vect: IRobotGeoPoint3D); dispid 1610809347;
    property type_: IRobotObjOperationType readonly dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRobotObjEdge
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306750-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjEdge = interface(IDispatch)
    ['{3E306750-C804-11D3-B7B9-0050DA76755E}']
    function Get_Path: IRobotCollection; safecall;
    function HasLabel(lab_type: IRobotLabelType): Integer; safecall;
    procedure SetLabel(lab_type: IRobotLabelType; const lab_name: WideString); safecall;
    function GetLabel(lab_type: IRobotLabelType): IRobotLabel; safecall;
    function GetLabelName(lab_type: IRobotLabelType): WideString; safecall;
    procedure RemoveLabel(lab_type: IRobotLabelType); safecall;
    function GetLabels: IRobotCollection; safecall;
    procedure DivideN(_n: Integer; _only_gen_nodes: WordBool); safecall;
    procedure Divide(_x: Double; _relative: WordBool; _only_gen_node: WordBool); safecall;
    procedure DivideByPlane(_val: Double; _axis: IRobotGeoCoordinateAxis; _only_gen_node: WordBool); safecall;
    property Path: IRobotCollection read Get_Path;
  end;

// *********************************************************************//
// DispIntf:  IRobotObjEdgeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306750-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRobotObjEdgeDisp = dispinterface
    ['{3E306750-C804-11D3-B7B9-0050DA76755E}']
    property Path: IRobotCollection readonly dispid 1610743808;
    function HasLabel(lab_type: IRobotLabelType): Integer; dispid 1610743809;
    procedure SetLabel(lab_type: IRobotLabelType; const lab_name: WideString); dispid 1610743810;
    function GetLabel(lab_type: IRobotLabelType): IRobotLabel; dispid 1610743811;
    function GetLabelName(lab_type: IRobotLabelType): WideString; dispid 1610743812;
    procedure RemoveLabel(lab_type: IRobotLabelType); dispid 1610743813;
    function GetLabels: IRobotCollection; dispid 1610743814;
    procedure DivideN(_n: Integer; _only_gen_nodes: WordBool); dispid 1610743815;
    procedure Divide(_x: Double; _relative: WordBool; _only_gen_node: WordBool); dispid 1610743816;
    procedure DivideByPlane(_val: Double; _axis: IRobotGeoCoordinateAxis; _only_gen_node: WordBool); dispid 1610743817;
  end;

// *********************************************************************//
// Interface: IRobotObjPart2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6E904722-C6AB-11D4-B890-0050DA76755E}
// *********************************************************************//
  IRobotObjPart2 = interface(IRobotObjPart)
    ['{6E904722-C6AB-11D4-B890-0050DA76755E}']
    function Get_FiniteElems: WideString; safecall;
    function Get_Nodes: WideString; safecall;
    function CalcArea: Double; safecall;
    function CalcVol: Double; safecall;
    property FiniteElems: WideString read Get_FiniteElems;
    property Nodes: WideString read Get_Nodes;
  end;

// *********************************************************************//
// DispIntf:  IRobotObjPart2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6E904722-C6AB-11D4-B890-0050DA76755E}
// *********************************************************************//
  IRobotObjPart2Disp = dispinterface
    ['{6E904722-C6AB-11D4-B890-0050DA76755E}']
    property FiniteElems: WideString readonly dispid 1610809344;
    property Nodes: WideString readonly dispid 1610809345;
    function CalcArea: Double; dispid 1610809346;
    function CalcVol: Double; dispid 1610809347;
    property Attribs: IRobotObjAttributes readonly dispid 1610743808;
    property type_: IRobotObjPartType readonly dispid 1610743809;
    function GetGeometry: IRobotGeoObject; dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotFiniteElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {78AFC7B2-C43A-11D4-B88D-0050DA76755E}
// *********************************************************************//
  IRobotFiniteElement = interface(IRobotDataObject)
    ['{78AFC7B2-C43A-11D4-B88D-0050DA76755E}']
    function Get_UniqueId: Integer; safecall;
    function Get_FeType: IRobotFiniteElementType; safecall;
    procedure Set_FeType(ret: IRobotFiniteElementType); safecall;
    function Get_Nodes: IRobotFiniteElementNodes; safecall;
    function Get_ObjectNumber: Integer; safecall;
    function Get_ObjectPartIdx: Integer; safecall;
    function Get_UserId: Integer; safecall;
    procedure Set_UserId(ret: Integer); safecall;
    function CalcArea: Double; safecall;
    property UniqueId: Integer read Get_UniqueId;
    property FeType: IRobotFiniteElementType read Get_FeType write Set_FeType;
    property Nodes: IRobotFiniteElementNodes read Get_Nodes;
    property ObjectNumber: Integer read Get_ObjectNumber;
    property ObjectPartIdx: Integer read Get_ObjectPartIdx;
    property UserId: Integer read Get_UserId write Set_UserId;
  end;

// *********************************************************************//
// DispIntf:  IRobotFiniteElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {78AFC7B2-C43A-11D4-B88D-0050DA76755E}
// *********************************************************************//
  IRobotFiniteElementDisp = dispinterface
    ['{78AFC7B2-C43A-11D4-B88D-0050DA76755E}']
    property UniqueId: Integer readonly dispid 1610809344;
    property FeType: IRobotFiniteElementType dispid 1610809345;
    property Nodes: IRobotFiniteElementNodes readonly dispid 1610809347;
    property ObjectNumber: Integer readonly dispid 1610809348;
    property ObjectPartIdx: Integer readonly dispid 1610809349;
    property UserId: Integer dispid 1610809350;
    function CalcArea: Double; dispid 1610809352;
    property Number: Integer readonly dispid 1610743808;
    procedure SetLabel(lab_type: IRobotLabelType; const lab_name: WideString); dispid 1610743809;
    function HasLabel(lab_type: IRobotLabelType): Integer; dispid 1610743810;
    procedure RemoveLabel(lab_type: IRobotLabelType); dispid 1610743811;
    function GetLabelName(lab_type: IRobotLabelType): WideString; dispid 1610743812;
    function GetLabel(lab_type: IRobotLabelType): IRobotLabel; dispid 1610743813;
    function GetLabels: IRobotCollection; dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotFiniteElementNodes
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {78AFC7B4-C43A-11D4-B88D-0050DA76755E}
// *********************************************************************//
  IRobotFiniteElementNodes = interface(IDispatch)
    ['{78AFC7B4-C43A-11D4-B88D-0050DA76755E}']
    function Get_Count: Integer; safecall;
    function Get(_node_idx: Integer): Integer; safecall;
    function Set_(_node_idx: Integer; _node_num: Integer): WordBool; safecall;
    procedure SetAll(const _nodes_array: IRobotNumbersArray); safecall;
    function GetAll: IRobotNumbersArray; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotFiniteElementNodesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {78AFC7B4-C43A-11D4-B88D-0050DA76755E}
// *********************************************************************//
  IRobotFiniteElementNodesDisp = dispinterface
    ['{78AFC7B4-C43A-11D4-B88D-0050DA76755E}']
    property Count: Integer readonly dispid 1610743808;
    function Get(_node_idx: Integer): Integer; dispid 1610743809;
    function Set_(_node_idx: Integer; _node_num: Integer): WordBool; dispid 1610743810;
    procedure SetAll(const _nodes_array: IRobotNumbersArray); dispid 1610743811;
    function GetAll: IRobotNumbersArray; dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotNonlinearHingeData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {11C10FCE-4D30-41A4-A0E5-D52E1EFC49AB}
// *********************************************************************//
  IRobotNonlinearHingeData = interface(IDispatch)
    ['{11C10FCE-4D30-41A4-A0E5-D52E1EFC49AB}']
    function Get_NormalStress: WordBool; safecall;
    procedure Set_NormalStress(ret: WordBool); safecall;
    function IsActive(_cmpnt: IRobotNonlinearHingeComponentType): WordBool; safecall;
    procedure SetModel(_cmpnt: IRobotNonlinearHingeComponentType; const _model: WideString); safecall;
    function GetModel(_cmpnt: IRobotNonlinearHingeComponentType): WideString; safecall;
    procedure Remove(_cmpnt: IRobotNonlinearHingeComponentType); safecall;
    property NormalStress: WordBool read Get_NormalStress write Set_NormalStress;
  end;

// *********************************************************************//
// DispIntf:  IRobotNonlinearHingeDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {11C10FCE-4D30-41A4-A0E5-D52E1EFC49AB}
// *********************************************************************//
  IRobotNonlinearHingeDataDisp = dispinterface
    ['{11C10FCE-4D30-41A4-A0E5-D52E1EFC49AB}']
    property NormalStress: WordBool dispid 1610743808;
    function IsActive(_cmpnt: IRobotNonlinearHingeComponentType): WordBool; dispid 1610743810;
    procedure SetModel(_cmpnt: IRobotNonlinearHingeComponentType; const _model: WideString); dispid 1610743811;
    function GetModel(_cmpnt: IRobotNonlinearHingeComponentType): WideString; dispid 1610743812;
    procedure Remove(_cmpnt: IRobotNonlinearHingeComponentType); dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotCladdingData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C13B447F-8C26-4DEB-B718-7CEB46EB1622}
// *********************************************************************//
  IRobotCladdingData = interface(IDispatch)
    ['{C13B447F-8C26-4DEB-B718-7CEB46EB1622}']
    function Get_type_: IRobotCladdingType; safecall;
    procedure Set_type_(ret: IRobotCladdingType); safecall;
    function Get_TrussBars: WordBool; safecall;
    procedure Set_TrussBars(ret: WordBool); safecall;
    function Get_Color: Integer; safecall;
    procedure Set_Color(ret: Integer); safecall;
    function Get_Method: IRobotCladdingMethod; safecall;
    procedure Set_Method(ret: IRobotCladdingMethod); safecall;
    property type_: IRobotCladdingType read Get_type_ write Set_type_;
    property TrussBars: WordBool read Get_TrussBars write Set_TrussBars;
    property Color: Integer read Get_Color write Set_Color;
    property Method: IRobotCladdingMethod read Get_Method write Set_Method;
  end;

// *********************************************************************//
// DispIntf:  IRobotCladdingDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C13B447F-8C26-4DEB-B718-7CEB46EB1622}
// *********************************************************************//
  IRobotCladdingDataDisp = dispinterface
    ['{C13B447F-8C26-4DEB-B718-7CEB46EB1622}']
    property type_: IRobotCladdingType dispid 1610743808;
    property TrussBars: WordBool dispid 1610743810;
    property Color: Integer dispid 1610743812;
    property Method: IRobotCladdingMethod dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotPanelCalcModelData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FC4BB70C-0027-4C2C-8708-FC28AE1B07CC}
// *********************************************************************//
  IRobotPanelCalcModelData = interface(IDispatch)
    ['{FC4BB70C-0027-4C2C-8708-FC28AE1B07CC}']
    function Get_FinElemType: IRobotPanelCalcModelFinElemType; safecall;
    procedure Set_FinElemType(ret: IRobotPanelCalcModelFinElemType); safecall;
    function Get_LoadTransfer: IRobotPanelCalcModelLoadTransfer; safecall;
    procedure Set_LoadTransfer(ret: IRobotPanelCalcModelLoadTransfer); safecall;
    function Get_Diaphragm: IRobotPanelCalcModelDiaphragm; safecall;
    procedure Set_Diaphragm(ret: IRobotPanelCalcModelDiaphragm); safecall;
    property FinElemType: IRobotPanelCalcModelFinElemType read Get_FinElemType write Set_FinElemType;
    property LoadTransfer: IRobotPanelCalcModelLoadTransfer read Get_LoadTransfer write Set_LoadTransfer;
    property Diaphragm: IRobotPanelCalcModelDiaphragm read Get_Diaphragm write Set_Diaphragm;
  end;

// *********************************************************************//
// DispIntf:  IRobotPanelCalcModelDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FC4BB70C-0027-4C2C-8708-FC28AE1B07CC}
// *********************************************************************//
  IRobotPanelCalcModelDataDisp = dispinterface
    ['{FC4BB70C-0027-4C2C-8708-FC28AE1B07CC}']
    property FinElemType: IRobotPanelCalcModelFinElemType dispid 1610743808;
    property LoadTransfer: IRobotPanelCalcModelLoadTransfer dispid 1610743810;
    property Diaphragm: IRobotPanelCalcModelDiaphragm dispid 1610743812;
  end;

// *********************************************************************//
// DispIntf:  _IRobotUnitMngrEvents
// Flags:     (4096) Dispatchable
// GUID:      {3247CD86-0BE0-4F9D-998D-9D4CA523F6A3}
// *********************************************************************//
  _IRobotUnitMngrEvents = dispinterface
    ['{3247CD86-0BE0-4F9D-998D-9D4CA523F6A3}']
    procedure UnitsChanged; dispid 1;
  end;

// *********************************************************************//
// Interface: IRobotUnitComplexData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5C186E73-22D9-4D69-A16F-E1A9B7BE5BA5}
// *********************************************************************//
  IRobotUnitComplexData = interface(IRobotUnitData)
    ['{5C186E73-22D9-4D69-A16F-E1A9B7BE5BA5}']
    function Get_Name2: WideString; safecall;
    procedure Set_Name2(const ret: WideString); safecall;
    property Name2: WideString read Get_Name2 write Set_Name2;
  end;

// *********************************************************************//
// DispIntf:  IRobotUnitComplexDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5C186E73-22D9-4D69-A16F-E1A9B7BE5BA5}
// *********************************************************************//
  IRobotUnitComplexDataDisp = dispinterface
    ['{5C186E73-22D9-4D69-A16F-E1A9B7BE5BA5}']
    property Name2: WideString dispid 1610809344;
    property Precision: Integer dispid 1610743808;
    property E: WordBool dispid 1610743810;
    property Name: WideString dispid 1610743812;
    property type_: IRobotUnitType readonly dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotStructureGeoAnalyser
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D887A137-EF18-41D1-B6ED-7EC1B9A36D17}
// *********************************************************************//
  IRobotStructureGeoAnalyser = interface(IDispatch)
    ['{D887A137-EF18-41D1-B6ED-7EC1B9A36D17}']
    function Get_Precision: Double; safecall;
    procedure Set_Precision(ret: Double); safecall;
    function Get_CanExtendBars: WordBool; safecall;
    procedure Set_CanExtendBars(ret: WordBool); safecall;
    function Get_CanUseRigidLinks: WordBool; safecall;
    procedure Set_CanUseRigidLinks(ret: WordBool); safecall;
    procedure StartCollectInfo; safecall;
    procedure StopCollectInfo; safecall;
    procedure DefineIntersection(_bar1: Integer; _bar2: Integer; 
                                 _intersect_rel: IRobotBarIntersectRelationship); safecall;
    procedure Correct(const _bar_sel: WideString); safecall;
    procedure SetNodeSize(_node_num: Integer; _radius: Double); safecall;
    procedure SetEdgeSize(_obj_num: Integer; _radius: Double); safecall;
    function Get_CanEliminateIsolatedNodes: WordBool; safecall;
    procedure Set_CanEliminateIsolatedNodes(ret: WordBool); safecall;
    property Precision: Double read Get_Precision write Set_Precision;
    property CanExtendBars: WordBool read Get_CanExtendBars write Set_CanExtendBars;
    property CanUseRigidLinks: WordBool read Get_CanUseRigidLinks write Set_CanUseRigidLinks;
    property CanEliminateIsolatedNodes: WordBool read Get_CanEliminateIsolatedNodes write Set_CanEliminateIsolatedNodes;
  end;

// *********************************************************************//
// DispIntf:  IRobotStructureGeoAnalyserDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D887A137-EF18-41D1-B6ED-7EC1B9A36D17}
// *********************************************************************//
  IRobotStructureGeoAnalyserDisp = dispinterface
    ['{D887A137-EF18-41D1-B6ED-7EC1B9A36D17}']
    property Precision: Double dispid 1610743808;
    property CanExtendBars: WordBool dispid 1610743810;
    property CanUseRigidLinks: WordBool dispid 1610743812;
    procedure StartCollectInfo; dispid 1610743814;
    procedure StopCollectInfo; dispid 1610743815;
    procedure DefineIntersection(_bar1: Integer; _bar2: Integer; 
                                 _intersect_rel: IRobotBarIntersectRelationship); dispid 1610743816;
    procedure Correct(const _bar_sel: WideString); dispid 1610743817;
    procedure SetNodeSize(_node_num: Integer; _radius: Double); dispid 1610743818;
    procedure SetEdgeSize(_obj_num: Integer; _radius: Double); dispid 1610743819;
    property CanEliminateIsolatedNodes: WordBool dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRobotProjectComponent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {59744DD1-9992-11D2-9835-0080C86BE4DF}
// *********************************************************************//
  IRobotProjectComponent = interface(IDispatch)
    ['{59744DD1-9992-11D2-9835-0080C86BE4DF}']
    function Get_type_: IRobotProjectComponentType; safecall;
    function Get_Name: WideString; safecall;
    function Get_Data: IDispatch; safecall;
    property type_: IRobotProjectComponentType read Get_type_;
    property Name: WideString read Get_Name;
    property Data: IDispatch read Get_Data;
  end;

// *********************************************************************//
// DispIntf:  IRobotProjectComponentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {59744DD1-9992-11D2-9835-0080C86BE4DF}
// *********************************************************************//
  IRobotProjectComponentDisp = dispinterface
    ['{59744DD1-9992-11D2-9835-0080C86BE4DF}']
    property type_: IRobotProjectComponentType readonly dispid 1;
    property Name: WideString readonly dispid 2;
    property Data: IDispatch readonly dispid 3;
  end;

// *********************************************************************//
// Interface: IRobotProjectComponentMngr
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {59744DD3-9992-11D2-9835-0080C86BE4DF}
// *********************************************************************//
  IRobotProjectComponentMngr = interface(IDispatch)
    ['{59744DD3-9992-11D2-9835-0080C86BE4DF}']
    function Get_LevelCount: Integer; safecall;
    function GetLevelName(level_idx: Integer): WideString; safecall;
    function Get(cmpnt_type: IRobotProjectComponentType; const level_name: WideString): IRobotCollection; safecall;
    function Create(cmpnt_type: IRobotProjectComponentType; const cmpnt_name: WideString; 
                    const lavel_name: WideString): IRobotProjectComponent; safecall;
    function Get_StdLevelName: WideString; safecall;
    property LevelCount: Integer read Get_LevelCount;
    property StdLevelName: WideString read Get_StdLevelName;
  end;

// *********************************************************************//
// DispIntf:  IRobotProjectComponentMngrDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {59744DD3-9992-11D2-9835-0080C86BE4DF}
// *********************************************************************//
  IRobotProjectComponentMngrDisp = dispinterface
    ['{59744DD3-9992-11D2-9835-0080C86BE4DF}']
    property LevelCount: Integer readonly dispid 1;
    function GetLevelName(level_idx: Integer): WideString; dispid 2;
    function Get(cmpnt_type: IRobotProjectComponentType; const level_name: WideString): IRobotCollection; dispid 3;
    function Create(cmpnt_type: IRobotProjectComponentType; const cmpnt_name: WideString; 
                    const lavel_name: WideString): IRobotProjectComponent; dispid 1610743811;
    property StdLevelName: WideString readonly dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotFileInsertParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C53C96F0-ECE2-11D2-989F-0080C86BE4DF}
// *********************************************************************//
  IRobotFileInsertParams = interface(IDispatch)
    ['{C53C96F0-ECE2-11D2-989F-0080C86BE4DF}']
    function Get_ReferenceNode: Integer; safecall;
    procedure Set_ReferenceNode(ret: Integer); safecall;
    function Get_ScaleFactor: Double; safecall;
    procedure Set_ScaleFactor(ret: Double); safecall;
    function Get_AsObject: Integer; safecall;
    procedure Set_AsObject(ret: Integer); safecall;
    procedure SetInsertionPoint(_x: Double; _y: Double; _z: Double); safecall;
    procedure GetInsertionPoint(out _x: Double; out _y: Double; out _z: Double); safecall;
    procedure SetRotation(_alpha: Double; _beta: Double; _gamma: Double); safecall;
    procedure GetRotation(out _alpha: Double; out _beta: Double; out _gamma: Double); safecall;
    property ReferenceNode: Integer read Get_ReferenceNode write Set_ReferenceNode;
    property ScaleFactor: Double read Get_ScaleFactor write Set_ScaleFactor;
    property AsObject: Integer read Get_AsObject write Set_AsObject;
  end;

// *********************************************************************//
// DispIntf:  IRobotFileInsertParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C53C96F0-ECE2-11D2-989F-0080C86BE4DF}
// *********************************************************************//
  IRobotFileInsertParamsDisp = dispinterface
    ['{C53C96F0-ECE2-11D2-989F-0080C86BE4DF}']
    property ReferenceNode: Integer dispid 1610743808;
    property ScaleFactor: Double dispid 1610743810;
    property AsObject: Integer dispid 1610743812;
    procedure SetInsertionPoint(_x: Double; _y: Double; _z: Double); dispid 1610743814;
    procedure GetInsertionPoint(out _x: Double; out _y: Double; out _z: Double); dispid 1610743815;
    procedure SetRotation(_alpha: Double; _beta: Double; _gamma: Double); dispid 1610743816;
    procedure GetRotation(out _alpha: Double; out _beta: Double; out _gamma: Double); dispid 1610743817;
  end;

// *********************************************************************//
// DispIntf:  _IRobotProjectEvents
// Flags:     (4096) Dispatchable
// GUID:      {C5B7D2E1-F823-4D1B-A755-1F704122B862}
// *********************************************************************//
  _IRobotProjectEvents = dispinterface
    ['{C5B7D2E1-F823-4D1B-A755-1F704122B862}']
    procedure OnSave(const _file_path: WideString; _is_modified: WordBool); dispid 1;
    procedure OnClose(_is_modified: WordBool); dispid 2;
  end;

// *********************************************************************//
// Interface: IRobotProject
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6D348833-EFBF-11D1-9783-0080C86BE4DF}
// *********************************************************************//
  IRobotProject = interface(IDispatch)
    ['{6D348833-EFBF-11D1-9783-0080C86BE4DF}']
    procedure New(pt: IRobotProjectType); safecall;
    procedure Open(const file_name: WideString); safecall;
    procedure Save; safecall;
    procedure SaveAs(const file_name: WideString); safecall;
    procedure Close; safecall;
    function Get_ComponentMngr: IRobotProjectComponentMngr; safecall;
    function Get_ViewMngr: IRobotViewMngr; safecall;
    function Get_PrintEngine: IRobotPrintEngine; safecall;
    function Get_Structure: IRobotStructure; safecall;
    function Get_Name: WideString; safecall;
    function Get_FileName: WideString; safecall;
    function Get_FileInsertParams: IRobotFileInsertParams; safecall;
    function Get_ExtFileParams: IDispatch; safecall;
    function ReadExtFileParams(const file_path: WideString; file_format: IRobotExternalFileFormat): Integer; safecall;
    function OpenExtFile(const file_path: WideString; format: IRobotExternalFileFormat; 
                         ignore_warnings: Integer): Integer; safecall;
    procedure SaveAsExtFile(const file_path: WideString; format: IRobotExternalFileFormat); safecall;
    function Get_CalcEngine: IRobotCalcEngine; safecall;
    function Get_type_: IRobotProjectType; safecall;
    function Get_IsActive: Integer; safecall;
    function Get_Connections: IRJointConnectionServer; safecall;
    function Get_ExtFileName: WideString; safecall;
    function Get_Preferences: IRobotProjectPreferences; safecall;
    function Get_UniqueId: WideString; safecall;
    procedure NewFromTemplate(const tmpl_file: WideString); safecall;
    function InsertExtFile(const _file_path: WideString; _file_format: IRobotExternalFileFormat; 
                           _ignore_warnings: WordBool; _only_geometry: WordBool): WordBool; safecall;
    function Get_DimServer: IRDimServer; safecall;
    function SaveToFormat(_file_format: IRobotProjectSaveFormat; const _file_path: WideString): WordBool; safecall;
    function Get_ConcrReinfEngine: IRConcrCalcEngine; safecall;
    function Get_AxisMngr: IRobotStructuralAxisGridMngr; safecall;
    function Get_Backgrounds: IRobotBackgroundServer; safecall;
    function Get_ActiveModel: IRobotActiveModelType; safecall;
    procedure Set_ActiveModel(ret: IRobotActiveModelType); safecall;
    property ComponentMngr: IRobotProjectComponentMngr read Get_ComponentMngr;
    property ViewMngr: IRobotViewMngr read Get_ViewMngr;
    property PrintEngine: IRobotPrintEngine read Get_PrintEngine;
    property Structure: IRobotStructure read Get_Structure;
    property Name: WideString read Get_Name;
    property FileName: WideString read Get_FileName;
    property FileInsertParams: IRobotFileInsertParams read Get_FileInsertParams;
    property ExtFileParams: IDispatch read Get_ExtFileParams;
    property CalcEngine: IRobotCalcEngine read Get_CalcEngine;
    property type_: IRobotProjectType read Get_type_;
    property IsActive: Integer read Get_IsActive;
    property Connections: IRJointConnectionServer read Get_Connections;
    property ExtFileName: WideString read Get_ExtFileName;
    property Preferences: IRobotProjectPreferences read Get_Preferences;
    property UniqueId: WideString read Get_UniqueId;
    property DimServer: IRDimServer read Get_DimServer;
    property ConcrReinfEngine: IRConcrCalcEngine read Get_ConcrReinfEngine;
    property AxisMngr: IRobotStructuralAxisGridMngr read Get_AxisMngr;
    property Backgrounds: IRobotBackgroundServer read Get_Backgrounds;
    property ActiveModel: IRobotActiveModelType read Get_ActiveModel write Set_ActiveModel;
  end;

// *********************************************************************//
// DispIntf:  IRobotProjectDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6D348833-EFBF-11D1-9783-0080C86BE4DF}
// *********************************************************************//
  IRobotProjectDisp = dispinterface
    ['{6D348833-EFBF-11D1-9783-0080C86BE4DF}']
    procedure New(pt: IRobotProjectType); dispid 1610743808;
    procedure Open(const file_name: WideString); dispid 1610743809;
    procedure Save; dispid 1610743810;
    procedure SaveAs(const file_name: WideString); dispid 1610743811;
    procedure Close; dispid 1610743812;
    property ComponentMngr: IRobotProjectComponentMngr readonly dispid 1610743813;
    property ViewMngr: IRobotViewMngr readonly dispid 1610743814;
    property PrintEngine: IRobotPrintEngine readonly dispid 1610743815;
    property Structure: IRobotStructure readonly dispid 1610743816;
    property Name: WideString readonly dispid 1610743817;
    property FileName: WideString readonly dispid 1610743818;
    property FileInsertParams: IRobotFileInsertParams readonly dispid 1610743819;
    property ExtFileParams: IDispatch readonly dispid 1610743820;
    function ReadExtFileParams(const file_path: WideString; file_format: IRobotExternalFileFormat): Integer; dispid 1610743821;
    function OpenExtFile(const file_path: WideString; format: IRobotExternalFileFormat; 
                         ignore_warnings: Integer): Integer; dispid 1610743822;
    procedure SaveAsExtFile(const file_path: WideString; format: IRobotExternalFileFormat); dispid 1610743823;
    property CalcEngine: IRobotCalcEngine readonly dispid 1610743824;
    property type_: IRobotProjectType readonly dispid 1610743825;
    property IsActive: Integer readonly dispid 1610743826;
    property Connections: IRJointConnectionServer readonly dispid 1610743827;
    property ExtFileName: WideString readonly dispid 1610743828;
    property Preferences: IRobotProjectPreferences readonly dispid 1610743829;
    property UniqueId: WideString readonly dispid 1610743830;
    procedure NewFromTemplate(const tmpl_file: WideString); dispid 1610743831;
    function InsertExtFile(const _file_path: WideString; _file_format: IRobotExternalFileFormat; 
                           _ignore_warnings: WordBool; _only_geometry: WordBool): WordBool; dispid 1610743832;
    property DimServer: IRDimServer readonly dispid 1610743833;
    function SaveToFormat(_file_format: IRobotProjectSaveFormat; const _file_path: WideString): WordBool; dispid 1610743834;
    property ConcrReinfEngine: IRConcrCalcEngine readonly dispid 1610743835;
    property AxisMngr: IRobotStructuralAxisGridMngr readonly dispid 1610743836;
    property Backgrounds: IRobotBackgroundServer readonly dispid 1610743837;
    property ActiveModel: IRobotActiveModelType dispid 1610743838;
  end;

// *********************************************************************//
// Interface: _IRobotSMX
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {13C0ED3E-891E-4C02-A3E4-600A8596F6C2}
// *********************************************************************//
  _IRobotSMX = interface(IDispatch)
    ['{13C0ED3E-891E-4C02-A3E4-600A8596F6C2}']
    procedure ImportFromString(const smx: WideString; const options: WideString; 
                               const observer: IDispatch); safecall;
    procedure ExportToString(out smx: WideString; const options: WideString; 
                             const observer: IDispatch); safecall;
  end;

// *********************************************************************//
// DispIntf:  _IRobotSMXDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {13C0ED3E-891E-4C02-A3E4-600A8596F6C2}
// *********************************************************************//
  _IRobotSMXDisp = dispinterface
    ['{13C0ED3E-891E-4C02-A3E4-600A8596F6C2}']
    procedure ImportFromString(const smx: WideString; const options: WideString; 
                               const observer: IDispatch); dispid 1610743808;
    procedure ExportToString(out smx: WideString; const options: WideString; 
                             const observer: IDispatch); dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotViewMngr
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {95582DE3-004C-11D2-9795-0080C86BE4DF}
// *********************************************************************//
  IRobotViewMngr = interface(IDispatch)
    ['{95582DE3-004C-11D2-9795-0080C86BE4DF}']
    function CreateTable(tt: IRobotTableType; tdt: IRobotTableDataType): IRobotTable; safecall;
    function CreateView(vt: IRobotViewType): IRobotView; safecall;
    procedure Refresh; safecall;
    function CreateRtfView: IRobotRtfView; safecall;
    function CreateFromSc(const sc_name: WideString): IDispatch; safecall;
    function Get_CurrentLayout: IRobotLayoutId; safecall;
    procedure Set_CurrentLayout(ret: IRobotLayoutId); safecall;
    function Get_ViewCount: Integer; safecall;
    function Get_TableCount: Integer; safecall;
    function GetView(_view_idx: Integer): IRobotView2; safecall;
    function GetTable(_table_idx: Integer): IRobotTableFrame; safecall;
    function Get_RecycleViews: WordBool; safecall;
    procedure Set_RecycleViews(ret: WordBool); safecall;
    function Get_NewViewAsTab: WordBool; safecall;
    procedure Set_NewViewAsTab(ret: WordBool); safecall;
    function ShowDialog(_dlg_id: IRobotDialogId; _parent_wnd: Integer; _modal: WordBool): OleVariant; safecall;
    property CurrentLayout: IRobotLayoutId read Get_CurrentLayout write Set_CurrentLayout;
    property ViewCount: Integer read Get_ViewCount;
    property TableCount: Integer read Get_TableCount;
    property RecycleViews: WordBool read Get_RecycleViews write Set_RecycleViews;
    property NewViewAsTab: WordBool read Get_NewViewAsTab write Set_NewViewAsTab;
  end;

// *********************************************************************//
// DispIntf:  IRobotViewMngrDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {95582DE3-004C-11D2-9795-0080C86BE4DF}
// *********************************************************************//
  IRobotViewMngrDisp = dispinterface
    ['{95582DE3-004C-11D2-9795-0080C86BE4DF}']
    function CreateTable(tt: IRobotTableType; tdt: IRobotTableDataType): IRobotTable; dispid 1;
    function CreateView(vt: IRobotViewType): IRobotView; dispid 1610743809;
    procedure Refresh; dispid 1610743810;
    function CreateRtfView: IRobotRtfView; dispid 1610743811;
    function CreateFromSc(const sc_name: WideString): IDispatch; dispid 1610743812;
    property CurrentLayout: IRobotLayoutId dispid 1610743813;
    property ViewCount: Integer readonly dispid 1610743815;
    property TableCount: Integer readonly dispid 1610743816;
    function GetView(_view_idx: Integer): IRobotView2; dispid 1610743817;
    function GetTable(_table_idx: Integer): IRobotTableFrame; dispid 1610743818;
    property RecycleViews: WordBool dispid 1610743819;
    property NewViewAsTab: WordBool dispid 1610743821;
    function ShowDialog(_dlg_id: IRobotDialogId; _parent_wnd: Integer; _modal: WordBool): OleVariant; dispid 1610743823;
  end;

// *********************************************************************//
// Interface: IRobotTable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {95582DE0-004C-11D2-9795-0080C86BE4DF}
// *********************************************************************//
  IRobotTable = interface(IDispatch)
    ['{95582DE0-004C-11D2-9795-0080C86BE4DF}']
    function Get_Visible: Integer; safecall;
    procedure Set_Visible(__MIDL__IRobotTable0000: Integer); safecall;
    function Get_Title: WideString; safecall;
    procedure Set_Title(const __MIDL__IRobotTable0002: WideString); safecall;
    function Get_Printable: IRobotPrintable; safecall;
    function Get_Configuration: IRobotTableConfig; safecall;
    procedure AddColumn(data_type: SYSINT); safecall;
    procedure Select(sel_type: IRobotSelectionType; const sel_text: WideString); safecall;
    procedure StoreSelection(sel_type: IRobotSelectionType; const sel_text: WideString); safecall;
    procedure SelectFromStore(sel_type: IRobotSelectionType); safecall;
    procedure SelectAllFromStore; safecall;
    procedure SelectMode(__MIDL__IRobotTable0004: IRobotModeSelectionType; 
                         const __MIDL__IRobotTable0005: WideString; 
                         __MIDL__IRobotTable0006: IRobotModeCombinationType); safecall;
    procedure StoreModeSelection(__MIDL__IRobotTable0007: IRobotModeSelectionType; 
                                 const __MIDL__IRobotTable0008: WideString; 
                                 __MIDL__IRobotTable0009: IRobotModeCombinationType); safecall;
    procedure SelectModeFromStore; safecall;
    function Get_Window: IRobotWindow; safecall;
    function Get_UserControl: WordBool; safecall;
    procedure Set_UserControl(ret: WordBool); safecall;
    function Get_ColCount: Integer; safecall;
    function Get_RowCount: Integer; safecall;
    procedure SetColWidth(_col_idx: Integer; _col_width: Integer); safecall;
    function GetColWidth(_col_idx: Integer): Integer; safecall;
    procedure SetRowHeight(_row_idx: Integer; _row_height: Integer); safecall;
    function GetRowHeight(_row_idx: Integer): Integer; safecall;
    function GetDataType(_col_idx: Integer): IRobotTableDataType; safecall;
    procedure MakeScreenCapture(const _sc_params: IRobotTableScreenCaptureParams); safecall;
    property Visible: Integer read Get_Visible write Set_Visible;
    property Title: WideString read Get_Title write Set_Title;
    property Printable: IRobotPrintable read Get_Printable;
    property Configuration: IRobotTableConfig read Get_Configuration;
    property Window: IRobotWindow read Get_Window;
    property UserControl: WordBool read Get_UserControl write Set_UserControl;
    property ColCount: Integer read Get_ColCount;
    property RowCount: Integer read Get_RowCount;
  end;

// *********************************************************************//
// DispIntf:  IRobotTableDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {95582DE0-004C-11D2-9795-0080C86BE4DF}
// *********************************************************************//
  IRobotTableDisp = dispinterface
    ['{95582DE0-004C-11D2-9795-0080C86BE4DF}']
    property Visible: Integer dispid 1;
    property Title: WideString dispid 2;
    property Printable: IRobotPrintable readonly dispid 3;
    property Configuration: IRobotTableConfig readonly dispid 4;
    procedure AddColumn(data_type: SYSINT); dispid 5;
    procedure Select(sel_type: IRobotSelectionType; const sel_text: WideString); dispid 6;
    procedure StoreSelection(sel_type: IRobotSelectionType; const sel_text: WideString); dispid 7;
    procedure SelectFromStore(sel_type: IRobotSelectionType); dispid 8;
    procedure SelectAllFromStore; dispid 9;
    procedure SelectMode(__MIDL__IRobotTable0004: IRobotModeSelectionType; 
                         const __MIDL__IRobotTable0005: WideString; 
                         __MIDL__IRobotTable0006: IRobotModeCombinationType); dispid 10;
    procedure StoreModeSelection(__MIDL__IRobotTable0007: IRobotModeSelectionType; 
                                 const __MIDL__IRobotTable0008: WideString; 
                                 __MIDL__IRobotTable0009: IRobotModeCombinationType); dispid 11;
    procedure SelectModeFromStore; dispid 12;
    property Window: IRobotWindow readonly dispid 1610743822;
    property UserControl: WordBool dispid 1610743823;
    property ColCount: Integer readonly dispid 1610743825;
    property RowCount: Integer readonly dispid 1610743826;
    procedure SetColWidth(_col_idx: Integer; _col_width: Integer); dispid 1610743827;
    function GetColWidth(_col_idx: Integer): Integer; dispid 1610743828;
    procedure SetRowHeight(_row_idx: Integer; _row_height: Integer); dispid 1610743829;
    function GetRowHeight(_row_idx: Integer): Integer; dispid 1610743830;
    function GetDataType(_col_idx: Integer): IRobotTableDataType; dispid 1610743831;
    procedure MakeScreenCapture(const _sc_params: IRobotTableScreenCaptureParams); dispid 1610743832;
  end;

// *********************************************************************//
// Interface: IRobotPrintable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {42278650-0A6C-11D2-979C-0080C86BE4DF}
// *********************************************************************//
  IRobotPrintable = interface(IDispatch)
    ['{42278650-0A6C-11D2-979C-0080C86BE4DF}']
    function Get_Title: WideString; safecall;
    procedure Set_Title(const __MIDL__IRobotPrintable0000: WideString); safecall;
    function Get_StartFromNewPage: Integer; safecall;
    procedure Set_StartFromNewPage(__MIDL__IRobotPrintable0002: Integer); safecall;
    function SaveToFile(const file_path: WideString; file_format: IRobotOutputFileFormat): WordBool; safecall;
    function Get_Comment: WideString; safecall;
    procedure Set_Comment(const ret: WideString); safecall;
    function Get_IncludeDateTime: WordBool; safecall;
    procedure Set_IncludeDateTime(ret: WordBool); safecall;
    property Title: WideString read Get_Title write Set_Title;
    property StartFromNewPage: Integer read Get_StartFromNewPage write Set_StartFromNewPage;
    property Comment: WideString read Get_Comment write Set_Comment;
    property IncludeDateTime: WordBool read Get_IncludeDateTime write Set_IncludeDateTime;
  end;

// *********************************************************************//
// DispIntf:  IRobotPrintableDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {42278650-0A6C-11D2-979C-0080C86BE4DF}
// *********************************************************************//
  IRobotPrintableDisp = dispinterface
    ['{42278650-0A6C-11D2-979C-0080C86BE4DF}']
    property Title: WideString dispid 1;
    property StartFromNewPage: Integer dispid 2;
    function SaveToFile(const file_path: WideString; file_format: IRobotOutputFileFormat): WordBool; dispid 1610743812;
    property Comment: WideString dispid 1610743813;
    property IncludeDateTime: WordBool dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotTableConfig
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6ABCDF50-1649-11D2-97A7-0080C86BE4DF}
// *********************************************************************//
  IRobotTableConfig = interface(IDispatch)
    ['{6ABCDF50-1649-11D2-97A7-0080C86BE4DF}']
    procedure SetFlag(_flag: IRobotTableConfigFlag; _set: Integer); safecall;
    procedure SetValue(value_id: IRobotTableConfigValue; val: Double); safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotTableConfigDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6ABCDF50-1649-11D2-97A7-0080C86BE4DF}
// *********************************************************************//
  IRobotTableConfigDisp = dispinterface
    ['{6ABCDF50-1649-11D2-97A7-0080C86BE4DF}']
    procedure SetFlag(_flag: IRobotTableConfigFlag; _set: Integer); dispid 1;
    procedure SetValue(value_id: IRobotTableConfigValue; val: Double); dispid 2;
  end;

// *********************************************************************//
// Interface: IRobotTableScreenCaptureParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7F832B4C-56ED-4191-B049-2C4CF93AB0DD}
// *********************************************************************//
  IRobotTableScreenCaptureParams = interface(IDispatch)
    ['{7F832B4C-56ED-4191-B049-2C4CF93AB0DD}']
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_AddInfoTab: WordBool; safecall;
    procedure Set_AddInfoTab(ret: WordBool); safecall;
    function Get_UpdateType: IRobotTableScreenCaptureUpdateType; safecall;
    procedure Set_UpdateType(ret: IRobotTableScreenCaptureUpdateType); safecall;
    function Get_Comment: WideString; safecall;
    procedure Set_Comment(const ret: WideString); safecall;
    function Get_IncludeDateAndTime: WordBool; safecall;
    procedure Set_IncludeDateAndTime(ret: WordBool); safecall;
    function Get_AdjustColumnWidth: WordBool; safecall;
    procedure Set_AdjustColumnWidth(ret: WordBool); safecall;
    property Name: WideString read Get_Name write Set_Name;
    property AddInfoTab: WordBool read Get_AddInfoTab write Set_AddInfoTab;
    property UpdateType: IRobotTableScreenCaptureUpdateType read Get_UpdateType write Set_UpdateType;
    property Comment: WideString read Get_Comment write Set_Comment;
    property IncludeDateAndTime: WordBool read Get_IncludeDateAndTime write Set_IncludeDateAndTime;
    property AdjustColumnWidth: WordBool read Get_AdjustColumnWidth write Set_AdjustColumnWidth;
  end;

// *********************************************************************//
// DispIntf:  IRobotTableScreenCaptureParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7F832B4C-56ED-4191-B049-2C4CF93AB0DD}
// *********************************************************************//
  IRobotTableScreenCaptureParamsDisp = dispinterface
    ['{7F832B4C-56ED-4191-B049-2C4CF93AB0DD}']
    property Name: WideString dispid 1610743808;
    property AddInfoTab: WordBool dispid 1610743810;
    property UpdateType: IRobotTableScreenCaptureUpdateType dispid 1610743812;
    property Comment: WideString dispid 1610743814;
    property IncludeDateAndTime: WordBool dispid 1610743816;
    property AdjustColumnWidth: WordBool dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRobotView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7ABBD5F2-F70F-11D2-98A9-0080C86BE4DF}
// *********************************************************************//
  IRobotView = interface(IDispatch)
    ['{7ABBD5F2-F70F-11D2-98A9-0080C86BE4DF}']
    function Get_type_: IRobotViewType; safecall;
    function Get_Visible: Integer; safecall;
    procedure Set_Visible(ret: Integer); safecall;
    function Get_Title: WideString; safecall;
    procedure Set_Title(const ret: WideString); safecall;
    function Get_Printable: IRobotPrintable; safecall;
    function Get_Selection: IRobotMultiSelection; safecall;
    function Get_Projection: IRobotViewProjection; safecall;
    procedure Set_Projection(ret: IRobotViewProjection); safecall;
    procedure Redraw(force_init_zoom: Integer); safecall;
    procedure GetSize(out width_in_mm: Double; out height_in_mm: Double); safecall;
    procedure SetSize(width_in_mm: Double; height_in_mm: Double); safecall;
    procedure GetZoom(out left: Double; out top: Double; out right: Double; out bottom: Double); safecall;
    procedure SetZoom(left: Double; top: Double; right: Double; bottom: Double); safecall;
    function Get_SymbolMagnification: SYSINT; safecall;
    procedure Set_SymbolMagnification(ret: SYSINT); safecall;
    function Get_DiagramMagnification: SYSINT; safecall;
    procedure Set_DiagramMagnification(ret: SYSINT); safecall;
    function Get_GridVisible: Integer; safecall;
    procedure Set_GridVisible(ret: Integer); safecall;
    function Get_RulerVisible: Integer; safecall;
    procedure Set_RulerVisible(ret: Integer); safecall;
    function Get_StructAxisVisible: Integer; safecall;
    procedure Set_StructAxisVisible(ret: Integer); safecall;
    function GetVisibilityStatus(status_id: IRobotViewVisibilityStatusType): IRobotViewVisibilityStatusValue; safecall;
    procedure SetVisibilityStatus(status_id: IRobotViewVisibilityStatusType; 
                                  status_value: IRobotViewVisibilityStatusValue); safecall;
    function GetScale(scale_id: SYSINT): Double; safecall;
    procedure SetScale(scale_id: SYSINT; val: Double); safecall;
    function IsLocal: Integer; safecall;
    procedure SetGlobal; safecall;
    function SetLocal(const _p1: IRobotGeoPoint3D; const _p2: IRobotGeoPoint3D; 
                      const _p3: IRobotGeoPoint3D): Integer; safecall;
    function GetRotationPoint: IRobotGeoPoint3D; safecall;
    procedure SetRotationPoint(const rot_point: IRobotGeoPoint3D); safecall;
    function GetWorkPoint: IRobotGeoPoint3D; safecall;
    procedure SetWorkPoint(const Point: IRobotGeoPoint3D); safecall;
    procedure CopyToClipboard; safecall;
    procedure Rotate(axis: IRobotGeoCoordinateAxis; _angle: Double); safecall;
    function Get_ParamsDisplay: IRobotViewDisplayParams; safecall;
    function Get_ParamsDiagram: IRobotViewDiagramParams; safecall;
    function Get_ParamsBarMap: IRobotViewBarMapParams; safecall;
    function Get_ParamsFeMap: IRobotViewFeMapParams; safecall;
    property type_: IRobotViewType read Get_type_;
    property Visible: Integer read Get_Visible write Set_Visible;
    property Title: WideString read Get_Title write Set_Title;
    property Printable: IRobotPrintable read Get_Printable;
    property Selection: IRobotMultiSelection read Get_Selection;
    property Projection: IRobotViewProjection read Get_Projection write Set_Projection;
    property SymbolMagnification: SYSINT read Get_SymbolMagnification write Set_SymbolMagnification;
    property DiagramMagnification: SYSINT read Get_DiagramMagnification write Set_DiagramMagnification;
    property GridVisible: Integer read Get_GridVisible write Set_GridVisible;
    property RulerVisible: Integer read Get_RulerVisible write Set_RulerVisible;
    property StructAxisVisible: Integer read Get_StructAxisVisible write Set_StructAxisVisible;
    property ParamsDisplay: IRobotViewDisplayParams read Get_ParamsDisplay;
    property ParamsDiagram: IRobotViewDiagramParams read Get_ParamsDiagram;
    property ParamsBarMap: IRobotViewBarMapParams read Get_ParamsBarMap;
    property ParamsFeMap: IRobotViewFeMapParams read Get_ParamsFeMap;
  end;

// *********************************************************************//
// DispIntf:  IRobotViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7ABBD5F2-F70F-11D2-98A9-0080C86BE4DF}
// *********************************************************************//
  IRobotViewDisp = dispinterface
    ['{7ABBD5F2-F70F-11D2-98A9-0080C86BE4DF}']
    property type_: IRobotViewType readonly dispid 1610743808;
    property Visible: Integer dispid 1610743809;
    property Title: WideString dispid 1610743811;
    property Printable: IRobotPrintable readonly dispid 1610743813;
    property Selection: IRobotMultiSelection readonly dispid 1610743814;
    property Projection: IRobotViewProjection dispid 1610743815;
    procedure Redraw(force_init_zoom: Integer); dispid 1610743817;
    procedure GetSize(out width_in_mm: Double; out height_in_mm: Double); dispid 1610743818;
    procedure SetSize(width_in_mm: Double; height_in_mm: Double); dispid 1610743819;
    procedure GetZoom(out left: Double; out top: Double; out right: Double; out bottom: Double); dispid 1610743820;
    procedure SetZoom(left: Double; top: Double; right: Double; bottom: Double); dispid 1610743821;
    property SymbolMagnification: SYSINT dispid 1610743822;
    property DiagramMagnification: SYSINT dispid 1610743824;
    property GridVisible: Integer dispid 1610743826;
    property RulerVisible: Integer dispid 1610743828;
    property StructAxisVisible: Integer dispid 1610743830;
    function GetVisibilityStatus(status_id: IRobotViewVisibilityStatusType): IRobotViewVisibilityStatusValue; dispid 1610743832;
    procedure SetVisibilityStatus(status_id: IRobotViewVisibilityStatusType; 
                                  status_value: IRobotViewVisibilityStatusValue); dispid 1610743833;
    function GetScale(scale_id: SYSINT): Double; dispid 1610743834;
    procedure SetScale(scale_id: SYSINT; val: Double); dispid 1610743835;
    function IsLocal: Integer; dispid 1610743836;
    procedure SetGlobal; dispid 1610743837;
    function SetLocal(const _p1: IRobotGeoPoint3D; const _p2: IRobotGeoPoint3D; 
                      const _p3: IRobotGeoPoint3D): Integer; dispid 1610743838;
    function GetRotationPoint: IRobotGeoPoint3D; dispid 1610743839;
    procedure SetRotationPoint(const rot_point: IRobotGeoPoint3D); dispid 1610743840;
    function GetWorkPoint: IRobotGeoPoint3D; dispid 1610743841;
    procedure SetWorkPoint(const Point: IRobotGeoPoint3D); dispid 1610743842;
    procedure CopyToClipboard; dispid 1610743843;
    procedure Rotate(axis: IRobotGeoCoordinateAxis; _angle: Double); dispid 1610743844;
    property ParamsDisplay: IRobotViewDisplayParams readonly dispid 1610743845;
    property ParamsDiagram: IRobotViewDiagramParams readonly dispid 1610743846;
    property ParamsBarMap: IRobotViewBarMapParams readonly dispid 1610743847;
    property ParamsFeMap: IRobotViewFeMapParams readonly dispid 1610743848;
  end;

// *********************************************************************//
// Interface: IRobotViewDisplayParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D00CCC32-7A57-11D4-B851-0050DA76755E}
// *********************************************************************//
  IRobotViewDisplayParams = interface(IDispatch)
    ['{D00CCC32-7A57-11D4-B851-0050DA76755E}']
    function Get_HiddenLines: IRobotViewHiddenLinesDisplayType; safecall;
    procedure Set_HiddenLines(ret: IRobotViewHiddenLinesDisplayType); safecall;
    function Get_SymbolSize: Smallint; safecall;
    procedure Set_SymbolSize(ret: Smallint); safecall;
    procedure Set_(v_attrib: IRobotViewDisplayAttributes; on_off: WordBool); safecall;
    function IsOn(v_attrib: IRobotViewDisplayAttributes): WordBool; safecall;
    property HiddenLines: IRobotViewHiddenLinesDisplayType read Get_HiddenLines write Set_HiddenLines;
    property SymbolSize: Smallint read Get_SymbolSize write Set_SymbolSize;
  end;

// *********************************************************************//
// DispIntf:  IRobotViewDisplayParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D00CCC32-7A57-11D4-B851-0050DA76755E}
// *********************************************************************//
  IRobotViewDisplayParamsDisp = dispinterface
    ['{D00CCC32-7A57-11D4-B851-0050DA76755E}']
    property HiddenLines: IRobotViewHiddenLinesDisplayType dispid 1610743808;
    property SymbolSize: Smallint dispid 1610743810;
    procedure Set_(v_attrib: IRobotViewDisplayAttributes; on_off: WordBool); dispid 1610743812;
    function IsOn(v_attrib: IRobotViewDisplayAttributes): WordBool; dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRobotViewDiagramParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {72DDE972-7A62-11D4-B851-0050DA76755E}
// *********************************************************************//
  IRobotViewDiagramParams = interface(IDispatch)
    ['{72DDE972-7A62-11D4-B851-0050DA76755E}']
    function Get_ReactionsInLocalSystem: WordBool; safecall;
    procedure Set_ReactionsInLocalSystem(ret: WordBool); safecall;
    function Get_Descriptions: IRobotViewDiagramDescriptionType; safecall;
    procedure Set_Descriptions(ret: IRobotViewDiagramDescriptionType); safecall;
    function Get_PositiveNegative: IRobotViewDiagramSignDifferType; safecall;
    procedure Set_PositiveNegative(ret: IRobotViewDiagramSignDifferType); safecall;
    function Get_Filling: IRobotViewDiagramFillingType; safecall;
    procedure Set_Filling(ret: IRobotViewDiagramFillingType); safecall;
    procedure Set_(res_type: IRobotViewDiagramResultType; on_off: WordBool); safecall;
    function IsOn(res_type: IRobotViewDiagramResultType): WordBool; safecall;
    procedure SetScale(res_type: IRobotViewDiagramResultType; scale_for_1_cm: Double); safecall;
    function GetScale(res_type: IRobotViewDiagramResultType): Double; safecall;
    procedure SetColor(res_type: IRobotViewDiagramResultType; _color: Integer); safecall;
    function GetColor(res_type: IRobotViewDiagramResultType): Integer; safecall;
    function Get_Values: IRobotViewDiagramValueType; safecall;
    procedure Set_Values(ret: IRobotViewDiagramValueType); safecall;
    property ReactionsInLocalSystem: WordBool read Get_ReactionsInLocalSystem write Set_ReactionsInLocalSystem;
    property Descriptions: IRobotViewDiagramDescriptionType read Get_Descriptions write Set_Descriptions;
    property PositiveNegative: IRobotViewDiagramSignDifferType read Get_PositiveNegative write Set_PositiveNegative;
    property Filling: IRobotViewDiagramFillingType read Get_Filling write Set_Filling;
    property Values: IRobotViewDiagramValueType read Get_Values write Set_Values;
  end;

// *********************************************************************//
// DispIntf:  IRobotViewDiagramParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {72DDE972-7A62-11D4-B851-0050DA76755E}
// *********************************************************************//
  IRobotViewDiagramParamsDisp = dispinterface
    ['{72DDE972-7A62-11D4-B851-0050DA76755E}']
    property ReactionsInLocalSystem: WordBool dispid 1610743808;
    property Descriptions: IRobotViewDiagramDescriptionType dispid 1610743810;
    property PositiveNegative: IRobotViewDiagramSignDifferType dispid 1610743812;
    property Filling: IRobotViewDiagramFillingType dispid 1610743814;
    procedure Set_(res_type: IRobotViewDiagramResultType; on_off: WordBool); dispid 1610743816;
    function IsOn(res_type: IRobotViewDiagramResultType): WordBool; dispid 1610743817;
    procedure SetScale(res_type: IRobotViewDiagramResultType; scale_for_1_cm: Double); dispid 1610743818;
    function GetScale(res_type: IRobotViewDiagramResultType): Double; dispid 1610743819;
    procedure SetColor(res_type: IRobotViewDiagramResultType; _color: Integer); dispid 1610743820;
    function GetColor(res_type: IRobotViewDiagramResultType): Integer; dispid 1610743821;
    property Values: IRobotViewDiagramValueType dispid 1610743822;
  end;

// *********************************************************************//
// Interface: IRobotViewBarMapParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ADB9B382-7A75-11D4-B851-0050DA76755E}
// *********************************************************************//
  IRobotViewBarMapParams = interface(IDispatch)
    ['{ADB9B382-7A75-11D4-B851-0050DA76755E}']
    function Get_CurrentResult: IRobotViewBarMapResultType; safecall;
    procedure Set_CurrentResult(ret: IRobotViewBarMapResultType); safecall;
    function Get_StructureDeformation: WordBool; safecall;
    procedure Set_StructureDeformation(ret: WordBool); safecall;
    function Get_Descriptions: IRobotViewDiagramDescriptionType; safecall;
    procedure Set_Descriptions(ret: IRobotViewDiagramDescriptionType); safecall;
    function Get_MapThicknessCoeff: Double; safecall;
    procedure Set_MapThicknessCoeff(ret: Double); safecall;
    property CurrentResult: IRobotViewBarMapResultType read Get_CurrentResult write Set_CurrentResult;
    property StructureDeformation: WordBool read Get_StructureDeformation write Set_StructureDeformation;
    property Descriptions: IRobotViewDiagramDescriptionType read Get_Descriptions write Set_Descriptions;
    property MapThicknessCoeff: Double read Get_MapThicknessCoeff write Set_MapThicknessCoeff;
  end;

// *********************************************************************//
// DispIntf:  IRobotViewBarMapParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ADB9B382-7A75-11D4-B851-0050DA76755E}
// *********************************************************************//
  IRobotViewBarMapParamsDisp = dispinterface
    ['{ADB9B382-7A75-11D4-B851-0050DA76755E}']
    property CurrentResult: IRobotViewBarMapResultType dispid 1610743808;
    property StructureDeformation: WordBool dispid 1610743810;
    property Descriptions: IRobotViewDiagramDescriptionType dispid 1610743812;
    property MapThicknessCoeff: Double dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotViewFeMapParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8327AE72-7CB6-11D4-B852-0050DA76755E}
// *********************************************************************//
  IRobotViewFeMapParams = interface(IDispatch)
    ['{8327AE72-7CB6-11D4-B852-0050DA76755E}']
    function Get_CurrentResult: IRobotViewFeMapResultType; safecall;
    procedure Set_CurrentResult(ret: IRobotViewFeMapResultType); safecall;
    function Get_Direction: IRobotViewFeMapLocalSystemType; safecall;
    procedure Set_Direction(ret: IRobotViewFeMapLocalSystemType); safecall;
    function Get_DirectionData: IRobotGeoPoint3D; safecall;
    function Get_CrossPresentation: IRobotViewFeMapCrossPresentationType; safecall;
    procedure Set_CrossPresentation(ret: IRobotViewFeMapCrossPresentationType); safecall;
    function Get_DeformationActive: WordBool; safecall;
    procedure Set_DeformationActive(ret: WordBool); safecall;
    function Get_DeformationConstScale: WordBool; safecall;
    procedure Set_DeformationConstScale(ret: WordBool); safecall;
    function Get_MapScale: Double; safecall;
    procedure Set_MapScale(ret: Double); safecall;
    function Get_Layer: IRobotViewFeMapLayerType; safecall;
    procedure Set_Layer(ret: IRobotViewFeMapLayerType); safecall;
    function Get_LayerArbitraryVal: Double; safecall;
    procedure Set_LayerArbitraryVal(ret: Double); safecall;
    function Get_Smoothing: IRobotViewFeMapSmoothingType; safecall;
    procedure Set_Smoothing(ret: IRobotViewFeMapSmoothingType); safecall;
    function Get_Isolines: WordBool; safecall;
    procedure Set_Isolines(ret: WordBool); safecall;
    function Get_WithDescription: WordBool; safecall;
    procedure Set_WithDescription(ret: WordBool); safecall;
    function Get_DirectionNode: Integer; safecall;
    procedure Set_DirectionNode(ret: Integer); safecall;
    procedure SetDirectionData(const _dir_data: IRobotGeoPoint3D); safecall;
    property CurrentResult: IRobotViewFeMapResultType read Get_CurrentResult write Set_CurrentResult;
    property Direction: IRobotViewFeMapLocalSystemType read Get_Direction write Set_Direction;
    property DirectionData: IRobotGeoPoint3D read Get_DirectionData;
    property CrossPresentation: IRobotViewFeMapCrossPresentationType read Get_CrossPresentation write Set_CrossPresentation;
    property DeformationActive: WordBool read Get_DeformationActive write Set_DeformationActive;
    property DeformationConstScale: WordBool read Get_DeformationConstScale write Set_DeformationConstScale;
    property MapScale: Double read Get_MapScale write Set_MapScale;
    property Layer: IRobotViewFeMapLayerType read Get_Layer write Set_Layer;
    property LayerArbitraryVal: Double read Get_LayerArbitraryVal write Set_LayerArbitraryVal;
    property Smoothing: IRobotViewFeMapSmoothingType read Get_Smoothing write Set_Smoothing;
    property Isolines: WordBool read Get_Isolines write Set_Isolines;
    property WithDescription: WordBool read Get_WithDescription write Set_WithDescription;
    property DirectionNode: Integer read Get_DirectionNode write Set_DirectionNode;
  end;

// *********************************************************************//
// DispIntf:  IRobotViewFeMapParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8327AE72-7CB6-11D4-B852-0050DA76755E}
// *********************************************************************//
  IRobotViewFeMapParamsDisp = dispinterface
    ['{8327AE72-7CB6-11D4-B852-0050DA76755E}']
    property CurrentResult: IRobotViewFeMapResultType dispid 1610743808;
    property Direction: IRobotViewFeMapLocalSystemType dispid 1610743810;
    property DirectionData: IRobotGeoPoint3D readonly dispid 1610743812;
    property CrossPresentation: IRobotViewFeMapCrossPresentationType dispid 1610743813;
    property DeformationActive: WordBool dispid 1610743815;
    property DeformationConstScale: WordBool dispid 1610743817;
    property MapScale: Double dispid 1610743819;
    property Layer: IRobotViewFeMapLayerType dispid 1610743821;
    property LayerArbitraryVal: Double dispid 1610743823;
    property Smoothing: IRobotViewFeMapSmoothingType dispid 1610743825;
    property Isolines: WordBool dispid 1610743827;
    property WithDescription: WordBool dispid 1610743829;
    property DirectionNode: Integer dispid 1610743831;
    procedure SetDirectionData(const _dir_data: IRobotGeoPoint3D); dispid 1610743833;
  end;

// *********************************************************************//
// Interface: IRobotRtfView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D064BC90-C516-11D3-B7B6-0050DA76755E}
// *********************************************************************//
  IRobotRtfView = interface(IDispatch)
    ['{D064BC90-C516-11D3-B7B6-0050DA76755E}']
    function Get_Printable: IRobotPrintable; safecall;
    function LoadFromFile(const file_path: WideString): Integer; safecall;
    function SaveToFile(const file_path: WideString; as_template: Integer): Integer; safecall;
    function AppendFromFile(const file_path: WideString): Integer; safecall;
    procedure Evaluate; safecall;
    property Printable: IRobotPrintable read Get_Printable;
  end;

// *********************************************************************//
// DispIntf:  IRobotRtfViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D064BC90-C516-11D3-B7B6-0050DA76755E}
// *********************************************************************//
  IRobotRtfViewDisp = dispinterface
    ['{D064BC90-C516-11D3-B7B6-0050DA76755E}']
    property Printable: IRobotPrintable readonly dispid 1610743808;
    function LoadFromFile(const file_path: WideString): Integer; dispid 1610743809;
    function SaveToFile(const file_path: WideString; as_template: Integer): Integer; dispid 1610743810;
    function AppendFromFile(const file_path: WideString): Integer; dispid 1610743811;
    procedure Evaluate; dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotView2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {78DBD58F-5EBD-41AE-9311-F7559AB5466D}
// *********************************************************************//
  IRobotView2 = interface(IRobotView)
    ['{78DBD58F-5EBD-41AE-9311-F7559AB5466D}']
    function Get_Window: IRobotWindow; safecall;
    function Get_ParamsPanelCut: IRobotViewPanelCutParams; safecall;
    function Get_UserControl: WordBool; safecall;
    procedure Set_UserControl(ret: WordBool); safecall;
    property Window: IRobotWindow read Get_Window;
    property ParamsPanelCut: IRobotViewPanelCutParams read Get_ParamsPanelCut;
    property UserControl: WordBool read Get_UserControl write Set_UserControl;
  end;

// *********************************************************************//
// DispIntf:  IRobotView2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {78DBD58F-5EBD-41AE-9311-F7559AB5466D}
// *********************************************************************//
  IRobotView2Disp = dispinterface
    ['{78DBD58F-5EBD-41AE-9311-F7559AB5466D}']
    property Window: IRobotWindow readonly dispid 1610809344;
    property ParamsPanelCut: IRobotViewPanelCutParams readonly dispid 1610809345;
    property UserControl: WordBool dispid 1610809346;
    property type_: IRobotViewType readonly dispid 1610743808;
    property Visible: Integer dispid 1610743809;
    property Title: WideString dispid 1610743811;
    property Printable: IRobotPrintable readonly dispid 1610743813;
    property Selection: IRobotMultiSelection readonly dispid 1610743814;
    property Projection: IRobotViewProjection dispid 1610743815;
    procedure Redraw(force_init_zoom: Integer); dispid 1610743817;
    procedure GetSize(out width_in_mm: Double; out height_in_mm: Double); dispid 1610743818;
    procedure SetSize(width_in_mm: Double; height_in_mm: Double); dispid 1610743819;
    procedure GetZoom(out left: Double; out top: Double; out right: Double; out bottom: Double); dispid 1610743820;
    procedure SetZoom(left: Double; top: Double; right: Double; bottom: Double); dispid 1610743821;
    property SymbolMagnification: SYSINT dispid 1610743822;
    property DiagramMagnification: SYSINT dispid 1610743824;
    property GridVisible: Integer dispid 1610743826;
    property RulerVisible: Integer dispid 1610743828;
    property StructAxisVisible: Integer dispid 1610743830;
    function GetVisibilityStatus(status_id: IRobotViewVisibilityStatusType): IRobotViewVisibilityStatusValue; dispid 1610743832;
    procedure SetVisibilityStatus(status_id: IRobotViewVisibilityStatusType; 
                                  status_value: IRobotViewVisibilityStatusValue); dispid 1610743833;
    function GetScale(scale_id: SYSINT): Double; dispid 1610743834;
    procedure SetScale(scale_id: SYSINT; val: Double); dispid 1610743835;
    function IsLocal: Integer; dispid 1610743836;
    procedure SetGlobal; dispid 1610743837;
    function SetLocal(const _p1: IRobotGeoPoint3D; const _p2: IRobotGeoPoint3D; 
                      const _p3: IRobotGeoPoint3D): Integer; dispid 1610743838;
    function GetRotationPoint: IRobotGeoPoint3D; dispid 1610743839;
    procedure SetRotationPoint(const rot_point: IRobotGeoPoint3D); dispid 1610743840;
    function GetWorkPoint: IRobotGeoPoint3D; dispid 1610743841;
    procedure SetWorkPoint(const Point: IRobotGeoPoint3D); dispid 1610743842;
    procedure CopyToClipboard; dispid 1610743843;
    procedure Rotate(axis: IRobotGeoCoordinateAxis; _angle: Double); dispid 1610743844;
    property ParamsDisplay: IRobotViewDisplayParams readonly dispid 1610743845;
    property ParamsDiagram: IRobotViewDiagramParams readonly dispid 1610743846;
    property ParamsBarMap: IRobotViewBarMapParams readonly dispid 1610743847;
    property ParamsFeMap: IRobotViewFeMapParams readonly dispid 1610743848;
  end;

// *********************************************************************//
// Interface: IRobotViewPanelCutParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B0CFC897-7F43-45A4-ABD7-D659509BE144}
// *********************************************************************//
  IRobotViewPanelCutParams = interface(IDispatch)
    ['{B0CFC897-7F43-45A4-ABD7-D659509BE144}']
    function Get_CurrentResult: IRobotViewFeMapResultType; safecall;
    procedure Set_CurrentResult(ret: IRobotViewFeMapResultType); safecall;
    function Get_CurrentReinforcementResult: IRobotViewReinforcementResultType; safecall;
    procedure Set_CurrentReinforcementResult(ret: IRobotViewReinforcementResultType); safecall;
    function Get_Descritpions: IRobotViewDiagramDescriptionType; safecall;
    procedure Set_Descritpions(ret: IRobotViewDiagramDescriptionType); safecall;
    function Get_IntegralValue: WordBool; safecall;
    procedure Set_IntegralValue(ret: WordBool); safecall;
    function Get_Filling: IRobotViewDiagramFillingType; safecall;
    procedure Set_Filling(ret: IRobotViewDiagramFillingType); safecall;
    function Get_Position: IRobotViewDiagramPositionType; safecall;
    procedure Set_Position(ret: IRobotViewDiagramPositionType); safecall;
    function Get_Smoothing: IRobotViewFeMapSmoothingType; safecall;
    procedure Set_Smoothing(ret: IRobotViewFeMapSmoothingType); safecall;
    function Get_Layer: IRobotViewFeMapLayerType; safecall;
    procedure Set_Layer(ret: IRobotViewFeMapLayerType); safecall;
    function Get_LayerArbritraryValue: Double; safecall;
    procedure Set_LayerArbritraryValue(ret: Double); safecall;
    property CurrentResult: IRobotViewFeMapResultType read Get_CurrentResult write Set_CurrentResult;
    property CurrentReinforcementResult: IRobotViewReinforcementResultType read Get_CurrentReinforcementResult write Set_CurrentReinforcementResult;
    property Descritpions: IRobotViewDiagramDescriptionType read Get_Descritpions write Set_Descritpions;
    property IntegralValue: WordBool read Get_IntegralValue write Set_IntegralValue;
    property Filling: IRobotViewDiagramFillingType read Get_Filling write Set_Filling;
    property Position: IRobotViewDiagramPositionType read Get_Position write Set_Position;
    property Smoothing: IRobotViewFeMapSmoothingType read Get_Smoothing write Set_Smoothing;
    property Layer: IRobotViewFeMapLayerType read Get_Layer write Set_Layer;
    property LayerArbritraryValue: Double read Get_LayerArbritraryValue write Set_LayerArbritraryValue;
  end;

// *********************************************************************//
// DispIntf:  IRobotViewPanelCutParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B0CFC897-7F43-45A4-ABD7-D659509BE144}
// *********************************************************************//
  IRobotViewPanelCutParamsDisp = dispinterface
    ['{B0CFC897-7F43-45A4-ABD7-D659509BE144}']
    property CurrentResult: IRobotViewFeMapResultType dispid 1610743808;
    property CurrentReinforcementResult: IRobotViewReinforcementResultType dispid 1610743810;
    property Descritpions: IRobotViewDiagramDescriptionType dispid 1610743812;
    property IntegralValue: WordBool dispid 1610743814;
    property Filling: IRobotViewDiagramFillingType dispid 1610743816;
    property Position: IRobotViewDiagramPositionType dispid 1610743818;
    property Smoothing: IRobotViewFeMapSmoothingType dispid 1610743820;
    property Layer: IRobotViewFeMapLayerType dispid 1610743822;
    property LayerArbritraryValue: Double dispid 1610743824;
  end;

// *********************************************************************//
// Interface: IRobotTableFrame
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {296B11E0-7366-4DC2-98A7-30222F789A1F}
// *********************************************************************//
  IRobotTableFrame = interface(IDispatch)
    ['{296B11E0-7366-4DC2-98A7-30222F789A1F}']
    function Get_Count: Integer; safecall;
    function Get_Window: IRobotWindow; safecall;
    function Get_Current: Integer; safecall;
    procedure Set_Current(ret: Integer); safecall;
    function Get(_idx: Integer): IRobotTable; safecall;
    function GetName(_table_idx: Integer): WideString; safecall;
    procedure SetName(_table_idx: Integer; const _name: WideString); safecall;
    property Count: Integer read Get_Count;
    property Window: IRobotWindow read Get_Window;
    property Current: Integer read Get_Current write Set_Current;
  end;

// *********************************************************************//
// DispIntf:  IRobotTableFrameDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {296B11E0-7366-4DC2-98A7-30222F789A1F}
// *********************************************************************//
  IRobotTableFrameDisp = dispinterface
    ['{296B11E0-7366-4DC2-98A7-30222F789A1F}']
    property Count: Integer readonly dispid 1610743808;
    property Window: IRobotWindow readonly dispid 1610743809;
    property Current: Integer dispid 1610743810;
    function Get(_idx: Integer): IRobotTable; dispid 1610743812;
    function GetName(_table_idx: Integer): WideString; dispid 1610743813;
    procedure SetName(_table_idx: Integer; const _name: WideString); dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotPrintEngine
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {42278651-0A6C-11D2-979C-0080C86BE4DF}
// *********************************************************************//
  IRobotPrintEngine = interface(IDispatch)
    ['{42278651-0A6C-11D2-979C-0080C86BE4DF}']
    procedure ResetReport; safecall;
    procedure AddToReport(const Printable: IRobotPrintable); safecall;
    procedure RemoveFromReport(const Printable: IRobotPrintable); safecall;
    procedure PreviewReport; safecall;
    procedure PrintReport; safecall;
    function Get_PageSetup: IRobotPageSetup; safecall;
    function SaveReportToFile(const file_path: WideString; file_format: IRobotOutputFileFormat): WordBool; safecall;
    function AddTemplateToReport(const tmpl_name: WideString): WordBool; safecall;
    procedure SaveReportToTemplate(const tmpl_name: WideString); safecall;
    function AddScToReport(const sc_name: WideString): WordBool; safecall;
    procedure RemoveScFromReport(const sc_name: WideString); safecall;
    function Get_ScreenCaptures: IRobotScreenCaptureMngr; safecall;
    function Get_ReportTemplates: IRobotReportTemplateMngr; safecall;
    function Get_OrganizerItems: IRobotReportItemList; safecall;
    procedure CreateReportFromOrganizer; safecall;
    procedure SaveReportToOrganizer; safecall;
    procedure ExternalPreviewReport(_format: IRobotExternalPreviewFormat); safecall;
    function Get_IsWhilePreview: WordBool; safecall;
    procedure ClosePreview; safecall;
    property PageSetup: IRobotPageSetup read Get_PageSetup;
    property ScreenCaptures: IRobotScreenCaptureMngr read Get_ScreenCaptures;
    property ReportTemplates: IRobotReportTemplateMngr read Get_ReportTemplates;
    property OrganizerItems: IRobotReportItemList read Get_OrganizerItems;
    property IsWhilePreview: WordBool read Get_IsWhilePreview;
  end;

// *********************************************************************//
// DispIntf:  IRobotPrintEngineDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {42278651-0A6C-11D2-979C-0080C86BE4DF}
// *********************************************************************//
  IRobotPrintEngineDisp = dispinterface
    ['{42278651-0A6C-11D2-979C-0080C86BE4DF}']
    procedure ResetReport; dispid 1;
    procedure AddToReport(const Printable: IRobotPrintable); dispid 2;
    procedure RemoveFromReport(const Printable: IRobotPrintable); dispid 3;
    procedure PreviewReport; dispid 4;
    procedure PrintReport; dispid 5;
    property PageSetup: IRobotPageSetup readonly dispid 1610743813;
    function SaveReportToFile(const file_path: WideString; file_format: IRobotOutputFileFormat): WordBool; dispid 1610743814;
    function AddTemplateToReport(const tmpl_name: WideString): WordBool; dispid 1610743815;
    procedure SaveReportToTemplate(const tmpl_name: WideString); dispid 1610743816;
    function AddScToReport(const sc_name: WideString): WordBool; dispid 1610743817;
    procedure RemoveScFromReport(const sc_name: WideString); dispid 1610743818;
    property ScreenCaptures: IRobotScreenCaptureMngr readonly dispid 1610743819;
    property ReportTemplates: IRobotReportTemplateMngr readonly dispid 1610743820;
    property OrganizerItems: IRobotReportItemList readonly dispid 1610743821;
    procedure CreateReportFromOrganizer; dispid 1610743822;
    procedure SaveReportToOrganizer; dispid 1610743823;
    procedure ExternalPreviewReport(_format: IRobotExternalPreviewFormat); dispid 1610743824;
    property IsWhilePreview: WordBool readonly dispid 1610743825;
    procedure ClosePreview; dispid 1610743826;
  end;

// *********************************************************************//
// Interface: IRobotPageSetup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0566D4A0-CCD5-11D3-B7BD-0050DA76755E}
// *********************************************************************//
  IRobotPageSetup = interface(IDispatch)
    ['{0566D4A0-CCD5-11D3-B7BD-0050DA76755E}']
    function Get_Variables: IRobotVariableMngr; safecall;
    function Get_TitlePage: IRobotReportStdElementRtf; safecall;
    function Get_Header: IRobotReportStdElementRtf; safecall;
    function Get_Footer: IRobotReportStdElementRtf; safecall;
    function Get_PaperSize: Integer; safecall;
    procedure Set_PaperSize(ret: Integer); safecall;
    function Get_PaperWidth: Integer; safecall;
    procedure Set_PaperWidth(ret: Integer); safecall;
    function Get_PaperHeight: Integer; safecall;
    procedure Set_PaperHeight(ret: Integer); safecall;
    function Get_StartPageNumber: Integer; safecall;
    procedure Set_StartPageNumber(ret: Integer); safecall;
    function Get_PageOrientation: IRobotPageSetupOrientation; safecall;
    procedure Set_PageOrientation(ret: IRobotPageSetupOrientation); safecall;
    function Get_MarginTop: Double; safecall;
    procedure Set_MarginTop(ret: Double); safecall;
    function Get_MarginLeft: Double; safecall;
    procedure Set_MarginLeft(ret: Double); safecall;
    function Get_MarginBottom: Double; safecall;
    procedure Set_MarginBottom(ret: Double); safecall;
    function Get_MarginRight: Double; safecall;
    procedure Set_MarginRight(ret: Double); safecall;
    function Get_Gutter: Double; safecall;
    procedure Set_Gutter(ret: Double); safecall;
    function Get_FromEdgeHeader: Double; safecall;
    procedure Set_FromEdgeHeader(ret: Double); safecall;
    function Get_FromEdgeFooter: Double; safecall;
    procedure Set_FromEdgeFooter(ret: Double); safecall;
    function Get_TextFrame: IRobotPageSetupFrameType; safecall;
    procedure Set_TextFrame(ret: IRobotPageSetupFrameType); safecall;
    function Get_Toc: IRobotPageSetupTableOfContents; safecall;
    function Get_TemplateName: WideString; safecall;
    function Get_IsCurrent: WordBool; safecall;
    procedure Set_IsCurrent(ret: WordBool); safecall;
    function Get_TemplateCount: Integer; safecall;
    function SaveAs(const _template_name: WideString): WordBool; safecall;
    function Load(const _template_name: WideString): WordBool; safecall;
    function Save: WordBool; safecall;
    function GetTemplateName(_idx: Integer): WideString; safecall;
    function LoadCurrent: WordBool; safecall;
    property Variables: IRobotVariableMngr read Get_Variables;
    property TitlePage: IRobotReportStdElementRtf read Get_TitlePage;
    property Header: IRobotReportStdElementRtf read Get_Header;
    property Footer: IRobotReportStdElementRtf read Get_Footer;
    property PaperSize: Integer read Get_PaperSize write Set_PaperSize;
    property PaperWidth: Integer read Get_PaperWidth write Set_PaperWidth;
    property PaperHeight: Integer read Get_PaperHeight write Set_PaperHeight;
    property StartPageNumber: Integer read Get_StartPageNumber write Set_StartPageNumber;
    property PageOrientation: IRobotPageSetupOrientation read Get_PageOrientation write Set_PageOrientation;
    property MarginTop: Double read Get_MarginTop write Set_MarginTop;
    property MarginLeft: Double read Get_MarginLeft write Set_MarginLeft;
    property MarginBottom: Double read Get_MarginBottom write Set_MarginBottom;
    property MarginRight: Double read Get_MarginRight write Set_MarginRight;
    property Gutter: Double read Get_Gutter write Set_Gutter;
    property FromEdgeHeader: Double read Get_FromEdgeHeader write Set_FromEdgeHeader;
    property FromEdgeFooter: Double read Get_FromEdgeFooter write Set_FromEdgeFooter;
    property TextFrame: IRobotPageSetupFrameType read Get_TextFrame write Set_TextFrame;
    property Toc: IRobotPageSetupTableOfContents read Get_Toc;
    property TemplateName: WideString read Get_TemplateName;
    property IsCurrent: WordBool read Get_IsCurrent write Set_IsCurrent;
    property TemplateCount: Integer read Get_TemplateCount;
  end;

// *********************************************************************//
// DispIntf:  IRobotPageSetupDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0566D4A0-CCD5-11D3-B7BD-0050DA76755E}
// *********************************************************************//
  IRobotPageSetupDisp = dispinterface
    ['{0566D4A0-CCD5-11D3-B7BD-0050DA76755E}']
    property Variables: IRobotVariableMngr readonly dispid 1610743808;
    property TitlePage: IRobotReportStdElementRtf readonly dispid 1610743809;
    property Header: IRobotReportStdElementRtf readonly dispid 1610743810;
    property Footer: IRobotReportStdElementRtf readonly dispid 1610743811;
    property PaperSize: Integer dispid 1610743812;
    property PaperWidth: Integer dispid 1610743814;
    property PaperHeight: Integer dispid 1610743816;
    property StartPageNumber: Integer dispid 1610743818;
    property PageOrientation: IRobotPageSetupOrientation dispid 1610743820;
    property MarginTop: Double dispid 1610743822;
    property MarginLeft: Double dispid 1610743824;
    property MarginBottom: Double dispid 1610743826;
    property MarginRight: Double dispid 1610743828;
    property Gutter: Double dispid 1610743830;
    property FromEdgeHeader: Double dispid 1610743832;
    property FromEdgeFooter: Double dispid 1610743834;
    property TextFrame: IRobotPageSetupFrameType dispid 1610743836;
    property Toc: IRobotPageSetupTableOfContents readonly dispid 1610743838;
    property TemplateName: WideString readonly dispid 1610743839;
    property IsCurrent: WordBool dispid 1610743840;
    property TemplateCount: Integer readonly dispid 1610743842;
    function SaveAs(const _template_name: WideString): WordBool; dispid 1610743843;
    function Load(const _template_name: WideString): WordBool; dispid 1610743844;
    function Save: WordBool; dispid 1610743845;
    function GetTemplateName(_idx: Integer): WideString; dispid 1610743846;
    function LoadCurrent: WordBool; dispid 1610743847;
  end;

// *********************************************************************//
// Interface: IRobotVariableMngr
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {68CD9440-CCC7-11D3-B7BD-0050DA76755E}
// *********************************************************************//
  IRobotVariableMngr = interface(IDispatch)
    ['{68CD9440-CCC7-11D3-B7BD-0050DA76755E}']
    function Exist(const var_name: WideString): Integer; safecall;
    function GetValue(const var_name: WideString): WideString; safecall;
    procedure SetValue(const var_name: WideString; const var_value: WideString); safecall;
    procedure Delete(const var_name: WideString); safecall;
    function GetPredefinedValue(var_id: IRobotVariablePredefinedId): WideString; safecall;
    function SetPredefinedValue(var_id: IRobotVariablePredefinedId; const var_value: WideString): Integer; safecall;
    procedure AddExtension(const _ext_obj: IRobotVariableMngrExtension); safecall;
    procedure RemoveExtension(const _ext_obj: IRobotVariableMngrExtension); safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotVariableMngrDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {68CD9440-CCC7-11D3-B7BD-0050DA76755E}
// *********************************************************************//
  IRobotVariableMngrDisp = dispinterface
    ['{68CD9440-CCC7-11D3-B7BD-0050DA76755E}']
    function Exist(const var_name: WideString): Integer; dispid 1610743808;
    function GetValue(const var_name: WideString): WideString; dispid 1610743809;
    procedure SetValue(const var_name: WideString; const var_value: WideString); dispid 1610743810;
    procedure Delete(const var_name: WideString); dispid 1610743811;
    function GetPredefinedValue(var_id: IRobotVariablePredefinedId): WideString; dispid 1610743812;
    function SetPredefinedValue(var_id: IRobotVariablePredefinedId; const var_value: WideString): Integer; dispid 1610743813;
    procedure AddExtension(const _ext_obj: IRobotVariableMngrExtension); dispid 1610743814;
    procedure RemoveExtension(const _ext_obj: IRobotVariableMngrExtension); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRobotVariableMngrExtension
// Flags:     (256) OleAutomation
// GUID:      {0D829AF4-0057-4F1D-BC22-EB8DB8346D08}
// *********************************************************************//
  IRobotVariableMngrExtension = interface(IUnknown)
    ['{0D829AF4-0057-4F1D-BC22-EB8DB8346D08}']
    function GetValue(const _var_name: WideString; var _var_value: WideString; out ret: WordBool): HResult; stdcall;
    function GetIndexedValue(const _var_name: WideString; _cur_index: Integer; _max_index: Integer; 
                             var _var_value: WideString; out ret: WordBool): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IRobotReportStdElementRtf
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {41C82C12-ED1B-11D4-B8AF-0050DA76755E}
// *********************************************************************//
  IRobotReportStdElementRtf = interface(IDispatch)
    ['{41C82C12-ED1B-11D4-B8AF-0050DA76755E}']
    function Get_Active: WordBool; safecall;
    procedure Set_Active(ret: WordBool); safecall;
    function LoadFromFile(const _file_path: WideString): WordBool; safecall;
    procedure RestoreDefaults; safecall;
    function Get_Frame: IRobotPageSetupFrameType; safecall;
    procedure Set_Frame(ret: IRobotPageSetupFrameType); safecall;
    function SaveToFile(const _fpath: WideString; _format: IRobotOutputFileFormat): WordBool; safecall;
    property Active: WordBool read Get_Active write Set_Active;
    property Frame: IRobotPageSetupFrameType read Get_Frame write Set_Frame;
  end;

// *********************************************************************//
// DispIntf:  IRobotReportStdElementRtfDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {41C82C12-ED1B-11D4-B8AF-0050DA76755E}
// *********************************************************************//
  IRobotReportStdElementRtfDisp = dispinterface
    ['{41C82C12-ED1B-11D4-B8AF-0050DA76755E}']
    property Active: WordBool dispid 1610743808;
    function LoadFromFile(const _file_path: WideString): WordBool; dispid 1610743810;
    procedure RestoreDefaults; dispid 1610743811;
    property Frame: IRobotPageSetupFrameType dispid 1610743812;
    function SaveToFile(const _fpath: WideString; _format: IRobotOutputFileFormat): WordBool; dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotPageSetupTableOfContents
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B0FC6791-04E1-4971-A221-0B9B0A81622B}
// *********************************************************************//
  IRobotPageSetupTableOfContents = interface(IDispatch)
    ['{B0FC6791-04E1-4971-A221-0B9B0A81622B}']
    function Get_Active: WordBool; safecall;
    procedure Set_Active(ret: WordBool); safecall;
    function Get_Location: IRobotPageSetupTocLocation; safecall;
    procedure Set_Location(ret: IRobotPageSetupTocLocation); safecall;
    function Get_IncludeTitle: WordBool; safecall;
    procedure Set_IncludeTitle(ret: WordBool); safecall;
    property Active: WordBool read Get_Active write Set_Active;
    property Location: IRobotPageSetupTocLocation read Get_Location write Set_Location;
    property IncludeTitle: WordBool read Get_IncludeTitle write Set_IncludeTitle;
  end;

// *********************************************************************//
// DispIntf:  IRobotPageSetupTableOfContentsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B0FC6791-04E1-4971-A221-0B9B0A81622B}
// *********************************************************************//
  IRobotPageSetupTableOfContentsDisp = dispinterface
    ['{B0FC6791-04E1-4971-A221-0B9B0A81622B}']
    property Active: WordBool dispid 1610743808;
    property Location: IRobotPageSetupTocLocation dispid 1610743810;
    property IncludeTitle: WordBool dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotScreenCaptureMngr
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3BE0D394-1144-11D4-B7F6-0050DA76755E}
// *********************************************************************//
  IRobotScreenCaptureMngr = interface(IDispatch)
    ['{3BE0D394-1144-11D4-B7F6-0050DA76755E}']
    function Get_Count: Integer; safecall;
    function Get(idx: Integer): WideString; safecall;
    procedure Remove(const sc_name: WideString); safecall;
    function Find(const sc_name: WideString): Integer; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotScreenCaptureMngrDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3BE0D394-1144-11D4-B7F6-0050DA76755E}
// *********************************************************************//
  IRobotScreenCaptureMngrDisp = dispinterface
    ['{3BE0D394-1144-11D4-B7F6-0050DA76755E}']
    property Count: Integer readonly dispid 1610743808;
    function Get(idx: Integer): WideString; dispid 1610743809;
    procedure Remove(const sc_name: WideString); dispid 1610743810;
    function Find(const sc_name: WideString): Integer; dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotReportTemplateMngr
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3BE0D392-1144-11D4-B7F6-0050DA76755E}
// *********************************************************************//
  IRobotReportTemplateMngr = interface(IDispatch)
    ['{3BE0D392-1144-11D4-B7F6-0050DA76755E}']
    function Get_Count: Integer; safecall;
    function Get(idx: Integer): WideString; safecall;
    procedure Remove(const tmpl_name: WideString); safecall;
    function Find(const tmpl_name: WideString): Integer; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotReportTemplateMngrDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3BE0D392-1144-11D4-B7F6-0050DA76755E}
// *********************************************************************//
  IRobotReportTemplateMngrDisp = dispinterface
    ['{3BE0D392-1144-11D4-B7F6-0050DA76755E}']
    property Count: Integer readonly dispid 1610743808;
    function Get(idx: Integer): WideString; dispid 1610743809;
    procedure Remove(const tmpl_name: WideString); dispid 1610743810;
    function Find(const tmpl_name: WideString): Integer; dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotReportItemList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7474187-E3B0-4453-A439-9E3D5D41CEBD}
// *********************************************************************//
  IRobotReportItemList = interface(IDispatch)
    ['{A7474187-E3B0-4453-A439-9E3D5D41CEBD}']
    function Get_Count: Integer; safecall;
    function Get(_idx: Integer): IRobotReportItem; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotReportItemListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7474187-E3B0-4453-A439-9E3D5D41CEBD}
// *********************************************************************//
  IRobotReportItemListDisp = dispinterface
    ['{A7474187-E3B0-4453-A439-9E3D5D41CEBD}']
    property Count: Integer readonly dispid 1610743808;
    function Get(_idx: Integer): IRobotReportItem; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotReportItem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9AA7A335-DA92-4409-B156-8BD5E432BCC3}
// *********************************************************************//
  IRobotReportItem = interface(IDispatch)
    ['{9AA7A335-DA92-4409-B156-8BD5E432BCC3}']
    function Get_StartFromNewPage: WordBool; safecall;
    function Get_TitleText: WideString; safecall;
    function Get_Title: IRobotRtfView; safecall;
    function Get_HasNoteBefore: WordBool; safecall;
    function Get_NoteBefore: IRobotRtfView; safecall;
    function Get_HasNoteAfter: WordBool; safecall;
    function Get_NoteAfter: IRobotRtfView; safecall;
    function Get_type_: IRobotReportItemType; safecall;
    function CreateView: IDispatch; safecall;
    function GetPageTemplate: WideString; safecall;
    function Get_IncludeDateTime: WordBool; safecall;
    procedure Set_StartFromNewPage(ret: WordBool); safecall;
    function Get_ExcludeFromReport: WordBool; safecall;
    procedure Set_ExcludeFromReport(ret: WordBool); safecall;
    property StartFromNewPage: WordBool read Get_StartFromNewPage write Set_StartFromNewPage;
    property TitleText: WideString read Get_TitleText;
    property Title: IRobotRtfView read Get_Title;
    property HasNoteBefore: WordBool read Get_HasNoteBefore;
    property NoteBefore: IRobotRtfView read Get_NoteBefore;
    property HasNoteAfter: WordBool read Get_HasNoteAfter;
    property NoteAfter: IRobotRtfView read Get_NoteAfter;
    property type_: IRobotReportItemType read Get_type_;
    property IncludeDateTime: WordBool read Get_IncludeDateTime;
    property ExcludeFromReport: WordBool read Get_ExcludeFromReport write Set_ExcludeFromReport;
  end;

// *********************************************************************//
// DispIntf:  IRobotReportItemDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9AA7A335-DA92-4409-B156-8BD5E432BCC3}
// *********************************************************************//
  IRobotReportItemDisp = dispinterface
    ['{9AA7A335-DA92-4409-B156-8BD5E432BCC3}']
    property StartFromNewPage: WordBool dispid 1610743808;
    property TitleText: WideString readonly dispid 1610743809;
    property Title: IRobotRtfView readonly dispid 1610743810;
    property HasNoteBefore: WordBool readonly dispid 1610743811;
    property NoteBefore: IRobotRtfView readonly dispid 1610743812;
    property HasNoteAfter: WordBool readonly dispid 1610743813;
    property NoteAfter: IRobotRtfView readonly dispid 1610743814;
    property type_: IRobotReportItemType readonly dispid 1610743815;
    function CreateView: IDispatch; dispid 1610743816;
    function GetPageTemplate: WideString; dispid 1610743817;
    property IncludeDateTime: WordBool readonly dispid 1610743818;
    property ExcludeFromReport: WordBool dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRJointConnectionServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {31E739D0-B475-11D3-9979-0080C86BE4DF}
// *********************************************************************//
  IRJointConnectionServer = interface(IDispatch)
    ['{31E739D0-B475-11D3-9979-0080C86BE4DF}']
    function Get_Count: Integer; safecall;
    function CreateInfo: IRJointConnectionInfo; safecall;
    function Create(joint_type: IRJointConnectionType): IRJointConnection; safecall;
    function GetInfo(num: Integer): IRJointConnectionInfo; safecall;
    function Get(num: Integer): IRJointConnection; safecall;
    procedure Delete(num: Integer); safecall;
    function Find(const sel_text: WideString): Integer; safecall;
    function GetAllNumbers: IRobotNumbersArray; safecall;
    function Calculate(num: Integer; const joint_loads: IRJointLoad): Double; safecall;
    function CalculateNote(num: Integer; const joint_loads: IRJointLoad; const file_path: WideString): Double; safecall;
    function Exist(num: Integer): Integer; safecall;
    function FindWithId(unique_id: Integer): Integer; safecall;
    procedure SetExt(ext: IRJointExtType); safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRJointConnectionServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {31E739D0-B475-11D3-9979-0080C86BE4DF}
// *********************************************************************//
  IRJointConnectionServerDisp = dispinterface
    ['{31E739D0-B475-11D3-9979-0080C86BE4DF}']
    property Count: Integer readonly dispid 1610743808;
    function CreateInfo: IRJointConnectionInfo; dispid 1610743809;
    function Create(joint_type: IRJointConnectionType): IRJointConnection; dispid 1610743810;
    function GetInfo(num: Integer): IRJointConnectionInfo; dispid 1610743811;
    function Get(num: Integer): IRJointConnection; dispid 1610743812;
    procedure Delete(num: Integer); dispid 1610743813;
    function Find(const sel_text: WideString): Integer; dispid 1610743814;
    function GetAllNumbers: IRobotNumbersArray; dispid 1610743815;
    function Calculate(num: Integer; const joint_loads: IRJointLoad): Double; dispid 1610743816;
    function CalculateNote(num: Integer; const joint_loads: IRJointLoad; const file_path: WideString): Double; dispid 1610743817;
    function Exist(num: Integer): Integer; dispid 1610743818;
    function FindWithId(unique_id: Integer): Integer; dispid 1610743819;
    procedure SetExt(ext: IRJointExtType); dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRJointConnectionInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C9F80-AE18-11D3-9972-0080C86BE4DF}
// *********************************************************************//
  IRJointConnectionInfo = interface(IDispatch)
    ['{1C8C9F80-AE18-11D3-9972-0080C86BE4DF}']
    function Get_DefType: IRJointConnectionDefType; safecall;
    procedure Set_DefType(ret: IRJointConnectionDefType); safecall;
    function Get_Elements: IRobotSelection; safecall;
    function Get_Node: Integer; safecall;
    procedure Set_Node(ret: Integer); safecall;
    function Get_Number: Integer; safecall;
    procedure Set_Number(ret: Integer); safecall;
    function Get_type_: IRJointConnectionType; safecall;
    procedure Set_type_(ret: IRJointConnectionType); safecall;
    function Get_UniqueId: Integer; safecall;
    function Get_UserId: Integer; safecall;
    procedure Set_UserId(ret: Integer); safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    property DefType: IRJointConnectionDefType read Get_DefType write Set_DefType;
    property Elements: IRobotSelection read Get_Elements;
    property Node: Integer read Get_Node write Set_Node;
    property Number: Integer read Get_Number write Set_Number;
    property type_: IRJointConnectionType read Get_type_ write Set_type_;
    property UniqueId: Integer read Get_UniqueId;
    property UserId: Integer read Get_UserId write Set_UserId;
    property Name: WideString read Get_Name write Set_Name;
  end;

// *********************************************************************//
// DispIntf:  IRJointConnectionInfoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C9F80-AE18-11D3-9972-0080C86BE4DF}
// *********************************************************************//
  IRJointConnectionInfoDisp = dispinterface
    ['{1C8C9F80-AE18-11D3-9972-0080C86BE4DF}']
    property DefType: IRJointConnectionDefType dispid 1610743808;
    property Elements: IRobotSelection readonly dispid 1610743810;
    property Node: Integer dispid 1610743811;
    property Number: Integer dispid 1610743813;
    property type_: IRJointConnectionType dispid 1610743815;
    property UniqueId: Integer readonly dispid 1610743817;
    property UserId: Integer dispid 1610743818;
    property Name: WideString dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRJointConnection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C9F81-AE18-11D3-9972-0080C86BE4DF}
// *********************************************************************//
  IRJointConnection = interface(IDispatch)
    ['{1C8C9F81-AE18-11D3-9972-0080C86BE4DF}']
    function Get_WFRelPos: IRJointWebFlangeRelativePos; safecall;
    procedure Set_WFRelPos(ret: IRJointWebFlangeRelativePos); safecall;
    function Get_type_: IRJointConnectionType; safecall;
    procedure SetToRobot(const info: IRJointConnectionInfo); safecall;
    procedure GetFromRobot(const info: IRJointConnectionInfo); safecall;
    property WFRelPos: IRJointWebFlangeRelativePos read Get_WFRelPos write Set_WFRelPos;
    property type_: IRJointConnectionType read Get_type_;
  end;

// *********************************************************************//
// DispIntf:  IRJointConnectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C9F81-AE18-11D3-9972-0080C86BE4DF}
// *********************************************************************//
  IRJointConnectionDisp = dispinterface
    ['{1C8C9F81-AE18-11D3-9972-0080C86BE4DF}']
    property WFRelPos: IRJointWebFlangeRelativePos dispid 1610743808;
    property type_: IRJointConnectionType readonly dispid 1610743810;
    procedure SetToRobot(const info: IRJointConnectionInfo); dispid 1610743811;
    procedure GetFromRobot(const info: IRJointConnectionInfo); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRJointLoad
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306743-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRJointLoad = interface(IDispatch)
    ['{3E306743-C804-11D3-B7B9-0050DA76755E}']
    function Get_Cases: IRobotSelection; safecall;
    function Get_type_: IRJointLoadType; safecall;
    procedure Set_type_(ret: IRJointLoadType); safecall;
    property Cases: IRobotSelection read Get_Cases;
    property type_: IRJointLoadType read Get_type_ write Set_type_;
  end;

// *********************************************************************//
// DispIntf:  IRJointLoadDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306743-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRJointLoadDisp = dispinterface
    ['{3E306743-C804-11D3-B7B9-0050DA76755E}']
    property Cases: IRobotSelection readonly dispid 1610743808;
    property type_: IRJointLoadType dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRDimServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C508E4BC-158D-11D5-9945-00008653042C}
// *********************************************************************//
  IRDimServer = interface(IDispatch)
    ['{C508E4BC-158D-11D5-9945-00008653042C}']
    procedure Set_Mode(Param1: IRDimServerMode); safecall;
    function Get_MembersService: IRDimMembers; safecall;
    function Get_GroupsService: IRDimGroups; safecall;
    function Get_CalculEngine: IRDimCalcEngine; safecall;
    function Get_Connection: IRDimConnection; safecall;
    property Mode: IRDimServerMode write Set_Mode;
    property MembersService: IRDimMembers read Get_MembersService;
    property GroupsService: IRDimGroups read Get_GroupsService;
    property CalculEngine: IRDimCalcEngine read Get_CalculEngine;
    property Connection: IRDimConnection read Get_Connection;
  end;

// *********************************************************************//
// DispIntf:  IRDimServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C508E4BC-158D-11D5-9945-00008653042C}
// *********************************************************************//
  IRDimServerDisp = dispinterface
    ['{C508E4BC-158D-11D5-9945-00008653042C}']
    property Mode: IRDimServerMode writeonly dispid 1610743808;
    property MembersService: IRDimMembers readonly dispid 1610743809;
    property GroupsService: IRDimGroups readonly dispid 1610743810;
    property CalculEngine: IRDimCalcEngine readonly dispid 1610743811;
    property Connection: IRDimConnection readonly dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRDimMembers
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {54FA6626-B055-4E88-955D-1FFAB10635DA}
// *********************************************************************//
  IRDimMembers = interface(IDispatch)
    ['{54FA6626-B055-4E88-955D-1FFAB10635DA}']
    function Get_Count: Integer; safecall;
    function GetUserNo(index: Integer): Integer; safecall;
    function Get(no: Integer): IRDimMember; safecall;
    procedure Save(const val: IRDimMember); safecall;
    function New(like_no: Integer; new_no: Integer): IRDimMember; safecall;
    function Delete(no: Integer): Integer; safecall;
    procedure Generate(const in_: IDispatch); safecall;
    function Get_DefDataService: IRDimMembDefDataSrv; safecall;
    property Count: Integer read Get_Count;
    property DefDataService: IRDimMembDefDataSrv read Get_DefDataService;
  end;

// *********************************************************************//
// DispIntf:  IRDimMembersDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {54FA6626-B055-4E88-955D-1FFAB10635DA}
// *********************************************************************//
  IRDimMembersDisp = dispinterface
    ['{54FA6626-B055-4E88-955D-1FFAB10635DA}']
    property Count: Integer readonly dispid 1610743808;
    function GetUserNo(index: Integer): Integer; dispid 1610743809;
    function Get(no: Integer): IRDimMember; dispid 1610743810;
    procedure Save(const val: IRDimMember); dispid 1610743811;
    function New(like_no: Integer; new_no: Integer): IRDimMember; dispid 1610743812;
    function Delete(no: Integer): Integer; dispid 1610743813;
    procedure Generate(const in_: IDispatch); dispid 1610743814;
    property DefDataService: IRDimMembDefDataSrv readonly dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRDimMember
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {23BF76AA-A5AB-433D-96AE-BB8BD911A489}
// *********************************************************************//
  IRDimMember = interface(IDispatch)
    ['{23BF76AA-A5AB-433D-96AE-BB8BD911A489}']
    function Get_UsrNo: Integer; safecall;
    function Get_IsComplex: Integer; safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_DefDataName: WideString; safecall;
    procedure Set_DefDataName(const ret: WideString); safecall;
    procedure GetComplexList(const in_: IRDimStream); safecall;
    procedure SetComplexList(const in_: IRDimStream); safecall;
    property UsrNo: Integer read Get_UsrNo;
    property IsComplex: Integer read Get_IsComplex;
    property Name: WideString read Get_Name write Set_Name;
    property DefDataName: WideString read Get_DefDataName write Set_DefDataName;
  end;

// *********************************************************************//
// DispIntf:  IRDimMemberDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {23BF76AA-A5AB-433D-96AE-BB8BD911A489}
// *********************************************************************//
  IRDimMemberDisp = dispinterface
    ['{23BF76AA-A5AB-433D-96AE-BB8BD911A489}']
    property UsrNo: Integer readonly dispid 1610743808;
    property IsComplex: Integer readonly dispid 1610743809;
    property Name: WideString dispid 1610743810;
    property DefDataName: WideString dispid 1610743812;
    procedure GetComplexList(const in_: IRDimStream); dispid 1610743814;
    procedure SetComplexList(const in_: IRDimStream); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRDimStream
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {75F51A01-A064-11D3-9A65-00105AC6705D}
// *********************************************************************//
  IRDimStream = interface(IDispatch)
    ['{75F51A01-A064-11D3-9A65-00105AC6705D}']
    procedure Clear; safecall;
    function Size(_type: IRDimStreamType): Integer; safecall;
    procedure SeekSet(_type: IRDimStreamType; pos: Integer); safecall;
    procedure WriteLong(val: Integer); safecall;
    function ReadLong: Integer; safecall;
    procedure WriteDouble(val: Double); safecall;
    function ReadDouble: Double; safecall;
    procedure WriteText(const val: WideString); safecall;
    function ReadText: WideString; safecall;
    function Get_EoL: Integer; safecall;
    function Get_EoD: Integer; safecall;
    function Get_EoT: Integer; safecall;
    property EoL: Integer read Get_EoL;
    property EoD: Integer read Get_EoD;
    property EoT: Integer read Get_EoT;
  end;

// *********************************************************************//
// DispIntf:  IRDimStreamDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {75F51A01-A064-11D3-9A65-00105AC6705D}
// *********************************************************************//
  IRDimStreamDisp = dispinterface
    ['{75F51A01-A064-11D3-9A65-00105AC6705D}']
    procedure Clear; dispid 1610743808;
    function Size(_type: IRDimStreamType): Integer; dispid 1610743809;
    procedure SeekSet(_type: IRDimStreamType; pos: Integer); dispid 1610743810;
    procedure WriteLong(val: Integer); dispid 1610743811;
    function ReadLong: Integer; dispid 1610743812;
    procedure WriteDouble(val: Double); dispid 1610743813;
    function ReadDouble: Double; dispid 1610743814;
    procedure WriteText(const val: WideString); dispid 1610743815;
    function ReadText: WideString; dispid 1610743816;
    property EoL: Integer readonly dispid 1610743817;
    property EoD: Integer readonly dispid 1610743818;
    property EoT: Integer readonly dispid 1610743819;
  end;

// *********************************************************************//
// Interface: IRDimMembDefDataSrv
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A815E098-693B-4ABF-81A9-02F237B742C8}
// *********************************************************************//
  IRDimMembDefDataSrv = interface(IDispatch)
    ['{A815E098-693B-4ABF-81A9-02F237B742C8}']
    function Get_Count: Integer; safecall;
    function Name(index: Integer): WideString; safecall;
    function Get(const Name: WideString): IRDimMembDefData; safecall;
    procedure Check(const Name: WideString; out is_defined: Integer; out can_be_saved: Integer); safecall;
    procedure Save(const val: IRDimMembDefData); safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRDimMembDefDataSrvDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A815E098-693B-4ABF-81A9-02F237B742C8}
// *********************************************************************//
  IRDimMembDefDataSrvDisp = dispinterface
    ['{A815E098-693B-4ABF-81A9-02F237B742C8}']
    property Count: Integer readonly dispid 1610743808;
    function Name(index: Integer): WideString; dispid 1610743809;
    function Get(const Name: WideString): IRDimMembDefData; dispid 1610743810;
    procedure Check(const Name: WideString; out is_defined: Integer; out can_be_saved: Integer); dispid 1610743811;
    procedure Save(const val: IRDimMembDefData); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRDimMembDefData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F93387D1-1C5D-11D5-8814-0050DA7675E2}
// *********************************************************************//
  IRDimMembDefData = interface(IDispatch)
    ['{F93387D1-1C5D-11D5-8814-0050DA7675E2}']
    procedure Store(const str: IRDimStream); safecall;
    procedure Retrieve(const str: IRDimStream); safecall;
    function Get_type_: IRDimMembDefType; safecall;
    procedure Set_type_(ret: IRDimMembDefType); safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    procedure SetLengthYZUV(Type_: IRDimMembDefLengthDataType; val: Double); safecall;
    function LengthYZUV(Type_: IRDimMembDefLengthDataType): Double; safecall;
    procedure SetDisplacementXY(Type_: IRDimMembDefDispDataType; val: Integer); safecall;
    function IsDisplacementXY(Type_: IRDimMembDefDispDataType): Integer; safecall;
    procedure SetDisplXYRelLimit(Type_: IRDimMembDefDispDataType; val: Double); safecall;
    function DisplXYRelLimit(Type_: IRDimMembDefDispDataType): Double; safecall;
    procedure SetDeflectionYZ(Type_: IRDimMembDefDeflDataType; val: Integer); safecall;
    function IsDeflectionYZ(Type_: IRDimMembDefDeflDataType): Integer; safecall;
    procedure SetDeflYZRelLimit(Type_: IRDimMembDefDeflDataType; val: Double); safecall;
    function DeflYZRelLimit(Type_: IRDimMembDefDeflDataType): Double; safecall;
    procedure Set_InitDeflType(ret: IRDimMembDefInitDeflType); safecall;
    function Get_InitDeflType: IRDimMembDefInitDeflType; safecall;
    procedure SetUserInitDefl(Type_: IRDimMembDefUserInitDeflType; val: Double); safecall;
    function GetUserInitDefl(Type_: IRDimMembDefUserInitDeflType): Double; safecall;
    procedure IntPsClear(Type_: IRDimMembDefIntPsDataType); safecall;
    function IntPsCoordNum(Type_: IRDimMembDefIntPsDataType): Integer; safecall;
    procedure SetIntPsCoordValueType(Type_: IRDimMembDefIntPsDataType; IsRelValue: Integer); safecall;
    function IntPsCoordValueType(Type_: IRDimMembDefIntPsDataType): Integer; safecall;
    procedure SetIntPtValues(Type_: IRDimMembDefIntPsDataType; no: Integer; coord: Double; 
                             Coeff: Double); safecall;
    procedure IntPtValues(Type_: IRDimMembDefIntPsDataType; no: Integer; out coord: Double; 
                          out Coeff: Double); safecall;
    procedure SetIntPtAddOption(Type_: IRDimMembDefIntPsDataType; 
                                option: IRDimMembDefIntPsOptionType; IsSet: Integer); safecall;
    procedure IntPtAddOption(Type_: IRDimMembDefIntPsDataType; option: IRDimMembDefIntPsOptionType; 
                             out IsSet: Integer); safecall;
    procedure StoreExpIntPs(const in_: IDispatch); safecall;
    procedure RetrieveExpIntPs(const in_: IDispatch); safecall;
    function Get_RangeMoments: Integer; safecall;
    procedure RangeCoords(out beg: Double; out End_: Double); safecall;
    function Get_CantileverMode: Integer; safecall;
    procedure Set_CantileverMode(ret: Integer); safecall;
    function Get_PipeMode: Integer; safecall;
    procedure Set_PipeMode(ret: Integer); safecall;
    procedure SetStructureSwayYZ(Type_: IRDimMembDefBucklingDataType; is_sway: Integer); safecall;
    function IsStructureSwayYZ(Type_: IRDimMembDefBucklingDataType): Integer; safecall;
    procedure StoreAdjoinParamsYZ(Type_: IRDimMembDefBucklingDataType; const in_: IDispatch); safecall;
    procedure RetrieveAdjoinParamsYZ(Type_: IRDimMembDefBucklingDataType; const in_: IDispatch); safecall;
    function Get_CodeParams: IDispatch; safecall;
    procedure Set_CodeParams(const ret: IDispatch); safecall;
    property type_: IRDimMembDefType read Get_type_ write Set_type_;
    property Name: WideString read Get_Name write Set_Name;
    property InitDeflType: IRDimMembDefInitDeflType read Get_InitDeflType write Set_InitDeflType;
    property RangeMoments: Integer read Get_RangeMoments;
    property CantileverMode: Integer read Get_CantileverMode write Set_CantileverMode;
    property PipeMode: Integer read Get_PipeMode write Set_PipeMode;
    property CodeParams: IDispatch read Get_CodeParams write Set_CodeParams;
  end;

// *********************************************************************//
// DispIntf:  IRDimMembDefDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F93387D1-1C5D-11D5-8814-0050DA7675E2}
// *********************************************************************//
  IRDimMembDefDataDisp = dispinterface
    ['{F93387D1-1C5D-11D5-8814-0050DA7675E2}']
    procedure Store(const str: IRDimStream); dispid 1610743808;
    procedure Retrieve(const str: IRDimStream); dispid 1610743809;
    property type_: IRDimMembDefType dispid 1610743810;
    property Name: WideString dispid 1610743812;
    procedure SetLengthYZUV(Type_: IRDimMembDefLengthDataType; val: Double); dispid 1610743814;
    function LengthYZUV(Type_: IRDimMembDefLengthDataType): Double; dispid 1610743815;
    procedure SetDisplacementXY(Type_: IRDimMembDefDispDataType; val: Integer); dispid 1610743816;
    function IsDisplacementXY(Type_: IRDimMembDefDispDataType): Integer; dispid 1610743817;
    procedure SetDisplXYRelLimit(Type_: IRDimMembDefDispDataType; val: Double); dispid 1610743818;
    function DisplXYRelLimit(Type_: IRDimMembDefDispDataType): Double; dispid 1610743819;
    procedure SetDeflectionYZ(Type_: IRDimMembDefDeflDataType; val: Integer); dispid 1610743820;
    function IsDeflectionYZ(Type_: IRDimMembDefDeflDataType): Integer; dispid 1610743821;
    procedure SetDeflYZRelLimit(Type_: IRDimMembDefDeflDataType; val: Double); dispid 1610743822;
    function DeflYZRelLimit(Type_: IRDimMembDefDeflDataType): Double; dispid 1610743823;
    property InitDeflType: IRDimMembDefInitDeflType dispid 1610743824;
    procedure SetUserInitDefl(Type_: IRDimMembDefUserInitDeflType; val: Double); dispid 1610743826;
    function GetUserInitDefl(Type_: IRDimMembDefUserInitDeflType): Double; dispid 1610743827;
    procedure IntPsClear(Type_: IRDimMembDefIntPsDataType); dispid 1610743828;
    function IntPsCoordNum(Type_: IRDimMembDefIntPsDataType): Integer; dispid 1610743829;
    procedure SetIntPsCoordValueType(Type_: IRDimMembDefIntPsDataType; IsRelValue: Integer); dispid 1610743830;
    function IntPsCoordValueType(Type_: IRDimMembDefIntPsDataType): Integer; dispid 1610743831;
    procedure SetIntPtValues(Type_: IRDimMembDefIntPsDataType; no: Integer; coord: Double; 
                             Coeff: Double); dispid 1610743832;
    procedure IntPtValues(Type_: IRDimMembDefIntPsDataType; no: Integer; out coord: Double; 
                          out Coeff: Double); dispid 1610743833;
    procedure SetIntPtAddOption(Type_: IRDimMembDefIntPsDataType; 
                                option: IRDimMembDefIntPsOptionType; IsSet: Integer); dispid 1610743834;
    procedure IntPtAddOption(Type_: IRDimMembDefIntPsDataType; option: IRDimMembDefIntPsOptionType; 
                             out IsSet: Integer); dispid 1610743835;
    procedure StoreExpIntPs(const in_: IDispatch); dispid 1610743836;
    procedure RetrieveExpIntPs(const in_: IDispatch); dispid 1610743837;
    property RangeMoments: Integer readonly dispid 1610743838;
    procedure RangeCoords(out beg: Double; out End_: Double); dispid 1610743839;
    property CantileverMode: Integer dispid 1610743840;
    property PipeMode: Integer dispid 1610743842;
    procedure SetStructureSwayYZ(Type_: IRDimMembDefBucklingDataType; is_sway: Integer); dispid 1610743844;
    function IsStructureSwayYZ(Type_: IRDimMembDefBucklingDataType): Integer; dispid 1610743845;
    procedure StoreAdjoinParamsYZ(Type_: IRDimMembDefBucklingDataType; const in_: IDispatch); dispid 1610743846;
    procedure RetrieveAdjoinParamsYZ(Type_: IRDimMembDefBucklingDataType; const in_: IDispatch); dispid 1610743847;
    property CodeParams: IDispatch dispid 1610743848;
  end;

// *********************************************************************//
// Interface: IRDimGroups
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5E86FA70-D32D-4B7E-98C8-D0FFC075F059}
// *********************************************************************//
  IRDimGroups = interface(IDispatch)
    ['{5E86FA70-D32D-4B7E-98C8-D0FFC075F059}']
    function Get_Count: Integer; safecall;
    function GetUserNo(index: Integer): Integer; safecall;
    function Get(no: Integer): IRDimGroup; safecall;
    procedure Save(const val: IRDimGroup); safecall;
    function New(like_no: Integer; new_no: Integer): IRDimGroup; safecall;
    procedure Delete(no: Integer); safecall;
    procedure Generate(const in_: IDispatch); safecall;
    procedure GetParamProfsPattern(const in_: IDispatch); safecall;
    procedure SetParamProfsPattern(const in_: IDispatch); safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRDimGroupsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5E86FA70-D32D-4B7E-98C8-D0FFC075F059}
// *********************************************************************//
  IRDimGroupsDisp = dispinterface
    ['{5E86FA70-D32D-4B7E-98C8-D0FFC075F059}']
    property Count: Integer readonly dispid 1610743808;
    function GetUserNo(index: Integer): Integer; dispid 1610743809;
    function Get(no: Integer): IRDimGroup; dispid 1610743810;
    procedure Save(const val: IRDimGroup); dispid 1610743811;
    function New(like_no: Integer; new_no: Integer): IRDimGroup; dispid 1610743812;
    procedure Delete(no: Integer); dispid 1610743813;
    procedure Generate(const in_: IDispatch); dispid 1610743814;
    procedure GetParamProfsPattern(const in_: IDispatch); dispid 1610743815;
    procedure SetParamProfsPattern(const in_: IDispatch); dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRDimGroup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E0BF722B-15D5-4BEF-8871-2BE5F8698227}
// *********************************************************************//
  IRDimGroup = interface(IDispatch)
    ['{E0BF722B-15D5-4BEF-8871-2BE5F8698227}']
    function Get_UsrNo: Integer; safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    procedure GetMembList(const in_: IRDimStream); safecall;
    procedure SetMembList(const in_: IRDimStream); safecall;
    procedure GetProfs(const in_: IRDimGrpProfs); safecall;
    procedure SetProfs(const in_: IRDimGrpProfs); safecall;
    procedure GetParamProfs(const in_: IRDimStream); safecall;
    procedure SetParamProfs(const in_: IRDimStream); safecall;
    property UsrNo: Integer read Get_UsrNo;
    property Name: WideString read Get_Name write Set_Name;
    property Material: WideString read Get_Material write Set_Material;
  end;

// *********************************************************************//
// DispIntf:  IRDimGroupDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E0BF722B-15D5-4BEF-8871-2BE5F8698227}
// *********************************************************************//
  IRDimGroupDisp = dispinterface
    ['{E0BF722B-15D5-4BEF-8871-2BE5F8698227}']
    property UsrNo: Integer readonly dispid 1610743808;
    property Name: WideString dispid 1610743809;
    property Material: WideString dispid 1610743811;
    procedure GetMembList(const in_: IRDimStream); dispid 1610743813;
    procedure SetMembList(const in_: IRDimStream); dispid 1610743814;
    procedure GetProfs(const in_: IRDimGrpProfs); dispid 1610743815;
    procedure SetProfs(const in_: IRDimGrpProfs); dispid 1610743816;
    procedure GetParamProfs(const in_: IRDimStream); dispid 1610743817;
    procedure SetParamProfs(const in_: IRDimStream); dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRDimGrpProfs
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {314028D2-2CFC-11D5-882A-0050DA7675E2}
// *********************************************************************//
  IRDimGrpProfs = interface(IDispatch)
    ['{314028D2-2CFC-11D5-882A-0050DA7675E2}']
    function Get_Count: Integer; safecall;
    function GetBase(index: Integer): WideString; safecall;
    procedure Clear; safecall;
    procedure ClearProfs(const base_name: WideString); safecall;
    procedure GetProfs(const base_name: WideString; const in_: IRDimStream); safecall;
    procedure SetProfs(const base_name: WideString; const in_: IRDimStream); safecall;
    procedure SetFamilies(const base_name: WideString; const in_: IRDimStream); safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRDimGrpProfsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {314028D2-2CFC-11D5-882A-0050DA7675E2}
// *********************************************************************//
  IRDimGrpProfsDisp = dispinterface
    ['{314028D2-2CFC-11D5-882A-0050DA7675E2}']
    property Count: Integer readonly dispid 1610743808;
    function GetBase(index: Integer): WideString; dispid 1610743809;
    procedure Clear; dispid 1610743810;
    procedure ClearProfs(const base_name: WideString); dispid 1610743811;
    procedure GetProfs(const base_name: WideString; const in_: IRDimStream); dispid 1610743812;
    procedure SetProfs(const base_name: WideString; const in_: IRDimStream); dispid 1610743813;
    procedure SetFamilies(const base_name: WideString; const in_: IRDimStream); dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRDimCalcEngine
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C508E4B7-158D-11D5-9945-00008653042C}
// *********************************************************************//
  IRDimCalcEngine = interface(IDispatch)
    ['{C508E4B7-158D-11D5-9945-00008653042C}']
    function GetCalcParam: IRDimCalcParam; safecall;
    procedure SetCalcParam(const val: IRDimCalcParam); safecall;
    function GetCalcConf: IRDimCalcConf; safecall;
    procedure SetCalcConf(const val: IRDimCalcConf); safecall;
    procedure Solve(const observer: IDispatch); safecall;
    procedure Terminate; safecall;
    function Results: IRDimAllRes; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRDimCalcEngineDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C508E4B7-158D-11D5-9945-00008653042C}
// *********************************************************************//
  IRDimCalcEngineDisp = dispinterface
    ['{C508E4B7-158D-11D5-9945-00008653042C}']
    function GetCalcParam: IRDimCalcParam; dispid 1610743808;
    procedure SetCalcParam(const val: IRDimCalcParam); dispid 1610743809;
    function GetCalcConf: IRDimCalcConf; dispid 1610743810;
    procedure SetCalcConf(const val: IRDimCalcConf); dispid 1610743811;
    procedure Solve(const observer: IDispatch); dispid 1610743812;
    procedure Terminate; dispid 1610743813;
    function Results: IRDimAllRes; dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRDimCalcParam
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C508E4B2-158D-11D5-9945-00008653042C}
// *********************************************************************//
  IRDimCalcParam = interface(IDispatch)
    ['{C508E4B2-158D-11D5-9945-00008653042C}']
    function Get_VerifType: IRDimCalcParamVerifType; safecall;
    procedure SetObjsList(Type_: IRDimCalcParamVerifType; const in_: IRDimStream); safecall;
    procedure GetObjsList(const in_: IRDimStream); safecall;
    procedure SetLimitState(Type_: IRDimCalcParamLimitStateType; val: Integer); safecall;
    function GetLimitState(Type_: IRDimCalcParamLimitStateType): Integer; safecall;
    procedure SetLoadsList(const in_: IRDimStream); safecall;
    procedure GetLoadsList(const in_: IRDimStream); safecall;
    procedure SetOptimParam(const val: IRDimOptimParam); safecall;
    function GetOptimParam: IRDimOptimParam; safecall;
    procedure SetUlsLoadsList(const in_: IRDimStream); safecall;
    procedure GetUlsLoadsList(const in_: IRDimStream); safecall;
    procedure SetSlsLoadsList(const in_: IRDimStream); safecall;
    procedure GetSlsLoadsList(const in_: IRDimStream); safecall;
    property VerifType: IRDimCalcParamVerifType read Get_VerifType;
  end;

// *********************************************************************//
// DispIntf:  IRDimCalcParamDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C508E4B2-158D-11D5-9945-00008653042C}
// *********************************************************************//
  IRDimCalcParamDisp = dispinterface
    ['{C508E4B2-158D-11D5-9945-00008653042C}']
    property VerifType: IRDimCalcParamVerifType readonly dispid 1610743808;
    procedure SetObjsList(Type_: IRDimCalcParamVerifType; const in_: IRDimStream); dispid 1610743809;
    procedure GetObjsList(const in_: IRDimStream); dispid 1610743810;
    procedure SetLimitState(Type_: IRDimCalcParamLimitStateType; val: Integer); dispid 1610743811;
    function GetLimitState(Type_: IRDimCalcParamLimitStateType): Integer; dispid 1610743812;
    procedure SetLoadsList(const in_: IRDimStream); dispid 1610743813;
    procedure GetLoadsList(const in_: IRDimStream); dispid 1610743814;
    procedure SetOptimParam(const val: IRDimOptimParam); dispid 1610743815;
    function GetOptimParam: IRDimOptimParam; dispid 1610743816;
    procedure SetUlsLoadsList(const in_: IRDimStream); dispid 1610743817;
    procedure GetUlsLoadsList(const in_: IRDimStream); dispid 1610743818;
    procedure SetSlsLoadsList(const in_: IRDimStream); dispid 1610743819;
    procedure GetSlsLoadsList(const in_: IRDimStream); dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRDimOptimParam
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {918F5D35-3612-480D-B1F2-68D0B006AAA0}
// *********************************************************************//
  IRDimOptimParam = interface(IDispatch)
    ['{918F5D35-3612-480D-B1F2-68D0B006AAA0}']
    procedure Set_Optimization(ret: Integer); safecall;
    function Get_Optimization: Integer; safecall;
    procedure SetOption(option: IRDimOptimParamOptionType; val: Integer); safecall;
    function GetOption(option: IRDimOptimParamOptionType): Integer; safecall;
    procedure SetLimit(limit: IRDimOptimParamLimitType; val: Double); safecall;
    function GetLimit(limit: IRDimOptimParamLimitType): Double; safecall;
    property Optimization: Integer read Get_Optimization write Set_Optimization;
  end;

// *********************************************************************//
// DispIntf:  IRDimOptimParamDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {918F5D35-3612-480D-B1F2-68D0B006AAA0}
// *********************************************************************//
  IRDimOptimParamDisp = dispinterface
    ['{918F5D35-3612-480D-B1F2-68D0B006AAA0}']
    property Optimization: Integer dispid 1610743808;
    procedure SetOption(option: IRDimOptimParamOptionType; val: Integer); dispid 1610743810;
    function GetOption(option: IRDimOptimParamOptionType): Integer; dispid 1610743811;
    procedure SetLimit(limit: IRDimOptimParamLimitType; val: Double); dispid 1610743812;
    function GetLimit(limit: IRDimOptimParamLimitType): Double; dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRDimCalcConf
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2058FC71-4690-11D4-8720-0050DA7675E2}
// *********************************************************************//
  IRDimCalcConf = interface(IDispatch)
    ['{2058FC71-4690-11D4-8720-0050DA7675E2}']
    procedure SetFlag(_type: IRDimCalcConfFlagType; val: Integer); safecall;
    function IsFlagSet(_type: IRDimCalcConfFlagType): Integer; safecall;
    procedure Set_NPointsNum(ret: Integer); safecall;
    function Get_NPointsNum: Integer; safecall;
    procedure SetParamValue(_type: IRDimCalcConfValueType; val: Double); safecall;
    function GetParamValue(_type: IRDimCalcConfValueType): Double; safecall;
    procedure ClearUserCharPoints; safecall;
    function GetUserCharPointsNum: Integer; safecall;
    procedure WriteUserCharPoint(val: Double); safecall;
    function ReadUserCharPoint(no: Integer): Double; safecall;
    procedure SetAutoDeflectionsLoadCase(case_no: Integer; comp_index: Integer); safecall;
    procedure GetAutoDeflectionsLoadCase(out case_no: Integer; out comp_index: Integer); safecall;
    procedure WriteClientData(const val: IRDimStream); safecall;
    procedure ReadClientData(const ret: IRDimStream); safecall;
    procedure ModalEditBasicParams; safecall;
    function Get_CasesNum: Integer; safecall;
    function GetCaseNo(index: Integer): Integer; safecall;
    function GetCaseCompNum(case_no: Integer): Integer; safecall;
    function GetCaseName(case_no: Integer; comp_index: Integer): WideString; safecall;
    property NPointsNum: Integer read Get_NPointsNum write Set_NPointsNum;
    property CasesNum: Integer read Get_CasesNum;
  end;

// *********************************************************************//
// DispIntf:  IRDimCalcConfDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2058FC71-4690-11D4-8720-0050DA7675E2}
// *********************************************************************//
  IRDimCalcConfDisp = dispinterface
    ['{2058FC71-4690-11D4-8720-0050DA7675E2}']
    procedure SetFlag(_type: IRDimCalcConfFlagType; val: Integer); dispid 1610743808;
    function IsFlagSet(_type: IRDimCalcConfFlagType): Integer; dispid 1610743809;
    property NPointsNum: Integer dispid 1610743810;
    procedure SetParamValue(_type: IRDimCalcConfValueType; val: Double); dispid 1610743812;
    function GetParamValue(_type: IRDimCalcConfValueType): Double; dispid 1610743813;
    procedure ClearUserCharPoints; dispid 1610743814;
    function GetUserCharPointsNum: Integer; dispid 1610743815;
    procedure WriteUserCharPoint(val: Double); dispid 1610743816;
    function ReadUserCharPoint(no: Integer): Double; dispid 1610743817;
    procedure SetAutoDeflectionsLoadCase(case_no: Integer; comp_index: Integer); dispid 1610743818;
    procedure GetAutoDeflectionsLoadCase(out case_no: Integer; out comp_index: Integer); dispid 1610743819;
    procedure WriteClientData(const val: IRDimStream); dispid 1610743820;
    procedure ReadClientData(const ret: IRDimStream); dispid 1610743821;
    procedure ModalEditBasicParams; dispid 1610743822;
    property CasesNum: Integer readonly dispid 1610743823;
    function GetCaseNo(index: Integer): Integer; dispid 1610743824;
    function GetCaseCompNum(case_no: Integer): Integer; dispid 1610743825;
    function GetCaseName(case_no: Integer; comp_index: Integer): WideString; dispid 1610743826;
  end;

// *********************************************************************//
// Interface: IRDimAllRes
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C508E4B9-158D-11D5-9945-00008653042C}
// *********************************************************************//
  IRDimAllRes = interface(IDispatch)
    ['{C508E4B9-158D-11D5-9945-00008653042C}']
    function Get_CodeName: WideString; safecall;
    function Get_ObjectsType: IRDimAllResObjectType; safecall;
    function Get_ObjectsCount: Integer; safecall;
    function ObjectUsrNo(index: Integer): Integer; safecall;
    function Get(obj_user_no: Integer): IDispatch; safecall;
    procedure MakeNote(const obj_list: IRDimStream; const rtf_file: WideString; 
                       const out_file: WideString); safecall;
    procedure ReplaceOneProfile(index: Integer); safecall;
    procedure ReplaceAllProfiles; safecall;
    property CodeName: WideString read Get_CodeName;
    property ObjectsType: IRDimAllResObjectType read Get_ObjectsType;
    property ObjectsCount: Integer read Get_ObjectsCount;
  end;

// *********************************************************************//
// DispIntf:  IRDimAllResDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C508E4B9-158D-11D5-9945-00008653042C}
// *********************************************************************//
  IRDimAllResDisp = dispinterface
    ['{C508E4B9-158D-11D5-9945-00008653042C}']
    property CodeName: WideString readonly dispid 1610743808;
    property ObjectsType: IRDimAllResObjectType readonly dispid 1610743809;
    property ObjectsCount: Integer readonly dispid 1610743810;
    function ObjectUsrNo(index: Integer): Integer; dispid 1610743811;
    function Get(obj_user_no: Integer): IDispatch; dispid 1610743812;
    procedure MakeNote(const obj_list: IRDimStream; const rtf_file: WideString; 
                       const out_file: WideString); dispid 1610743813;
    procedure ReplaceOneProfile(index: Integer); dispid 1610743814;
    procedure ReplaceAllProfiles; dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRDimConnection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AAA46CB3-2DD0-11D5-882B-0050DA7675E2}
// *********************************************************************//
  IRDimConnection = interface(IDispatch)
    ['{AAA46CB3-2DD0-11D5-882B-0050DA7675E2}']
    function Get_Language: Integer; safecall;
    function Get_ResPath: WideString; safecall;
    function GetMembSrv: IRDimMembSrv; safecall;
    function GetUnits: IRDimUnits; safecall;
    function GetStream: IRDimStream; safecall;
    function GetInternalPoints: IRDimInternalPoints; safecall;
    function GetAdjoinParams: IRDimAdjoinParams; safecall;
    function GetAdjoinAutomat: IRDimAdjoinAutomat; safecall;
    function GetKernel: IDispatch; safecall;
    procedure SendMessage(msg: IRDimConnectionMsg; const dat: IDispatch); safecall;
    function GetGrpProfs: IRDimGrpProfs; safecall;
    function Get_BinPath: WideString; safecall;
    function Get_HelpPath: WideString; safecall;
    function Get_CfgPath: WideString; safecall;
    function GetDeflDispService: IRDimDeflDisp; safecall;
    property Language: Integer read Get_Language;
    property ResPath: WideString read Get_ResPath;
    property BinPath: WideString read Get_BinPath;
    property HelpPath: WideString read Get_HelpPath;
    property CfgPath: WideString read Get_CfgPath;
  end;

// *********************************************************************//
// DispIntf:  IRDimConnectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AAA46CB3-2DD0-11D5-882B-0050DA7675E2}
// *********************************************************************//
  IRDimConnectionDisp = dispinterface
    ['{AAA46CB3-2DD0-11D5-882B-0050DA7675E2}']
    property Language: Integer readonly dispid 1610743808;
    property ResPath: WideString readonly dispid 1610743809;
    function GetMembSrv: IRDimMembSrv; dispid 1610743810;
    function GetUnits: IRDimUnits; dispid 1610743811;
    function GetStream: IRDimStream; dispid 1610743812;
    function GetInternalPoints: IRDimInternalPoints; dispid 1610743813;
    function GetAdjoinParams: IRDimAdjoinParams; dispid 1610743814;
    function GetAdjoinAutomat: IRDimAdjoinAutomat; dispid 1610743815;
    function GetKernel: IDispatch; dispid 1610743816;
    procedure SendMessage(msg: IRDimConnectionMsg; const dat: IDispatch); dispid 1610743817;
    function GetGrpProfs: IRDimGrpProfs; dispid 1610743818;
    property BinPath: WideString readonly dispid 1610743819;
    property HelpPath: WideString readonly dispid 1610743820;
    property CfgPath: WideString readonly dispid 1610743821;
    function GetDeflDispService: IRDimDeflDisp; dispid 1610743822;
  end;

// *********************************************************************//
// Interface: IRDimMembSrv
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC7B6C14-7F98-11D2-990B-00201888053E}
// *********************************************************************//
  IRDimMembSrv = interface(IDispatch)
    ['{EC7B6C14-7F98-11D2-990B-00201888053E}']
    procedure CheckLabelName(const _name: WideString; out is_defined: Integer; 
                             out can_be_saved: Integer); safecall;
    procedure Save(const val: IRDimMembDef); safecall;
    procedure EditAdjoinParams(const in_: IDispatch); safecall;
  end;

// *********************************************************************//
// DispIntf:  IRDimMembSrvDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC7B6C14-7F98-11D2-990B-00201888053E}
// *********************************************************************//
  IRDimMembSrvDisp = dispinterface
    ['{EC7B6C14-7F98-11D2-990B-00201888053E}']
    procedure CheckLabelName(const _name: WideString; out is_defined: Integer; 
                             out can_be_saved: Integer); dispid 1610743808;
    procedure Save(const val: IRDimMembDef); dispid 1610743809;
    procedure EditAdjoinParams(const in_: IDispatch); dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRDimMembDef
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC7B6C10-7F98-11D2-990B-00201888053E}
// *********************************************************************//
  IRDimMembDef = interface(IRDimMembDefData)
    ['{EC7B6C10-7F98-11D2-990B-00201888053E}']
    function Get_GuidType: IRDimMembDefGuidType; safecall;
    function Get_ClientID: WideString; safecall;
    function Get_MatType: IRDimMembDefMatType; safecall;
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function IsBuckCoefConst(Type_: IRDimMembDefBucklingDataType): Integer; safecall;
    function IsClientBuckCoefServiceYZ(Type_: IRDimMembDefBucklingDataType): Integer; safecall;
    function AreAdjoinParamsYZ(Type_: IRDimMembDefBucklingDataType): Integer; safecall;
    procedure HowCalcul(out HowCalcul: IRDimMembDefAdjoinHowCalcul; 
                        out WayOfCalculY: IRDimMembDefAdjoinWayOfCalcul; 
                        out WayOfCalculZ: IRDimMembDefAdjoinWayOfCalcul); safecall;
    procedure SetOption(Type_: IRDimMembDefOptionType; IsSet: Integer; const in_: IDispatch); safecall;
    procedure CheckOption(Type_: IRDimMembDefOptionType; out IsSet: Integer; const in_: IDispatch); safecall;
    procedure ConversionGlossary(const pVal: IRDimStream); safecall;
    procedure ConversionValuesForKey(const key: WideString; Set_: Integer; const pVal: IRDimStream); safecall;
    property GuidType: IRDimMembDefGuidType read Get_GuidType;
    property ClientID: WideString read Get_ClientID;
    property MatType: IRDimMembDefMatType read Get_MatType;
    property Length: Double read Get_Length write Set_Length;
  end;

// *********************************************************************//
// DispIntf:  IRDimMembDefDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC7B6C10-7F98-11D2-990B-00201888053E}
// *********************************************************************//
  IRDimMembDefDisp = dispinterface
    ['{EC7B6C10-7F98-11D2-990B-00201888053E}']
    property GuidType: IRDimMembDefGuidType readonly dispid 1610809344;
    property ClientID: WideString readonly dispid 1610809345;
    property MatType: IRDimMembDefMatType readonly dispid 1610809346;
    property Length: Double dispid 1610809347;
    function IsBuckCoefConst(Type_: IRDimMembDefBucklingDataType): Integer; dispid 1610809349;
    function IsClientBuckCoefServiceYZ(Type_: IRDimMembDefBucklingDataType): Integer; dispid 1610809350;
    function AreAdjoinParamsYZ(Type_: IRDimMembDefBucklingDataType): Integer; dispid 1610809351;
    procedure HowCalcul(out HowCalcul: IRDimMembDefAdjoinHowCalcul; 
                        out WayOfCalculY: IRDimMembDefAdjoinWayOfCalcul; 
                        out WayOfCalculZ: IRDimMembDefAdjoinWayOfCalcul); dispid 1610809352;
    procedure SetOption(Type_: IRDimMembDefOptionType; IsSet: Integer; const in_: IDispatch); dispid 1610809353;
    procedure CheckOption(Type_: IRDimMembDefOptionType; out IsSet: Integer; const in_: IDispatch); dispid 1610809354;
    procedure ConversionGlossary(const pVal: IRDimStream); dispid 1610809355;
    procedure ConversionValuesForKey(const key: WideString; Set_: Integer; const pVal: IRDimStream); dispid 1610809356;
    procedure Store(const str: IRDimStream); dispid 1610743808;
    procedure Retrieve(const str: IRDimStream); dispid 1610743809;
    property type_: IRDimMembDefType dispid 1610743810;
    property Name: WideString dispid 1610743812;
    procedure SetLengthYZUV(Type_: IRDimMembDefLengthDataType; val: Double); dispid 1610743814;
    function LengthYZUV(Type_: IRDimMembDefLengthDataType): Double; dispid 1610743815;
    procedure SetDisplacementXY(Type_: IRDimMembDefDispDataType; val: Integer); dispid 1610743816;
    function IsDisplacementXY(Type_: IRDimMembDefDispDataType): Integer; dispid 1610743817;
    procedure SetDisplXYRelLimit(Type_: IRDimMembDefDispDataType; val: Double); dispid 1610743818;
    function DisplXYRelLimit(Type_: IRDimMembDefDispDataType): Double; dispid 1610743819;
    procedure SetDeflectionYZ(Type_: IRDimMembDefDeflDataType; val: Integer); dispid 1610743820;
    function IsDeflectionYZ(Type_: IRDimMembDefDeflDataType): Integer; dispid 1610743821;
    procedure SetDeflYZRelLimit(Type_: IRDimMembDefDeflDataType; val: Double); dispid 1610743822;
    function DeflYZRelLimit(Type_: IRDimMembDefDeflDataType): Double; dispid 1610743823;
    property InitDeflType: IRDimMembDefInitDeflType dispid 1610743824;
    procedure SetUserInitDefl(Type_: IRDimMembDefUserInitDeflType; val: Double); dispid 1610743826;
    function GetUserInitDefl(Type_: IRDimMembDefUserInitDeflType): Double; dispid 1610743827;
    procedure IntPsClear(Type_: IRDimMembDefIntPsDataType); dispid 1610743828;
    function IntPsCoordNum(Type_: IRDimMembDefIntPsDataType): Integer; dispid 1610743829;
    procedure SetIntPsCoordValueType(Type_: IRDimMembDefIntPsDataType; IsRelValue: Integer); dispid 1610743830;
    function IntPsCoordValueType(Type_: IRDimMembDefIntPsDataType): Integer; dispid 1610743831;
    procedure SetIntPtValues(Type_: IRDimMembDefIntPsDataType; no: Integer; coord: Double; 
                             Coeff: Double); dispid 1610743832;
    procedure IntPtValues(Type_: IRDimMembDefIntPsDataType; no: Integer; out coord: Double; 
                          out Coeff: Double); dispid 1610743833;
    procedure SetIntPtAddOption(Type_: IRDimMembDefIntPsDataType; 
                                option: IRDimMembDefIntPsOptionType; IsSet: Integer); dispid 1610743834;
    procedure IntPtAddOption(Type_: IRDimMembDefIntPsDataType; option: IRDimMembDefIntPsOptionType; 
                             out IsSet: Integer); dispid 1610743835;
    procedure StoreExpIntPs(const in_: IDispatch); dispid 1610743836;
    procedure RetrieveExpIntPs(const in_: IDispatch); dispid 1610743837;
    property RangeMoments: Integer readonly dispid 1610743838;
    procedure RangeCoords(out beg: Double; out End_: Double); dispid 1610743839;
    property CantileverMode: Integer dispid 1610743840;
    property PipeMode: Integer dispid 1610743842;
    procedure SetStructureSwayYZ(Type_: IRDimMembDefBucklingDataType; is_sway: Integer); dispid 1610743844;
    function IsStructureSwayYZ(Type_: IRDimMembDefBucklingDataType): Integer; dispid 1610743845;
    procedure StoreAdjoinParamsYZ(Type_: IRDimMembDefBucklingDataType; const in_: IDispatch); dispid 1610743846;
    procedure RetrieveAdjoinParamsYZ(Type_: IRDimMembDefBucklingDataType; const in_: IDispatch); dispid 1610743847;
    property CodeParams: IDispatch dispid 1610743848;
  end;

// *********************************************************************//
// Interface: IRDimUnits
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F9431842-DD47-11D3-86B6-0050DA7675E2}
// *********************************************************************//
  IRDimUnits = interface(IDispatch)
    ['{F9431842-DD47-11D3-86B6-0050DA7675E2}']
    procedure Refresh(AreRobotUnits: Integer); safecall;
    function Get_AreRobotUnits: Integer; safecall;
    function ReadToUserCoef(Type_: IRDimUnitType): Double; safecall;
    function ReadUserName(Type_: IRDimUnitType): WideString; safecall;
    function format(Type_: IRDimUnitType; val: Double): WideString; safecall;
    property AreRobotUnits: Integer read Get_AreRobotUnits;
  end;

// *********************************************************************//
// DispIntf:  IRDimUnitsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F9431842-DD47-11D3-86B6-0050DA7675E2}
// *********************************************************************//
  IRDimUnitsDisp = dispinterface
    ['{F9431842-DD47-11D3-86B6-0050DA7675E2}']
    procedure Refresh(AreRobotUnits: Integer); dispid 1;
    property AreRobotUnits: Integer readonly dispid 2;
    function ReadToUserCoef(Type_: IRDimUnitType): Double; dispid 3;
    function ReadUserName(Type_: IRDimUnitType): WideString; dispid 4;
    function format(Type_: IRDimUnitType; val: Double): WideString; dispid 5;
  end;

// *********************************************************************//
// Interface: IRDimInternalPoints
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B08E677C-53CE-4672-B4F3-4ACC43660AFE}
// *********************************************************************//
  IRDimInternalPoints = interface(IDispatch)
    ['{B08E677C-53CE-4672-B4F3-4ACC43660AFE}']
    procedure Clear(Type_: IRDimMembDefIntPsDataType); safecall;
    function CoordNum(Type_: IRDimMembDefIntPsDataType): Integer; safecall;
    procedure SetCoordValueType(Type_: IRDimMembDefIntPsDataType; IsRelValue: Integer); safecall;
    function CoordValueType(Type_: IRDimMembDefIntPsDataType): Integer; safecall;
    procedure SetValues(Type_: IRDimMembDefIntPsDataType; no: Integer; coord: Double; Coeff: Double); safecall;
    procedure Values(Type_: IRDimMembDefIntPsDataType; no: Integer; out coord: Double; 
                     out Coeff: Double); safecall;
    procedure SetAddOption(Type_: IRDimMembDefIntPsDataType; option: IRDimMembDefIntPsOptionType; 
                           IsSet: Integer); safecall;
    procedure AddOption(Type_: IRDimMembDefIntPsDataType; option: IRDimMembDefIntPsOptionType; 
                        out IsSet: Integer); safecall;
    procedure Edit(activeType: IRDimMembDefIntPsDataType; IsLatBuck: Integer; 
                   const in_: IRDimIntPsEditService); safecall;
    procedure SetSchema(Type_: IRDimMembDefIntPsDataType; bipNo: Integer; cfBeg: Double; 
                        cfEnd: Double); safecall;
    procedure Schema(Type_: IRDimMembDefIntPsDataType; out bipNo: Integer; out cfBeg: Double; 
                     out cfEnd: Double); safecall;
  end;

// *********************************************************************//
// DispIntf:  IRDimInternalPointsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B08E677C-53CE-4672-B4F3-4ACC43660AFE}
// *********************************************************************//
  IRDimInternalPointsDisp = dispinterface
    ['{B08E677C-53CE-4672-B4F3-4ACC43660AFE}']
    procedure Clear(Type_: IRDimMembDefIntPsDataType); dispid 1610743808;
    function CoordNum(Type_: IRDimMembDefIntPsDataType): Integer; dispid 1610743809;
    procedure SetCoordValueType(Type_: IRDimMembDefIntPsDataType; IsRelValue: Integer); dispid 1610743810;
    function CoordValueType(Type_: IRDimMembDefIntPsDataType): Integer; dispid 1610743811;
    procedure SetValues(Type_: IRDimMembDefIntPsDataType; no: Integer; coord: Double; Coeff: Double); dispid 1610743812;
    procedure Values(Type_: IRDimMembDefIntPsDataType; no: Integer; out coord: Double; 
                     out Coeff: Double); dispid 1610743813;
    procedure SetAddOption(Type_: IRDimMembDefIntPsDataType; option: IRDimMembDefIntPsOptionType; 
                           IsSet: Integer); dispid 1610743814;
    procedure AddOption(Type_: IRDimMembDefIntPsDataType; option: IRDimMembDefIntPsOptionType; 
                        out IsSet: Integer); dispid 1610743815;
    procedure Edit(activeType: IRDimMembDefIntPsDataType; IsLatBuck: Integer; 
                   const in_: IRDimIntPsEditService); dispid 1610743816;
    procedure SetSchema(Type_: IRDimMembDefIntPsDataType; bipNo: Integer; cfBeg: Double; 
                        cfEnd: Double); dispid 1610743817;
    procedure Schema(Type_: IRDimMembDefIntPsDataType; out bipNo: Integer; out cfBeg: Double; 
                     out cfEnd: Double); dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRDimIntPsEditService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C9E39AFC-7320-4A99-89A0-ADDD941954D2}
// *********************************************************************//
  IRDimIntPsEditService = interface(IDispatch)
    ['{C9E39AFC-7320-4A99-89A0-ADDD941954D2}']
    procedure SetSchemaNo(Type_: IRDimMembDefIntPsDataType; no: Integer); safecall;
    function GetSchemaNo(Type_: IRDimMembDefIntPsDataType): Integer; safecall;
    function SchemasNum(Type_: IRDimMembDefIntPsDataType): Integer; safecall;
    procedure SchemaBmpHandle(Type_: IRDimMembDefIntPsDataType; no: Integer; out bOff: Integer; 
                              out bOn: Integer; out cx: Integer; out cy: Integer); safecall;
    procedure SchemaCoefficients(Type_: IRDimMembDefIntPsDataType; no: Integer; 
                                 out coeffBeg: Double; out coeffEnd: Double); safecall;
    procedure Set_TestMemberUsrNo(userNo: Integer); safecall;
    function Get_TestMemberUsrNo: Integer; safecall;
    function Get_IsWood: Integer; safecall;
    procedure SetStructureSwayYZ(Type_: IRDimMembDefIntPsDataType; is_sway: Integer); safecall;
    function IsStructureSwayYZ(Type_: IRDimMembDefIntPsDataType): Integer; safecall;
    property TestMemberUsrNo: Integer read Get_TestMemberUsrNo write Set_TestMemberUsrNo;
    property IsWood: Integer read Get_IsWood;
  end;

// *********************************************************************//
// DispIntf:  IRDimIntPsEditServiceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C9E39AFC-7320-4A99-89A0-ADDD941954D2}
// *********************************************************************//
  IRDimIntPsEditServiceDisp = dispinterface
    ['{C9E39AFC-7320-4A99-89A0-ADDD941954D2}']
    procedure SetSchemaNo(Type_: IRDimMembDefIntPsDataType; no: Integer); dispid 1610743808;
    function GetSchemaNo(Type_: IRDimMembDefIntPsDataType): Integer; dispid 1610743809;
    function SchemasNum(Type_: IRDimMembDefIntPsDataType): Integer; dispid 1610743810;
    procedure SchemaBmpHandle(Type_: IRDimMembDefIntPsDataType; no: Integer; out bOff: Integer; 
                              out bOn: Integer; out cx: Integer; out cy: Integer); dispid 1610743811;
    procedure SchemaCoefficients(Type_: IRDimMembDefIntPsDataType; no: Integer; 
                                 out coeffBeg: Double; out coeffEnd: Double); dispid 1610743812;
    property TestMemberUsrNo: Integer dispid 1610743813;
    property IsWood: Integer readonly dispid 1610743815;
    procedure SetStructureSwayYZ(Type_: IRDimMembDefIntPsDataType; is_sway: Integer); dispid 1610743816;
    function IsStructureSwayYZ(Type_: IRDimMembDefIntPsDataType): Integer; dispid 1610743817;
  end;

// *********************************************************************//
// Interface: IRDimAdjoinParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5C4DD378-0723-4C54-8D64-6322DC32BA96}
// *********************************************************************//
  IRDimAdjoinParams = interface(IDispatch)
    ['{5C4DD378-0723-4C54-8D64-6322DC32BA96}']
    procedure Clear; safecall;
    function GetMemberUserNo(no: IRDimAdjoinMembNo): Integer; safecall;
    procedure SetMemberUserNo(no: IRDimAdjoinMembNo; usr_no: Integer); safecall;
    procedure SetMomLenByMembList(no: IRDimAdjoinMembNo; const in_: IRDimStream); safecall;
    function GetMomentOfInertia(no: IRDimAdjoinMembNo): Double; safecall;
    procedure SetMomentOfInertia(no: IRDimAdjoinMembNo; val: Double); safecall;
    function GetLength(no: IRDimAdjoinMembNo): Double; safecall;
    procedure SetLength(no: IRDimAdjoinMembNo; val: Double); safecall;
    function GetMemberPosition(no: IRDimAdjoinMembNo): IRDimAdjoinMembPos; safecall;
    procedure SetMemberPosition(no: IRDimAdjoinMembNo; pos: IRDimAdjoinMembPos); safecall;
    function GetMemberSuppCond(no: IRDimAdjoinMembNo): IRDimAdjoinMembSuppCond; safecall;
    procedure SetMemberSuppCond(no: IRDimAdjoinMembNo; suppcond: IRDimAdjoinMembSuppCond); safecall;
    function Get_MainMembEqMInertia: IRDimAdjoinParamsEqMInertia; safecall;
    procedure Set_MainMembEqMInertia(ret: IRDimAdjoinParamsEqMInertia); safecall;
    function Get_MainMembEqMInertiaPercentVal: Double; safecall;
    procedure Set_MainMembEqMInertiaPercentVal(ret: Double); safecall;
    procedure GetMainMembEqMInertiaCoord(out ret: Double; out isRel: Integer); safecall;
    procedure SetMainMembEqMInertiaCoord(val: Double; isRel: Integer); safecall;
    function Get_AdjoinMembEqMInertia: IRDimAdjoinParamsEqMInertia; safecall;
    procedure Set_AdjoinMembEqMInertia(ret: IRDimAdjoinParamsEqMInertia); safecall;
    function Get_AdjoinMembEqMInertiaPercentVal: Double; safecall;
    procedure Set_AdjoinMembEqMInertiaPercentVal(ret: Double); safecall;
    procedure GetAdjoinMembEqMInertiaCoord(out ret: Double; out isRel: Integer); safecall;
    procedure SetAdjoinMembEqMInertiaCoord(val: Double; isRel: Integer); safecall;
    function Get_StoreyFrame: IRDimAdjoinParamsStoreyFrame; safecall;
    procedure Set_StoreyFrame(ret: IRDimAdjoinParamsStoreyFrame); safecall;
    function Get_SpanQuantity: Integer; safecall;
    procedure Set_SpanQuantity(ret: Integer); safecall;
    function Get_ColumnLevel: IRDimAdjoinParamsColumnLevel; safecall;
    procedure Set_ColumnLevel(ret: IRDimAdjoinParamsColumnLevel); safecall;
    procedure Edit(const in_: IDispatch); safecall;
    property MainMembEqMInertia: IRDimAdjoinParamsEqMInertia read Get_MainMembEqMInertia write Set_MainMembEqMInertia;
    property MainMembEqMInertiaPercentVal: Double read Get_MainMembEqMInertiaPercentVal write Set_MainMembEqMInertiaPercentVal;
    property AdjoinMembEqMInertia: IRDimAdjoinParamsEqMInertia read Get_AdjoinMembEqMInertia write Set_AdjoinMembEqMInertia;
    property AdjoinMembEqMInertiaPercentVal: Double read Get_AdjoinMembEqMInertiaPercentVal write Set_AdjoinMembEqMInertiaPercentVal;
    property StoreyFrame: IRDimAdjoinParamsStoreyFrame read Get_StoreyFrame write Set_StoreyFrame;
    property SpanQuantity: Integer read Get_SpanQuantity write Set_SpanQuantity;
    property ColumnLevel: IRDimAdjoinParamsColumnLevel read Get_ColumnLevel write Set_ColumnLevel;
  end;

// *********************************************************************//
// DispIntf:  IRDimAdjoinParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5C4DD378-0723-4C54-8D64-6322DC32BA96}
// *********************************************************************//
  IRDimAdjoinParamsDisp = dispinterface
    ['{5C4DD378-0723-4C54-8D64-6322DC32BA96}']
    procedure Clear; dispid 1610743808;
    function GetMemberUserNo(no: IRDimAdjoinMembNo): Integer; dispid 1610743809;
    procedure SetMemberUserNo(no: IRDimAdjoinMembNo; usr_no: Integer); dispid 1610743810;
    procedure SetMomLenByMembList(no: IRDimAdjoinMembNo; const in_: IRDimStream); dispid 1610743811;
    function GetMomentOfInertia(no: IRDimAdjoinMembNo): Double; dispid 1610743812;
    procedure SetMomentOfInertia(no: IRDimAdjoinMembNo; val: Double); dispid 1610743813;
    function GetLength(no: IRDimAdjoinMembNo): Double; dispid 1610743814;
    procedure SetLength(no: IRDimAdjoinMembNo; val: Double); dispid 1610743815;
    function GetMemberPosition(no: IRDimAdjoinMembNo): IRDimAdjoinMembPos; dispid 1610743816;
    procedure SetMemberPosition(no: IRDimAdjoinMembNo; pos: IRDimAdjoinMembPos); dispid 1610743817;
    function GetMemberSuppCond(no: IRDimAdjoinMembNo): IRDimAdjoinMembSuppCond; dispid 1610743818;
    procedure SetMemberSuppCond(no: IRDimAdjoinMembNo; suppcond: IRDimAdjoinMembSuppCond); dispid 1610743819;
    property MainMembEqMInertia: IRDimAdjoinParamsEqMInertia dispid 1610743820;
    property MainMembEqMInertiaPercentVal: Double dispid 1610743822;
    procedure GetMainMembEqMInertiaCoord(out ret: Double; out isRel: Integer); dispid 1610743824;
    procedure SetMainMembEqMInertiaCoord(val: Double; isRel: Integer); dispid 1610743825;
    property AdjoinMembEqMInertia: IRDimAdjoinParamsEqMInertia dispid 1610743826;
    property AdjoinMembEqMInertiaPercentVal: Double dispid 1610743828;
    procedure GetAdjoinMembEqMInertiaCoord(out ret: Double; out isRel: Integer); dispid 1610743830;
    procedure SetAdjoinMembEqMInertiaCoord(val: Double; isRel: Integer); dispid 1610743831;
    property StoreyFrame: IRDimAdjoinParamsStoreyFrame dispid 1610743832;
    property SpanQuantity: Integer dispid 1610743834;
    property ColumnLevel: IRDimAdjoinParamsColumnLevel dispid 1610743836;
    procedure Edit(const in_: IDispatch); dispid 1610743838;
  end;

// *********************************************************************//
// Interface: IRDimAdjoinAutomat
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D6F78622-7FAC-4890-B376-2A42638C78F5}
// *********************************************************************//
  IRDimAdjoinAutomat = interface(IDispatch)
    ['{D6F78622-7FAC-4890-B376-2A42638C78F5}']
    procedure Select(Type_: IRDimMembDefBucklingDataType; membNo: Integer); safecall;
    function Get_Is3D: Integer; safecall;
    function Get_A_x: Double; safecall;
    function Get_A_y: Double; safecall;
    function Get_B_x: Double; safecall;
    function Get_B_y: Double; safecall;
    function Get_Gamma: Double; safecall;
    function Get_Release_A: Integer; safecall;
    function Get_Release_B: Integer; safecall;
    function Get_CodeSupp_A: Integer; safecall;
    function Get_CodeSupp_B: Integer; safecall;
    function Get_Count_A: Integer; safecall;
    function Get_Count_B: Integer; safecall;
    function Get_SpanQuantity: Integer; safecall;
    function GetTree_A(BranchNo: Integer): IRDimAdjoinBranch; safecall;
    function GetTree_B(BranchNo: Integer): IRDimAdjoinBranch; safecall;
    property Is3D: Integer read Get_Is3D;
    property A_x: Double read Get_A_x;
    property A_y: Double read Get_A_y;
    property B_x: Double read Get_B_x;
    property B_y: Double read Get_B_y;
    property Gamma: Double read Get_Gamma;
    property Release_A: Integer read Get_Release_A;
    property Release_B: Integer read Get_Release_B;
    property CodeSupp_A: Integer read Get_CodeSupp_A;
    property CodeSupp_B: Integer read Get_CodeSupp_B;
    property Count_A: Integer read Get_Count_A;
    property Count_B: Integer read Get_Count_B;
    property SpanQuantity: Integer read Get_SpanQuantity;
  end;

// *********************************************************************//
// DispIntf:  IRDimAdjoinAutomatDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D6F78622-7FAC-4890-B376-2A42638C78F5}
// *********************************************************************//
  IRDimAdjoinAutomatDisp = dispinterface
    ['{D6F78622-7FAC-4890-B376-2A42638C78F5}']
    procedure Select(Type_: IRDimMembDefBucklingDataType; membNo: Integer); dispid 1610743808;
    property Is3D: Integer readonly dispid 1610743809;
    property A_x: Double readonly dispid 1610743810;
    property A_y: Double readonly dispid 1610743811;
    property B_x: Double readonly dispid 1610743812;
    property B_y: Double readonly dispid 1610743813;
    property Gamma: Double readonly dispid 1610743814;
    property Release_A: Integer readonly dispid 1610743815;
    property Release_B: Integer readonly dispid 1610743816;
    property CodeSupp_A: Integer readonly dispid 1610743817;
    property CodeSupp_B: Integer readonly dispid 1610743818;
    property Count_A: Integer readonly dispid 1610743819;
    property Count_B: Integer readonly dispid 1610743820;
    property SpanQuantity: Integer readonly dispid 1610743821;
    function GetTree_A(BranchNo: Integer): IRDimAdjoinBranch; dispid 1610743822;
    function GetTree_B(BranchNo: Integer): IRDimAdjoinBranch; dispid 1610743823;
  end;

// *********************************************************************//
// Interface: IRDimAdjoinBranch
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {100C0E55-4D6C-46ED-9865-29D0F8828E9D}
// *********************************************************************//
  IRDimAdjoinBranch = interface(IDispatch)
    ['{100C0E55-4D6C-46ED-9865-29D0F8828E9D}']
    function Get_Count: Integer; safecall;
    procedure Set_ElemNo(Param1: Integer); safecall;
    function Get_Last: Integer; safecall;
    function Get_End_: Integer; safecall;
    function Get_E: Double; safecall;
    function Get_End_x: Double; safecall;
    function Get_End_y: Double; safecall;
    function Get_Stiff: Double; safecall;
    function Get_Released_beg: Integer; safecall;
    function Get_Released_end: Integer; safecall;
    function Get_Fixed_end: Integer; safecall;
    function Get_SupEndDirFixed(degree: Integer): Integer; safecall;
    property Count: Integer read Get_Count;
    property ElemNo: Integer write Set_ElemNo;
    property Last: Integer read Get_Last;
    property End_: Integer read Get_End_;
    property E: Double read Get_E;
    property End_x: Double read Get_End_x;
    property End_y: Double read Get_End_y;
    property Stiff: Double read Get_Stiff;
    property Released_beg: Integer read Get_Released_beg;
    property Released_end: Integer read Get_Released_end;
    property Fixed_end: Integer read Get_Fixed_end;
    property SupEndDirFixed[degree: Integer]: Integer read Get_SupEndDirFixed;
  end;

// *********************************************************************//
// DispIntf:  IRDimAdjoinBranchDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {100C0E55-4D6C-46ED-9865-29D0F8828E9D}
// *********************************************************************//
  IRDimAdjoinBranchDisp = dispinterface
    ['{100C0E55-4D6C-46ED-9865-29D0F8828E9D}']
    property Count: Integer readonly dispid 1610743808;
    property ElemNo: Integer writeonly dispid 1610743809;
    property Last: Integer readonly dispid 1610743810;
    property End_: Integer readonly dispid 1610743811;
    property E: Double readonly dispid 1610743812;
    property End_x: Double readonly dispid 1610743813;
    property End_y: Double readonly dispid 1610743814;
    property Stiff: Double readonly dispid 1610743815;
    property Released_beg: Integer readonly dispid 1610743816;
    property Released_end: Integer readonly dispid 1610743817;
    property Fixed_end: Integer readonly dispid 1610743818;
    property SupEndDirFixed[degree: Integer]: Integer readonly dispid 1610743819;
  end;

// *********************************************************************//
// Interface: IRDimDeflDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01C241D4-03BC-11D4-86D6-0050DA7675E2}
// *********************************************************************//
  IRDimDeflDisp = interface(IDispatch)
    ['{01C241D4-03BC-11D4-86D6-0050DA7675E2}']
    procedure Init(Type_: IRDimDeflDispInitType; val: Integer); safecall;
    function Get_MemberNo: Integer; safecall;
    function Get_CaseNo: Integer; safecall;
    function CaseUserNo(case_no: Integer): Integer; safecall;
    function CaseType(case_no: Integer): IRDimDeflDispCaseType; safecall;
    function CaseName(case_no: Integer; comp_index: Integer; with_def: Integer): WideString; safecall;
    function CaseNature(case_no: Integer): IRDimDeflDispSimpleCaseNature; safecall;
    function CaseClass(case_no: Integer): Integer; safecall;
    function CodeCombCompNum(case_no: Integer): Integer; safecall;
    function CombCompNum(case_no: Integer; comp_index: Integer): Integer; safecall;
    procedure Set_PointsNum(Param1: Integer); safecall;
    procedure Set_CurPointNo(Param1: Integer); safecall;
    procedure Set_CurCaseNo(Param1: Integer); safecall;
    procedure Set_CurCompIndex(Param1: Integer); safecall;
    procedure Set_CantileverMode(Param1: Integer); safecall;
    function Value(Type_: IRDimDeflDispType): Double; safecall;
    procedure CombCompParam(index: Integer; out case_no: Integer; out cv: Double); safecall;
    procedure CodeCombType(case_no: Integer; comp_index: Integer; var ret: IRDimDeflDispCodeCombType); safecall;
    procedure Regulations(Nature: IRDimDeflDispSimpleCaseNature; 
                          reg_coeff: IRDimDeflDispRegulationsCoeff; var ret: Double); safecall;
    property MemberNo: Integer read Get_MemberNo;
    property CaseNo: Integer read Get_CaseNo;
    property PointsNum: Integer write Set_PointsNum;
    property CurPointNo: Integer write Set_CurPointNo;
    property CurCaseNo: Integer write Set_CurCaseNo;
    property CurCompIndex: Integer write Set_CurCompIndex;
    property CantileverMode: Integer write Set_CantileverMode;
  end;

// *********************************************************************//
// DispIntf:  IRDimDeflDispDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01C241D4-03BC-11D4-86D6-0050DA7675E2}
// *********************************************************************//
  IRDimDeflDispDisp = dispinterface
    ['{01C241D4-03BC-11D4-86D6-0050DA7675E2}']
    procedure Init(Type_: IRDimDeflDispInitType; val: Integer); dispid 1610743808;
    property MemberNo: Integer readonly dispid 1610743809;
    property CaseNo: Integer readonly dispid 1610743810;
    function CaseUserNo(case_no: Integer): Integer; dispid 1610743811;
    function CaseType(case_no: Integer): IRDimDeflDispCaseType; dispid 1610743812;
    function CaseName(case_no: Integer; comp_index: Integer; with_def: Integer): WideString; dispid 1610743813;
    function CaseNature(case_no: Integer): IRDimDeflDispSimpleCaseNature; dispid 1610743814;
    function CaseClass(case_no: Integer): Integer; dispid 1610743815;
    function CodeCombCompNum(case_no: Integer): Integer; dispid 1610743816;
    function CombCompNum(case_no: Integer; comp_index: Integer): Integer; dispid 1610743817;
    property PointsNum: Integer writeonly dispid 1610743818;
    property CurPointNo: Integer writeonly dispid 1610743819;
    property CurCaseNo: Integer writeonly dispid 1610743820;
    property CurCompIndex: Integer writeonly dispid 1610743821;
    property CantileverMode: Integer writeonly dispid 1610743822;
    function Value(Type_: IRDimDeflDispType): Double; dispid 1610743823;
    procedure CombCompParam(index: Integer; out case_no: Integer; out cv: Double); dispid 1610743824;
    procedure CodeCombType(case_no: Integer; comp_index: Integer; var ret: IRDimDeflDispCodeCombType); dispid 1610743825;
    procedure Regulations(Nature: IRDimDeflDispSimpleCaseNature; 
                          reg_coeff: IRDimDeflDispRegulationsCoeff; var ret: Double); dispid 1610743826;
  end;

// *********************************************************************//
// Interface: IRobotStructuralAxisGridMngr
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F2893C2A-7E5E-4DAF-A9AA-766A907D99DA}
// *********************************************************************//
  IRobotStructuralAxisGridMngr = interface(IDispatch)
    ['{F2893C2A-7E5E-4DAF-A9AA-766A907D99DA}']
    function Get_Count: Integer; safecall;
    function Create(_type: IRobotStructuralAxisGridType; const _name: WideString): IRobotStructuralAxisGrid; safecall;
    function FindByName(const _name: WideString): Integer; safecall;
    procedure Activate(_idx: Integer; _activate: WordBool); safecall;
    procedure Delete(_idx: Integer); safecall;
    procedure Clear; safecall;
    function Get(_idx: Integer): IRobotStructuralAxisGrid; safecall;
    function GetByName(const _name: WideString): IRobotStructuralAxisGrid; safecall;
    function IsActive(_idx: Integer): WordBool; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotStructuralAxisGridMngrDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F2893C2A-7E5E-4DAF-A9AA-766A907D99DA}
// *********************************************************************//
  IRobotStructuralAxisGridMngrDisp = dispinterface
    ['{F2893C2A-7E5E-4DAF-A9AA-766A907D99DA}']
    property Count: Integer readonly dispid 1610743808;
    function Create(_type: IRobotStructuralAxisGridType; const _name: WideString): IRobotStructuralAxisGrid; dispid 1610743809;
    function FindByName(const _name: WideString): Integer; dispid 1610743810;
    procedure Activate(_idx: Integer; _activate: WordBool); dispid 1610743811;
    procedure Delete(_idx: Integer); dispid 1610743812;
    procedure Clear; dispid 1610743813;
    function Get(_idx: Integer): IRobotStructuralAxisGrid; dispid 1610743814;
    function GetByName(const _name: WideString): IRobotStructuralAxisGrid; dispid 1610743815;
    function IsActive(_idx: Integer): WordBool; dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRobotStructuralAxisGrid
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {28862C54-A723-45E0-AAB7-C97876FBD619}
// *********************************************************************//
  IRobotStructuralAxisGrid = interface(IDispatch)
    ['{28862C54-A723-45E0-AAB7-C97876FBD619}']
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_type_: IRobotStructuralAxisGridType; safecall;
    procedure Save; safecall;
    property Name: WideString read Get_Name write Set_Name;
    property type_: IRobotStructuralAxisGridType read Get_type_;
  end;

// *********************************************************************//
// DispIntf:  IRobotStructuralAxisGridDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {28862C54-A723-45E0-AAB7-C97876FBD619}
// *********************************************************************//
  IRobotStructuralAxisGridDisp = dispinterface
    ['{28862C54-A723-45E0-AAB7-C97876FBD619}']
    property Name: WideString dispid 1610743808;
    property type_: IRobotStructuralAxisGridType readonly dispid 1610743810;
    procedure Save; dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotBackgroundServer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DAF29B19-E4C9-4FC8-B3D4-1B3207649BA0}
// *********************************************************************//
  IRobotBackgroundServer = interface(IDispatch)
    ['{DAF29B19-E4C9-4FC8-B3D4-1B3207649BA0}']
    function Create(const _file_path: WideString; _as_link: WordBool): IRobotBackground; safecall;
    procedure Remove(_number: Integer); safecall;
    procedure RemoveAll; safecall;
    function Get(_number: Integer): IRobotBackground; safecall;
    function GetAllNumbers: PSafeArray; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotBackgroundServerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DAF29B19-E4C9-4FC8-B3D4-1B3207649BA0}
// *********************************************************************//
  IRobotBackgroundServerDisp = dispinterface
    ['{DAF29B19-E4C9-4FC8-B3D4-1B3207649BA0}']
    function Create(const _file_path: WideString; _as_link: WordBool): IRobotBackground; dispid 1610743808;
    procedure Remove(_number: Integer); dispid 1610743809;
    procedure RemoveAll; dispid 1610743810;
    function Get(_number: Integer): IRobotBackground; dispid 1610743811;
    function GetAllNumbers: {??PSafeArray}OleVariant; dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotBackground
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B989BE6E-B352-4A46-BC96-A25FF3DFD8BE}
// *********************************************************************//
  IRobotBackground = interface(IDispatch)
    ['{B989BE6E-B352-4A46-BC96-A25FF3DFD8BE}']
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_FilePath: WideString; safecall;
    procedure Set_FilePath(const ret: WideString); safecall;
    function Get_IsOn: WordBool; safecall;
    procedure Set_IsOn(ret: WordBool); safecall;
    function Get_InsertParams: IRobotBackgroundInsertParams; safecall;
    function Get_VisibilityRange: IRobotBackgroundVisibilityRange; safecall;
    function Get_Color: Integer; safecall;
    procedure Set_Color(ret: Integer); safecall;
    function Get_Number: Integer; safecall;
    function Save: WordBool; safecall;
    property Name: WideString read Get_Name write Set_Name;
    property FilePath: WideString read Get_FilePath write Set_FilePath;
    property IsOn: WordBool read Get_IsOn write Set_IsOn;
    property InsertParams: IRobotBackgroundInsertParams read Get_InsertParams;
    property VisibilityRange: IRobotBackgroundVisibilityRange read Get_VisibilityRange;
    property Color: Integer read Get_Color write Set_Color;
    property Number: Integer read Get_Number;
  end;

// *********************************************************************//
// DispIntf:  IRobotBackgroundDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B989BE6E-B352-4A46-BC96-A25FF3DFD8BE}
// *********************************************************************//
  IRobotBackgroundDisp = dispinterface
    ['{B989BE6E-B352-4A46-BC96-A25FF3DFD8BE}']
    property Name: WideString dispid 1610743808;
    property FilePath: WideString dispid 1610743810;
    property IsOn: WordBool dispid 1610743812;
    property InsertParams: IRobotBackgroundInsertParams readonly dispid 1610743814;
    property VisibilityRange: IRobotBackgroundVisibilityRange readonly dispid 1610743815;
    property Color: Integer dispid 1610743816;
    property Number: Integer readonly dispid 1610743818;
    function Save: WordBool; dispid 1610743819;
  end;

// *********************************************************************//
// Interface: IRobotBackgroundInsertParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F68355EA-A509-46CB-A437-F29C3F660560}
// *********************************************************************//
  IRobotBackgroundInsertParams = interface(IDispatch)
    ['{F68355EA-A509-46CB-A437-F29C3F660560}']
    function Get_Plane: IRobotGeoPlane; safecall;
    procedure Set_Plane(ret: IRobotGeoPlane); safecall;
    function Get_ReferencePoint: IRobotGeoPoint2D; safecall;
    function Get_InsertionPoint: IRobotGeoPoint2D; safecall;
    function Get_ScalingFactor: Double; safecall;
    procedure Set_ScalingFactor(ret: Double); safecall;
    function Get_RotationAngle: Double; safecall;
    procedure Set_RotationAngle(ret: Double); safecall;
    function Get_Mirror: WordBool; safecall;
    procedure Set_Mirror(ret: WordBool); safecall;
    function Get_Units: WideString; safecall;
    procedure Set_Units(const ret: WideString); safecall;
    function Get_PositionOnNormalAxis: Double; safecall;
    procedure Set_PositionOnNormalAxis(ret: Double); safecall;
    function Get_Layers: IRobotBackgroundLayers; safecall;
    property Plane: IRobotGeoPlane read Get_Plane write Set_Plane;
    property ReferencePoint: IRobotGeoPoint2D read Get_ReferencePoint;
    property InsertionPoint: IRobotGeoPoint2D read Get_InsertionPoint;
    property ScalingFactor: Double read Get_ScalingFactor write Set_ScalingFactor;
    property RotationAngle: Double read Get_RotationAngle write Set_RotationAngle;
    property Mirror: WordBool read Get_Mirror write Set_Mirror;
    property Units: WideString read Get_Units write Set_Units;
    property PositionOnNormalAxis: Double read Get_PositionOnNormalAxis write Set_PositionOnNormalAxis;
    property Layers: IRobotBackgroundLayers read Get_Layers;
  end;

// *********************************************************************//
// DispIntf:  IRobotBackgroundInsertParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F68355EA-A509-46CB-A437-F29C3F660560}
// *********************************************************************//
  IRobotBackgroundInsertParamsDisp = dispinterface
    ['{F68355EA-A509-46CB-A437-F29C3F660560}']
    property Plane: IRobotGeoPlane dispid 1610743808;
    property ReferencePoint: IRobotGeoPoint2D readonly dispid 1610743810;
    property InsertionPoint: IRobotGeoPoint2D readonly dispid 1610743811;
    property ScalingFactor: Double dispid 1610743812;
    property RotationAngle: Double dispid 1610743814;
    property Mirror: WordBool dispid 1610743816;
    property Units: WideString dispid 1610743818;
    property PositionOnNormalAxis: Double dispid 1610743820;
    property Layers: IRobotBackgroundLayers readonly dispid 1610743822;
  end;

// *********************************************************************//
// Interface: IRobotBackgroundLayers
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ED92E547-4A46-4C87-9C31-97740FF1DD61}
// *********************************************************************//
  IRobotBackgroundLayers = interface(IDispatch)
    ['{ED92E547-4A46-4C87-9C31-97740FF1DD61}']
    function Get_Count: Integer; safecall;
    procedure Get(_layer_idx: Integer; out _layer_name: WideString; out _is_imported: WordBool); safecall;
    function IsImported(_layer_idx: Integer): WordBool; safecall;
    procedure SetImported(_layer_idx: Integer; _is_imported: WordBool); safecall;
    function FindName(const _layer_name: WideString): Integer; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotBackgroundLayersDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ED92E547-4A46-4C87-9C31-97740FF1DD61}
// *********************************************************************//
  IRobotBackgroundLayersDisp = dispinterface
    ['{ED92E547-4A46-4C87-9C31-97740FF1DD61}']
    property Count: Integer readonly dispid 1610743808;
    procedure Get(_layer_idx: Integer; out _layer_name: WideString; out _is_imported: WordBool); dispid 1610743809;
    function IsImported(_layer_idx: Integer): WordBool; dispid 1610743810;
    procedure SetImported(_layer_idx: Integer; _is_imported: WordBool); dispid 1610743811;
    function FindName(const _layer_name: WideString): Integer; dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotBackgroundVisibilityRange
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DCFB7D01-6298-40B0-B4C8-8DA78BC3FBFE}
// *********************************************************************//
  IRobotBackgroundVisibilityRange = interface(IDispatch)
    ['{DCFB7D01-6298-40B0-B4C8-8DA78BC3FBFE}']
    function Get_type_: IRobotBackgroundVisibilityRangeType; safecall;
    procedure Set_type_(ret: IRobotBackgroundVisibilityRangeType); safecall;
    function Get_FromPos: Double; safecall;
    procedure Set_FromPos(ret: Double); safecall;
    function Get_ToPos: Double; safecall;
    procedure Set_ToPos(ret: Double); safecall;
    property type_: IRobotBackgroundVisibilityRangeType read Get_type_ write Set_type_;
    property FromPos: Double read Get_FromPos write Set_FromPos;
    property ToPos: Double read Get_ToPos write Set_ToPos;
  end;

// *********************************************************************//
// DispIntf:  IRobotBackgroundVisibilityRangeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DCFB7D01-6298-40B0-B4C8-8DA78BC3FBFE}
// *********************************************************************//
  IRobotBackgroundVisibilityRangeDisp = dispinterface
    ['{DCFB7D01-6298-40B0-B4C8-8DA78BC3FBFE}']
    property type_: IRobotBackgroundVisibilityRangeType dispid 1610743808;
    property FromPos: Double dispid 1610743810;
    property ToPos: Double dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotSTRParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C53C96F2-ECE2-11D2-989F-0080C86BE4DF}
// *********************************************************************//
  IRobotSTRParams = interface(IDispatch)
    ['{C53C96F2-ECE2-11D2-989F-0080C86BE4DF}']
    function Get_Count: Integer; safecall;
    function GetParameter(idx: Integer): IRobotSTRParameter; safecall;
    function FindParameter(const param_name: WideString): Integer; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotSTRParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C53C96F2-ECE2-11D2-989F-0080C86BE4DF}
// *********************************************************************//
  IRobotSTRParamsDisp = dispinterface
    ['{C53C96F2-ECE2-11D2-989F-0080C86BE4DF}']
    property Count: Integer readonly dispid 1610743808;
    function GetParameter(idx: Integer): IRobotSTRParameter; dispid 1610743809;
    function FindParameter(const param_name: WideString): Integer; dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotSTRParameter
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C53C96F3-ECE2-11D2-989F-0080C86BE4DF}
// *********************************************************************//
  IRobotSTRParameter = interface(IDispatch)
    ['{C53C96F3-ECE2-11D2-989F-0080C86BE4DF}']
    function Get_type_: IRobotSTRParamType; safecall;
    function Get_Name: WideString; safecall;
    function Get_Description: WideString; safecall;
    function Get_IsActive: Integer; safecall;
    function Get_IntegerVal: Integer; safecall;
    procedure Set_IntegerVal(ret: Integer); safecall;
    function Get_DoubleVal_1: Double; safecall;
    procedure Set_DoubleVal_1(ret: Double); safecall;
    function Get_DoubleVal_2: Double; safecall;
    procedure Set_DoubleVal_2(ret: Double); safecall;
    function Get_DoubleVal_3: Double; safecall;
    procedure Set_DoubleVal_3(ret: Double); safecall;
    function Get_TextVal: WideString; safecall;
    procedure Set_TextVal(const ret: WideString); safecall;
    function Get_TextList: WideString; safecall;
    procedure Set_TextList(const ret: WideString); safecall;
    function Get_SelectionVal: WideString; safecall;
    procedure Set_SelectionVal(const ret: WideString); safecall;
    function Get_FilePathVal: WideString; safecall;
    procedure Set_FilePathVal(const ret: WideString); safecall;
    property type_: IRobotSTRParamType read Get_type_;
    property Name: WideString read Get_Name;
    property Description: WideString read Get_Description;
    property IsActive: Integer read Get_IsActive;
    property IntegerVal: Integer read Get_IntegerVal write Set_IntegerVal;
    property DoubleVal_1: Double read Get_DoubleVal_1 write Set_DoubleVal_1;
    property DoubleVal_2: Double read Get_DoubleVal_2 write Set_DoubleVal_2;
    property DoubleVal_3: Double read Get_DoubleVal_3 write Set_DoubleVal_3;
    property TextVal: WideString read Get_TextVal write Set_TextVal;
    property TextList: WideString read Get_TextList write Set_TextList;
    property SelectionVal: WideString read Get_SelectionVal write Set_SelectionVal;
    property FilePathVal: WideString read Get_FilePathVal write Set_FilePathVal;
  end;

// *********************************************************************//
// DispIntf:  IRobotSTRParameterDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C53C96F3-ECE2-11D2-989F-0080C86BE4DF}
// *********************************************************************//
  IRobotSTRParameterDisp = dispinterface
    ['{C53C96F3-ECE2-11D2-989F-0080C86BE4DF}']
    property type_: IRobotSTRParamType readonly dispid 1610743808;
    property Name: WideString readonly dispid 1610743809;
    property Description: WideString readonly dispid 1610743810;
    property IsActive: Integer readonly dispid 1610743811;
    property IntegerVal: Integer dispid 1610743812;
    property DoubleVal_1: Double dispid 1610743814;
    property DoubleVal_2: Double dispid 1610743816;
    property DoubleVal_3: Double dispid 1610743818;
    property TextVal: WideString dispid 1610743820;
    property TextList: WideString dispid 1610743822;
    property SelectionVal: WideString dispid 1610743824;
    property FilePathVal: WideString dispid 1610743826;
  end;

// *********************************************************************//
// Interface: IRobotStructuralAxisSequenceList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {064F321D-11E5-4EFA-985A-D30BF84480E9}
// *********************************************************************//
  IRobotStructuralAxisSequenceList = interface(IDispatch)
    ['{064F321D-11E5-4EFA-985A-D30BF84480E9}']
    function Get_SequenceCount: Integer; safecall;
    function Get_AxisCount: Integer; safecall;
    function Get_StartPosition: Double; safecall;
    procedure Set_StartPosition(ret: Double); safecall;
    procedure AddSequence(_distance: Double; _repeat_number: Integer); safecall;
    procedure GetSequence(_idx: Integer; out _distance: Double; out _repeat_number: Integer); safecall;
    function GetAxis(_idx: Integer; out _label: WideString; out _position: Double; 
                     out _singleout: WordBool): WordBool; safecall;
    procedure SingleOutAxis(_idx: Integer; _singleout: WordBool); safecall;
    procedure SetAxisLabel(_idx: Integer; const _label: WideString); safecall;
    function FindAxisByPos(_pos: Double): Integer; safecall;
    procedure DeleteSequence(_idx: Integer); safecall;
    procedure Clear; safecall;
    procedure SetLabelFormat(_label_type: IRobotStructuralAxisLabelType; 
                             const _label_def: WideString; _reversed: WordBool); safecall;
    property SequenceCount: Integer read Get_SequenceCount;
    property AxisCount: Integer read Get_AxisCount;
    property StartPosition: Double read Get_StartPosition write Set_StartPosition;
  end;

// *********************************************************************//
// DispIntf:  IRobotStructuralAxisSequenceListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {064F321D-11E5-4EFA-985A-D30BF84480E9}
// *********************************************************************//
  IRobotStructuralAxisSequenceListDisp = dispinterface
    ['{064F321D-11E5-4EFA-985A-D30BF84480E9}']
    property SequenceCount: Integer readonly dispid 1610743808;
    property AxisCount: Integer readonly dispid 1610743809;
    property StartPosition: Double dispid 1610743810;
    procedure AddSequence(_distance: Double; _repeat_number: Integer); dispid 1610743812;
    procedure GetSequence(_idx: Integer; out _distance: Double; out _repeat_number: Integer); dispid 1610743813;
    function GetAxis(_idx: Integer; out _label: WideString; out _position: Double; 
                     out _singleout: WordBool): WordBool; dispid 1610743814;
    procedure SingleOutAxis(_idx: Integer; _singleout: WordBool); dispid 1610743815;
    procedure SetAxisLabel(_idx: Integer; const _label: WideString); dispid 1610743816;
    function FindAxisByPos(_pos: Double): Integer; dispid 1610743817;
    procedure DeleteSequence(_idx: Integer); dispid 1610743818;
    procedure Clear; dispid 1610743819;
    procedure SetLabelFormat(_label_type: IRobotStructuralAxisLabelType; 
                             const _label_def: WideString; _reversed: WordBool); dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRobotStructuralAxisGridCartesian
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {85FFB964-BA73-43A9-9063-47318C0CC06B}
// *********************************************************************//
  IRobotStructuralAxisGridCartesian = interface(IRobotStructuralAxisGrid)
    ['{85FFB964-BA73-43A9-9063-47318C0CC06B}']
    function Get_X: IRobotStructuralAxisSequenceList; safecall;
    function Get_Y: IRobotStructuralAxisSequenceList; safecall;
    function Get_Z: IRobotStructuralAxisSequenceList; safecall;
    function Get_RotationAxis: IRobotGeoCoordinateAxis; safecall;
    procedure Set_RotationAxis(ret: IRobotGeoCoordinateAxis); safecall;
    function Get_RotationAngle: Double; safecall;
    procedure Set_RotationAngle(ret: Double); safecall;
    procedure SetRelativeToPoint(_set: WordBool; _x: Double; _y: Double; _z: Double); safecall;
    function GetRelativeToPoint(out _x: Double; out _y: Double; out _z: Double): WordBool; safecall;
    function Get_IncludeStoreysInZ: WordBool; safecall;
    procedure Set_IncludeStoreysInZ(ret: WordBool); safecall;
    function Get_StoreysInZ: IRobotStoreySelection; safecall;
    property X: IRobotStructuralAxisSequenceList read Get_X;
    property Y: IRobotStructuralAxisSequenceList read Get_Y;
    property Z: IRobotStructuralAxisSequenceList read Get_Z;
    property RotationAxis: IRobotGeoCoordinateAxis read Get_RotationAxis write Set_RotationAxis;
    property RotationAngle: Double read Get_RotationAngle write Set_RotationAngle;
    property IncludeStoreysInZ: WordBool read Get_IncludeStoreysInZ write Set_IncludeStoreysInZ;
    property StoreysInZ: IRobotStoreySelection read Get_StoreysInZ;
  end;

// *********************************************************************//
// DispIntf:  IRobotStructuralAxisGridCartesianDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {85FFB964-BA73-43A9-9063-47318C0CC06B}
// *********************************************************************//
  IRobotStructuralAxisGridCartesianDisp = dispinterface
    ['{85FFB964-BA73-43A9-9063-47318C0CC06B}']
    property X: IRobotStructuralAxisSequenceList readonly dispid 1610809344;
    property Y: IRobotStructuralAxisSequenceList readonly dispid 1610809345;
    property Z: IRobotStructuralAxisSequenceList readonly dispid 1610809346;
    property RotationAxis: IRobotGeoCoordinateAxis dispid 1610809347;
    property RotationAngle: Double dispid 1610809349;
    procedure SetRelativeToPoint(_set: WordBool; _x: Double; _y: Double; _z: Double); dispid 1610809351;
    function GetRelativeToPoint(out _x: Double; out _y: Double; out _z: Double): WordBool; dispid 1610809352;
    property IncludeStoreysInZ: WordBool dispid 1610809353;
    property StoreysInZ: IRobotStoreySelection readonly dispid 1610809355;
    property Name: WideString dispid 1610743808;
    property type_: IRobotStructuralAxisGridType readonly dispid 1610743810;
    procedure Save; dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRobotSWCodePLParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D34BD232-3619-11D4-B817-0050DA76755E}
// *********************************************************************//
  IRobotSWCodePLParams = interface(IDispatch)
    ['{D34BD232-3619-11D4-B817-0050DA76755E}']
    function Get_StructureHeight: Double; safecall;
    procedure Set_StructureHeight(ret: Double); safecall;
    function Get_ReferenceLevel: Double; safecall;
    procedure Set_ReferenceLevel(ret: Double); safecall;
    function Get_Altitude: Double; safecall;
    procedure Set_Altitude(ret: Double); safecall;
    function Get_NodalLoadsForAllBars: WordBool; safecall;
    procedure Set_NodalLoadsForAllBars(ret: WordBool); safecall;
    function Get_NodalLoadsForBarsList: WideString; safecall;
    procedure Set_NodalLoadsForBarsList(const ret: WideString); safecall;
    function Get_WindZone: IRobotSWCodePLWindZone; safecall;
    procedure Set_WindZone(ret: IRobotSWCodePLWindZone); safecall;
    function Get_WindSite: IRobotSWCodePLWindSite; safecall;
    procedure Set_WindSite(ret: IRobotSWCodePLWindSite); safecall;
    function Get_WindPressureAutomatic: WordBool; safecall;
    procedure Set_WindPressureAutomatic(ret: WordBool); safecall;
    function Get_WindPressure: Double; safecall;
    procedure Set_WindPressure(ret: Double); safecall;
    function Get_WindPressureDistribOnHeight: IRobotSWCodePLWindPressDistribType; safecall;
    procedure Set_WindPressureDistribOnHeight(ret: IRobotSWCodePLWindPressDistribType); safecall;
    function Get_WindMultipleRoofs: WordBool; safecall;
    procedure Set_WindMultipleRoofs(ret: WordBool); safecall;
    function Get_WindDynamicAction: WordBool; safecall;
    procedure Set_WindDynamicAction(ret: WordBool); safecall;
    function Get_WindDynamicDecrement: Double; safecall;
    procedure Set_WindDynamicDecrement(ret: Double); safecall;
    function Get_WindDynamicPeriod: Double; safecall;
    procedure Set_WindDynamicPeriod(ret: Double); safecall;
    function Get_SnowZone: IRobotSWCodePLSnowZone; safecall;
    procedure Set_SnowZone(ret: IRobotSWCodePLSnowZone); safecall;
    function Get_SnowPressureAutomatic: WordBool; safecall;
    procedure Set_SnowPressureAutomatic(ret: WordBool); safecall;
    function Get_SnowPressure: Double; safecall;
    procedure Set_SnowPressure(ret: Double); safecall;
    function Get_SnowRedistribution: WordBool; safecall;
    procedure Set_SnowRedistribution(ret: WordBool); safecall;
    function Get_PermLeftSide: Double; safecall;
    procedure Set_PermLeftSide(ret: Double); safecall;
    function Get_PermRightSide: Double; safecall;
    procedure Set_PermRightSide(ret: Double); safecall;
    function Get_PermFront: Double; safecall;
    procedure Set_PermFront(ret: Double); safecall;
    function Get_PermRear: Double; safecall;
    procedure Set_PermRear(ret: Double); safecall;
    function Get_IsolatedRoofs: IRobotNumbersCollection; safecall;
    function WindBarCoeffGet(bar_num: Integer): Double; safecall;
    procedure WindBarCoeffSet(bar_num: Integer; bar_coeff: Double); safecall;
    function SnowBarCoeffGet(bar_num: Integer): Double; safecall;
    procedure SnowBarCoeffSet(bar_num: Integer; bar_coef: Double); safecall;
    procedure IsolatedRoofSetLocation(bar_num: Integer; loc: Double; _relative: WordBool); safecall;
    function IsolatedRoofGetLocation(bar_num: Integer; Relative: WordBool): Double; safecall;
    property StructureHeight: Double read Get_StructureHeight write Set_StructureHeight;
    property ReferenceLevel: Double read Get_ReferenceLevel write Set_ReferenceLevel;
    property Altitude: Double read Get_Altitude write Set_Altitude;
    property NodalLoadsForAllBars: WordBool read Get_NodalLoadsForAllBars write Set_NodalLoadsForAllBars;
    property NodalLoadsForBarsList: WideString read Get_NodalLoadsForBarsList write Set_NodalLoadsForBarsList;
    property WindZone: IRobotSWCodePLWindZone read Get_WindZone write Set_WindZone;
    property WindSite: IRobotSWCodePLWindSite read Get_WindSite write Set_WindSite;
    property WindPressureAutomatic: WordBool read Get_WindPressureAutomatic write Set_WindPressureAutomatic;
    property WindPressure: Double read Get_WindPressure write Set_WindPressure;
    property WindPressureDistribOnHeight: IRobotSWCodePLWindPressDistribType read Get_WindPressureDistribOnHeight write Set_WindPressureDistribOnHeight;
    property WindMultipleRoofs: WordBool read Get_WindMultipleRoofs write Set_WindMultipleRoofs;
    property WindDynamicAction: WordBool read Get_WindDynamicAction write Set_WindDynamicAction;
    property WindDynamicDecrement: Double read Get_WindDynamicDecrement write Set_WindDynamicDecrement;
    property WindDynamicPeriod: Double read Get_WindDynamicPeriod write Set_WindDynamicPeriod;
    property SnowZone: IRobotSWCodePLSnowZone read Get_SnowZone write Set_SnowZone;
    property SnowPressureAutomatic: WordBool read Get_SnowPressureAutomatic write Set_SnowPressureAutomatic;
    property SnowPressure: Double read Get_SnowPressure write Set_SnowPressure;
    property SnowRedistribution: WordBool read Get_SnowRedistribution write Set_SnowRedistribution;
    property PermLeftSide: Double read Get_PermLeftSide write Set_PermLeftSide;
    property PermRightSide: Double read Get_PermRightSide write Set_PermRightSide;
    property PermFront: Double read Get_PermFront write Set_PermFront;
    property PermRear: Double read Get_PermRear write Set_PermRear;
    property IsolatedRoofs: IRobotNumbersCollection read Get_IsolatedRoofs;
  end;

// *********************************************************************//
// DispIntf:  IRobotSWCodePLParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D34BD232-3619-11D4-B817-0050DA76755E}
// *********************************************************************//
  IRobotSWCodePLParamsDisp = dispinterface
    ['{D34BD232-3619-11D4-B817-0050DA76755E}']
    property StructureHeight: Double dispid 1610743808;
    property ReferenceLevel: Double dispid 1610743810;
    property Altitude: Double dispid 1610743812;
    property NodalLoadsForAllBars: WordBool dispid 1610743814;
    property NodalLoadsForBarsList: WideString dispid 1610743816;
    property WindZone: IRobotSWCodePLWindZone dispid 1610743818;
    property WindSite: IRobotSWCodePLWindSite dispid 1610743820;
    property WindPressureAutomatic: WordBool dispid 1610743822;
    property WindPressure: Double dispid 1610743824;
    property WindPressureDistribOnHeight: IRobotSWCodePLWindPressDistribType dispid 1610743826;
    property WindMultipleRoofs: WordBool dispid 1610743828;
    property WindDynamicAction: WordBool dispid 1610743830;
    property WindDynamicDecrement: Double dispid 1610743832;
    property WindDynamicPeriod: Double dispid 1610743834;
    property SnowZone: IRobotSWCodePLSnowZone dispid 1610743836;
    property SnowPressureAutomatic: WordBool dispid 1610743838;
    property SnowPressure: Double dispid 1610743840;
    property SnowRedistribution: WordBool dispid 1610743842;
    property PermLeftSide: Double dispid 1610743844;
    property PermRightSide: Double dispid 1610743846;
    property PermFront: Double dispid 1610743848;
    property PermRear: Double dispid 1610743850;
    property IsolatedRoofs: IRobotNumbersCollection readonly dispid 1610743852;
    function WindBarCoeffGet(bar_num: Integer): Double; dispid 1610743853;
    procedure WindBarCoeffSet(bar_num: Integer; bar_coeff: Double); dispid 1610743854;
    function SnowBarCoeffGet(bar_num: Integer): Double; dispid 1610743855;
    procedure SnowBarCoeffSet(bar_num: Integer; bar_coef: Double); dispid 1610743856;
    procedure IsolatedRoofSetLocation(bar_num: Integer; loc: Double; _relative: WordBool); dispid 1610743857;
    function IsolatedRoofGetLocation(bar_num: Integer; Relative: WordBool): Double; dispid 1610743858;
  end;

// *********************************************************************//
// Interface: IRobotSWCodeFRParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1925AC12-3DDA-11D4-B820-0050DA76755E}
// *********************************************************************//
  IRobotSWCodeFRParams = interface(IDispatch)
    ['{1925AC12-3DDA-11D4-B820-0050DA76755E}']
    function Get_StructureHeight: Double; safecall;
    procedure Set_StructureHeight(ret: Double); safecall;
    function Get_ReferenceLevel: Double; safecall;
    procedure Set_ReferenceLevel(ret: Double); safecall;
    function Get_Altitude: Double; safecall;
    procedure Set_Altitude(ret: Double); safecall;
    function Get_NodalLoadsForAllBars: WordBool; safecall;
    procedure Set_NodalLoadsForAllBars(ret: WordBool); safecall;
    function Get_NodalLoadsForBarsList: WideString; safecall;
    procedure Set_NodalLoadsForBarsList(const ret: WideString); safecall;
    function Get_RiseOfRoofAutomatic: WordBool; safecall;
    procedure Set_RiseOfRoofAutomatic(ret: WordBool); safecall;
    function Get_RiseOfRoof: Double; safecall;
    procedure Set_RiseOfRoof(ret: Double); safecall;
    function Get_WindRegion: WideString; safecall;
    procedure Set_WindRegion(const ret: WideString); safecall;
    function Get_WindSite: IRobotSWCodeFRWindSite; safecall;
    procedure Set_WindSite(ret: IRobotSWCodeFRWindSite); safecall;
    function Get_WindType: IRobotSWCodeFRWindType; safecall;
    procedure Set_WindType(ret: IRobotSWCodeFRWindType); safecall;
    function Get_WindCoastalArea: WordBool; safecall;
    procedure Set_WindCoastalArea(ret: WordBool); safecall;
    function Get_WindPressureVariable: WordBool; safecall;
    procedure Set_WindPressureVariable(ret: WordBool); safecall;
    function Get_WindPressureAutomatic: WordBool; safecall;
    procedure Set_WindPressureAutomatic(ret: WordBool); safecall;
    function Get_WindPressure: Double; safecall;
    procedure Set_WindPressure(ret: Double); safecall;
    function Get_WindDeltaCoeffAutomatic: WordBool; safecall;
    procedure Set_WindDeltaCoeffAutomatic(ret: WordBool); safecall;
    function Get_WindDeltaCoeff: Double; safecall;
    procedure Set_WindDeltaCoeff(ret: Double); safecall;
    function Get_WindMultipleRoof: WordBool; safecall;
    procedure Set_WindMultipleRoof(ret: WordBool); safecall;
    function Get_WindFacadeOffset: WordBool; safecall;
    procedure Set_WindFacadeOffset(ret: WordBool); safecall;
    function Get_WindDynamicAction: WordBool; safecall;
    procedure Set_WindDynamicAction(ret: WordBool); safecall;
    function Get_SnowRegion: WideString; safecall;
    procedure Set_SnowRegion(const ret: WideString); safecall;
    function Get_SnowPressureNormalAutomatic: WordBool; safecall;
    procedure Set_SnowPressureNormalAutomatic(ret: WordBool); safecall;
    function Get_SnowPressureNormal: Double; safecall;
    procedure Set_SnowPressureNormal(ret: Double); safecall;
    function Get_SnowPressureExtremeAutomatic: WordBool; safecall;
    procedure Set_SnowPressureExtremeAutomatic(ret: WordBool); safecall;
    function Get_SnowPressureExtreme: Double; safecall;
    procedure Set_SnowPressureExtreme(ret: Double); safecall;
    function Get_SnowRedistribution: WordBool; safecall;
    procedure Set_SnowRedistribution(ret: WordBool); safecall;
    function Get_SnowGutterBars: WideString; safecall;
    procedure Set_SnowGutterBars(const ret: WideString); safecall;
    function Get_PermLeftSide: Double; safecall;
    procedure Set_PermLeftSide(ret: Double); safecall;
    function Get_PermRightSide: Double; safecall;
    procedure Set_PermRightSide(ret: Double); safecall;
    function Get_PermFront: Double; safecall;
    procedure Set_PermFront(ret: Double); safecall;
    function Get_PermRear: Double; safecall;
    procedure Set_PermRear(ret: Double); safecall;
    function Get_PermDoorLeftSidePresent: WordBool; safecall;
    procedure Set_PermDoorLeftSidePresent(ret: WordBool); safecall;
    function Get_PermDoorLeftSide: Double; safecall;
    procedure Set_PermDoorLeftSide(ret: Double); safecall;
    function Get_PermDoorRightSidePresent: WordBool; safecall;
    procedure Set_PermDoorRightSidePresent(ret: WordBool); safecall;
    function Get_PermDoorRightSide: Double; safecall;
    procedure Set_PermDoorRightSide(ret: Double); safecall;
    function Get_PermDoorFrontPresent: WordBool; safecall;
    procedure Set_PermDoorFrontPresent(ret: WordBool); safecall;
    function Get_PermDoorFront: Double; safecall;
    procedure Set_PermDoorFront(ret: Double); safecall;
    function Get_PermDoorRearPresent: WordBool; safecall;
    procedure Set_PermDoorRearPresent(ret: WordBool); safecall;
    function Get_PermDoorRear: Double; safecall;
    procedure Set_PermDoorRear(ret: Double); safecall;
    function Get_SurfaceLower: IRobotSWCodeFRSurfaceType; safecall;
    procedure Set_SurfaceLower(ret: IRobotSWCodeFRSurfaceType); safecall;
    function Get_SurfaceUpper: IRobotSWCodeFRSurfaceType; safecall;
    procedure Set_SurfaceUpper(ret: IRobotSWCodeFRSurfaceType); safecall;
    function Get_OpenStructure: WordBool; safecall;
    procedure Set_OpenStructure(ret: WordBool); safecall;
    function Get_IsolatedRoofs: IRobotNumbersCollection; safecall;
    function Get_SnowIsWaterOutflow: WordBool; safecall;
    procedure Set_SnowIsWaterOutflow(ret: WordBool); safecall;
    function Get_SnowWaterOutflow: Double; safecall;
    procedure Set_SnowWaterOutflow(ret: Double); safecall;
    function Get_SnowObstacles: WideString; safecall;
    procedure Set_SnowObstacles(const ret: WideString); safecall;
    function Get_WindDynamicActionPeriod: Double; safecall;
    procedure Set_WindDynamicActionPeriod(ret: Double); safecall;
    function Get_WindDynamicActionCoeff: Double; safecall;
    procedure Set_WindDynamicActionCoeff(ret: Double); safecall;
    function Get_WindDynamicActionCoeffAutomatic: WordBool; safecall;
    procedure Set_WindDynamicActionCoeffAutomatic(ret: WordBool); safecall;
    function Get_WindDynamicActionSteelStructure: WordBool; safecall;
    procedure Set_WindDynamicActionSteelStructure(ret: WordBool); safecall;
    function Get_SnowType: IRobotSWCodeFRSnowType; safecall;
    procedure Set_SnowType(ret: IRobotSWCodeFRSnowType); safecall;
    function Get_WindPressureCeCiMinimum: WordBool; safecall;
    procedure Set_WindPressureCeCiMinimum(ret: WordBool); safecall;
    function WindBarCoeffGet(bar_num: Integer): Double; safecall;
    procedure WindBarCoeffSet(bar_num: Integer; _coeff: Double); safecall;
    function SnowBarCoeffGet(bar_num: Integer): Double; safecall;
    procedure SnowBarCoeffSet(bar_num: Integer; _coeff: Double); safecall;
    function IsolatedRoofGetLocation(bar_num: Integer; _relative: WordBool): Double; safecall;
    procedure IsolatedRoofSetLocation(bar_num: Integer; _location: Double; _relative: WordBool); safecall;
    property StructureHeight: Double read Get_StructureHeight write Set_StructureHeight;
    property ReferenceLevel: Double read Get_ReferenceLevel write Set_ReferenceLevel;
    property Altitude: Double read Get_Altitude write Set_Altitude;
    property NodalLoadsForAllBars: WordBool read Get_NodalLoadsForAllBars write Set_NodalLoadsForAllBars;
    property NodalLoadsForBarsList: WideString read Get_NodalLoadsForBarsList write Set_NodalLoadsForBarsList;
    property RiseOfRoofAutomatic: WordBool read Get_RiseOfRoofAutomatic write Set_RiseOfRoofAutomatic;
    property RiseOfRoof: Double read Get_RiseOfRoof write Set_RiseOfRoof;
    property WindRegion: WideString read Get_WindRegion write Set_WindRegion;
    property WindSite: IRobotSWCodeFRWindSite read Get_WindSite write Set_WindSite;
    property WindType: IRobotSWCodeFRWindType read Get_WindType write Set_WindType;
    property WindCoastalArea: WordBool read Get_WindCoastalArea write Set_WindCoastalArea;
    property WindPressureVariable: WordBool read Get_WindPressureVariable write Set_WindPressureVariable;
    property WindPressureAutomatic: WordBool read Get_WindPressureAutomatic write Set_WindPressureAutomatic;
    property WindPressure: Double read Get_WindPressure write Set_WindPressure;
    property WindDeltaCoeffAutomatic: WordBool read Get_WindDeltaCoeffAutomatic write Set_WindDeltaCoeffAutomatic;
    property WindDeltaCoeff: Double read Get_WindDeltaCoeff write Set_WindDeltaCoeff;
    property WindMultipleRoof: WordBool read Get_WindMultipleRoof write Set_WindMultipleRoof;
    property WindFacadeOffset: WordBool read Get_WindFacadeOffset write Set_WindFacadeOffset;
    property WindDynamicAction: WordBool read Get_WindDynamicAction write Set_WindDynamicAction;
    property SnowRegion: WideString read Get_SnowRegion write Set_SnowRegion;
    property SnowPressureNormalAutomatic: WordBool read Get_SnowPressureNormalAutomatic write Set_SnowPressureNormalAutomatic;
    property SnowPressureNormal: Double read Get_SnowPressureNormal write Set_SnowPressureNormal;
    property SnowPressureExtremeAutomatic: WordBool read Get_SnowPressureExtremeAutomatic write Set_SnowPressureExtremeAutomatic;
    property SnowPressureExtreme: Double read Get_SnowPressureExtreme write Set_SnowPressureExtreme;
    property SnowRedistribution: WordBool read Get_SnowRedistribution write Set_SnowRedistribution;
    property SnowGutterBars: WideString read Get_SnowGutterBars write Set_SnowGutterBars;
    property PermLeftSide: Double read Get_PermLeftSide write Set_PermLeftSide;
    property PermRightSide: Double read Get_PermRightSide write Set_PermRightSide;
    property PermFront: Double read Get_PermFront write Set_PermFront;
    property PermRear: Double read Get_PermRear write Set_PermRear;
    property PermDoorLeftSidePresent: WordBool read Get_PermDoorLeftSidePresent write Set_PermDoorLeftSidePresent;
    property PermDoorLeftSide: Double read Get_PermDoorLeftSide write Set_PermDoorLeftSide;
    property PermDoorRightSidePresent: WordBool read Get_PermDoorRightSidePresent write Set_PermDoorRightSidePresent;
    property PermDoorRightSide: Double read Get_PermDoorRightSide write Set_PermDoorRightSide;
    property PermDoorFrontPresent: WordBool read Get_PermDoorFrontPresent write Set_PermDoorFrontPresent;
    property PermDoorFront: Double read Get_PermDoorFront write Set_PermDoorFront;
    property PermDoorRearPresent: WordBool read Get_PermDoorRearPresent write Set_PermDoorRearPresent;
    property PermDoorRear: Double read Get_PermDoorRear write Set_PermDoorRear;
    property SurfaceLower: IRobotSWCodeFRSurfaceType read Get_SurfaceLower write Set_SurfaceLower;
    property SurfaceUpper: IRobotSWCodeFRSurfaceType read Get_SurfaceUpper write Set_SurfaceUpper;
    property OpenStructure: WordBool read Get_OpenStructure write Set_OpenStructure;
    property IsolatedRoofs: IRobotNumbersCollection read Get_IsolatedRoofs;
    property SnowIsWaterOutflow: WordBool read Get_SnowIsWaterOutflow write Set_SnowIsWaterOutflow;
    property SnowWaterOutflow: Double read Get_SnowWaterOutflow write Set_SnowWaterOutflow;
    property SnowObstacles: WideString read Get_SnowObstacles write Set_SnowObstacles;
    property WindDynamicActionPeriod: Double read Get_WindDynamicActionPeriod write Set_WindDynamicActionPeriod;
    property WindDynamicActionCoeff: Double read Get_WindDynamicActionCoeff write Set_WindDynamicActionCoeff;
    property WindDynamicActionCoeffAutomatic: WordBool read Get_WindDynamicActionCoeffAutomatic write Set_WindDynamicActionCoeffAutomatic;
    property WindDynamicActionSteelStructure: WordBool read Get_WindDynamicActionSteelStructure write Set_WindDynamicActionSteelStructure;
    property SnowType: IRobotSWCodeFRSnowType read Get_SnowType write Set_SnowType;
    property WindPressureCeCiMinimum: WordBool read Get_WindPressureCeCiMinimum write Set_WindPressureCeCiMinimum;
  end;

// *********************************************************************//
// DispIntf:  IRobotSWCodeFRParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1925AC12-3DDA-11D4-B820-0050DA76755E}
// *********************************************************************//
  IRobotSWCodeFRParamsDisp = dispinterface
    ['{1925AC12-3DDA-11D4-B820-0050DA76755E}']
    property StructureHeight: Double dispid 1610743808;
    property ReferenceLevel: Double dispid 1610743810;
    property Altitude: Double dispid 1610743812;
    property NodalLoadsForAllBars: WordBool dispid 1610743814;
    property NodalLoadsForBarsList: WideString dispid 1610743816;
    property RiseOfRoofAutomatic: WordBool dispid 1610743818;
    property RiseOfRoof: Double dispid 1610743820;
    property WindRegion: WideString dispid 1610743822;
    property WindSite: IRobotSWCodeFRWindSite dispid 1610743824;
    property WindType: IRobotSWCodeFRWindType dispid 1610743826;
    property WindCoastalArea: WordBool dispid 1610743828;
    property WindPressureVariable: WordBool dispid 1610743830;
    property WindPressureAutomatic: WordBool dispid 1610743832;
    property WindPressure: Double dispid 1610743834;
    property WindDeltaCoeffAutomatic: WordBool dispid 1610743836;
    property WindDeltaCoeff: Double dispid 1610743838;
    property WindMultipleRoof: WordBool dispid 1610743840;
    property WindFacadeOffset: WordBool dispid 1610743842;
    property WindDynamicAction: WordBool dispid 1610743844;
    property SnowRegion: WideString dispid 1610743846;
    property SnowPressureNormalAutomatic: WordBool dispid 1610743848;
    property SnowPressureNormal: Double dispid 1610743850;
    property SnowPressureExtremeAutomatic: WordBool dispid 1610743852;
    property SnowPressureExtreme: Double dispid 1610743854;
    property SnowRedistribution: WordBool dispid 1610743856;
    property SnowGutterBars: WideString dispid 1610743858;
    property PermLeftSide: Double dispid 1610743860;
    property PermRightSide: Double dispid 1610743862;
    property PermFront: Double dispid 1610743864;
    property PermRear: Double dispid 1610743866;
    property PermDoorLeftSidePresent: WordBool dispid 1610743868;
    property PermDoorLeftSide: Double dispid 1610743870;
    property PermDoorRightSidePresent: WordBool dispid 1610743872;
    property PermDoorRightSide: Double dispid 1610743874;
    property PermDoorFrontPresent: WordBool dispid 1610743876;
    property PermDoorFront: Double dispid 1610743878;
    property PermDoorRearPresent: WordBool dispid 1610743880;
    property PermDoorRear: Double dispid 1610743882;
    property SurfaceLower: IRobotSWCodeFRSurfaceType dispid 1610743884;
    property SurfaceUpper: IRobotSWCodeFRSurfaceType dispid 1610743886;
    property OpenStructure: WordBool dispid 1610743888;
    property IsolatedRoofs: IRobotNumbersCollection readonly dispid 1610743890;
    property SnowIsWaterOutflow: WordBool dispid 1610743891;
    property SnowWaterOutflow: Double dispid 1610743893;
    property SnowObstacles: WideString dispid 1610743895;
    property WindDynamicActionPeriod: Double dispid 1610743897;
    property WindDynamicActionCoeff: Double dispid 1610743899;
    property WindDynamicActionCoeffAutomatic: WordBool dispid 1610743901;
    property WindDynamicActionSteelStructure: WordBool dispid 1610743903;
    property SnowType: IRobotSWCodeFRSnowType dispid 1610743905;
    property WindPressureCeCiMinimum: WordBool dispid 1610743907;
    function WindBarCoeffGet(bar_num: Integer): Double; dispid 1610743909;
    procedure WindBarCoeffSet(bar_num: Integer; _coeff: Double); dispid 1610743910;
    function SnowBarCoeffGet(bar_num: Integer): Double; dispid 1610743911;
    procedure SnowBarCoeffSet(bar_num: Integer; _coeff: Double); dispid 1610743912;
    function IsolatedRoofGetLocation(bar_num: Integer; _relative: WordBool): Double; dispid 1610743913;
    procedure IsolatedRoofSetLocation(bar_num: Integer; _location: Double; _relative: WordBool); dispid 1610743914;
  end;

// *********************************************************************//
// Interface: IRobotSWCodeECParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {73D09B84-24D7-427F-BA8F-E33B88FBF058}
// *********************************************************************//
  IRobotSWCodeECParams = interface(IDispatch)
    ['{73D09B84-24D7-427F-BA8F-E33B88FBF058}']
    function Get_StructureHeight: Double; safecall;
    procedure Set_StructureHeight(ret: Double); safecall;
    function Get_ReferenceLevel: Double; safecall;
    procedure Set_ReferenceLevel(ret: Double); safecall;
    function Get_Altitude: Double; safecall;
    procedure Set_Altitude(ret: Double); safecall;
    function Get_NodalLoadsForAllBars: WordBool; safecall;
    procedure Set_NodalLoadsForAllBars(ret: WordBool); safecall;
    function Get_NodalLoadsForBarsList: WideString; safecall;
    procedure Set_NodalLoadsForBarsList(const ret: WideString); safecall;
    function Get_LeftWind2NordAngle: Double; safecall;
    procedure Set_LeftWind2NordAngle(ret: Double); safecall;
    function Get_GlobalCDIR: WordBool; safecall;
    procedure Set_GlobalCDIR(ret: WordBool); safecall;
    function Get_StructureAgeCode: WideString; safecall;
    procedure Set_StructureAgeCode(const ret: WideString); safecall;
    function Get_StructureAge: Double; safecall;
    procedure Set_StructureAge(ret: Double); safecall;
    function Get_StructureP: Double; safecall;
    procedure Set_StructureP(ret: Double); safecall;
    function Get_WindCDIR: Double; safecall;
    procedure Set_WindCDIR(ret: Double); safecall;
    function Get_WindCALT: Double; safecall;
    procedure Set_WindCALT(ret: Double); safecall;
    function Get_WindCTEM: Double; safecall;
    procedure Set_WindCTEM(ret: Double); safecall;
    function Get_WindPressureAutomatic: WordBool; safecall;
    procedure Set_WindPressureAutomatic(ret: WordBool); safecall;
    function Get_WindQref: Double; safecall;
    procedure Set_WindQref(ret: Double); safecall;
    function Get_WindVref0: Double; safecall;
    procedure Set_WindVref0(ret: Double); safecall;
    function Get_WindQref0: Double; safecall;
    procedure Set_WindQref0(ret: Double); safecall;
    function Get_WindQref0p: Double; safecall;
    procedure Set_WindQref0p(ret: Double); safecall;
    function Get_WindCtAuto: WordBool; safecall;
    procedure Set_WindCtAuto(ret: WordBool); safecall;
    function Get_WindSiteType: IRobotSWCodeECSiteType; safecall;
    procedure Set_WindSiteType(ret: IRobotSWCodeECSiteType); safecall;
    function Get_WindCt: Double; safecall;
    procedure Set_WindCt(ret: Double); safecall;
    function Get_GroundType: IRobotSWCodeECGroundType; safecall;
    procedure Set_GroundType(ret: IRobotSWCodeECGroundType); safecall;
    function Get_WindKT: Double; safecall;
    procedure Set_WindKT(ret: Double); safecall;
    function Get_WindZ0: Double; safecall;
    procedure Set_WindZ0(ret: Double); safecall;
    function Get_WindZMin: Double; safecall;
    procedure Set_WindZMin(ret: Double); safecall;
    function Get_WindE: Double; safecall;
    procedure Set_WindE(ret: Double); safecall;
    function Get_WindAutoCd: WordBool; safecall;
    procedure Set_WindAutoCd(ret: WordBool); safecall;
    function Get_WindCdType: IRobotSWCodeECCdType; safecall;
    procedure Set_WindCdType(ret: IRobotSWCodeECCdType); safecall;
    function Get_WindCd: Double; safecall;
    procedure Set_WindCd(ret: Double); safecall;
    function Get_SnowPressureNormal: Double; safecall;
    procedure Set_SnowPressureNormal(ret: Double); safecall;
    function Get_SnowPressureExtreme: Double; safecall;
    procedure Set_SnowPressureExtreme(ret: Double); safecall;
    function Get_SnowRedistribution: WordBool; safecall;
    procedure Set_SnowRedistribution(ret: WordBool); safecall;
    function Get_SnowGutterBars: WideString; safecall;
    procedure Set_SnowGutterBars(const ret: WideString); safecall;
    function Get_PermLeftSide: Double; safecall;
    procedure Set_PermLeftSide(ret: Double); safecall;
    function Get_PermRightSide: Double; safecall;
    procedure Set_PermRightSide(ret: Double); safecall;
    function Get_PermFront: Double; safecall;
    procedure Set_PermFront(ret: Double); safecall;
    function Get_PermRear: Double; safecall;
    procedure Set_PermRear(ret: Double); safecall;
    function Get_PermDoorLeftSidePresent: WordBool; safecall;
    procedure Set_PermDoorLeftSidePresent(ret: WordBool); safecall;
    function Get_PermDoorLeftSide: Double; safecall;
    procedure Set_PermDoorLeftSide(ret: Double); safecall;
    function Get_PermDoorRightSidePresent: WordBool; safecall;
    procedure Set_PermDoorRightSidePresent(ret: WordBool); safecall;
    function Get_PermDoorRightSide: Double; safecall;
    procedure Set_PermDoorRightSide(ret: Double); safecall;
    function Get_PermDoorFrontPresent: WordBool; safecall;
    procedure Set_PermDoorFrontPresent(ret: WordBool); safecall;
    function Get_PermDoorFront: Double; safecall;
    procedure Set_PermDoorFront(ret: Double); safecall;
    function Get_PermDoorRearPresent: WordBool; safecall;
    procedure Set_PermDoorRearPresent(ret: WordBool); safecall;
    function Get_PermDoorRear: Double; safecall;
    procedure Set_PermDoorRear(ret: Double); safecall;
    function WindBarCoeffGet(_bar_num: Integer): Double; safecall;
    procedure WindBarCoeffSet(_bar_num: Integer; _coeff: Double); safecall;
    function SnowBarCoeffGet(_bar_num: Integer): Double; safecall;
    procedure SnowBarCoeffSet(_bar_num: Integer; _coeff: Double); safecall;
    property StructureHeight: Double read Get_StructureHeight write Set_StructureHeight;
    property ReferenceLevel: Double read Get_ReferenceLevel write Set_ReferenceLevel;
    property Altitude: Double read Get_Altitude write Set_Altitude;
    property NodalLoadsForAllBars: WordBool read Get_NodalLoadsForAllBars write Set_NodalLoadsForAllBars;
    property NodalLoadsForBarsList: WideString read Get_NodalLoadsForBarsList write Set_NodalLoadsForBarsList;
    property LeftWind2NordAngle: Double read Get_LeftWind2NordAngle write Set_LeftWind2NordAngle;
    property GlobalCDIR: WordBool read Get_GlobalCDIR write Set_GlobalCDIR;
    property StructureAgeCode: WideString read Get_StructureAgeCode write Set_StructureAgeCode;
    property StructureAge: Double read Get_StructureAge write Set_StructureAge;
    property StructureP: Double read Get_StructureP write Set_StructureP;
    property WindCDIR: Double read Get_WindCDIR write Set_WindCDIR;
    property WindCALT: Double read Get_WindCALT write Set_WindCALT;
    property WindCTEM: Double read Get_WindCTEM write Set_WindCTEM;
    property WindPressureAutomatic: WordBool read Get_WindPressureAutomatic write Set_WindPressureAutomatic;
    property WindQref: Double read Get_WindQref write Set_WindQref;
    property WindVref0: Double read Get_WindVref0 write Set_WindVref0;
    property WindQref0: Double read Get_WindQref0 write Set_WindQref0;
    property WindQref0p: Double read Get_WindQref0p write Set_WindQref0p;
    property WindCtAuto: WordBool read Get_WindCtAuto write Set_WindCtAuto;
    property WindSiteType: IRobotSWCodeECSiteType read Get_WindSiteType write Set_WindSiteType;
    property WindCt: Double read Get_WindCt write Set_WindCt;
    property GroundType: IRobotSWCodeECGroundType read Get_GroundType write Set_GroundType;
    property WindKT: Double read Get_WindKT write Set_WindKT;
    property WindZ0: Double read Get_WindZ0 write Set_WindZ0;
    property WindZMin: Double read Get_WindZMin write Set_WindZMin;
    property WindE: Double read Get_WindE write Set_WindE;
    property WindAutoCd: WordBool read Get_WindAutoCd write Set_WindAutoCd;
    property WindCdType: IRobotSWCodeECCdType read Get_WindCdType write Set_WindCdType;
    property WindCd: Double read Get_WindCd write Set_WindCd;
    property SnowPressureNormal: Double read Get_SnowPressureNormal write Set_SnowPressureNormal;
    property SnowPressureExtreme: Double read Get_SnowPressureExtreme write Set_SnowPressureExtreme;
    property SnowRedistribution: WordBool read Get_SnowRedistribution write Set_SnowRedistribution;
    property SnowGutterBars: WideString read Get_SnowGutterBars write Set_SnowGutterBars;
    property PermLeftSide: Double read Get_PermLeftSide write Set_PermLeftSide;
    property PermRightSide: Double read Get_PermRightSide write Set_PermRightSide;
    property PermFront: Double read Get_PermFront write Set_PermFront;
    property PermRear: Double read Get_PermRear write Set_PermRear;
    property PermDoorLeftSidePresent: WordBool read Get_PermDoorLeftSidePresent write Set_PermDoorLeftSidePresent;
    property PermDoorLeftSide: Double read Get_PermDoorLeftSide write Set_PermDoorLeftSide;
    property PermDoorRightSidePresent: WordBool read Get_PermDoorRightSidePresent write Set_PermDoorRightSidePresent;
    property PermDoorRightSide: Double read Get_PermDoorRightSide write Set_PermDoorRightSide;
    property PermDoorFrontPresent: WordBool read Get_PermDoorFrontPresent write Set_PermDoorFrontPresent;
    property PermDoorFront: Double read Get_PermDoorFront write Set_PermDoorFront;
    property PermDoorRearPresent: WordBool read Get_PermDoorRearPresent write Set_PermDoorRearPresent;
    property PermDoorRear: Double read Get_PermDoorRear write Set_PermDoorRear;
  end;

// *********************************************************************//
// DispIntf:  IRobotSWCodeECParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {73D09B84-24D7-427F-BA8F-E33B88FBF058}
// *********************************************************************//
  IRobotSWCodeECParamsDisp = dispinterface
    ['{73D09B84-24D7-427F-BA8F-E33B88FBF058}']
    property StructureHeight: Double dispid 1610743808;
    property ReferenceLevel: Double dispid 1610743810;
    property Altitude: Double dispid 1610743812;
    property NodalLoadsForAllBars: WordBool dispid 1610743814;
    property NodalLoadsForBarsList: WideString dispid 1610743816;
    property LeftWind2NordAngle: Double dispid 1610743818;
    property GlobalCDIR: WordBool dispid 1610743820;
    property StructureAgeCode: WideString dispid 1610743822;
    property StructureAge: Double dispid 1610743824;
    property StructureP: Double dispid 1610743826;
    property WindCDIR: Double dispid 1610743828;
    property WindCALT: Double dispid 1610743830;
    property WindCTEM: Double dispid 1610743832;
    property WindPressureAutomatic: WordBool dispid 1610743834;
    property WindQref: Double dispid 1610743836;
    property WindVref0: Double dispid 1610743838;
    property WindQref0: Double dispid 1610743840;
    property WindQref0p: Double dispid 1610743842;
    property WindCtAuto: WordBool dispid 1610743844;
    property WindSiteType: IRobotSWCodeECSiteType dispid 1610743846;
    property WindCt: Double dispid 1610743848;
    property GroundType: IRobotSWCodeECGroundType dispid 1610743850;
    property WindKT: Double dispid 1610743852;
    property WindZ0: Double dispid 1610743854;
    property WindZMin: Double dispid 1610743856;
    property WindE: Double dispid 1610743858;
    property WindAutoCd: WordBool dispid 1610743860;
    property WindCdType: IRobotSWCodeECCdType dispid 1610743862;
    property WindCd: Double dispid 1610743864;
    property SnowPressureNormal: Double dispid 1610743866;
    property SnowPressureExtreme: Double dispid 1610743868;
    property SnowRedistribution: WordBool dispid 1610743870;
    property SnowGutterBars: WideString dispid 1610743872;
    property PermLeftSide: Double dispid 1610743874;
    property PermRightSide: Double dispid 1610743876;
    property PermFront: Double dispid 1610743878;
    property PermRear: Double dispid 1610743880;
    property PermDoorLeftSidePresent: WordBool dispid 1610743882;
    property PermDoorLeftSide: Double dispid 1610743884;
    property PermDoorRightSidePresent: WordBool dispid 1610743886;
    property PermDoorRightSide: Double dispid 1610743888;
    property PermDoorFrontPresent: WordBool dispid 1610743890;
    property PermDoorFront: Double dispid 1610743892;
    property PermDoorRearPresent: WordBool dispid 1610743894;
    property PermDoorRear: Double dispid 1610743896;
    function WindBarCoeffGet(_bar_num: Integer): Double; dispid 1610743898;
    procedure WindBarCoeffSet(_bar_num: Integer; _coeff: Double); dispid 1610743899;
    function SnowBarCoeffGet(_bar_num: Integer): Double; dispid 1610743900;
    procedure SnowBarCoeffSet(_bar_num: Integer; _coeff: Double); dispid 1610743901;
  end;

// *********************************************************************//
// Interface: IRobotViewDetailedAnalysis
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E6706892-77FF-11D4-B84E-0050DA76755E}
// *********************************************************************//
  IRobotViewDetailedAnalysis = interface(IRobotView)
    ['{E6706892-77FF-11D4-B84E-0050DA76755E}']
    function Get_CurrentTableTab: IRobotViewDetailedAnalysisTableTab; safecall;
    procedure Set_CurrentTableTab(ret: IRobotViewDetailedAnalysisTableTab); safecall;
    function Get_ParamsDetailed: IRobotViewDetailedAnalysisParams; safecall;
    function Get_Window: IRobotWindow; safecall;
    function Get_UserControl: WordBool; safecall;
    procedure Set_UserControl(ret: WordBool); safecall;
    procedure MakeScreenCapture(const _sc_params: IRobotViewScreenCaptureParams); safecall;
    property CurrentTableTab: IRobotViewDetailedAnalysisTableTab read Get_CurrentTableTab write Set_CurrentTableTab;
    property ParamsDetailed: IRobotViewDetailedAnalysisParams read Get_ParamsDetailed;
    property Window: IRobotWindow read Get_Window;
    property UserControl: WordBool read Get_UserControl write Set_UserControl;
  end;

// *********************************************************************//
// DispIntf:  IRobotViewDetailedAnalysisDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E6706892-77FF-11D4-B84E-0050DA76755E}
// *********************************************************************//
  IRobotViewDetailedAnalysisDisp = dispinterface
    ['{E6706892-77FF-11D4-B84E-0050DA76755E}']
    property CurrentTableTab: IRobotViewDetailedAnalysisTableTab dispid 1610809344;
    property ParamsDetailed: IRobotViewDetailedAnalysisParams readonly dispid 1610809346;
    property Window: IRobotWindow readonly dispid 1610809347;
    property UserControl: WordBool dispid 1610809348;
    procedure MakeScreenCapture(const _sc_params: IRobotViewScreenCaptureParams); dispid 1610809350;
    property type_: IRobotViewType readonly dispid 1610743808;
    property Visible: Integer dispid 1610743809;
    property Title: WideString dispid 1610743811;
    property Printable: IRobotPrintable readonly dispid 1610743813;
    property Selection: IRobotMultiSelection readonly dispid 1610743814;
    property Projection: IRobotViewProjection dispid 1610743815;
    procedure Redraw(force_init_zoom: Integer); dispid 1610743817;
    procedure GetSize(out width_in_mm: Double; out height_in_mm: Double); dispid 1610743818;
    procedure SetSize(width_in_mm: Double; height_in_mm: Double); dispid 1610743819;
    procedure GetZoom(out left: Double; out top: Double; out right: Double; out bottom: Double); dispid 1610743820;
    procedure SetZoom(left: Double; top: Double; right: Double; bottom: Double); dispid 1610743821;
    property SymbolMagnification: SYSINT dispid 1610743822;
    property DiagramMagnification: SYSINT dispid 1610743824;
    property GridVisible: Integer dispid 1610743826;
    property RulerVisible: Integer dispid 1610743828;
    property StructAxisVisible: Integer dispid 1610743830;
    function GetVisibilityStatus(status_id: IRobotViewVisibilityStatusType): IRobotViewVisibilityStatusValue; dispid 1610743832;
    procedure SetVisibilityStatus(status_id: IRobotViewVisibilityStatusType; 
                                  status_value: IRobotViewVisibilityStatusValue); dispid 1610743833;
    function GetScale(scale_id: SYSINT): Double; dispid 1610743834;
    procedure SetScale(scale_id: SYSINT; val: Double); dispid 1610743835;
    function IsLocal: Integer; dispid 1610743836;
    procedure SetGlobal; dispid 1610743837;
    function SetLocal(const _p1: IRobotGeoPoint3D; const _p2: IRobotGeoPoint3D; 
                      const _p3: IRobotGeoPoint3D): Integer; dispid 1610743838;
    function GetRotationPoint: IRobotGeoPoint3D; dispid 1610743839;
    procedure SetRotationPoint(const rot_point: IRobotGeoPoint3D); dispid 1610743840;
    function GetWorkPoint: IRobotGeoPoint3D; dispid 1610743841;
    procedure SetWorkPoint(const Point: IRobotGeoPoint3D); dispid 1610743842;
    procedure CopyToClipboard; dispid 1610743843;
    procedure Rotate(axis: IRobotGeoCoordinateAxis; _angle: Double); dispid 1610743844;
    property ParamsDisplay: IRobotViewDisplayParams readonly dispid 1610743845;
    property ParamsDiagram: IRobotViewDiagramParams readonly dispid 1610743846;
    property ParamsBarMap: IRobotViewBarMapParams readonly dispid 1610743847;
    property ParamsFeMap: IRobotViewFeMapParams readonly dispid 1610743848;
  end;

// *********************************************************************//
// Interface: IRobotViewDetailedAnalysisParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {87937552-7A8A-11D4-B851-0050DA76755E}
// *********************************************************************//
  IRobotViewDetailedAnalysisParams = interface(IDispatch)
    ['{87937552-7A8A-11D4-B851-0050DA76755E}']
    function Get_Descriptions: IRobotViewDiagramDescriptionType; safecall;
    procedure Set_Descriptions(ret: IRobotViewDiagramDescriptionType); safecall;
    function Get_PositiveNegative: IRobotViewDiagramSignDifferType; safecall;
    procedure Set_PositiveNegative(ret: IRobotViewDiagramSignDifferType); safecall;
    function Get_Filling: IRobotViewDiagramFillingType; safecall;
    procedure Set_Filling(ret: IRobotViewDiagramFillingType); safecall;
    function Get_ReinforceShowTheoreticAndRealVals: WordBool; safecall;
    procedure Set_ReinforceShowTheoreticAndRealVals(ret: WordBool); safecall;
    procedure Set_(res_type: IRobotViewDetailedAnalysisResultType; on_off: WordBool); safecall;
    function IsOn(res_type: IRobotViewDetailedAnalysisResultType): WordBool; safecall;
    procedure SetColor(res_type: IRobotViewDetailedAnalysisResultType; _color: Integer); safecall;
    function GetColor(res_type: IRobotViewDetailedAnalysisResultType): Integer; safecall;
    property Descriptions: IRobotViewDiagramDescriptionType read Get_Descriptions write Set_Descriptions;
    property PositiveNegative: IRobotViewDiagramSignDifferType read Get_PositiveNegative write Set_PositiveNegative;
    property Filling: IRobotViewDiagramFillingType read Get_Filling write Set_Filling;
    property ReinforceShowTheoreticAndRealVals: WordBool read Get_ReinforceShowTheoreticAndRealVals write Set_ReinforceShowTheoreticAndRealVals;
  end;

// *********************************************************************//
// DispIntf:  IRobotViewDetailedAnalysisParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {87937552-7A8A-11D4-B851-0050DA76755E}
// *********************************************************************//
  IRobotViewDetailedAnalysisParamsDisp = dispinterface
    ['{87937552-7A8A-11D4-B851-0050DA76755E}']
    property Descriptions: IRobotViewDiagramDescriptionType dispid 1610743808;
    property PositiveNegative: IRobotViewDiagramSignDifferType dispid 1610743810;
    property Filling: IRobotViewDiagramFillingType dispid 1610743812;
    property ReinforceShowTheoreticAndRealVals: WordBool dispid 1610743814;
    procedure Set_(res_type: IRobotViewDetailedAnalysisResultType; on_off: WordBool); dispid 1610743816;
    function IsOn(res_type: IRobotViewDetailedAnalysisResultType): WordBool; dispid 1610743817;
    procedure SetColor(res_type: IRobotViewDetailedAnalysisResultType; _color: Integer); dispid 1610743818;
    function GetColor(res_type: IRobotViewDetailedAnalysisResultType): Integer; dispid 1610743819;
  end;

// *********************************************************************//
// Interface: IRobotViewScreenCaptureParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {862269ED-AF6B-4CDC-A65C-9EC74ADA3CCF}
// *********************************************************************//
  IRobotViewScreenCaptureParams = interface(IDispatch)
    ['{862269ED-AF6B-4CDC-A65C-9EC74ADA3CCF}']
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_UpdateType: IRobotViewScreenCaptureUpdateType; safecall;
    procedure Set_UpdateType(ret: IRobotViewScreenCaptureUpdateType); safecall;
    function Get_Orientation: IRobotPageSetupOrientation; safecall;
    procedure Set_Orientation(ret: IRobotPageSetupOrientation); safecall;
    function Get_ScaleAutomatic: WordBool; safecall;
    procedure Set_ScaleAutomatic(ret: WordBool); safecall;
    function Get_ScaleValue: Double; safecall;
    procedure Set_ScaleValue(ret: Double); safecall;
    function Get_Comment: WideString; safecall;
    procedure Set_Comment(const ret: WideString); safecall;
    function Get_IncludeDateAndTime: WordBool; safecall;
    procedure Set_IncludeDateAndTime(ret: WordBool); safecall;
    function Get_Resolution: IRobotViewScreenCaptureResolution; safecall;
    procedure Set_Resolution(ret: IRobotViewScreenCaptureResolution); safecall;
    property Name: WideString read Get_Name write Set_Name;
    property UpdateType: IRobotViewScreenCaptureUpdateType read Get_UpdateType write Set_UpdateType;
    property Orientation: IRobotPageSetupOrientation read Get_Orientation write Set_Orientation;
    property ScaleAutomatic: WordBool read Get_ScaleAutomatic write Set_ScaleAutomatic;
    property ScaleValue: Double read Get_ScaleValue write Set_ScaleValue;
    property Comment: WideString read Get_Comment write Set_Comment;
    property IncludeDateAndTime: WordBool read Get_IncludeDateAndTime write Set_IncludeDateAndTime;
    property Resolution: IRobotViewScreenCaptureResolution read Get_Resolution write Set_Resolution;
  end;

// *********************************************************************//
// DispIntf:  IRobotViewScreenCaptureParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {862269ED-AF6B-4CDC-A65C-9EC74ADA3CCF}
// *********************************************************************//
  IRobotViewScreenCaptureParamsDisp = dispinterface
    ['{862269ED-AF6B-4CDC-A65C-9EC74ADA3CCF}']
    property Name: WideString dispid 1610743808;
    property UpdateType: IRobotViewScreenCaptureUpdateType dispid 1610743810;
    property Orientation: IRobotPageSetupOrientation dispid 1610743812;
    property ScaleAutomatic: WordBool dispid 1610743814;
    property ScaleValue: Double dispid 1610743816;
    property Comment: WideString dispid 1610743818;
    property IncludeDateAndTime: WordBool dispid 1610743820;
    property Resolution: IRobotViewScreenCaptureResolution dispid 1610743822;
  end;

// *********************************************************************//
// Interface: IRobotView3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {453860ED-7BB2-4A24-ACEA-92680D61C5C7}
// *********************************************************************//
  IRobotView3 = interface(IRobotView2)
    ['{453860ED-7BB2-4A24-ACEA-92680D61C5C7}']
    procedure MakeScreenCapture(const _sc_params: IRobotViewScreenCaptureParams); safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotView3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {453860ED-7BB2-4A24-ACEA-92680D61C5C7}
// *********************************************************************//
  IRobotView3Disp = dispinterface
    ['{453860ED-7BB2-4A24-ACEA-92680D61C5C7}']
    procedure MakeScreenCapture(const _sc_params: IRobotViewScreenCaptureParams); dispid 1610874880;
    property Window: IRobotWindow readonly dispid 1610809344;
    property ParamsPanelCut: IRobotViewPanelCutParams readonly dispid 1610809345;
    property UserControl: WordBool dispid 1610809346;
    property type_: IRobotViewType readonly dispid 1610743808;
    property Visible: Integer dispid 1610743809;
    property Title: WideString dispid 1610743811;
    property Printable: IRobotPrintable readonly dispid 1610743813;
    property Selection: IRobotMultiSelection readonly dispid 1610743814;
    property Projection: IRobotViewProjection dispid 1610743815;
    procedure Redraw(force_init_zoom: Integer); dispid 1610743817;
    procedure GetSize(out width_in_mm: Double; out height_in_mm: Double); dispid 1610743818;
    procedure SetSize(width_in_mm: Double; height_in_mm: Double); dispid 1610743819;
    procedure GetZoom(out left: Double; out top: Double; out right: Double; out bottom: Double); dispid 1610743820;
    procedure SetZoom(left: Double; top: Double; right: Double; bottom: Double); dispid 1610743821;
    property SymbolMagnification: SYSINT dispid 1610743822;
    property DiagramMagnification: SYSINT dispid 1610743824;
    property GridVisible: Integer dispid 1610743826;
    property RulerVisible: Integer dispid 1610743828;
    property StructAxisVisible: Integer dispid 1610743830;
    function GetVisibilityStatus(status_id: IRobotViewVisibilityStatusType): IRobotViewVisibilityStatusValue; dispid 1610743832;
    procedure SetVisibilityStatus(status_id: IRobotViewVisibilityStatusType; 
                                  status_value: IRobotViewVisibilityStatusValue); dispid 1610743833;
    function GetScale(scale_id: SYSINT): Double; dispid 1610743834;
    procedure SetScale(scale_id: SYSINT; val: Double); dispid 1610743835;
    function IsLocal: Integer; dispid 1610743836;
    procedure SetGlobal; dispid 1610743837;
    function SetLocal(const _p1: IRobotGeoPoint3D; const _p2: IRobotGeoPoint3D; 
                      const _p3: IRobotGeoPoint3D): Integer; dispid 1610743838;
    function GetRotationPoint: IRobotGeoPoint3D; dispid 1610743839;
    procedure SetRotationPoint(const rot_point: IRobotGeoPoint3D); dispid 1610743840;
    function GetWorkPoint: IRobotGeoPoint3D; dispid 1610743841;
    procedure SetWorkPoint(const Point: IRobotGeoPoint3D); dispid 1610743842;
    procedure CopyToClipboard; dispid 1610743843;
    procedure Rotate(axis: IRobotGeoCoordinateAxis; _angle: Double); dispid 1610743844;
    property ParamsDisplay: IRobotViewDisplayParams readonly dispid 1610743845;
    property ParamsDiagram: IRobotViewDiagramParams readonly dispid 1610743846;
    property ParamsBarMap: IRobotViewBarMapParams readonly dispid 1610743847;
    property ParamsFeMap: IRobotViewFeMapParams readonly dispid 1610743848;
  end;

// *********************************************************************//
// Interface: IRobotViewDiagrams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A4A350A2-7A70-11D4-B851-0050DA76755E}
// *********************************************************************//
  IRobotViewDiagrams = interface(IRobotView3)
    ['{A4A350A2-7A70-11D4-B851-0050DA76755E}']
  end;

// *********************************************************************//
// DispIntf:  IRobotViewDiagramsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A4A350A2-7A70-11D4-B851-0050DA76755E}
// *********************************************************************//
  IRobotViewDiagramsDisp = dispinterface
    ['{A4A350A2-7A70-11D4-B851-0050DA76755E}']
    procedure MakeScreenCapture(const _sc_params: IRobotViewScreenCaptureParams); dispid 1610874880;
    property Window: IRobotWindow readonly dispid 1610809344;
    property ParamsPanelCut: IRobotViewPanelCutParams readonly dispid 1610809345;
    property UserControl: WordBool dispid 1610809346;
    property type_: IRobotViewType readonly dispid 1610743808;
    property Visible: Integer dispid 1610743809;
    property Title: WideString dispid 1610743811;
    property Printable: IRobotPrintable readonly dispid 1610743813;
    property Selection: IRobotMultiSelection readonly dispid 1610743814;
    property Projection: IRobotViewProjection dispid 1610743815;
    procedure Redraw(force_init_zoom: Integer); dispid 1610743817;
    procedure GetSize(out width_in_mm: Double; out height_in_mm: Double); dispid 1610743818;
    procedure SetSize(width_in_mm: Double; height_in_mm: Double); dispid 1610743819;
    procedure GetZoom(out left: Double; out top: Double; out right: Double; out bottom: Double); dispid 1610743820;
    procedure SetZoom(left: Double; top: Double; right: Double; bottom: Double); dispid 1610743821;
    property SymbolMagnification: SYSINT dispid 1610743822;
    property DiagramMagnification: SYSINT dispid 1610743824;
    property GridVisible: Integer dispid 1610743826;
    property RulerVisible: Integer dispid 1610743828;
    property StructAxisVisible: Integer dispid 1610743830;
    function GetVisibilityStatus(status_id: IRobotViewVisibilityStatusType): IRobotViewVisibilityStatusValue; dispid 1610743832;
    procedure SetVisibilityStatus(status_id: IRobotViewVisibilityStatusType; 
                                  status_value: IRobotViewVisibilityStatusValue); dispid 1610743833;
    function GetScale(scale_id: SYSINT): Double; dispid 1610743834;
    procedure SetScale(scale_id: SYSINT; val: Double); dispid 1610743835;
    function IsLocal: Integer; dispid 1610743836;
    procedure SetGlobal; dispid 1610743837;
    function SetLocal(const _p1: IRobotGeoPoint3D; const _p2: IRobotGeoPoint3D; 
                      const _p3: IRobotGeoPoint3D): Integer; dispid 1610743838;
    function GetRotationPoint: IRobotGeoPoint3D; dispid 1610743839;
    procedure SetRotationPoint(const rot_point: IRobotGeoPoint3D); dispid 1610743840;
    function GetWorkPoint: IRobotGeoPoint3D; dispid 1610743841;
    procedure SetWorkPoint(const Point: IRobotGeoPoint3D); dispid 1610743842;
    procedure CopyToClipboard; dispid 1610743843;
    procedure Rotate(axis: IRobotGeoCoordinateAxis; _angle: Double); dispid 1610743844;
    property ParamsDisplay: IRobotViewDisplayParams readonly dispid 1610743845;
    property ParamsDiagram: IRobotViewDiagramParams readonly dispid 1610743846;
    property ParamsBarMap: IRobotViewBarMapParams readonly dispid 1610743847;
    property ParamsFeMap: IRobotViewFeMapParams readonly dispid 1610743848;
  end;

// *********************************************************************//
// Interface: IRobotViewBarMaps
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A4A350A4-7A70-11D4-B851-0050DA76755E}
// *********************************************************************//
  IRobotViewBarMaps = interface(IRobotView3)
    ['{A4A350A4-7A70-11D4-B851-0050DA76755E}']
  end;

// *********************************************************************//
// DispIntf:  IRobotViewBarMapsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A4A350A4-7A70-11D4-B851-0050DA76755E}
// *********************************************************************//
  IRobotViewBarMapsDisp = dispinterface
    ['{A4A350A4-7A70-11D4-B851-0050DA76755E}']
    procedure MakeScreenCapture(const _sc_params: IRobotViewScreenCaptureParams); dispid 1610874880;
    property Window: IRobotWindow readonly dispid 1610809344;
    property ParamsPanelCut: IRobotViewPanelCutParams readonly dispid 1610809345;
    property UserControl: WordBool dispid 1610809346;
    property type_: IRobotViewType readonly dispid 1610743808;
    property Visible: Integer dispid 1610743809;
    property Title: WideString dispid 1610743811;
    property Printable: IRobotPrintable readonly dispid 1610743813;
    property Selection: IRobotMultiSelection readonly dispid 1610743814;
    property Projection: IRobotViewProjection dispid 1610743815;
    procedure Redraw(force_init_zoom: Integer); dispid 1610743817;
    procedure GetSize(out width_in_mm: Double; out height_in_mm: Double); dispid 1610743818;
    procedure SetSize(width_in_mm: Double; height_in_mm: Double); dispid 1610743819;
    procedure GetZoom(out left: Double; out top: Double; out right: Double; out bottom: Double); dispid 1610743820;
    procedure SetZoom(left: Double; top: Double; right: Double; bottom: Double); dispid 1610743821;
    property SymbolMagnification: SYSINT dispid 1610743822;
    property DiagramMagnification: SYSINT dispid 1610743824;
    property GridVisible: Integer dispid 1610743826;
    property RulerVisible: Integer dispid 1610743828;
    property StructAxisVisible: Integer dispid 1610743830;
    function GetVisibilityStatus(status_id: IRobotViewVisibilityStatusType): IRobotViewVisibilityStatusValue; dispid 1610743832;
    procedure SetVisibilityStatus(status_id: IRobotViewVisibilityStatusType; 
                                  status_value: IRobotViewVisibilityStatusValue); dispid 1610743833;
    function GetScale(scale_id: SYSINT): Double; dispid 1610743834;
    procedure SetScale(scale_id: SYSINT; val: Double); dispid 1610743835;
    function IsLocal: Integer; dispid 1610743836;
    procedure SetGlobal; dispid 1610743837;
    function SetLocal(const _p1: IRobotGeoPoint3D; const _p2: IRobotGeoPoint3D; 
                      const _p3: IRobotGeoPoint3D): Integer; dispid 1610743838;
    function GetRotationPoint: IRobotGeoPoint3D; dispid 1610743839;
    procedure SetRotationPoint(const rot_point: IRobotGeoPoint3D); dispid 1610743840;
    function GetWorkPoint: IRobotGeoPoint3D; dispid 1610743841;
    procedure SetWorkPoint(const Point: IRobotGeoPoint3D); dispid 1610743842;
    procedure CopyToClipboard; dispid 1610743843;
    procedure Rotate(axis: IRobotGeoCoordinateAxis; _angle: Double); dispid 1610743844;
    property ParamsDisplay: IRobotViewDisplayParams readonly dispid 1610743845;
    property ParamsDiagram: IRobotViewDiagramParams readonly dispid 1610743846;
    property ParamsBarMap: IRobotViewBarMapParams readonly dispid 1610743847;
    property ParamsFeMap: IRobotViewFeMapParams readonly dispid 1610743848;
  end;

// *********************************************************************//
// Interface: IRobotViewFeMaps
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A4A350A6-7A70-11D4-B851-0050DA76755E}
// *********************************************************************//
  IRobotViewFeMaps = interface(IRobotView3)
    ['{A4A350A6-7A70-11D4-B851-0050DA76755E}']
  end;

// *********************************************************************//
// DispIntf:  IRobotViewFeMapsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A4A350A6-7A70-11D4-B851-0050DA76755E}
// *********************************************************************//
  IRobotViewFeMapsDisp = dispinterface
    ['{A4A350A6-7A70-11D4-B851-0050DA76755E}']
    procedure MakeScreenCapture(const _sc_params: IRobotViewScreenCaptureParams); dispid 1610874880;
    property Window: IRobotWindow readonly dispid 1610809344;
    property ParamsPanelCut: IRobotViewPanelCutParams readonly dispid 1610809345;
    property UserControl: WordBool dispid 1610809346;
    property type_: IRobotViewType readonly dispid 1610743808;
    property Visible: Integer dispid 1610743809;
    property Title: WideString dispid 1610743811;
    property Printable: IRobotPrintable readonly dispid 1610743813;
    property Selection: IRobotMultiSelection readonly dispid 1610743814;
    property Projection: IRobotViewProjection dispid 1610743815;
    procedure Redraw(force_init_zoom: Integer); dispid 1610743817;
    procedure GetSize(out width_in_mm: Double; out height_in_mm: Double); dispid 1610743818;
    procedure SetSize(width_in_mm: Double; height_in_mm: Double); dispid 1610743819;
    procedure GetZoom(out left: Double; out top: Double; out right: Double; out bottom: Double); dispid 1610743820;
    procedure SetZoom(left: Double; top: Double; right: Double; bottom: Double); dispid 1610743821;
    property SymbolMagnification: SYSINT dispid 1610743822;
    property DiagramMagnification: SYSINT dispid 1610743824;
    property GridVisible: Integer dispid 1610743826;
    property RulerVisible: Integer dispid 1610743828;
    property StructAxisVisible: Integer dispid 1610743830;
    function GetVisibilityStatus(status_id: IRobotViewVisibilityStatusType): IRobotViewVisibilityStatusValue; dispid 1610743832;
    procedure SetVisibilityStatus(status_id: IRobotViewVisibilityStatusType; 
                                  status_value: IRobotViewVisibilityStatusValue); dispid 1610743833;
    function GetScale(scale_id: SYSINT): Double; dispid 1610743834;
    procedure SetScale(scale_id: SYSINT; val: Double); dispid 1610743835;
    function IsLocal: Integer; dispid 1610743836;
    procedure SetGlobal; dispid 1610743837;
    function SetLocal(const _p1: IRobotGeoPoint3D; const _p2: IRobotGeoPoint3D; 
                      const _p3: IRobotGeoPoint3D): Integer; dispid 1610743838;
    function GetRotationPoint: IRobotGeoPoint3D; dispid 1610743839;
    procedure SetRotationPoint(const rot_point: IRobotGeoPoint3D); dispid 1610743840;
    function GetWorkPoint: IRobotGeoPoint3D; dispid 1610743841;
    procedure SetWorkPoint(const Point: IRobotGeoPoint3D); dispid 1610743842;
    procedure CopyToClipboard; dispid 1610743843;
    procedure Rotate(axis: IRobotGeoCoordinateAxis; _angle: Double); dispid 1610743844;
    property ParamsDisplay: IRobotViewDisplayParams readonly dispid 1610743845;
    property ParamsDiagram: IRobotViewDiagramParams readonly dispid 1610743846;
    property ParamsBarMap: IRobotViewBarMapParams readonly dispid 1610743847;
    property ParamsFeMap: IRobotViewFeMapParams readonly dispid 1610743848;
  end;

// *********************************************************************//
// Interface: IRobotViewPanelCuts
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {066DB4EF-433B-440E-80BA-88A6951033EB}
// *********************************************************************//
  IRobotViewPanelCuts = interface(IRobotView3)
    ['{066DB4EF-433B-440E-80BA-88A6951033EB}']
  end;

// *********************************************************************//
// DispIntf:  IRobotViewPanelCutsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {066DB4EF-433B-440E-80BA-88A6951033EB}
// *********************************************************************//
  IRobotViewPanelCutsDisp = dispinterface
    ['{066DB4EF-433B-440E-80BA-88A6951033EB}']
    procedure MakeScreenCapture(const _sc_params: IRobotViewScreenCaptureParams); dispid 1610874880;
    property Window: IRobotWindow readonly dispid 1610809344;
    property ParamsPanelCut: IRobotViewPanelCutParams readonly dispid 1610809345;
    property UserControl: WordBool dispid 1610809346;
    property type_: IRobotViewType readonly dispid 1610743808;
    property Visible: Integer dispid 1610743809;
    property Title: WideString dispid 1610743811;
    property Printable: IRobotPrintable readonly dispid 1610743813;
    property Selection: IRobotMultiSelection readonly dispid 1610743814;
    property Projection: IRobotViewProjection dispid 1610743815;
    procedure Redraw(force_init_zoom: Integer); dispid 1610743817;
    procedure GetSize(out width_in_mm: Double; out height_in_mm: Double); dispid 1610743818;
    procedure SetSize(width_in_mm: Double; height_in_mm: Double); dispid 1610743819;
    procedure GetZoom(out left: Double; out top: Double; out right: Double; out bottom: Double); dispid 1610743820;
    procedure SetZoom(left: Double; top: Double; right: Double; bottom: Double); dispid 1610743821;
    property SymbolMagnification: SYSINT dispid 1610743822;
    property DiagramMagnification: SYSINT dispid 1610743824;
    property GridVisible: Integer dispid 1610743826;
    property RulerVisible: Integer dispid 1610743828;
    property StructAxisVisible: Integer dispid 1610743830;
    function GetVisibilityStatus(status_id: IRobotViewVisibilityStatusType): IRobotViewVisibilityStatusValue; dispid 1610743832;
    procedure SetVisibilityStatus(status_id: IRobotViewVisibilityStatusType; 
                                  status_value: IRobotViewVisibilityStatusValue); dispid 1610743833;
    function GetScale(scale_id: SYSINT): Double; dispid 1610743834;
    procedure SetScale(scale_id: SYSINT; val: Double); dispid 1610743835;
    function IsLocal: Integer; dispid 1610743836;
    procedure SetGlobal; dispid 1610743837;
    function SetLocal(const _p1: IRobotGeoPoint3D; const _p2: IRobotGeoPoint3D; 
                      const _p3: IRobotGeoPoint3D): Integer; dispid 1610743838;
    function GetRotationPoint: IRobotGeoPoint3D; dispid 1610743839;
    procedure SetRotationPoint(const rot_point: IRobotGeoPoint3D); dispid 1610743840;
    function GetWorkPoint: IRobotGeoPoint3D; dispid 1610743841;
    procedure SetWorkPoint(const Point: IRobotGeoPoint3D); dispid 1610743842;
    procedure CopyToClipboard; dispid 1610743843;
    procedure Rotate(axis: IRobotGeoCoordinateAxis; _angle: Double); dispid 1610743844;
    property ParamsDisplay: IRobotViewDisplayParams readonly dispid 1610743845;
    property ParamsDiagram: IRobotViewDiagramParams readonly dispid 1610743846;
    property ParamsBarMap: IRobotViewBarMapParams readonly dispid 1610743847;
    property ParamsFeMap: IRobotViewFeMapParams readonly dispid 1610743848;
  end;

// *********************************************************************//
// Interface: IRobotViewGlobalAnalysisParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D85113E-1370-43A7-9A7E-DF5BC8FDEFA5}
// *********************************************************************//
  IRobotViewGlobalAnalysisParams = interface(IDispatch)
    ['{2D85113E-1370-43A7-9A7E-DF5BC8FDEFA5}']
    function Get_Results: IRobotViewGlobalAnalysisResultsParams; safecall;
    function IsOn(_type: IRobotViewGlobalAnalysisParamsType): WordBool; safecall;
    procedure Set_(_type: IRobotViewGlobalAnalysisParamsType; _status: WordBool); safecall;
    property Results: IRobotViewGlobalAnalysisResultsParams read Get_Results;
  end;

// *********************************************************************//
// DispIntf:  IRobotViewGlobalAnalysisParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D85113E-1370-43A7-9A7E-DF5BC8FDEFA5}
// *********************************************************************//
  IRobotViewGlobalAnalysisParamsDisp = dispinterface
    ['{2D85113E-1370-43A7-9A7E-DF5BC8FDEFA5}']
    property Results: IRobotViewGlobalAnalysisResultsParams readonly dispid 1610743808;
    function IsOn(_type: IRobotViewGlobalAnalysisParamsType): WordBool; dispid 1610743809;
    procedure Set_(_type: IRobotViewGlobalAnalysisParamsType; _status: WordBool); dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotViewGlobalAnalysisResultsParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E18F5EC2-689E-48E4-BF85-0428497670A4}
// *********************************************************************//
  IRobotViewGlobalAnalysisResultsParams = interface(IDispatch)
    ['{E18F5EC2-689E-48E4-BF85-0428497670A4}']
    function Get_type_: IRobotViewGlobalAnalysisResultsType; safecall;
    procedure Set_type_(ret: IRobotViewGlobalAnalysisResultsType); safecall;
    function Get_NPointsValue: Integer; safecall;
    procedure Set_NPointsValue(ret: Integer); safecall;
    function Get_RelativeValue: Double; safecall;
    procedure Set_RelativeValue(ret: Double); safecall;
    property type_: IRobotViewGlobalAnalysisResultsType read Get_type_ write Set_type_;
    property NPointsValue: Integer read Get_NPointsValue write Set_NPointsValue;
    property RelativeValue: Double read Get_RelativeValue write Set_RelativeValue;
  end;

// *********************************************************************//
// DispIntf:  IRobotViewGlobalAnalysisResultsParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E18F5EC2-689E-48E4-BF85-0428497670A4}
// *********************************************************************//
  IRobotViewGlobalAnalysisResultsParamsDisp = dispinterface
    ['{E18F5EC2-689E-48E4-BF85-0428497670A4}']
    property type_: IRobotViewGlobalAnalysisResultsType dispid 1610743808;
    property NPointsValue: Integer dispid 1610743810;
    property RelativeValue: Double dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRobotViewGlobalAnalysis
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5A3F2D4E-4405-4A40-98CB-E21CBA9D1873}
// *********************************************************************//
  IRobotViewGlobalAnalysis = interface(IRobotView2)
    ['{5A3F2D4E-4405-4A40-98CB-E21CBA9D1873}']
    function Get_ParamsGlobalAnalysis: IRobotViewGlobalAnalysisParams; safecall;
    procedure MakeScreenCapture(const _sc_params: IRobotViewScreenCaptureParams); safecall;
    property ParamsGlobalAnalysis: IRobotViewGlobalAnalysisParams read Get_ParamsGlobalAnalysis;
  end;

// *********************************************************************//
// DispIntf:  IRobotViewGlobalAnalysisDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5A3F2D4E-4405-4A40-98CB-E21CBA9D1873}
// *********************************************************************//
  IRobotViewGlobalAnalysisDisp = dispinterface
    ['{5A3F2D4E-4405-4A40-98CB-E21CBA9D1873}']
    property ParamsGlobalAnalysis: IRobotViewGlobalAnalysisParams readonly dispid 1610874880;
    procedure MakeScreenCapture(const _sc_params: IRobotViewScreenCaptureParams); dispid 1610874881;
    property Window: IRobotWindow readonly dispid 1610809344;
    property ParamsPanelCut: IRobotViewPanelCutParams readonly dispid 1610809345;
    property UserControl: WordBool dispid 1610809346;
    property type_: IRobotViewType readonly dispid 1610743808;
    property Visible: Integer dispid 1610743809;
    property Title: WideString dispid 1610743811;
    property Printable: IRobotPrintable readonly dispid 1610743813;
    property Selection: IRobotMultiSelection readonly dispid 1610743814;
    property Projection: IRobotViewProjection dispid 1610743815;
    procedure Redraw(force_init_zoom: Integer); dispid 1610743817;
    procedure GetSize(out width_in_mm: Double; out height_in_mm: Double); dispid 1610743818;
    procedure SetSize(width_in_mm: Double; height_in_mm: Double); dispid 1610743819;
    procedure GetZoom(out left: Double; out top: Double; out right: Double; out bottom: Double); dispid 1610743820;
    procedure SetZoom(left: Double; top: Double; right: Double; bottom: Double); dispid 1610743821;
    property SymbolMagnification: SYSINT dispid 1610743822;
    property DiagramMagnification: SYSINT dispid 1610743824;
    property GridVisible: Integer dispid 1610743826;
    property RulerVisible: Integer dispid 1610743828;
    property StructAxisVisible: Integer dispid 1610743830;
    function GetVisibilityStatus(status_id: IRobotViewVisibilityStatusType): IRobotViewVisibilityStatusValue; dispid 1610743832;
    procedure SetVisibilityStatus(status_id: IRobotViewVisibilityStatusType; 
                                  status_value: IRobotViewVisibilityStatusValue); dispid 1610743833;
    function GetScale(scale_id: SYSINT): Double; dispid 1610743834;
    procedure SetScale(scale_id: SYSINT; val: Double); dispid 1610743835;
    function IsLocal: Integer; dispid 1610743836;
    procedure SetGlobal; dispid 1610743837;
    function SetLocal(const _p1: IRobotGeoPoint3D; const _p2: IRobotGeoPoint3D; 
                      const _p3: IRobotGeoPoint3D): Integer; dispid 1610743838;
    function GetRotationPoint: IRobotGeoPoint3D; dispid 1610743839;
    procedure SetRotationPoint(const rot_point: IRobotGeoPoint3D); dispid 1610743840;
    function GetWorkPoint: IRobotGeoPoint3D; dispid 1610743841;
    procedure SetWorkPoint(const Point: IRobotGeoPoint3D); dispid 1610743842;
    procedure CopyToClipboard; dispid 1610743843;
    procedure Rotate(axis: IRobotGeoCoordinateAxis; _angle: Double); dispid 1610743844;
    property ParamsDisplay: IRobotViewDisplayParams readonly dispid 1610743845;
    property ParamsDiagram: IRobotViewDiagramParams readonly dispid 1610743846;
    property ParamsBarMap: IRobotViewBarMapParams readonly dispid 1610743847;
    property ParamsFeMap: IRobotViewFeMapParams readonly dispid 1610743848;
  end;

// *********************************************************************//
// Interface: IRobotViewInfluenceLines
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {72CC7FFA-76A2-428E-BDED-7FD214055080}
// *********************************************************************//
  IRobotViewInfluenceLines = interface(IRobotView2)
    ['{72CC7FFA-76A2-428E-BDED-7FD214055080}']
    function Get_ParamsInfluenceLines: IRobotViewInfluenceLinesParams; safecall;
    procedure MakeScreenCapture(const _sc_params: IRobotViewScreenCaptureParams); safecall;
    property ParamsInfluenceLines: IRobotViewInfluenceLinesParams read Get_ParamsInfluenceLines;
  end;

// *********************************************************************//
// DispIntf:  IRobotViewInfluenceLinesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {72CC7FFA-76A2-428E-BDED-7FD214055080}
// *********************************************************************//
  IRobotViewInfluenceLinesDisp = dispinterface
    ['{72CC7FFA-76A2-428E-BDED-7FD214055080}']
    property ParamsInfluenceLines: IRobotViewInfluenceLinesParams readonly dispid 1610874880;
    procedure MakeScreenCapture(const _sc_params: IRobotViewScreenCaptureParams); dispid 1610874881;
    property Window: IRobotWindow readonly dispid 1610809344;
    property ParamsPanelCut: IRobotViewPanelCutParams readonly dispid 1610809345;
    property UserControl: WordBool dispid 1610809346;
    property type_: IRobotViewType readonly dispid 1610743808;
    property Visible: Integer dispid 1610743809;
    property Title: WideString dispid 1610743811;
    property Printable: IRobotPrintable readonly dispid 1610743813;
    property Selection: IRobotMultiSelection readonly dispid 1610743814;
    property Projection: IRobotViewProjection dispid 1610743815;
    procedure Redraw(force_init_zoom: Integer); dispid 1610743817;
    procedure GetSize(out width_in_mm: Double; out height_in_mm: Double); dispid 1610743818;
    procedure SetSize(width_in_mm: Double; height_in_mm: Double); dispid 1610743819;
    procedure GetZoom(out left: Double; out top: Double; out right: Double; out bottom: Double); dispid 1610743820;
    procedure SetZoom(left: Double; top: Double; right: Double; bottom: Double); dispid 1610743821;
    property SymbolMagnification: SYSINT dispid 1610743822;
    property DiagramMagnification: SYSINT dispid 1610743824;
    property GridVisible: Integer dispid 1610743826;
    property RulerVisible: Integer dispid 1610743828;
    property StructAxisVisible: Integer dispid 1610743830;
    function GetVisibilityStatus(status_id: IRobotViewVisibilityStatusType): IRobotViewVisibilityStatusValue; dispid 1610743832;
    procedure SetVisibilityStatus(status_id: IRobotViewVisibilityStatusType; 
                                  status_value: IRobotViewVisibilityStatusValue); dispid 1610743833;
    function GetScale(scale_id: SYSINT): Double; dispid 1610743834;
    procedure SetScale(scale_id: SYSINT; val: Double); dispid 1610743835;
    function IsLocal: Integer; dispid 1610743836;
    procedure SetGlobal; dispid 1610743837;
    function SetLocal(const _p1: IRobotGeoPoint3D; const _p2: IRobotGeoPoint3D; 
                      const _p3: IRobotGeoPoint3D): Integer; dispid 1610743838;
    function GetRotationPoint: IRobotGeoPoint3D; dispid 1610743839;
    procedure SetRotationPoint(const rot_point: IRobotGeoPoint3D); dispid 1610743840;
    function GetWorkPoint: IRobotGeoPoint3D; dispid 1610743841;
    procedure SetWorkPoint(const Point: IRobotGeoPoint3D); dispid 1610743842;
    procedure CopyToClipboard; dispid 1610743843;
    procedure Rotate(axis: IRobotGeoCoordinateAxis; _angle: Double); dispid 1610743844;
    property ParamsDisplay: IRobotViewDisplayParams readonly dispid 1610743845;
    property ParamsDiagram: IRobotViewDiagramParams readonly dispid 1610743846;
    property ParamsBarMap: IRobotViewBarMapParams readonly dispid 1610743847;
    property ParamsFeMap: IRobotViewFeMapParams readonly dispid 1610743848;
  end;

// *********************************************************************//
// Interface: IRobotViewInfluenceLinesParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {48AE6863-35D6-4F0E-ACB6-EF8AE2BB0A4D}
// *********************************************************************//
  IRobotViewInfluenceLinesParams = interface(IDispatch)
    ['{48AE6863-35D6-4F0E-ACB6-EF8AE2BB0A4D}']
    function Get_RangeFrom: Integer; safecall;
    procedure Set_RangeFrom(ret: Integer); safecall;
    function Get_RangeTo: Integer; safecall;
    procedure Set_RangeTo(ret: Integer); safecall;
    function Get_Element: Integer; safecall;
    procedure Set_Element(ret: Integer); safecall;
    function Get_Position: Double; safecall;
    procedure Set_Position(ret: Double); safecall;
    procedure Set_(_type: IRobotViewInfluenceLinesResultType; _val: WordBool); safecall;
    function IsOn(_type: IRobotViewInfluenceLinesResultType): WordBool; safecall;
    function Get_DirectionData: IRobotGeoPoint3D; safecall;
    procedure Set_DirectionData(const ret: IRobotGeoPoint3D); safecall;
    function Get_DirectionNode: Integer; safecall;
    procedure Set_DirectionNode(ret: Integer); safecall;
    function Get_LayerArbitraryVal: Double; safecall;
    procedure Set_LayerArbitraryVal(ret: Double); safecall;
    function Get_Layer: IRobotViewInfluenceLinesLayerType; safecall;
    procedure Set_Layer(ret: IRobotViewInfluenceLinesLayerType); safecall;
    function Get_Direction: IRobotViewInfluenceLinesLocalSystemType; safecall;
    procedure Set_Direction(ret: IRobotViewInfluenceLinesLocalSystemType); safecall;
    property RangeFrom: Integer read Get_RangeFrom write Set_RangeFrom;
    property RangeTo: Integer read Get_RangeTo write Set_RangeTo;
    property Element: Integer read Get_Element write Set_Element;
    property Position: Double read Get_Position write Set_Position;
    property DirectionData: IRobotGeoPoint3D read Get_DirectionData write Set_DirectionData;
    property DirectionNode: Integer read Get_DirectionNode write Set_DirectionNode;
    property LayerArbitraryVal: Double read Get_LayerArbitraryVal write Set_LayerArbitraryVal;
    property Layer: IRobotViewInfluenceLinesLayerType read Get_Layer write Set_Layer;
    property Direction: IRobotViewInfluenceLinesLocalSystemType read Get_Direction write Set_Direction;
  end;

// *********************************************************************//
// DispIntf:  IRobotViewInfluenceLinesParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {48AE6863-35D6-4F0E-ACB6-EF8AE2BB0A4D}
// *********************************************************************//
  IRobotViewInfluenceLinesParamsDisp = dispinterface
    ['{48AE6863-35D6-4F0E-ACB6-EF8AE2BB0A4D}']
    property RangeFrom: Integer dispid 1610743808;
    property RangeTo: Integer dispid 1610743810;
    property Element: Integer dispid 1610743812;
    property Position: Double dispid 1610743814;
    procedure Set_(_type: IRobotViewInfluenceLinesResultType; _val: WordBool); dispid 1610743816;
    function IsOn(_type: IRobotViewInfluenceLinesResultType): WordBool; dispid 1610743817;
    property DirectionData: IRobotGeoPoint3D dispid 1610743818;
    property DirectionNode: Integer dispid 1610743820;
    property LayerArbitraryVal: Double dispid 1610743822;
    property Layer: IRobotViewInfluenceLinesLayerType dispid 1610743824;
    property Direction: IRobotViewInfluenceLinesLocalSystemType dispid 1610743826;
  end;

// *********************************************************************//
// Interface: IRobotHtmlView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {613146FC-74B0-43AA-8B17-F1D978392AC5}
// *********************************************************************//
  IRobotHtmlView = interface(IDispatch)
    ['{613146FC-74B0-43AA-8B17-F1D978392AC5}']
    function Get_Printable: IRobotPrintable; safecall;
    function LoadFromFile(const _file_path: WideString): WordBool; safecall;
    function SaveToFile(const _file_path: WideString): WordBool; safecall;
    property Printable: IRobotPrintable read Get_Printable;
  end;

// *********************************************************************//
// DispIntf:  IRobotHtmlViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {613146FC-74B0-43AA-8B17-F1D978392AC5}
// *********************************************************************//
  IRobotHtmlViewDisp = dispinterface
    ['{613146FC-74B0-43AA-8B17-F1D978392AC5}']
    property Printable: IRobotPrintable readonly dispid 1610743808;
    function LoadFromFile(const _file_path: WideString): WordBool; dispid 1610743809;
    function SaveToFile(const _file_path: WideString): WordBool; dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRDimDetailedRes
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC806A03-1BE3-11D5-B065-00104B7DBED4}
// *********************************************************************//
  IRDimDetailedRes = interface(IDispatch)
    ['{EC806A03-1BE3-11D5-B065-00104B7DBED4}']
    function Get_MemberUsrNo: Integer; safecall;
    function Get_ProfileName: WideString; safecall;
    function Get_MaterialName: WideString; safecall;
    function Get_ResOfCalc: IRDimMembCalcRetValue; safecall;
    function Get_IsLimitStateUltimate: Integer; safecall;
    function Get_IsLimitStateService_uy: Integer; safecall;
    function Get_IsLimitStateService_uz: Integer; safecall;
    function Get_IsLimitStateService_vx: Integer; safecall;
    function Get_IsLimitStateService_vy: Integer; safecall;
    function Get_Lay: Double; safecall;
    function Get_Laz: Double; safecall;
    function Get_Ratio: Double; safecall;
    function Get_GovernCaseName: WideString; safecall;
    function Get_UY: Double; safecall;
    function Get_UZ: Double; safecall;
    function Get_vx: Double; safecall;
    function Get_vy: Double; safecall;
    function Get_RelLimit_uy: Double; safecall;
    function Get_RelLimit_uz: Double; safecall;
    function Get_RelLimit_vx: Double; safecall;
    function Get_RelLimit_vy: Double; safecall;
    function Get_GovernCaseName_uy: WideString; safecall;
    function Get_GovernCaseName_uz: WideString; safecall;
    function Get_GovernCaseName_vx: WideString; safecall;
    function Get_GovernCaseName_vy: WideString; safecall;
    procedure GetGovernCase_uy(out case_usr_no: Integer; out comp_index: Integer); safecall;
    procedure GetGovernCase_uz(out case_usr_no: Integer; out comp_index: Integer); safecall;
    procedure GetGovernCase_vx(out case_usr_no: Integer; out comp_index: Integer); safecall;
    procedure GetGovernCase_vy(out case_usr_no: Integer; out comp_index: Integer); safecall;
    function Get_MembDef: IRDimMembDef; safecall;
    function Get_MatDef: IRDimMatDef; safecall;
    function Get_ProfDef: IRDimProfDef; safecall;
    function Get_EffDef: IRDimEffDef; safecall;
    function Get_CodeResults: IDispatch; safecall;
    property MemberUsrNo: Integer read Get_MemberUsrNo;
    property ProfileName: WideString read Get_ProfileName;
    property MaterialName: WideString read Get_MaterialName;
    property ResOfCalc: IRDimMembCalcRetValue read Get_ResOfCalc;
    property IsLimitStateUltimate: Integer read Get_IsLimitStateUltimate;
    property IsLimitStateService_uy: Integer read Get_IsLimitStateService_uy;
    property IsLimitStateService_uz: Integer read Get_IsLimitStateService_uz;
    property IsLimitStateService_vx: Integer read Get_IsLimitStateService_vx;
    property IsLimitStateService_vy: Integer read Get_IsLimitStateService_vy;
    property Lay: Double read Get_Lay;
    property Laz: Double read Get_Laz;
    property Ratio: Double read Get_Ratio;
    property GovernCaseName: WideString read Get_GovernCaseName;
    property UY: Double read Get_UY;
    property UZ: Double read Get_UZ;
    property vx: Double read Get_vx;
    property vy: Double read Get_vy;
    property RelLimit_uy: Double read Get_RelLimit_uy;
    property RelLimit_uz: Double read Get_RelLimit_uz;
    property RelLimit_vx: Double read Get_RelLimit_vx;
    property RelLimit_vy: Double read Get_RelLimit_vy;
    property GovernCaseName_uy: WideString read Get_GovernCaseName_uy;
    property GovernCaseName_uz: WideString read Get_GovernCaseName_uz;
    property GovernCaseName_vx: WideString read Get_GovernCaseName_vx;
    property GovernCaseName_vy: WideString read Get_GovernCaseName_vy;
    property MembDef: IRDimMembDef read Get_MembDef;
    property MatDef: IRDimMatDef read Get_MatDef;
    property ProfDef: IRDimProfDef read Get_ProfDef;
    property EffDef: IRDimEffDef read Get_EffDef;
    property CodeResults: IDispatch read Get_CodeResults;
  end;

// *********************************************************************//
// DispIntf:  IRDimDetailedResDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC806A03-1BE3-11D5-B065-00104B7DBED4}
// *********************************************************************//
  IRDimDetailedResDisp = dispinterface
    ['{EC806A03-1BE3-11D5-B065-00104B7DBED4}']
    property MemberUsrNo: Integer readonly dispid 1610743808;
    property ProfileName: WideString readonly dispid 1610743809;
    property MaterialName: WideString readonly dispid 1610743810;
    property ResOfCalc: IRDimMembCalcRetValue readonly dispid 1610743811;
    property IsLimitStateUltimate: Integer readonly dispid 1610743812;
    property IsLimitStateService_uy: Integer readonly dispid 1610743813;
    property IsLimitStateService_uz: Integer readonly dispid 1610743814;
    property IsLimitStateService_vx: Integer readonly dispid 1610743815;
    property IsLimitStateService_vy: Integer readonly dispid 1610743816;
    property Lay: Double readonly dispid 1610743817;
    property Laz: Double readonly dispid 1610743818;
    property Ratio: Double readonly dispid 1610743819;
    property GovernCaseName: WideString readonly dispid 1610743820;
    property UY: Double readonly dispid 1610743821;
    property UZ: Double readonly dispid 1610743822;
    property vx: Double readonly dispid 1610743823;
    property vy: Double readonly dispid 1610743824;
    property RelLimit_uy: Double readonly dispid 1610743825;
    property RelLimit_uz: Double readonly dispid 1610743826;
    property RelLimit_vx: Double readonly dispid 1610743827;
    property RelLimit_vy: Double readonly dispid 1610743828;
    property GovernCaseName_uy: WideString readonly dispid 1610743829;
    property GovernCaseName_uz: WideString readonly dispid 1610743830;
    property GovernCaseName_vx: WideString readonly dispid 1610743831;
    property GovernCaseName_vy: WideString readonly dispid 1610743832;
    procedure GetGovernCase_uy(out case_usr_no: Integer; out comp_index: Integer); dispid 1610743833;
    procedure GetGovernCase_uz(out case_usr_no: Integer; out comp_index: Integer); dispid 1610743834;
    procedure GetGovernCase_vx(out case_usr_no: Integer; out comp_index: Integer); dispid 1610743835;
    procedure GetGovernCase_vy(out case_usr_no: Integer; out comp_index: Integer); dispid 1610743836;
    property MembDef: IRDimMembDef readonly dispid 1610743837;
    property MatDef: IRDimMatDef readonly dispid 1610743838;
    property ProfDef: IRDimProfDef readonly dispid 1610743839;
    property EffDef: IRDimEffDef readonly dispid 1610743840;
    property CodeResults: IDispatch readonly dispid 1610743841;
  end;

// *********************************************************************//
// Interface: IRDimMatDef
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E43EB701-A03C-11D3-9A65-00105AC6705D}
// *********************************************************************//
  IRDimMatDef = interface(IDispatch)
    ['{E43EB701-A03C-11D3-9A65-00105AC6705D}']
    function Get_type_: IRDimMatDefType; safecall;
    procedure Set_type_(ret: IRDimMatDefType); safecall;
    function Get_Name: WideString; safecall;
    function Get_SecondName: WideString; safecall;
    procedure SetNames(const _name: WideString; const second_name: WideString); safecall;
    procedure WriteValue(_type: IRDimMatDefValType; val: Double); safecall;
    function ReadValue(_type: IRDimMatDefValType): Double; safecall;
    procedure WriteLongExtraValue(_type: IRDimMatDefLongExValType; val: Integer); safecall;
    function ReadLongExtraValue(_type: IRDimMatDefLongExValType): Integer; safecall;
    procedure WriteDoubleExtraValue(_type: IRDimMatDefDblExValType; val: Double); safecall;
    function ReadDoubleExtraValue(_type: IRDimMatDefDblExValType): Double; safecall;
    property type_: IRDimMatDefType read Get_type_ write Set_type_;
    property Name: WideString read Get_Name;
    property SecondName: WideString read Get_SecondName;
  end;

// *********************************************************************//
// DispIntf:  IRDimMatDefDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E43EB701-A03C-11D3-9A65-00105AC6705D}
// *********************************************************************//
  IRDimMatDefDisp = dispinterface
    ['{E43EB701-A03C-11D3-9A65-00105AC6705D}']
    property type_: IRDimMatDefType dispid 1610743808;
    property Name: WideString readonly dispid 1610743810;
    property SecondName: WideString readonly dispid 1610743811;
    procedure SetNames(const _name: WideString; const second_name: WideString); dispid 1610743812;
    procedure WriteValue(_type: IRDimMatDefValType; val: Double); dispid 1610743813;
    function ReadValue(_type: IRDimMatDefValType): Double; dispid 1610743814;
    procedure WriteLongExtraValue(_type: IRDimMatDefLongExValType; val: Integer); dispid 1610743815;
    function ReadLongExtraValue(_type: IRDimMatDefLongExValType): Integer; dispid 1610743816;
    procedure WriteDoubleExtraValue(_type: IRDimMatDefDblExValType; val: Double); dispid 1610743817;
    function ReadDoubleExtraValue(_type: IRDimMatDefDblExValType): Double; dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRDimProfDef
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E43EB704-A03C-11D3-9A65-00105AC6705D}
// *********************************************************************//
  IRDimProfDef = interface(IDispatch)
    ['{E43EB704-A03C-11D3-9A65-00105AC6705D}']
    function Get_type_: IRDimProfDefType; safecall;
    procedure Set_type_(ret: IRDimProfDefType); safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_IsVar: Integer; safecall;
    procedure Clear; safecall;
    procedure WriteValue(item: IRDimProfDefItemType; _type: IRDimProfDefValType; val: Double); safecall;
    function ReadValue(item: IRDimProfDefItemType; _type: IRDimProfDefValType): Double; safecall;
    procedure SetCmpndName(item: IRDimProfDefItemType; const Name: WideString); safecall;
    function GetCmpndName(item: IRDimProfDefItemType): WideString; safecall;
    procedure SetCmpndBase(item: IRDimProfDefItemType; const Base: WideString); safecall;
    function GetCmpndBase(item: IRDimProfDefItemType): WideString; safecall;
    procedure SetCmpndType(item: IRDimProfDefItemType; Type_: IRDimProfDefType); safecall;
    function GetCmpndType(item: IRDimProfDefItemType): IRDimProfDefType; safecall;
    property type_: IRDimProfDefType read Get_type_ write Set_type_;
    property Name: WideString read Get_Name write Set_Name;
    property IsVar: Integer read Get_IsVar;
  end;

// *********************************************************************//
// DispIntf:  IRDimProfDefDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E43EB704-A03C-11D3-9A65-00105AC6705D}
// *********************************************************************//
  IRDimProfDefDisp = dispinterface
    ['{E43EB704-A03C-11D3-9A65-00105AC6705D}']
    property type_: IRDimProfDefType dispid 1610743808;
    property Name: WideString dispid 1610743810;
    property IsVar: Integer readonly dispid 1610743812;
    procedure Clear; dispid 1610743813;
    procedure WriteValue(item: IRDimProfDefItemType; _type: IRDimProfDefValType; val: Double); dispid 1610743814;
    function ReadValue(item: IRDimProfDefItemType; _type: IRDimProfDefValType): Double; dispid 1610743815;
    procedure SetCmpndName(item: IRDimProfDefItemType; const Name: WideString); dispid 1610743816;
    function GetCmpndName(item: IRDimProfDefItemType): WideString; dispid 1610743817;
    procedure SetCmpndBase(item: IRDimProfDefItemType; const Base: WideString); dispid 1610743818;
    function GetCmpndBase(item: IRDimProfDefItemType): WideString; dispid 1610743819;
    procedure SetCmpndType(item: IRDimProfDefItemType; Type_: IRDimProfDefType); dispid 1610743820;
    function GetCmpndType(item: IRDimProfDefItemType): IRDimProfDefType; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IRDimEffDef
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DFCDC8B5-A030-11D3-9A65-00105AC6705D}
// *********************************************************************//
  IRDimEffDef = interface(IDispatch)
    ['{DFCDC8B5-A030-11D3-9A65-00105AC6705D}']
    function Get_N: Double; safecall;
    function Get_QY: Double; safecall;
    function Get_QZ: Double; safecall;
    function Get_MX: Double; safecall;
    function Get_MY: Double; safecall;
    function Get_MZ: Double; safecall;
    procedure Clear; safecall;
    procedure Set_x_0_1(val: Double); safecall;
    function Get_x_0_1: Double; safecall;
    procedure WriteParam(_type: IRDimEffDefParamType; val: Integer); safecall;
    function ReadParam(_type: IRDimEffDefParamType): Integer; safecall;
    procedure WriteForces(N: Double; QY: Double; QZ: Double; MX: Double; MY: Double; MZ: Double); safecall;
    procedure WriteValuesSet1(_type: IRDimEffDefDirType; M1: Double; M2: Double; M12: Double); safecall;
    function Read_M1(_type: IRDimEffDefDirType): Double; safecall;
    function Read_M2(_type: IRDimEffDefDirType): Double; safecall;
    function Read_M12(_type: IRDimEffDefDirType): Double; safecall;
    procedure WriteValuesSet2(_type: IRDimEffDefDirType; MP_MAX: Double; MN_MAX: Double; 
                              M_MID: Double; M_1P4L: Double; M_3P4L: Double); safecall;
    function Read_MP_MAX(_type: IRDimEffDefDirType): Double; safecall;
    function Read_MN_MAX(_type: IRDimEffDefDirType): Double; safecall;
    function Read_M_MID(_type: IRDimEffDefDirType): Double; safecall;
    function Read_M_1P4L(_type: IRDimEffDefDirType): Double; safecall;
    function Read_M_3P4L(_type: IRDimEffDefDirType): Double; safecall;
    procedure WriteIntPsRangeCoeff(_type: IRDimEffDefIntPsType; x_beg: Double; x_end: Double; 
                                   Coeff: Double); safecall;
    procedure ReadIntPsRangeCoeff(_type: IRDimEffDefIntPsType; out x_beg: Double; 
                                  out x_end: Double; out Coeff: Double); safecall;
    procedure WriteIntPsEffSet1(_type: IRDimEffDefIntPsType; M1: Double; M2: Double; M12: Double); safecall;
    function Read_IntPsEff_M1(_type: IRDimEffDefIntPsType): Double; safecall;
    function Read_IntPsEff_M2(_type: IRDimEffDefIntPsType): Double; safecall;
    function Read_IntPsEff_M12(_type: IRDimEffDefIntPsType): Double; safecall;
    procedure WriteIntPsEffSet2(_type: IRDimEffDefIntPsType; MP_MAX: Double; MN_MAX: Double; 
                                M_MID: Double; M_1P4L: Double; M_3P4L: Double); safecall;
    function Read_IntPsEff_MP_MAX(_type: IRDimEffDefIntPsType): Double; safecall;
    function Read_IntPsEff_MN_MAX(_type: IRDimEffDefIntPsType): Double; safecall;
    function Read_IntPsEff_M_MID(_type: IRDimEffDefIntPsType): Double; safecall;
    function Read_IntPsEff_M_1P4L(_type: IRDimEffDefIntPsType): Double; safecall;
    function Read_IntPsEff_M_3P4L(_type: IRDimEffDefIntPsType): Double; safecall;
    procedure WriteExtraValue(_dirType: IRDimEffDefDirType; _valType: IRDimEffDefExtValType; 
                              val: Double); safecall;
    procedure ReadExtraValue(_dirType: IRDimEffDefDirType; _valType: IRDimEffDefExtValType; 
                             out ret: Double); safecall;
    procedure WriteIntPsExtExtraValue(_type: IRDimEffDefIntPsType; _valType: IRDimEffDefExtValType; 
                                      val: Double); safecall;
    procedure ReadIntPsExtExtraValue(_type: IRDimEffDefIntPsType; _valType: IRDimEffDefExtValType; 
                                     out ret: Double); safecall;
    function Get_Member_x_0_1: Double; safecall;
    property N: Double read Get_N;
    property QY: Double read Get_QY;
    property QZ: Double read Get_QZ;
    property MX: Double read Get_MX;
    property MY: Double read Get_MY;
    property MZ: Double read Get_MZ;
  end;

// *********************************************************************//
// DispIntf:  IRDimEffDefDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DFCDC8B5-A030-11D3-9A65-00105AC6705D}
// *********************************************************************//
  IRDimEffDefDisp = dispinterface
    ['{DFCDC8B5-A030-11D3-9A65-00105AC6705D}']
    property N: Double readonly dispid 1610743808;
    property QY: Double readonly dispid 1610743809;
    property QZ: Double readonly dispid 1610743810;
    property MX: Double readonly dispid 1610743811;
    property MY: Double readonly dispid 1610743812;
    property MZ: Double readonly dispid 1610743813;
    procedure Clear; dispid 1610743814;
    procedure Set_x_0_1(val: Double); dispid 1610743815;
    function Get_x_0_1: Double; dispid 1610743816;
    procedure WriteParam(_type: IRDimEffDefParamType; val: Integer); dispid 1610743817;
    function ReadParam(_type: IRDimEffDefParamType): Integer; dispid 1610743818;
    procedure WriteForces(N: Double; QY: Double; QZ: Double; MX: Double; MY: Double; MZ: Double); dispid 1610743819;
    procedure WriteValuesSet1(_type: IRDimEffDefDirType; M1: Double; M2: Double; M12: Double); dispid 1610743820;
    function Read_M1(_type: IRDimEffDefDirType): Double; dispid 1610743821;
    function Read_M2(_type: IRDimEffDefDirType): Double; dispid 1610743822;
    function Read_M12(_type: IRDimEffDefDirType): Double; dispid 1610743823;
    procedure WriteValuesSet2(_type: IRDimEffDefDirType; MP_MAX: Double; MN_MAX: Double; 
                              M_MID: Double; M_1P4L: Double; M_3P4L: Double); dispid 1610743824;
    function Read_MP_MAX(_type: IRDimEffDefDirType): Double; dispid 1610743825;
    function Read_MN_MAX(_type: IRDimEffDefDirType): Double; dispid 1610743826;
    function Read_M_MID(_type: IRDimEffDefDirType): Double; dispid 1610743827;
    function Read_M_1P4L(_type: IRDimEffDefDirType): Double; dispid 1610743828;
    function Read_M_3P4L(_type: IRDimEffDefDirType): Double; dispid 1610743829;
    procedure WriteIntPsRangeCoeff(_type: IRDimEffDefIntPsType; x_beg: Double; x_end: Double; 
                                   Coeff: Double); dispid 1610743830;
    procedure ReadIntPsRangeCoeff(_type: IRDimEffDefIntPsType; out x_beg: Double; 
                                  out x_end: Double; out Coeff: Double); dispid 1610743831;
    procedure WriteIntPsEffSet1(_type: IRDimEffDefIntPsType; M1: Double; M2: Double; M12: Double); dispid 1610743832;
    function Read_IntPsEff_M1(_type: IRDimEffDefIntPsType): Double; dispid 1610743833;
    function Read_IntPsEff_M2(_type: IRDimEffDefIntPsType): Double; dispid 1610743834;
    function Read_IntPsEff_M12(_type: IRDimEffDefIntPsType): Double; dispid 1610743835;
    procedure WriteIntPsEffSet2(_type: IRDimEffDefIntPsType; MP_MAX: Double; MN_MAX: Double; 
                                M_MID: Double; M_1P4L: Double; M_3P4L: Double); dispid 1610743836;
    function Read_IntPsEff_MP_MAX(_type: IRDimEffDefIntPsType): Double; dispid 1610743837;
    function Read_IntPsEff_MN_MAX(_type: IRDimEffDefIntPsType): Double; dispid 1610743838;
    function Read_IntPsEff_M_MID(_type: IRDimEffDefIntPsType): Double; dispid 1610743839;
    function Read_IntPsEff_M_1P4L(_type: IRDimEffDefIntPsType): Double; dispid 1610743840;
    function Read_IntPsEff_M_3P4L(_type: IRDimEffDefIntPsType): Double; dispid 1610743841;
    procedure WriteExtraValue(_dirType: IRDimEffDefDirType; _valType: IRDimEffDefExtValType; 
                              val: Double); dispid 1610743842;
    procedure ReadExtraValue(_dirType: IRDimEffDefDirType; _valType: IRDimEffDefExtValType; 
                             out ret: Double); dispid 1610743843;
    procedure WriteIntPsExtExtraValue(_type: IRDimEffDefIntPsType; _valType: IRDimEffDefExtValType; 
                                      val: Double); dispid 1610743844;
    procedure ReadIntPsExtExtraValue(_type: IRDimEffDefIntPsType; _valType: IRDimEffDefExtValType; 
                                     out ret: Double); dispid 1610743845;
    function Get_Member_x_0_1: Double; dispid 1610743846;
  end;

// *********************************************************************//
// Interface: IRDimGrpRes
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {36118C53-3803-11D5-8835-0050DA7675E2}
// *********************************************************************//
  IRDimGrpRes = interface(IDispatch)
    ['{36118C53-3803-11D5-8835-0050DA7675E2}']
    function Get_UsrNo: Integer; safecall;
    function Get_FamiliesCount: Integer; safecall;
    function FamilyName(family_index: Integer): WideString; safecall;
    function Get_IsOptimization: Integer; safecall;
    function Get_OptFamilyIndex: Integer; safecall;
    function Check(family_index: Integer; val: IRDimGrpResCurrProf): Integer; safecall;
    function Get(family_index: Integer; val: IRDimGrpResCurrProf): IRDimDetailedRes; safecall;
    property UsrNo: Integer read Get_UsrNo;
    property FamiliesCount: Integer read Get_FamiliesCount;
    property IsOptimization: Integer read Get_IsOptimization;
    property OptFamilyIndex: Integer read Get_OptFamilyIndex;
  end;

// *********************************************************************//
// DispIntf:  IRDimGrpResDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {36118C53-3803-11D5-8835-0050DA7675E2}
// *********************************************************************//
  IRDimGrpResDisp = dispinterface
    ['{36118C53-3803-11D5-8835-0050DA7675E2}']
    property UsrNo: Integer readonly dispid 1610743808;
    property FamiliesCount: Integer readonly dispid 1610743809;
    function FamilyName(family_index: Integer): WideString; dispid 1610743810;
    property IsOptimization: Integer readonly dispid 1610743811;
    property OptFamilyIndex: Integer readonly dispid 1610743812;
    function Check(family_index: Integer; val: IRDimGrpResCurrProf): Integer; dispid 1610743813;
    function Get(family_index: Integer; val: IRDimGrpResCurrProf): IRDimDetailedRes; dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRDimMembRes
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {979DCCC2-B45B-11D9-869F-0050DA7675E2}
// *********************************************************************//
  IRDimMembRes = interface(IDispatch)
    ['{979DCCC2-B45B-11D9-869F-0050DA7675E2}']
    procedure Set_Language(Param1: Integer); safecall;
    procedure Set_Units(const Param1: IRDimUnits); safecall;
    procedure RefreshUnits(AreRobotUnits: Integer); safecall;
    function Get_CodeResults: IDispatch; safecall;
    function ResOfCalc(Type_: IRDimMembResCalcType): IRDimMembCalcRetValue; safecall;
    function GetUltimateValue(Type_: IRDimMembResUltimateValueType): Double; safecall;
    function Get_IsClientLimitStateService: Integer; safecall;
    function IsServiceActive(Type_: IRDimMembResServiceType): Integer; safecall;
    function GetServiceRatio(Type_: IRDimMembResServiceType): Double; safecall;
    function GetServiceCaseName(Type_: IRDimMembResServiceType): WideString; safecall;
    function Get_RtfFileName: WideString; safecall;
    procedure Store(const str: IRDimStream); safecall;
    procedure Retrieve(const str: IRDimStream); safecall;
    procedure SetMembDef(const memb_def: IRDimMembDef); safecall;
    procedure SetMatDef(const mat_def: IRDimMatDef); safecall;
    procedure SetProfDef(const prof_def: IRDimProfDef); safecall;
    procedure SetEffDef(const eff_def: IRDimEffDef); safecall;
    function GetMembDefAccess: IRDimMembDef; safecall;
    function GetMatDefAccess: IRDimMatDef; safecall;
    function GetProfDefAccess: IRDimProfDef; safecall;
    function GetEffDefAccess: IRDimEffDef; safecall;
    function CreateResWnd(Type_: IRDimMembResWndType; parent_hwnd: Integer): Integer; safecall;
    procedure GetDefMaxLineNo(Type_: IRDimMembResTableDefType; out ret: Integer; 
                              out was_proc: Integer); safecall;
    procedure IsDefLineActive(Type_: IRDimMembResTableDefType; line_no: Integer; out ret: Integer; 
                              out was_proc: Integer); safecall;
    procedure GetDefLineComponent(Type_: IRDimMembResTableDefType; line_no: Integer; 
                                  cmpnt_no: IRDimMembResTableComp; out defline_no: Integer; 
                                  out ret: WideString; out defline_no_proc: Integer); safecall;
    function GetMaxLineNo: Integer; safecall;
    function IsLineActive(line_no: Integer): Integer; safecall;
    function GetLineType(line_no: Integer): IRDimMembResTableLineType; safecall;
    function GetLineComponent(line_no: Integer; cmpnt_no: IRDimMembResTableComp): WideString; safecall;
    procedure BlockCount(const _name: WideString; out ret: Integer; out was_proc: Integer); safecall;
    procedure IsStatement(const _name: WideString; out ret: Integer; out was_proc: Integer); safecall;
    procedure ReplaceMark(const mark: WideString; out mark_out: WideString; out was_proc: Integer); safecall;
    procedure RecognizedPQ(const _name: WideString; out vstr: WideString; out ustr: WideString; 
                           out was_proc: Integer); safecall;
    procedure Set_CurrentBlock(Param1: Integer); safecall;
    property Language: Integer write Set_Language;
    property Units: IRDimUnits write Set_Units;
    property CodeResults: IDispatch read Get_CodeResults;
    property IsClientLimitStateService: Integer read Get_IsClientLimitStateService;
    property RtfFileName: WideString read Get_RtfFileName;
    property CurrentBlock: Integer write Set_CurrentBlock;
  end;

// *********************************************************************//
// DispIntf:  IRDimMembResDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {979DCCC2-B45B-11D9-869F-0050DA7675E2}
// *********************************************************************//
  IRDimMembResDisp = dispinterface
    ['{979DCCC2-B45B-11D9-869F-0050DA7675E2}']
    property Language: Integer writeonly dispid 1610743808;
    property Units: IRDimUnits writeonly dispid 1610743809;
    procedure RefreshUnits(AreRobotUnits: Integer); dispid 1610743810;
    property CodeResults: IDispatch readonly dispid 1610743811;
    function ResOfCalc(Type_: IRDimMembResCalcType): IRDimMembCalcRetValue; dispid 1610743812;
    function GetUltimateValue(Type_: IRDimMembResUltimateValueType): Double; dispid 1610743813;
    property IsClientLimitStateService: Integer readonly dispid 1610743814;
    function IsServiceActive(Type_: IRDimMembResServiceType): Integer; dispid 1610743815;
    function GetServiceRatio(Type_: IRDimMembResServiceType): Double; dispid 1610743816;
    function GetServiceCaseName(Type_: IRDimMembResServiceType): WideString; dispid 1610743817;
    property RtfFileName: WideString readonly dispid 1610743818;
    procedure Store(const str: IRDimStream); dispid 1610743819;
    procedure Retrieve(const str: IRDimStream); dispid 1610743820;
    procedure SetMembDef(const memb_def: IRDimMembDef); dispid 1610743821;
    procedure SetMatDef(const mat_def: IRDimMatDef); dispid 1610743822;
    procedure SetProfDef(const prof_def: IRDimProfDef); dispid 1610743823;
    procedure SetEffDef(const eff_def: IRDimEffDef); dispid 1610743824;
    function GetMembDefAccess: IRDimMembDef; dispid 1610743825;
    function GetMatDefAccess: IRDimMatDef; dispid 1610743826;
    function GetProfDefAccess: IRDimProfDef; dispid 1610743827;
    function GetEffDefAccess: IRDimEffDef; dispid 1610743828;
    function CreateResWnd(Type_: IRDimMembResWndType; parent_hwnd: Integer): Integer; dispid 1610743829;
    procedure GetDefMaxLineNo(Type_: IRDimMembResTableDefType; out ret: Integer; 
                              out was_proc: Integer); dispid 1610743830;
    procedure IsDefLineActive(Type_: IRDimMembResTableDefType; line_no: Integer; out ret: Integer; 
                              out was_proc: Integer); dispid 1610743831;
    procedure GetDefLineComponent(Type_: IRDimMembResTableDefType; line_no: Integer; 
                                  cmpnt_no: IRDimMembResTableComp; out defline_no: Integer; 
                                  out ret: WideString; out defline_no_proc: Integer); dispid 1610743832;
    function GetMaxLineNo: Integer; dispid 1610743833;
    function IsLineActive(line_no: Integer): Integer; dispid 1610743834;
    function GetLineType(line_no: Integer): IRDimMembResTableLineType; dispid 1610743835;
    function GetLineComponent(line_no: Integer; cmpnt_no: IRDimMembResTableComp): WideString; dispid 1610743836;
    procedure BlockCount(const _name: WideString; out ret: Integer; out was_proc: Integer); dispid 1610743837;
    procedure IsStatement(const _name: WideString; out ret: Integer; out was_proc: Integer); dispid 1610743838;
    procedure ReplaceMark(const mark: WideString; out mark_out: WideString; out was_proc: Integer); dispid 1610743839;
    procedure RecognizedPQ(const _name: WideString; out vstr: WideString; out ustr: WideString; 
                           out was_proc: Integer); dispid 1610743840;
    property CurrentBlock: Integer writeonly dispid 1610743841;
  end;

// *********************************************************************//
// Interface: IRDimMembCalc
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {45CAE2B1-A649-11D3-9A6F-00105AC6705D}
// *********************************************************************//
  IRDimMembCalc = interface(IDispatch)
    ['{45CAE2B1-A649-11D3-9A6F-00105AC6705D}']
    function Get_IsExtraMomentsSet1: Integer; safecall;
    function Get_IsExtraMomentsSet2: Integer; safecall;
    function Get_IsIntPointsMomentsSet1: Integer; safecall;
    function Get_IsIntPointsMomentsSet2: Integer; safecall;
    procedure SetMembDef(const memb_def: IRDimMembDef); safecall;
    function Get_MatStrengthCode: IRDimMembCalcMatStrengthCode; safecall;
    procedure SetMatDef(const mat_def: IRDimMatDef); safecall;
    procedure SetProfDef(const prof_def: IRDimProfDef); safecall;
    procedure SetEffDef(const eff_data: IRDimEffDef); safecall;
    procedure SetCalcState(const st: IRDimCalcState); safecall;
    procedure CalculBuckling; safecall;
    function CalculMember: IRDimMembCalcRetValue; safecall;
    function GetRatio: Double; safecall;
    function Get_IsClientLimitStateService: Integer; safecall;
    procedure SetAutoInitDeflections(defl_y: Double; defl_z: Double); safecall;
    function CalculDeflDisp(const dd: IRDimDeflDisp): Integer; safecall;
    function ReCalculDeflForProf(CoefY: Double; CoefZ: Double): Integer; safecall;
    function GetDeflDispMaxRatio: Double; safecall;
    function GetResultsInterface: IRDimMembRes; safecall;
    procedure Finish(fin: IRDimMembCalcFinishType); safecall;
    function Get_MessagesNum: Integer; safecall;
    function GetMessage(message_no: Integer; Language: Integer): WideString; safecall;
    function GetMessageType(message_no: Integer): IRDimMembCalcMessageType; safecall;
    property IsExtraMomentsSet1: Integer read Get_IsExtraMomentsSet1;
    property IsExtraMomentsSet2: Integer read Get_IsExtraMomentsSet2;
    property IsIntPointsMomentsSet1: Integer read Get_IsIntPointsMomentsSet1;
    property IsIntPointsMomentsSet2: Integer read Get_IsIntPointsMomentsSet2;
    property MatStrengthCode: IRDimMembCalcMatStrengthCode read Get_MatStrengthCode;
    property IsClientLimitStateService: Integer read Get_IsClientLimitStateService;
    property MessagesNum: Integer read Get_MessagesNum;
  end;

// *********************************************************************//
// DispIntf:  IRDimMembCalcDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {45CAE2B1-A649-11D3-9A6F-00105AC6705D}
// *********************************************************************//
  IRDimMembCalcDisp = dispinterface
    ['{45CAE2B1-A649-11D3-9A6F-00105AC6705D}']
    property IsExtraMomentsSet1: Integer readonly dispid 1610743808;
    property IsExtraMomentsSet2: Integer readonly dispid 1610743809;
    property IsIntPointsMomentsSet1: Integer readonly dispid 1610743810;
    property IsIntPointsMomentsSet2: Integer readonly dispid 1610743811;
    procedure SetMembDef(const memb_def: IRDimMembDef); dispid 1610743812;
    property MatStrengthCode: IRDimMembCalcMatStrengthCode readonly dispid 1610743813;
    procedure SetMatDef(const mat_def: IRDimMatDef); dispid 1610743814;
    procedure SetProfDef(const prof_def: IRDimProfDef); dispid 1610743815;
    procedure SetEffDef(const eff_data: IRDimEffDef); dispid 1610743816;
    procedure SetCalcState(const st: IRDimCalcState); dispid 1610743817;
    procedure CalculBuckling; dispid 1610743818;
    function CalculMember: IRDimMembCalcRetValue; dispid 1610743819;
    function GetRatio: Double; dispid 1610743820;
    property IsClientLimitStateService: Integer readonly dispid 1610743821;
    procedure SetAutoInitDeflections(defl_y: Double; defl_z: Double); dispid 1610743822;
    function CalculDeflDisp(const dd: IRDimDeflDisp): Integer; dispid 1610743823;
    function ReCalculDeflForProf(CoefY: Double; CoefZ: Double): Integer; dispid 1610743824;
    function GetDeflDispMaxRatio: Double; dispid 1610743825;
    function GetResultsInterface: IRDimMembRes; dispid 1610743826;
    procedure Finish(fin: IRDimMembCalcFinishType); dispid 1610743827;
    property MessagesNum: Integer readonly dispid 1610743828;
    function GetMessage(message_no: Integer; Language: Integer): WideString; dispid 1610743829;
    function GetMessageType(message_no: Integer): IRDimMembCalcMessageType; dispid 1610743830;
  end;

// *********************************************************************//
// Interface: IRDimCalcState
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {561CF201-B42B-11D9-869E-0050DA7675E2}
// *********************************************************************//
  IRDimCalcState = interface(IDispatch)
    ['{561CF201-B42B-11D9-869E-0050DA7675E2}']
    procedure SetFlag(_type: IRDimCalcStateFlagType; val: Integer); safecall;
    function IsFlagSet(_type: IRDimCalcStateFlagType): Integer; safecall;
    procedure Set_CalcType(ret: IRDimCalcStateCalcType); safecall;
    function Get_CalcType: IRDimCalcStateCalcType; safecall;
    procedure SetParamValue(_type: IRDimCalcStateValueType; val: Double); safecall;
    function GetParamValue(_type: IRDimCalcStateValueType): Double; safecall;
    procedure WriteClientData(const val: IRDimStream); safecall;
    procedure ReadClientData(const ret: IRDimStream); safecall;
    property CalcType: IRDimCalcStateCalcType read Get_CalcType write Set_CalcType;
  end;

// *********************************************************************//
// DispIntf:  IRDimCalcStateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {561CF201-B42B-11D9-869E-0050DA7675E2}
// *********************************************************************//
  IRDimCalcStateDisp = dispinterface
    ['{561CF201-B42B-11D9-869E-0050DA7675E2}']
    procedure SetFlag(_type: IRDimCalcStateFlagType; val: Integer); dispid 1610743808;
    function IsFlagSet(_type: IRDimCalcStateFlagType): Integer; dispid 1610743809;
    property CalcType: IRDimCalcStateCalcType dispid 1610743810;
    procedure SetParamValue(_type: IRDimCalcStateValueType; val: Double); dispid 1610743812;
    function GetParamValue(_type: IRDimCalcStateValueType): Double; dispid 1610743813;
    procedure WriteClientData(const val: IRDimStream); dispid 1610743814;
    procedure ReadClientData(const ret: IRDimStream); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRDimManCalcPar
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {12BA3A11-4088-11D4-8717-0050DA7675E2}
// *********************************************************************//
  IRDimManCalcPar = interface(IDispatch)
    ['{12BA3A11-4088-11D4-8717-0050DA7675E2}']
    procedure Set_ManMembNo(memb_no: Integer); safecall;
    function Get_ManMembNo: Integer; safecall;
    procedure SetManMembDef(const memb_def: IRDimMembDef); safecall;
    function GetManMembDefAccess: IRDimMembDef; safecall;
    procedure SetManEffDef(const eff_data: IRDimSimEffDef); safecall;
    function GetManEffDefAccess: IRDimSimEffDef; safecall;
    procedure SetCalcConf(const conf_data: IRDimCalcConf); safecall;
    function GetCalcConfAccess: IRDimCalcConf; safecall;
    function GetMembNum: Integer; safecall;
    function GetMembNo(index: Integer): Integer; safecall;
    function GetMembUserNo(memb_no: Integer): Integer; safecall;
    function GetMembName(memb_no: Integer): WideString; safecall;
    function GetMembDef(memb_no: Integer): IRDimMembDef; safecall;
    property ManMembNo: Integer read Get_ManMembNo write Set_ManMembNo;
  end;

// *********************************************************************//
// DispIntf:  IRDimManCalcParDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {12BA3A11-4088-11D4-8717-0050DA7675E2}
// *********************************************************************//
  IRDimManCalcParDisp = dispinterface
    ['{12BA3A11-4088-11D4-8717-0050DA7675E2}']
    property ManMembNo: Integer dispid 1610743808;
    procedure SetManMembDef(const memb_def: IRDimMembDef); dispid 1610743810;
    function GetManMembDefAccess: IRDimMembDef; dispid 1610743811;
    procedure SetManEffDef(const eff_data: IRDimSimEffDef); dispid 1610743812;
    function GetManEffDefAccess: IRDimSimEffDef; dispid 1610743813;
    procedure SetCalcConf(const conf_data: IRDimCalcConf); dispid 1610743814;
    function GetCalcConfAccess: IRDimCalcConf; dispid 1610743815;
    function GetMembNum: Integer; dispid 1610743816;
    function GetMembNo(index: Integer): Integer; dispid 1610743817;
    function GetMembUserNo(memb_no: Integer): Integer; dispid 1610743818;
    function GetMembName(memb_no: Integer): WideString; dispid 1610743819;
    function GetMembDef(memb_no: Integer): IRDimMembDef; dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRDimSimEffDef
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BAF61611-41D5-11D4-8719-0050DA7675E2}
// *********************************************************************//
  IRDimSimEffDef = interface(IDispatch)
    ['{BAF61611-41D5-11D4-8719-0050DA7675E2}']
    procedure Clear; safecall;
    procedure WriteForces(N: Double; QY: Double; QZ: Double; MX: Double; MY: Double; MZ: Double); safecall;
    procedure ReadForces(out N: Double; out QY: Double; out QZ: Double; out MX: Double; 
                         out MY: Double; out MZ: Double); safecall;
    procedure WriteValuesSet1(_type: IRDimEffDefDirType; M1: Double; M2: Double; M12: Double); safecall;
    procedure ReadValuesSet1(_type: IRDimEffDefDirType; out M1: Double; out M2: Double; 
                             out M12: Double); safecall;
    procedure WriteValuesSet2(_type: IRDimEffDefDirType; MP_MAX: Double; MN_MAX: Double; 
                              M_MID: Double; M_1P4L: Double; M_3P4L: Double); safecall;
    procedure ReadValuesSet2(_type: IRDimEffDefDirType; out MP_MAX: Double; out MN_MAX: Double; 
                             out M_MID: Double; out M_1P4L: Double; out M_3P4L: Double); safecall;
    procedure WriteExtraValue(_dirType: IRDimEffDefDirType; _valType: IRDimEffDefExtValType; 
                              val: Double); safecall;
    procedure ReadExtraValue(_dirType: IRDimEffDefDirType; _valType: IRDimEffDefExtValType; 
                             out ret: Double); safecall;
  end;

// *********************************************************************//
// DispIntf:  IRDimSimEffDefDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BAF61611-41D5-11D4-8719-0050DA7675E2}
// *********************************************************************//
  IRDimSimEffDefDisp = dispinterface
    ['{BAF61611-41D5-11D4-8719-0050DA7675E2}']
    procedure Clear; dispid 1610743808;
    procedure WriteForces(N: Double; QY: Double; QZ: Double; MX: Double; MY: Double; MZ: Double); dispid 1610743809;
    procedure ReadForces(out N: Double; out QY: Double; out QZ: Double; out MX: Double; 
                         out MY: Double; out MZ: Double); dispid 1610743810;
    procedure WriteValuesSet1(_type: IRDimEffDefDirType; M1: Double; M2: Double; M12: Double); dispid 1610743811;
    procedure ReadValuesSet1(_type: IRDimEffDefDirType; out M1: Double; out M2: Double; 
                             out M12: Double); dispid 1610743812;
    procedure WriteValuesSet2(_type: IRDimEffDefDirType; MP_MAX: Double; MN_MAX: Double; 
                              M_MID: Double; M_1P4L: Double; M_3P4L: Double); dispid 1610743813;
    procedure ReadValuesSet2(_type: IRDimEffDefDirType; out MP_MAX: Double; out MN_MAX: Double; 
                             out M_MID: Double; out M_1P4L: Double; out M_3P4L: Double); dispid 1610743814;
    procedure WriteExtraValue(_dirType: IRDimEffDefDirType; _valType: IRDimEffDefExtValType; 
                              val: Double); dispid 1610743815;
    procedure ReadExtraValue(_dirType: IRDimEffDefDirType; _valType: IRDimEffDefExtValType; 
                             out ret: Double); dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRDimCodeService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9AAB28A1-F0B4-11D2-999B-00201888053E}
// *********************************************************************//
  IRDimCodeService = interface(IDispatch)
    ['{9AAB28A1-F0B4-11D2-999B-00201888053E}']
    function GetDefaultMembDef(_type: IRDimMembDefType): IRDimMembDef; safecall;
    procedure EditMembDef(inModalWindow: Integer; testMembNo: Integer; parentHWND: Integer; 
                          const val: IRDimMembDef); safecall;
    function GetMembCalc: IRDimMembCalc; safecall;
    function ModalEditManualParams(parentHWND: Integer; const val: IRDimManCalcPar): IRDimManParRetValue; safecall;
    function ModalEditCalcConfigParams(parentHWND: Integer; const val: IRDimCalcConf): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRDimCodeServiceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9AAB28A1-F0B4-11D2-999B-00201888053E}
// *********************************************************************//
  IRDimCodeServiceDisp = dispinterface
    ['{9AAB28A1-F0B4-11D2-999B-00201888053E}']
    function GetDefaultMembDef(_type: IRDimMembDefType): IRDimMembDef; dispid 1610743808;
    procedure EditMembDef(inModalWindow: Integer; testMembNo: Integer; parentHWND: Integer; 
                          const val: IRDimMembDef); dispid 1610743809;
    function GetMembCalc: IRDimMembCalc; dispid 1610743810;
    function ModalEditManualParams(parentHWND: Integer; const val: IRDimManCalcPar): IRDimManParRetValue; dispid 1610743811;
    function ModalEditCalcConfigParams(parentHWND: Integer; const val: IRDimCalcConf): Integer; dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRDimClient
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC7B6C13-7F98-11D2-990B-00201888053E}
// *********************************************************************//
  IRDimClient = interface(IDispatch)
    ['{EC7B6C13-7F98-11D2-990B-00201888053E}']
    procedure Connect(const val: IRDimConnection); safecall;
    function GetRDimCodeService: IRDimCodeService; safecall;
    function GetCodeUnitName(Type_: IRDimUnitType): WideString; safecall;
    function GetCodeUnitCoef(Type_: IRDimUnitType): Double; safecall;
    function GetCalcConfDefaultWndType: IRDimClientCalcConfDefaultWndType; safecall;
    function Get_CmpndProfService: Integer; safecall;
    property CmpndProfService: Integer read Get_CmpndProfService;
  end;

// *********************************************************************//
// DispIntf:  IRDimClientDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC7B6C13-7F98-11D2-990B-00201888053E}
// *********************************************************************//
  IRDimClientDisp = dispinterface
    ['{EC7B6C13-7F98-11D2-990B-00201888053E}']
    procedure Connect(const val: IRDimConnection); dispid 1610743808;
    function GetRDimCodeService: IRDimCodeService; dispid 1610743809;
    function GetCodeUnitName(Type_: IRDimUnitType): WideString; dispid 1610743810;
    function GetCodeUnitCoef(Type_: IRDimUnitType): Double; dispid 1610743811;
    function GetCalcConfDefaultWndType: IRDimClientCalcConfDefaultWndType; dispid 1610743812;
    property CmpndProfService: Integer readonly dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRDimAdjoinService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EB17B256-5405-4099-909A-33455250BAEA}
// *********************************************************************//
  IRDimAdjoinService = interface(IDispatch)
    ['{EB17B256-5405-4099-909A-33455250BAEA}']
    function Get_DataType: IRDimMembDefBucklingDataType; safecall;
    function Get_EditWindowType: IRDimAdjoinServiceEditWndType; safecall;
    function GetAdjoinParams: IRDimAdjoinParams; safecall;
    procedure FinishEditAdjoinParams(wasAccepted: Integer); safecall;
    procedure Set_Length(Param1: Double); safecall;
    procedure Set_Iy(Param1: Double); safecall;
    procedure Set_Iz(Param1: Double); safecall;
    procedure HowCalcul(out retH: IRDimMembDefAdjoinHowCalcul; 
                        out retW: IRDimMembDefAdjoinWayOfCalcul; out IsStrSway: Integer); safecall;
    function Get_CalculBuckling: Double; safecall;
    property DataType: IRDimMembDefBucklingDataType read Get_DataType;
    property EditWindowType: IRDimAdjoinServiceEditWndType read Get_EditWindowType;
    property Length: Double write Set_Length;
    property Iy: Double write Set_Iy;
    property Iz: Double write Set_Iz;
    property CalculBuckling: Double read Get_CalculBuckling;
  end;

// *********************************************************************//
// DispIntf:  IRDimAdjoinServiceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EB17B256-5405-4099-909A-33455250BAEA}
// *********************************************************************//
  IRDimAdjoinServiceDisp = dispinterface
    ['{EB17B256-5405-4099-909A-33455250BAEA}']
    property DataType: IRDimMembDefBucklingDataType readonly dispid 1610743808;
    property EditWindowType: IRDimAdjoinServiceEditWndType readonly dispid 1610743809;
    function GetAdjoinParams: IRDimAdjoinParams; dispid 1610743810;
    procedure FinishEditAdjoinParams(wasAccepted: Integer); dispid 1610743811;
    property Length: Double writeonly dispid 1610743812;
    property Iy: Double writeonly dispid 1610743813;
    property Iz: Double writeonly dispid 1610743814;
    procedure HowCalcul(out retH: IRDimMembDefAdjoinHowCalcul; 
                        out retW: IRDimMembDefAdjoinWayOfCalcul; out IsStrSway: Integer); dispid 1610743815;
    property CalculBuckling: Double readonly dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRDimMembParamsANS
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0B6E95CC-22E6-4D0E-A95F-FE86A321F9D3}
// *********************************************************************//
  IRDimMembParamsANS = interface(IDispatch)
    ['{0B6E95CC-22E6-4D0E-A95F-FE86A321F9D3}']
    function Get_BucklingDiagramY: IRDimBuckDiagramANS; safecall;
    procedure Set_BucklingDiagramY(pVal: IRDimBuckDiagramANS); safecall;
    function Get_BucklingDiagramZ: IRDimBuckDiagramANS; safecall;
    procedure Set_BucklingDiagramZ(pVal: IRDimBuckDiagramANS); safecall;
    function Get_BuckLenghtCoeffY: Double; safecall;
    procedure Set_BuckLenghtCoeffY(pVal: Double); safecall;
    function Get_BuckLenghtCoeffZ: Double; safecall;
    procedure Set_BuckLenghtCoeffZ(pVal: Double); safecall;
    function Get_LatBuck: Integer; safecall;
    procedure Set_LatBuck(pVal: Integer); safecall;
    function Get_LatBuckCoef_UppFlan: IRDimLatBuckCoefDiagramANS; safecall;
    procedure Set_LatBuckCoef_UppFlan(pVal: IRDimLatBuckCoefDiagramANS); safecall;
    function Get_LatBuckCoef_LowFlan: IRDimLatBuckCoefDiagramANS; safecall;
    procedure Set_LatBuckCoef_LowFlan(pVal: IRDimLatBuckCoefDiagramANS); safecall;
    function Get_UserDefLatBuckCoef_UppFlan: Double; safecall;
    procedure Set_UserDefLatBuckCoef_UppFlan(pVal: Double); safecall;
    function Get_UserDefLatBuckCoef_LowFlan: Double; safecall;
    procedure Set_UserDefLatBuckCoef_LowFlan(pVal: Double); safecall;
    function Get_LatBuckCbCoeffDiagram: IRDimLatBuckCbCoeffDiagramANS; safecall;
    procedure Set_LatBuckCbCoeffDiagram(pVal: IRDimLatBuckCbCoeffDiagramANS); safecall;
    function Get_LatBuckCbCoeff: Double; safecall;
    procedure Set_LatBuckCbCoeff(pVal: Double); safecall;
    function Get_BucklingDiagramY_OfSegments: IRDimBuckDiagramANS; safecall;
    procedure Set_BucklingDiagramY_OfSegments(pVal: IRDimBuckDiagramANS); safecall;
    function Get_SegmentBucklingDiagramZ_OfSegments: IRDimBuckDiagramANS; safecall;
    procedure Set_SegmentBucklingDiagramZ(Param1: IRDimBuckDiagramANS); safecall;
    function Get_LatBuckCoef_UppFlan_OfSegments: IRDimLatBuckCoefDiagramANS; safecall;
    procedure Set_LatBuckCoef_UppFlan_OfSegments(pVal: IRDimLatBuckCoefDiagramANS); safecall;
    function Get_LatBuckCoef_LowFlan_OfSegments: IRDimLatBuckCoefDiagramANS; safecall;
    procedure Set_LatBuckCoef_LowFlan_OfSegments(pVal: IRDimLatBuckCoefDiagramANS); safecall;
    procedure TransStiffClear; safecall;
    function Get_TransStiffCoordNum: Integer; safecall;
    function Get_TransStiffCoordsRelative: Integer; safecall;
    procedure Set_TransStiffCoordsRelative(IsRelValue: Integer); safecall;
    procedure SetTransStiffCoordValue(no: Integer; coord: Double); safecall;
    procedure GetTransStiffCoordValue(no: Integer; out coord: Double); safecall;
    function Get_SeismicAnalysis: Integer; safecall;
    procedure Set_SeismicAnalysis(isSeismic: Integer); safecall;
    function Get_SeismicSystem: IRDimSeismicSystemANS; safecall;
    procedure Set_SeismicSystem(system: IRDimSeismicSystemANS); safecall;
    function Get_SeismicElementType: IRDimSeismicElementTypeANS; safecall;
    procedure Set_SeismicElementType(elemType: IRDimSeismicElementTypeANS); safecall;
    function Get_FactAnetto: Double; safecall;
    procedure Set_FactAnetto(pVal: Double); safecall;
    function Get_ShearLagFactorU: Double; safecall;
    procedure Set_ShearLagFactorU(pVal: Double); safecall;
    function Get_TubeControl: Integer; safecall;
    procedure Set_TubeControl(pVal: Integer); safecall;
    property BucklingDiagramY: IRDimBuckDiagramANS read Get_BucklingDiagramY write Set_BucklingDiagramY;
    property BucklingDiagramZ: IRDimBuckDiagramANS read Get_BucklingDiagramZ write Set_BucklingDiagramZ;
    property BuckLenghtCoeffY: Double read Get_BuckLenghtCoeffY write Set_BuckLenghtCoeffY;
    property BuckLenghtCoeffZ: Double read Get_BuckLenghtCoeffZ write Set_BuckLenghtCoeffZ;
    property LatBuck: Integer read Get_LatBuck write Set_LatBuck;
    property LatBuckCoef_UppFlan: IRDimLatBuckCoefDiagramANS read Get_LatBuckCoef_UppFlan write Set_LatBuckCoef_UppFlan;
    property LatBuckCoef_LowFlan: IRDimLatBuckCoefDiagramANS read Get_LatBuckCoef_LowFlan write Set_LatBuckCoef_LowFlan;
    property UserDefLatBuckCoef_UppFlan: Double read Get_UserDefLatBuckCoef_UppFlan write Set_UserDefLatBuckCoef_UppFlan;
    property UserDefLatBuckCoef_LowFlan: Double read Get_UserDefLatBuckCoef_LowFlan write Set_UserDefLatBuckCoef_LowFlan;
    property LatBuckCbCoeffDiagram: IRDimLatBuckCbCoeffDiagramANS read Get_LatBuckCbCoeffDiagram write Set_LatBuckCbCoeffDiagram;
    property LatBuckCbCoeff: Double read Get_LatBuckCbCoeff write Set_LatBuckCbCoeff;
    property BucklingDiagramY_OfSegments: IRDimBuckDiagramANS read Get_BucklingDiagramY_OfSegments write Set_BucklingDiagramY_OfSegments;
    property SegmentBucklingDiagramZ_OfSegments: IRDimBuckDiagramANS read Get_SegmentBucklingDiagramZ_OfSegments;
    property SegmentBucklingDiagramZ: IRDimBuckDiagramANS write Set_SegmentBucklingDiagramZ;
    property LatBuckCoef_UppFlan_OfSegments: IRDimLatBuckCoefDiagramANS read Get_LatBuckCoef_UppFlan_OfSegments write Set_LatBuckCoef_UppFlan_OfSegments;
    property LatBuckCoef_LowFlan_OfSegments: IRDimLatBuckCoefDiagramANS read Get_LatBuckCoef_LowFlan_OfSegments write Set_LatBuckCoef_LowFlan_OfSegments;
    property TransStiffCoordNum: Integer read Get_TransStiffCoordNum;
    property TransStiffCoordsRelative: Integer read Get_TransStiffCoordsRelative write Set_TransStiffCoordsRelative;
    property SeismicAnalysis: Integer read Get_SeismicAnalysis write Set_SeismicAnalysis;
    property SeismicSystem: IRDimSeismicSystemANS read Get_SeismicSystem write Set_SeismicSystem;
    property SeismicElementType: IRDimSeismicElementTypeANS read Get_SeismicElementType write Set_SeismicElementType;
    property FactAnetto: Double read Get_FactAnetto write Set_FactAnetto;
    property ShearLagFactorU: Double read Get_ShearLagFactorU write Set_ShearLagFactorU;
    property TubeControl: Integer read Get_TubeControl write Set_TubeControl;
  end;

// *********************************************************************//
// DispIntf:  IRDimMembParamsANSDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0B6E95CC-22E6-4D0E-A95F-FE86A321F9D3}
// *********************************************************************//
  IRDimMembParamsANSDisp = dispinterface
    ['{0B6E95CC-22E6-4D0E-A95F-FE86A321F9D3}']
    property BucklingDiagramY: IRDimBuckDiagramANS dispid 1610743808;
    property BucklingDiagramZ: IRDimBuckDiagramANS dispid 1610743810;
    property BuckLenghtCoeffY: Double dispid 1610743812;
    property BuckLenghtCoeffZ: Double dispid 1610743814;
    property LatBuck: Integer dispid 1610743816;
    property LatBuckCoef_UppFlan: IRDimLatBuckCoefDiagramANS dispid 1610743818;
    property LatBuckCoef_LowFlan: IRDimLatBuckCoefDiagramANS dispid 1610743820;
    property UserDefLatBuckCoef_UppFlan: Double dispid 1610743822;
    property UserDefLatBuckCoef_LowFlan: Double dispid 1610743824;
    property LatBuckCbCoeffDiagram: IRDimLatBuckCbCoeffDiagramANS dispid 1610743826;
    property LatBuckCbCoeff: Double dispid 1610743828;
    property BucklingDiagramY_OfSegments: IRDimBuckDiagramANS dispid 1610743830;
    property SegmentBucklingDiagramZ_OfSegments: IRDimBuckDiagramANS readonly dispid 1610743832;
    property SegmentBucklingDiagramZ: IRDimBuckDiagramANS writeonly dispid 1610743833;
    property LatBuckCoef_UppFlan_OfSegments: IRDimLatBuckCoefDiagramANS dispid 1610743834;
    property LatBuckCoef_LowFlan_OfSegments: IRDimLatBuckCoefDiagramANS dispid 1610743836;
    procedure TransStiffClear; dispid 1610743838;
    property TransStiffCoordNum: Integer readonly dispid 1610743839;
    property TransStiffCoordsRelative: Integer dispid 1610743840;
    procedure SetTransStiffCoordValue(no: Integer; coord: Double); dispid 1610743842;
    procedure GetTransStiffCoordValue(no: Integer; out coord: Double); dispid 1610743843;
    property SeismicAnalysis: Integer dispid 1610743844;
    property SeismicSystem: IRDimSeismicSystemANS dispid 1610743846;
    property SeismicElementType: IRDimSeismicElementTypeANS dispid 1610743848;
    property FactAnetto: Double dispid 1610743850;
    property ShearLagFactorU: Double dispid 1610743852;
    property TubeControl: Integer dispid 1610743854;
  end;

// *********************************************************************//
// Interface: IRDimCodeResANS_1
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {421EC679-91A4-4F69-8DC2-2785826BCBBD}
// *********************************************************************//
  IRDimCodeResANS_1 = interface(IDispatch)
    ['{421EC679-91A4-4F69-8DC2-2785826BCBBD}']
    function Get_SecFlangeClass: Integer; safecall;
    function Get_SecWebClass: Integer; safecall;
    function Get_TorsSlendX: Double; safecall;
    function Get_BuckSlendY: Double; safecall;
    function Get_BuckSlendZ: Double; safecall;
    function Get_SecUppUppFlangeLocSlendX1: Double; safecall;
    function Get_SecUppUppFlangeLocSlendX2: Double; safecall;
    function Get_SecUppFlangeWidthB: Double; safecall;
    function Get_SecFlangeDepthInMidSpanB1: Double; safecall;
    function Get_SecFlangeDepthInMidSpanB2: Double; safecall;
    function Get_SecHightD: Double; safecall;
    function Get_SecUppFlangeThickT: Double; safecall;
    function Get_SecUppFlangeThickT2: Double; safecall;
    function Get_SecWebHightH: Double; safecall;
    function Get_SecHightAtMembBegH1: Double; safecall;
    function Get_SecHightAtMembBegH2: Double; safecall;
    function Get_SecWebThickTW: Double; safecall;
    function Get_SecFlangeLocSlendX: Double; safecall;
    function Get_SecWebLocSlendX: Double; safecall;
    function Get_LimWidthThickParamKC: Double; safecall;
    function Get_RedFactForSlendCompElemQ: Double; safecall;
    function Get_BuckColSlendParamLamcY: Double; safecall;
    function Get_BuckColSlendParamLamcZ: Double; safecall;
    function Get_LatBuckUnbracedLengthLB: Double; safecall;
    function Get_LatBuckBendCoefCB: Double; safecall;
    function Get_StrengthAxTensPn: Double; safecall;
    function Get_StrengthAxCompPn: Double; safecall;
    function Get_StrengthAxTensCompPn: Double; safecall;
    function Get_LatBuckLimPlastUnbracedLengthLpY: Double; safecall;
    function Get_LatBuckLimPlastUnbracedLengthLpZ: Double; safecall;
    function Get_LatBuckLimUnbracedLengthLrY: Double; safecall;
    function Get_LatBuckLimUnbracedLengthLrZ: Double; safecall;
    function Get_StrengthShearVnY: Double; safecall;
    function Get_StrengthShearVnZ: Double; safecall;
    function Get_LatBuckLimMomentMrY: Double; safecall;
    function Get_LatBuckLimMomentMrZ: Double; safecall;
    function Get_StrengthFlexMnY: Double; safecall;
    function Get_StrengthFlexMnZ: Double; safecall;
    function Get_PlastBendMomMpY: Double; safecall;
    function Get_PlastBendMomMpZ: Double; safecall;
    function Get_CritElastMomMcrY: Double; safecall;
    function Get_CritElastMomMcrZ: Double; safecall;
    function Get_CompResidulStressFR: Double; safecall;
    function Get_CritStressFCR: Double; safecall;
    property SecFlangeClass: Integer read Get_SecFlangeClass;
    property SecWebClass: Integer read Get_SecWebClass;
    property TorsSlendX: Double read Get_TorsSlendX;
    property BuckSlendY: Double read Get_BuckSlendY;
    property BuckSlendZ: Double read Get_BuckSlendZ;
    property SecUppUppFlangeLocSlendX1: Double read Get_SecUppUppFlangeLocSlendX1;
    property SecUppUppFlangeLocSlendX2: Double read Get_SecUppUppFlangeLocSlendX2;
    property SecUppFlangeWidthB: Double read Get_SecUppFlangeWidthB;
    property SecFlangeDepthInMidSpanB1: Double read Get_SecFlangeDepthInMidSpanB1;
    property SecFlangeDepthInMidSpanB2: Double read Get_SecFlangeDepthInMidSpanB2;
    property SecHightD: Double read Get_SecHightD;
    property SecUppFlangeThickT: Double read Get_SecUppFlangeThickT;
    property SecUppFlangeThickT2: Double read Get_SecUppFlangeThickT2;
    property SecWebHightH: Double read Get_SecWebHightH;
    property SecHightAtMembBegH1: Double read Get_SecHightAtMembBegH1;
    property SecHightAtMembBegH2: Double read Get_SecHightAtMembBegH2;
    property SecWebThickTW: Double read Get_SecWebThickTW;
    property SecFlangeLocSlendX: Double read Get_SecFlangeLocSlendX;
    property SecWebLocSlendX: Double read Get_SecWebLocSlendX;
    property LimWidthThickParamKC: Double read Get_LimWidthThickParamKC;
    property RedFactForSlendCompElemQ: Double read Get_RedFactForSlendCompElemQ;
    property BuckColSlendParamLamcY: Double read Get_BuckColSlendParamLamcY;
    property BuckColSlendParamLamcZ: Double read Get_BuckColSlendParamLamcZ;
    property LatBuckUnbracedLengthLB: Double read Get_LatBuckUnbracedLengthLB;
    property LatBuckBendCoefCB: Double read Get_LatBuckBendCoefCB;
    property StrengthAxTensPn: Double read Get_StrengthAxTensPn;
    property StrengthAxCompPn: Double read Get_StrengthAxCompPn;
    property StrengthAxTensCompPn: Double read Get_StrengthAxTensCompPn;
    property LatBuckLimPlastUnbracedLengthLpY: Double read Get_LatBuckLimPlastUnbracedLengthLpY;
    property LatBuckLimPlastUnbracedLengthLpZ: Double read Get_LatBuckLimPlastUnbracedLengthLpZ;
    property LatBuckLimUnbracedLengthLrY: Double read Get_LatBuckLimUnbracedLengthLrY;
    property LatBuckLimUnbracedLengthLrZ: Double read Get_LatBuckLimUnbracedLengthLrZ;
    property StrengthShearVnY: Double read Get_StrengthShearVnY;
    property StrengthShearVnZ: Double read Get_StrengthShearVnZ;
    property LatBuckLimMomentMrY: Double read Get_LatBuckLimMomentMrY;
    property LatBuckLimMomentMrZ: Double read Get_LatBuckLimMomentMrZ;
    property StrengthFlexMnY: Double read Get_StrengthFlexMnY;
    property StrengthFlexMnZ: Double read Get_StrengthFlexMnZ;
    property PlastBendMomMpY: Double read Get_PlastBendMomMpY;
    property PlastBendMomMpZ: Double read Get_PlastBendMomMpZ;
    property CritElastMomMcrY: Double read Get_CritElastMomMcrY;
    property CritElastMomMcrZ: Double read Get_CritElastMomMcrZ;
    property CompResidulStressFR: Double read Get_CompResidulStressFR;
    property CritStressFCR: Double read Get_CritStressFCR;
  end;

// *********************************************************************//
// DispIntf:  IRDimCodeResANS_1Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {421EC679-91A4-4F69-8DC2-2785826BCBBD}
// *********************************************************************//
  IRDimCodeResANS_1Disp = dispinterface
    ['{421EC679-91A4-4F69-8DC2-2785826BCBBD}']
    property SecFlangeClass: Integer readonly dispid 1610743808;
    property SecWebClass: Integer readonly dispid 1610743809;
    property TorsSlendX: Double readonly dispid 1610743810;
    property BuckSlendY: Double readonly dispid 1610743811;
    property BuckSlendZ: Double readonly dispid 1610743812;
    property SecUppUppFlangeLocSlendX1: Double readonly dispid 1610743813;
    property SecUppUppFlangeLocSlendX2: Double readonly dispid 1610743814;
    property SecUppFlangeWidthB: Double readonly dispid 1610743815;
    property SecFlangeDepthInMidSpanB1: Double readonly dispid 1610743816;
    property SecFlangeDepthInMidSpanB2: Double readonly dispid 1610743817;
    property SecHightD: Double readonly dispid 1610743818;
    property SecUppFlangeThickT: Double readonly dispid 1610743819;
    property SecUppFlangeThickT2: Double readonly dispid 1610743820;
    property SecWebHightH: Double readonly dispid 1610743821;
    property SecHightAtMembBegH1: Double readonly dispid 1610743822;
    property SecHightAtMembBegH2: Double readonly dispid 1610743823;
    property SecWebThickTW: Double readonly dispid 1610743824;
    property SecFlangeLocSlendX: Double readonly dispid 1610743825;
    property SecWebLocSlendX: Double readonly dispid 1610743826;
    property LimWidthThickParamKC: Double readonly dispid 1610743827;
    property RedFactForSlendCompElemQ: Double readonly dispid 1610743828;
    property BuckColSlendParamLamcY: Double readonly dispid 1610743829;
    property BuckColSlendParamLamcZ: Double readonly dispid 1610743830;
    property LatBuckUnbracedLengthLB: Double readonly dispid 1610743831;
    property LatBuckBendCoefCB: Double readonly dispid 1610743832;
    property StrengthAxTensPn: Double readonly dispid 1610743833;
    property StrengthAxCompPn: Double readonly dispid 1610743834;
    property StrengthAxTensCompPn: Double readonly dispid 1610743835;
    property LatBuckLimPlastUnbracedLengthLpY: Double readonly dispid 1610743836;
    property LatBuckLimPlastUnbracedLengthLpZ: Double readonly dispid 1610743837;
    property LatBuckLimUnbracedLengthLrY: Double readonly dispid 1610743838;
    property LatBuckLimUnbracedLengthLrZ: Double readonly dispid 1610743839;
    property StrengthShearVnY: Double readonly dispid 1610743840;
    property StrengthShearVnZ: Double readonly dispid 1610743841;
    property LatBuckLimMomentMrY: Double readonly dispid 1610743842;
    property LatBuckLimMomentMrZ: Double readonly dispid 1610743843;
    property StrengthFlexMnY: Double readonly dispid 1610743844;
    property StrengthFlexMnZ: Double readonly dispid 1610743845;
    property PlastBendMomMpY: Double readonly dispid 1610743846;
    property PlastBendMomMpZ: Double readonly dispid 1610743847;
    property CritElastMomMcrY: Double readonly dispid 1610743848;
    property CritElastMomMcrZ: Double readonly dispid 1610743849;
    property CompResidulStressFR: Double readonly dispid 1610743850;
    property CritStressFCR: Double readonly dispid 1610743851;
  end;

// *********************************************************************//
// Interface: IRDimCodeResANS_2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3CEFAEF6-764D-4B0B-A4F5-0F5C08E2D217}
// *********************************************************************//
  IRDimCodeResANS_2 = interface(IDispatch)
    ['{3CEFAEF6-764D-4B0B-A4F5-0F5C08E2D217}']
    function Get_SecPlastModulusWplY: Double; safecall;
    function Get_SecPlastModulusWplZ: Double; safecall;
    function Get_SecElastModulusWelY: Double; safecall;
    function Get_SecElastModulusWelZ: Double; safecall;
    function Get_SecCompElastModulusWelYC: Double; safecall;
    function Get_SecTensElastModulusWelYC: Double; safecall;
    function Get_SecCompElastModulusWelZC: Double; safecall;
    function Get_SecTensElastModulusWelZC: Double; safecall;
    function Get_UtilFactor: Double; safecall;
    function Get_UtilFactorShearZ: Double; safecall;
    function Get_StressTorsShearY: Double; safecall;
    function Get_StressTorsShearZ: Double; safecall;
    function Get_UpOrLowFlanInCompress: Integer; safecall;
    function Get_StressVarProfFbg: Double; safecall;
    function Get_StressVarProfFsg: Double; safecall;
    function Get_StressVarProfFwg: Double; safecall;
    function Get_TorsInertiaMom: Double; safecall;
    function Get_StressComprFa: Double; safecall;
    function Get_StressShearFvY: Double; safecall;
    function Get_StressShearFvZ: Double; safecall;
    function Get_StressTorsFvT: Double; safecall;
    function Get_StressFlexComprFlanFbcY: Double; safecall;
    function Get_StressFlexComprFlanFbcZ: Double; safecall;
    function Get_StressFlexTensFlanFbcY: Double; safecall;
    function Get_StressFlexTensFlanFbcZ: Double; safecall;
    function Get_StressFlexFbY: Double; safecall;
    function Get_StressFlexFbZ: Double; safecall;
    function Get_SecCompFlangeClass: Integer; safecall;
    function Get_SecCompWebClass: Integer; safecall;
    function Get_SecFlexFlangeClassY: Integer; safecall;
    function Get_SecFlexWebClassY: Integer; safecall;
    function Get_SecFlexFlangeClassZ: Integer; safecall;
    function Get_SecFlexWebClassZ: Integer; safecall;
    function Get_SecClass: Integer; safecall;
    function Get_SecFlangeSlend: Double; safecall;
    function Get_SecLimFlanSlendNonCompactXrN: Double; safecall;
    function Get_SecLimFlanSlendCompactXrN: Double; safecall;
    function Get_SecLimFlanSlendNonCompactXrmY: Double; safecall;
    function Get_SecLimFlanSlendCompactXpmY: Double; safecall;
    function Get_SecLimFlanSlendNonCompactXrmZ: Double; safecall;
    function Get_SecLimFlanSlendCompactXpmZ: Double; safecall;
    function Get_SecWebSlend: Double; safecall;
    function Get_SecLimWebSlendNonCompactYrN: Double; safecall;
    function Get_SecLimWebSlendCompactYrN: Double; safecall;
    function Get_SecLimWebSlendNonCompactYrmY: Double; safecall;
    function Get_SecLimWebSlendCompactYpmY: Double; safecall;
    function Get_SecLimWebSlendNonCompactYrmZ: Double; safecall;
    function Get_SecLimWebSlendCompactYpmZ: Double; safecall;
    function Get_IsLrfdMethod: Integer; safecall;
    function Get_SafetyFactorTensFiOmT: Double; safecall;
    function Get_SafetyFactorTensFiOmTu: Double; safecall;
    function Get_SafetyFactorCompFiOmC: Double; safecall;
    function Get_SafetyFactorFlexFiOmB: Double; safecall;
    function Get_SafetyFactorShearFiOmV: Double; safecall;
    function Get_EffAreaAe: Double; safecall;
    function Get_ElastCritBuckStressFeY: Double; safecall;
    function Get_ElastCritBuckStressFeZ: Double; safecall;
    function Get_ElastCritBuckStressFeX: Double; safecall;
    function Get_FlexBuckStressFcrY: Double; safecall;
    function Get_FlexBuckStressFcrZ: Double; safecall;
    function Get_FlexBuckStressFcrX: Double; safecall;
    function Get_FlexBuckStressFcrvY: Double; safecall;
    function Get_FlexBuckStressFcrvZ: Double; safecall;
    function Get_StrengthAxCompPnY: Double; safecall;
    function Get_StrengthAxCompPnZ: Double; safecall;
    function Get_StrengthAxCompPnX: Double; safecall;
    property SecPlastModulusWplY: Double read Get_SecPlastModulusWplY;
    property SecPlastModulusWplZ: Double read Get_SecPlastModulusWplZ;
    property SecElastModulusWelY: Double read Get_SecElastModulusWelY;
    property SecElastModulusWelZ: Double read Get_SecElastModulusWelZ;
    property SecCompElastModulusWelYC: Double read Get_SecCompElastModulusWelYC;
    property SecTensElastModulusWelYC: Double read Get_SecTensElastModulusWelYC;
    property SecCompElastModulusWelZC: Double read Get_SecCompElastModulusWelZC;
    property SecTensElastModulusWelZC: Double read Get_SecTensElastModulusWelZC;
    property UtilFactor: Double read Get_UtilFactor;
    property UtilFactorShearZ: Double read Get_UtilFactorShearZ;
    property StressTorsShearY: Double read Get_StressTorsShearY;
    property StressTorsShearZ: Double read Get_StressTorsShearZ;
    property UpOrLowFlanInCompress: Integer read Get_UpOrLowFlanInCompress;
    property StressVarProfFbg: Double read Get_StressVarProfFbg;
    property StressVarProfFsg: Double read Get_StressVarProfFsg;
    property StressVarProfFwg: Double read Get_StressVarProfFwg;
    property TorsInertiaMom: Double read Get_TorsInertiaMom;
    property StressComprFa: Double read Get_StressComprFa;
    property StressShearFvY: Double read Get_StressShearFvY;
    property StressShearFvZ: Double read Get_StressShearFvZ;
    property StressTorsFvT: Double read Get_StressTorsFvT;
    property StressFlexComprFlanFbcY: Double read Get_StressFlexComprFlanFbcY;
    property StressFlexComprFlanFbcZ: Double read Get_StressFlexComprFlanFbcZ;
    property StressFlexTensFlanFbcY: Double read Get_StressFlexTensFlanFbcY;
    property StressFlexTensFlanFbcZ: Double read Get_StressFlexTensFlanFbcZ;
    property StressFlexFbY: Double read Get_StressFlexFbY;
    property StressFlexFbZ: Double read Get_StressFlexFbZ;
    property SecCompFlangeClass: Integer read Get_SecCompFlangeClass;
    property SecCompWebClass: Integer read Get_SecCompWebClass;
    property SecFlexFlangeClassY: Integer read Get_SecFlexFlangeClassY;
    property SecFlexWebClassY: Integer read Get_SecFlexWebClassY;
    property SecFlexFlangeClassZ: Integer read Get_SecFlexFlangeClassZ;
    property SecFlexWebClassZ: Integer read Get_SecFlexWebClassZ;
    property SecClass: Integer read Get_SecClass;
    property SecFlangeSlend: Double read Get_SecFlangeSlend;
    property SecLimFlanSlendNonCompactXrN: Double read Get_SecLimFlanSlendNonCompactXrN;
    property SecLimFlanSlendCompactXrN: Double read Get_SecLimFlanSlendCompactXrN;
    property SecLimFlanSlendNonCompactXrmY: Double read Get_SecLimFlanSlendNonCompactXrmY;
    property SecLimFlanSlendCompactXpmY: Double read Get_SecLimFlanSlendCompactXpmY;
    property SecLimFlanSlendNonCompactXrmZ: Double read Get_SecLimFlanSlendNonCompactXrmZ;
    property SecLimFlanSlendCompactXpmZ: Double read Get_SecLimFlanSlendCompactXpmZ;
    property SecWebSlend: Double read Get_SecWebSlend;
    property SecLimWebSlendNonCompactYrN: Double read Get_SecLimWebSlendNonCompactYrN;
    property SecLimWebSlendCompactYrN: Double read Get_SecLimWebSlendCompactYrN;
    property SecLimWebSlendNonCompactYrmY: Double read Get_SecLimWebSlendNonCompactYrmY;
    property SecLimWebSlendCompactYpmY: Double read Get_SecLimWebSlendCompactYpmY;
    property SecLimWebSlendNonCompactYrmZ: Double read Get_SecLimWebSlendNonCompactYrmZ;
    property SecLimWebSlendCompactYpmZ: Double read Get_SecLimWebSlendCompactYpmZ;
    property IsLrfdMethod: Integer read Get_IsLrfdMethod;
    property SafetyFactorTensFiOmT: Double read Get_SafetyFactorTensFiOmT;
    property SafetyFactorTensFiOmTu: Double read Get_SafetyFactorTensFiOmTu;
    property SafetyFactorCompFiOmC: Double read Get_SafetyFactorCompFiOmC;
    property SafetyFactorFlexFiOmB: Double read Get_SafetyFactorFlexFiOmB;
    property SafetyFactorShearFiOmV: Double read Get_SafetyFactorShearFiOmV;
    property EffAreaAe: Double read Get_EffAreaAe;
    property ElastCritBuckStressFeY: Double read Get_ElastCritBuckStressFeY;
    property ElastCritBuckStressFeZ: Double read Get_ElastCritBuckStressFeZ;
    property ElastCritBuckStressFeX: Double read Get_ElastCritBuckStressFeX;
    property FlexBuckStressFcrY: Double read Get_FlexBuckStressFcrY;
    property FlexBuckStressFcrZ: Double read Get_FlexBuckStressFcrZ;
    property FlexBuckStressFcrX: Double read Get_FlexBuckStressFcrX;
    property FlexBuckStressFcrvY: Double read Get_FlexBuckStressFcrvY;
    property FlexBuckStressFcrvZ: Double read Get_FlexBuckStressFcrvZ;
    property StrengthAxCompPnY: Double read Get_StrengthAxCompPnY;
    property StrengthAxCompPnZ: Double read Get_StrengthAxCompPnZ;
    property StrengthAxCompPnX: Double read Get_StrengthAxCompPnX;
  end;

// *********************************************************************//
// DispIntf:  IRDimCodeResANS_2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3CEFAEF6-764D-4B0B-A4F5-0F5C08E2D217}
// *********************************************************************//
  IRDimCodeResANS_2Disp = dispinterface
    ['{3CEFAEF6-764D-4B0B-A4F5-0F5C08E2D217}']
    property SecPlastModulusWplY: Double readonly dispid 1610743808;
    property SecPlastModulusWplZ: Double readonly dispid 1610743809;
    property SecElastModulusWelY: Double readonly dispid 1610743810;
    property SecElastModulusWelZ: Double readonly dispid 1610743811;
    property SecCompElastModulusWelYC: Double readonly dispid 1610743812;
    property SecTensElastModulusWelYC: Double readonly dispid 1610743813;
    property SecCompElastModulusWelZC: Double readonly dispid 1610743814;
    property SecTensElastModulusWelZC: Double readonly dispid 1610743815;
    property UtilFactor: Double readonly dispid 1610743816;
    property UtilFactorShearZ: Double readonly dispid 1610743817;
    property StressTorsShearY: Double readonly dispid 1610743818;
    property StressTorsShearZ: Double readonly dispid 1610743819;
    property UpOrLowFlanInCompress: Integer readonly dispid 1610743820;
    property StressVarProfFbg: Double readonly dispid 1610743821;
    property StressVarProfFsg: Double readonly dispid 1610743822;
    property StressVarProfFwg: Double readonly dispid 1610743823;
    property TorsInertiaMom: Double readonly dispid 1610743824;
    property StressComprFa: Double readonly dispid 1610743825;
    property StressShearFvY: Double readonly dispid 1610743826;
    property StressShearFvZ: Double readonly dispid 1610743827;
    property StressTorsFvT: Double readonly dispid 1610743828;
    property StressFlexComprFlanFbcY: Double readonly dispid 1610743829;
    property StressFlexComprFlanFbcZ: Double readonly dispid 1610743830;
    property StressFlexTensFlanFbcY: Double readonly dispid 1610743831;
    property StressFlexTensFlanFbcZ: Double readonly dispid 1610743832;
    property StressFlexFbY: Double readonly dispid 1610743833;
    property StressFlexFbZ: Double readonly dispid 1610743834;
    property SecCompFlangeClass: Integer readonly dispid 1610743835;
    property SecCompWebClass: Integer readonly dispid 1610743836;
    property SecFlexFlangeClassY: Integer readonly dispid 1610743837;
    property SecFlexWebClassY: Integer readonly dispid 1610743838;
    property SecFlexFlangeClassZ: Integer readonly dispid 1610743839;
    property SecFlexWebClassZ: Integer readonly dispid 1610743840;
    property SecClass: Integer readonly dispid 1610743841;
    property SecFlangeSlend: Double readonly dispid 1610743842;
    property SecLimFlanSlendNonCompactXrN: Double readonly dispid 1610743843;
    property SecLimFlanSlendCompactXrN: Double readonly dispid 1610743844;
    property SecLimFlanSlendNonCompactXrmY: Double readonly dispid 1610743845;
    property SecLimFlanSlendCompactXpmY: Double readonly dispid 1610743846;
    property SecLimFlanSlendNonCompactXrmZ: Double readonly dispid 1610743847;
    property SecLimFlanSlendCompactXpmZ: Double readonly dispid 1610743848;
    property SecWebSlend: Double readonly dispid 1610743849;
    property SecLimWebSlendNonCompactYrN: Double readonly dispid 1610743850;
    property SecLimWebSlendCompactYrN: Double readonly dispid 1610743851;
    property SecLimWebSlendNonCompactYrmY: Double readonly dispid 1610743852;
    property SecLimWebSlendCompactYpmY: Double readonly dispid 1610743853;
    property SecLimWebSlendNonCompactYrmZ: Double readonly dispid 1610743854;
    property SecLimWebSlendCompactYpmZ: Double readonly dispid 1610743855;
    property IsLrfdMethod: Integer readonly dispid 1610743856;
    property SafetyFactorTensFiOmT: Double readonly dispid 1610743857;
    property SafetyFactorTensFiOmTu: Double readonly dispid 1610743858;
    property SafetyFactorCompFiOmC: Double readonly dispid 1610743859;
    property SafetyFactorFlexFiOmB: Double readonly dispid 1610743860;
    property SafetyFactorShearFiOmV: Double readonly dispid 1610743861;
    property EffAreaAe: Double readonly dispid 1610743862;
    property ElastCritBuckStressFeY: Double readonly dispid 1610743863;
    property ElastCritBuckStressFeZ: Double readonly dispid 1610743864;
    property ElastCritBuckStressFeX: Double readonly dispid 1610743865;
    property FlexBuckStressFcrY: Double readonly dispid 1610743866;
    property FlexBuckStressFcrZ: Double readonly dispid 1610743867;
    property FlexBuckStressFcrX: Double readonly dispid 1610743868;
    property FlexBuckStressFcrvY: Double readonly dispid 1610743869;
    property FlexBuckStressFcrvZ: Double readonly dispid 1610743870;
    property StrengthAxCompPnY: Double readonly dispid 1610743871;
    property StrengthAxCompPnZ: Double readonly dispid 1610743872;
    property StrengthAxCompPnX: Double readonly dispid 1610743873;
  end;

// *********************************************************************//
// Interface: IRDimCodeResANS_3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E9A757E2-2EAA-4E5F-B6AA-96918EEF979D}
// *********************************************************************//
  IRDimCodeResANS_3 = interface(IDispatch)
    ['{E9A757E2-2EAA-4E5F-B6AA-96918EEF979D}']
    function Get_IsAnyInstability: Integer; safecall;
    function Get_IsTensFieldActPerm: Integer; safecall;
    function Get_IsBuckY: Integer; safecall;
    function Get_IsBuckZ: Integer; safecall;
    function Get_CompFlanInerIzc: Double; safecall;
    function Get_StrengthTorsTn: Double; safecall;
    function Get_UtilFactorH11A: Double; safecall;
    function Get_UtilFactorH11B: Double; safecall;
    function Get_UtilFactorH12A: Double; safecall;
    function Get_UtilFactorH12B: Double; safecall;
    function Get_UtilFactorH21: Double; safecall;
    function Get_UtilFactorH36: Double; safecall;
    function Get_UtilFactorShear: Double; safecall;
    function Get_RedFactForSlendCompElemQa: Double; safecall;
    function Get_RedFactForSlendCompElemQs: Double; safecall;
    function Get_WarpingConstCw: Double; safecall;
    function Get_MonoSymParamRM: Double; safecall;
    function Get_WebPlasFactCompRpc: Double; safecall;
    function Get_WebPlasFactTensRpc: Double; safecall;
    function Get_BendStrenRedFactRpg: Double; safecall;
    function Get_StrengthFlexYealdMnY: Double; safecall;
    function Get_StrengthFlexYealdMnZ: Double; safecall;
    function Get_StrengthFlexLtbMnY: Double; safecall;
    function Get_StrengthFlexLtbdMnZ: Double; safecall;
    function Get_StrengthFlexFlbMnY: Double; safecall;
    function Get_StrengthFlexFlbMnZ: Double; safecall;
    function Get_StrengthFlexWlbMnY: Double; safecall;
    function Get_StrengthFlexWlbMnZ: Double; safecall;
    function Get_StrengthFlexLlbMnY: Double; safecall;
    function Get_StrengthFlexLlbMnZ: Double; safecall;
    function Get_StrengthFlexLbMnY: Double; safecall;
    function Get_StrengthFlexLbMnZ: Double; safecall;
    function Get_StrengthFlexTfyMnY: Double; safecall;
    function Get_StrengthFlexTfyMnZ: Double; safecall;
    function Get_AreaShearY: Double; safecall;
    function Get_AreaShearZ: Double; safecall;
    function Get_ShearCoefCvY: Double; safecall;
    function Get_ShearCoefCvZ: Double; safecall;
    function Get_ShearWebBuckCoefKvY: Double; safecall;
    function Get_ShearWebBuckCoefKvZ: Double; safecall;
    function Get_CalcFNum: Integer; safecall;
    function Get_StressCritLtb: Double; safecall;
    function Get_AlwbCompStressFa: Double; safecall;
    function Get_AlwbCompStressFbY: Double; safecall;
    function Get_AlwbCompStressFbZ: Double; safecall;
    function Get_StiffGap: Double; safecall;
    property IsAnyInstability: Integer read Get_IsAnyInstability;
    property IsTensFieldActPerm: Integer read Get_IsTensFieldActPerm;
    property IsBuckY: Integer read Get_IsBuckY;
    property IsBuckZ: Integer read Get_IsBuckZ;
    property CompFlanInerIzc: Double read Get_CompFlanInerIzc;
    property StrengthTorsTn: Double read Get_StrengthTorsTn;
    property UtilFactorH11A: Double read Get_UtilFactorH11A;
    property UtilFactorH11B: Double read Get_UtilFactorH11B;
    property UtilFactorH12A: Double read Get_UtilFactorH12A;
    property UtilFactorH12B: Double read Get_UtilFactorH12B;
    property UtilFactorH21: Double read Get_UtilFactorH21;
    property UtilFactorH36: Double read Get_UtilFactorH36;
    property UtilFactorShear: Double read Get_UtilFactorShear;
    property RedFactForSlendCompElemQa: Double read Get_RedFactForSlendCompElemQa;
    property RedFactForSlendCompElemQs: Double read Get_RedFactForSlendCompElemQs;
    property WarpingConstCw: Double read Get_WarpingConstCw;
    property MonoSymParamRM: Double read Get_MonoSymParamRM;
    property WebPlasFactCompRpc: Double read Get_WebPlasFactCompRpc;
    property WebPlasFactTensRpc: Double read Get_WebPlasFactTensRpc;
    property BendStrenRedFactRpg: Double read Get_BendStrenRedFactRpg;
    property StrengthFlexYealdMnY: Double read Get_StrengthFlexYealdMnY;
    property StrengthFlexYealdMnZ: Double read Get_StrengthFlexYealdMnZ;
    property StrengthFlexLtbMnY: Double read Get_StrengthFlexLtbMnY;
    property StrengthFlexLtbdMnZ: Double read Get_StrengthFlexLtbdMnZ;
    property StrengthFlexFlbMnY: Double read Get_StrengthFlexFlbMnY;
    property StrengthFlexFlbMnZ: Double read Get_StrengthFlexFlbMnZ;
    property StrengthFlexWlbMnY: Double read Get_StrengthFlexWlbMnY;
    property StrengthFlexWlbMnZ: Double read Get_StrengthFlexWlbMnZ;
    property StrengthFlexLlbMnY: Double read Get_StrengthFlexLlbMnY;
    property StrengthFlexLlbMnZ: Double read Get_StrengthFlexLlbMnZ;
    property StrengthFlexLbMnY: Double read Get_StrengthFlexLbMnY;
    property StrengthFlexLbMnZ: Double read Get_StrengthFlexLbMnZ;
    property StrengthFlexTfyMnY: Double read Get_StrengthFlexTfyMnY;
    property StrengthFlexTfyMnZ: Double read Get_StrengthFlexTfyMnZ;
    property AreaShearY: Double read Get_AreaShearY;
    property AreaShearZ: Double read Get_AreaShearZ;
    property ShearCoefCvY: Double read Get_ShearCoefCvY;
    property ShearCoefCvZ: Double read Get_ShearCoefCvZ;
    property ShearWebBuckCoefKvY: Double read Get_ShearWebBuckCoefKvY;
    property ShearWebBuckCoefKvZ: Double read Get_ShearWebBuckCoefKvZ;
    property CalcFNum: Integer read Get_CalcFNum;
    property StressCritLtb: Double read Get_StressCritLtb;
    property AlwbCompStressFa: Double read Get_AlwbCompStressFa;
    property AlwbCompStressFbY: Double read Get_AlwbCompStressFbY;
    property AlwbCompStressFbZ: Double read Get_AlwbCompStressFbZ;
    property StiffGap: Double read Get_StiffGap;
  end;

// *********************************************************************//
// DispIntf:  IRDimCodeResANS_3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E9A757E2-2EAA-4E5F-B6AA-96918EEF979D}
// *********************************************************************//
  IRDimCodeResANS_3Disp = dispinterface
    ['{E9A757E2-2EAA-4E5F-B6AA-96918EEF979D}']
    property IsAnyInstability: Integer readonly dispid 1610743808;
    property IsTensFieldActPerm: Integer readonly dispid 1610743809;
    property IsBuckY: Integer readonly dispid 1610743810;
    property IsBuckZ: Integer readonly dispid 1610743811;
    property CompFlanInerIzc: Double readonly dispid 1610743812;
    property StrengthTorsTn: Double readonly dispid 1610743813;
    property UtilFactorH11A: Double readonly dispid 1610743814;
    property UtilFactorH11B: Double readonly dispid 1610743815;
    property UtilFactorH12A: Double readonly dispid 1610743816;
    property UtilFactorH12B: Double readonly dispid 1610743817;
    property UtilFactorH21: Double readonly dispid 1610743818;
    property UtilFactorH36: Double readonly dispid 1610743819;
    property UtilFactorShear: Double readonly dispid 1610743820;
    property RedFactForSlendCompElemQa: Double readonly dispid 1610743821;
    property RedFactForSlendCompElemQs: Double readonly dispid 1610743822;
    property WarpingConstCw: Double readonly dispid 1610743823;
    property MonoSymParamRM: Double readonly dispid 1610743824;
    property WebPlasFactCompRpc: Double readonly dispid 1610743825;
    property WebPlasFactTensRpc: Double readonly dispid 1610743826;
    property BendStrenRedFactRpg: Double readonly dispid 1610743827;
    property StrengthFlexYealdMnY: Double readonly dispid 1610743828;
    property StrengthFlexYealdMnZ: Double readonly dispid 1610743829;
    property StrengthFlexLtbMnY: Double readonly dispid 1610743830;
    property StrengthFlexLtbdMnZ: Double readonly dispid 1610743831;
    property StrengthFlexFlbMnY: Double readonly dispid 1610743832;
    property StrengthFlexFlbMnZ: Double readonly dispid 1610743833;
    property StrengthFlexWlbMnY: Double readonly dispid 1610743834;
    property StrengthFlexWlbMnZ: Double readonly dispid 1610743835;
    property StrengthFlexLlbMnY: Double readonly dispid 1610743836;
    property StrengthFlexLlbMnZ: Double readonly dispid 1610743837;
    property StrengthFlexLbMnY: Double readonly dispid 1610743838;
    property StrengthFlexLbMnZ: Double readonly dispid 1610743839;
    property StrengthFlexTfyMnY: Double readonly dispid 1610743840;
    property StrengthFlexTfyMnZ: Double readonly dispid 1610743841;
    property AreaShearY: Double readonly dispid 1610743842;
    property AreaShearZ: Double readonly dispid 1610743843;
    property ShearCoefCvY: Double readonly dispid 1610743844;
    property ShearCoefCvZ: Double readonly dispid 1610743845;
    property ShearWebBuckCoefKvY: Double readonly dispid 1610743846;
    property ShearWebBuckCoefKvZ: Double readonly dispid 1610743847;
    property CalcFNum: Integer readonly dispid 1610743848;
    property StressCritLtb: Double readonly dispid 1610743849;
    property AlwbCompStressFa: Double readonly dispid 1610743850;
    property AlwbCompStressFbY: Double readonly dispid 1610743851;
    property AlwbCompStressFbZ: Double readonly dispid 1610743852;
    property StiffGap: Double readonly dispid 1610743853;
  end;

// *********************************************************************//
// Interface: IRDimMembParamsCM66
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {34C1F17A-9D20-4775-B57A-B154A033C1FA}
// *********************************************************************//
  IRDimMembParamsCM66 = interface(IDispatch)
    ['{34C1F17A-9D20-4775-B57A-B154A033C1FA}']
    function Get_BucklingDiagramY: IRDimBuckDiagramCM66; safecall;
    procedure Set_BucklingDiagramY(pVal: IRDimBuckDiagramCM66); safecall;
    function Get_BucklingDiagramZ: IRDimBuckDiagramCM66; safecall;
    procedure Set_BucklingDiagramZ(pVal: IRDimBuckDiagramCM66); safecall;
    function Get_BuckLenghtCoeffY: Double; safecall;
    procedure Set_BuckLenghtCoeffY(pVal: Double); safecall;
    function Get_BuckLenghtCoeffZ: Double; safecall;
    procedure Set_BuckLenghtCoeffZ(pVal: Double); safecall;
    function Get_LoadTypeMomMcY: Double; safecall;
    procedure Set_LoadTypeMomMcY(pVal: Double); safecall;
    function Get_LoadTypeMomMcZ: Double; safecall;
    procedure Set_LoadTypeMomMcZ(pVal: Double); safecall;
    function Get_LoadTypeDistY: Double; safecall;
    procedure Set_LoadTypeDistY(pVal: Double); safecall;
    function Get_LoadTypeDistZ: Double; safecall;
    procedure Set_LoadTypeDistZ(pVal: Double); safecall;
    function Get_LatBuckType: IRDimLaterBuckTypeCM66; safecall;
    procedure Set_LatBuckType(pVal: IRDimLaterBuckTypeCM66); safecall;
    function Get_LoadLevel: IRDimLoadLevelCM66; safecall;
    procedure Set_LoadLevel(pVal: IRDimLoadLevelCM66); safecall;
    function Get_LoadLevelValue: Double; safecall;
    procedure Set_LoadLevelValue(pVal: Double); safecall;
    function Get_LatBuckCoef_LowFlan: IRDimLatBuckCoefDiagramCM66; safecall;
    procedure Set_LatBuckCoef_LowFlan(pVal: IRDimLatBuckCoefDiagramCM66); safecall;
    function Get_LatBuckCoef_UppFlan: IRDimLatBuckCoefDiagramCM66; safecall;
    procedure Set_LatBuckCoef_UppFlan(pVal: IRDimLatBuckCoefDiagramCM66); safecall;
    function Get_UserDefLatBuckCoef_LowFlan: Double; safecall;
    procedure Set_UserDefLatBuckCoef_LowFlan(pVal: Double); safecall;
    function Get_UserDefLatBuckCoef_UppFlan: Double; safecall;
    procedure Set_UserDefLatBuckCoef_UppFlan(pVal: Double); safecall;
    function Get_LoadTypeY: IRDimLoadTypeCM66; safecall;
    procedure Set_LoadTypeY(pVal: IRDimLoadTypeCM66); safecall;
    function Get_LoadTypeZ: IRDimLoadTypeCM66; safecall;
    procedure Set_LoadTypeZ(pVal: IRDimLoadTypeCM66); safecall;
    function Get_TensAreaNetGros: Double; safecall;
    procedure Set_TensAreaNetGros(pVal: Double); safecall;
    function Get_TubeControl: Integer; safecall;
    procedure Set_TubeControl(pVal: Integer); safecall;
    function Get_AmplificationCoeff: IRDimAmplificationCM66; safecall;
    procedure Set_AmplificationCoeff(pVal: IRDimAmplificationCM66); safecall;
    property BucklingDiagramY: IRDimBuckDiagramCM66 read Get_BucklingDiagramY write Set_BucklingDiagramY;
    property BucklingDiagramZ: IRDimBuckDiagramCM66 read Get_BucklingDiagramZ write Set_BucklingDiagramZ;
    property BuckLenghtCoeffY: Double read Get_BuckLenghtCoeffY write Set_BuckLenghtCoeffY;
    property BuckLenghtCoeffZ: Double read Get_BuckLenghtCoeffZ write Set_BuckLenghtCoeffZ;
    property LoadTypeMomMcY: Double read Get_LoadTypeMomMcY write Set_LoadTypeMomMcY;
    property LoadTypeMomMcZ: Double read Get_LoadTypeMomMcZ write Set_LoadTypeMomMcZ;
    property LoadTypeDistY: Double read Get_LoadTypeDistY write Set_LoadTypeDistY;
    property LoadTypeDistZ: Double read Get_LoadTypeDistZ write Set_LoadTypeDistZ;
    property LatBuckType: IRDimLaterBuckTypeCM66 read Get_LatBuckType write Set_LatBuckType;
    property LoadLevel: IRDimLoadLevelCM66 read Get_LoadLevel write Set_LoadLevel;
    property LoadLevelValue: Double read Get_LoadLevelValue write Set_LoadLevelValue;
    property LatBuckCoef_LowFlan: IRDimLatBuckCoefDiagramCM66 read Get_LatBuckCoef_LowFlan write Set_LatBuckCoef_LowFlan;
    property LatBuckCoef_UppFlan: IRDimLatBuckCoefDiagramCM66 read Get_LatBuckCoef_UppFlan write Set_LatBuckCoef_UppFlan;
    property UserDefLatBuckCoef_LowFlan: Double read Get_UserDefLatBuckCoef_LowFlan write Set_UserDefLatBuckCoef_LowFlan;
    property UserDefLatBuckCoef_UppFlan: Double read Get_UserDefLatBuckCoef_UppFlan write Set_UserDefLatBuckCoef_UppFlan;
    property LoadTypeY: IRDimLoadTypeCM66 read Get_LoadTypeY write Set_LoadTypeY;
    property LoadTypeZ: IRDimLoadTypeCM66 read Get_LoadTypeZ write Set_LoadTypeZ;
    property TensAreaNetGros: Double read Get_TensAreaNetGros write Set_TensAreaNetGros;
    property TubeControl: Integer read Get_TubeControl write Set_TubeControl;
    property AmplificationCoeff: IRDimAmplificationCM66 read Get_AmplificationCoeff write Set_AmplificationCoeff;
  end;

// *********************************************************************//
// DispIntf:  IRDimMembParamsCM66Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {34C1F17A-9D20-4775-B57A-B154A033C1FA}
// *********************************************************************//
  IRDimMembParamsCM66Disp = dispinterface
    ['{34C1F17A-9D20-4775-B57A-B154A033C1FA}']
    property BucklingDiagramY: IRDimBuckDiagramCM66 dispid 1610743808;
    property BucklingDiagramZ: IRDimBuckDiagramCM66 dispid 1610743810;
    property BuckLenghtCoeffY: Double dispid 1610743812;
    property BuckLenghtCoeffZ: Double dispid 1610743814;
    property LoadTypeMomMcY: Double dispid 1610743816;
    property LoadTypeMomMcZ: Double dispid 1610743818;
    property LoadTypeDistY: Double dispid 1610743820;
    property LoadTypeDistZ: Double dispid 1610743822;
    property LatBuckType: IRDimLaterBuckTypeCM66 dispid 1610743824;
    property LoadLevel: IRDimLoadLevelCM66 dispid 1610743826;
    property LoadLevelValue: Double dispid 1610743828;
    property LatBuckCoef_LowFlan: IRDimLatBuckCoefDiagramCM66 dispid 1610743830;
    property LatBuckCoef_UppFlan: IRDimLatBuckCoefDiagramCM66 dispid 1610743832;
    property UserDefLatBuckCoef_LowFlan: Double dispid 1610743834;
    property UserDefLatBuckCoef_UppFlan: Double dispid 1610743836;
    property LoadTypeY: IRDimLoadTypeCM66 dispid 1610743838;
    property LoadTypeZ: IRDimLoadTypeCM66 dispid 1610743840;
    property TensAreaNetGros: Double dispid 1610743842;
    property TubeControl: Integer dispid 1610743844;
    property AmplificationCoeff: IRDimAmplificationCM66 dispid 1610743846;
  end;

// *********************************************************************//
// Interface: IRDimCodeResCM66
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4CA26B03-1AC8-11D5-B063-00104B7DBED4}
// *********************************************************************//
  IRDimCodeResCM66 = interface(IDispatch)
    ['{4CA26B03-1AC8-11D5-B063-00104B7DBED4}']
    function Get_IsBuckY: Integer; safecall;
    function Get_IsBuckZ: Integer; safecall;
    function Get_StrsShearY: Double; safecall;
    function Get_StrsShearZ: Double; safecall;
    function Get_StrsMax: Double; safecall;
    function Get_StrsMom: Double; safecall;
    function Get_StrsTens: Double; safecall;
    function Get_StrsComp: Double; safecall;
    function Get_StrsUprEdgeMY: Double; safecall;
    function Get_StrsRgtEdgeMZ: Double; safecall;
    function Get_StrsLowEdgeMY: Double; safecall;
    function Get_StrsLftEdgeMZ: Double; safecall;
    function Get_StrsTubeUprMY: Double; safecall;
    function Get_StrsTubeRgtMZ: Double; safecall;
    function Get_StrsTubeLowMY: Double; safecall;
    function Get_StrsTubeLftMZ: Double; safecall;
    function Get_StrsTmp1: Double; safecall;
    function Get_StrsTmp2: Double; safecall;
    function Get_StrsFinP1: Double; safecall;
    function Get_StrsFinP2: Double; safecall;
    function Get_StrsFinP3: Double; safecall;
    function Get_StrsFinP4: Double; safecall;
    function Get_StrsTubeFinP1: Double; safecall;
    function Get_StrsTubeFinP2: Double; safecall;
    function Get_StrsTubeFinP3: Double; safecall;
    function Get_StrsTubeFinP4: Double; safecall;
    function Get_StrsP1: Double; safecall;
    function Get_StrsP2: Double; safecall;
    function Get_StrsP3: Double; safecall;
    function Get_StrsP4: Double; safecall;
    function Get_StrsTubeP1: Double; safecall;
    function Get_StrsTubeP2: Double; safecall;
    function Get_StrsTubeP3: Double; safecall;
    function Get_StrsTubeP4: Double; safecall;
    function Get_BuckSlendY: Double; safecall;
    function Get_BuckSlendZ: Double; safecall;
    function Get_BuckStrsKY: Double; safecall;
    function Get_BuckStrsKZ: Double; safecall;
    function Get_BuckMiY: Double; safecall;
    function Get_BuckMiZ: Double; safecall;
    function Get_BuckCoefKY: Double; safecall;
    function Get_BuckCoefKZ: Double; safecall;
    function Get_BuckCoefK1YZ: Double; safecall;
    function Get_BuckCoefK1Y: Double; safecall;
    function Get_BuckCoefK1Z: Double; safecall;
    function Get_BuckImpCoefKFY: Double; safecall;
    function Get_BuckImpCoefKFZ: Double; safecall;
    function Get_LTBuckC: Double; safecall;
    function Get_LTBuckD: Double; safecall;
    function Get_LTBuckBeta: Double; safecall;
    function Get_LTBuckB: Double; safecall;
    function Get_LTBuckStrsSigD: Double; safecall;
    function Get_LTBuckLambda0: Double; safecall;
    function Get_LTBuckCoefKD: Double; safecall;
    function Get_LTBuckCoefKDorg: Double; safecall;
    function Get_LTBuckCprim: Double; safecall;
    function Get_LTBuckLengthLD: Double; safecall;
    function Get_LTBuckLowUp: Integer; safecall;
    function Get_LTBuckLengthLDprim: Double; safecall;
    function Get_EffRatio: Double; safecall;
    function Get_AllowStressRE: Double; safecall;
    property IsBuckY: Integer read Get_IsBuckY;
    property IsBuckZ: Integer read Get_IsBuckZ;
    property StrsShearY: Double read Get_StrsShearY;
    property StrsShearZ: Double read Get_StrsShearZ;
    property StrsMax: Double read Get_StrsMax;
    property StrsMom: Double read Get_StrsMom;
    property StrsTens: Double read Get_StrsTens;
    property StrsComp: Double read Get_StrsComp;
    property StrsUprEdgeMY: Double read Get_StrsUprEdgeMY;
    property StrsRgtEdgeMZ: Double read Get_StrsRgtEdgeMZ;
    property StrsLowEdgeMY: Double read Get_StrsLowEdgeMY;
    property StrsLftEdgeMZ: Double read Get_StrsLftEdgeMZ;
    property StrsTubeUprMY: Double read Get_StrsTubeUprMY;
    property StrsTubeRgtMZ: Double read Get_StrsTubeRgtMZ;
    property StrsTubeLowMY: Double read Get_StrsTubeLowMY;
    property StrsTubeLftMZ: Double read Get_StrsTubeLftMZ;
    property StrsTmp1: Double read Get_StrsTmp1;
    property StrsTmp2: Double read Get_StrsTmp2;
    property StrsFinP1: Double read Get_StrsFinP1;
    property StrsFinP2: Double read Get_StrsFinP2;
    property StrsFinP3: Double read Get_StrsFinP3;
    property StrsFinP4: Double read Get_StrsFinP4;
    property StrsTubeFinP1: Double read Get_StrsTubeFinP1;
    property StrsTubeFinP2: Double read Get_StrsTubeFinP2;
    property StrsTubeFinP3: Double read Get_StrsTubeFinP3;
    property StrsTubeFinP4: Double read Get_StrsTubeFinP4;
    property StrsP1: Double read Get_StrsP1;
    property StrsP2: Double read Get_StrsP2;
    property StrsP3: Double read Get_StrsP3;
    property StrsP4: Double read Get_StrsP4;
    property StrsTubeP1: Double read Get_StrsTubeP1;
    property StrsTubeP2: Double read Get_StrsTubeP2;
    property StrsTubeP3: Double read Get_StrsTubeP3;
    property StrsTubeP4: Double read Get_StrsTubeP4;
    property BuckSlendY: Double read Get_BuckSlendY;
    property BuckSlendZ: Double read Get_BuckSlendZ;
    property BuckStrsKY: Double read Get_BuckStrsKY;
    property BuckStrsKZ: Double read Get_BuckStrsKZ;
    property BuckMiY: Double read Get_BuckMiY;
    property BuckMiZ: Double read Get_BuckMiZ;
    property BuckCoefKY: Double read Get_BuckCoefKY;
    property BuckCoefKZ: Double read Get_BuckCoefKZ;
    property BuckCoefK1YZ: Double read Get_BuckCoefK1YZ;
    property BuckCoefK1Y: Double read Get_BuckCoefK1Y;
    property BuckCoefK1Z: Double read Get_BuckCoefK1Z;
    property BuckImpCoefKFY: Double read Get_BuckImpCoefKFY;
    property BuckImpCoefKFZ: Double read Get_BuckImpCoefKFZ;
    property LTBuckC: Double read Get_LTBuckC;
    property LTBuckD: Double read Get_LTBuckD;
    property LTBuckBeta: Double read Get_LTBuckBeta;
    property LTBuckB: Double read Get_LTBuckB;
    property LTBuckStrsSigD: Double read Get_LTBuckStrsSigD;
    property LTBuckLambda0: Double read Get_LTBuckLambda0;
    property LTBuckCoefKD: Double read Get_LTBuckCoefKD;
    property LTBuckCoefKDorg: Double read Get_LTBuckCoefKDorg;
    property LTBuckCprim: Double read Get_LTBuckCprim;
    property LTBuckLengthLD: Double read Get_LTBuckLengthLD;
    property LTBuckLowUp: Integer read Get_LTBuckLowUp;
    property LTBuckLengthLDprim: Double read Get_LTBuckLengthLDprim;
    property EffRatio: Double read Get_EffRatio;
    property AllowStressRE: Double read Get_AllowStressRE;
  end;

// *********************************************************************//
// DispIntf:  IRDimCodeResCM66Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4CA26B03-1AC8-11D5-B063-00104B7DBED4}
// *********************************************************************//
  IRDimCodeResCM66Disp = dispinterface
    ['{4CA26B03-1AC8-11D5-B063-00104B7DBED4}']
    property IsBuckY: Integer readonly dispid 1610743808;
    property IsBuckZ: Integer readonly dispid 1610743809;
    property StrsShearY: Double readonly dispid 1610743810;
    property StrsShearZ: Double readonly dispid 1610743811;
    property StrsMax: Double readonly dispid 1610743812;
    property StrsMom: Double readonly dispid 1610743813;
    property StrsTens: Double readonly dispid 1610743814;
    property StrsComp: Double readonly dispid 1610743815;
    property StrsUprEdgeMY: Double readonly dispid 1610743816;
    property StrsRgtEdgeMZ: Double readonly dispid 1610743817;
    property StrsLowEdgeMY: Double readonly dispid 1610743818;
    property StrsLftEdgeMZ: Double readonly dispid 1610743819;
    property StrsTubeUprMY: Double readonly dispid 1610743820;
    property StrsTubeRgtMZ: Double readonly dispid 1610743821;
    property StrsTubeLowMY: Double readonly dispid 1610743822;
    property StrsTubeLftMZ: Double readonly dispid 1610743823;
    property StrsTmp1: Double readonly dispid 1610743824;
    property StrsTmp2: Double readonly dispid 1610743825;
    property StrsFinP1: Double readonly dispid 1610743826;
    property StrsFinP2: Double readonly dispid 1610743827;
    property StrsFinP3: Double readonly dispid 1610743828;
    property StrsFinP4: Double readonly dispid 1610743829;
    property StrsTubeFinP1: Double readonly dispid 1610743830;
    property StrsTubeFinP2: Double readonly dispid 1610743831;
    property StrsTubeFinP3: Double readonly dispid 1610743832;
    property StrsTubeFinP4: Double readonly dispid 1610743833;
    property StrsP1: Double readonly dispid 1610743834;
    property StrsP2: Double readonly dispid 1610743835;
    property StrsP3: Double readonly dispid 1610743836;
    property StrsP4: Double readonly dispid 1610743837;
    property StrsTubeP1: Double readonly dispid 1610743838;
    property StrsTubeP2: Double readonly dispid 1610743839;
    property StrsTubeP3: Double readonly dispid 1610743840;
    property StrsTubeP4: Double readonly dispid 1610743841;
    property BuckSlendY: Double readonly dispid 1610743842;
    property BuckSlendZ: Double readonly dispid 1610743843;
    property BuckStrsKY: Double readonly dispid 1610743844;
    property BuckStrsKZ: Double readonly dispid 1610743845;
    property BuckMiY: Double readonly dispid 1610743846;
    property BuckMiZ: Double readonly dispid 1610743847;
    property BuckCoefKY: Double readonly dispid 1610743848;
    property BuckCoefKZ: Double readonly dispid 1610743849;
    property BuckCoefK1YZ: Double readonly dispid 1610743850;
    property BuckCoefK1Y: Double readonly dispid 1610743851;
    property BuckCoefK1Z: Double readonly dispid 1610743852;
    property BuckImpCoefKFY: Double readonly dispid 1610743853;
    property BuckImpCoefKFZ: Double readonly dispid 1610743854;
    property LTBuckC: Double readonly dispid 1610743855;
    property LTBuckD: Double readonly dispid 1610743856;
    property LTBuckBeta: Double readonly dispid 1610743857;
    property LTBuckB: Double readonly dispid 1610743858;
    property LTBuckStrsSigD: Double readonly dispid 1610743859;
    property LTBuckLambda0: Double readonly dispid 1610743860;
    property LTBuckCoefKD: Double readonly dispid 1610743861;
    property LTBuckCoefKDorg: Double readonly dispid 1610743862;
    property LTBuckCprim: Double readonly dispid 1610743863;
    property LTBuckLengthLD: Double readonly dispid 1610743864;
    property LTBuckLowUp: Integer readonly dispid 1610743865;
    property LTBuckLengthLDprim: Double readonly dispid 1610743866;
    property EffRatio: Double readonly dispid 1610743867;
    property AllowStressRE: Double readonly dispid 1610743868;
  end;

// *********************************************************************//
// Interface: IRDimMembParamsBS59
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {67C95BD2-1E0D-4E0E-BA06-D45250C932CA}
// *********************************************************************//
  IRDimMembParamsBS59 = interface(IDispatch)
    ['{67C95BD2-1E0D-4E0E-BA06-D45250C932CA}']
    function Get_BucklingDiagramY: IRDimBuckDiagramBS59; safecall;
    procedure Set_BucklingDiagramY(pVal: IRDimBuckDiagramBS59); safecall;
    function Get_BucklingDiagramZ: IRDimBuckDiagramBS59; safecall;
    procedure Set_BucklingDiagramZ(pVal: IRDimBuckDiagramBS59); safecall;
    function Get_BuckLengthCoeffY: Double; safecall;
    procedure Set_BuckLengthCoeffY(pVal: Double); safecall;
    function Get_BuckLengthCoeffZ: Double; safecall;
    procedure Set_BuckLengthCoeffZ(pVal: Double); safecall;
    function Get_LatBuckType: IRDimLaterBuckTypeBS59; safecall;
    procedure Set_LatBuckType(pVal: IRDimLaterBuckTypeBS59); safecall;
    function Get_LatBuckLengthCoef_LowFlan: IRDimLatBuckLengthCoefDiagramBS59; safecall;
    procedure Set_LatBuckLengthCoef_LowFlan(pVal: IRDimLatBuckLengthCoefDiagramBS59); safecall;
    function Get_LatBuckLengthCoef_UppFlan: IRDimLatBuckLengthCoefDiagramBS59; safecall;
    procedure Set_LatBuckLengthCoef_UppFlan(pVal: IRDimLatBuckLengthCoefDiagramBS59); safecall;
    function Get_UserDefLatBuckLengthCoef_LowFlan: Double; safecall;
    procedure Set_UserDefLatBuckLengthCoef_LowFlan(pVal: Double); safecall;
    function Get_UserDefLatBuckLengthCoef_UppFlan: Double; safecall;
    procedure Set_UserDefLatBuckLengthCoef_UppFlan(pVal: Double); safecall;
    function Get_SlendCorrectionFactor_n: IRDimSlendCorrectionDiagramBS59; safecall;
    procedure Set_SlendCorrectionFactor_n(pVal: IRDimSlendCorrectionDiagramBS59); safecall;
    function Get_EqMomentFactor_my: IRDimEqUniformMomentDiagramBS59; safecall;
    procedure Set_EqMomentFactor_my(pVal: IRDimEqUniformMomentDiagramBS59); safecall;
    function Get_EqMomentFactor_mz: IRDimEqUniformMomentDiagramBS59; safecall;
    procedure Set_EqMomentFactor_mz(pVal: IRDimEqUniformMomentDiagramBS59); safecall;
    function Get_UserDefSlendCorrectionFactor_n: Double; safecall;
    procedure Set_UserDefSlendCorrectionFactor_n(pVal: Double); safecall;
    function Get_UserDefEqMomentFactor_my: Double; safecall;
    procedure Set_UserDefEqMomentFactor_my(pVal: Double); safecall;
    function Get_UserDefEqMomentFactor_mz: Double; safecall;
    procedure Set_UserDefEqMomentFactor_mz(pVal: Double); safecall;
    function Get_Ae_per_Ag_ratio: Double; safecall;
    procedure Set_Ae_per_Ag_ratio(pVal: Double); safecall;
    function Get_UnidirectionalBendigPipes: Integer; safecall;
    procedure Set_UnidirectionalBendigPipes(pVal: Integer); safecall;
    property BucklingDiagramY: IRDimBuckDiagramBS59 read Get_BucklingDiagramY write Set_BucklingDiagramY;
    property BucklingDiagramZ: IRDimBuckDiagramBS59 read Get_BucklingDiagramZ write Set_BucklingDiagramZ;
    property BuckLengthCoeffY: Double read Get_BuckLengthCoeffY write Set_BuckLengthCoeffY;
    property BuckLengthCoeffZ: Double read Get_BuckLengthCoeffZ write Set_BuckLengthCoeffZ;
    property LatBuckType: IRDimLaterBuckTypeBS59 read Get_LatBuckType write Set_LatBuckType;
    property LatBuckLengthCoef_LowFlan: IRDimLatBuckLengthCoefDiagramBS59 read Get_LatBuckLengthCoef_LowFlan write Set_LatBuckLengthCoef_LowFlan;
    property LatBuckLengthCoef_UppFlan: IRDimLatBuckLengthCoefDiagramBS59 read Get_LatBuckLengthCoef_UppFlan write Set_LatBuckLengthCoef_UppFlan;
    property UserDefLatBuckLengthCoef_LowFlan: Double read Get_UserDefLatBuckLengthCoef_LowFlan write Set_UserDefLatBuckLengthCoef_LowFlan;
    property UserDefLatBuckLengthCoef_UppFlan: Double read Get_UserDefLatBuckLengthCoef_UppFlan write Set_UserDefLatBuckLengthCoef_UppFlan;
    property SlendCorrectionFactor_n: IRDimSlendCorrectionDiagramBS59 read Get_SlendCorrectionFactor_n write Set_SlendCorrectionFactor_n;
    property EqMomentFactor_my: IRDimEqUniformMomentDiagramBS59 read Get_EqMomentFactor_my write Set_EqMomentFactor_my;
    property EqMomentFactor_mz: IRDimEqUniformMomentDiagramBS59 read Get_EqMomentFactor_mz write Set_EqMomentFactor_mz;
    property UserDefSlendCorrectionFactor_n: Double read Get_UserDefSlendCorrectionFactor_n write Set_UserDefSlendCorrectionFactor_n;
    property UserDefEqMomentFactor_my: Double read Get_UserDefEqMomentFactor_my write Set_UserDefEqMomentFactor_my;
    property UserDefEqMomentFactor_mz: Double read Get_UserDefEqMomentFactor_mz write Set_UserDefEqMomentFactor_mz;
    property Ae_per_Ag_ratio: Double read Get_Ae_per_Ag_ratio write Set_Ae_per_Ag_ratio;
    property UnidirectionalBendigPipes: Integer read Get_UnidirectionalBendigPipes write Set_UnidirectionalBendigPipes;
  end;

// *********************************************************************//
// DispIntf:  IRDimMembParamsBS59Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {67C95BD2-1E0D-4E0E-BA06-D45250C932CA}
// *********************************************************************//
  IRDimMembParamsBS59Disp = dispinterface
    ['{67C95BD2-1E0D-4E0E-BA06-D45250C932CA}']
    property BucklingDiagramY: IRDimBuckDiagramBS59 dispid 1610743808;
    property BucklingDiagramZ: IRDimBuckDiagramBS59 dispid 1610743810;
    property BuckLengthCoeffY: Double dispid 1610743812;
    property BuckLengthCoeffZ: Double dispid 1610743814;
    property LatBuckType: IRDimLaterBuckTypeBS59 dispid 1610743816;
    property LatBuckLengthCoef_LowFlan: IRDimLatBuckLengthCoefDiagramBS59 dispid 1610743818;
    property LatBuckLengthCoef_UppFlan: IRDimLatBuckLengthCoefDiagramBS59 dispid 1610743820;
    property UserDefLatBuckLengthCoef_LowFlan: Double dispid 1610743822;
    property UserDefLatBuckLengthCoef_UppFlan: Double dispid 1610743824;
    property SlendCorrectionFactor_n: IRDimSlendCorrectionDiagramBS59 dispid 1610743826;
    property EqMomentFactor_my: IRDimEqUniformMomentDiagramBS59 dispid 1610743828;
    property EqMomentFactor_mz: IRDimEqUniformMomentDiagramBS59 dispid 1610743830;
    property UserDefSlendCorrectionFactor_n: Double dispid 1610743832;
    property UserDefEqMomentFactor_my: Double dispid 1610743834;
    property UserDefEqMomentFactor_mz: Double dispid 1610743836;
    property Ae_per_Ag_ratio: Double dispid 1610743838;
    property UnidirectionalBendigPipes: Integer dispid 1610743840;
  end;

// *********************************************************************//
// Interface: IRDimMembParamsBS59_2000
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CA278783-0862-4A53-8EF5-A3AB1F906EFE}
// *********************************************************************//
  IRDimMembParamsBS59_2000 = interface(IDispatch)
    ['{CA278783-0862-4A53-8EF5-A3AB1F906EFE}']
    function Get_BucklingDiagramY: IRDimBuckDiagramBS59_2000; safecall;
    procedure Set_BucklingDiagramY(pVal: IRDimBuckDiagramBS59_2000); safecall;
    function Get_BucklingDiagramZ: IRDimBuckDiagramBS59_2000; safecall;
    procedure Set_BucklingDiagramZ(pVal: IRDimBuckDiagramBS59_2000); safecall;
    function Get_BuckLengthCoeffY: Double; safecall;
    procedure Set_BuckLengthCoeffY(pVal: Double); safecall;
    function Get_BuckLengthCoeffZ: Double; safecall;
    procedure Set_BuckLengthCoeffZ(pVal: Double); safecall;
    function Get_BuckCurveY: IRDimBuckCurveBS59_2000; safecall;
    procedure Set_BuckCurveY(pVal: IRDimBuckCurveBS59_2000); safecall;
    function Get_BuckCurveZ: IRDimBuckCurveBS59_2000; safecall;
    procedure Set_BuckCurveZ(pVal: IRDimBuckCurveBS59_2000); safecall;
    function Get_LatBuckType: IRDimLaterBuckTypeBS59_2000; safecall;
    procedure Set_LatBuckType(pVal: IRDimLaterBuckTypeBS59_2000); safecall;
    function Get_LatBuckLengthCoef_LowFlan: IRDimLatBuckLengthCoefDiagramBS59_2000; safecall;
    procedure Set_LatBuckLengthCoef_LowFlan(pVal: IRDimLatBuckLengthCoefDiagramBS59_2000); safecall;
    function Get_LatBuckLengthCoef_UppFlan: IRDimLatBuckLengthCoefDiagramBS59_2000; safecall;
    procedure Set_LatBuckLengthCoef_UppFlan(pVal: IRDimLatBuckLengthCoefDiagramBS59_2000); safecall;
    function Get_UserDefLatBuckLengthCoef_LowFlan: Double; safecall;
    procedure Set_UserDefLatBuckLengthCoef_LowFlan(pVal: Double); safecall;
    function Get_UserDefLatBuckLengthCoef_UppFlan: Double; safecall;
    procedure Set_UserDefLatBuckLengthCoef_UppFlan(pVal: Double); safecall;
    function Get_LatBuckMltCoef: IRDimCoefOfMomentDistrDiagramBS59_2000; safecall;
    procedure Set_LatBuckMltCoef(pVal: IRDimCoefOfMomentDistrDiagramBS59_2000); safecall;
    function Get_UserDefLatBuckMltCoef: Double; safecall;
    procedure Set_UserDefLatBuckMltCoef(pVal: Double); safecall;
    function Get_EqMomentFactor_my: IRDimCoefOfMomentDistrDiagramBS59_2000; safecall;
    procedure Set_EqMomentFactor_my(pVal: IRDimCoefOfMomentDistrDiagramBS59_2000); safecall;
    function Get_EqMomentFactor_mz: IRDimCoefOfMomentDistrDiagramBS59_2000; safecall;
    procedure Set_EqMomentFactor_mz(pVal: IRDimCoefOfMomentDistrDiagramBS59_2000); safecall;
    function Get_UserDefEqMomentFactor_my: Double; safecall;
    procedure Set_UserDefEqMomentFactor_my(pVal: Double); safecall;
    function Get_UserDefEqMomentFactor_mz: Double; safecall;
    procedure Set_UserDefEqMomentFactor_mz(pVal: Double); safecall;
    function Get_Ae_per_Ag_ratio: Double; safecall;
    procedure Set_Ae_per_Ag_ratio(pVal: Double); safecall;
    function Get_Avnet_per_Av_ratio: Double; safecall;
    procedure Set_Avnet_per_Av_ratio(pVal: Double); safecall;
    function Get_HotFinishedPipes: Integer; safecall;
    procedure Set_HotFinishedPipes(pVal: Integer); safecall;
    property BucklingDiagramY: IRDimBuckDiagramBS59_2000 read Get_BucklingDiagramY write Set_BucklingDiagramY;
    property BucklingDiagramZ: IRDimBuckDiagramBS59_2000 read Get_BucklingDiagramZ write Set_BucklingDiagramZ;
    property BuckLengthCoeffY: Double read Get_BuckLengthCoeffY write Set_BuckLengthCoeffY;
    property BuckLengthCoeffZ: Double read Get_BuckLengthCoeffZ write Set_BuckLengthCoeffZ;
    property BuckCurveY: IRDimBuckCurveBS59_2000 read Get_BuckCurveY write Set_BuckCurveY;
    property BuckCurveZ: IRDimBuckCurveBS59_2000 read Get_BuckCurveZ write Set_BuckCurveZ;
    property LatBuckType: IRDimLaterBuckTypeBS59_2000 read Get_LatBuckType write Set_LatBuckType;
    property LatBuckLengthCoef_LowFlan: IRDimLatBuckLengthCoefDiagramBS59_2000 read Get_LatBuckLengthCoef_LowFlan write Set_LatBuckLengthCoef_LowFlan;
    property LatBuckLengthCoef_UppFlan: IRDimLatBuckLengthCoefDiagramBS59_2000 read Get_LatBuckLengthCoef_UppFlan write Set_LatBuckLengthCoef_UppFlan;
    property UserDefLatBuckLengthCoef_LowFlan: Double read Get_UserDefLatBuckLengthCoef_LowFlan write Set_UserDefLatBuckLengthCoef_LowFlan;
    property UserDefLatBuckLengthCoef_UppFlan: Double read Get_UserDefLatBuckLengthCoef_UppFlan write Set_UserDefLatBuckLengthCoef_UppFlan;
    property LatBuckMltCoef: IRDimCoefOfMomentDistrDiagramBS59_2000 read Get_LatBuckMltCoef write Set_LatBuckMltCoef;
    property UserDefLatBuckMltCoef: Double read Get_UserDefLatBuckMltCoef write Set_UserDefLatBuckMltCoef;
    property EqMomentFactor_my: IRDimCoefOfMomentDistrDiagramBS59_2000 read Get_EqMomentFactor_my write Set_EqMomentFactor_my;
    property EqMomentFactor_mz: IRDimCoefOfMomentDistrDiagramBS59_2000 read Get_EqMomentFactor_mz write Set_EqMomentFactor_mz;
    property UserDefEqMomentFactor_my: Double read Get_UserDefEqMomentFactor_my write Set_UserDefEqMomentFactor_my;
    property UserDefEqMomentFactor_mz: Double read Get_UserDefEqMomentFactor_mz write Set_UserDefEqMomentFactor_mz;
    property Ae_per_Ag_ratio: Double read Get_Ae_per_Ag_ratio write Set_Ae_per_Ag_ratio;
    property Avnet_per_Av_ratio: Double read Get_Avnet_per_Av_ratio write Set_Avnet_per_Av_ratio;
    property HotFinishedPipes: Integer read Get_HotFinishedPipes write Set_HotFinishedPipes;
  end;

// *********************************************************************//
// DispIntf:  IRDimMembParamsBS59_2000Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CA278783-0862-4A53-8EF5-A3AB1F906EFE}
// *********************************************************************//
  IRDimMembParamsBS59_2000Disp = dispinterface
    ['{CA278783-0862-4A53-8EF5-A3AB1F906EFE}']
    property BucklingDiagramY: IRDimBuckDiagramBS59_2000 dispid 1610743808;
    property BucklingDiagramZ: IRDimBuckDiagramBS59_2000 dispid 1610743810;
    property BuckLengthCoeffY: Double dispid 1610743812;
    property BuckLengthCoeffZ: Double dispid 1610743814;
    property BuckCurveY: IRDimBuckCurveBS59_2000 dispid 1610743816;
    property BuckCurveZ: IRDimBuckCurveBS59_2000 dispid 1610743818;
    property LatBuckType: IRDimLaterBuckTypeBS59_2000 dispid 1610743820;
    property LatBuckLengthCoef_LowFlan: IRDimLatBuckLengthCoefDiagramBS59_2000 dispid 1610743822;
    property LatBuckLengthCoef_UppFlan: IRDimLatBuckLengthCoefDiagramBS59_2000 dispid 1610743824;
    property UserDefLatBuckLengthCoef_LowFlan: Double dispid 1610743826;
    property UserDefLatBuckLengthCoef_UppFlan: Double dispid 1610743828;
    property LatBuckMltCoef: IRDimCoefOfMomentDistrDiagramBS59_2000 dispid 1610743830;
    property UserDefLatBuckMltCoef: Double dispid 1610743832;
    property EqMomentFactor_my: IRDimCoefOfMomentDistrDiagramBS59_2000 dispid 1610743834;
    property EqMomentFactor_mz: IRDimCoefOfMomentDistrDiagramBS59_2000 dispid 1610743836;
    property UserDefEqMomentFactor_my: Double dispid 1610743838;
    property UserDefEqMomentFactor_mz: Double dispid 1610743840;
    property Ae_per_Ag_ratio: Double dispid 1610743842;
    property Avnet_per_Av_ratio: Double dispid 1610743844;
    property HotFinishedPipes: Integer dispid 1610743846;
  end;

// *********************************************************************//
// Interface: IRDimMembParamsNS34
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {62F805D0-C7A6-437A-AA24-A22159C8D8F7}
// *********************************************************************//
  IRDimMembParamsNS34 = interface(IDispatch)
    ['{62F805D0-C7A6-437A-AA24-A22159C8D8F7}']
    function Get_BucklingDiagramY: IRDimBuckDiagramNS34; safecall;
    procedure Set_BucklingDiagramY(pVal: IRDimBuckDiagramNS34); safecall;
    function Get_BucklingDiagramZ: IRDimBuckDiagramNS34; safecall;
    procedure Set_BucklingDiagramZ(pVal: IRDimBuckDiagramNS34); safecall;
    function Get_BuckLenghtCoeffY: Double; safecall;
    procedure Set_BuckLenghtCoeffY(pVal: Double); safecall;
    function Get_BuckLenghtCoeffZ: Double; safecall;
    procedure Set_BuckLenghtCoeffZ(pVal: Double); safecall;
    function Get_LatBuck: Integer; safecall;
    procedure Set_LatBuck(pVal: Integer); safecall;
    function Get_LoadLevel: IRDimLoadLevelNS34; safecall;
    procedure Set_LoadLevel(pVal: IRDimLoadLevelNS34); safecall;
    function Get_LoadLevelValue: Double; safecall;
    procedure Set_LoadLevelValue(pVal: Double); safecall;
    function Get_LatBuckCoef_LowFlan: IRDimLatBuckCoefDiagramNS34; safecall;
    procedure Set_LatBuckCoef_LowFlan(pVal: IRDimLatBuckCoefDiagramNS34); safecall;
    function Get_LatBuckCoef_UppFlan: IRDimLatBuckCoefDiagramNS34; safecall;
    procedure Set_LatBuckCoef_UppFlan(pVal: IRDimLatBuckCoefDiagramNS34); safecall;
    function Get_UserDefLatBuckCoef_LowFlan: Double; safecall;
    procedure Set_UserDefLatBuckCoef_LowFlan(pVal: Double); safecall;
    function Get_UserDefLatBuckCoef_UppFlan: Double; safecall;
    procedure Set_UserDefLatBuckCoef_UppFlan(pVal: Double); safecall;
    function Get_LoadTypeY: IRDimLoadTypeNS34; safecall;
    procedure Set_LoadTypeY(pVal: IRDimLoadTypeNS34); safecall;
    function Get_LoadTypeZ: IRDimLoadTypeNS34; safecall;
    procedure Set_LoadTypeZ(pVal: IRDimLoadTypeNS34); safecall;
    function Get_TensAreaNetGros: Double; safecall;
    procedure Set_TensAreaNetGros(pVal: Double); safecall;
    function Get_TubeControl: Integer; safecall;
    procedure Set_TubeControl(pVal: Integer); safecall;
    function Get_MatCoeffGammaM1: Integer; safecall;
    procedure Set_MatCoeffGammaM1(pVal: Integer); safecall;
    function Get_MatCoeffGammaM2: Integer; safecall;
    procedure Set_MatCoeffGammaM2(pVal: Integer); safecall;
    property BucklingDiagramY: IRDimBuckDiagramNS34 read Get_BucklingDiagramY write Set_BucklingDiagramY;
    property BucklingDiagramZ: IRDimBuckDiagramNS34 read Get_BucklingDiagramZ write Set_BucklingDiagramZ;
    property BuckLenghtCoeffY: Double read Get_BuckLenghtCoeffY write Set_BuckLenghtCoeffY;
    property BuckLenghtCoeffZ: Double read Get_BuckLenghtCoeffZ write Set_BuckLenghtCoeffZ;
    property LatBuck: Integer read Get_LatBuck write Set_LatBuck;
    property LoadLevel: IRDimLoadLevelNS34 read Get_LoadLevel write Set_LoadLevel;
    property LoadLevelValue: Double read Get_LoadLevelValue write Set_LoadLevelValue;
    property LatBuckCoef_LowFlan: IRDimLatBuckCoefDiagramNS34 read Get_LatBuckCoef_LowFlan write Set_LatBuckCoef_LowFlan;
    property LatBuckCoef_UppFlan: IRDimLatBuckCoefDiagramNS34 read Get_LatBuckCoef_UppFlan write Set_LatBuckCoef_UppFlan;
    property UserDefLatBuckCoef_LowFlan: Double read Get_UserDefLatBuckCoef_LowFlan write Set_UserDefLatBuckCoef_LowFlan;
    property UserDefLatBuckCoef_UppFlan: Double read Get_UserDefLatBuckCoef_UppFlan write Set_UserDefLatBuckCoef_UppFlan;
    property LoadTypeY: IRDimLoadTypeNS34 read Get_LoadTypeY write Set_LoadTypeY;
    property LoadTypeZ: IRDimLoadTypeNS34 read Get_LoadTypeZ write Set_LoadTypeZ;
    property TensAreaNetGros: Double read Get_TensAreaNetGros write Set_TensAreaNetGros;
    property TubeControl: Integer read Get_TubeControl write Set_TubeControl;
    property MatCoeffGammaM1: Integer read Get_MatCoeffGammaM1 write Set_MatCoeffGammaM1;
    property MatCoeffGammaM2: Integer read Get_MatCoeffGammaM2 write Set_MatCoeffGammaM2;
  end;

// *********************************************************************//
// DispIntf:  IRDimMembParamsNS34Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {62F805D0-C7A6-437A-AA24-A22159C8D8F7}
// *********************************************************************//
  IRDimMembParamsNS34Disp = dispinterface
    ['{62F805D0-C7A6-437A-AA24-A22159C8D8F7}']
    property BucklingDiagramY: IRDimBuckDiagramNS34 dispid 1610743808;
    property BucklingDiagramZ: IRDimBuckDiagramNS34 dispid 1610743810;
    property BuckLenghtCoeffY: Double dispid 1610743812;
    property BuckLenghtCoeffZ: Double dispid 1610743814;
    property LatBuck: Integer dispid 1610743816;
    property LoadLevel: IRDimLoadLevelNS34 dispid 1610743818;
    property LoadLevelValue: Double dispid 1610743820;
    property LatBuckCoef_LowFlan: IRDimLatBuckCoefDiagramNS34 dispid 1610743822;
    property LatBuckCoef_UppFlan: IRDimLatBuckCoefDiagramNS34 dispid 1610743824;
    property UserDefLatBuckCoef_LowFlan: Double dispid 1610743826;
    property UserDefLatBuckCoef_UppFlan: Double dispid 1610743828;
    property LoadTypeY: IRDimLoadTypeNS34 dispid 1610743830;
    property LoadTypeZ: IRDimLoadTypeNS34 dispid 1610743832;
    property TensAreaNetGros: Double dispid 1610743834;
    property TubeControl: Integer dispid 1610743836;
    property MatCoeffGammaM1: Integer dispid 1610743838;
    property MatCoeffGammaM2: Integer dispid 1610743840;
  end;

// *********************************************************************//
// Interface: IRDimMembParamsEC3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {11C7356F-FD27-4791-A45A-7DAA20A0A54D}
// *********************************************************************//
  IRDimMembParamsEC3 = interface(IDispatch)
    ['{11C7356F-FD27-4791-A45A-7DAA20A0A54D}']
    function Get_BucklingDiagramY: IRDimBuckDiagramEC3; safecall;
    procedure Set_BucklingDiagramY(ret: IRDimBuckDiagramEC3); safecall;
    function Get_BucklingDiagramZ: IRDimBuckDiagramEC3; safecall;
    procedure Set_BucklingDiagramZ(ret: IRDimBuckDiagramEC3); safecall;
    function Get_LoadTypeY: IRDimLoadTypeEC3; safecall;
    procedure Set_LoadTypeY(ret: IRDimLoadTypeEC3); safecall;
    function Get_LoadTypeZ: IRDimLoadTypeEC3; safecall;
    procedure Set_LoadTypeZ(ret: IRDimLoadTypeEC3); safecall;
    function Get_LoadLevel: IRDimLoadLevelEC3; safecall;
    procedure Set_LoadLevel(ret: IRDimLoadLevelEC3); safecall;
    function Get_LoadLevelValue: Double; safecall;
    procedure Set_LoadLevelValue(ret: Double); safecall;
    function Get_LatCoeffLowerFlange: IRDimLatBuckCoeffDiagramEC3; safecall;
    procedure Set_LatCoeffLowerFlange(ret: IRDimLatBuckCoeffDiagramEC3); safecall;
    function Get_LatCoeffUpperFlange: IRDimLatBuckCoeffDiagramEC3; safecall;
    procedure Set_LatCoeffUpperFlange(ret: IRDimLatBuckCoeffDiagramEC3); safecall;
    function Get_LatCoeffLowerFlangeValue: Double; safecall;
    procedure Set_LatCoeffLowerFlangeValue(ret: Double); safecall;
    function Get_LatCoeffUpperFlangeValue: Double; safecall;
    procedure Set_LatCoeffUpperFlangeValue(ret: Double); safecall;
    function Get_LatBuckType: IRDimLaterBuckTypeEC3; safecall;
    procedure Set_LatBuckType(ret: IRDimLaterBuckTypeEC3); safecall;
    function Get_TensAreaNetGros: Double; safecall;
    procedure Set_TensAreaNetGros(ret: Double); safecall;
    function Get_YieldStrengthValue: Double; safecall;
    procedure Set_YieldStrengthValue(ret: Double); safecall;
    function Get_MaterCoeffGamma0: Double; safecall;
    procedure Set_MaterCoeffGamma0(ret: Double); safecall;
    function Get_MaterCoeffGamma1: Double; safecall;
    procedure Set_MaterCoeffGamma1(ret: Double); safecall;
    function Get_TubeControl: WordBool; safecall;
    procedure Set_TubeControl(ret: WordBool); safecall;
    function Get_BuckLengthCoeffY: Double; safecall;
    procedure Set_BuckLengthCoeffY(ret: Double); safecall;
    function Get_BuckLengthCoeffZ: Double; safecall;
    procedure Set_BuckLengthCoeffZ(ret: Double); safecall;
    function Get_RelLimitDeflUy: Double; safecall;
    procedure Set_RelLimitDeflUy(ret: Double); safecall;
    function Get_RelLimitdeflUz: Double; safecall;
    procedure Set_RelLimitdeflUz(ret: Double); safecall;
    function Get_YieldStrengthType: IRDimYieldStrengthTypeEC3; safecall;
    procedure Set_YieldStrengthType(ret: IRDimYieldStrengthTypeEC3); safecall;
    function Get_HotRolledPipes: WordBool; safecall;
    procedure Set_HotRolledPipes(ret: WordBool); safecall;
    property BucklingDiagramY: IRDimBuckDiagramEC3 read Get_BucklingDiagramY write Set_BucklingDiagramY;
    property BucklingDiagramZ: IRDimBuckDiagramEC3 read Get_BucklingDiagramZ write Set_BucklingDiagramZ;
    property LoadTypeY: IRDimLoadTypeEC3 read Get_LoadTypeY write Set_LoadTypeY;
    property LoadTypeZ: IRDimLoadTypeEC3 read Get_LoadTypeZ write Set_LoadTypeZ;
    property LoadLevel: IRDimLoadLevelEC3 read Get_LoadLevel write Set_LoadLevel;
    property LoadLevelValue: Double read Get_LoadLevelValue write Set_LoadLevelValue;
    property LatCoeffLowerFlange: IRDimLatBuckCoeffDiagramEC3 read Get_LatCoeffLowerFlange write Set_LatCoeffLowerFlange;
    property LatCoeffUpperFlange: IRDimLatBuckCoeffDiagramEC3 read Get_LatCoeffUpperFlange write Set_LatCoeffUpperFlange;
    property LatCoeffLowerFlangeValue: Double read Get_LatCoeffLowerFlangeValue write Set_LatCoeffLowerFlangeValue;
    property LatCoeffUpperFlangeValue: Double read Get_LatCoeffUpperFlangeValue write Set_LatCoeffUpperFlangeValue;
    property LatBuckType: IRDimLaterBuckTypeEC3 read Get_LatBuckType write Set_LatBuckType;
    property TensAreaNetGros: Double read Get_TensAreaNetGros write Set_TensAreaNetGros;
    property YieldStrengthValue: Double read Get_YieldStrengthValue write Set_YieldStrengthValue;
    property MaterCoeffGamma0: Double read Get_MaterCoeffGamma0 write Set_MaterCoeffGamma0;
    property MaterCoeffGamma1: Double read Get_MaterCoeffGamma1 write Set_MaterCoeffGamma1;
    property TubeControl: WordBool read Get_TubeControl write Set_TubeControl;
    property BuckLengthCoeffY: Double read Get_BuckLengthCoeffY write Set_BuckLengthCoeffY;
    property BuckLengthCoeffZ: Double read Get_BuckLengthCoeffZ write Set_BuckLengthCoeffZ;
    property RelLimitDeflUy: Double read Get_RelLimitDeflUy write Set_RelLimitDeflUy;
    property RelLimitdeflUz: Double read Get_RelLimitdeflUz write Set_RelLimitdeflUz;
    property YieldStrengthType: IRDimYieldStrengthTypeEC3 read Get_YieldStrengthType write Set_YieldStrengthType;
    property HotRolledPipes: WordBool read Get_HotRolledPipes write Set_HotRolledPipes;
  end;

// *********************************************************************//
// DispIntf:  IRDimMembParamsEC3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {11C7356F-FD27-4791-A45A-7DAA20A0A54D}
// *********************************************************************//
  IRDimMembParamsEC3Disp = dispinterface
    ['{11C7356F-FD27-4791-A45A-7DAA20A0A54D}']
    property BucklingDiagramY: IRDimBuckDiagramEC3 dispid 1610743808;
    property BucklingDiagramZ: IRDimBuckDiagramEC3 dispid 1610743810;
    property LoadTypeY: IRDimLoadTypeEC3 dispid 1610743812;
    property LoadTypeZ: IRDimLoadTypeEC3 dispid 1610743814;
    property LoadLevel: IRDimLoadLevelEC3 dispid 1610743816;
    property LoadLevelValue: Double dispid 1610743818;
    property LatCoeffLowerFlange: IRDimLatBuckCoeffDiagramEC3 dispid 1610743820;
    property LatCoeffUpperFlange: IRDimLatBuckCoeffDiagramEC3 dispid 1610743822;
    property LatCoeffLowerFlangeValue: Double dispid 1610743824;
    property LatCoeffUpperFlangeValue: Double dispid 1610743826;
    property LatBuckType: IRDimLaterBuckTypeEC3 dispid 1610743828;
    property TensAreaNetGros: Double dispid 1610743830;
    property YieldStrengthValue: Double dispid 1610743832;
    property MaterCoeffGamma0: Double dispid 1610743834;
    property MaterCoeffGamma1: Double dispid 1610743836;
    property TubeControl: WordBool dispid 1610743838;
    property BuckLengthCoeffY: Double dispid 1610743840;
    property BuckLengthCoeffZ: Double dispid 1610743842;
    property RelLimitDeflUy: Double dispid 1610743844;
    property RelLimitdeflUz: Double dispid 1610743846;
    property YieldStrengthType: IRDimYieldStrengthTypeEC3 dispid 1610743848;
    property HotRolledPipes: WordBool dispid 1610743850;
  end;

// *********************************************************************//
// Interface: IRDimCodeResEC3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {21F70924-8B6C-470F-A19F-5DC40565936D}
// *********************************************************************//
  IRDimCodeResEC3 = interface(IDispatch)
    ['{21F70924-8B6C-470F-A19F-5DC40565936D}']
    function Get_IsBuckY: Integer; safecall;
    function Get_IsBuckZ: Integer; safecall;
    function Get_StrsShearY: Double; safecall;
    function Get_StrsShearZ: Double; safecall;
    function Get_StrsComp: Double; safecall;
    function Get_StrsTens: Double; safecall;
    function Get_StrsUprEdgeMY: Double; safecall;
    function Get_StrsRgtEdgeMZ: Double; safecall;
    function Get_StrsLowEdgeMY: Double; safecall;
    function Get_StrsLftEdgeMZ: Double; safecall;
    function Get_ClassOfSect: Integer; safecall;
    function Get_ClassOfSectElem1: Integer; safecall;
    function Get_ClassOfSectElem2: Integer; safecall;
    function Get_ClassOfSectElem3: Integer; safecall;
    function Get_ClassOfSectElem4: Integer; safecall;
    function Get_WebSlend: Double; safecall;
    function Get_WebSlend1: Double; safecall;
    function Get_UppFlanSlend: Double; safecall;
    function Get_LowFlanSlend1: Double; safecall;
    function Get_LowFlanSlend2: Double; safecall;
    function Get_BuckSLendLamy: Double; safecall;
    function Get_BuclSlendLamz: Double; safecall;
    function Get_BuckRelSlendLaby: Double; safecall;
    function Get_BuckRelSlendLabz: Double; safecall;
    function Get_LatBuckSlendLamlt: Double; safecall;
    function Get_MaxBuckSlend: Double; safecall;
    function Get_BuckParamKy: Double; safecall;
    function Get_BuckParamKz: Double; safecall;
    function Get_LatBuckParamKlt: Double; safecall;
    function Get_PlastAxForcStrenNplrd: Double; safecall;
    function Get_TensStrenNurd: Double; safecall;
    function Get_PlastTensStrenNtrd: Double; safecall;
    function Get_PlastCompStrenNcrd: Double; safecall;
    function Get_BuckStrenNbyrd: Double; safecall;
    function Get_BuckStrenNbzrd: Double; safecall;
    function Get_OverallBuckStrenNbrd: Double; safecall;
    function Get_LatBuckLengthLd: Double; safecall;
    function Get_LatBuckParamLd: Integer; safecall;
    function Get_InteractParamAlfa: Double; safecall;
    function Get_InteractParamBeta: Double; safecall;
    function Get_LatBuckParamC1: Double; safecall;
    function Get_LatBuckParamC2: Double; safecall;
    function Get_WarpingConstantIw: Double; safecall;
    function Get_TorsMomInertIt: Double; safecall;
    function Get_InteractParamMiy: Double; safecall;
    function Get_InteractParamMiz: Double; safecall;
    function Get_InteractParamMilt: Double; safecall;
    function Get_PlastMomStrenMplyrd: Double; safecall;
    function Get_PlastMomStrenMplzrd: Double; safecall;
    function Get_ElastMomStrenMelyrd: Double; safecall;
    function Get_ElastMomStrenMelzrd: Double; safecall;
    function Get_ReducMomStrenMcyrd: Double; safecall;
    function Get_ReducMomStrenMczrd: Double; safecall;
    function Get_ReducMomStrenMnyrd: Double; safecall;
    function Get_ReducMomStrenMnzrd: Double; safecall;
    function Get_ReducMomStrenMvyrd: Double; safecall;
    function Get_ReducMomStrenMvzrd: Double; safecall;
    function Get_LatBuckMomStrenmbrd: Double; safecall;
    function Get_EffectiveMomenMeff: Double; safecall;
    function Get_CritMomenMcr: Double; safecall;
    function Get_ShearStrenTplyrd: Double; safecall;
    function Get_ShearStrenTplzrd: Double; safecall;
    function Get_BuckCoeffXy: Double; safecall;
    function Get_BuckCoeffXz: Double; safecall;
    function Get_BuckCoeffMinXi: Double; safecall;
    function Get_LatBuckParamFilt: Double; safecall;
    function Get_LatBuckCoeffXlt: Double; safecall;
    function Get_LaodLevel: Double; safecall;
    function Get_MaterCoeffGamma0: Double; safecall;
    function Get_MaterCoeffGamma1: Double; safecall;
    function Get_MaterCoeffGamma2: Double; safecall;
    function Get_CompParamBetaA: Double; safecall;
    function Get_LatBuckParamBetaW: Double; safecall;
    function Get_BendParamBetMy: Double; safecall;
    function Get_BendParamBetaMz: Double; safecall;
    function Get_BendParamBetaMlty: Double; safecall;
    function Get_BendParamBetaMltz: Double; safecall;
    function Get_MomStrengthMpzEuro: Double; safecall;
    function Get_MaterialCapacityFy: Double; safecall;
    function Get_ElastSectModulWyel: Double; safecall;
    function Get_PlastSectModulWypl: Double; safecall;
    function Get_ElastSectModulWzel: Double; safecall;
    function Get_PlastSectModulWzpl: Double; safecall;
    function Get_EffSectModulWyeff: Double; safecall;
    function Get_EffSectModulWzeff: Double; safecall;
    function Get_EffSectAreaSeff: Double; safecall;
    function Get_FlangeAreaAf: Double; safecall;
    function Get_FlangeAreaAw: Double; safecall;
    function Get_AxForceExcentrEny: Double; safecall;
    function Get_AxForcExcentrEnz: Double; safecall;
    function Get_BuckCurveNumbY: Double; safecall;
    function Get_BuckCurveNumbZ: Double; safecall;
    function Get_BuckCurveCoeffAlfy: Double; safecall;
    function Get_BuckCurveCoeffAlfz: Double; safecall;
    function Get_BuckParamFiy: Double; safecall;
    function Get_BuckParamFiz: Double; safecall;
    function Get_MaEffRatio: Double; safecall;
    function Get_PartEffRatio1: Double; safecall;
    function Get_PartEffRatio2: Double; safecall;
    function Get_PartEffRatio3: Double; safecall;
    function Get_PartEffRatio4: Double; safecall;
    function Get_PartEffRatio5: Double; safecall;
    property IsBuckY: Integer read Get_IsBuckY;
    property IsBuckZ: Integer read Get_IsBuckZ;
    property StrsShearY: Double read Get_StrsShearY;
    property StrsShearZ: Double read Get_StrsShearZ;
    property StrsComp: Double read Get_StrsComp;
    property StrsTens: Double read Get_StrsTens;
    property StrsUprEdgeMY: Double read Get_StrsUprEdgeMY;
    property StrsRgtEdgeMZ: Double read Get_StrsRgtEdgeMZ;
    property StrsLowEdgeMY: Double read Get_StrsLowEdgeMY;
    property StrsLftEdgeMZ: Double read Get_StrsLftEdgeMZ;
    property ClassOfSect: Integer read Get_ClassOfSect;
    property ClassOfSectElem1: Integer read Get_ClassOfSectElem1;
    property ClassOfSectElem2: Integer read Get_ClassOfSectElem2;
    property ClassOfSectElem3: Integer read Get_ClassOfSectElem3;
    property ClassOfSectElem4: Integer read Get_ClassOfSectElem4;
    property WebSlend: Double read Get_WebSlend;
    property WebSlend1: Double read Get_WebSlend1;
    property UppFlanSlend: Double read Get_UppFlanSlend;
    property LowFlanSlend1: Double read Get_LowFlanSlend1;
    property LowFlanSlend2: Double read Get_LowFlanSlend2;
    property BuckSLendLamy: Double read Get_BuckSLendLamy;
    property BuclSlendLamz: Double read Get_BuclSlendLamz;
    property BuckRelSlendLaby: Double read Get_BuckRelSlendLaby;
    property BuckRelSlendLabz: Double read Get_BuckRelSlendLabz;
    property LatBuckSlendLamlt: Double read Get_LatBuckSlendLamlt;
    property MaxBuckSlend: Double read Get_MaxBuckSlend;
    property BuckParamKy: Double read Get_BuckParamKy;
    property BuckParamKz: Double read Get_BuckParamKz;
    property LatBuckParamKlt: Double read Get_LatBuckParamKlt;
    property PlastAxForcStrenNplrd: Double read Get_PlastAxForcStrenNplrd;
    property TensStrenNurd: Double read Get_TensStrenNurd;
    property PlastTensStrenNtrd: Double read Get_PlastTensStrenNtrd;
    property PlastCompStrenNcrd: Double read Get_PlastCompStrenNcrd;
    property BuckStrenNbyrd: Double read Get_BuckStrenNbyrd;
    property BuckStrenNbzrd: Double read Get_BuckStrenNbzrd;
    property OverallBuckStrenNbrd: Double read Get_OverallBuckStrenNbrd;
    property LatBuckLengthLd: Double read Get_LatBuckLengthLd;
    property LatBuckParamLd: Integer read Get_LatBuckParamLd;
    property InteractParamAlfa: Double read Get_InteractParamAlfa;
    property InteractParamBeta: Double read Get_InteractParamBeta;
    property LatBuckParamC1: Double read Get_LatBuckParamC1;
    property LatBuckParamC2: Double read Get_LatBuckParamC2;
    property WarpingConstantIw: Double read Get_WarpingConstantIw;
    property TorsMomInertIt: Double read Get_TorsMomInertIt;
    property InteractParamMiy: Double read Get_InteractParamMiy;
    property InteractParamMiz: Double read Get_InteractParamMiz;
    property InteractParamMilt: Double read Get_InteractParamMilt;
    property PlastMomStrenMplyrd: Double read Get_PlastMomStrenMplyrd;
    property PlastMomStrenMplzrd: Double read Get_PlastMomStrenMplzrd;
    property ElastMomStrenMelyrd: Double read Get_ElastMomStrenMelyrd;
    property ElastMomStrenMelzrd: Double read Get_ElastMomStrenMelzrd;
    property ReducMomStrenMcyrd: Double read Get_ReducMomStrenMcyrd;
    property ReducMomStrenMczrd: Double read Get_ReducMomStrenMczrd;
    property ReducMomStrenMnyrd: Double read Get_ReducMomStrenMnyrd;
    property ReducMomStrenMnzrd: Double read Get_ReducMomStrenMnzrd;
    property ReducMomStrenMvyrd: Double read Get_ReducMomStrenMvyrd;
    property ReducMomStrenMvzrd: Double read Get_ReducMomStrenMvzrd;
    property LatBuckMomStrenmbrd: Double read Get_LatBuckMomStrenmbrd;
    property EffectiveMomenMeff: Double read Get_EffectiveMomenMeff;
    property CritMomenMcr: Double read Get_CritMomenMcr;
    property ShearStrenTplyrd: Double read Get_ShearStrenTplyrd;
    property ShearStrenTplzrd: Double read Get_ShearStrenTplzrd;
    property BuckCoeffXy: Double read Get_BuckCoeffXy;
    property BuckCoeffXz: Double read Get_BuckCoeffXz;
    property BuckCoeffMinXi: Double read Get_BuckCoeffMinXi;
    property LatBuckParamFilt: Double read Get_LatBuckParamFilt;
    property LatBuckCoeffXlt: Double read Get_LatBuckCoeffXlt;
    property LaodLevel: Double read Get_LaodLevel;
    property MaterCoeffGamma0: Double read Get_MaterCoeffGamma0;
    property MaterCoeffGamma1: Double read Get_MaterCoeffGamma1;
    property MaterCoeffGamma2: Double read Get_MaterCoeffGamma2;
    property CompParamBetaA: Double read Get_CompParamBetaA;
    property LatBuckParamBetaW: Double read Get_LatBuckParamBetaW;
    property BendParamBetMy: Double read Get_BendParamBetMy;
    property BendParamBetaMz: Double read Get_BendParamBetaMz;
    property BendParamBetaMlty: Double read Get_BendParamBetaMlty;
    property BendParamBetaMltz: Double read Get_BendParamBetaMltz;
    property MomStrengthMpzEuro: Double read Get_MomStrengthMpzEuro;
    property MaterialCapacityFy: Double read Get_MaterialCapacityFy;
    property ElastSectModulWyel: Double read Get_ElastSectModulWyel;
    property PlastSectModulWypl: Double read Get_PlastSectModulWypl;
    property ElastSectModulWzel: Double read Get_ElastSectModulWzel;
    property PlastSectModulWzpl: Double read Get_PlastSectModulWzpl;
    property EffSectModulWyeff: Double read Get_EffSectModulWyeff;
    property EffSectModulWzeff: Double read Get_EffSectModulWzeff;
    property EffSectAreaSeff: Double read Get_EffSectAreaSeff;
    property FlangeAreaAf: Double read Get_FlangeAreaAf;
    property FlangeAreaAw: Double read Get_FlangeAreaAw;
    property AxForceExcentrEny: Double read Get_AxForceExcentrEny;
    property AxForcExcentrEnz: Double read Get_AxForcExcentrEnz;
    property BuckCurveNumbY: Double read Get_BuckCurveNumbY;
    property BuckCurveNumbZ: Double read Get_BuckCurveNumbZ;
    property BuckCurveCoeffAlfy: Double read Get_BuckCurveCoeffAlfy;
    property BuckCurveCoeffAlfz: Double read Get_BuckCurveCoeffAlfz;
    property BuckParamFiy: Double read Get_BuckParamFiy;
    property BuckParamFiz: Double read Get_BuckParamFiz;
    property MaEffRatio: Double read Get_MaEffRatio;
    property PartEffRatio1: Double read Get_PartEffRatio1;
    property PartEffRatio2: Double read Get_PartEffRatio2;
    property PartEffRatio3: Double read Get_PartEffRatio3;
    property PartEffRatio4: Double read Get_PartEffRatio4;
    property PartEffRatio5: Double read Get_PartEffRatio5;
  end;

// *********************************************************************//
// DispIntf:  IRDimCodeResEC3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {21F70924-8B6C-470F-A19F-5DC40565936D}
// *********************************************************************//
  IRDimCodeResEC3Disp = dispinterface
    ['{21F70924-8B6C-470F-A19F-5DC40565936D}']
    property IsBuckY: Integer readonly dispid 1610743808;
    property IsBuckZ: Integer readonly dispid 1610743809;
    property StrsShearY: Double readonly dispid 1610743810;
    property StrsShearZ: Double readonly dispid 1610743811;
    property StrsComp: Double readonly dispid 1610743812;
    property StrsTens: Double readonly dispid 1610743813;
    property StrsUprEdgeMY: Double readonly dispid 1610743814;
    property StrsRgtEdgeMZ: Double readonly dispid 1610743815;
    property StrsLowEdgeMY: Double readonly dispid 1610743816;
    property StrsLftEdgeMZ: Double readonly dispid 1610743817;
    property ClassOfSect: Integer readonly dispid 1610743818;
    property ClassOfSectElem1: Integer readonly dispid 1610743819;
    property ClassOfSectElem2: Integer readonly dispid 1610743820;
    property ClassOfSectElem3: Integer readonly dispid 1610743821;
    property ClassOfSectElem4: Integer readonly dispid 1610743822;
    property WebSlend: Double readonly dispid 1610743823;
    property WebSlend1: Double readonly dispid 1610743824;
    property UppFlanSlend: Double readonly dispid 1610743825;
    property LowFlanSlend1: Double readonly dispid 1610743826;
    property LowFlanSlend2: Double readonly dispid 1610743827;
    property BuckSLendLamy: Double readonly dispid 1610743828;
    property BuclSlendLamz: Double readonly dispid 1610743829;
    property BuckRelSlendLaby: Double readonly dispid 1610743830;
    property BuckRelSlendLabz: Double readonly dispid 1610743831;
    property LatBuckSlendLamlt: Double readonly dispid 1610743832;
    property MaxBuckSlend: Double readonly dispid 1610743833;
    property BuckParamKy: Double readonly dispid 1610743834;
    property BuckParamKz: Double readonly dispid 1610743835;
    property LatBuckParamKlt: Double readonly dispid 1610743836;
    property PlastAxForcStrenNplrd: Double readonly dispid 1610743837;
    property TensStrenNurd: Double readonly dispid 1610743838;
    property PlastTensStrenNtrd: Double readonly dispid 1610743839;
    property PlastCompStrenNcrd: Double readonly dispid 1610743840;
    property BuckStrenNbyrd: Double readonly dispid 1610743841;
    property BuckStrenNbzrd: Double readonly dispid 1610743842;
    property OverallBuckStrenNbrd: Double readonly dispid 1610743843;
    property LatBuckLengthLd: Double readonly dispid 1610743844;
    property LatBuckParamLd: Integer readonly dispid 1610743845;
    property InteractParamAlfa: Double readonly dispid 1610743846;
    property InteractParamBeta: Double readonly dispid 1610743847;
    property LatBuckParamC1: Double readonly dispid 1610743848;
    property LatBuckParamC2: Double readonly dispid 1610743849;
    property WarpingConstantIw: Double readonly dispid 1610743850;
    property TorsMomInertIt: Double readonly dispid 1610743851;
    property InteractParamMiy: Double readonly dispid 1610743852;
    property InteractParamMiz: Double readonly dispid 1610743853;
    property InteractParamMilt: Double readonly dispid 1610743854;
    property PlastMomStrenMplyrd: Double readonly dispid 1610743855;
    property PlastMomStrenMplzrd: Double readonly dispid 1610743856;
    property ElastMomStrenMelyrd: Double readonly dispid 1610743857;
    property ElastMomStrenMelzrd: Double readonly dispid 1610743858;
    property ReducMomStrenMcyrd: Double readonly dispid 1610743859;
    property ReducMomStrenMczrd: Double readonly dispid 1610743860;
    property ReducMomStrenMnyrd: Double readonly dispid 1610743861;
    property ReducMomStrenMnzrd: Double readonly dispid 1610743862;
    property ReducMomStrenMvyrd: Double readonly dispid 1610743863;
    property ReducMomStrenMvzrd: Double readonly dispid 1610743864;
    property LatBuckMomStrenmbrd: Double readonly dispid 1610743865;
    property EffectiveMomenMeff: Double readonly dispid 1610743866;
    property CritMomenMcr: Double readonly dispid 1610743867;
    property ShearStrenTplyrd: Double readonly dispid 1610743868;
    property ShearStrenTplzrd: Double readonly dispid 1610743869;
    property BuckCoeffXy: Double readonly dispid 1610743870;
    property BuckCoeffXz: Double readonly dispid 1610743871;
    property BuckCoeffMinXi: Double readonly dispid 1610743872;
    property LatBuckParamFilt: Double readonly dispid 1610743873;
    property LatBuckCoeffXlt: Double readonly dispid 1610743874;
    property LaodLevel: Double readonly dispid 1610743875;
    property MaterCoeffGamma0: Double readonly dispid 1610743876;
    property MaterCoeffGamma1: Double readonly dispid 1610743877;
    property MaterCoeffGamma2: Double readonly dispid 1610743878;
    property CompParamBetaA: Double readonly dispid 1610743879;
    property LatBuckParamBetaW: Double readonly dispid 1610743880;
    property BendParamBetMy: Double readonly dispid 1610743881;
    property BendParamBetaMz: Double readonly dispid 1610743882;
    property BendParamBetaMlty: Double readonly dispid 1610743883;
    property BendParamBetaMltz: Double readonly dispid 1610743884;
    property MomStrengthMpzEuro: Double readonly dispid 1610743885;
    property MaterialCapacityFy: Double readonly dispid 1610743886;
    property ElastSectModulWyel: Double readonly dispid 1610743887;
    property PlastSectModulWypl: Double readonly dispid 1610743888;
    property ElastSectModulWzel: Double readonly dispid 1610743889;
    property PlastSectModulWzpl: Double readonly dispid 1610743890;
    property EffSectModulWyeff: Double readonly dispid 1610743891;
    property EffSectModulWzeff: Double readonly dispid 1610743892;
    property EffSectAreaSeff: Double readonly dispid 1610743893;
    property FlangeAreaAf: Double readonly dispid 1610743894;
    property FlangeAreaAw: Double readonly dispid 1610743895;
    property AxForceExcentrEny: Double readonly dispid 1610743896;
    property AxForcExcentrEnz: Double readonly dispid 1610743897;
    property BuckCurveNumbY: Double readonly dispid 1610743898;
    property BuckCurveNumbZ: Double readonly dispid 1610743899;
    property BuckCurveCoeffAlfy: Double readonly dispid 1610743900;
    property BuckCurveCoeffAlfz: Double readonly dispid 1610743901;
    property BuckParamFiy: Double readonly dispid 1610743902;
    property BuckParamFiz: Double readonly dispid 1610743903;
    property MaEffRatio: Double readonly dispid 1610743904;
    property PartEffRatio1: Double readonly dispid 1610743905;
    property PartEffRatio2: Double readonly dispid 1610743906;
    property PartEffRatio3: Double readonly dispid 1610743907;
    property PartEffRatio4: Double readonly dispid 1610743908;
    property PartEffRatio5: Double readonly dispid 1610743909;
  end;

// *********************************************************************//
// Interface: IRDimMembParamsE32
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {47CFA801-3726-42DC-9488-61D4EFF292A6}
// *********************************************************************//
  IRDimMembParamsE32 = interface(IDispatch)
    ['{47CFA801-3726-42DC-9488-61D4EFF292A6}']
    function Get_BucklingDiagramY: IRDimBuckDiagramE32; safecall;
    procedure Set_BucklingDiagramY(ret: IRDimBuckDiagramE32); safecall;
    function Get_BucklingDiagramZ: IRDimBuckDiagramE32; safecall;
    procedure Set_BucklingDiagramZ(ret: IRDimBuckDiagramE32); safecall;
    function Get_BuckLengthCoeffY: Double; safecall;
    procedure Set_BuckLengthCoeffY(ret: Double); safecall;
    function Get_BuckLengthCoeffZ: Double; safecall;
    procedure Set_BuckLengthCoeffZ(ret: Double); safecall;
    function Get_BucklingCurveY: IRDimBucklingCurveE32; safecall;
    procedure Set_BucklingCurveY(ret: IRDimBucklingCurveE32); safecall;
    function Get_BucklingCurveZ: IRDimBucklingCurveE32; safecall;
    procedure Set_BucklingCurveZ(ret: IRDimBucklingCurveE32); safecall;
    function Get_LoadTypeY: IRDimLoadTypeE32; safecall;
    procedure Set_LoadTypeY(ret: IRDimLoadTypeE32); safecall;
    function Get_LoadTypeZ: IRDimLoadTypeE32; safecall;
    procedure Set_LoadTypeZ(ret: IRDimLoadTypeE32); safecall;
    function Get_LoadLevel: IRDimLoadLevelE32; safecall;
    procedure Set_LoadLevel(ret: IRDimLoadLevelE32); safecall;
    function Get_LoadLevelValue: Double; safecall;
    procedure Set_LoadLevelValue(ret: Double); safecall;
    function Get_LatCoeffLowerFlange: IRDimLatBuckCoeffDiagramE32; safecall;
    procedure Set_LatCoeffLowerFlange(ret: IRDimLatBuckCoeffDiagramE32); safecall;
    function Get_LatCoeffUpperFlange: IRDimLatBuckCoeffDiagramE32; safecall;
    procedure Set_LatCoeffUpperFlange(ret: IRDimLatBuckCoeffDiagramE32); safecall;
    function Get_LatCoeffLowerFlangeValue: Double; safecall;
    procedure Set_LatCoeffLowerFlangeValue(ret: Double); safecall;
    function Get_LatCoeffUpperFlangeValue: Double; safecall;
    procedure Set_LatCoeffUpperFlangeValue(ret: Double); safecall;
    function Get_LateralBuckling: WordBool; safecall;
    procedure Set_LateralBuckling(ret: WordBool); safecall;
    function Get_LatBuckMethodType: IRDimLatBuckMethodTypeE32; safecall;
    procedure Set_LatBuckMethodType(ret: IRDimLatBuckMethodTypeE32); safecall;
    function Get_TensAreaNetGros: Double; safecall;
    procedure Set_TensAreaNetGros(ret: Double); safecall;
    function Get_YieldStrengthType: IRDimYieldStrengthTypeE32; safecall;
    procedure Set_YieldStrengthType(ret: IRDimYieldStrengthTypeE32); safecall;
    function Get_YieldStrengthValue: Double; safecall;
    procedure Set_YieldStrengthValue(ret: Double); safecall;
    function Get_MaterCoeffGamma0: Double; safecall;
    procedure Set_MaterCoeffGamma0(ret: Double); safecall;
    function Get_MaterCoeffGamma1: Double; safecall;
    procedure Set_MaterCoeffGamma1(ret: Double); safecall;
    function Get_MaterCoeffGamma2: Double; safecall;
    procedure Set_MaterCoeffGamma2(ret: Double); safecall;
    function Get_TubeControl: WordBool; safecall;
    procedure Set_TubeControl(ret: WordBool); safecall;
    function Get_HotRolledPipes: WordBool; safecall;
    procedure Set_HotRolledPipes(ret: WordBool); safecall;
    function Get_TorsBuckOn: WordBool; safecall;
    procedure Set_TorsBuckOn(ret: WordBool); safecall;
    function Get_Simplified: WordBool; safecall;
    procedure Set_Simplified(ret: WordBool); safecall;
    function Get_AngleConn: WordBool; safecall;
    procedure Set_AngleConn(ret: WordBool); safecall;
    function Get_BracedY: WordBool; safecall;
    procedure Set_BracedY(ret: WordBool); safecall;
    function Get_BracedZ: WordBool; safecall;
    procedure Set_BracedZ(ret: WordBool); safecall;
    function Get_LamLT0: Double; safecall;
    procedure Set_LamLT0(ret: Double); safecall;
    function Get_Beta: Double; safecall;
    procedure Set_Beta(ret: Double); safecall;
    function Get_Kfl: Double; safecall;
    procedure Set_Kfl(ret: Double); safecall;
    function Get_Eta: Double; safecall;
    procedure Set_Eta(ret: Double); safecall;
    function Get_BoltsNo: Integer; safecall;
    procedure Set_BoltsNo(ret: Integer); safecall;
    function Get_BoltsDiam: Double; safecall;
    procedure Set_BoltsDiam(ret: Double); safecall;
    function Get_DistP1: Double; safecall;
    procedure Set_DistP1(ret: Double); safecall;
    function Get_DistE2: Double; safecall;
    procedure Set_DistE2(ret: Double); safecall;
    function Get_RelLimitDeflUy: Double; safecall;
    procedure Set_RelLimitDeflUy(ret: Double); safecall;
    function Get_RelLimitdeflUz: Double; safecall;
    procedure Set_RelLimitdeflUz(ret: Double); safecall;
    function Get_ThinWalled: IRDimThinWalledE32; safecall;
    procedure Set_ThinWalled(const ret: IRDimThinWalledE32); safecall;
    function Get_FireResist: IRDimFireResistE32; safecall;
    procedure Set_FireResist(const ret: IRDimFireResistE32); safecall;
    function Get_ComplexSect: IRDimComplexSectE32; safecall;
    procedure Set_ComplexSect(const ret: IRDimComplexSectE32); safecall;
    property BucklingDiagramY: IRDimBuckDiagramE32 read Get_BucklingDiagramY write Set_BucklingDiagramY;
    property BucklingDiagramZ: IRDimBuckDiagramE32 read Get_BucklingDiagramZ write Set_BucklingDiagramZ;
    property BuckLengthCoeffY: Double read Get_BuckLengthCoeffY write Set_BuckLengthCoeffY;
    property BuckLengthCoeffZ: Double read Get_BuckLengthCoeffZ write Set_BuckLengthCoeffZ;
    property BucklingCurveY: IRDimBucklingCurveE32 read Get_BucklingCurveY write Set_BucklingCurveY;
    property BucklingCurveZ: IRDimBucklingCurveE32 read Get_BucklingCurveZ write Set_BucklingCurveZ;
    property LoadTypeY: IRDimLoadTypeE32 read Get_LoadTypeY write Set_LoadTypeY;
    property LoadTypeZ: IRDimLoadTypeE32 read Get_LoadTypeZ write Set_LoadTypeZ;
    property LoadLevel: IRDimLoadLevelE32 read Get_LoadLevel write Set_LoadLevel;
    property LoadLevelValue: Double read Get_LoadLevelValue write Set_LoadLevelValue;
    property LatCoeffLowerFlange: IRDimLatBuckCoeffDiagramE32 read Get_LatCoeffLowerFlange write Set_LatCoeffLowerFlange;
    property LatCoeffUpperFlange: IRDimLatBuckCoeffDiagramE32 read Get_LatCoeffUpperFlange write Set_LatCoeffUpperFlange;
    property LatCoeffLowerFlangeValue: Double read Get_LatCoeffLowerFlangeValue write Set_LatCoeffLowerFlangeValue;
    property LatCoeffUpperFlangeValue: Double read Get_LatCoeffUpperFlangeValue write Set_LatCoeffUpperFlangeValue;
    property LateralBuckling: WordBool read Get_LateralBuckling write Set_LateralBuckling;
    property LatBuckMethodType: IRDimLatBuckMethodTypeE32 read Get_LatBuckMethodType write Set_LatBuckMethodType;
    property TensAreaNetGros: Double read Get_TensAreaNetGros write Set_TensAreaNetGros;
    property YieldStrengthType: IRDimYieldStrengthTypeE32 read Get_YieldStrengthType write Set_YieldStrengthType;
    property YieldStrengthValue: Double read Get_YieldStrengthValue write Set_YieldStrengthValue;
    property MaterCoeffGamma0: Double read Get_MaterCoeffGamma0 write Set_MaterCoeffGamma0;
    property MaterCoeffGamma1: Double read Get_MaterCoeffGamma1 write Set_MaterCoeffGamma1;
    property MaterCoeffGamma2: Double read Get_MaterCoeffGamma2 write Set_MaterCoeffGamma2;
    property TubeControl: WordBool read Get_TubeControl write Set_TubeControl;
    property HotRolledPipes: WordBool read Get_HotRolledPipes write Set_HotRolledPipes;
    property TorsBuckOn: WordBool read Get_TorsBuckOn write Set_TorsBuckOn;
    property Simplified: WordBool read Get_Simplified write Set_Simplified;
    property AngleConn: WordBool read Get_AngleConn write Set_AngleConn;
    property BracedY: WordBool read Get_BracedY write Set_BracedY;
    property BracedZ: WordBool read Get_BracedZ write Set_BracedZ;
    property LamLT0: Double read Get_LamLT0 write Set_LamLT0;
    property Beta: Double read Get_Beta write Set_Beta;
    property Kfl: Double read Get_Kfl write Set_Kfl;
    property Eta: Double read Get_Eta write Set_Eta;
    property BoltsNo: Integer read Get_BoltsNo write Set_BoltsNo;
    property BoltsDiam: Double read Get_BoltsDiam write Set_BoltsDiam;
    property DistP1: Double read Get_DistP1 write Set_DistP1;
    property DistE2: Double read Get_DistE2 write Set_DistE2;
    property RelLimitDeflUy: Double read Get_RelLimitDeflUy write Set_RelLimitDeflUy;
    property RelLimitdeflUz: Double read Get_RelLimitdeflUz write Set_RelLimitdeflUz;
    property ThinWalled: IRDimThinWalledE32 read Get_ThinWalled write Set_ThinWalled;
    property FireResist: IRDimFireResistE32 read Get_FireResist write Set_FireResist;
    property ComplexSect: IRDimComplexSectE32 read Get_ComplexSect write Set_ComplexSect;
  end;

// *********************************************************************//
// DispIntf:  IRDimMembParamsE32Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {47CFA801-3726-42DC-9488-61D4EFF292A6}
// *********************************************************************//
  IRDimMembParamsE32Disp = dispinterface
    ['{47CFA801-3726-42DC-9488-61D4EFF292A6}']
    property BucklingDiagramY: IRDimBuckDiagramE32 dispid 1610743808;
    property BucklingDiagramZ: IRDimBuckDiagramE32 dispid 1610743810;
    property BuckLengthCoeffY: Double dispid 1610743812;
    property BuckLengthCoeffZ: Double dispid 1610743814;
    property BucklingCurveY: IRDimBucklingCurveE32 dispid 1610743816;
    property BucklingCurveZ: IRDimBucklingCurveE32 dispid 1610743818;
    property LoadTypeY: IRDimLoadTypeE32 dispid 1610743820;
    property LoadTypeZ: IRDimLoadTypeE32 dispid 1610743822;
    property LoadLevel: IRDimLoadLevelE32 dispid 1610743824;
    property LoadLevelValue: Double dispid 1610743826;
    property LatCoeffLowerFlange: IRDimLatBuckCoeffDiagramE32 dispid 1610743828;
    property LatCoeffUpperFlange: IRDimLatBuckCoeffDiagramE32 dispid 1610743830;
    property LatCoeffLowerFlangeValue: Double dispid 1610743832;
    property LatCoeffUpperFlangeValue: Double dispid 1610743834;
    property LateralBuckling: WordBool dispid 1610743836;
    property LatBuckMethodType: IRDimLatBuckMethodTypeE32 dispid 1610743838;
    property TensAreaNetGros: Double dispid 1610743840;
    property YieldStrengthType: IRDimYieldStrengthTypeE32 dispid 1610743842;
    property YieldStrengthValue: Double dispid 1610743844;
    property MaterCoeffGamma0: Double dispid 1610743846;
    property MaterCoeffGamma1: Double dispid 1610743848;
    property MaterCoeffGamma2: Double dispid 1610743850;
    property TubeControl: WordBool dispid 1610743852;
    property HotRolledPipes: WordBool dispid 1610743854;
    property TorsBuckOn: WordBool dispid 1610743856;
    property Simplified: WordBool dispid 1610743858;
    property AngleConn: WordBool dispid 1610743860;
    property BracedY: WordBool dispid 1610743862;
    property BracedZ: WordBool dispid 1610743864;
    property LamLT0: Double dispid 1610743866;
    property Beta: Double dispid 1610743868;
    property Kfl: Double dispid 1610743870;
    property Eta: Double dispid 1610743872;
    property BoltsNo: Integer dispid 1610743874;
    property BoltsDiam: Double dispid 1610743876;
    property DistP1: Double dispid 1610743878;
    property DistE2: Double dispid 1610743880;
    property RelLimitDeflUy: Double dispid 1610743882;
    property RelLimitdeflUz: Double dispid 1610743884;
    property ThinWalled: IRDimThinWalledE32 dispid 1610743886;
    property FireResist: IRDimFireResistE32 dispid 1610743888;
    property ComplexSect: IRDimComplexSectE32 dispid 1610743890;
  end;

// *********************************************************************//
// Interface: IRDimThinWalledE32
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9048FBC6-44C7-4AAB-8A04-AAE60F9234E0}
// *********************************************************************//
  IRDimThinWalledE32 = interface(IDispatch)
    ['{9048FBC6-44C7-4AAB-8A04-AAE60F9234E0}']
    function Get_Active: Integer; safecall;
    procedure Set_Active(ret: Integer); safecall;
    function Get_TypeOfForming: IRDimThinWalledFormingTypeE32; safecall;
    procedure Set_TypeOfForming(ret: IRDimThinWalledFormingTypeE32); safecall;
    function Get_UseStiffWithProfSheets: Integer; safecall;
    procedure Set_UseStiffWithProfSheets(ret: Integer); safecall;
    function Get_Sheeting_Name: WideString; safecall;
    procedure Set_Sheeting_Name(const ret: WideString); safecall;
    function Get_Sheeting_NomThick: Double; safecall;
    procedure Set_Sheeting_NomThick(ret: Double); safecall;
    function Get_Sheeting_CorrugWidth: Double; safecall;
    procedure Set_Sheeting_CorrugWidth(ret: Double); safecall;
    function Get_Sheeting_FlangeWidth: Double; safecall;
    procedure Set_Sheeting_FlangeWidth(ret: Double); safecall;
    function Get_Sheeting_SectNomOfIner: Double; safecall;
    procedure Set_Sheeting_SectNomOfIner(ret: Double); safecall;
    function Get_PosOfSheeting: IRDimThinWalledPosOfSheetingE32; safecall;
    procedure Set_PosOfSheeting(ret: IRDimThinWalledPosOfSheetingE32); safecall;
    function Get_SheetFastened: IRDimThinWalledSheetFastenedE32; safecall;
    procedure Set_SheetFastened(ret: IRDimThinWalledSheetFastenedE32); safecall;
    function Get_PitchOfFasteners: IRDimThinWalledPitchOfFastenersE32; safecall;
    procedure Set_PitchOfFasteners(ret: IRDimThinWalledPitchOfFastenersE32); safecall;
    function Get_ModelForCalcul: IRDimThinWalledModelForCalculE32; safecall;
    procedure Set_ModelForCalcul(ret: IRDimThinWalledModelForCalculE32); safecall;
    function Get_PosOfPurlins: IRDimThinWalledPosOfPurlinsE32; safecall;
    procedure Set_PosOfPurlins(ret: IRDimThinWalledPosOfPurlinsE32); safecall;
    function Get_WebDistance: Double; safecall;
    procedure Set_WebDistance(ret: Double); safecall;
    function Get_SpacingOfPurlins: Double; safecall;
    procedure Set_SpacingOfPurlins(ret: Double); safecall;
    property Active: Integer read Get_Active write Set_Active;
    property TypeOfForming: IRDimThinWalledFormingTypeE32 read Get_TypeOfForming write Set_TypeOfForming;
    property UseStiffWithProfSheets: Integer read Get_UseStiffWithProfSheets write Set_UseStiffWithProfSheets;
    property Sheeting_Name: WideString read Get_Sheeting_Name write Set_Sheeting_Name;
    property Sheeting_NomThick: Double read Get_Sheeting_NomThick write Set_Sheeting_NomThick;
    property Sheeting_CorrugWidth: Double read Get_Sheeting_CorrugWidth write Set_Sheeting_CorrugWidth;
    property Sheeting_FlangeWidth: Double read Get_Sheeting_FlangeWidth write Set_Sheeting_FlangeWidth;
    property Sheeting_SectNomOfIner: Double read Get_Sheeting_SectNomOfIner write Set_Sheeting_SectNomOfIner;
    property PosOfSheeting: IRDimThinWalledPosOfSheetingE32 read Get_PosOfSheeting write Set_PosOfSheeting;
    property SheetFastened: IRDimThinWalledSheetFastenedE32 read Get_SheetFastened write Set_SheetFastened;
    property PitchOfFasteners: IRDimThinWalledPitchOfFastenersE32 read Get_PitchOfFasteners write Set_PitchOfFasteners;
    property ModelForCalcul: IRDimThinWalledModelForCalculE32 read Get_ModelForCalcul write Set_ModelForCalcul;
    property PosOfPurlins: IRDimThinWalledPosOfPurlinsE32 read Get_PosOfPurlins write Set_PosOfPurlins;
    property WebDistance: Double read Get_WebDistance write Set_WebDistance;
    property SpacingOfPurlins: Double read Get_SpacingOfPurlins write Set_SpacingOfPurlins;
  end;

// *********************************************************************//
// DispIntf:  IRDimThinWalledE32Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9048FBC6-44C7-4AAB-8A04-AAE60F9234E0}
// *********************************************************************//
  IRDimThinWalledE32Disp = dispinterface
    ['{9048FBC6-44C7-4AAB-8A04-AAE60F9234E0}']
    property Active: Integer dispid 1610743808;
    property TypeOfForming: IRDimThinWalledFormingTypeE32 dispid 1610743810;
    property UseStiffWithProfSheets: Integer dispid 1610743812;
    property Sheeting_Name: WideString dispid 1610743814;
    property Sheeting_NomThick: Double dispid 1610743816;
    property Sheeting_CorrugWidth: Double dispid 1610743818;
    property Sheeting_FlangeWidth: Double dispid 1610743820;
    property Sheeting_SectNomOfIner: Double dispid 1610743822;
    property PosOfSheeting: IRDimThinWalledPosOfSheetingE32 dispid 1610743824;
    property SheetFastened: IRDimThinWalledSheetFastenedE32 dispid 1610743826;
    property PitchOfFasteners: IRDimThinWalledPitchOfFastenersE32 dispid 1610743828;
    property ModelForCalcul: IRDimThinWalledModelForCalculE32 dispid 1610743830;
    property PosOfPurlins: IRDimThinWalledPosOfPurlinsE32 dispid 1610743832;
    property WebDistance: Double dispid 1610743834;
    property SpacingOfPurlins: Double dispid 1610743836;
  end;

// *********************************************************************//
// Interface: IRDimFireResistE32
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F89463F5-48D2-49F9-B588-0181CADC5C36}
// *********************************************************************//
  IRDimFireResistE32 = interface(IDispatch)
    ['{F89463F5-48D2-49F9-B588-0181CADC5C36}']
    function Get_Active: Integer; safecall;
    procedure Set_Active(ret: Integer); safecall;
    function Get_AutoMembTemp: Integer; safecall;
    procedure Set_AutoMembTemp(ret: Integer); safecall;
    function Get_UserDefMembTemp: Double; safecall;
    procedure Set_UserDefMembTemp(ret: Double); safecall;
    function Get_treq: Double; safecall;
    procedure Set_treq(ret: Double); safecall;
    function Get_TempCurve: IRDimFireResistTempCurveE32; safecall;
    procedure Set_TempCurve(ret: IRDimFireResistTempCurveE32); safecall;
    function Get_SteelMembProt: IRDimFireResistSteelMembProtE32; safecall;
    procedure Set_SteelMembProt(ret: IRDimFireResistSteelMembProtE32); safecall;
    function Get_SectExposition: IRDimFireResistSectExpositionE32; safecall;
    procedure Set_SectExposition(ret: IRDimFireResistSectExpositionE32); safecall;
    function Get_gnr: Double; safecall;
    procedure Set_gnr(ret: Double); safecall;
    function Get_gnc: Double; safecall;
    procedure Set_gnc(ret: Double); safecall;
    function Get_k_2: Double; safecall;
    procedure Set_k_2(ret: Double); safecall;
    function Get_roa: Double; safecall;
    procedure Set_roa(ret: Double); safecall;
    function Get_alfc: Double; safecall;
    procedure Set_alfc(ret: Double); safecall;
    function Get_Fi: Double; safecall;
    procedure Set_Fi(ret: Double); safecall;
    function Get_em: Double; safecall;
    procedure Set_em(ret: Double); safecall;
    function Get_ef: Double; safecall;
    procedure Set_ef(ret: Double); safecall;
    function Get_IgnoreShadowEffect: Integer; safecall;
    procedure Set_IgnoreShadowEffect(ret: Integer); safecall;
    function Get_EncasementType: IRDimFireResistEncasementTypeE32; safecall;
    procedure Set_EncasementType(ret: IRDimFireResistEncasementTypeE32); safecall;
    function Get_dp: Double; safecall;
    procedure Set_dp(ret: Double); safecall;
    procedure Material_GroupAndName(const group: WideString; const Name: WideString; lang: Integer); safecall;
    function Get_Material_Group: WideString; safecall;
    function Get_Material_Name: WideString; safecall;
    function Get_Material_rop: Double; safecall;
    procedure Set_Material_rop(ret: Double); safecall;
    function Get_Material_cp: Double; safecall;
    procedure Set_Material_cp(ret: Double); safecall;
    function Get_Material_lap: Double; safecall;
    procedure Set_Material_lap(ret: Double); safecall;
    property Active: Integer read Get_Active write Set_Active;
    property AutoMembTemp: Integer read Get_AutoMembTemp write Set_AutoMembTemp;
    property UserDefMembTemp: Double read Get_UserDefMembTemp write Set_UserDefMembTemp;
    property treq: Double read Get_treq write Set_treq;
    property TempCurve: IRDimFireResistTempCurveE32 read Get_TempCurve write Set_TempCurve;
    property SteelMembProt: IRDimFireResistSteelMembProtE32 read Get_SteelMembProt write Set_SteelMembProt;
    property SectExposition: IRDimFireResistSectExpositionE32 read Get_SectExposition write Set_SectExposition;
    property gnr: Double read Get_gnr write Set_gnr;
    property gnc: Double read Get_gnc write Set_gnc;
    property k_2: Double read Get_k_2 write Set_k_2;
    property roa: Double read Get_roa write Set_roa;
    property alfc: Double read Get_alfc write Set_alfc;
    property Fi: Double read Get_Fi write Set_Fi;
    property em: Double read Get_em write Set_em;
    property ef: Double read Get_ef write Set_ef;
    property IgnoreShadowEffect: Integer read Get_IgnoreShadowEffect write Set_IgnoreShadowEffect;
    property EncasementType: IRDimFireResistEncasementTypeE32 read Get_EncasementType write Set_EncasementType;
    property dp: Double read Get_dp write Set_dp;
    property Material_Group: WideString read Get_Material_Group;
    property Material_Name: WideString read Get_Material_Name;
    property Material_rop: Double read Get_Material_rop write Set_Material_rop;
    property Material_cp: Double read Get_Material_cp write Set_Material_cp;
    property Material_lap: Double read Get_Material_lap write Set_Material_lap;
  end;

// *********************************************************************//
// DispIntf:  IRDimFireResistE32Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F89463F5-48D2-49F9-B588-0181CADC5C36}
// *********************************************************************//
  IRDimFireResistE32Disp = dispinterface
    ['{F89463F5-48D2-49F9-B588-0181CADC5C36}']
    property Active: Integer dispid 1610743808;
    property AutoMembTemp: Integer dispid 1610743810;
    property UserDefMembTemp: Double dispid 1610743812;
    property treq: Double dispid 1610743814;
    property TempCurve: IRDimFireResistTempCurveE32 dispid 1610743816;
    property SteelMembProt: IRDimFireResistSteelMembProtE32 dispid 1610743818;
    property SectExposition: IRDimFireResistSectExpositionE32 dispid 1610743820;
    property gnr: Double dispid 1610743822;
    property gnc: Double dispid 1610743824;
    property k_2: Double dispid 1610743826;
    property roa: Double dispid 1610743828;
    property alfc: Double dispid 1610743830;
    property Fi: Double dispid 1610743832;
    property em: Double dispid 1610743834;
    property ef: Double dispid 1610743836;
    property IgnoreShadowEffect: Integer dispid 1610743838;
    property EncasementType: IRDimFireResistEncasementTypeE32 dispid 1610743840;
    property dp: Double dispid 1610743842;
    procedure Material_GroupAndName(const group: WideString; const Name: WideString; lang: Integer); dispid 1610743844;
    property Material_Group: WideString readonly dispid 1610743845;
    property Material_Name: WideString readonly dispid 1610743846;
    property Material_rop: Double dispid 1610743847;
    property Material_cp: Double dispid 1610743849;
    property Material_lap: Double dispid 1610743851;
  end;

// *********************************************************************//
// Interface: IRDimComplexSectE32
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BE819121-D324-4816-AC3A-44F295AFF298}
// *********************************************************************//
  IRDimComplexSectE32 = interface(IDispatch)
    ['{BE819121-D324-4816-AC3A-44F295AFF298}']
    function Get_Active: Integer; safecall;
    procedure Set_Active(ret: Integer); safecall;
    function Get_NoLaticeXY: Integer; safecall;
    procedure Set_NoLaticeXY(ret: Integer); safecall;
    function Get_NoLaticeXZ: Integer; safecall;
    procedure Set_NoLaticeXZ(ret: Integer); safecall;
    function Get_ChordConnectTypeXY: IRDimComplexSectChordConnTypeE32; safecall;
    procedure Set_ChordConnectTypeXY(ret: IRDimComplexSectChordConnTypeE32); safecall;
    function Get_ChordConnectTypeXZ: IRDimComplexSectChordConnTypeE32; safecall;
    procedure Set_ChordConnectTypeXZ(ret: IRDimComplexSectChordConnTypeE32); safecall;
    function Get_BattenHeightXY: Double; safecall;
    procedure Set_BattenHeightXY(ret: Double); safecall;
    function Get_BattenHeightXZ: Double; safecall;
    procedure Set_BattenHeightXZ(ret: Double); safecall;
    function Get_BattenThicknessXY: Double; safecall;
    procedure Set_BattenThicknessXY(ret: Double); safecall;
    function Get_BattenThicknessXZ: Double; safecall;
    procedure Set_BattenThicknessXZ(ret: Double); safecall;
    function Get_LaticeDiagonal_BaseXY: WideString; safecall;
    procedure Set_LaticeDiagonal_BaseXY(const ret: WideString); safecall;
    function Get_LaticeDiagonal_BaseXZ: WideString; safecall;
    procedure Set_LaticeDiagonal_BaseXZ(const ret: WideString); safecall;
    function Get_LaticeDiagonal_SectXY: WideString; safecall;
    procedure Set_LaticeDiagonal_SectXY(const ret: WideString); safecall;
    function Get_LaticeDiagonal_SectXZ: WideString; safecall;
    procedure Set_LaticeDiagonal_SectXZ(const ret: WideString); safecall;
    function Get_LaticeDiagonal_Ad_XY: Double; safecall;
    procedure Set_LaticeDiagonal_Ad_XY(ret: Double); safecall;
    function Get_LaticeDiagonal_Ad_XZ: Double; safecall;
    procedure Set_LaticeDiagonal_Ad_XZ(ret: Double); safecall;
    function Get_LaticePost_BaseXY: WideString; safecall;
    procedure Set_LaticePost_BaseXY(const ret: WideString); safecall;
    function Get_LaticePost_BaseXZ: WideString; safecall;
    procedure Set_LaticePost_BaseXZ(const ret: WideString); safecall;
    function Get_LaticePost_SectXY: WideString; safecall;
    procedure Set_LaticePost_SectXY(const ret: WideString); safecall;
    function Get_LaticePost_SectXZ: WideString; safecall;
    procedure Set_LaticePost_SectXZ(const ret: WideString); safecall;
    function Get_LaticePost_Av_XY: Double; safecall;
    procedure Set_LaticePost_Av_XY(ret: Double); safecall;
    function Get_LaticePost_Av_XZ: Double; safecall;
    procedure Set_LaticePost_Av_XZ(ret: Double); safecall;
    function Get_Distribution: IRDimComplexSectDistTypeE32; safecall;
    procedure Set_Distribution(ret: IRDimComplexSectDistTypeE32); safecall;
    function Get_BattensOrLaticeFieldsNum: Integer; safecall;
    procedure Set_BattensOrLaticeFieldsNum(ret: Integer); safecall;
    function Get_Spacing_a: Double; safecall;
    procedure Set_Spacing_a(ret: Double); safecall;
    function Get_LaticeType: IRDimComplexSectLaticeTypeE32; safecall;
    procedure Set_LaticeType(ret: IRDimComplexSectLaticeTypeE32); safecall;
    property Active: Integer read Get_Active write Set_Active;
    property NoLaticeXY: Integer read Get_NoLaticeXY write Set_NoLaticeXY;
    property NoLaticeXZ: Integer read Get_NoLaticeXZ write Set_NoLaticeXZ;
    property ChordConnectTypeXY: IRDimComplexSectChordConnTypeE32 read Get_ChordConnectTypeXY write Set_ChordConnectTypeXY;
    property ChordConnectTypeXZ: IRDimComplexSectChordConnTypeE32 read Get_ChordConnectTypeXZ write Set_ChordConnectTypeXZ;
    property BattenHeightXY: Double read Get_BattenHeightXY write Set_BattenHeightXY;
    property BattenHeightXZ: Double read Get_BattenHeightXZ write Set_BattenHeightXZ;
    property BattenThicknessXY: Double read Get_BattenThicknessXY write Set_BattenThicknessXY;
    property BattenThicknessXZ: Double read Get_BattenThicknessXZ write Set_BattenThicknessXZ;
    property LaticeDiagonal_BaseXY: WideString read Get_LaticeDiagonal_BaseXY write Set_LaticeDiagonal_BaseXY;
    property LaticeDiagonal_BaseXZ: WideString read Get_LaticeDiagonal_BaseXZ write Set_LaticeDiagonal_BaseXZ;
    property LaticeDiagonal_SectXY: WideString read Get_LaticeDiagonal_SectXY write Set_LaticeDiagonal_SectXY;
    property LaticeDiagonal_SectXZ: WideString read Get_LaticeDiagonal_SectXZ write Set_LaticeDiagonal_SectXZ;
    property LaticeDiagonal_Ad_XY: Double read Get_LaticeDiagonal_Ad_XY write Set_LaticeDiagonal_Ad_XY;
    property LaticeDiagonal_Ad_XZ: Double read Get_LaticeDiagonal_Ad_XZ write Set_LaticeDiagonal_Ad_XZ;
    property LaticePost_BaseXY: WideString read Get_LaticePost_BaseXY write Set_LaticePost_BaseXY;
    property LaticePost_BaseXZ: WideString read Get_LaticePost_BaseXZ write Set_LaticePost_BaseXZ;
    property LaticePost_SectXY: WideString read Get_LaticePost_SectXY write Set_LaticePost_SectXY;
    property LaticePost_SectXZ: WideString read Get_LaticePost_SectXZ write Set_LaticePost_SectXZ;
    property LaticePost_Av_XY: Double read Get_LaticePost_Av_XY write Set_LaticePost_Av_XY;
    property LaticePost_Av_XZ: Double read Get_LaticePost_Av_XZ write Set_LaticePost_Av_XZ;
    property Distribution: IRDimComplexSectDistTypeE32 read Get_Distribution write Set_Distribution;
    property BattensOrLaticeFieldsNum: Integer read Get_BattensOrLaticeFieldsNum write Set_BattensOrLaticeFieldsNum;
    property Spacing_a: Double read Get_Spacing_a write Set_Spacing_a;
    property LaticeType: IRDimComplexSectLaticeTypeE32 read Get_LaticeType write Set_LaticeType;
  end;

// *********************************************************************//
// DispIntf:  IRDimComplexSectE32Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BE819121-D324-4816-AC3A-44F295AFF298}
// *********************************************************************//
  IRDimComplexSectE32Disp = dispinterface
    ['{BE819121-D324-4816-AC3A-44F295AFF298}']
    property Active: Integer dispid 1610743808;
    property NoLaticeXY: Integer dispid 1610743810;
    property NoLaticeXZ: Integer dispid 1610743812;
    property ChordConnectTypeXY: IRDimComplexSectChordConnTypeE32 dispid 1610743814;
    property ChordConnectTypeXZ: IRDimComplexSectChordConnTypeE32 dispid 1610743816;
    property BattenHeightXY: Double dispid 1610743818;
    property BattenHeightXZ: Double dispid 1610743820;
    property BattenThicknessXY: Double dispid 1610743822;
    property BattenThicknessXZ: Double dispid 1610743824;
    property LaticeDiagonal_BaseXY: WideString dispid 1610743826;
    property LaticeDiagonal_BaseXZ: WideString dispid 1610743828;
    property LaticeDiagonal_SectXY: WideString dispid 1610743830;
    property LaticeDiagonal_SectXZ: WideString dispid 1610743832;
    property LaticeDiagonal_Ad_XY: Double dispid 1610743834;
    property LaticeDiagonal_Ad_XZ: Double dispid 1610743836;
    property LaticePost_BaseXY: WideString dispid 1610743838;
    property LaticePost_BaseXZ: WideString dispid 1610743840;
    property LaticePost_SectXY: WideString dispid 1610743842;
    property LaticePost_SectXZ: WideString dispid 1610743844;
    property LaticePost_Av_XY: Double dispid 1610743846;
    property LaticePost_Av_XZ: Double dispid 1610743848;
    property Distribution: IRDimComplexSectDistTypeE32 dispid 1610743850;
    property BattensOrLaticeFieldsNum: Integer dispid 1610743852;
    property Spacing_a: Double dispid 1610743854;
    property LaticeType: IRDimComplexSectLaticeTypeE32 dispid 1610743856;
  end;

// *********************************************************************//
// Interface: IRDimCodeResE32_1
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FB61ECEA-0ACB-4320-9A85-841655612006}
// *********************************************************************//
  IRDimCodeResE32_1 = interface(IDispatch)
    ['{FB61ECEA-0ACB-4320-9A85-841655612006}']
    function Get_IsBuckY: Integer; safecall;
    function Get_IsBuckZ: Integer; safecall;
    function Get_StrsShearY: Double; safecall;
    function Get_StrsShearZ: Double; safecall;
    function Get_StrsComp: Double; safecall;
    function Get_StrsTens: Double; safecall;
    function Get_StrsUprEdgeMY: Double; safecall;
    function Get_StrsRgtEdgeMZ: Double; safecall;
    function Get_StrsLowEdgeMY: Double; safecall;
    function Get_StrsLftEdgeMZ: Double; safecall;
    function Get_ClassOfSect: Integer; safecall;
    function Get_ClassOfSectElem1: Integer; safecall;
    function Get_ClassOfSectElem2: Integer; safecall;
    function Get_ClassOfSectElem3: Integer; safecall;
    function Get_ClassOfSectElem4: Integer; safecall;
    function Get_WebSlend: Double; safecall;
    function Get_WebSlend1: Double; safecall;
    function Get_UppFlanSlend: Double; safecall;
    function Get_LowFlanSlend1: Double; safecall;
    function Get_LowFlanSlend2: Double; safecall;
    function Get_BuckSLendLamy: Double; safecall;
    function Get_BuclSlendLamz: Double; safecall;
    function Get_BuckRelSlendLaby: Double; safecall;
    function Get_BuckRelSlendLabz: Double; safecall;
    function Get_LatBuckSlendLamlt: Double; safecall;
    function Get_MaxBuckSlend: Double; safecall;
    function Get_BuckParamKy: Double; safecall;
    function Get_BuckParamKz: Double; safecall;
    function Get_LatBuckParamKlt: Double; safecall;
    function Get_PlastAxForcStrenNplrd: Double; safecall;
    function Get_TensStrenNurd: Double; safecall;
    function Get_PlastTensStrenNtrd: Double; safecall;
    function Get_PlastCompStrenNcrd: Double; safecall;
    function Get_BuckStrenNbyrd: Double; safecall;
    function Get_BuckStrenNbzrd: Double; safecall;
    function Get_OverallBuckStrenNbrd: Double; safecall;
    function Get_LatBuckLengthLd: Double; safecall;
    function Get_LatBuckParamLd: Integer; safecall;
    function Get_InteractParamAlfa: Double; safecall;
    function Get_InteractParamBeta: Double; safecall;
    function Get_LatBuckParamC1: Double; safecall;
    function Get_LatBuckParamC2: Double; safecall;
    function Get_WarpingConstantIw: Double; safecall;
    function Get_TorsMomInertIt: Double; safecall;
    function Get_InteractParamMiy: Double; safecall;
    function Get_InteractParamMiz: Double; safecall;
    function Get_InteractParamMilt: Double; safecall;
    function Get_PlastMomStrenMplyrd: Double; safecall;
    function Get_PlastMomStrenMplzrd: Double; safecall;
    function Get_ElastMomStrenMelyrd: Double; safecall;
    function Get_ElastMomStrenMelzrd: Double; safecall;
    function Get_ReducMomStrenMcyrd: Double; safecall;
    function Get_ReducMomStrenMczrd: Double; safecall;
    function Get_ReducMomStrenMnyrd: Double; safecall;
    function Get_ReducMomStrenMnzrd: Double; safecall;
    function Get_ReducMomStrenMvyrd: Double; safecall;
    function Get_ReducMomStrenMvzrd: Double; safecall;
    function Get_LatBuckMomStrenmbrd: Double; safecall;
    function Get_EffectiveMomenMeff: Double; safecall;
    function Get_CritMomenMcr: Double; safecall;
    function Get_ShearStrenTplyrd: Double; safecall;
    function Get_ShearStrenTplzrd: Double; safecall;
    function Get_BuckCoeffXy: Double; safecall;
    function Get_BuckCoeffXz: Double; safecall;
    function Get_BuckCoeffMinXi: Double; safecall;
    function Get_LatBuckParamFilt: Double; safecall;
    function Get_LatBuckCoeffXlt: Double; safecall;
    function Get_LaodLevel: Double; safecall;
    function Get_MaterCoeffGamma0: Double; safecall;
    function Get_MaterCoeffGamma1: Double; safecall;
    function Get_MaterCoeffGamma2: Double; safecall;
    function Get_CompParamBetaA: Double; safecall;
    function Get_LatBuckParamBetaW: Double; safecall;
    function Get_BendParamBetMy: Double; safecall;
    function Get_BendParamBetaMz: Double; safecall;
    function Get_BendParamBetaMlty: Double; safecall;
    function Get_BendParamBetaMltz: Double; safecall;
    function Get_MomStrengthMpzEuro: Double; safecall;
    function Get_MaterialCapacityFy: Double; safecall;
    function Get_ElastSectModulWyel: Double; safecall;
    function Get_PlastSectModulWypl: Double; safecall;
    function Get_ElastSectModulWzel: Double; safecall;
    function Get_PlastSectModulWzpl: Double; safecall;
    function Get_EffSectModulWyeff: Double; safecall;
    function Get_EffSectModulWzeff: Double; safecall;
    function Get_EffSectAreaSeff: Double; safecall;
    function Get_FlangeAreaAf: Double; safecall;
    function Get_FlangeAreaAw: Double; safecall;
    function Get_AxForceExcentrEny: Double; safecall;
    function Get_AxForcExcentrEnz: Double; safecall;
    function Get_BuckCurveNumbY: Double; safecall;
    function Get_BuckCurveNumbZ: Double; safecall;
    function Get_BuckCurveCoeffAlfy: Double; safecall;
    function Get_BuckCurveCoeffAlfz: Double; safecall;
    function Get_BuckParamFiy: Double; safecall;
    function Get_BuckParamFiz: Double; safecall;
    property IsBuckY: Integer read Get_IsBuckY;
    property IsBuckZ: Integer read Get_IsBuckZ;
    property StrsShearY: Double read Get_StrsShearY;
    property StrsShearZ: Double read Get_StrsShearZ;
    property StrsComp: Double read Get_StrsComp;
    property StrsTens: Double read Get_StrsTens;
    property StrsUprEdgeMY: Double read Get_StrsUprEdgeMY;
    property StrsRgtEdgeMZ: Double read Get_StrsRgtEdgeMZ;
    property StrsLowEdgeMY: Double read Get_StrsLowEdgeMY;
    property StrsLftEdgeMZ: Double read Get_StrsLftEdgeMZ;
    property ClassOfSect: Integer read Get_ClassOfSect;
    property ClassOfSectElem1: Integer read Get_ClassOfSectElem1;
    property ClassOfSectElem2: Integer read Get_ClassOfSectElem2;
    property ClassOfSectElem3: Integer read Get_ClassOfSectElem3;
    property ClassOfSectElem4: Integer read Get_ClassOfSectElem4;
    property WebSlend: Double read Get_WebSlend;
    property WebSlend1: Double read Get_WebSlend1;
    property UppFlanSlend: Double read Get_UppFlanSlend;
    property LowFlanSlend1: Double read Get_LowFlanSlend1;
    property LowFlanSlend2: Double read Get_LowFlanSlend2;
    property BuckSLendLamy: Double read Get_BuckSLendLamy;
    property BuclSlendLamz: Double read Get_BuclSlendLamz;
    property BuckRelSlendLaby: Double read Get_BuckRelSlendLaby;
    property BuckRelSlendLabz: Double read Get_BuckRelSlendLabz;
    property LatBuckSlendLamlt: Double read Get_LatBuckSlendLamlt;
    property MaxBuckSlend: Double read Get_MaxBuckSlend;
    property BuckParamKy: Double read Get_BuckParamKy;
    property BuckParamKz: Double read Get_BuckParamKz;
    property LatBuckParamKlt: Double read Get_LatBuckParamKlt;
    property PlastAxForcStrenNplrd: Double read Get_PlastAxForcStrenNplrd;
    property TensStrenNurd: Double read Get_TensStrenNurd;
    property PlastTensStrenNtrd: Double read Get_PlastTensStrenNtrd;
    property PlastCompStrenNcrd: Double read Get_PlastCompStrenNcrd;
    property BuckStrenNbyrd: Double read Get_BuckStrenNbyrd;
    property BuckStrenNbzrd: Double read Get_BuckStrenNbzrd;
    property OverallBuckStrenNbrd: Double read Get_OverallBuckStrenNbrd;
    property LatBuckLengthLd: Double read Get_LatBuckLengthLd;
    property LatBuckParamLd: Integer read Get_LatBuckParamLd;
    property InteractParamAlfa: Double read Get_InteractParamAlfa;
    property InteractParamBeta: Double read Get_InteractParamBeta;
    property LatBuckParamC1: Double read Get_LatBuckParamC1;
    property LatBuckParamC2: Double read Get_LatBuckParamC2;
    property WarpingConstantIw: Double read Get_WarpingConstantIw;
    property TorsMomInertIt: Double read Get_TorsMomInertIt;
    property InteractParamMiy: Double read Get_InteractParamMiy;
    property InteractParamMiz: Double read Get_InteractParamMiz;
    property InteractParamMilt: Double read Get_InteractParamMilt;
    property PlastMomStrenMplyrd: Double read Get_PlastMomStrenMplyrd;
    property PlastMomStrenMplzrd: Double read Get_PlastMomStrenMplzrd;
    property ElastMomStrenMelyrd: Double read Get_ElastMomStrenMelyrd;
    property ElastMomStrenMelzrd: Double read Get_ElastMomStrenMelzrd;
    property ReducMomStrenMcyrd: Double read Get_ReducMomStrenMcyrd;
    property ReducMomStrenMczrd: Double read Get_ReducMomStrenMczrd;
    property ReducMomStrenMnyrd: Double read Get_ReducMomStrenMnyrd;
    property ReducMomStrenMnzrd: Double read Get_ReducMomStrenMnzrd;
    property ReducMomStrenMvyrd: Double read Get_ReducMomStrenMvyrd;
    property ReducMomStrenMvzrd: Double read Get_ReducMomStrenMvzrd;
    property LatBuckMomStrenmbrd: Double read Get_LatBuckMomStrenmbrd;
    property EffectiveMomenMeff: Double read Get_EffectiveMomenMeff;
    property CritMomenMcr: Double read Get_CritMomenMcr;
    property ShearStrenTplyrd: Double read Get_ShearStrenTplyrd;
    property ShearStrenTplzrd: Double read Get_ShearStrenTplzrd;
    property BuckCoeffXy: Double read Get_BuckCoeffXy;
    property BuckCoeffXz: Double read Get_BuckCoeffXz;
    property BuckCoeffMinXi: Double read Get_BuckCoeffMinXi;
    property LatBuckParamFilt: Double read Get_LatBuckParamFilt;
    property LatBuckCoeffXlt: Double read Get_LatBuckCoeffXlt;
    property LaodLevel: Double read Get_LaodLevel;
    property MaterCoeffGamma0: Double read Get_MaterCoeffGamma0;
    property MaterCoeffGamma1: Double read Get_MaterCoeffGamma1;
    property MaterCoeffGamma2: Double read Get_MaterCoeffGamma2;
    property CompParamBetaA: Double read Get_CompParamBetaA;
    property LatBuckParamBetaW: Double read Get_LatBuckParamBetaW;
    property BendParamBetMy: Double read Get_BendParamBetMy;
    property BendParamBetaMz: Double read Get_BendParamBetaMz;
    property BendParamBetaMlty: Double read Get_BendParamBetaMlty;
    property BendParamBetaMltz: Double read Get_BendParamBetaMltz;
    property MomStrengthMpzEuro: Double read Get_MomStrengthMpzEuro;
    property MaterialCapacityFy: Double read Get_MaterialCapacityFy;
    property ElastSectModulWyel: Double read Get_ElastSectModulWyel;
    property PlastSectModulWypl: Double read Get_PlastSectModulWypl;
    property ElastSectModulWzel: Double read Get_ElastSectModulWzel;
    property PlastSectModulWzpl: Double read Get_PlastSectModulWzpl;
    property EffSectModulWyeff: Double read Get_EffSectModulWyeff;
    property EffSectModulWzeff: Double read Get_EffSectModulWzeff;
    property EffSectAreaSeff: Double read Get_EffSectAreaSeff;
    property FlangeAreaAf: Double read Get_FlangeAreaAf;
    property FlangeAreaAw: Double read Get_FlangeAreaAw;
    property AxForceExcentrEny: Double read Get_AxForceExcentrEny;
    property AxForcExcentrEnz: Double read Get_AxForcExcentrEnz;
    property BuckCurveNumbY: Double read Get_BuckCurveNumbY;
    property BuckCurveNumbZ: Double read Get_BuckCurveNumbZ;
    property BuckCurveCoeffAlfy: Double read Get_BuckCurveCoeffAlfy;
    property BuckCurveCoeffAlfz: Double read Get_BuckCurveCoeffAlfz;
    property BuckParamFiy: Double read Get_BuckParamFiy;
    property BuckParamFiz: Double read Get_BuckParamFiz;
  end;

// *********************************************************************//
// DispIntf:  IRDimCodeResE32_1Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FB61ECEA-0ACB-4320-9A85-841655612006}
// *********************************************************************//
  IRDimCodeResE32_1Disp = dispinterface
    ['{FB61ECEA-0ACB-4320-9A85-841655612006}']
    property IsBuckY: Integer readonly dispid 1610743808;
    property IsBuckZ: Integer readonly dispid 1610743809;
    property StrsShearY: Double readonly dispid 1610743810;
    property StrsShearZ: Double readonly dispid 1610743811;
    property StrsComp: Double readonly dispid 1610743812;
    property StrsTens: Double readonly dispid 1610743813;
    property StrsUprEdgeMY: Double readonly dispid 1610743814;
    property StrsRgtEdgeMZ: Double readonly dispid 1610743815;
    property StrsLowEdgeMY: Double readonly dispid 1610743816;
    property StrsLftEdgeMZ: Double readonly dispid 1610743817;
    property ClassOfSect: Integer readonly dispid 1610743818;
    property ClassOfSectElem1: Integer readonly dispid 1610743819;
    property ClassOfSectElem2: Integer readonly dispid 1610743820;
    property ClassOfSectElem3: Integer readonly dispid 1610743821;
    property ClassOfSectElem4: Integer readonly dispid 1610743822;
    property WebSlend: Double readonly dispid 1610743823;
    property WebSlend1: Double readonly dispid 1610743824;
    property UppFlanSlend: Double readonly dispid 1610743825;
    property LowFlanSlend1: Double readonly dispid 1610743826;
    property LowFlanSlend2: Double readonly dispid 1610743827;
    property BuckSLendLamy: Double readonly dispid 1610743828;
    property BuclSlendLamz: Double readonly dispid 1610743829;
    property BuckRelSlendLaby: Double readonly dispid 1610743830;
    property BuckRelSlendLabz: Double readonly dispid 1610743831;
    property LatBuckSlendLamlt: Double readonly dispid 1610743832;
    property MaxBuckSlend: Double readonly dispid 1610743833;
    property BuckParamKy: Double readonly dispid 1610743834;
    property BuckParamKz: Double readonly dispid 1610743835;
    property LatBuckParamKlt: Double readonly dispid 1610743836;
    property PlastAxForcStrenNplrd: Double readonly dispid 1610743837;
    property TensStrenNurd: Double readonly dispid 1610743838;
    property PlastTensStrenNtrd: Double readonly dispid 1610743839;
    property PlastCompStrenNcrd: Double readonly dispid 1610743840;
    property BuckStrenNbyrd: Double readonly dispid 1610743841;
    property BuckStrenNbzrd: Double readonly dispid 1610743842;
    property OverallBuckStrenNbrd: Double readonly dispid 1610743843;
    property LatBuckLengthLd: Double readonly dispid 1610743844;
    property LatBuckParamLd: Integer readonly dispid 1610743845;
    property InteractParamAlfa: Double readonly dispid 1610743846;
    property InteractParamBeta: Double readonly dispid 1610743847;
    property LatBuckParamC1: Double readonly dispid 1610743848;
    property LatBuckParamC2: Double readonly dispid 1610743849;
    property WarpingConstantIw: Double readonly dispid 1610743850;
    property TorsMomInertIt: Double readonly dispid 1610743851;
    property InteractParamMiy: Double readonly dispid 1610743852;
    property InteractParamMiz: Double readonly dispid 1610743853;
    property InteractParamMilt: Double readonly dispid 1610743854;
    property PlastMomStrenMplyrd: Double readonly dispid 1610743855;
    property PlastMomStrenMplzrd: Double readonly dispid 1610743856;
    property ElastMomStrenMelyrd: Double readonly dispid 1610743857;
    property ElastMomStrenMelzrd: Double readonly dispid 1610743858;
    property ReducMomStrenMcyrd: Double readonly dispid 1610743859;
    property ReducMomStrenMczrd: Double readonly dispid 1610743860;
    property ReducMomStrenMnyrd: Double readonly dispid 1610743861;
    property ReducMomStrenMnzrd: Double readonly dispid 1610743862;
    property ReducMomStrenMvyrd: Double readonly dispid 1610743863;
    property ReducMomStrenMvzrd: Double readonly dispid 1610743864;
    property LatBuckMomStrenmbrd: Double readonly dispid 1610743865;
    property EffectiveMomenMeff: Double readonly dispid 1610743866;
    property CritMomenMcr: Double readonly dispid 1610743867;
    property ShearStrenTplyrd: Double readonly dispid 1610743868;
    property ShearStrenTplzrd: Double readonly dispid 1610743869;
    property BuckCoeffXy: Double readonly dispid 1610743870;
    property BuckCoeffXz: Double readonly dispid 1610743871;
    property BuckCoeffMinXi: Double readonly dispid 1610743872;
    property LatBuckParamFilt: Double readonly dispid 1610743873;
    property LatBuckCoeffXlt: Double readonly dispid 1610743874;
    property LaodLevel: Double readonly dispid 1610743875;
    property MaterCoeffGamma0: Double readonly dispid 1610743876;
    property MaterCoeffGamma1: Double readonly dispid 1610743877;
    property MaterCoeffGamma2: Double readonly dispid 1610743878;
    property CompParamBetaA: Double readonly dispid 1610743879;
    property LatBuckParamBetaW: Double readonly dispid 1610743880;
    property BendParamBetMy: Double readonly dispid 1610743881;
    property BendParamBetaMz: Double readonly dispid 1610743882;
    property BendParamBetaMlty: Double readonly dispid 1610743883;
    property BendParamBetaMltz: Double readonly dispid 1610743884;
    property MomStrengthMpzEuro: Double readonly dispid 1610743885;
    property MaterialCapacityFy: Double readonly dispid 1610743886;
    property ElastSectModulWyel: Double readonly dispid 1610743887;
    property PlastSectModulWypl: Double readonly dispid 1610743888;
    property ElastSectModulWzel: Double readonly dispid 1610743889;
    property PlastSectModulWzpl: Double readonly dispid 1610743890;
    property EffSectModulWyeff: Double readonly dispid 1610743891;
    property EffSectModulWzeff: Double readonly dispid 1610743892;
    property EffSectAreaSeff: Double readonly dispid 1610743893;
    property FlangeAreaAf: Double readonly dispid 1610743894;
    property FlangeAreaAw: Double readonly dispid 1610743895;
    property AxForceExcentrEny: Double readonly dispid 1610743896;
    property AxForcExcentrEnz: Double readonly dispid 1610743897;
    property BuckCurveNumbY: Double readonly dispid 1610743898;
    property BuckCurveNumbZ: Double readonly dispid 1610743899;
    property BuckCurveCoeffAlfy: Double readonly dispid 1610743900;
    property BuckCurveCoeffAlfz: Double readonly dispid 1610743901;
    property BuckParamFiy: Double readonly dispid 1610743902;
    property BuckParamFiz: Double readonly dispid 1610743903;
  end;

// *********************************************************************//
// Interface: IRDimCodeResE32_2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {820E7536-2E4D-4ED6-B818-F03C9B24F991}
// *********************************************************************//
  IRDimCodeResE32_2 = interface(IDispatch)
    ['{820E7536-2E4D-4ED6-B818-F03C9B24F991}']
    function Get_MaEffRatio: Double; safecall;
    function Get_PartEffRatio1: Double; safecall;
    function Get_PartEffRatio2: Double; safecall;
    function Get_PartEffRatio3: Double; safecall;
    function Get_PartEffRatio4: Double; safecall;
    function Get_PartEffRatio5: Double; safecall;
    function Get_CompPartElastSectModulWyel: Double; safecall;
    function Get_CompPartElastSectModulWzel: Double; safecall;
    function Get_PartEffRatio6: Double; safecall;
    function Get_PartEffRatio6Y: Double; safecall;
    function Get_PartEffRatio6Z: Double; safecall;
    function Get_PartEffRatio7Y: Double; safecall;
    function Get_PartEffRatio7Z: Double; safecall;
    function Get_ShearMaxWebSlendBetaV: Double; safecall;
    function Get_ProfCodeAct: Double; safecall;
    function Get_ProfGroup: Double; safecall;
    function Get_ShearFlanSlendXs: Double; safecall;
    function Get_ShearWebSlendYs: Double; safecall;
    function Get_EffectSectModulWypleff: Double; safecall;
    function Get_EffectSectModulWzpleff: Double; safecall;
    function Get_ShearCoeffEtaV: Double; safecall;
    function Get_TorsShearStressTauTorsY: Double; safecall;
    function Get_TorsShearStressTauTorsZ: Double; safecall;
    function Get_ShearExactStressTauY: Double; safecall;
    function Get_ShearExactStressTauZ: Double; safecall;
    function Get_ShearExactWebAreaAw: Double; safecall;
    function Get_ShearExactFlanArea: Double; safecall;
    function Get_ShearTorsStrenVtyrd: Double; safecall;
    function Get_ShearTorsStrenVtzrd: Double; safecall;
    function Get_IsPlastShearAnal: Double; safecall;
    function Get_ShearMaterialCapacityFs: Double; safecall;
    function Get_MaxStrsSig: Double; safecall;
    function Get_MaxEffStrsSigEff: Double; safecall;
    function Get_EffComprStrsSigEffC: Double; safecall;
    function Get_EffBendStrsSigEffMyUpp: Double; safecall;
    function Get_EffBendStrsSigEffMzRght: Double; safecall;
    function Get_EffBendStrsSigEffMyLow: Double; safecall;
    function Get_EffBendStrsSigEffMzLeft: Double; safecall;
    function Get_SecCheckVy: Double; safecall;
    function Get_SecCheckVz: Double; safecall;
    function Get_SecCheckVyTors: Double; safecall;
    function Get_SecCheckVzTors: Double; safecall;
    function Get_SecCheckExactVy: Double; safecall;
    function Get_SecCheckExactVz: Double; safecall;
    function Get_SecCheckNt: Double; safecall;
    function Get_SecCheckNc: Double; safecall;
    function Get_SecCheckMy: Double; safecall;
    function Get_SecCheckMyVz: Double; safecall;
    function Get_SecCheckMz: Double; safecall;
    function Get_SecCheckMzVy: Double; safecall;
    function Get_SecCheckNMy: Double; safecall;
    function Get_SecCheckNMz: Double; safecall;
    function Get_SecCheckMyMz: Double; safecall;
    function Get_SecCheckNMyMz: Double; safecall;
    function Get_SecCheckMises: Double; safecall;
    function Get_BuckCheckNb: Double; safecall;
    function Get_BuckCheckMy: Double; safecall;
    function Get_BuckCheckNyMyMz: Double; safecall;
    function Get_BuckCheckNzMyMz: Double; safecall;
    function Get_BuckCurveY: Double; safecall;
    function Get_BuckCurveZ: Double; safecall;
    function Get_TorsBuckStrenNbtrd: Double; safecall;
    function Get_TorsBuckStrenNbtfrd: Double; safecall;
    function Get_CritTorsStrenNx: Double; safecall;
    function Get_CritTorsFlexStrenNxy: Double; safecall;
    function Get_TorsSlendLambx: Double; safecall;
    function Get_TorsFlexSlendLambxy: Double; safecall;
    function Get_TorsBuckParamFix: Double; safecall;
    function Get_TorsFlexBuckParamFixy: Double; safecall;
    function Get_TorsBuckCoeffXx: Double; safecall;
    function Get_TorsFlexBuckCoeffXxy: Double; safecall;
    function Get_TorsLengthLt: Double; safecall;
    function Get_NonEffFlanPartBneffFl: Double; safecall;
    function Get_NonEffWebPartHneffWeb: Double; safecall;
    property MaEffRatio: Double read Get_MaEffRatio;
    property PartEffRatio1: Double read Get_PartEffRatio1;
    property PartEffRatio2: Double read Get_PartEffRatio2;
    property PartEffRatio3: Double read Get_PartEffRatio3;
    property PartEffRatio4: Double read Get_PartEffRatio4;
    property PartEffRatio5: Double read Get_PartEffRatio5;
    property CompPartElastSectModulWyel: Double read Get_CompPartElastSectModulWyel;
    property CompPartElastSectModulWzel: Double read Get_CompPartElastSectModulWzel;
    property PartEffRatio6: Double read Get_PartEffRatio6;
    property PartEffRatio6Y: Double read Get_PartEffRatio6Y;
    property PartEffRatio6Z: Double read Get_PartEffRatio6Z;
    property PartEffRatio7Y: Double read Get_PartEffRatio7Y;
    property PartEffRatio7Z: Double read Get_PartEffRatio7Z;
    property ShearMaxWebSlendBetaV: Double read Get_ShearMaxWebSlendBetaV;
    property ProfCodeAct: Double read Get_ProfCodeAct;
    property ProfGroup: Double read Get_ProfGroup;
    property ShearFlanSlendXs: Double read Get_ShearFlanSlendXs;
    property ShearWebSlendYs: Double read Get_ShearWebSlendYs;
    property EffectSectModulWypleff: Double read Get_EffectSectModulWypleff;
    property EffectSectModulWzpleff: Double read Get_EffectSectModulWzpleff;
    property ShearCoeffEtaV: Double read Get_ShearCoeffEtaV;
    property TorsShearStressTauTorsY: Double read Get_TorsShearStressTauTorsY;
    property TorsShearStressTauTorsZ: Double read Get_TorsShearStressTauTorsZ;
    property ShearExactStressTauY: Double read Get_ShearExactStressTauY;
    property ShearExactStressTauZ: Double read Get_ShearExactStressTauZ;
    property ShearExactWebAreaAw: Double read Get_ShearExactWebAreaAw;
    property ShearExactFlanArea: Double read Get_ShearExactFlanArea;
    property ShearTorsStrenVtyrd: Double read Get_ShearTorsStrenVtyrd;
    property ShearTorsStrenVtzrd: Double read Get_ShearTorsStrenVtzrd;
    property IsPlastShearAnal: Double read Get_IsPlastShearAnal;
    property ShearMaterialCapacityFs: Double read Get_ShearMaterialCapacityFs;
    property MaxStrsSig: Double read Get_MaxStrsSig;
    property MaxEffStrsSigEff: Double read Get_MaxEffStrsSigEff;
    property EffComprStrsSigEffC: Double read Get_EffComprStrsSigEffC;
    property EffBendStrsSigEffMyUpp: Double read Get_EffBendStrsSigEffMyUpp;
    property EffBendStrsSigEffMzRght: Double read Get_EffBendStrsSigEffMzRght;
    property EffBendStrsSigEffMyLow: Double read Get_EffBendStrsSigEffMyLow;
    property EffBendStrsSigEffMzLeft: Double read Get_EffBendStrsSigEffMzLeft;
    property SecCheckVy: Double read Get_SecCheckVy;
    property SecCheckVz: Double read Get_SecCheckVz;
    property SecCheckVyTors: Double read Get_SecCheckVyTors;
    property SecCheckVzTors: Double read Get_SecCheckVzTors;
    property SecCheckExactVy: Double read Get_SecCheckExactVy;
    property SecCheckExactVz: Double read Get_SecCheckExactVz;
    property SecCheckNt: Double read Get_SecCheckNt;
    property SecCheckNc: Double read Get_SecCheckNc;
    property SecCheckMy: Double read Get_SecCheckMy;
    property SecCheckMyVz: Double read Get_SecCheckMyVz;
    property SecCheckMz: Double read Get_SecCheckMz;
    property SecCheckMzVy: Double read Get_SecCheckMzVy;
    property SecCheckNMy: Double read Get_SecCheckNMy;
    property SecCheckNMz: Double read Get_SecCheckNMz;
    property SecCheckMyMz: Double read Get_SecCheckMyMz;
    property SecCheckNMyMz: Double read Get_SecCheckNMyMz;
    property SecCheckMises: Double read Get_SecCheckMises;
    property BuckCheckNb: Double read Get_BuckCheckNb;
    property BuckCheckMy: Double read Get_BuckCheckMy;
    property BuckCheckNyMyMz: Double read Get_BuckCheckNyMyMz;
    property BuckCheckNzMyMz: Double read Get_BuckCheckNzMyMz;
    property BuckCurveY: Double read Get_BuckCurveY;
    property BuckCurveZ: Double read Get_BuckCurveZ;
    property TorsBuckStrenNbtrd: Double read Get_TorsBuckStrenNbtrd;
    property TorsBuckStrenNbtfrd: Double read Get_TorsBuckStrenNbtfrd;
    property CritTorsStrenNx: Double read Get_CritTorsStrenNx;
    property CritTorsFlexStrenNxy: Double read Get_CritTorsFlexStrenNxy;
    property TorsSlendLambx: Double read Get_TorsSlendLambx;
    property TorsFlexSlendLambxy: Double read Get_TorsFlexSlendLambxy;
    property TorsBuckParamFix: Double read Get_TorsBuckParamFix;
    property TorsFlexBuckParamFixy: Double read Get_TorsFlexBuckParamFixy;
    property TorsBuckCoeffXx: Double read Get_TorsBuckCoeffXx;
    property TorsFlexBuckCoeffXxy: Double read Get_TorsFlexBuckCoeffXxy;
    property TorsLengthLt: Double read Get_TorsLengthLt;
    property NonEffFlanPartBneffFl: Double read Get_NonEffFlanPartBneffFl;
    property NonEffWebPartHneffWeb: Double read Get_NonEffWebPartHneffWeb;
  end;

// *********************************************************************//
// DispIntf:  IRDimCodeResE32_2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {820E7536-2E4D-4ED6-B818-F03C9B24F991}
// *********************************************************************//
  IRDimCodeResE32_2Disp = dispinterface
    ['{820E7536-2E4D-4ED6-B818-F03C9B24F991}']
    property MaEffRatio: Double readonly dispid 1610743808;
    property PartEffRatio1: Double readonly dispid 1610743809;
    property PartEffRatio2: Double readonly dispid 1610743810;
    property PartEffRatio3: Double readonly dispid 1610743811;
    property PartEffRatio4: Double readonly dispid 1610743812;
    property PartEffRatio5: Double readonly dispid 1610743813;
    property CompPartElastSectModulWyel: Double readonly dispid 1610743814;
    property CompPartElastSectModulWzel: Double readonly dispid 1610743815;
    property PartEffRatio6: Double readonly dispid 1610743816;
    property PartEffRatio6Y: Double readonly dispid 1610743817;
    property PartEffRatio6Z: Double readonly dispid 1610743818;
    property PartEffRatio7Y: Double readonly dispid 1610743819;
    property PartEffRatio7Z: Double readonly dispid 1610743820;
    property ShearMaxWebSlendBetaV: Double readonly dispid 1610743821;
    property ProfCodeAct: Double readonly dispid 1610743822;
    property ProfGroup: Double readonly dispid 1610743823;
    property ShearFlanSlendXs: Double readonly dispid 1610743824;
    property ShearWebSlendYs: Double readonly dispid 1610743825;
    property EffectSectModulWypleff: Double readonly dispid 1610743826;
    property EffectSectModulWzpleff: Double readonly dispid 1610743827;
    property ShearCoeffEtaV: Double readonly dispid 1610743828;
    property TorsShearStressTauTorsY: Double readonly dispid 1610743829;
    property TorsShearStressTauTorsZ: Double readonly dispid 1610743830;
    property ShearExactStressTauY: Double readonly dispid 1610743831;
    property ShearExactStressTauZ: Double readonly dispid 1610743832;
    property ShearExactWebAreaAw: Double readonly dispid 1610743833;
    property ShearExactFlanArea: Double readonly dispid 1610743834;
    property ShearTorsStrenVtyrd: Double readonly dispid 1610743835;
    property ShearTorsStrenVtzrd: Double readonly dispid 1610743836;
    property IsPlastShearAnal: Double readonly dispid 1610743837;
    property ShearMaterialCapacityFs: Double readonly dispid 1610743838;
    property MaxStrsSig: Double readonly dispid 1610743839;
    property MaxEffStrsSigEff: Double readonly dispid 1610743840;
    property EffComprStrsSigEffC: Double readonly dispid 1610743841;
    property EffBendStrsSigEffMyUpp: Double readonly dispid 1610743842;
    property EffBendStrsSigEffMzRght: Double readonly dispid 1610743843;
    property EffBendStrsSigEffMyLow: Double readonly dispid 1610743844;
    property EffBendStrsSigEffMzLeft: Double readonly dispid 1610743845;
    property SecCheckVy: Double readonly dispid 1610743846;
    property SecCheckVz: Double readonly dispid 1610743847;
    property SecCheckVyTors: Double readonly dispid 1610743848;
    property SecCheckVzTors: Double readonly dispid 1610743849;
    property SecCheckExactVy: Double readonly dispid 1610743850;
    property SecCheckExactVz: Double readonly dispid 1610743851;
    property SecCheckNt: Double readonly dispid 1610743852;
    property SecCheckNc: Double readonly dispid 1610743853;
    property SecCheckMy: Double readonly dispid 1610743854;
    property SecCheckMyVz: Double readonly dispid 1610743855;
    property SecCheckMz: Double readonly dispid 1610743856;
    property SecCheckMzVy: Double readonly dispid 1610743857;
    property SecCheckNMy: Double readonly dispid 1610743858;
    property SecCheckNMz: Double readonly dispid 1610743859;
    property SecCheckMyMz: Double readonly dispid 1610743860;
    property SecCheckNMyMz: Double readonly dispid 1610743861;
    property SecCheckMises: Double readonly dispid 1610743862;
    property BuckCheckNb: Double readonly dispid 1610743863;
    property BuckCheckMy: Double readonly dispid 1610743864;
    property BuckCheckNyMyMz: Double readonly dispid 1610743865;
    property BuckCheckNzMyMz: Double readonly dispid 1610743866;
    property BuckCurveY: Double readonly dispid 1610743867;
    property BuckCurveZ: Double readonly dispid 1610743868;
    property TorsBuckStrenNbtrd: Double readonly dispid 1610743869;
    property TorsBuckStrenNbtfrd: Double readonly dispid 1610743870;
    property CritTorsStrenNx: Double readonly dispid 1610743871;
    property CritTorsFlexStrenNxy: Double readonly dispid 1610743872;
    property TorsSlendLambx: Double readonly dispid 1610743873;
    property TorsFlexSlendLambxy: Double readonly dispid 1610743874;
    property TorsBuckParamFix: Double readonly dispid 1610743875;
    property TorsFlexBuckParamFixy: Double readonly dispid 1610743876;
    property TorsBuckCoeffXx: Double readonly dispid 1610743877;
    property TorsFlexBuckCoeffXxy: Double readonly dispid 1610743878;
    property TorsLengthLt: Double readonly dispid 1610743879;
    property NonEffFlanPartBneffFl: Double readonly dispid 1610743880;
    property NonEffWebPartHneffWeb: Double readonly dispid 1610743881;
  end;

// *********************************************************************//
// Interface: IRDimCodeResE32_3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F15CF924-F780-4FCE-8975-A44D90DF4175}
// *********************************************************************//
  IRDimCodeResE32_3 = interface(IDispatch)
    ['{F15CF924-F780-4FCE-8975-A44D90DF4175}']
    function Get_LatBuckCoefKc: Double; safecall;
    function Get_LatBuckSlendLamLt0: Double; safecall;
    function Get_LatBuckParamBetalt: Double; safecall;
    function Get_LatBuckParamFlt: Double; safecall;
    function Get_LatBuckCoeffXltmod: Double; safecall;
    function Get_LatBuckParamKfl: Double; safecall;
    function Get_LatBuckCurvelt: Double; safecall;
    function Get_LatBuckParamAlt: Double; safecall;
    function Get_LatBuckFlanRadiusIflt: Double; safecall;
    function Get_LatBuckMethod: Double; safecall;
    function Get_BuckCritEulerForcNcry: Double; safecall;
    function Get_BuckCritEulerForcNcrz: Double; safecall;
    function Get_BuckCritEulerForcNcrt: Double; safecall;
    function Get_OveralStabParamMiy: Double; safecall;
    function Get_OveralStabParamMiz: Double; safecall;
    function Get_OveralStabParamWy: Double; safecall;
    function Get_OveralStabParamWz: Double; safecall;
    function Get_OveralStabParamLab0: Double; safecall;
    function Get_OveralStabParamAlt: Double; safecall;
    function Get_MomDistrCoefCmy0: Double; safecall;
    function Get_MomDistrCoefCmz0: Double; safecall;
    function Get_MomDistrCoefCmy: Double; safecall;
    function Get_MomDistrCoefCmz: Double; safecall;
    function Get_MomDistrCoefCmlt: Double; safecall;
    function Get_OveralStabCyy: Double; safecall;
    function Get_OveralStabCyz: Double; safecall;
    function Get_OveralStabCzy: Double; safecall;
    function Get_OveralStabCzz: Double; safecall;
    function Get_OveralStabParamBlt: Double; safecall;
    function Get_OveralStabParamClt: Double; safecall;
    function Get_OveralStabParamDlt: Double; safecall;
    function Get_OveralStabParamElt: Double; safecall;
    function Get_OveralStabKyy: Double; safecall;
    function Get_OveralStabKyz: Double; safecall;
    function Get_OveralStabKzy: Double; safecall;
    function Get_OveralStabKzz: Double; safecall;
    function Get_OneChordOveralStabKyy1: Double; safecall;
    function Get_OneChordOveralStabKyz1: Double; safecall;
    function Get_OneChordOveralStabKzy1: Double; safecall;
    function Get_OneChordOveralStabKzz1: Double; safecall;
    function Get_OneChordOveralStabKyy2: Double; safecall;
    function Get_OneChordOveralStabKyz2: Double; safecall;
    function Get_OneChordOveralStabKzy2: Double; safecall;
    function Get_OneChordOveralStabKzz2: Double; safecall;
    function Get_ShearCentrPositionYs: Double; safecall;
    function Get_CrgtdProfProjWaveLenW: Double; safecall;
    function Get_CrgtdProfRealWaveLenS: Double; safecall;
    function Get_CrgtdProfFlexPrpStiffDx: Double; safecall;
    function Get_CrgtdProfFlexPrlStiffDz: Double; safecall;
    function Get_CrgtdProfStrsTaupig: Double; safecall;
    function Get_CrgtdProfStrsTaupil: Double; safecall;
    function Get_CrgtdProfSlenLampig: Double; safecall;
    function Get_CrgtdProfSlenLampil: Double; safecall;
    function Get_CrgtdProfCoefXpig: Double; safecall;
    function Get_CrgtdProfCoefXpil: Double; safecall;
    property LatBuckCoefKc: Double read Get_LatBuckCoefKc;
    property LatBuckSlendLamLt0: Double read Get_LatBuckSlendLamLt0;
    property LatBuckParamBetalt: Double read Get_LatBuckParamBetalt;
    property LatBuckParamFlt: Double read Get_LatBuckParamFlt;
    property LatBuckCoeffXltmod: Double read Get_LatBuckCoeffXltmod;
    property LatBuckParamKfl: Double read Get_LatBuckParamKfl;
    property LatBuckCurvelt: Double read Get_LatBuckCurvelt;
    property LatBuckParamAlt: Double read Get_LatBuckParamAlt;
    property LatBuckFlanRadiusIflt: Double read Get_LatBuckFlanRadiusIflt;
    property LatBuckMethod: Double read Get_LatBuckMethod;
    property BuckCritEulerForcNcry: Double read Get_BuckCritEulerForcNcry;
    property BuckCritEulerForcNcrz: Double read Get_BuckCritEulerForcNcrz;
    property BuckCritEulerForcNcrt: Double read Get_BuckCritEulerForcNcrt;
    property OveralStabParamMiy: Double read Get_OveralStabParamMiy;
    property OveralStabParamMiz: Double read Get_OveralStabParamMiz;
    property OveralStabParamWy: Double read Get_OveralStabParamWy;
    property OveralStabParamWz: Double read Get_OveralStabParamWz;
    property OveralStabParamLab0: Double read Get_OveralStabParamLab0;
    property OveralStabParamAlt: Double read Get_OveralStabParamAlt;
    property MomDistrCoefCmy0: Double read Get_MomDistrCoefCmy0;
    property MomDistrCoefCmz0: Double read Get_MomDistrCoefCmz0;
    property MomDistrCoefCmy: Double read Get_MomDistrCoefCmy;
    property MomDistrCoefCmz: Double read Get_MomDistrCoefCmz;
    property MomDistrCoefCmlt: Double read Get_MomDistrCoefCmlt;
    property OveralStabCyy: Double read Get_OveralStabCyy;
    property OveralStabCyz: Double read Get_OveralStabCyz;
    property OveralStabCzy: Double read Get_OveralStabCzy;
    property OveralStabCzz: Double read Get_OveralStabCzz;
    property OveralStabParamBlt: Double read Get_OveralStabParamBlt;
    property OveralStabParamClt: Double read Get_OveralStabParamClt;
    property OveralStabParamDlt: Double read Get_OveralStabParamDlt;
    property OveralStabParamElt: Double read Get_OveralStabParamElt;
    property OveralStabKyy: Double read Get_OveralStabKyy;
    property OveralStabKyz: Double read Get_OveralStabKyz;
    property OveralStabKzy: Double read Get_OveralStabKzy;
    property OveralStabKzz: Double read Get_OveralStabKzz;
    property OneChordOveralStabKyy1: Double read Get_OneChordOveralStabKyy1;
    property OneChordOveralStabKyz1: Double read Get_OneChordOveralStabKyz1;
    property OneChordOveralStabKzy1: Double read Get_OneChordOveralStabKzy1;
    property OneChordOveralStabKzz1: Double read Get_OneChordOveralStabKzz1;
    property OneChordOveralStabKyy2: Double read Get_OneChordOveralStabKyy2;
    property OneChordOveralStabKyz2: Double read Get_OneChordOveralStabKyz2;
    property OneChordOveralStabKzy2: Double read Get_OneChordOveralStabKzy2;
    property OneChordOveralStabKzz2: Double read Get_OneChordOveralStabKzz2;
    property ShearCentrPositionYs: Double read Get_ShearCentrPositionYs;
    property CrgtdProfProjWaveLenW: Double read Get_CrgtdProfProjWaveLenW;
    property CrgtdProfRealWaveLenS: Double read Get_CrgtdProfRealWaveLenS;
    property CrgtdProfFlexPrpStiffDx: Double read Get_CrgtdProfFlexPrpStiffDx;
    property CrgtdProfFlexPrlStiffDz: Double read Get_CrgtdProfFlexPrlStiffDz;
    property CrgtdProfStrsTaupig: Double read Get_CrgtdProfStrsTaupig;
    property CrgtdProfStrsTaupil: Double read Get_CrgtdProfStrsTaupil;
    property CrgtdProfSlenLampig: Double read Get_CrgtdProfSlenLampig;
    property CrgtdProfSlenLampil: Double read Get_CrgtdProfSlenLampil;
    property CrgtdProfCoefXpig: Double read Get_CrgtdProfCoefXpig;
    property CrgtdProfCoefXpil: Double read Get_CrgtdProfCoefXpil;
  end;

// *********************************************************************//
// DispIntf:  IRDimCodeResE32_3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F15CF924-F780-4FCE-8975-A44D90DF4175}
// *********************************************************************//
  IRDimCodeResE32_3Disp = dispinterface
    ['{F15CF924-F780-4FCE-8975-A44D90DF4175}']
    property LatBuckCoefKc: Double readonly dispid 1610743808;
    property LatBuckSlendLamLt0: Double readonly dispid 1610743809;
    property LatBuckParamBetalt: Double readonly dispid 1610743810;
    property LatBuckParamFlt: Double readonly dispid 1610743811;
    property LatBuckCoeffXltmod: Double readonly dispid 1610743812;
    property LatBuckParamKfl: Double readonly dispid 1610743813;
    property LatBuckCurvelt: Double readonly dispid 1610743814;
    property LatBuckParamAlt: Double readonly dispid 1610743815;
    property LatBuckFlanRadiusIflt: Double readonly dispid 1610743816;
    property LatBuckMethod: Double readonly dispid 1610743817;
    property BuckCritEulerForcNcry: Double readonly dispid 1610743818;
    property BuckCritEulerForcNcrz: Double readonly dispid 1610743819;
    property BuckCritEulerForcNcrt: Double readonly dispid 1610743820;
    property OveralStabParamMiy: Double readonly dispid 1610743821;
    property OveralStabParamMiz: Double readonly dispid 1610743822;
    property OveralStabParamWy: Double readonly dispid 1610743823;
    property OveralStabParamWz: Double readonly dispid 1610743824;
    property OveralStabParamLab0: Double readonly dispid 1610743825;
    property OveralStabParamAlt: Double readonly dispid 1610743826;
    property MomDistrCoefCmy0: Double readonly dispid 1610743827;
    property MomDistrCoefCmz0: Double readonly dispid 1610743828;
    property MomDistrCoefCmy: Double readonly dispid 1610743829;
    property MomDistrCoefCmz: Double readonly dispid 1610743830;
    property MomDistrCoefCmlt: Double readonly dispid 1610743831;
    property OveralStabCyy: Double readonly dispid 1610743832;
    property OveralStabCyz: Double readonly dispid 1610743833;
    property OveralStabCzy: Double readonly dispid 1610743834;
    property OveralStabCzz: Double readonly dispid 1610743835;
    property OveralStabParamBlt: Double readonly dispid 1610743836;
    property OveralStabParamClt: Double readonly dispid 1610743837;
    property OveralStabParamDlt: Double readonly dispid 1610743838;
    property OveralStabParamElt: Double readonly dispid 1610743839;
    property OveralStabKyy: Double readonly dispid 1610743840;
    property OveralStabKyz: Double readonly dispid 1610743841;
    property OveralStabKzy: Double readonly dispid 1610743842;
    property OveralStabKzz: Double readonly dispid 1610743843;
    property OneChordOveralStabKyy1: Double readonly dispid 1610743844;
    property OneChordOveralStabKyz1: Double readonly dispid 1610743845;
    property OneChordOveralStabKzy1: Double readonly dispid 1610743846;
    property OneChordOveralStabKzz1: Double readonly dispid 1610743847;
    property OneChordOveralStabKyy2: Double readonly dispid 1610743848;
    property OneChordOveralStabKyz2: Double readonly dispid 1610743849;
    property OneChordOveralStabKzy2: Double readonly dispid 1610743850;
    property OneChordOveralStabKzz2: Double readonly dispid 1610743851;
    property ShearCentrPositionYs: Double readonly dispid 1610743852;
    property CrgtdProfProjWaveLenW: Double readonly dispid 1610743853;
    property CrgtdProfRealWaveLenS: Double readonly dispid 1610743854;
    property CrgtdProfFlexPrpStiffDx: Double readonly dispid 1610743855;
    property CrgtdProfFlexPrlStiffDz: Double readonly dispid 1610743856;
    property CrgtdProfStrsTaupig: Double readonly dispid 1610743857;
    property CrgtdProfStrsTaupil: Double readonly dispid 1610743858;
    property CrgtdProfSlenLampig: Double readonly dispid 1610743859;
    property CrgtdProfSlenLampil: Double readonly dispid 1610743860;
    property CrgtdProfCoefXpig: Double readonly dispid 1610743861;
    property CrgtdProfCoefXpil: Double readonly dispid 1610743862;
  end;

// *********************************************************************//
// Interface: IRDimCodeResE32_4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {38BE37A5-DBBF-48F3-928B-6071D9748FF7}
// *********************************************************************//
  IRDimCodeResE32_4 = interface(IDispatch)
    ['{38BE37A5-DBBF-48F3-928B-6071D9748FF7}']
    function Get_IsFire: Integer; safecall;
    function Get_Fire: Double; safecall;
    function Get_FireRedYealdFactKY0Y: Double; safecall;
    function Get_FireRedYealdFactKY0Z: Double; safecall;
    function Get_FireRedYoungFactKE0: Double; safecall;
    function Get_FireMatCoeffGF: Double; safecall;
    function Get_FireAdapFactK1: Double; safecall;
    function Get_FireAdapFactK2: Double; safecall;
    function Get_FireMaxMembSurfaceTempOA: Double; safecall;
    function Get_FireMaxHorWebInShearTempOAY: Double; safecall;
    function Get_FireMaxVerWebInShearTempOAZ: Double; safecall;
    function Get_FireCritTempOACRIT: Double; safecall;
    function Get_FireCritTime: Double; safecall;
    function Get_IsThinWalled: Integer; safecall;
    function Get_IsMesThinWallTooSlend: Integer; safecall;
    function Get_IsMesThinWallStiffIgnored: Integer; safecall;
    function Get_ThinWallIsModifAeff: Integer; safecall;
    function Get_ThinWallIsModifWeffy: Integer; safecall;
    function Get_ThinWallIsModifWeffz: Integer; safecall;
    function Get_ThinWallTensPartMomResistMcy_rdten: Double; safecall;
    function Get_ThinWallCompPartMomResistMcy_rdcom: Double; safecall;
    function Get_ThinWallTensPartMomResistMcz_rdten: Double; safecall;
    function Get_ThinWallCompPartMomResistMcz_rdcom: Double; safecall;
    function Get_ThinWallEffMomInerIyeff: Double; safecall;
    function Get_ThinWallEffRightEdgeDistVyeff: Double; safecall;
    function Get_ThinWallEffLeftEdgeDistVpyeff: Double; safecall;
    function Get_ThinWallEffMomInerIzeff: Double; safecall;
    function Get_ThinWallEffUpperEdgeDistVzeff: Double; safecall;
    function Get_ThinWallEffLowerEdgeDistVpzeff: Double; safecall;
    function Get_ThinWallSecUsageFactNMy2: Double; safecall;
    function Get_ThinWallSecUsageFactNMz2: Double; safecall;
    function Get_ThinWallSecUsageFactNMyMz2: Double; safecall;
    function Get_ThinWallSecUsageFactInteractNMV: Double; safecall;
    function Get_ThinWallMomIncreaseDmy: Double; safecall;
    function Get_ThinWallMomIncreaseDmz: Double; safecall;
    function Get_ThinWallShearTotalStressTauTot: Double; safecall;
    function Get_ThinWallSecUsageFactMisses: Double; safecall;
    function Get_ThinWallSecUsageFactShearTauTot: Double; safecall;
    function Get_IsGravityLoad: Integer; safecall;
    function Get_IsThinWalledPurlin: Integer; safecall;
    function Get_ThinWallShearCentPosZS: Double; safecall;
    function Get_ThinWallMomInerIyz: Double; safecall;
    function Get_ThinWallShearCentPosZJ: Double; safecall;
    function Get_ThinWallEqivLoadQhEd: Double; safecall;
    function Get_ThinWallStiffCDA: Double; safecall;
    function Get_ThinWallStiffCDC: Double; safecall;
    function Get_ThinWallStiffCD: Double; safecall;
    function Get_ThinWallStiffK: Double; safecall;
    function Get_ThinWallSpringSuppCoefR: Double; safecall;
    function Get_ThinWallCorFactKr: Double; safecall;
    function Get_ThinWallLaterBendMomMfz: Double; safecall;
    function Get_ThinWallSecAreaMomFreeFlanIfz: Double; safecall;
    function Get_ThinWallSecModulFreeFlanWfz: Double; safecall;
    function Get_ThinWallSecModulFreeFlanWfzp: Double; safecall;
    function Get_ThinWallCoefN1: Double; safecall;
    function Get_ThinWallCoefN2: Double; safecall;
    function Get_ThinWallCoefN3: Double; safecall;
    function Get_ThinWallCoefN4: Double; safecall;
    function Get_ThinWallBuckFreeFlanLengLfz: Double; safecall;
    function Get_ThinWallRelSkendFreeFlanLamFz: Double; safecall;
    function Get_ThinWallRedFactLatTorsBuckXLTF: Double; safecall;
    function Get_ThinWallSecUsageFactNMyMz3: Double; safecall;
    function Get_ThinWallBuckUsageFactNMzMz: Double; safecall;
    function Get_PlastCoeffAlfaP: Double; safecall;
    function Get_MomDistrCoefCmy0LT: Double; safecall;
    function Get_MomDistrCoefCmyLT: Double; safecall;
    property IsFire: Integer read Get_IsFire;
    property Fire: Double read Get_Fire;
    property FireRedYealdFactKY0Y: Double read Get_FireRedYealdFactKY0Y;
    property FireRedYealdFactKY0Z: Double read Get_FireRedYealdFactKY0Z;
    property FireRedYoungFactKE0: Double read Get_FireRedYoungFactKE0;
    property FireMatCoeffGF: Double read Get_FireMatCoeffGF;
    property FireAdapFactK1: Double read Get_FireAdapFactK1;
    property FireAdapFactK2: Double read Get_FireAdapFactK2;
    property FireMaxMembSurfaceTempOA: Double read Get_FireMaxMembSurfaceTempOA;
    property FireMaxHorWebInShearTempOAY: Double read Get_FireMaxHorWebInShearTempOAY;
    property FireMaxVerWebInShearTempOAZ: Double read Get_FireMaxVerWebInShearTempOAZ;
    property FireCritTempOACRIT: Double read Get_FireCritTempOACRIT;
    property FireCritTime: Double read Get_FireCritTime;
    property IsThinWalled: Integer read Get_IsThinWalled;
    property IsMesThinWallTooSlend: Integer read Get_IsMesThinWallTooSlend;
    property IsMesThinWallStiffIgnored: Integer read Get_IsMesThinWallStiffIgnored;
    property ThinWallIsModifAeff: Integer read Get_ThinWallIsModifAeff;
    property ThinWallIsModifWeffy: Integer read Get_ThinWallIsModifWeffy;
    property ThinWallIsModifWeffz: Integer read Get_ThinWallIsModifWeffz;
    property ThinWallTensPartMomResistMcy_rdten: Double read Get_ThinWallTensPartMomResistMcy_rdten;
    property ThinWallCompPartMomResistMcy_rdcom: Double read Get_ThinWallCompPartMomResistMcy_rdcom;
    property ThinWallTensPartMomResistMcz_rdten: Double read Get_ThinWallTensPartMomResistMcz_rdten;
    property ThinWallCompPartMomResistMcz_rdcom: Double read Get_ThinWallCompPartMomResistMcz_rdcom;
    property ThinWallEffMomInerIyeff: Double read Get_ThinWallEffMomInerIyeff;
    property ThinWallEffRightEdgeDistVyeff: Double read Get_ThinWallEffRightEdgeDistVyeff;
    property ThinWallEffLeftEdgeDistVpyeff: Double read Get_ThinWallEffLeftEdgeDistVpyeff;
    property ThinWallEffMomInerIzeff: Double read Get_ThinWallEffMomInerIzeff;
    property ThinWallEffUpperEdgeDistVzeff: Double read Get_ThinWallEffUpperEdgeDistVzeff;
    property ThinWallEffLowerEdgeDistVpzeff: Double read Get_ThinWallEffLowerEdgeDistVpzeff;
    property ThinWallSecUsageFactNMy2: Double read Get_ThinWallSecUsageFactNMy2;
    property ThinWallSecUsageFactNMz2: Double read Get_ThinWallSecUsageFactNMz2;
    property ThinWallSecUsageFactNMyMz2: Double read Get_ThinWallSecUsageFactNMyMz2;
    property ThinWallSecUsageFactInteractNMV: Double read Get_ThinWallSecUsageFactInteractNMV;
    property ThinWallMomIncreaseDmy: Double read Get_ThinWallMomIncreaseDmy;
    property ThinWallMomIncreaseDmz: Double read Get_ThinWallMomIncreaseDmz;
    property ThinWallShearTotalStressTauTot: Double read Get_ThinWallShearTotalStressTauTot;
    property ThinWallSecUsageFactMisses: Double read Get_ThinWallSecUsageFactMisses;
    property ThinWallSecUsageFactShearTauTot: Double read Get_ThinWallSecUsageFactShearTauTot;
    property IsGravityLoad: Integer read Get_IsGravityLoad;
    property IsThinWalledPurlin: Integer read Get_IsThinWalledPurlin;
    property ThinWallShearCentPosZS: Double read Get_ThinWallShearCentPosZS;
    property ThinWallMomInerIyz: Double read Get_ThinWallMomInerIyz;
    property ThinWallShearCentPosZJ: Double read Get_ThinWallShearCentPosZJ;
    property ThinWallEqivLoadQhEd: Double read Get_ThinWallEqivLoadQhEd;
    property ThinWallStiffCDA: Double read Get_ThinWallStiffCDA;
    property ThinWallStiffCDC: Double read Get_ThinWallStiffCDC;
    property ThinWallStiffCD: Double read Get_ThinWallStiffCD;
    property ThinWallStiffK: Double read Get_ThinWallStiffK;
    property ThinWallSpringSuppCoefR: Double read Get_ThinWallSpringSuppCoefR;
    property ThinWallCorFactKr: Double read Get_ThinWallCorFactKr;
    property ThinWallLaterBendMomMfz: Double read Get_ThinWallLaterBendMomMfz;
    property ThinWallSecAreaMomFreeFlanIfz: Double read Get_ThinWallSecAreaMomFreeFlanIfz;
    property ThinWallSecModulFreeFlanWfz: Double read Get_ThinWallSecModulFreeFlanWfz;
    property ThinWallSecModulFreeFlanWfzp: Double read Get_ThinWallSecModulFreeFlanWfzp;
    property ThinWallCoefN1: Double read Get_ThinWallCoefN1;
    property ThinWallCoefN2: Double read Get_ThinWallCoefN2;
    property ThinWallCoefN3: Double read Get_ThinWallCoefN3;
    property ThinWallCoefN4: Double read Get_ThinWallCoefN4;
    property ThinWallBuckFreeFlanLengLfz: Double read Get_ThinWallBuckFreeFlanLengLfz;
    property ThinWallRelSkendFreeFlanLamFz: Double read Get_ThinWallRelSkendFreeFlanLamFz;
    property ThinWallRedFactLatTorsBuckXLTF: Double read Get_ThinWallRedFactLatTorsBuckXLTF;
    property ThinWallSecUsageFactNMyMz3: Double read Get_ThinWallSecUsageFactNMyMz3;
    property ThinWallBuckUsageFactNMzMz: Double read Get_ThinWallBuckUsageFactNMzMz;
    property PlastCoeffAlfaP: Double read Get_PlastCoeffAlfaP;
    property MomDistrCoefCmy0LT: Double read Get_MomDistrCoefCmy0LT;
    property MomDistrCoefCmyLT: Double read Get_MomDistrCoefCmyLT;
  end;

// *********************************************************************//
// DispIntf:  IRDimCodeResE32_4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {38BE37A5-DBBF-48F3-928B-6071D9748FF7}
// *********************************************************************//
  IRDimCodeResE32_4Disp = dispinterface
    ['{38BE37A5-DBBF-48F3-928B-6071D9748FF7}']
    property IsFire: Integer readonly dispid 1610743808;
    property Fire: Double readonly dispid 1610743809;
    property FireRedYealdFactKY0Y: Double readonly dispid 1610743810;
    property FireRedYealdFactKY0Z: Double readonly dispid 1610743811;
    property FireRedYoungFactKE0: Double readonly dispid 1610743812;
    property FireMatCoeffGF: Double readonly dispid 1610743813;
    property FireAdapFactK1: Double readonly dispid 1610743814;
    property FireAdapFactK2: Double readonly dispid 1610743815;
    property FireMaxMembSurfaceTempOA: Double readonly dispid 1610743816;
    property FireMaxHorWebInShearTempOAY: Double readonly dispid 1610743817;
    property FireMaxVerWebInShearTempOAZ: Double readonly dispid 1610743818;
    property FireCritTempOACRIT: Double readonly dispid 1610743819;
    property FireCritTime: Double readonly dispid 1610743820;
    property IsThinWalled: Integer readonly dispid 1610743821;
    property IsMesThinWallTooSlend: Integer readonly dispid 1610743822;
    property IsMesThinWallStiffIgnored: Integer readonly dispid 1610743823;
    property ThinWallIsModifAeff: Integer readonly dispid 1610743824;
    property ThinWallIsModifWeffy: Integer readonly dispid 1610743825;
    property ThinWallIsModifWeffz: Integer readonly dispid 1610743826;
    property ThinWallTensPartMomResistMcy_rdten: Double readonly dispid 1610743827;
    property ThinWallCompPartMomResistMcy_rdcom: Double readonly dispid 1610743828;
    property ThinWallTensPartMomResistMcz_rdten: Double readonly dispid 1610743829;
    property ThinWallCompPartMomResistMcz_rdcom: Double readonly dispid 1610743830;
    property ThinWallEffMomInerIyeff: Double readonly dispid 1610743831;
    property ThinWallEffRightEdgeDistVyeff: Double readonly dispid 1610743832;
    property ThinWallEffLeftEdgeDistVpyeff: Double readonly dispid 1610743833;
    property ThinWallEffMomInerIzeff: Double readonly dispid 1610743834;
    property ThinWallEffUpperEdgeDistVzeff: Double readonly dispid 1610743835;
    property ThinWallEffLowerEdgeDistVpzeff: Double readonly dispid 1610743836;
    property ThinWallSecUsageFactNMy2: Double readonly dispid 1610743837;
    property ThinWallSecUsageFactNMz2: Double readonly dispid 1610743838;
    property ThinWallSecUsageFactNMyMz2: Double readonly dispid 1610743839;
    property ThinWallSecUsageFactInteractNMV: Double readonly dispid 1610743840;
    property ThinWallMomIncreaseDmy: Double readonly dispid 1610743841;
    property ThinWallMomIncreaseDmz: Double readonly dispid 1610743842;
    property ThinWallShearTotalStressTauTot: Double readonly dispid 1610743843;
    property ThinWallSecUsageFactMisses: Double readonly dispid 1610743844;
    property ThinWallSecUsageFactShearTauTot: Double readonly dispid 1610743845;
    property IsGravityLoad: Integer readonly dispid 1610743846;
    property IsThinWalledPurlin: Integer readonly dispid 1610743847;
    property ThinWallShearCentPosZS: Double readonly dispid 1610743848;
    property ThinWallMomInerIyz: Double readonly dispid 1610743849;
    property ThinWallShearCentPosZJ: Double readonly dispid 1610743850;
    property ThinWallEqivLoadQhEd: Double readonly dispid 1610743851;
    property ThinWallStiffCDA: Double readonly dispid 1610743852;
    property ThinWallStiffCDC: Double readonly dispid 1610743853;
    property ThinWallStiffCD: Double readonly dispid 1610743854;
    property ThinWallStiffK: Double readonly dispid 1610743855;
    property ThinWallSpringSuppCoefR: Double readonly dispid 1610743856;
    property ThinWallCorFactKr: Double readonly dispid 1610743857;
    property ThinWallLaterBendMomMfz: Double readonly dispid 1610743858;
    property ThinWallSecAreaMomFreeFlanIfz: Double readonly dispid 1610743859;
    property ThinWallSecModulFreeFlanWfz: Double readonly dispid 1610743860;
    property ThinWallSecModulFreeFlanWfzp: Double readonly dispid 1610743861;
    property ThinWallCoefN1: Double readonly dispid 1610743862;
    property ThinWallCoefN2: Double readonly dispid 1610743863;
    property ThinWallCoefN3: Double readonly dispid 1610743864;
    property ThinWallCoefN4: Double readonly dispid 1610743865;
    property ThinWallBuckFreeFlanLengLfz: Double readonly dispid 1610743866;
    property ThinWallRelSkendFreeFlanLamFz: Double readonly dispid 1610743867;
    property ThinWallRedFactLatTorsBuckXLTF: Double readonly dispid 1610743868;
    property ThinWallSecUsageFactNMyMz3: Double readonly dispid 1610743869;
    property ThinWallBuckUsageFactNMzMz: Double readonly dispid 1610743870;
    property PlastCoeffAlfaP: Double readonly dispid 1610743871;
    property MomDistrCoefCmy0LT: Double readonly dispid 1610743872;
    property MomDistrCoefCmyLT: Double readonly dispid 1610743873;
  end;

// *********************************************************************//
// Interface: IRDimMembParamsE52
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {06901CF3-701B-40A8-9D18-D97677E838A8}
// *********************************************************************//
  IRDimMembParamsE52 = interface(IDispatch)
    ['{06901CF3-701B-40A8-9D18-D97677E838A8}']
    function Get_VerifForBendingElems: Integer; safecall;
    procedure Set_VerifForBendingElems(pVal: Integer); safecall;
    function Get_VerifForBendingElemsType: Integer; safecall;
    procedure Set_VerifForBendingElemsType(pVal: Integer); safecall;
    function Get_VerifForBendingElemsAngle: Double; safecall;
    procedure Set_VerifForBendingElemsAngle(pVal: Double); safecall;
    function Get_VerifForBendingElemsRayon: Double; safecall;
    procedure Set_VerifForBendingElemsRayon(pVal: Double); safecall;
    function Get_VerifForBendingElemsHap: Double; safecall;
    procedure Set_VerifForBendingElemsHap(pVal: Double); safecall;
    function Get_VerifForBendingElemsLamThick: Double; safecall;
    procedure Set_VerifForBendingElemsLamThick(pVal: Double); safecall;
    function Get_VerifForBendingElemsKvol: Double; safecall;
    procedure Set_VerifForBendingElemsKvol(pVal: Double); safecall;
    function Get_SystemCoeff: Double; safecall;
    procedure Set_SystemCoeff(pVal: Double); safecall;
    function Get_BucklingDiagramY: IRDimBuckDiagramE52; safecall;
    procedure Set_BucklingDiagramY(ret: IRDimBuckDiagramE52); safecall;
    function Get_BucklingDiagramZ: IRDimBuckDiagramE52; safecall;
    procedure Set_BucklingDiagramZ(ret: IRDimBuckDiagramE52); safecall;
    function Get_BuckLengthCoeffY: Double; safecall;
    procedure Set_BuckLengthCoeffY(ret: Double); safecall;
    function Get_BuckLengthCoeffZ: Double; safecall;
    procedure Set_BuckLengthCoeffZ(ret: Double); safecall;
    function Complex_IsSet(Type_: IRDimMembDefBucklingDataType): Integer; safecall;
    procedure Complex_Set(Type_: IRDimMembDefBucklingDataType; val: Integer); safecall;
    function Complex_GetBattenType(Type_: IRDimMembDefBucklingDataType): IRDimComplexBattenTypeE52; safecall;
    procedure Complex_SetBattenType(Type_: IRDimMembDefBucklingDataType; 
                                    val: IRDimComplexBattenTypeE52); safecall;
    function Complex_GetConnecType(Type_: IRDimMembDefBucklingDataType): IRDimComplexConnectTypeE52; safecall;
    procedure Complex_SetConnectType(Type_: IRDimMembDefBucklingDataType; 
                                     val: IRDimComplexConnectTypeE52); safecall;
    procedure Complex_BattenCoordClear(Type_: IRDimMembDefBucklingDataType); safecall;
    function Complex_BattenCoordNum(Type_: IRDimMembDefBucklingDataType): Integer; safecall;
    function Complex_IsCoordRelValue(Type_: IRDimMembDefBucklingDataType): Integer; safecall;
    procedure Complex_SetCoordRelValue(Type_: IRDimMembDefBucklingDataType; val: Integer); safecall;
    procedure Complex_SetBattenCoord(Type_: IRDimMembDefBucklingDataType; no: Integer; coord: Double); safecall;
    procedure Complex_GetBattenCoord(Type_: IRDimMembDefBucklingDataType; no: Integer; 
                                     var ret: Double); safecall;
    function Get_LatBuckType: IRDimLaterBuckTypeE52; safecall;
    procedure Set_LatBuckType(ret: IRDimLaterBuckTypeE52); safecall;
    function Get_LoadLevel: IRDimLoadLevelE52; safecall;
    procedure Set_LoadLevel(ret: IRDimLoadLevelE52); safecall;
    function Get_LoadType: IRDimLoadTypeE52; safecall;
    procedure Set_LoadType(ret: IRDimLoadTypeE52); safecall;
    function Get_LatCoeffLowerFlange: IRDimLatBuckCoefDiagramE52; safecall;
    procedure Set_LatCoeffLowerFlange(ret: IRDimLatBuckCoefDiagramE52); safecall;
    function Get_LatCoeffUpperFlange: IRDimLatBuckCoefDiagramE52; safecall;
    procedure Set_LatCoeffUpperFlange(ret: IRDimLatBuckCoefDiagramE52); safecall;
    function Get_LatCoeffLowerFlangeValue: Double; safecall;
    procedure Set_LatCoeffLowerFlangeValue(ret: Double); safecall;
    function Get_LatCoeffUpperFlangeValue: Double; safecall;
    procedure Set_LatCoeffUpperFlangeValue(ret: Double); safecall;
    function Get_Camber_IsSet: Integer; safecall;
    procedure Set_Camber_Set(Param1: Integer); safecall;
    function Get_Camber_UserDefined: Integer; safecall;
    procedure Set_Camber_UserDefined(ret: Integer); safecall;
    function Get_Camber_uy: Double; safecall;
    procedure Set_Camber_uy(ret: Double); safecall;
    function Get_Camber_uz: Double; safecall;
    procedure Set_Camber_uz(ret: Double); safecall;
    function Camber_IsDefl_u_net_fin_YZ(Type_: IRDimMembDefDeflDataType): Integer; safecall;
    procedure Camber_SetDefl_u_net_fin_YZ(Type_: IRDimMembDefDeflDataType; val: Integer); safecall;
    function Camber_GetDefl_u_net_fin_ValueYZ(Type_: IRDimMembDefDeflDataType): Double; safecall;
    procedure Camber_SetDefl_u_net_fin_ValueYZ(Type_: IRDimMembDefDeflDataType; val: Double); safecall;
    function Get_DblSectsTreatedAsSolid: Integer; safecall;
    procedure Set_DblSectsTreatedAsSolid(ret: Integer); safecall;
    function Get_MethodOfCritStressDeterm: IRDimMethodOfCritStressDetermE52; safecall;
    procedure Set_MethodOfCritStressDeterm(ret: IRDimMethodOfCritStressDetermE52); safecall;
    function Get_ServiceClass: Integer; safecall;
    procedure Set_ServiceClass(ret: Integer); safecall;
    function Get_TensAreaNetGros: Double; safecall;
    procedure Set_TensAreaNetGros(ret: Double); safecall;
    function Get_UnidirectionalBending: Integer; safecall;
    procedure Set_UnidirectionalBending(ret: Integer); safecall;
    function Get_Fire_Method: IRDimFireMethodE52; safecall;
    procedure Set_Fire_Method(ret: IRDimFireMethodE52); safecall;
    function Get_Fire_ConsiderCarbonRadius: Integer; safecall;
    procedure Set_Fire_ConsiderCarbonRadius(ret: Integer); safecall;
    function Get_Fire_IsBurnVelocityDefByUser: Integer; safecall;
    procedure Set_Fire_IsBurnVelocityDefByUser(ret: Integer); safecall;
    function Get_Fire_BurnVelocityVal: Double; safecall;
    procedure Set_Fire_BurnVelocityVal(ret: Double); safecall;
    function Get_Fire_TimeOfReqResist: IRDimFireTimeOfReqResistE52; safecall;
    procedure Set_Fire_TimeOfReqResist(ret: IRDimFireTimeOfReqResistE52); safecall;
    function Get_Fire_SurfaceProtection: Double; safecall;
    procedure Set_Fire_SurfaceProtection(ret: Double); safecall;
    function Fire_GetAddProtectOfSectSides(in_: IRDimFireAddProtectOfSectSidesE52): Integer; safecall;
    procedure Fire_SetAddProtectOfSectSides(in_: IRDimFireAddProtectOfSectSidesE52; val: Integer); safecall;
    function Get_Fire_ContinuousProtection: Integer; safecall;
    procedure Set_Fire_ContinuousProtection(ret: Integer); safecall;
    function Get_GammaM: Double; safecall;
    procedure Set_GammaM(pVal: Double); safecall;
    function Get_GammaMGL: Double; safecall;
    procedure Set_GammaMGL(pVal: Double); safecall;
    function Get_GammaGMFI: Double; safecall;
    procedure Set_GammaGMFI(pVal: Double); safecall;
    property VerifForBendingElems: Integer read Get_VerifForBendingElems write Set_VerifForBendingElems;
    property VerifForBendingElemsType: Integer read Get_VerifForBendingElemsType write Set_VerifForBendingElemsType;
    property VerifForBendingElemsAngle: Double read Get_VerifForBendingElemsAngle write Set_VerifForBendingElemsAngle;
    property VerifForBendingElemsRayon: Double read Get_VerifForBendingElemsRayon write Set_VerifForBendingElemsRayon;
    property VerifForBendingElemsHap: Double read Get_VerifForBendingElemsHap write Set_VerifForBendingElemsHap;
    property VerifForBendingElemsLamThick: Double read Get_VerifForBendingElemsLamThick write Set_VerifForBendingElemsLamThick;
    property VerifForBendingElemsKvol: Double read Get_VerifForBendingElemsKvol write Set_VerifForBendingElemsKvol;
    property SystemCoeff: Double read Get_SystemCoeff write Set_SystemCoeff;
    property BucklingDiagramY: IRDimBuckDiagramE52 read Get_BucklingDiagramY write Set_BucklingDiagramY;
    property BucklingDiagramZ: IRDimBuckDiagramE52 read Get_BucklingDiagramZ write Set_BucklingDiagramZ;
    property BuckLengthCoeffY: Double read Get_BuckLengthCoeffY write Set_BuckLengthCoeffY;
    property BuckLengthCoeffZ: Double read Get_BuckLengthCoeffZ write Set_BuckLengthCoeffZ;
    property LatBuckType: IRDimLaterBuckTypeE52 read Get_LatBuckType write Set_LatBuckType;
    property LoadLevel: IRDimLoadLevelE52 read Get_LoadLevel write Set_LoadLevel;
    property LoadType: IRDimLoadTypeE52 read Get_LoadType write Set_LoadType;
    property LatCoeffLowerFlange: IRDimLatBuckCoefDiagramE52 read Get_LatCoeffLowerFlange write Set_LatCoeffLowerFlange;
    property LatCoeffUpperFlange: IRDimLatBuckCoefDiagramE52 read Get_LatCoeffUpperFlange write Set_LatCoeffUpperFlange;
    property LatCoeffLowerFlangeValue: Double read Get_LatCoeffLowerFlangeValue write Set_LatCoeffLowerFlangeValue;
    property LatCoeffUpperFlangeValue: Double read Get_LatCoeffUpperFlangeValue write Set_LatCoeffUpperFlangeValue;
    property Camber_IsSet: Integer read Get_Camber_IsSet;
    property Camber_Set: Integer write Set_Camber_Set;
    property Camber_UserDefined: Integer read Get_Camber_UserDefined write Set_Camber_UserDefined;
    property Camber_uy: Double read Get_Camber_uy write Set_Camber_uy;
    property Camber_uz: Double read Get_Camber_uz write Set_Camber_uz;
    property DblSectsTreatedAsSolid: Integer read Get_DblSectsTreatedAsSolid write Set_DblSectsTreatedAsSolid;
    property MethodOfCritStressDeterm: IRDimMethodOfCritStressDetermE52 read Get_MethodOfCritStressDeterm write Set_MethodOfCritStressDeterm;
    property ServiceClass: Integer read Get_ServiceClass write Set_ServiceClass;
    property TensAreaNetGros: Double read Get_TensAreaNetGros write Set_TensAreaNetGros;
    property UnidirectionalBending: Integer read Get_UnidirectionalBending write Set_UnidirectionalBending;
    property Fire_Method: IRDimFireMethodE52 read Get_Fire_Method write Set_Fire_Method;
    property Fire_ConsiderCarbonRadius: Integer read Get_Fire_ConsiderCarbonRadius write Set_Fire_ConsiderCarbonRadius;
    property Fire_IsBurnVelocityDefByUser: Integer read Get_Fire_IsBurnVelocityDefByUser write Set_Fire_IsBurnVelocityDefByUser;
    property Fire_BurnVelocityVal: Double read Get_Fire_BurnVelocityVal write Set_Fire_BurnVelocityVal;
    property Fire_TimeOfReqResist: IRDimFireTimeOfReqResistE52 read Get_Fire_TimeOfReqResist write Set_Fire_TimeOfReqResist;
    property Fire_SurfaceProtection: Double read Get_Fire_SurfaceProtection write Set_Fire_SurfaceProtection;
    property Fire_ContinuousProtection: Integer read Get_Fire_ContinuousProtection write Set_Fire_ContinuousProtection;
    property GammaM: Double read Get_GammaM write Set_GammaM;
    property GammaMGL: Double read Get_GammaMGL write Set_GammaMGL;
    property GammaGMFI: Double read Get_GammaGMFI write Set_GammaGMFI;
  end;

// *********************************************************************//
// DispIntf:  IRDimMembParamsE52Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {06901CF3-701B-40A8-9D18-D97677E838A8}
// *********************************************************************//
  IRDimMembParamsE52Disp = dispinterface
    ['{06901CF3-701B-40A8-9D18-D97677E838A8}']
    property VerifForBendingElems: Integer dispid 1610743808;
    property VerifForBendingElemsType: Integer dispid 1610743810;
    property VerifForBendingElemsAngle: Double dispid 1610743812;
    property VerifForBendingElemsRayon: Double dispid 1610743814;
    property VerifForBendingElemsHap: Double dispid 1610743816;
    property VerifForBendingElemsLamThick: Double dispid 1610743818;
    property VerifForBendingElemsKvol: Double dispid 1610743820;
    property SystemCoeff: Double dispid 1610743822;
    property BucklingDiagramY: IRDimBuckDiagramE52 dispid 1610743824;
    property BucklingDiagramZ: IRDimBuckDiagramE52 dispid 1610743826;
    property BuckLengthCoeffY: Double dispid 1610743828;
    property BuckLengthCoeffZ: Double dispid 1610743830;
    function Complex_IsSet(Type_: IRDimMembDefBucklingDataType): Integer; dispid 1610743832;
    procedure Complex_Set(Type_: IRDimMembDefBucklingDataType; val: Integer); dispid 1610743833;
    function Complex_GetBattenType(Type_: IRDimMembDefBucklingDataType): IRDimComplexBattenTypeE52; dispid 1610743834;
    procedure Complex_SetBattenType(Type_: IRDimMembDefBucklingDataType; 
                                    val: IRDimComplexBattenTypeE52); dispid 1610743835;
    function Complex_GetConnecType(Type_: IRDimMembDefBucklingDataType): IRDimComplexConnectTypeE52; dispid 1610743836;
    procedure Complex_SetConnectType(Type_: IRDimMembDefBucklingDataType; 
                                     val: IRDimComplexConnectTypeE52); dispid 1610743837;
    procedure Complex_BattenCoordClear(Type_: IRDimMembDefBucklingDataType); dispid 1610743838;
    function Complex_BattenCoordNum(Type_: IRDimMembDefBucklingDataType): Integer; dispid 1610743839;
    function Complex_IsCoordRelValue(Type_: IRDimMembDefBucklingDataType): Integer; dispid 1610743840;
    procedure Complex_SetCoordRelValue(Type_: IRDimMembDefBucklingDataType; val: Integer); dispid 1610743841;
    procedure Complex_SetBattenCoord(Type_: IRDimMembDefBucklingDataType; no: Integer; coord: Double); dispid 1610743842;
    procedure Complex_GetBattenCoord(Type_: IRDimMembDefBucklingDataType; no: Integer; 
                                     var ret: Double); dispid 1610743843;
    property LatBuckType: IRDimLaterBuckTypeE52 dispid 1610743844;
    property LoadLevel: IRDimLoadLevelE52 dispid 1610743846;
    property LoadType: IRDimLoadTypeE52 dispid 1610743848;
    property LatCoeffLowerFlange: IRDimLatBuckCoefDiagramE52 dispid 1610743850;
    property LatCoeffUpperFlange: IRDimLatBuckCoefDiagramE52 dispid 1610743852;
    property LatCoeffLowerFlangeValue: Double dispid 1610743854;
    property LatCoeffUpperFlangeValue: Double dispid 1610743856;
    property Camber_IsSet: Integer readonly dispid 1610743858;
    property Camber_Set: Integer writeonly dispid 1610743859;
    property Camber_UserDefined: Integer dispid 1610743860;
    property Camber_uy: Double dispid 1610743862;
    property Camber_uz: Double dispid 1610743864;
    function Camber_IsDefl_u_net_fin_YZ(Type_: IRDimMembDefDeflDataType): Integer; dispid 1610743866;
    procedure Camber_SetDefl_u_net_fin_YZ(Type_: IRDimMembDefDeflDataType; val: Integer); dispid 1610743867;
    function Camber_GetDefl_u_net_fin_ValueYZ(Type_: IRDimMembDefDeflDataType): Double; dispid 1610743868;
    procedure Camber_SetDefl_u_net_fin_ValueYZ(Type_: IRDimMembDefDeflDataType; val: Double); dispid 1610743869;
    property DblSectsTreatedAsSolid: Integer dispid 1610743870;
    property MethodOfCritStressDeterm: IRDimMethodOfCritStressDetermE52 dispid 1610743872;
    property ServiceClass: Integer dispid 1610743874;
    property TensAreaNetGros: Double dispid 1610743876;
    property UnidirectionalBending: Integer dispid 1610743878;
    property Fire_Method: IRDimFireMethodE52 dispid 1610743880;
    property Fire_ConsiderCarbonRadius: Integer dispid 1610743882;
    property Fire_IsBurnVelocityDefByUser: Integer dispid 1610743884;
    property Fire_BurnVelocityVal: Double dispid 1610743886;
    property Fire_TimeOfReqResist: IRDimFireTimeOfReqResistE52 dispid 1610743888;
    property Fire_SurfaceProtection: Double dispid 1610743890;
    function Fire_GetAddProtectOfSectSides(in_: IRDimFireAddProtectOfSectSidesE52): Integer; dispid 1610743892;
    procedure Fire_SetAddProtectOfSectSides(in_: IRDimFireAddProtectOfSectSidesE52; val: Integer); dispid 1610743893;
    property Fire_ContinuousProtection: Integer dispid 1610743894;
    property GammaM: Double dispid 1610743896;
    property GammaMGL: Double dispid 1610743898;
    property GammaGMFI: Double dispid 1610743900;
  end;

// *********************************************************************//
// Interface: IRDimCodeResE52
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7823D66D-B1CA-4367-AC28-05AA92497750}
// *********************************************************************//
  IRDimCodeResE52 = interface(IDispatch)
    ['{7823D66D-B1CA-4367-AC28-05AA92497750}']
    function Get_IsBuckY: Integer; safecall;
    function Get_IsBuckZ: Integer; safecall;
    function Get_StrsShearY: Double; safecall;
    function Get_StrsShearZ: Double; safecall;
    function Get_StrsMax: Double; safecall;
    function Get_StrsMom: Double; safecall;
    function Get_StrsTens: Double; safecall;
    function Get_StrsComp: Double; safecall;
    function Get_StrsUprEdgeMY: Double; safecall;
    function Get_StrsRgtEdgeMZ: Double; safecall;
    function Get_StrsLowEdgeMY: Double; safecall;
    function Get_StrsLftEdgeMZ: Double; safecall;
    function Get_CritLatTorsBuckMomMCR: Double; safecall;
    function Get_CritBendStressSIGCR: Double; safecall;
    function Get_StraigtnessFactBETAC: Double; safecall;
    function Get_InstabFactKC: Double; safecall;
    function Get_InstabFactKCY: Double; safecall;
    function Get_InstabFactKCZ: Double; safecall;
    function Get_LengthY: Double; safecall;
    function Get_LengthZ: Double; safecall;
    function Get_BuckLengthLFY: Double; safecall;
    function Get_BuckLengthLFZ: Double; safecall;
    function Get_ShaftLengthL1Y: Double; safecall;
    function Get_ShaftLengthL1Z: Double; safecall;
    function Get_BuckSlendRatioLAY: Double; safecall;
    function Get_BuckSlendRatioLAZ: Double; safecall;
    function Get_BendRelSlendLAM: Double; safecall;
    function Get_LatTorsBuckLengthLd: Double; safecall;
    function Get_BuckCritStressSIGCRY: Double; safecall;
    function Get_BuckCritStressSIGCRZ: Double; safecall;
    function Get_BuckRelSlendRatioLARY: Double; safecall;
    function Get_BuckRelSlendRatioLARZ: Double; safecall;
    function Get_LatTorsFactKCRIT: Double; safecall;
    function Get_ModifFactorKMOD: Double; safecall;
    function Get_DepthFactorKHMY: Double; safecall;
    function Get_DepthFactorKHMZ: Double; safecall;
    function Get_DepthFactorKHT: Double; safecall;
    function Get_LengthFactorKL: Double; safecall;
    function Get_BendRedistrFactorKM: Double; safecall;
    function Get_ShapeFactorKSHAPE: Double; safecall;
    function Get_TaperedEdgeFactorKMALFA: Double; safecall;
    function Get_DsgnTensStrenFT0D: Double; safecall;
    function Get_DsgnCompStrenFC0D: Double; safecall;
    function Get_DsgnBendStrenFMYD: Double; safecall;
    function Get_DsgnBendStrenFMZD: Double; safecall;
    function Get_DsgnShearStrenFMVD: Double; safecall;
    function Get_MaxBendStressSIGMAXY: Double; safecall;
    function Get_MaxBendStressSIGMAXZ: Double; safecall;
    function Get_MaxUsageFact: Double; safecall;
    function Get_MaxUsageFactAxForce: Double; safecall;
    function Get_MaxUsageFactY: Double; safecall;
    function Get_MaxUsageFactZ: Double; safecall;
    function Get_MaxUsageFactBendY: Double; safecall;
    function Get_MaxUsageFactCompBendY: Double; safecall;
    function Get_MaxUsageFactShearZ: Double; safecall;
    function Get_MaxUsageFactShearY: Double; safecall;
    function Get_ElastSecModulWELY: Double; safecall;
    function Get_ElastSecModulWELZ: Double; safecall;
    function Get_MaxAllowUsageFact: Double; safecall;
    function Get_MaxUsageFactEq6_38: Double; safecall;
    function Get_MaxUsageFactEq6_41: Double; safecall;
    function Get_MaxUsageFactEq6_50: Double; safecall;
    function Get_DsgnBendSressSIGMAD: Double; safecall;
    function Get_DsgnBendSressSIGMD: Double; safecall;
    function Get_DsgnTensSressSIGT90D: Double; safecall;
    function Get_DsgnBendStrenFMAD: Double; safecall;
    function Get_DsgnCompStrenFC90D: Double; safecall;
    function Get_DsgnTensStrenFT90D: Double; safecall;
    function Get_SystemCoeffKLS: Double; safecall;
    function Get_VolumeFactorKVOL: Double; safecall;
    function Get_RedFactKR: Double; safecall;
    function Get_RedFactKL: Double; safecall;
    function Get_RedFactKP: Double; safecall;
    function Get_RedFactKDIS: Double; safecall;
    function Get_EdgeAngleALFAouble: Double; safecall;
    function Get_HightHAP: Double; safecall;
    function Get_RadiusRINI: Double; safecall;
    function Get_TaperedBeamThick: Double; safecall;
    function Get_IsFireCalc: Integer; safecall;
    function Get_FireRightSideProtection: Integer; safecall;
    function Get_FireLeftSideProtection: Integer; safecall;
    function Get_FireUpperSideProtection: Integer; safecall;
    function Get_FireLowerSideProtection: Integer; safecall;
    function Get_FireCalcMethod: Integer; safecall;
    function Get_FireRoundCorners: Integer; safecall;
    function Get_FireBurningSpeed: Integer; safecall;
    function Get_FireDblRectFull: Integer; safecall;
    function Get_FireBurningSpeedVal: Double; safecall;
    function Get_FireResistTime: Double; safecall;
    function Get_FireRadius: Double; safecall;
    function Get_FireEffectiveCharringDepthDEF: Double; safecall;
    function Get_FirePerimeterOfBurnedFace: Double; safecall;
    function Get_FireBurningSpeedBETA0: Double; safecall;
    function Get_FireCharringRateBETA: Double; safecall;
    function Get_FireCharringDepthDCHAR: Double; safecall;
    function Get_FireWidthB: Double; safecall;
    function Get_FireHightH: Double; safecall;
    function Get_FireAreaS: Double; safecall;
    function Get_FireShearAreaSY: Double; safecall;
    function Get_FireShearAreaSZ: Double; safecall;
    function Get_FireDistBetweenDblRectD: Double; safecall;
    function Get_FireDblRectWidthBLEFT: Double; safecall;
    function Get_FireDblRectWidthBRIGHT: Double; safecall;
    function Get_FireMidSpanWidthB: Double; safecall;
    function Get_FireMidSpanHightH: Double; safecall;
    function Get_FireMidSpanAreaS: Double; safecall;
    function Get_FireMidSpanDistBetweenDblRect: Double; safecall;
    function Get_FireMidSpanDblRectWidthBLEFT: Double; safecall;
    function Get_FireMidSpanDblRectWidthBRIGHT: Double; safecall;
    function Get_FireMomInerIY: Double; safecall;
    function Get_FireMomInerIZ: Double; safecall;
    function Get_FireRightEdgeDistVY: Double; safecall;
    function Get_FireLeftEdgeDistVPY: Double; safecall;
    function Get_FireUppEdgeDistVZ: Double; safecall;
    function Get_FireLowEdgeDistVPZ: Double; safecall;
    function Get_FireMidSpanMomInerIY: Double; safecall;
    function Get_FireMidSpanMomInerIZdouble: Double; safecall;
    function Get_FireMidSpanRightEdgeDistVY: Double; safecall;
    function Get_FireMidSpanLeftEdgeDistVPY: Double; safecall;
    function Get_FireMidSpanUppEdgeDistVZ: Double; safecall;
    function Get_FireMidSpanLowEdgeDistVPZ: Double; safecall;
    function Get_FireKmodCompr: Double; safecall;
    function Get_FireKmodTens: Double; safecall;
    function Get_FireKmodBend: Double; safecall;
    function Get_FireCoefKF: Double; safecall;
    property IsBuckY: Integer read Get_IsBuckY;
    property IsBuckZ: Integer read Get_IsBuckZ;
    property StrsShearY: Double read Get_StrsShearY;
    property StrsShearZ: Double read Get_StrsShearZ;
    property StrsMax: Double read Get_StrsMax;
    property StrsMom: Double read Get_StrsMom;
    property StrsTens: Double read Get_StrsTens;
    property StrsComp: Double read Get_StrsComp;
    property StrsUprEdgeMY: Double read Get_StrsUprEdgeMY;
    property StrsRgtEdgeMZ: Double read Get_StrsRgtEdgeMZ;
    property StrsLowEdgeMY: Double read Get_StrsLowEdgeMY;
    property StrsLftEdgeMZ: Double read Get_StrsLftEdgeMZ;
    property CritLatTorsBuckMomMCR: Double read Get_CritLatTorsBuckMomMCR;
    property CritBendStressSIGCR: Double read Get_CritBendStressSIGCR;
    property StraigtnessFactBETAC: Double read Get_StraigtnessFactBETAC;
    property InstabFactKC: Double read Get_InstabFactKC;
    property InstabFactKCY: Double read Get_InstabFactKCY;
    property InstabFactKCZ: Double read Get_InstabFactKCZ;
    property LengthY: Double read Get_LengthY;
    property LengthZ: Double read Get_LengthZ;
    property BuckLengthLFY: Double read Get_BuckLengthLFY;
    property BuckLengthLFZ: Double read Get_BuckLengthLFZ;
    property ShaftLengthL1Y: Double read Get_ShaftLengthL1Y;
    property ShaftLengthL1Z: Double read Get_ShaftLengthL1Z;
    property BuckSlendRatioLAY: Double read Get_BuckSlendRatioLAY;
    property BuckSlendRatioLAZ: Double read Get_BuckSlendRatioLAZ;
    property BendRelSlendLAM: Double read Get_BendRelSlendLAM;
    property LatTorsBuckLengthLd: Double read Get_LatTorsBuckLengthLd;
    property BuckCritStressSIGCRY: Double read Get_BuckCritStressSIGCRY;
    property BuckCritStressSIGCRZ: Double read Get_BuckCritStressSIGCRZ;
    property BuckRelSlendRatioLARY: Double read Get_BuckRelSlendRatioLARY;
    property BuckRelSlendRatioLARZ: Double read Get_BuckRelSlendRatioLARZ;
    property LatTorsFactKCRIT: Double read Get_LatTorsFactKCRIT;
    property ModifFactorKMOD: Double read Get_ModifFactorKMOD;
    property DepthFactorKHMY: Double read Get_DepthFactorKHMY;
    property DepthFactorKHMZ: Double read Get_DepthFactorKHMZ;
    property DepthFactorKHT: Double read Get_DepthFactorKHT;
    property LengthFactorKL: Double read Get_LengthFactorKL;
    property BendRedistrFactorKM: Double read Get_BendRedistrFactorKM;
    property ShapeFactorKSHAPE: Double read Get_ShapeFactorKSHAPE;
    property TaperedEdgeFactorKMALFA: Double read Get_TaperedEdgeFactorKMALFA;
    property DsgnTensStrenFT0D: Double read Get_DsgnTensStrenFT0D;
    property DsgnCompStrenFC0D: Double read Get_DsgnCompStrenFC0D;
    property DsgnBendStrenFMYD: Double read Get_DsgnBendStrenFMYD;
    property DsgnBendStrenFMZD: Double read Get_DsgnBendStrenFMZD;
    property DsgnShearStrenFMVD: Double read Get_DsgnShearStrenFMVD;
    property MaxBendStressSIGMAXY: Double read Get_MaxBendStressSIGMAXY;
    property MaxBendStressSIGMAXZ: Double read Get_MaxBendStressSIGMAXZ;
    property MaxUsageFact: Double read Get_MaxUsageFact;
    property MaxUsageFactAxForce: Double read Get_MaxUsageFactAxForce;
    property MaxUsageFactY: Double read Get_MaxUsageFactY;
    property MaxUsageFactZ: Double read Get_MaxUsageFactZ;
    property MaxUsageFactBendY: Double read Get_MaxUsageFactBendY;
    property MaxUsageFactCompBendY: Double read Get_MaxUsageFactCompBendY;
    property MaxUsageFactShearZ: Double read Get_MaxUsageFactShearZ;
    property MaxUsageFactShearY: Double read Get_MaxUsageFactShearY;
    property ElastSecModulWELY: Double read Get_ElastSecModulWELY;
    property ElastSecModulWELZ: Double read Get_ElastSecModulWELZ;
    property MaxAllowUsageFact: Double read Get_MaxAllowUsageFact;
    property MaxUsageFactEq6_38: Double read Get_MaxUsageFactEq6_38;
    property MaxUsageFactEq6_41: Double read Get_MaxUsageFactEq6_41;
    property MaxUsageFactEq6_50: Double read Get_MaxUsageFactEq6_50;
    property DsgnBendSressSIGMAD: Double read Get_DsgnBendSressSIGMAD;
    property DsgnBendSressSIGMD: Double read Get_DsgnBendSressSIGMD;
    property DsgnTensSressSIGT90D: Double read Get_DsgnTensSressSIGT90D;
    property DsgnBendStrenFMAD: Double read Get_DsgnBendStrenFMAD;
    property DsgnCompStrenFC90D: Double read Get_DsgnCompStrenFC90D;
    property DsgnTensStrenFT90D: Double read Get_DsgnTensStrenFT90D;
    property SystemCoeffKLS: Double read Get_SystemCoeffKLS;
    property VolumeFactorKVOL: Double read Get_VolumeFactorKVOL;
    property RedFactKR: Double read Get_RedFactKR;
    property RedFactKL: Double read Get_RedFactKL;
    property RedFactKP: Double read Get_RedFactKP;
    property RedFactKDIS: Double read Get_RedFactKDIS;
    property EdgeAngleALFAouble: Double read Get_EdgeAngleALFAouble;
    property HightHAP: Double read Get_HightHAP;
    property RadiusRINI: Double read Get_RadiusRINI;
    property TaperedBeamThick: Double read Get_TaperedBeamThick;
    property IsFireCalc: Integer read Get_IsFireCalc;
    property FireRightSideProtection: Integer read Get_FireRightSideProtection;
    property FireLeftSideProtection: Integer read Get_FireLeftSideProtection;
    property FireUpperSideProtection: Integer read Get_FireUpperSideProtection;
    property FireLowerSideProtection: Integer read Get_FireLowerSideProtection;
    property FireCalcMethod: Integer read Get_FireCalcMethod;
    property FireRoundCorners: Integer read Get_FireRoundCorners;
    property FireBurningSpeed: Integer read Get_FireBurningSpeed;
    property FireDblRectFull: Integer read Get_FireDblRectFull;
    property FireBurningSpeedVal: Double read Get_FireBurningSpeedVal;
    property FireResistTime: Double read Get_FireResistTime;
    property FireRadius: Double read Get_FireRadius;
    property FireEffectiveCharringDepthDEF: Double read Get_FireEffectiveCharringDepthDEF;
    property FirePerimeterOfBurnedFace: Double read Get_FirePerimeterOfBurnedFace;
    property FireBurningSpeedBETA0: Double read Get_FireBurningSpeedBETA0;
    property FireCharringRateBETA: Double read Get_FireCharringRateBETA;
    property FireCharringDepthDCHAR: Double read Get_FireCharringDepthDCHAR;
    property FireWidthB: Double read Get_FireWidthB;
    property FireHightH: Double read Get_FireHightH;
    property FireAreaS: Double read Get_FireAreaS;
    property FireShearAreaSY: Double read Get_FireShearAreaSY;
    property FireShearAreaSZ: Double read Get_FireShearAreaSZ;
    property FireDistBetweenDblRectD: Double read Get_FireDistBetweenDblRectD;
    property FireDblRectWidthBLEFT: Double read Get_FireDblRectWidthBLEFT;
    property FireDblRectWidthBRIGHT: Double read Get_FireDblRectWidthBRIGHT;
    property FireMidSpanWidthB: Double read Get_FireMidSpanWidthB;
    property FireMidSpanHightH: Double read Get_FireMidSpanHightH;
    property FireMidSpanAreaS: Double read Get_FireMidSpanAreaS;
    property FireMidSpanDistBetweenDblRect: Double read Get_FireMidSpanDistBetweenDblRect;
    property FireMidSpanDblRectWidthBLEFT: Double read Get_FireMidSpanDblRectWidthBLEFT;
    property FireMidSpanDblRectWidthBRIGHT: Double read Get_FireMidSpanDblRectWidthBRIGHT;
    property FireMomInerIY: Double read Get_FireMomInerIY;
    property FireMomInerIZ: Double read Get_FireMomInerIZ;
    property FireRightEdgeDistVY: Double read Get_FireRightEdgeDistVY;
    property FireLeftEdgeDistVPY: Double read Get_FireLeftEdgeDistVPY;
    property FireUppEdgeDistVZ: Double read Get_FireUppEdgeDistVZ;
    property FireLowEdgeDistVPZ: Double read Get_FireLowEdgeDistVPZ;
    property FireMidSpanMomInerIY: Double read Get_FireMidSpanMomInerIY;
    property FireMidSpanMomInerIZdouble: Double read Get_FireMidSpanMomInerIZdouble;
    property FireMidSpanRightEdgeDistVY: Double read Get_FireMidSpanRightEdgeDistVY;
    property FireMidSpanLeftEdgeDistVPY: Double read Get_FireMidSpanLeftEdgeDistVPY;
    property FireMidSpanUppEdgeDistVZ: Double read Get_FireMidSpanUppEdgeDistVZ;
    property FireMidSpanLowEdgeDistVPZ: Double read Get_FireMidSpanLowEdgeDistVPZ;
    property FireKmodCompr: Double read Get_FireKmodCompr;
    property FireKmodTens: Double read Get_FireKmodTens;
    property FireKmodBend: Double read Get_FireKmodBend;
    property FireCoefKF: Double read Get_FireCoefKF;
  end;

// *********************************************************************//
// DispIntf:  IRDimCodeResE52Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7823D66D-B1CA-4367-AC28-05AA92497750}
// *********************************************************************//
  IRDimCodeResE52Disp = dispinterface
    ['{7823D66D-B1CA-4367-AC28-05AA92497750}']
    property IsBuckY: Integer readonly dispid 1610743808;
    property IsBuckZ: Integer readonly dispid 1610743809;
    property StrsShearY: Double readonly dispid 1610743810;
    property StrsShearZ: Double readonly dispid 1610743811;
    property StrsMax: Double readonly dispid 1610743812;
    property StrsMom: Double readonly dispid 1610743813;
    property StrsTens: Double readonly dispid 1610743814;
    property StrsComp: Double readonly dispid 1610743815;
    property StrsUprEdgeMY: Double readonly dispid 1610743816;
    property StrsRgtEdgeMZ: Double readonly dispid 1610743817;
    property StrsLowEdgeMY: Double readonly dispid 1610743818;
    property StrsLftEdgeMZ: Double readonly dispid 1610743819;
    property CritLatTorsBuckMomMCR: Double readonly dispid 1610743820;
    property CritBendStressSIGCR: Double readonly dispid 1610743821;
    property StraigtnessFactBETAC: Double readonly dispid 1610743822;
    property InstabFactKC: Double readonly dispid 1610743823;
    property InstabFactKCY: Double readonly dispid 1610743824;
    property InstabFactKCZ: Double readonly dispid 1610743825;
    property LengthY: Double readonly dispid 1610743826;
    property LengthZ: Double readonly dispid 1610743827;
    property BuckLengthLFY: Double readonly dispid 1610743828;
    property BuckLengthLFZ: Double readonly dispid 1610743829;
    property ShaftLengthL1Y: Double readonly dispid 1610743830;
    property ShaftLengthL1Z: Double readonly dispid 1610743831;
    property BuckSlendRatioLAY: Double readonly dispid 1610743832;
    property BuckSlendRatioLAZ: Double readonly dispid 1610743833;
    property BendRelSlendLAM: Double readonly dispid 1610743834;
    property LatTorsBuckLengthLd: Double readonly dispid 1610743835;
    property BuckCritStressSIGCRY: Double readonly dispid 1610743836;
    property BuckCritStressSIGCRZ: Double readonly dispid 1610743837;
    property BuckRelSlendRatioLARY: Double readonly dispid 1610743838;
    property BuckRelSlendRatioLARZ: Double readonly dispid 1610743839;
    property LatTorsFactKCRIT: Double readonly dispid 1610743840;
    property ModifFactorKMOD: Double readonly dispid 1610743841;
    property DepthFactorKHMY: Double readonly dispid 1610743842;
    property DepthFactorKHMZ: Double readonly dispid 1610743843;
    property DepthFactorKHT: Double readonly dispid 1610743844;
    property LengthFactorKL: Double readonly dispid 1610743845;
    property BendRedistrFactorKM: Double readonly dispid 1610743846;
    property ShapeFactorKSHAPE: Double readonly dispid 1610743847;
    property TaperedEdgeFactorKMALFA: Double readonly dispid 1610743848;
    property DsgnTensStrenFT0D: Double readonly dispid 1610743849;
    property DsgnCompStrenFC0D: Double readonly dispid 1610743850;
    property DsgnBendStrenFMYD: Double readonly dispid 1610743851;
    property DsgnBendStrenFMZD: Double readonly dispid 1610743852;
    property DsgnShearStrenFMVD: Double readonly dispid 1610743853;
    property MaxBendStressSIGMAXY: Double readonly dispid 1610743854;
    property MaxBendStressSIGMAXZ: Double readonly dispid 1610743855;
    property MaxUsageFact: Double readonly dispid 1610743856;
    property MaxUsageFactAxForce: Double readonly dispid 1610743857;
    property MaxUsageFactY: Double readonly dispid 1610743858;
    property MaxUsageFactZ: Double readonly dispid 1610743859;
    property MaxUsageFactBendY: Double readonly dispid 1610743860;
    property MaxUsageFactCompBendY: Double readonly dispid 1610743861;
    property MaxUsageFactShearZ: Double readonly dispid 1610743862;
    property MaxUsageFactShearY: Double readonly dispid 1610743863;
    property ElastSecModulWELY: Double readonly dispid 1610743864;
    property ElastSecModulWELZ: Double readonly dispid 1610743865;
    property MaxAllowUsageFact: Double readonly dispid 1610743866;
    property MaxUsageFactEq6_38: Double readonly dispid 1610743867;
    property MaxUsageFactEq6_41: Double readonly dispid 1610743868;
    property MaxUsageFactEq6_50: Double readonly dispid 1610743869;
    property DsgnBendSressSIGMAD: Double readonly dispid 1610743870;
    property DsgnBendSressSIGMD: Double readonly dispid 1610743871;
    property DsgnTensSressSIGT90D: Double readonly dispid 1610743872;
    property DsgnBendStrenFMAD: Double readonly dispid 1610743873;
    property DsgnCompStrenFC90D: Double readonly dispid 1610743874;
    property DsgnTensStrenFT90D: Double readonly dispid 1610743875;
    property SystemCoeffKLS: Double readonly dispid 1610743876;
    property VolumeFactorKVOL: Double readonly dispid 1610743877;
    property RedFactKR: Double readonly dispid 1610743878;
    property RedFactKL: Double readonly dispid 1610743879;
    property RedFactKP: Double readonly dispid 1610743880;
    property RedFactKDIS: Double readonly dispid 1610743881;
    property EdgeAngleALFAouble: Double readonly dispid 1610743882;
    property HightHAP: Double readonly dispid 1610743883;
    property RadiusRINI: Double readonly dispid 1610743884;
    property TaperedBeamThick: Double readonly dispid 1610743885;
    property IsFireCalc: Integer readonly dispid 1610743886;
    property FireRightSideProtection: Integer readonly dispid 1610743887;
    property FireLeftSideProtection: Integer readonly dispid 1610743888;
    property FireUpperSideProtection: Integer readonly dispid 1610743889;
    property FireLowerSideProtection: Integer readonly dispid 1610743890;
    property FireCalcMethod: Integer readonly dispid 1610743891;
    property FireRoundCorners: Integer readonly dispid 1610743892;
    property FireBurningSpeed: Integer readonly dispid 1610743893;
    property FireDblRectFull: Integer readonly dispid 1610743894;
    property FireBurningSpeedVal: Double readonly dispid 1610743895;
    property FireResistTime: Double readonly dispid 1610743896;
    property FireRadius: Double readonly dispid 1610743897;
    property FireEffectiveCharringDepthDEF: Double readonly dispid 1610743898;
    property FirePerimeterOfBurnedFace: Double readonly dispid 1610743899;
    property FireBurningSpeedBETA0: Double readonly dispid 1610743900;
    property FireCharringRateBETA: Double readonly dispid 1610743901;
    property FireCharringDepthDCHAR: Double readonly dispid 1610743902;
    property FireWidthB: Double readonly dispid 1610743903;
    property FireHightH: Double readonly dispid 1610743904;
    property FireAreaS: Double readonly dispid 1610743905;
    property FireShearAreaSY: Double readonly dispid 1610743906;
    property FireShearAreaSZ: Double readonly dispid 1610743907;
    property FireDistBetweenDblRectD: Double readonly dispid 1610743908;
    property FireDblRectWidthBLEFT: Double readonly dispid 1610743909;
    property FireDblRectWidthBRIGHT: Double readonly dispid 1610743910;
    property FireMidSpanWidthB: Double readonly dispid 1610743911;
    property FireMidSpanHightH: Double readonly dispid 1610743912;
    property FireMidSpanAreaS: Double readonly dispid 1610743913;
    property FireMidSpanDistBetweenDblRect: Double readonly dispid 1610743914;
    property FireMidSpanDblRectWidthBLEFT: Double readonly dispid 1610743915;
    property FireMidSpanDblRectWidthBRIGHT: Double readonly dispid 1610743916;
    property FireMomInerIY: Double readonly dispid 1610743917;
    property FireMomInerIZ: Double readonly dispid 1610743918;
    property FireRightEdgeDistVY: Double readonly dispid 1610743919;
    property FireLeftEdgeDistVPY: Double readonly dispid 1610743920;
    property FireUppEdgeDistVZ: Double readonly dispid 1610743921;
    property FireLowEdgeDistVPZ: Double readonly dispid 1610743922;
    property FireMidSpanMomInerIY: Double readonly dispid 1610743923;
    property FireMidSpanMomInerIZdouble: Double readonly dispid 1610743924;
    property FireMidSpanRightEdgeDistVY: Double readonly dispid 1610743925;
    property FireMidSpanLeftEdgeDistVPY: Double readonly dispid 1610743926;
    property FireMidSpanUppEdgeDistVZ: Double readonly dispid 1610743927;
    property FireMidSpanLowEdgeDistVPZ: Double readonly dispid 1610743928;
    property FireKmodCompr: Double readonly dispid 1610743929;
    property FireKmodTens: Double readonly dispid 1610743930;
    property FireKmodBend: Double readonly dispid 1610743931;
    property FireCoefKF: Double readonly dispid 1610743932;
  end;

// *********************************************************************//
// Interface: IRDimMembParamsCB71
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {12B15549-D243-48B1-9513-CF76ECE0796E}
// *********************************************************************//
  IRDimMembParamsCB71 = interface(IDispatch)
    ['{12B15549-D243-48B1-9513-CF76ECE0796E}']
    function Get_BucklingDiagramY: IRDimBuckDiagramCB71; safecall;
    procedure Set_BucklingDiagramY(ret: IRDimBuckDiagramCB71); safecall;
    function Get_BucklingDiagramZ: IRDimBuckDiagramCB71; safecall;
    procedure Set_BucklingDiagramZ(ret: IRDimBuckDiagramCB71); safecall;
    function Get_BucklLengthCoeffY: Double; safecall;
    procedure Set_BucklLengthCoeffY(ret: Double); safecall;
    function Get_BuckLengthCoeffZ: Double; safecall;
    procedure Set_BuckLengthCoeffZ(ret: Double); safecall;
    function Get_LatBuckType: IRDimLaterBuckTypeCB71; safecall;
    procedure Set_LatBuckType(ret: IRDimLaterBuckTypeCB71); safecall;
    function Get_LatCoeffLowerFlangeValue: Double; safecall;
    procedure Set_LatCoeffLowerFlangeValue(ret: Double); safecall;
    function Get_LatCoeffUpperFlangeValue: Double; safecall;
    procedure Set_LatCoeffUpperFlangeValue(ret: Double); safecall;
    function Get_LoadLevel: IRDimLoadLevelCB71; safecall;
    procedure Set_LoadLevel(ret: IRDimLoadLevelCB71); safecall;
    function Get_LoadTypeY: IRDimLoadTypeCB71; safecall;
    procedure Set_LoadTypeY(ret: IRDimLoadTypeCB71); safecall;
    function Get_TensAreaNetGros: Double; safecall;
    procedure Set_TensAreaNetGros(ret: Double); safecall;
    function Get_TubeControl: WordBool; safecall;
    procedure Set_TubeControl(ret: WordBool); safecall;
    function Get_ArcBeamCheck: WordBool; safecall;
    procedure Set_ArcBeamCheck(ret: WordBool); safecall;
    function Get_ArcRadius: Double; safecall;
    procedure Set_ArcRadius(ret: Double); safecall;
    function Get_InflDeflCoefTheta: Double; safecall;
    procedure Set_InflDeflCoefTheta(ret: Double); safecall;
    function Get_BuckIsComposedY: WordBool; safecall;
    procedure Set_BuckIsComposedY(ret: WordBool); safecall;
    function Get_BuckIsComposedZ: WordBool; safecall;
    procedure Set_BuckIsComposedZ(ret: WordBool); safecall;
    function Get_BuckComposBeamCoefCey: Double; safecall;
    procedure Set_BuckComposBeamCoefCey(ret: Double); safecall;
    function Get_BuckComposBeamCoefCez: Double; safecall;
    procedure Set_BuckComposBeamCoefCez(ret: Double); safecall;
    function Get_HumChangeDeltaH: Double; safecall;
    procedure Set_HumChangeDeltaH(ret: Double); safecall;
    function Get_ForceDistFromBeginDistX: Double; safecall;
    procedure Set_ForceDistFromBeginDistX(ret: Double); safecall;
    function Get_FireLftSideProt: WordBool; safecall;
    procedure Set_FireLftSideProt(ret: WordBool); safecall;
    function Get_FireUprSideProt: WordBool; safecall;
    procedure Set_FireUprSideProt(ret: WordBool); safecall;
    function Get_FireRgtSideProt: WordBool; safecall;
    procedure Set_FireRgtSideProt(ret: WordBool); safecall;
    function Get_FireLowSideProt: WordBool; safecall;
    procedure Set_FireLowSideProt(ret: WordBool); safecall;
    function Get_FireProtectionTime: IRDimFireProtectionTimesCB71; safecall;
    procedure Set_FireProtectionTime(ret: IRDimFireProtectionTimesCB71); safecall;
    function Get_FireMembPosition: IRDimFireMemberPositionsCB71; safecall;
    procedure Set_FireMembPosition(ret: IRDimFireMemberPositionsCB71); safecall;
    function Get_FireRequiredResist: Double; safecall;
    procedure Set_FireRequiredResist(ret: Double); safecall;
    function Get_FireContinProtForComposBeam: WordBool; safecall;
    procedure Set_FireContinProtForComposBeam(ret: WordBool); safecall;
    property BucklingDiagramY: IRDimBuckDiagramCB71 read Get_BucklingDiagramY write Set_BucklingDiagramY;
    property BucklingDiagramZ: IRDimBuckDiagramCB71 read Get_BucklingDiagramZ write Set_BucklingDiagramZ;
    property BucklLengthCoeffY: Double read Get_BucklLengthCoeffY write Set_BucklLengthCoeffY;
    property BuckLengthCoeffZ: Double read Get_BuckLengthCoeffZ write Set_BuckLengthCoeffZ;
    property LatBuckType: IRDimLaterBuckTypeCB71 read Get_LatBuckType write Set_LatBuckType;
    property LatCoeffLowerFlangeValue: Double read Get_LatCoeffLowerFlangeValue write Set_LatCoeffLowerFlangeValue;
    property LatCoeffUpperFlangeValue: Double read Get_LatCoeffUpperFlangeValue write Set_LatCoeffUpperFlangeValue;
    property LoadLevel: IRDimLoadLevelCB71 read Get_LoadLevel write Set_LoadLevel;
    property LoadTypeY: IRDimLoadTypeCB71 read Get_LoadTypeY write Set_LoadTypeY;
    property TensAreaNetGros: Double read Get_TensAreaNetGros write Set_TensAreaNetGros;
    property TubeControl: WordBool read Get_TubeControl write Set_TubeControl;
    property ArcBeamCheck: WordBool read Get_ArcBeamCheck write Set_ArcBeamCheck;
    property ArcRadius: Double read Get_ArcRadius write Set_ArcRadius;
    property InflDeflCoefTheta: Double read Get_InflDeflCoefTheta write Set_InflDeflCoefTheta;
    property BuckIsComposedY: WordBool read Get_BuckIsComposedY write Set_BuckIsComposedY;
    property BuckIsComposedZ: WordBool read Get_BuckIsComposedZ write Set_BuckIsComposedZ;
    property BuckComposBeamCoefCey: Double read Get_BuckComposBeamCoefCey write Set_BuckComposBeamCoefCey;
    property BuckComposBeamCoefCez: Double read Get_BuckComposBeamCoefCez write Set_BuckComposBeamCoefCez;
    property HumChangeDeltaH: Double read Get_HumChangeDeltaH write Set_HumChangeDeltaH;
    property ForceDistFromBeginDistX: Double read Get_ForceDistFromBeginDistX write Set_ForceDistFromBeginDistX;
    property FireLftSideProt: WordBool read Get_FireLftSideProt write Set_FireLftSideProt;
    property FireUprSideProt: WordBool read Get_FireUprSideProt write Set_FireUprSideProt;
    property FireRgtSideProt: WordBool read Get_FireRgtSideProt write Set_FireRgtSideProt;
    property FireLowSideProt: WordBool read Get_FireLowSideProt write Set_FireLowSideProt;
    property FireProtectionTime: IRDimFireProtectionTimesCB71 read Get_FireProtectionTime write Set_FireProtectionTime;
    property FireMembPosition: IRDimFireMemberPositionsCB71 read Get_FireMembPosition write Set_FireMembPosition;
    property FireRequiredResist: Double read Get_FireRequiredResist write Set_FireRequiredResist;
    property FireContinProtForComposBeam: WordBool read Get_FireContinProtForComposBeam write Set_FireContinProtForComposBeam;
  end;

// *********************************************************************//
// DispIntf:  IRDimMembParamsCB71Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {12B15549-D243-48B1-9513-CF76ECE0796E}
// *********************************************************************//
  IRDimMembParamsCB71Disp = dispinterface
    ['{12B15549-D243-48B1-9513-CF76ECE0796E}']
    property BucklingDiagramY: IRDimBuckDiagramCB71 dispid 1610743808;
    property BucklingDiagramZ: IRDimBuckDiagramCB71 dispid 1610743810;
    property BucklLengthCoeffY: Double dispid 1610743812;
    property BuckLengthCoeffZ: Double dispid 1610743814;
    property LatBuckType: IRDimLaterBuckTypeCB71 dispid 1610743816;
    property LatCoeffLowerFlangeValue: Double dispid 1610743818;
    property LatCoeffUpperFlangeValue: Double dispid 1610743820;
    property LoadLevel: IRDimLoadLevelCB71 dispid 1610743822;
    property LoadTypeY: IRDimLoadTypeCB71 dispid 1610743824;
    property TensAreaNetGros: Double dispid 1610743826;
    property TubeControl: WordBool dispid 1610743828;
    property ArcBeamCheck: WordBool dispid 1610743830;
    property ArcRadius: Double dispid 1610743832;
    property InflDeflCoefTheta: Double dispid 1610743834;
    property BuckIsComposedY: WordBool dispid 1610743836;
    property BuckIsComposedZ: WordBool dispid 1610743838;
    property BuckComposBeamCoefCey: Double dispid 1610743840;
    property BuckComposBeamCoefCez: Double dispid 1610743842;
    property HumChangeDeltaH: Double dispid 1610743844;
    property ForceDistFromBeginDistX: Double dispid 1610743846;
    property FireLftSideProt: WordBool dispid 1610743848;
    property FireUprSideProt: WordBool dispid 1610743850;
    property FireRgtSideProt: WordBool dispid 1610743852;
    property FireLowSideProt: WordBool dispid 1610743854;
    property FireProtectionTime: IRDimFireProtectionTimesCB71 dispid 1610743856;
    property FireMembPosition: IRDimFireMemberPositionsCB71 dispid 1610743858;
    property FireRequiredResist: Double dispid 1610743860;
    property FireContinProtForComposBeam: WordBool dispid 1610743862;
  end;

// *********************************************************************//
// Interface: IRDimCodeResCB71
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6C03125E-AD17-4422-94CE-EF735CF7A13D}
// *********************************************************************//
  IRDimCodeResCB71 = interface(IDispatch)
    ['{6C03125E-AD17-4422-94CE-EF735CF7A13D}']
    function Get_BadWidthBfUnderFire: WordBool; safecall;
    function Get_IsBuckY: Smallint; safecall;
    function Get_IsBuckZ: Smallint; safecall;
    function Get_StrsShearY: Double; safecall;
    function Get_StrsShearZ: Double; safecall;
    function Get_EfficiencyRatio: Double; safecall;
    function Get_StrsFinal: Double; safecall;
    function Get_StrsBend: Double; safecall;
    function Get_StrsTens: Double; safecall;
    function Get_StrsUprEdgeMY: Double; safecall;
    function Get_StrsRgtEdgeMZ: Double; safecall;
    function Get_StrsLowEdgeMY: Double; safecall;
    function Get_StrsLftEdgeMZ: Double; safecall;
    function Get_StrsBendInCompEdgeMY: Double; safecall;
    function Get_StrsBendInCompEdgeMZ: Double; safecall;
    function Get_StrsComp: Double; safecall;
    function Get_LatBuckStrsCrit: Double; safecall;
    function Get_StrsBendInCurveBeam: Double; safecall;
    function Get_BuckLengthLFY: Double; safecall;
    function Get_BuckLengthLFZ: Double; safecall;
    function Get_BuckLengthComposBeamLey: Double; safecall;
    function Get_BuckLengthComposBeamLez: Double; safecall;
    function Get_BuckSLendLay: Double; safecall;
    function Get_BuckSlendLaz: Double; safecall;
    function Get_BuckSlendComposBeamLaym: Double; safecall;
    function Get_BuckSlendComposBeamLazm: Double; safecall;
    function Get_LatBuckRelSlendLam: Double; safecall;
    function Get_BuckCoefKY: Double; safecall;
    function Get_BuckCoefKZ: Double; safecall;
    function Get_BuckCoefKMax: Double; safecall;
    function Get_LatBuckCoefKinst: Double; safecall;
    function Get_LatBuckLengthLd: Double; safecall;
    function Get_LatBuckLengthCoef: Double; safecall;
    function Get_TimberType: Smallint; safecall;
    function Get_MatAxCompResist: Double; safecall;
    function Get_MatAxTensResist: Double; safecall;
    function Get_MatBendResist: Double; safecall;
    function Get_MatShearResist: Double; safecall;
    function Get_MatTrCompResist: Double; safecall;
    function Get_MatTrTensResist: Double; safecall;
    function Get_CoefDependOnAngle: Double; safecall;
    function Get_CoefDependOnWidth: Double; safecall;
    function Get_CoefDependOnHeight: Double; safecall;
    function Get_CoefDependOnHumAndComp: Double; safecall;
    function Get_CoefDependOnHumAndBend: Double; safecall;
    function Get_FireProtection: Smallint; safecall;
    function Get_FireResistance: Double; safecall;
    function Get_FireProtectionPosition: Smallint; safecall;
    function Get_FireWidthB: Double; safecall;
    function Get_FireWidthH: Double; safecall;
    function Get_FireSecAreaS: Double; safecall;
    function Get_FireShearAreaSY: Double; safecall;
    function Get_FireShearAreaSZ: Double; safecall;
    function Get_FireRgtEdgeDistVy: Double; safecall;
    function Get_FireLftEdgeDistVpy: Double; safecall;
    function Get_FireUprEdgeDistVz: Double; safecall;
    function Get_FireLowEdgeDistVPZ: Double; safecall;
    function Get_FireInerMomIx: Double; safecall;
    function Get_FireInerMomIy: Double; safecall;
    function Get_FireInerMomIz: Double; safecall;
    function Get_FireSeModulWy: Double; safecall;
    function Get_FireSeModulWZ: Double; safecall;
    function Get_FireRedCoefK1h: Double; safecall;
    function Get_FireRedCoefK1b: Double; safecall;
    function Get_FireProtectCoefK2: Double; safecall;
    function Get_FireWidthInMidSpanB: Double; safecall;
    function Get_FireWidthAtMembEndB: Double; safecall;
    function Get_FireHightInMidSpanH: Double; safecall;
    function Get_FireWidthAtMembEndH: Double; safecall;
    function Get_FireSecAreaInMidSpanS: Double; safecall;
    function Get_FireInerMomInMidSpanIy: Double; safecall;
    function Get_FireInerMomInMidSpanIz: Double; safecall;
    property BadWidthBfUnderFire: WordBool read Get_BadWidthBfUnderFire;
    property IsBuckY: Smallint read Get_IsBuckY;
    property IsBuckZ: Smallint read Get_IsBuckZ;
    property StrsShearY: Double read Get_StrsShearY;
    property StrsShearZ: Double read Get_StrsShearZ;
    property EfficiencyRatio: Double read Get_EfficiencyRatio;
    property StrsFinal: Double read Get_StrsFinal;
    property StrsBend: Double read Get_StrsBend;
    property StrsTens: Double read Get_StrsTens;
    property StrsUprEdgeMY: Double read Get_StrsUprEdgeMY;
    property StrsRgtEdgeMZ: Double read Get_StrsRgtEdgeMZ;
    property StrsLowEdgeMY: Double read Get_StrsLowEdgeMY;
    property StrsLftEdgeMZ: Double read Get_StrsLftEdgeMZ;
    property StrsBendInCompEdgeMY: Double read Get_StrsBendInCompEdgeMY;
    property StrsBendInCompEdgeMZ: Double read Get_StrsBendInCompEdgeMZ;
    property StrsComp: Double read Get_StrsComp;
    property LatBuckStrsCrit: Double read Get_LatBuckStrsCrit;
    property StrsBendInCurveBeam: Double read Get_StrsBendInCurveBeam;
    property BuckLengthLFY: Double read Get_BuckLengthLFY;
    property BuckLengthLFZ: Double read Get_BuckLengthLFZ;
    property BuckLengthComposBeamLey: Double read Get_BuckLengthComposBeamLey;
    property BuckLengthComposBeamLez: Double read Get_BuckLengthComposBeamLez;
    property BuckSLendLay: Double read Get_BuckSLendLay;
    property BuckSlendLaz: Double read Get_BuckSlendLaz;
    property BuckSlendComposBeamLaym: Double read Get_BuckSlendComposBeamLaym;
    property BuckSlendComposBeamLazm: Double read Get_BuckSlendComposBeamLazm;
    property LatBuckRelSlendLam: Double read Get_LatBuckRelSlendLam;
    property BuckCoefKY: Double read Get_BuckCoefKY;
    property BuckCoefKZ: Double read Get_BuckCoefKZ;
    property BuckCoefKMax: Double read Get_BuckCoefKMax;
    property LatBuckCoefKinst: Double read Get_LatBuckCoefKinst;
    property LatBuckLengthLd: Double read Get_LatBuckLengthLd;
    property LatBuckLengthCoef: Double read Get_LatBuckLengthCoef;
    property TimberType: Smallint read Get_TimberType;
    property MatAxCompResist: Double read Get_MatAxCompResist;
    property MatAxTensResist: Double read Get_MatAxTensResist;
    property MatBendResist: Double read Get_MatBendResist;
    property MatShearResist: Double read Get_MatShearResist;
    property MatTrCompResist: Double read Get_MatTrCompResist;
    property MatTrTensResist: Double read Get_MatTrTensResist;
    property CoefDependOnAngle: Double read Get_CoefDependOnAngle;
    property CoefDependOnWidth: Double read Get_CoefDependOnWidth;
    property CoefDependOnHeight: Double read Get_CoefDependOnHeight;
    property CoefDependOnHumAndComp: Double read Get_CoefDependOnHumAndComp;
    property CoefDependOnHumAndBend: Double read Get_CoefDependOnHumAndBend;
    property FireProtection: Smallint read Get_FireProtection;
    property FireResistance: Double read Get_FireResistance;
    property FireProtectionPosition: Smallint read Get_FireProtectionPosition;
    property FireWidthB: Double read Get_FireWidthB;
    property FireWidthH: Double read Get_FireWidthH;
    property FireSecAreaS: Double read Get_FireSecAreaS;
    property FireShearAreaSY: Double read Get_FireShearAreaSY;
    property FireShearAreaSZ: Double read Get_FireShearAreaSZ;
    property FireRgtEdgeDistVy: Double read Get_FireRgtEdgeDistVy;
    property FireLftEdgeDistVpy: Double read Get_FireLftEdgeDistVpy;
    property FireUprEdgeDistVz: Double read Get_FireUprEdgeDistVz;
    property FireLowEdgeDistVPZ: Double read Get_FireLowEdgeDistVPZ;
    property FireInerMomIx: Double read Get_FireInerMomIx;
    property FireInerMomIy: Double read Get_FireInerMomIy;
    property FireInerMomIz: Double read Get_FireInerMomIz;
    property FireSeModulWy: Double read Get_FireSeModulWy;
    property FireSeModulWZ: Double read Get_FireSeModulWZ;
    property FireRedCoefK1h: Double read Get_FireRedCoefK1h;
    property FireRedCoefK1b: Double read Get_FireRedCoefK1b;
    property FireProtectCoefK2: Double read Get_FireProtectCoefK2;
    property FireWidthInMidSpanB: Double read Get_FireWidthInMidSpanB;
    property FireWidthAtMembEndB: Double read Get_FireWidthAtMembEndB;
    property FireHightInMidSpanH: Double read Get_FireHightInMidSpanH;
    property FireWidthAtMembEndH: Double read Get_FireWidthAtMembEndH;
    property FireSecAreaInMidSpanS: Double read Get_FireSecAreaInMidSpanS;
    property FireInerMomInMidSpanIy: Double read Get_FireInerMomInMidSpanIy;
    property FireInerMomInMidSpanIz: Double read Get_FireInerMomInMidSpanIz;
  end;

// *********************************************************************//
// DispIntf:  IRDimCodeResCB71Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6C03125E-AD17-4422-94CE-EF735CF7A13D}
// *********************************************************************//
  IRDimCodeResCB71Disp = dispinterface
    ['{6C03125E-AD17-4422-94CE-EF735CF7A13D}']
    property BadWidthBfUnderFire: WordBool readonly dispid 1610743808;
    property IsBuckY: Smallint readonly dispid 1610743809;
    property IsBuckZ: Smallint readonly dispid 1610743810;
    property StrsShearY: Double readonly dispid 1610743811;
    property StrsShearZ: Double readonly dispid 1610743812;
    property EfficiencyRatio: Double readonly dispid 1610743813;
    property StrsFinal: Double readonly dispid 1610743814;
    property StrsBend: Double readonly dispid 1610743815;
    property StrsTens: Double readonly dispid 1610743816;
    property StrsUprEdgeMY: Double readonly dispid 1610743817;
    property StrsRgtEdgeMZ: Double readonly dispid 1610743818;
    property StrsLowEdgeMY: Double readonly dispid 1610743819;
    property StrsLftEdgeMZ: Double readonly dispid 1610743820;
    property StrsBendInCompEdgeMY: Double readonly dispid 1610743821;
    property StrsBendInCompEdgeMZ: Double readonly dispid 1610743822;
    property StrsComp: Double readonly dispid 1610743823;
    property LatBuckStrsCrit: Double readonly dispid 1610743824;
    property StrsBendInCurveBeam: Double readonly dispid 1610743825;
    property BuckLengthLFY: Double readonly dispid 1610743826;
    property BuckLengthLFZ: Double readonly dispid 1610743827;
    property BuckLengthComposBeamLey: Double readonly dispid 1610743828;
    property BuckLengthComposBeamLez: Double readonly dispid 1610743829;
    property BuckSLendLay: Double readonly dispid 1610743830;
    property BuckSlendLaz: Double readonly dispid 1610743831;
    property BuckSlendComposBeamLaym: Double readonly dispid 1610743832;
    property BuckSlendComposBeamLazm: Double readonly dispid 1610743833;
    property LatBuckRelSlendLam: Double readonly dispid 1610743834;
    property BuckCoefKY: Double readonly dispid 1610743835;
    property BuckCoefKZ: Double readonly dispid 1610743836;
    property BuckCoefKMax: Double readonly dispid 1610743837;
    property LatBuckCoefKinst: Double readonly dispid 1610743838;
    property LatBuckLengthLd: Double readonly dispid 1610743839;
    property LatBuckLengthCoef: Double readonly dispid 1610743840;
    property TimberType: Smallint readonly dispid 1610743841;
    property MatAxCompResist: Double readonly dispid 1610743842;
    property MatAxTensResist: Double readonly dispid 1610743843;
    property MatBendResist: Double readonly dispid 1610743844;
    property MatShearResist: Double readonly dispid 1610743845;
    property MatTrCompResist: Double readonly dispid 1610743846;
    property MatTrTensResist: Double readonly dispid 1610743847;
    property CoefDependOnAngle: Double readonly dispid 1610743848;
    property CoefDependOnWidth: Double readonly dispid 1610743849;
    property CoefDependOnHeight: Double readonly dispid 1610743850;
    property CoefDependOnHumAndComp: Double readonly dispid 1610743851;
    property CoefDependOnHumAndBend: Double readonly dispid 1610743852;
    property FireProtection: Smallint readonly dispid 1610743853;
    property FireResistance: Double readonly dispid 1610743854;
    property FireProtectionPosition: Smallint readonly dispid 1610743855;
    property FireWidthB: Double readonly dispid 1610743856;
    property FireWidthH: Double readonly dispid 1610743857;
    property FireSecAreaS: Double readonly dispid 1610743858;
    property FireShearAreaSY: Double readonly dispid 1610743859;
    property FireShearAreaSZ: Double readonly dispid 1610743860;
    property FireRgtEdgeDistVy: Double readonly dispid 1610743861;
    property FireLftEdgeDistVpy: Double readonly dispid 1610743862;
    property FireUprEdgeDistVz: Double readonly dispid 1610743863;
    property FireLowEdgeDistVPZ: Double readonly dispid 1610743864;
    property FireInerMomIx: Double readonly dispid 1610743865;
    property FireInerMomIy: Double readonly dispid 1610743866;
    property FireInerMomIz: Double readonly dispid 1610743867;
    property FireSeModulWy: Double readonly dispid 1610743868;
    property FireSeModulWZ: Double readonly dispid 1610743869;
    property FireRedCoefK1h: Double readonly dispid 1610743870;
    property FireRedCoefK1b: Double readonly dispid 1610743871;
    property FireProtectCoefK2: Double readonly dispid 1610743872;
    property FireWidthInMidSpanB: Double readonly dispid 1610743873;
    property FireWidthAtMembEndB: Double readonly dispid 1610743874;
    property FireHightInMidSpanH: Double readonly dispid 1610743875;
    property FireWidthAtMembEndH: Double readonly dispid 1610743876;
    property FireSecAreaInMidSpanS: Double readonly dispid 1610743877;
    property FireInerMomInMidSpanIy: Double readonly dispid 1610743878;
    property FireInerMomInMidSpanIz: Double readonly dispid 1610743879;
  end;

// *********************************************************************//
// Interface: IRDimMembParamsLRFD
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1F3414CF-9E4A-4FB4-BD36-6110CC2927B1}
// *********************************************************************//
  IRDimMembParamsLRFD = interface(IDispatch)
    ['{1F3414CF-9E4A-4FB4-BD36-6110CC2927B1}']
    function Get_BucklingDiagramY: IRDimBuckDiagramLRFD; safecall;
    procedure Set_BucklingDiagramY(pVal: IRDimBuckDiagramLRFD); safecall;
    function Get_BucklingDiagramZ: IRDimBuckDiagramLRFD; safecall;
    procedure Set_BucklingDiagramZ(pVal: IRDimBuckDiagramLRFD); safecall;
    function Get_BuckLenghtCoeffY: Double; safecall;
    procedure Set_BuckLenghtCoeffY(pVal: Double); safecall;
    function Get_BuckLenghtCoeffZ: Double; safecall;
    procedure Set_BuckLenghtCoeffZ(pVal: Double); safecall;
    function Get_LatBuck: Integer; safecall;
    procedure Set_LatBuck(pVal: Integer); safecall;
    function Get_LatBuckCoef_UppFlan: IRDimLatBuckCoefDiagramLRFD; safecall;
    procedure Set_LatBuckCoef_UppFlan(pVal: IRDimLatBuckCoefDiagramLRFD); safecall;
    function Get_LatBuckCoef_LowFlan: IRDimLatBuckCoefDiagramLRFD; safecall;
    procedure Set_LatBuckCoef_LowFlan(pVal: IRDimLatBuckCoefDiagramLRFD); safecall;
    function Get_UserDefLatBuckCoef_UppFlan: Double; safecall;
    procedure Set_UserDefLatBuckCoef_UppFlan(pVal: Double); safecall;
    function Get_UserDefLatBuckCoef_LowFlan: Double; safecall;
    procedure Set_UserDefLatBuckCoef_LowFlan(pVal: Double); safecall;
    function Get_LatBuckCbCoeffDiagram: IRDimLatBuckCbCoeffDiagramLRFD; safecall;
    procedure Set_LatBuckCbCoeffDiagram(pVal: IRDimLatBuckCbCoeffDiagramLRFD); safecall;
    function Get_LatBuckCbCoeff: Double; safecall;
    procedure Set_LatBuckCbCoeff(pVal: Double); safecall;
    function Get_FactAnetto: Double; safecall;
    procedure Set_FactAnetto(pVal: Double); safecall;
    function Get_TubeControl: Integer; safecall;
    procedure Set_TubeControl(pVal: Integer); safecall;
    property BucklingDiagramY: IRDimBuckDiagramLRFD read Get_BucklingDiagramY write Set_BucklingDiagramY;
    property BucklingDiagramZ: IRDimBuckDiagramLRFD read Get_BucklingDiagramZ write Set_BucklingDiagramZ;
    property BuckLenghtCoeffY: Double read Get_BuckLenghtCoeffY write Set_BuckLenghtCoeffY;
    property BuckLenghtCoeffZ: Double read Get_BuckLenghtCoeffZ write Set_BuckLenghtCoeffZ;
    property LatBuck: Integer read Get_LatBuck write Set_LatBuck;
    property LatBuckCoef_UppFlan: IRDimLatBuckCoefDiagramLRFD read Get_LatBuckCoef_UppFlan write Set_LatBuckCoef_UppFlan;
    property LatBuckCoef_LowFlan: IRDimLatBuckCoefDiagramLRFD read Get_LatBuckCoef_LowFlan write Set_LatBuckCoef_LowFlan;
    property UserDefLatBuckCoef_UppFlan: Double read Get_UserDefLatBuckCoef_UppFlan write Set_UserDefLatBuckCoef_UppFlan;
    property UserDefLatBuckCoef_LowFlan: Double read Get_UserDefLatBuckCoef_LowFlan write Set_UserDefLatBuckCoef_LowFlan;
    property LatBuckCbCoeffDiagram: IRDimLatBuckCbCoeffDiagramLRFD read Get_LatBuckCbCoeffDiagram write Set_LatBuckCbCoeffDiagram;
    property LatBuckCbCoeff: Double read Get_LatBuckCbCoeff write Set_LatBuckCbCoeff;
    property FactAnetto: Double read Get_FactAnetto write Set_FactAnetto;
    property TubeControl: Integer read Get_TubeControl write Set_TubeControl;
  end;

// *********************************************************************//
// DispIntf:  IRDimMembParamsLRFDDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1F3414CF-9E4A-4FB4-BD36-6110CC2927B1}
// *********************************************************************//
  IRDimMembParamsLRFDDisp = dispinterface
    ['{1F3414CF-9E4A-4FB4-BD36-6110CC2927B1}']
    property BucklingDiagramY: IRDimBuckDiagramLRFD dispid 1610743808;
    property BucklingDiagramZ: IRDimBuckDiagramLRFD dispid 1610743810;
    property BuckLenghtCoeffY: Double dispid 1610743812;
    property BuckLenghtCoeffZ: Double dispid 1610743814;
    property LatBuck: Integer dispid 1610743816;
    property LatBuckCoef_UppFlan: IRDimLatBuckCoefDiagramLRFD dispid 1610743818;
    property LatBuckCoef_LowFlan: IRDimLatBuckCoefDiagramLRFD dispid 1610743820;
    property UserDefLatBuckCoef_UppFlan: Double dispid 1610743822;
    property UserDefLatBuckCoef_LowFlan: Double dispid 1610743824;
    property LatBuckCbCoeffDiagram: IRDimLatBuckCbCoeffDiagramLRFD dispid 1610743826;
    property LatBuckCbCoeff: Double dispid 1610743828;
    property FactAnetto: Double dispid 1610743830;
    property TubeControl: Integer dispid 1610743832;
  end;

// *********************************************************************//
// Interface: IRDimCodeResLRFD
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {17CD58EF-719B-4EBD-9B44-C929083D0E0E}
// *********************************************************************//
  IRDimCodeResLRFD = interface(IDispatch)
    ['{17CD58EF-719B-4EBD-9B44-C929083D0E0E}']
    function Get_BuckSlendY: Double; safecall;
    function Get_BuckSlendZ: Double; safecall;
    function Get_BuckColSlendParamLamcY: Double; safecall;
    function Get_BuckColSlendParamLamcZ: Double; safecall;
    function Get_SecFlangeClass: Integer; safecall;
    function Get_SecWebClass: Integer; safecall;
    function Get_SecUppUppFlangeLocSlendX1: Double; safecall;
    function Get_SecLowUppFlangeLocSlendX2: Double; safecall;
    function Get_SecUppFlangeWidthB: Double; safecall;
    function Get_SecFlangeDepthInMidSpanB1: Double; safecall;
    function Get_SecLowFlangeDepthB2: Double; safecall;
    function Get_SecHightD: Double; safecall;
    function Get_SecUppFlangeThickT: Double; safecall;
    function Get_SecUppFlangeThickT2: Double; safecall;
    function Get_SecWebHightH: Double; safecall;
    function Get_SecHightAtMembBegH1: Double; safecall;
    function Get_SecHightAtMembBegH2: Double; safecall;
    function Get_SecWebThickTW: Double; safecall;
    function Get_SecFlangeLocSlendX: Double; safecall;
    function Get_SecWebLocSlendX: Double; safecall;
    function Get_LimWidthThickParamKC: Double; safecall;
    function Get_RedFactForSlendCompElemQ: Double; safecall;
    function Get_LatBuckUnbracedLengthLB: Double; safecall;
    function Get_LatBuckBendCoefCB: Double; safecall;
    function Get_LatBuckLimPlastUnbracedLengthLpY: Double; safecall;
    function Get_LatBuckLimPlastUnbracedLengthLpZ: Double; safecall;
    function Get_LatBuckLimUnbracedLengthLrY: Double; safecall;
    function Get_LatBuckLimUnbracedLengthLrZ: Double; safecall;
    function Get_LatBuckLimMomentMrY: Double; safecall;
    function Get_LatBuckLimMomentMrZ: Double; safecall;
    function Get_StrengthAxTensPT: Double; safecall;
    function Get_StrengthAxCompPA: Double; safecall;
    function Get_StrengthAxTensCompPn: Double; safecall;
    function Get_StrengthShearVnY: Double; safecall;
    function Get_StrengthShearVnZ: Double; safecall;
    function Get_StrengthFlexMnY: Double; safecall;
    function Get_StrengthFlexMnZ: Double; safecall;
    function Get_PlastBendMomMpY: Double; safecall;
    function Get_PlastBendMomMpZ: Double; safecall;
    function Get_CritElastMomMcrY: Double; safecall;
    function Get_CritElastMomMcrZ: Double; safecall;
    function Get_CompResidulStressFR: Double; safecall;
    function Get_CritStressFCR: Double; safecall;
    function Get_SecPlastModulusWplY: Double; safecall;
    function Get_SecPlastModulusWplZ: Double; safecall;
    function Get_SecElastModulusWelY: Double; safecall;
    function Get_SecElastModulusWelZ: Double; safecall;
    function Get_SecCompElastModulusWelYC: Double; safecall;
    function Get_SecTensElastModulusWelYC: Double; safecall;
    function Get_MaxEffRatio: Double; safecall;
    function Get_EffShearRatioY: Double; safecall;
    function Get_EffShearRatioZ: Double; safecall;
    property BuckSlendY: Double read Get_BuckSlendY;
    property BuckSlendZ: Double read Get_BuckSlendZ;
    property BuckColSlendParamLamcY: Double read Get_BuckColSlendParamLamcY;
    property BuckColSlendParamLamcZ: Double read Get_BuckColSlendParamLamcZ;
    property SecFlangeClass: Integer read Get_SecFlangeClass;
    property SecWebClass: Integer read Get_SecWebClass;
    property SecUppUppFlangeLocSlendX1: Double read Get_SecUppUppFlangeLocSlendX1;
    property SecLowUppFlangeLocSlendX2: Double read Get_SecLowUppFlangeLocSlendX2;
    property SecUppFlangeWidthB: Double read Get_SecUppFlangeWidthB;
    property SecFlangeDepthInMidSpanB1: Double read Get_SecFlangeDepthInMidSpanB1;
    property SecLowFlangeDepthB2: Double read Get_SecLowFlangeDepthB2;
    property SecHightD: Double read Get_SecHightD;
    property SecUppFlangeThickT: Double read Get_SecUppFlangeThickT;
    property SecUppFlangeThickT2: Double read Get_SecUppFlangeThickT2;
    property SecWebHightH: Double read Get_SecWebHightH;
    property SecHightAtMembBegH1: Double read Get_SecHightAtMembBegH1;
    property SecHightAtMembBegH2: Double read Get_SecHightAtMembBegH2;
    property SecWebThickTW: Double read Get_SecWebThickTW;
    property SecFlangeLocSlendX: Double read Get_SecFlangeLocSlendX;
    property SecWebLocSlendX: Double read Get_SecWebLocSlendX;
    property LimWidthThickParamKC: Double read Get_LimWidthThickParamKC;
    property RedFactForSlendCompElemQ: Double read Get_RedFactForSlendCompElemQ;
    property LatBuckUnbracedLengthLB: Double read Get_LatBuckUnbracedLengthLB;
    property LatBuckBendCoefCB: Double read Get_LatBuckBendCoefCB;
    property LatBuckLimPlastUnbracedLengthLpY: Double read Get_LatBuckLimPlastUnbracedLengthLpY;
    property LatBuckLimPlastUnbracedLengthLpZ: Double read Get_LatBuckLimPlastUnbracedLengthLpZ;
    property LatBuckLimUnbracedLengthLrY: Double read Get_LatBuckLimUnbracedLengthLrY;
    property LatBuckLimUnbracedLengthLrZ: Double read Get_LatBuckLimUnbracedLengthLrZ;
    property LatBuckLimMomentMrY: Double read Get_LatBuckLimMomentMrY;
    property LatBuckLimMomentMrZ: Double read Get_LatBuckLimMomentMrZ;
    property StrengthAxTensPT: Double read Get_StrengthAxTensPT;
    property StrengthAxCompPA: Double read Get_StrengthAxCompPA;
    property StrengthAxTensCompPn: Double read Get_StrengthAxTensCompPn;
    property StrengthShearVnY: Double read Get_StrengthShearVnY;
    property StrengthShearVnZ: Double read Get_StrengthShearVnZ;
    property StrengthFlexMnY: Double read Get_StrengthFlexMnY;
    property StrengthFlexMnZ: Double read Get_StrengthFlexMnZ;
    property PlastBendMomMpY: Double read Get_PlastBendMomMpY;
    property PlastBendMomMpZ: Double read Get_PlastBendMomMpZ;
    property CritElastMomMcrY: Double read Get_CritElastMomMcrY;
    property CritElastMomMcrZ: Double read Get_CritElastMomMcrZ;
    property CompResidulStressFR: Double read Get_CompResidulStressFR;
    property CritStressFCR: Double read Get_CritStressFCR;
    property SecPlastModulusWplY: Double read Get_SecPlastModulusWplY;
    property SecPlastModulusWplZ: Double read Get_SecPlastModulusWplZ;
    property SecElastModulusWelY: Double read Get_SecElastModulusWelY;
    property SecElastModulusWelZ: Double read Get_SecElastModulusWelZ;
    property SecCompElastModulusWelYC: Double read Get_SecCompElastModulusWelYC;
    property SecTensElastModulusWelYC: Double read Get_SecTensElastModulusWelYC;
    property MaxEffRatio: Double read Get_MaxEffRatio;
    property EffShearRatioY: Double read Get_EffShearRatioY;
    property EffShearRatioZ: Double read Get_EffShearRatioZ;
  end;

// *********************************************************************//
// DispIntf:  IRDimCodeResLRFDDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {17CD58EF-719B-4EBD-9B44-C929083D0E0E}
// *********************************************************************//
  IRDimCodeResLRFDDisp = dispinterface
    ['{17CD58EF-719B-4EBD-9B44-C929083D0E0E}']
    property BuckSlendY: Double readonly dispid 1610743808;
    property BuckSlendZ: Double readonly dispid 1610743809;
    property BuckColSlendParamLamcY: Double readonly dispid 1610743810;
    property BuckColSlendParamLamcZ: Double readonly dispid 1610743811;
    property SecFlangeClass: Integer readonly dispid 1610743812;
    property SecWebClass: Integer readonly dispid 1610743813;
    property SecUppUppFlangeLocSlendX1: Double readonly dispid 1610743814;
    property SecLowUppFlangeLocSlendX2: Double readonly dispid 1610743815;
    property SecUppFlangeWidthB: Double readonly dispid 1610743816;
    property SecFlangeDepthInMidSpanB1: Double readonly dispid 1610743817;
    property SecLowFlangeDepthB2: Double readonly dispid 1610743818;
    property SecHightD: Double readonly dispid 1610743819;
    property SecUppFlangeThickT: Double readonly dispid 1610743820;
    property SecUppFlangeThickT2: Double readonly dispid 1610743821;
    property SecWebHightH: Double readonly dispid 1610743822;
    property SecHightAtMembBegH1: Double readonly dispid 1610743823;
    property SecHightAtMembBegH2: Double readonly dispid 1610743824;
    property SecWebThickTW: Double readonly dispid 1610743825;
    property SecFlangeLocSlendX: Double readonly dispid 1610743826;
    property SecWebLocSlendX: Double readonly dispid 1610743827;
    property LimWidthThickParamKC: Double readonly dispid 1610743828;
    property RedFactForSlendCompElemQ: Double readonly dispid 1610743829;
    property LatBuckUnbracedLengthLB: Double readonly dispid 1610743830;
    property LatBuckBendCoefCB: Double readonly dispid 1610743831;
    property LatBuckLimPlastUnbracedLengthLpY: Double readonly dispid 1610743832;
    property LatBuckLimPlastUnbracedLengthLpZ: Double readonly dispid 1610743833;
    property LatBuckLimUnbracedLengthLrY: Double readonly dispid 1610743834;
    property LatBuckLimUnbracedLengthLrZ: Double readonly dispid 1610743835;
    property LatBuckLimMomentMrY: Double readonly dispid 1610743836;
    property LatBuckLimMomentMrZ: Double readonly dispid 1610743837;
    property StrengthAxTensPT: Double readonly dispid 1610743838;
    property StrengthAxCompPA: Double readonly dispid 1610743839;
    property StrengthAxTensCompPn: Double readonly dispid 1610743840;
    property StrengthShearVnY: Double readonly dispid 1610743841;
    property StrengthShearVnZ: Double readonly dispid 1610743842;
    property StrengthFlexMnY: Double readonly dispid 1610743843;
    property StrengthFlexMnZ: Double readonly dispid 1610743844;
    property PlastBendMomMpY: Double readonly dispid 1610743845;
    property PlastBendMomMpZ: Double readonly dispid 1610743846;
    property CritElastMomMcrY: Double readonly dispid 1610743847;
    property CritElastMomMcrZ: Double readonly dispid 1610743848;
    property CompResidulStressFR: Double readonly dispid 1610743849;
    property CritStressFCR: Double readonly dispid 1610743850;
    property SecPlastModulusWplY: Double readonly dispid 1610743851;
    property SecPlastModulusWplZ: Double readonly dispid 1610743852;
    property SecElastModulusWelY: Double readonly dispid 1610743853;
    property SecElastModulusWelZ: Double readonly dispid 1610743854;
    property SecCompElastModulusWelYC: Double readonly dispid 1610743855;
    property SecTensElastModulusWelYC: Double readonly dispid 1610743856;
    property MaxEffRatio: Double readonly dispid 1610743857;
    property EffShearRatioY: Double readonly dispid 1610743858;
    property EffShearRatioZ: Double readonly dispid 1610743859;
  end;

// *********************************************************************//
// Interface: IRJointWeld
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C9F82-AE18-11D3-9972-0080C86BE4DF}
// *********************************************************************//
  IRJointWeld = interface(IDispatch)
    ['{1C8C9F82-AE18-11D3-9972-0080C86BE4DF}']
    function Get_Thick: Double; safecall;
    procedure Set_Thick(ret: Double); safecall;
    function Get_Strength: Double; safecall;
    procedure Set_Strength(ret: Double); safecall;
    function Get_type_: IRJointWeldType; safecall;
    procedure Set_type_(ret: IRJointWeldType); safecall;
    property Thick: Double read Get_Thick write Set_Thick;
    property Strength: Double read Get_Strength write Set_Strength;
    property type_: IRJointWeldType read Get_type_ write Set_type_;
  end;

// *********************************************************************//
// DispIntf:  IRJointWeldDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C9F82-AE18-11D3-9972-0080C86BE4DF}
// *********************************************************************//
  IRJointWeldDisp = dispinterface
    ['{1C8C9F82-AE18-11D3-9972-0080C86BE4DF}']
    property Thick: Double dispid 1610743808;
    property Strength: Double dispid 1610743810;
    property type_: IRJointWeldType dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRJointPlate
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C9F84-AE18-11D3-9972-0080C86BE4DF}
// *********************************************************************//
  IRJointPlate = interface(IDispatch)
    ['{1C8C9F84-AE18-11D3-9972-0080C86BE4DF}']
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_Width: Double; safecall;
    procedure Set_Width(ret: Double); safecall;
    function Get_Thick: Double; safecall;
    procedure Set_Thick(ret: Double); safecall;
    function Get_Exist: Integer; safecall;
    procedure Set_Exist(ret: Integer); safecall;
    property Length: Double read Get_Length write Set_Length;
    property Width: Double read Get_Width write Set_Width;
    property Thick: Double read Get_Thick write Set_Thick;
    property Exist: Integer read Get_Exist write Set_Exist;
  end;

// *********************************************************************//
// DispIntf:  IRJointPlateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C9F84-AE18-11D3-9972-0080C86BE4DF}
// *********************************************************************//
  IRJointPlateDisp = dispinterface
    ['{1C8C9F84-AE18-11D3-9972-0080C86BE4DF}']
    property Length: Double dispid 1610743808;
    property Width: Double dispid 1610743810;
    property Thick: Double dispid 1610743812;
    property Exist: Integer dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRJointKneeDiagonalStiff
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C9F88-AE18-11D3-9972-0080C86BE4DF}
// *********************************************************************//
  IRJointKneeDiagonalStiff = interface(IDispatch)
    ['{1C8C9F88-AE18-11D3-9972-0080C86BE4DF}']
    function Get_type_: IRJointKneeDiagonalStiffType; safecall;
    procedure Set_type_(ret: IRJointKneeDiagonalStiffType); safecall;
    function Get_Thick: Double; safecall;
    procedure Set_Thick(ret: Double); safecall;
    function Get_Exist: Integer; safecall;
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    property type_: IRJointKneeDiagonalStiffType read Get_type_ write Set_type_;
    property Thick: Double read Get_Thick write Set_Thick;
    property Exist: Integer read Get_Exist;
    property Material: WideString read Get_Material write Set_Material;
  end;

// *********************************************************************//
// DispIntf:  IRJointKneeDiagonalStiffDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C9F88-AE18-11D3-9972-0080C86BE4DF}
// *********************************************************************//
  IRJointKneeDiagonalStiffDisp = dispinterface
    ['{1C8C9F88-AE18-11D3-9972-0080C86BE4DF}']
    property type_: IRJointKneeDiagonalStiffType dispid 1610743808;
    property Thick: Double dispid 1610743810;
    property Exist: Integer readonly dispid 1610743812;
    property Material: WideString dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRJointBolts
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C9F86-AE18-11D3-9972-0080C86BE4DF}
// *********************************************************************//
  IRJointBolts = interface(IDispatch)
    ['{1C8C9F86-AE18-11D3-9972-0080C86BE4DF}']
    function Get_Diameter: Double; safecall;
    function Get__className: WideString; safecall;
    procedure Set__className(const ret: WideString); safecall;
    function Get_DiameterName: WideString; safecall;
    procedure Set_DiameterName(const ret: WideString); safecall;
    function Get_Friction: Double; safecall;
    procedure Set_Friction(ret: Double); safecall;
    function Get_Area: Double; safecall;
    function Get_Rows: SYSINT; safecall;
    procedure Set_Rows(ret: SYSINT); safecall;
    function Get_Cols: SYSINT; safecall;
    procedure Set_Cols(ret: SYSINT); safecall;
    function Get_Height1: Double; safecall;
    procedure Set_Height1(ret: Double); safecall;
    property Diameter: Double read Get_Diameter;
    property _className: WideString read Get__className write Set__className;
    property DiameterName: WideString read Get_DiameterName write Set_DiameterName;
    property Friction: Double read Get_Friction write Set_Friction;
    property Area: Double read Get_Area;
    property Rows: SYSINT read Get_Rows write Set_Rows;
    property Cols: SYSINT read Get_Cols write Set_Cols;
    property Height1: Double read Get_Height1 write Set_Height1;
  end;

// *********************************************************************//
// DispIntf:  IRJointBoltsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C9F86-AE18-11D3-9972-0080C86BE4DF}
// *********************************************************************//
  IRJointBoltsDisp = dispinterface
    ['{1C8C9F86-AE18-11D3-9972-0080C86BE4DF}']
    property Diameter: Double readonly dispid 1610743808;
    property _className: WideString dispid 1610743809;
    property DiameterName: WideString dispid 1610743811;
    property Friction: Double dispid 1610743813;
    property Area: Double readonly dispid 1610743815;
    property Rows: SYSINT dispid 1610743816;
    property Cols: SYSINT dispid 1610743818;
    property Height1: Double dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRJointKneeBolts
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C9F8A-AE18-11D3-9972-0080C86BE4DF}
// *********************************************************************//
  IRJointKneeBolts = interface(IRJointBolts)
    ['{1C8C9F8A-AE18-11D3-9972-0080C86BE4DF}']
    procedure GhostMethod_IRJointKneeBolts_0_1; safecall;
    procedure GhostMethod_IRJointKneeBolts_4_2; safecall;
    procedure GhostMethod_IRJointKneeBolts_8_3; safecall;
    procedure GhostMethod_IRJointKneeBolts_12_4; safecall;
    procedure GhostMethod_IRJointKneeBolts_16_5; safecall;
    procedure GhostMethod_IRJointKneeBolts_20_6; safecall;
    procedure GhostMethod_IRJointKneeBolts_24_7; safecall;
    procedure GhostMethod_IRJointKneeBolts_28_8; safecall;
    procedure GhostMethod_IRJointKneeBolts_32_9; safecall;
    procedure GhostMethod_IRJointKneeBolts_36_10; safecall;
    procedure GhostMethod_IRJointKneeBolts_40_11; safecall;
    procedure GhostMethod_IRJointKneeBolts_44_12; safecall;
    procedure GhostMethod_IRJointKneeBolts_48_13; safecall;
    procedure GhostMethod_IRJointKneeBolts_52_14; safecall;
    procedure GhostMethod_IRJointKneeBolts_56_15; safecall;
    procedure GhostMethod_IRJointKneeBolts_60_16; safecall;
    procedure GhostMethod_IRJointKneeBolts_64_17; safecall;
    procedure GhostMethod_IRJointKneeBolts_68_18; safecall;
    procedure GhostMethod_IRJointKneeBolts_72_19; safecall;
    procedure GhostMethod_IRJointKneeBolts_76_20; safecall;
    procedure GhostMethod_IRJointKneeBolts_80_21; safecall;
    function Get_SpacingV: IRobotValuesArray; safecall;
    function Get_SpacingH: IRobotValuesArray; safecall;
    function Get_QuantityV: IRobotValuesArray; safecall;
    function Get_QuantityH: IRobotValuesArray; safecall;
    function Get_EqualSpac: Integer; safecall;
    procedure Set_EqualSpac(ret: Integer); safecall;
    function Get_Symmetry: Integer; safecall;
    procedure Set_Symmetry(ret: Integer); safecall;
    function Get_ShearPortion: IRJointBoltShearPortion; safecall;
    procedure Set_ShearPortion(ret: IRJointBoltShearPortion); safecall;
    property SpacingV: IRobotValuesArray read Get_SpacingV;
    property SpacingH: IRobotValuesArray read Get_SpacingH;
    property QuantityV: IRobotValuesArray read Get_QuantityV;
    property QuantityH: IRobotValuesArray read Get_QuantityH;
    property EqualSpac: Integer read Get_EqualSpac write Set_EqualSpac;
    property Symmetry: Integer read Get_Symmetry write Set_Symmetry;
    property ShearPortion: IRJointBoltShearPortion read Get_ShearPortion write Set_ShearPortion;
  end;

// *********************************************************************//
// DispIntf:  IRJointKneeBoltsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C9F8A-AE18-11D3-9972-0080C86BE4DF}
// *********************************************************************//
  IRJointKneeBoltsDisp = dispinterface
    ['{1C8C9F8A-AE18-11D3-9972-0080C86BE4DF}']
    procedure GhostMethod_IRJointKneeBolts_0_1; dispid 1610678272;
    procedure GhostMethod_IRJointKneeBolts_4_2; dispid 1610678273;
    procedure GhostMethod_IRJointKneeBolts_8_3; dispid 1610678274;
    procedure GhostMethod_IRJointKneeBolts_12_4; dispid 1610678275;
    procedure GhostMethod_IRJointKneeBolts_16_5; dispid 1610678276;
    procedure GhostMethod_IRJointKneeBolts_20_6; dispid 1610678277;
    procedure GhostMethod_IRJointKneeBolts_24_7; dispid 1610678278;
    procedure GhostMethod_IRJointKneeBolts_28_8; dispid 1610678279;
    procedure GhostMethod_IRJointKneeBolts_32_9; dispid 1610678280;
    procedure GhostMethod_IRJointKneeBolts_36_10; dispid 1610678281;
    procedure GhostMethod_IRJointKneeBolts_40_11; dispid 1610678282;
    procedure GhostMethod_IRJointKneeBolts_44_12; dispid 1610678283;
    procedure GhostMethod_IRJointKneeBolts_48_13; dispid 1610678284;
    procedure GhostMethod_IRJointKneeBolts_52_14; dispid 1610678285;
    procedure GhostMethod_IRJointKneeBolts_56_15; dispid 1610678286;
    procedure GhostMethod_IRJointKneeBolts_60_16; dispid 1610678287;
    procedure GhostMethod_IRJointKneeBolts_64_17; dispid 1610678288;
    procedure GhostMethod_IRJointKneeBolts_68_18; dispid 1610678289;
    procedure GhostMethod_IRJointKneeBolts_72_19; dispid 1610678290;
    procedure GhostMethod_IRJointKneeBolts_76_20; dispid 1610678291;
    procedure GhostMethod_IRJointKneeBolts_80_21; dispid 1610678292;
    property SpacingV: IRobotValuesArray readonly dispid 1610809344;
    property SpacingH: IRobotValuesArray readonly dispid 1610809345;
    property QuantityV: IRobotValuesArray readonly dispid 1610809346;
    property QuantityH: IRobotValuesArray readonly dispid 1610809347;
    property EqualSpac: Integer dispid 1610809348;
    property Symmetry: Integer dispid 1610809350;
    property ShearPortion: IRJointBoltShearPortion dispid 1610809352;
    property Diameter: Double readonly dispid 1610743808;
    property _className: WideString dispid 1610743809;
    property DiameterName: WideString dispid 1610743811;
    property Friction: Double dispid 1610743813;
    property Area: Double readonly dispid 1610743815;
    property Rows: SYSINT dispid 1610743816;
    property Cols: SYSINT dispid 1610743818;
    property Height1: Double dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRJointKneeBracket
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C9F8B-AE18-11D3-9972-0080C86BE4DF}
// *********************************************************************//
  IRJointKneeBracket = interface(IDispatch)
    ['{1C8C9F8B-AE18-11D3-9972-0080C86BE4DF}']
    function Get_ThickFlange: Double; safecall;
    procedure Set_ThickFlange(ret: Double); safecall;
    function Get_ThickWeb: Double; safecall;
    procedure Set_ThickWeb(ret: Double); safecall;
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_Width: Double; safecall;
    procedure Set_Width(ret: Double); safecall;
    function Get_Height: Double; safecall;
    procedure Set_Height(ret: Double); safecall;
    function Get_Angle: Double; safecall;
    procedure Set_Angle(ret: Double); safecall;
    function Get_Exist: Integer; safecall;
    procedure Set_Exist(ret: SYSINT); safecall;
    function Get_AngleExt(Unit_: IRJointAngleUnit): Double; safecall;
    procedure Set_AngleExt(Unit_: IRJointAngleUnit; ret: Double); safecall;
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    property ThickFlange: Double read Get_ThickFlange write Set_ThickFlange;
    property ThickWeb: Double read Get_ThickWeb write Set_ThickWeb;
    property Length: Double read Get_Length write Set_Length;
    property Width: Double read Get_Width write Set_Width;
    property Height: Double read Get_Height write Set_Height;
    property Angle: Double read Get_Angle write Set_Angle;
    property AngleExt[Unit_: IRJointAngleUnit]: Double read Get_AngleExt write Set_AngleExt;
    property Material: WideString read Get_Material write Set_Material;
  end;

// *********************************************************************//
// DispIntf:  IRJointKneeBracketDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C9F8B-AE18-11D3-9972-0080C86BE4DF}
// *********************************************************************//
  IRJointKneeBracketDisp = dispinterface
    ['{1C8C9F8B-AE18-11D3-9972-0080C86BE4DF}']
    property ThickFlange: Double dispid 1610743808;
    property ThickWeb: Double dispid 1610743810;
    property Length: Double dispid 1610743812;
    property Width: Double dispid 1610743814;
    property Height: Double dispid 1610743816;
    property Angle: Double dispid 1610743818;
    function Exist: Integer; dispid 1610743820;
    property AngleExt[Unit_: IRJointAngleUnit]: Double dispid 1610743822;
    property Material: WideString dispid 1610743824;
  end;

// *********************************************************************//
// Interface: IRJointKneeWebPlate
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C9F8E-AE18-11D3-9972-0080C86BE4DF}
// *********************************************************************//
  IRJointKneeWebPlate = interface(IDispatch)
    ['{1C8C9F8E-AE18-11D3-9972-0080C86BE4DF}']
    function Get_type_: IRJointWebType; safecall;
    procedure Set_type_(ret: IRJointWebType); safecall;
    function Get_WeldTran: IRJointWeld; safecall;
    function Get_WeldLong: IRJointWeld; safecall;
    function Get_Bolts: IRJointKneeBolts; safecall;
    function Get_Height: Double; safecall;
    procedure Set_Height(ret: Double); safecall;
    function Get_Width: Double; safecall;
    procedure Set_Width(ret: Double); safecall;
    function Get_Thick: Double; safecall;
    procedure Set_Thick(ret: Double); safecall;
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    property type_: IRJointWebType read Get_type_ write Set_type_;
    property WeldTran: IRJointWeld read Get_WeldTran;
    property WeldLong: IRJointWeld read Get_WeldLong;
    property Bolts: IRJointKneeBolts read Get_Bolts;
    property Height: Double read Get_Height write Set_Height;
    property Width: Double read Get_Width write Set_Width;
    property Thick: Double read Get_Thick write Set_Thick;
    property Material: WideString read Get_Material write Set_Material;
  end;

// *********************************************************************//
// DispIntf:  IRJointKneeWebPlateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C9F8E-AE18-11D3-9972-0080C86BE4DF}
// *********************************************************************//
  IRJointKneeWebPlateDisp = dispinterface
    ['{1C8C9F8E-AE18-11D3-9972-0080C86BE4DF}']
    property type_: IRJointWebType dispid 1610743808;
    property WeldTran: IRJointWeld readonly dispid 1610743810;
    property WeldLong: IRJointWeld readonly dispid 1610743811;
    property Bolts: IRJointKneeBolts readonly dispid 1610743812;
    property Height: Double dispid 1610743813;
    property Width: Double dispid 1610743815;
    property Thick: Double dispid 1610743817;
    property Material: WideString dispid 1610743819;
  end;

// *********************************************************************//
// Interface: IRJointKneeCodeParamsPN90
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56137A12-747A-4ED5-90FE-558927218BC7}
// *********************************************************************//
  IRJointKneeCodeParamsPN90 = interface(IDispatch)
    ['{56137A12-747A-4ED5-90FE-558927218BC7}']
    function Get_Category: WideString; safecall;
    procedure Set_Category(const ret: WideString); safecall;
    function Get_MultiVarLoad: Integer; safecall;
    procedure Set_MultiVarLoad(ret: Integer); safecall;
    function Get_FrictionCoeff: Double; safecall;
    procedure Set_FrictionCoeff(ret: Double); safecall;
    function Get_ConditionalFactor: Double; safecall;
    procedure Set_ConditionalFactor(ret: Double); safecall;
    function Get_AutoCalc: Integer; safecall;
    procedure Set_AutoCalc(ret: Integer); safecall;
    function Get_Bending_wt1: Double; safecall;
    procedure Set_Bending_wt1(ret: Double); safecall;
    function Get_Bending_wt2: Double; safecall;
    procedure Set_Bending_wt2(ret: Double); safecall;
    function Get_Bending_wt3: Double; safecall;
    procedure Set_Bending_wt3(ret: Double); safecall;
    function Get_Bending_wt4: Double; safecall;
    procedure Set_Bending_wt4(ret: Double); safecall;
    function Get_Bending_wr1: Double; safecall;
    procedure Set_Bending_wr1(ret: Double); safecall;
    function Get_Bending_wr2: Double; safecall;
    procedure Set_Bending_wr2(ret: Double); safecall;
    function Get_Bending_wr3: Double; safecall;
    procedure Set_Bending_wr3(ret: Double); safecall;
    function Get_Bending_wr4: Double; safecall;
    procedure Set_Bending_wr4(ret: Double); safecall;
    function Get_Tension_wt1: Double; safecall;
    procedure Set_Tension_wt1(ret: Double); safecall;
    function Get_Tension_wt2: Double; safecall;
    procedure Set_Tension_wt2(ret: Double); safecall;
    function Get_Tension_wt3: Double; safecall;
    procedure Set_Tension_wt3(ret: Double); safecall;
    function Get_Tension_wr1: Double; safecall;
    procedure Set_Tension_wr1(ret: Double); safecall;
    function Get_Tension_wr2: Double; safecall;
    procedure Set_Tension_wr2(ret: Double); safecall;
    function Get_Tension_wr3: Double; safecall;
    procedure Set_Tension_wr3(ret: Double); safecall;
    property Category: WideString read Get_Category write Set_Category;
    property MultiVarLoad: Integer read Get_MultiVarLoad write Set_MultiVarLoad;
    property FrictionCoeff: Double read Get_FrictionCoeff write Set_FrictionCoeff;
    property ConditionalFactor: Double read Get_ConditionalFactor write Set_ConditionalFactor;
    property AutoCalc: Integer read Get_AutoCalc write Set_AutoCalc;
    property Bending_wt1: Double read Get_Bending_wt1 write Set_Bending_wt1;
    property Bending_wt2: Double read Get_Bending_wt2 write Set_Bending_wt2;
    property Bending_wt3: Double read Get_Bending_wt3 write Set_Bending_wt3;
    property Bending_wt4: Double read Get_Bending_wt4 write Set_Bending_wt4;
    property Bending_wr1: Double read Get_Bending_wr1 write Set_Bending_wr1;
    property Bending_wr2: Double read Get_Bending_wr2 write Set_Bending_wr2;
    property Bending_wr3: Double read Get_Bending_wr3 write Set_Bending_wr3;
    property Bending_wr4: Double read Get_Bending_wr4 write Set_Bending_wr4;
    property Tension_wt1: Double read Get_Tension_wt1 write Set_Tension_wt1;
    property Tension_wt2: Double read Get_Tension_wt2 write Set_Tension_wt2;
    property Tension_wt3: Double read Get_Tension_wt3 write Set_Tension_wt3;
    property Tension_wr1: Double read Get_Tension_wr1 write Set_Tension_wr1;
    property Tension_wr2: Double read Get_Tension_wr2 write Set_Tension_wr2;
    property Tension_wr3: Double read Get_Tension_wr3 write Set_Tension_wr3;
  end;

// *********************************************************************//
// DispIntf:  IRJointKneeCodeParamsPN90Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56137A12-747A-4ED5-90FE-558927218BC7}
// *********************************************************************//
  IRJointKneeCodeParamsPN90Disp = dispinterface
    ['{56137A12-747A-4ED5-90FE-558927218BC7}']
    property Category: WideString dispid 1610743808;
    property MultiVarLoad: Integer dispid 1610743810;
    property FrictionCoeff: Double dispid 1610743812;
    property ConditionalFactor: Double dispid 1610743814;
    property AutoCalc: Integer dispid 1610743816;
    property Bending_wt1: Double dispid 1610743818;
    property Bending_wt2: Double dispid 1610743820;
    property Bending_wt3: Double dispid 1610743822;
    property Bending_wt4: Double dispid 1610743824;
    property Bending_wr1: Double dispid 1610743826;
    property Bending_wr2: Double dispid 1610743828;
    property Bending_wr3: Double dispid 1610743830;
    property Bending_wr4: Double dispid 1610743832;
    property Tension_wt1: Double dispid 1610743834;
    property Tension_wt2: Double dispid 1610743836;
    property Tension_wt3: Double dispid 1610743838;
    property Tension_wr1: Double dispid 1610743840;
    property Tension_wr2: Double dispid 1610743842;
    property Tension_wr3: Double dispid 1610743844;
  end;

// *********************************************************************//
// Interface: IRJointKneeCodeParamsCM66
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {26CC4EB9-171F-445C-8F5A-22AFC45707ED}
// *********************************************************************//
  IRJointKneeCodeParamsCM66 = interface(IDispatch)
    ['{26CC4EB9-171F-445C-8F5A-22AFC45707ED}']
    function Get_BoltsCalculate: IRJointBoltsCalculateType; safecall;
    procedure Set_BoltsCalculate(ret: IRJointBoltsCalculateType); safecall;
    function Get_ColumnWebCalculate: IRJointColumnWebCalculateType; safecall;
    procedure Set_ColumnWebCalculate(ret: IRJointColumnWebCalculateType); safecall;
    function Get_FrictionCoeff: Double; safecall;
    procedure Set_FrictionCoeff(ret: Double); safecall;
    property BoltsCalculate: IRJointBoltsCalculateType read Get_BoltsCalculate write Set_BoltsCalculate;
    property ColumnWebCalculate: IRJointColumnWebCalculateType read Get_ColumnWebCalculate write Set_ColumnWebCalculate;
    property FrictionCoeff: Double read Get_FrictionCoeff write Set_FrictionCoeff;
  end;

// *********************************************************************//
// DispIntf:  IRJointKneeCodeParamsCM66Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {26CC4EB9-171F-445C-8F5A-22AFC45707ED}
// *********************************************************************//
  IRJointKneeCodeParamsCM66Disp = dispinterface
    ['{26CC4EB9-171F-445C-8F5A-22AFC45707ED}']
    property BoltsCalculate: IRJointBoltsCalculateType dispid 1610743808;
    property ColumnWebCalculate: IRJointColumnWebCalculateType dispid 1610743810;
    property FrictionCoeff: Double dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRJointKneeCodeParamsEC32
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE229E65-7901-4229-A436-C9DED15F859C}
// *********************************************************************//
  IRJointKneeCodeParamsEC32 = interface(IDispatch)
    ['{EE229E65-7901-4229-A436-C9DED15F859C}']
    function Get_CategoryToShear: WideString; safecall;
    procedure Set_CategoryToShear(const ret: WideString); safecall;
    function Get_CoeffMi: Double; safecall;
    procedure Set_CoeffMi(ret: Double); safecall;
    function Get_CoeffKsi: Double; safecall;
    procedure Set_CoeffKsi(ret: Double); safecall;
    function Get_GloblalAnalysisType: IRJointGlobalAnalysisType; safecall;
    procedure Set_GloblalAnalysisType(ret: IRJointGlobalAnalysisType); safecall;
    function Get_FrameType: IRJointFrameType; safecall;
    procedure Set_FrameType(ret: IRJointFrameType); safecall;
    function Get_CoeffGammaM0: Double; safecall;
    procedure Set_CoeffGammaM0(ret: Double); safecall;
    function Get_CoeffGammaM1: Double; safecall;
    procedure Set_CoeffGammaM1(ret: Double); safecall;
    function Get_CoeffGammaM2: Double; safecall;
    procedure Set_CoeffGammaM2(ret: Double); safecall;
    function Get_CoeffGammaM3: Double; safecall;
    procedure Set_CoeffGammaM3(ret: Double); safecall;
    function Get_RealBeamLength: Double; safecall;
    procedure Set_RealBeamLength(ret: Double); safecall;
    function Get_BeamLengthForCalc: Double; safecall;
    procedure Set_BeamLengthForCalc(ret: Double); safecall;
    property CategoryToShear: WideString read Get_CategoryToShear write Set_CategoryToShear;
    property CoeffMi: Double read Get_CoeffMi write Set_CoeffMi;
    property CoeffKsi: Double read Get_CoeffKsi write Set_CoeffKsi;
    property GloblalAnalysisType: IRJointGlobalAnalysisType read Get_GloblalAnalysisType write Set_GloblalAnalysisType;
    property FrameType: IRJointFrameType read Get_FrameType write Set_FrameType;
    property CoeffGammaM0: Double read Get_CoeffGammaM0 write Set_CoeffGammaM0;
    property CoeffGammaM1: Double read Get_CoeffGammaM1 write Set_CoeffGammaM1;
    property CoeffGammaM2: Double read Get_CoeffGammaM2 write Set_CoeffGammaM2;
    property CoeffGammaM3: Double read Get_CoeffGammaM3 write Set_CoeffGammaM3;
    property RealBeamLength: Double read Get_RealBeamLength write Set_RealBeamLength;
    property BeamLengthForCalc: Double read Get_BeamLengthForCalc write Set_BeamLengthForCalc;
  end;

// *********************************************************************//
// DispIntf:  IRJointKneeCodeParamsEC32Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE229E65-7901-4229-A436-C9DED15F859C}
// *********************************************************************//
  IRJointKneeCodeParamsEC32Disp = dispinterface
    ['{EE229E65-7901-4229-A436-C9DED15F859C}']
    property CategoryToShear: WideString dispid 1610743808;
    property CoeffMi: Double dispid 1610743810;
    property CoeffKsi: Double dispid 1610743812;
    property GloblalAnalysisType: IRJointGlobalAnalysisType dispid 1610743814;
    property FrameType: IRJointFrameType dispid 1610743816;
    property CoeffGammaM0: Double dispid 1610743818;
    property CoeffGammaM1: Double dispid 1610743820;
    property CoeffGammaM2: Double dispid 1610743822;
    property CoeffGammaM3: Double dispid 1610743824;
    property RealBeamLength: Double dispid 1610743826;
    property BeamLengthForCalc: Double dispid 1610743828;
  end;

// *********************************************************************//
// Interface: IRJointKnee
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C9F90-AE18-11D3-9972-0080C86BE4DF}
// *********************************************************************//
  IRJointKnee = interface(IRJointConnection)
    ['{1C8C9F90-AE18-11D3-9972-0080C86BE4DF}']
    function Get_KneeType: IRJointKneeType; safecall;
    procedure Set_KneeType(ret: IRJointKneeType); safecall;
    function Get_StiffTypeUp: IRJointKneeReinfType; safecall;
    function Get_StiffTypeLow: IRJointKneeReinfType; safecall;
    function Get_Bolts: IRJointKneeBolts; safecall;
    function Get_Plate: IRJointPlate; safecall;
    function Get_PlatePositionLow: Double; safecall;
    procedure Set_PlatePositionLow(ret: Double); safecall;
    function Get_BracketUp: IRJointKneeBracket; safecall;
    function Get_BracketLow: IRJointKneeBracket; safecall;
    function Get_TensionPlateUp: IRJointPlate; safecall;
    function Get_TensionPlateLow: IRJointPlate; safecall;
    function Get_StiffUp: IRJointKneeStiffColumn; safecall;
    function Get_StiffLow: IRJointKneeStiffColumn; safecall;
    function Get_VStiffUp: IRJointPlate; safecall;
    function Get_VStiffLow: IRJointPlate; safecall;
    function Get_WeldWeb: IRJointWeld; safecall;
    function Get_WeldFlange: IRJointWeld; safecall;
    function Get_WeldStiff: IRJointWeld; safecall;
    function Get_WebStiffType: IRJointKneeWebStiffType; safecall;
    function Get_StiffDiag: IRJointKneeDiagonalStiff; safecall;
    function Get_WebPlate: IRJointKneeWebPlate; safecall;
    function Get_FixType: IRJointKneeFixType; safecall;
    procedure Set_FixType(ret: IRJointKneeFixType); safecall;
    function Get_MaterPlates: IRobotMaterialData; safecall;
    function Get_Column: IRJointProfile; safecall;
    function Get_Beam: IRJointProfile; safecall;
    function Get_CodeParamsPN90: IRJointKneeCodeParamsPN90; safecall;
    function Get_CodeParamsCM66: IRJointKneeCodeParamsCM66; safecall;
    function Get_CodeParamsEC32: IRJointKneeCodeParamsEC32; safecall;
    procedure Set_StiffTypeUp(ret: IRJointKneeReinfType); safecall;
    procedure Set_StiffTypeLow(ret: IRJointKneeReinfType); safecall;
    function Get_PlatePosition: Double; safecall;
    procedure Set_PlatePosition(ret: Double); safecall;
    function Get_FlanPlatePosUpper: Double; safecall;
    procedure Set_FlanPlatePosUpper(ret: Double); safecall;
    function Get_FlanPlatePosLower: Double; safecall;
    procedure Set_FlanPlatePosLower(ret: Double); safecall;
    function Get_FlanPlateUpper: IRJointPlate; safecall;
    function Get_FlanPlateLower: IRJointPlate; safecall;
    function Get_WebColumnStiffenerHUpper: IRJointPlate; safecall;
    function Get_WebColumnStiffenerHLower: IRJointPlate; safecall;
    function Get_WebBeamStiffenerVUpper: IRJointPlate; safecall;
    function Get_WebBeamStiffenerVLower: IRJointPlate; safecall;
    function Get_DefComponentMaterial: WideString; safecall;
    procedure Set_DefComponentMaterial(const ret: WideString); safecall;
    function Get_IsDefComponentMaterialSet: Integer; safecall;
    procedure Set_IsDefComponentMaterialSet(ret: Integer); safecall;
    function Get_BoltsDimensionNamesVector: IRobotNamesArray; safecall;
    function Get_BoltsClassVector: IRobotNamesArray; safecall;
    function Get_BoltsDimensionsVector: IRobotValuesArray; safecall;
    procedure Set_WebStiffType(ret: IRJointKneeWebStiffType); safecall;
    procedure Set_IsBolted(ret: Integer); safecall;
    function Get_IsBolted: Integer; safecall;
    function Get_WeldBracketUpFlange: IRJointWeld; safecall;
    function Get_WeldBracketDownFlange: IRJointWeld; safecall;
    function Get_Material(par: IRJointKneeMaterials): WideString; safecall;
    procedure Set_Material(par: IRJointKneeMaterials; const ret: WideString); safecall;
    property KneeType: IRJointKneeType read Get_KneeType write Set_KneeType;
    property StiffTypeUp: IRJointKneeReinfType read Get_StiffTypeUp write Set_StiffTypeUp;
    property StiffTypeLow: IRJointKneeReinfType read Get_StiffTypeLow write Set_StiffTypeLow;
    property Bolts: IRJointKneeBolts read Get_Bolts;
    property Plate: IRJointPlate read Get_Plate;
    property PlatePositionLow: Double read Get_PlatePositionLow write Set_PlatePositionLow;
    property BracketUp: IRJointKneeBracket read Get_BracketUp;
    property BracketLow: IRJointKneeBracket read Get_BracketLow;
    property TensionPlateUp: IRJointPlate read Get_TensionPlateUp;
    property TensionPlateLow: IRJointPlate read Get_TensionPlateLow;
    property StiffUp: IRJointKneeStiffColumn read Get_StiffUp;
    property StiffLow: IRJointKneeStiffColumn read Get_StiffLow;
    property VStiffUp: IRJointPlate read Get_VStiffUp;
    property VStiffLow: IRJointPlate read Get_VStiffLow;
    property WeldWeb: IRJointWeld read Get_WeldWeb;
    property WeldFlange: IRJointWeld read Get_WeldFlange;
    property WeldStiff: IRJointWeld read Get_WeldStiff;
    property WebStiffType: IRJointKneeWebStiffType read Get_WebStiffType write Set_WebStiffType;
    property StiffDiag: IRJointKneeDiagonalStiff read Get_StiffDiag;
    property WebPlate: IRJointKneeWebPlate read Get_WebPlate;
    property FixType: IRJointKneeFixType read Get_FixType write Set_FixType;
    property MaterPlates: IRobotMaterialData read Get_MaterPlates;
    property Column: IRJointProfile read Get_Column;
    property Beam: IRJointProfile read Get_Beam;
    property CodeParamsPN90: IRJointKneeCodeParamsPN90 read Get_CodeParamsPN90;
    property CodeParamsCM66: IRJointKneeCodeParamsCM66 read Get_CodeParamsCM66;
    property CodeParamsEC32: IRJointKneeCodeParamsEC32 read Get_CodeParamsEC32;
    property PlatePosition: Double read Get_PlatePosition write Set_PlatePosition;
    property FlanPlatePosUpper: Double read Get_FlanPlatePosUpper write Set_FlanPlatePosUpper;
    property FlanPlatePosLower: Double read Get_FlanPlatePosLower write Set_FlanPlatePosLower;
    property FlanPlateUpper: IRJointPlate read Get_FlanPlateUpper;
    property FlanPlateLower: IRJointPlate read Get_FlanPlateLower;
    property WebColumnStiffenerHUpper: IRJointPlate read Get_WebColumnStiffenerHUpper;
    property WebColumnStiffenerHLower: IRJointPlate read Get_WebColumnStiffenerHLower;
    property WebBeamStiffenerVUpper: IRJointPlate read Get_WebBeamStiffenerVUpper;
    property WebBeamStiffenerVLower: IRJointPlate read Get_WebBeamStiffenerVLower;
    property DefComponentMaterial: WideString read Get_DefComponentMaterial write Set_DefComponentMaterial;
    property IsDefComponentMaterialSet: Integer read Get_IsDefComponentMaterialSet write Set_IsDefComponentMaterialSet;
    property BoltsDimensionNamesVector: IRobotNamesArray read Get_BoltsDimensionNamesVector;
    property BoltsClassVector: IRobotNamesArray read Get_BoltsClassVector;
    property BoltsDimensionsVector: IRobotValuesArray read Get_BoltsDimensionsVector;
    property IsBolted: Integer read Get_IsBolted write Set_IsBolted;
    property WeldBracketUpFlange: IRJointWeld read Get_WeldBracketUpFlange;
    property WeldBracketDownFlange: IRJointWeld read Get_WeldBracketDownFlange;
    property Material[par: IRJointKneeMaterials]: WideString read Get_Material write Set_Material;
  end;

// *********************************************************************//
// DispIntf:  IRJointKneeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1C8C9F90-AE18-11D3-9972-0080C86BE4DF}
// *********************************************************************//
  IRJointKneeDisp = dispinterface
    ['{1C8C9F90-AE18-11D3-9972-0080C86BE4DF}']
    property KneeType: IRJointKneeType dispid 1610809344;
    property StiffTypeUp: IRJointKneeReinfType dispid 1610809346;
    property StiffTypeLow: IRJointKneeReinfType dispid 1610809347;
    property Bolts: IRJointKneeBolts readonly dispid 1610809348;
    property Plate: IRJointPlate readonly dispid 1610809349;
    property PlatePositionLow: Double dispid 1610809350;
    property BracketUp: IRJointKneeBracket readonly dispid 1610809352;
    property BracketLow: IRJointKneeBracket readonly dispid 1610809353;
    property TensionPlateUp: IRJointPlate readonly dispid 1610809354;
    property TensionPlateLow: IRJointPlate readonly dispid 1610809355;
    property StiffUp: IRJointKneeStiffColumn readonly dispid 1610809356;
    property StiffLow: IRJointKneeStiffColumn readonly dispid 1610809357;
    property VStiffUp: IRJointPlate readonly dispid 1610809358;
    property VStiffLow: IRJointPlate readonly dispid 1610809359;
    property WeldWeb: IRJointWeld readonly dispid 1610809360;
    property WeldFlange: IRJointWeld readonly dispid 1610809361;
    property WeldStiff: IRJointWeld readonly dispid 1610809362;
    property WebStiffType: IRJointKneeWebStiffType dispid 1610809363;
    property StiffDiag: IRJointKneeDiagonalStiff readonly dispid 1610809364;
    property WebPlate: IRJointKneeWebPlate readonly dispid 1610809365;
    property FixType: IRJointKneeFixType dispid 1610809366;
    property MaterPlates: IRobotMaterialData readonly dispid 1610809368;
    property Column: IRJointProfile readonly dispid 1610809369;
    property Beam: IRJointProfile readonly dispid 1610809370;
    property CodeParamsPN90: IRJointKneeCodeParamsPN90 readonly dispid 1610809371;
    property CodeParamsCM66: IRJointKneeCodeParamsCM66 readonly dispid 1610809372;
    property CodeParamsEC32: IRJointKneeCodeParamsEC32 readonly dispid 1610809373;
    property PlatePosition: Double dispid 1610809376;
    property FlanPlatePosUpper: Double dispid 1610809378;
    property FlanPlatePosLower: Double dispid 1610809380;
    property FlanPlateUpper: IRJointPlate readonly dispid 1610809382;
    property FlanPlateLower: IRJointPlate readonly dispid 1610809383;
    property WebColumnStiffenerHUpper: IRJointPlate readonly dispid 1610809384;
    property WebColumnStiffenerHLower: IRJointPlate readonly dispid 1610809385;
    property WebBeamStiffenerVUpper: IRJointPlate readonly dispid 1610809386;
    property WebBeamStiffenerVLower: IRJointPlate readonly dispid 1610809387;
    property DefComponentMaterial: WideString dispid 1610809388;
    property IsDefComponentMaterialSet: Integer dispid 1610809390;
    property BoltsDimensionNamesVector: IRobotNamesArray readonly dispid 1610809392;
    property BoltsClassVector: IRobotNamesArray readonly dispid 1610809393;
    property BoltsDimensionsVector: IRobotValuesArray readonly dispid 1610809394;
    property IsBolted: Integer dispid 1610809396;
    property WeldBracketUpFlange: IRJointWeld readonly dispid 1610809398;
    property WeldBracketDownFlange: IRJointWeld readonly dispid 1610809399;
    property Material[par: IRJointKneeMaterials]: WideString dispid 1610809400;
    property WFRelPos: IRJointWebFlangeRelativePos dispid 1610743808;
    property type_: IRJointConnectionType readonly dispid 1610743810;
    procedure SetToRobot(const info: IRJointConnectionInfo); dispid 1610743811;
    procedure GetFromRobot(const info: IRJointConnectionInfo); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRJointKneeStiffColumn
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F2ADCA1-C1F0-11D3-B7B2-0050DA76755E}
// *********************************************************************//
  IRJointKneeStiffColumn = interface(IDispatch)
    ['{0F2ADCA1-C1F0-11D3-B7B2-0050DA76755E}']
    function Get_Thick: Double; safecall;
    procedure Set_Thick(ret: Double); safecall;
    property Thick: Double read Get_Thick write Set_Thick;
  end;

// *********************************************************************//
// DispIntf:  IRJointKneeStiffColumnDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F2ADCA1-C1F0-11D3-B7B2-0050DA76755E}
// *********************************************************************//
  IRJointKneeStiffColumnDisp = dispinterface
    ['{0F2ADCA1-C1F0-11D3-B7B2-0050DA76755E}']
    property Thick: Double dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRJointProfile
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F2ADCA0-C1F0-11D3-B7B2-0050DA76755E}
// *********************************************************************//
  IRJointProfile = interface(IDispatch)
    ['{0F2ADCA0-C1F0-11D3-B7B2-0050DA76755E}']
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    function Get_Section: WideString; safecall;
    procedure Set_Section(const ret: WideString); safecall;
    function Get_Angle: Double; safecall;
    procedure Set_Angle(ret: Double); safecall;
    function Get_BarNumber: Integer; safecall;
    procedure Set_BarNumber(ret: Integer); safecall;
    procedure Edit(ctype: IRJointConnectionType); safecall;
    function Get_AngleExt(Unit_: IRJointAngleUnit): Double; safecall;
    procedure Set_AngleExt(Unit_: IRJointAngleUnit; ret: Double); safecall;
    procedure EditComponent(ctype: IRJointComponentType); safecall;
    property Material: WideString read Get_Material write Set_Material;
    property Section: WideString read Get_Section write Set_Section;
    property Angle: Double read Get_Angle write Set_Angle;
    property BarNumber: Integer read Get_BarNumber write Set_BarNumber;
    property AngleExt[Unit_: IRJointAngleUnit]: Double read Get_AngleExt write Set_AngleExt;
  end;

// *********************************************************************//
// DispIntf:  IRJointProfileDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F2ADCA0-C1F0-11D3-B7B2-0050DA76755E}
// *********************************************************************//
  IRJointProfileDisp = dispinterface
    ['{0F2ADCA0-C1F0-11D3-B7B2-0050DA76755E}']
    property Material: WideString dispid 1610743808;
    property Section: WideString dispid 1610743810;
    property Angle: Double dispid 1610743812;
    property BarNumber: Integer dispid 1610743814;
    procedure Edit(ctype: IRJointConnectionType); dispid 1610743816;
    property AngleExt[Unit_: IRJointAngleUnit]: Double dispid 1610743817;
    procedure EditComponent(ctype: IRJointComponentType); dispid 1610743819;
  end;

// *********************************************************************//
// Interface: IRJointKneeLoad
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306745-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRJointKneeLoad = interface(IRJointLoad)
    ['{3E306745-C804-11D3-B7B9-0050DA76755E}']
    function Get_M: Double; safecall;
    procedure Set_M(ret: Double); safecall;
    function Get_N: Double; safecall;
    procedure Set_N(ret: Double); safecall;
    function Get_Q: Double; safecall;
    procedure Set_Q(ret: Double); safecall;
    property M: Double read Get_M write Set_M;
    property N: Double read Get_N write Set_N;
    property Q: Double read Get_Q write Set_Q;
  end;

// *********************************************************************//
// DispIntf:  IRJointKneeLoadDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E306745-C804-11D3-B7B9-0050DA76755E}
// *********************************************************************//
  IRJointKneeLoadDisp = dispinterface
    ['{3E306745-C804-11D3-B7B9-0050DA76755E}']
    property M: Double dispid 1610809344;
    property N: Double dispid 1610809346;
    property Q: Double dispid 1610809348;
    property Cases: IRobotSelection readonly dispid 1610743808;
    property type_: IRJointLoadType dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRJointAnchorBolt
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64A3D922-144A-11D4-B7F8-0050DA76755E}
// *********************************************************************//
  IRJointAnchorBolt = interface(IDispatch)
    ['{64A3D922-144A-11D4-B7F8-0050DA76755E}']
    function Get_Length1: Double; safecall;
    procedure Set_Length1(ret: Double); safecall;
    function Get_Length2: Double; safecall;
    procedure Set_Length2(ret: Double); safecall;
    function Get_Length3: Double; safecall;
    procedure Set_Length3(ret: Double); safecall;
    function Get_Length4: Double; safecall;
    procedure Set_Length4(ret: Double); safecall;
    property Length1: Double read Get_Length1 write Set_Length1;
    property Length2: Double read Get_Length2 write Set_Length2;
    property Length3: Double read Get_Length3 write Set_Length3;
    property Length4: Double read Get_Length4 write Set_Length4;
  end;

// *********************************************************************//
// DispIntf:  IRJointAnchorBoltDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64A3D922-144A-11D4-B7F8-0050DA76755E}
// *********************************************************************//
  IRJointAnchorBoltDisp = dispinterface
    ['{64A3D922-144A-11D4-B7F8-0050DA76755E}']
    property Length1: Double dispid 1610743808;
    property Length2: Double dispid 1610743810;
    property Length3: Double dispid 1610743812;
    property Length4: Double dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRJointAnchorPlate
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64A3D924-144A-11D4-B7F8-0050DA76755E}
// *********************************************************************//
  IRJointAnchorPlate = interface(IRJointPlate)
    ['{64A3D924-144A-11D4-B7F8-0050DA76755E}']
    function Get_type_: IRJointAnchorPlateType; safecall;
    procedure Set_type_(ret: IRJointAnchorPlateType); safecall;
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    property type_: IRJointAnchorPlateType read Get_type_ write Set_type_;
    property Material: WideString read Get_Material write Set_Material;
  end;

// *********************************************************************//
// DispIntf:  IRJointAnchorPlateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64A3D924-144A-11D4-B7F8-0050DA76755E}
// *********************************************************************//
  IRJointAnchorPlateDisp = dispinterface
    ['{64A3D924-144A-11D4-B7F8-0050DA76755E}']
    property type_: IRJointAnchorPlateType dispid 1610809344;
    property Material: WideString dispid 1610809346;
    property Length: Double dispid 1610743808;
    property Width: Double dispid 1610743810;
    property Thick: Double dispid 1610743812;
    property Exist: Integer dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRJointAnchor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64A3D926-144A-11D4-B7F8-0050DA76755E}
// *********************************************************************//
  IRJointAnchor = interface(IDispatch)
    ['{64A3D926-144A-11D4-B7F8-0050DA76755E}']
    function Get_type_: IRJointAnchorType; safecall;
    procedure Set_type_(ret: IRJointAnchorType); safecall;
    function Get_AnchorPlate: IRJointAnchorPlate; safecall;
    function Get_Tige: IRJointAnchorBolt; safecall;
    function Get_Bolts: IRJointFootBolts; safecall;
    property type_: IRJointAnchorType read Get_type_ write Set_type_;
    property AnchorPlate: IRJointAnchorPlate read Get_AnchorPlate;
    property Tige: IRJointAnchorBolt read Get_Tige;
    property Bolts: IRJointFootBolts read Get_Bolts;
  end;

// *********************************************************************//
// DispIntf:  IRJointAnchorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64A3D926-144A-11D4-B7F8-0050DA76755E}
// *********************************************************************//
  IRJointAnchorDisp = dispinterface
    ['{64A3D926-144A-11D4-B7F8-0050DA76755E}']
    property type_: IRJointAnchorType dispid 1610743808;
    property AnchorPlate: IRJointAnchorPlate readonly dispid 1610743810;
    property Tige: IRJointAnchorBolt readonly dispid 1610743811;
    property Bolts: IRJointFootBolts readonly dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRJointFootBolts
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64A3D928-144A-11D4-B7F8-0050DA76755E}
// *********************************************************************//
  IRJointFootBolts = interface(IDispatch)
    ['{64A3D928-144A-11D4-B7F8-0050DA76755E}']
    function Get_SpacingH: Double; safecall;
    procedure Set_SpacingH(ret: Double); safecall;
    function Get_SpacingV: Double; safecall;
    procedure Set_SpacingV(ret: Double); safecall;
    function Get_Diameter: Integer; safecall;
    function Get__className: WideString; safecall;
    procedure Set__className(const ret: WideString); safecall;
    function Get_DiameterName: WideString; safecall;
    procedure Set_DiameterName(const ret: WideString); safecall;
    function Get_Friction: Double; safecall;
    procedure Set_Friction(ret: Double); safecall;
    function Get_Area: Double; safecall;
    function Get_Rows: Integer; safecall;
    procedure Set_Rows(ret: Integer); safecall;
    function Get_Distance: Double; safecall;
    procedure Set_Distance(ret: Double); safecall;
    function Get_MaterialName: WideString; safecall;
    procedure Set_MaterialName(const ret: WideString); safecall;
    function Get_Arrangement: IRJointFootBoltsArrangement; safecall;
    procedure Set_Arrangement(ret: IRJointFootBoltsArrangement); safecall;
    function Get_Cols: Integer; safecall;
    procedure Set_Cols(ret: Integer); safecall;
    function Get_VecSpacingH: IRobotValuesArray; safecall;
    function Get_VecSpacingV: IRobotValuesArray; safecall;
    function Get_EqualSpacingH: WordBool; safecall;
    procedure Set_EqualSpacingH(ret: WordBool); safecall;
    function Get_EqualSpacingV: WordBool; safecall;
    procedure Set_EqualSpacingV(ret: WordBool); safecall;
    function Get_ShearPortion: IRJointBoltShearPortion; safecall;
    procedure Set_ShearPortion(ret: IRJointBoltShearPortion); safecall;
    property SpacingH: Double read Get_SpacingH write Set_SpacingH;
    property SpacingV: Double read Get_SpacingV write Set_SpacingV;
    property Diameter: Integer read Get_Diameter;
    property _className: WideString read Get__className write Set__className;
    property DiameterName: WideString read Get_DiameterName write Set_DiameterName;
    property Friction: Double read Get_Friction write Set_Friction;
    property Area: Double read Get_Area;
    property Rows: Integer read Get_Rows write Set_Rows;
    property Distance: Double read Get_Distance write Set_Distance;
    property MaterialName: WideString read Get_MaterialName write Set_MaterialName;
    property Arrangement: IRJointFootBoltsArrangement read Get_Arrangement write Set_Arrangement;
    property Cols: Integer read Get_Cols write Set_Cols;
    property VecSpacingH: IRobotValuesArray read Get_VecSpacingH;
    property VecSpacingV: IRobotValuesArray read Get_VecSpacingV;
    property EqualSpacingH: WordBool read Get_EqualSpacingH write Set_EqualSpacingH;
    property EqualSpacingV: WordBool read Get_EqualSpacingV write Set_EqualSpacingV;
    property ShearPortion: IRJointBoltShearPortion read Get_ShearPortion write Set_ShearPortion;
  end;

// *********************************************************************//
// DispIntf:  IRJointFootBoltsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64A3D928-144A-11D4-B7F8-0050DA76755E}
// *********************************************************************//
  IRJointFootBoltsDisp = dispinterface
    ['{64A3D928-144A-11D4-B7F8-0050DA76755E}']
    property SpacingH: Double dispid 1610743808;
    property SpacingV: Double dispid 1610743810;
    property Diameter: Integer readonly dispid 1610743812;
    property _className: WideString dispid 1610743813;
    property DiameterName: WideString dispid 1610743815;
    property Friction: Double dispid 1610743817;
    property Area: Double readonly dispid 1610743819;
    property Rows: Integer dispid 1610743820;
    property Distance: Double dispid 1610743822;
    property MaterialName: WideString dispid 1610743824;
    property Arrangement: IRJointFootBoltsArrangement dispid 1610743826;
    property Cols: Integer dispid 1610743828;
    property VecSpacingH: IRobotValuesArray readonly dispid 1610743830;
    property VecSpacingV: IRobotValuesArray readonly dispid 1610743831;
    property EqualSpacingH: WordBool dispid 1610743832;
    property EqualSpacingV: WordBool dispid 1610743834;
    property ShearPortion: IRJointBoltShearPortion dispid 1610743836;
  end;

// *********************************************************************//
// Interface: IRJointFootPlate
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64A3D92A-144A-11D4-B7F8-0050DA76755E}
// *********************************************************************//
  IRJointFootPlate = interface(IRJointPlate)
    ['{64A3D92A-144A-11D4-B7F8-0050DA76755E}']
    function Get_type_: IRJointFootPlateType; safecall;
    procedure Set_type_(ret: IRJointFootPlateType); safecall;
    function Get_Diameter: Double; safecall;
    procedure Set_Diameter(ret: Double); safecall;
    function Get_CenterAnchor: Integer; safecall;
    procedure Set_CenterAnchor(ret: Integer); safecall;
    property type_: IRJointFootPlateType read Get_type_ write Set_type_;
    property Diameter: Double read Get_Diameter write Set_Diameter;
    property CenterAnchor: Integer read Get_CenterAnchor write Set_CenterAnchor;
  end;

// *********************************************************************//
// DispIntf:  IRJointFootPlateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64A3D92A-144A-11D4-B7F8-0050DA76755E}
// *********************************************************************//
  IRJointFootPlateDisp = dispinterface
    ['{64A3D92A-144A-11D4-B7F8-0050DA76755E}']
    property type_: IRJointFootPlateType dispid 1610809344;
    property Diameter: Double dispid 1610809346;
    property CenterAnchor: Integer dispid 1610809348;
    property Length: Double dispid 1610743808;
    property Width: Double dispid 1610743810;
    property Thick: Double dispid 1610743812;
    property Exist: Integer dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRJointWedge
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64A3D92C-144A-11D4-B7F8-0050DA76755E}
// *********************************************************************//
  IRJointWedge = interface(IDispatch)
    ['{64A3D92C-144A-11D4-B7F8-0050DA76755E}']
    function Get_type_: IRJointWedgeType; safecall;
    procedure Set_type_(ret: IRJointWedgeType); safecall;
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_Profile: IRJointProfile; safecall;
    function Get_Width: Double; safecall;
    procedure Set_Width(ret: Double); safecall;
    function Get_Thick: Double; safecall;
    procedure Set_Thick(ret: Double); safecall;
    function Get_XTypeMaterial: WideString; safecall;
    procedure Set_XTypeMaterial(const ret: WideString); safecall;
    property type_: IRJointWedgeType read Get_type_ write Set_type_;
    property Length: Double read Get_Length write Set_Length;
    property Profile: IRJointProfile read Get_Profile;
    property Width: Double read Get_Width write Set_Width;
    property Thick: Double read Get_Thick write Set_Thick;
    property XTypeMaterial: WideString read Get_XTypeMaterial write Set_XTypeMaterial;
  end;

// *********************************************************************//
// DispIntf:  IRJointWedgeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64A3D92C-144A-11D4-B7F8-0050DA76755E}
// *********************************************************************//
  IRJointWedgeDisp = dispinterface
    ['{64A3D92C-144A-11D4-B7F8-0050DA76755E}']
    property type_: IRJointWedgeType dispid 1610743808;
    property Length: Double dispid 1610743810;
    property Profile: IRJointProfile readonly dispid 1610743812;
    property Width: Double dispid 1610743813;
    property Thick: Double dispid 1610743815;
    property XTypeMaterial: WideString dispid 1610743817;
  end;

// *********************************************************************//
// Interface: IRJointBearingPlate
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64A3D92E-144A-11D4-B7F8-0050DA76755E}
// *********************************************************************//
  IRJointBearingPlate = interface(IRJointPlate)
    ['{64A3D92E-144A-11D4-B7F8-0050DA76755E}']
    function Get_ThickBearingBar: Double; safecall;
    procedure Set_ThickBearingBar(ret: Double); safecall;
    property ThickBearingBar: Double read Get_ThickBearingBar write Set_ThickBearingBar;
  end;

// *********************************************************************//
// DispIntf:  IRJointBearingPlateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64A3D92E-144A-11D4-B7F8-0050DA76755E}
// *********************************************************************//
  IRJointBearingPlateDisp = dispinterface
    ['{64A3D92E-144A-11D4-B7F8-0050DA76755E}']
    property ThickBearingBar: Double dispid 1610809344;
    property Length: Double dispid 1610743808;
    property Width: Double dispid 1610743810;
    property Thick: Double dispid 1610743812;
    property Exist: Integer dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRJointFootWelds
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64A3D930-144A-11D4-B7F8-0050DA76755E}
// *********************************************************************//
  IRJointFootWelds = interface(IDispatch)
    ['{64A3D930-144A-11D4-B7F8-0050DA76755E}']
    function Get_FootPlate: IRJointWeld; safecall;
    function Get_Wedge: IRJointWeld; safecall;
    function Get_Washer: IRJointWeld; safecall;
    function Get_Bearing: IRJointWeld; safecall;
    function Get_Stiff: IRJointWeld; safecall;
    property FootPlate: IRJointWeld read Get_FootPlate;
    property Wedge: IRJointWeld read Get_Wedge;
    property Washer: IRJointWeld read Get_Washer;
    property Bearing: IRJointWeld read Get_Bearing;
    property Stiff: IRJointWeld read Get_Stiff;
  end;

// *********************************************************************//
// DispIntf:  IRJointFootWeldsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64A3D930-144A-11D4-B7F8-0050DA76755E}
// *********************************************************************//
  IRJointFootWeldsDisp = dispinterface
    ['{64A3D930-144A-11D4-B7F8-0050DA76755E}']
    property FootPlate: IRJointWeld readonly dispid 1610743808;
    property Wedge: IRJointWeld readonly dispid 1610743809;
    property Washer: IRJointWeld readonly dispid 1610743810;
    property Bearing: IRJointWeld readonly dispid 1610743811;
    property Stiff: IRJointWeld readonly dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRJointColumnBracket
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64A3D932-144A-11D4-B7F8-0050DA76755E}
// *********************************************************************//
  IRJointColumnBracket = interface(IDispatch)
    ['{64A3D932-144A-11D4-B7F8-0050DA76755E}']
    function Get_Thick: Double; safecall;
    procedure Set_Thick(ret: Double); safecall;
    function Get_Width: Double; safecall;
    procedure Set_Width(ret: Double); safecall;
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_Height: Double; safecall;
    procedure Set_Height(ret: Double); safecall;
    function Get_VThick: Double; safecall;
    procedure Set_VThick(ret: Double); safecall;
    function Exist: WordBool; safecall;
    property Thick: Double read Get_Thick write Set_Thick;
    property Width: Double read Get_Width write Set_Width;
    property Length: Double read Get_Length write Set_Length;
    property Height: Double read Get_Height write Set_Height;
    property VThick: Double read Get_VThick write Set_VThick;
  end;

// *********************************************************************//
// DispIntf:  IRJointColumnBracketDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64A3D932-144A-11D4-B7F8-0050DA76755E}
// *********************************************************************//
  IRJointColumnBracketDisp = dispinterface
    ['{64A3D932-144A-11D4-B7F8-0050DA76755E}']
    property Thick: Double dispid 1610743808;
    property Width: Double dispid 1610743810;
    property Length: Double dispid 1610743812;
    property Height: Double dispid 1610743814;
    property VThick: Double dispid 1610743816;
    function Exist: WordBool; dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRJointPinnedColumnBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64A3D934-144A-11D4-B7F8-0050DA76755E}
// *********************************************************************//
  IRJointPinnedColumnBase = interface(IRJointConnection)
    ['{64A3D934-144A-11D4-B7F8-0050DA76755E}']
    function Get_StiffType: IRJointPinnedColumnBaseStiffType; safecall;
    procedure Set_StiffType(ret: IRJointPinnedColumnBaseStiffType); safecall;
    function Get_Profile: IRJointProfile; safecall;
    function Get_Bolts: IRJointFootBolts; safecall;
    function Get_Anchor: IRJointAnchor; safecall;
    function Get_FootPlate: IRJointFootPlate; safecall;
    function Get_Wedge: IRJointWedge; safecall;
    function Get_Base: IRJointPlate; safecall;
    function Get_Washer: IRJointPlate; safecall;
    function Get_Bearing: IRJointPlate; safecall;
    function Get_BearingPlate: IRJointBearingPlate; safecall;
    function Get_Welds: IRJointFootWelds; safecall;
    function Get_StiffHoriz: IRJointFootStiffenerHoriz; safecall;
    function Get_StiffVert: IRJointFootStiffenerVert; safecall;
    function Get_Materials: IRJointFootMaterials; safecall;
    function Get_Square: IRJointColumnSquare; safecall;
    function Get_BasePlateMaterial: IRobotMaterialData; safecall;
    function Get_NodeNumber: Integer; safecall;
    procedure Set_NodeNumber(ret: Integer); safecall;
    function Get_MilledEnd: Integer; safecall;
    procedure Set_MilledEnd(ret: Integer); safecall;
    function GetMaterialName(Type_: IRJointColumnBElementType): WideString; safecall;
    procedure SetMaterialName(Type_: IRJointColumnBElementType; const input: WideString); safecall;
    function Get_Foundation: IRJointColumnBFoundation; safecall;
    function Get_IsSwayFrame: Integer; safecall;
    procedure Set_IsSwayFrame(ret: Integer); safecall;
    function Get_ColumnLength: Double; safecall;
    procedure Set_ColumnLength(ret: Double); safecall;
    function Get_BetaCoeff: Double; safecall;
    procedure Set_BetaCoeff(ret: Double); safecall;
    function Get_SimpleStiff: IRJointFootStiffenerSimple; safecall;
    function Get_TrapezoidStiff: IRJointFootStiffenerTrapezoid; safecall;
    function BoltsDimensionNamesVector(from_anchors_base: Integer): IRobotNamesArray; safecall;
    function BoltsClassVector(from_anchors_base: Integer): IRobotNamesArray; safecall;
    function BoltsDimensionsVector(from_anchors_base: Integer): IRobotValuesArray; safecall;
    procedure TurnedOnVerificationCEBFailure(Type_: IRJointColumnBaseCEBFailureType; input: WordBool); safecall;
    function IsTurnedOnVerificationCEBFailure(Type_: IRJointColumnBaseCEBFailureType): WordBool; safecall;
    property StiffType: IRJointPinnedColumnBaseStiffType read Get_StiffType write Set_StiffType;
    property Profile: IRJointProfile read Get_Profile;
    property Bolts: IRJointFootBolts read Get_Bolts;
    property Anchor: IRJointAnchor read Get_Anchor;
    property FootPlate: IRJointFootPlate read Get_FootPlate;
    property Wedge: IRJointWedge read Get_Wedge;
    property Base: IRJointPlate read Get_Base;
    property Washer: IRJointPlate read Get_Washer;
    property Bearing: IRJointPlate read Get_Bearing;
    property BearingPlate: IRJointBearingPlate read Get_BearingPlate;
    property Welds: IRJointFootWelds read Get_Welds;
    property StiffHoriz: IRJointFootStiffenerHoriz read Get_StiffHoriz;
    property StiffVert: IRJointFootStiffenerVert read Get_StiffVert;
    property Materials: IRJointFootMaterials read Get_Materials;
    property Square: IRJointColumnSquare read Get_Square;
    property BasePlateMaterial: IRobotMaterialData read Get_BasePlateMaterial;
    property NodeNumber: Integer read Get_NodeNumber write Set_NodeNumber;
    property MilledEnd: Integer read Get_MilledEnd write Set_MilledEnd;
    property Foundation: IRJointColumnBFoundation read Get_Foundation;
    property IsSwayFrame: Integer read Get_IsSwayFrame write Set_IsSwayFrame;
    property ColumnLength: Double read Get_ColumnLength write Set_ColumnLength;
    property BetaCoeff: Double read Get_BetaCoeff write Set_BetaCoeff;
    property SimpleStiff: IRJointFootStiffenerSimple read Get_SimpleStiff;
    property TrapezoidStiff: IRJointFootStiffenerTrapezoid read Get_TrapezoidStiff;
  end;

// *********************************************************************//
// DispIntf:  IRJointPinnedColumnBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64A3D934-144A-11D4-B7F8-0050DA76755E}
// *********************************************************************//
  IRJointPinnedColumnBaseDisp = dispinterface
    ['{64A3D934-144A-11D4-B7F8-0050DA76755E}']
    property StiffType: IRJointPinnedColumnBaseStiffType dispid 1610809344;
    property Profile: IRJointProfile readonly dispid 1610809346;
    property Bolts: IRJointFootBolts readonly dispid 1610809347;
    property Anchor: IRJointAnchor readonly dispid 1610809348;
    property FootPlate: IRJointFootPlate readonly dispid 1610809349;
    property Wedge: IRJointWedge readonly dispid 1610809350;
    property Base: IRJointPlate readonly dispid 1610809351;
    property Washer: IRJointPlate readonly dispid 1610809352;
    property Bearing: IRJointPlate readonly dispid 1610809353;
    property BearingPlate: IRJointBearingPlate readonly dispid 1610809354;
    property Welds: IRJointFootWelds readonly dispid 1610809355;
    property StiffHoriz: IRJointFootStiffenerHoriz readonly dispid 1610809356;
    property StiffVert: IRJointFootStiffenerVert readonly dispid 1610809357;
    property Materials: IRJointFootMaterials readonly dispid 1610809358;
    property Square: IRJointColumnSquare readonly dispid 1610809359;
    property BasePlateMaterial: IRobotMaterialData readonly dispid 1610809360;
    property NodeNumber: Integer dispid 1610809361;
    property MilledEnd: Integer dispid 1610809363;
    function GetMaterialName(Type_: IRJointColumnBElementType): WideString; dispid 1610809365;
    procedure SetMaterialName(Type_: IRJointColumnBElementType; const input: WideString); dispid 1610809366;
    property Foundation: IRJointColumnBFoundation readonly dispid 1610809367;
    property IsSwayFrame: Integer dispid 1610809368;
    property ColumnLength: Double dispid 1610809370;
    property BetaCoeff: Double dispid 1610809372;
    property SimpleStiff: IRJointFootStiffenerSimple readonly dispid 1610809374;
    property TrapezoidStiff: IRJointFootStiffenerTrapezoid readonly dispid 1610809375;
    function BoltsDimensionNamesVector(from_anchors_base: Integer): IRobotNamesArray; dispid 1610809376;
    function BoltsClassVector(from_anchors_base: Integer): IRobotNamesArray; dispid 1610809377;
    function BoltsDimensionsVector(from_anchors_base: Integer): IRobotValuesArray; dispid 1610809378;
    procedure TurnedOnVerificationCEBFailure(Type_: IRJointColumnBaseCEBFailureType; input: WordBool); dispid 1610809379;
    function IsTurnedOnVerificationCEBFailure(Type_: IRJointColumnBaseCEBFailureType): WordBool; dispid 1610809380;
    property WFRelPos: IRJointWebFlangeRelativePos dispid 1610743808;
    property type_: IRJointConnectionType readonly dispid 1610743810;
    procedure SetToRobot(const info: IRJointConnectionInfo); dispid 1610743811;
    procedure GetFromRobot(const info: IRJointConnectionInfo); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRJointFootStiffenerHoriz
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9968E764-16BB-11D4-B7FB-0050DA76755E}
// *********************************************************************//
  IRJointFootStiffenerHoriz = interface(IDispatch)
    ['{9968E764-16BB-11D4-B7FB-0050DA76755E}']
    function Get_Thick: Double; safecall;
    procedure Set_Thick(ret: Double); safecall;
    property Thick: Double read Get_Thick write Set_Thick;
  end;

// *********************************************************************//
// DispIntf:  IRJointFootStiffenerHorizDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9968E764-16BB-11D4-B7FB-0050DA76755E}
// *********************************************************************//
  IRJointFootStiffenerHorizDisp = dispinterface
    ['{9968E764-16BB-11D4-B7FB-0050DA76755E}']
    property Thick: Double dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRJointFootStiffenerVert
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9968E762-16BB-11D4-B7FB-0050DA76755E}
// *********************************************************************//
  IRJointFootStiffenerVert = interface(IDispatch)
    ['{9968E762-16BB-11D4-B7FB-0050DA76755E}']
    function Get_Thick: Double; safecall;
    procedure Set_Thick(ret: Double); safecall;
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_WidthSpacing: Double; safecall;
    procedure Set_WidthSpacing(ret: Double); safecall;
    property Thick: Double read Get_Thick write Set_Thick;
    property Length: Double read Get_Length write Set_Length;
    property WidthSpacing: Double read Get_WidthSpacing write Set_WidthSpacing;
  end;

// *********************************************************************//
// DispIntf:  IRJointFootStiffenerVertDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9968E762-16BB-11D4-B7FB-0050DA76755E}
// *********************************************************************//
  IRJointFootStiffenerVertDisp = dispinterface
    ['{9968E762-16BB-11D4-B7FB-0050DA76755E}']
    property Thick: Double dispid 1610743808;
    property Length: Double dispid 1610743810;
    property WidthSpacing: Double dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRJointFootMaterials
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A41669A2-16C5-11D4-B7FB-0050DA76755E}
// *********************************************************************//
  IRJointFootMaterials = interface(IDispatch)
    ['{A41669A2-16C5-11D4-B7FB-0050DA76755E}']
    function Get_PlateSigma: Double; safecall;
    procedure Set_PlateSigma(ret: Double); safecall;
    function Get_PlateYoung: Double; safecall;
    procedure Set_PlateYoung(ret: Double); safecall;
    function Get_CementAmount: Double; safecall;
    procedure Set_CementAmount(ret: Double); safecall;
    function Get_ConcrSteelCoeff: Double; safecall;
    procedure Set_ConcrSteelCoeff(ret: Double); safecall;
    function Get_ConcrClass: Double; safecall;
    procedure Set_ConcrClass(ret: Double); safecall;
    property PlateSigma: Double read Get_PlateSigma write Set_PlateSigma;
    property PlateYoung: Double read Get_PlateYoung write Set_PlateYoung;
    property CementAmount: Double read Get_CementAmount write Set_CementAmount;
    property ConcrSteelCoeff: Double read Get_ConcrSteelCoeff write Set_ConcrSteelCoeff;
    property ConcrClass: Double read Get_ConcrClass write Set_ConcrClass;
  end;

// *********************************************************************//
// DispIntf:  IRJointFootMaterialsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A41669A2-16C5-11D4-B7FB-0050DA76755E}
// *********************************************************************//
  IRJointFootMaterialsDisp = dispinterface
    ['{A41669A2-16C5-11D4-B7FB-0050DA76755E}']
    property PlateSigma: Double dispid 1610743808;
    property PlateYoung: Double dispid 1610743810;
    property CementAmount: Double dispid 1610743812;
    property ConcrSteelCoeff: Double dispid 1610743814;
    property ConcrClass: Double dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRJointColumnSquare
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0E5E5352-1B6F-11D4-B7FE-0050DA76755E}
// *********************************************************************//
  IRJointColumnSquare = interface(IDispatch)
    ['{0E5E5352-1B6F-11D4-B7FE-0050DA76755E}']
    function Get_Profile: IRJointProfile; safecall;
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_Diameter: Double; safecall;
    procedure Set_Diameter(ret: Double); safecall;
    function Get__className: WideString; safecall;
    procedure Set__className(const ret: WideString); safecall;
    function Get_DiameterName: WideString; safecall;
    procedure Set_DiameterName(const ret: WideString); safecall;
    function Get_Number: Integer; safecall;
    procedure Set_Number(ret: Integer); safecall;
    function Get_Distance: Double; safecall;
    procedure Set_Distance(ret: Double); safecall;
    function Get_Spacing: Double; safecall;
    procedure Set_Spacing(ret: Double); safecall;
    property Profile: IRJointProfile read Get_Profile;
    property Length: Double read Get_Length write Set_Length;
    property Diameter: Double read Get_Diameter write Set_Diameter;
    property _className: WideString read Get__className write Set__className;
    property DiameterName: WideString read Get_DiameterName write Set_DiameterName;
    property Number: Integer read Get_Number write Set_Number;
    property Distance: Double read Get_Distance write Set_Distance;
    property Spacing: Double read Get_Spacing write Set_Spacing;
  end;

// *********************************************************************//
// DispIntf:  IRJointColumnSquareDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0E5E5352-1B6F-11D4-B7FE-0050DA76755E}
// *********************************************************************//
  IRJointColumnSquareDisp = dispinterface
    ['{0E5E5352-1B6F-11D4-B7FE-0050DA76755E}']
    property Profile: IRJointProfile readonly dispid 1610743808;
    property Length: Double dispid 1610743809;
    property Diameter: Double dispid 1610743811;
    property _className: WideString dispid 1610743813;
    property DiameterName: WideString dispid 1610743815;
    property Number: Integer dispid 1610743817;
    property Distance: Double dispid 1610743819;
    property Spacing: Double dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IRJointColumnBFoundation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D929E84E-8C9B-4141-961F-DEA9955F348B}
// *********************************************************************//
  IRJointColumnBFoundation = interface(IDispatch)
    ['{D929E84E-8C9B-4141-961F-DEA9955F348B}']
    function Get_Height: Double; safecall;
    procedure Set_Height(ret: Double); safecall;
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_Width: Double; safecall;
    procedure Set_Width(ret: Double); safecall;
    function Get_Tg: Double; safecall;
    procedure Set_Tg(ret: Double); safecall;
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    function Get_GroutLayer_fckg: Double; safecall;
    procedure Set_GroutLayer_fckg(ret: Double); safecall;
    function Get_GroutLayer_cfd: Double; safecall;
    procedure Set_GroutLayer_cfd(ret: Double); safecall;
    function Get_IsCracked: Integer; safecall;
    procedure Set_IsCracked(ret: Integer); safecall;
    function Get_CoeffPunchingMethod: RJointCoeffPunchingMethodType; safecall;
    procedure Set_CoeffPunchingMethod(ret: RJointCoeffPunchingMethodType); safecall;
    function Get_IsCoeffSteelConcreteManual: Integer; safecall;
    procedure Set_IsCoeffSteelConcreteManual(ret: Integer); safecall;
    function Get_CoeffSteelConcreteManual: Double; safecall;
    procedure Set_CoeffSteelConcreteManual(ret: Double); safecall;
    function Get_CoeffK: Double; safecall;
    procedure Set_CoeffK(ret: Double); safecall;
    function Get_CalcTypeCoeffK: IRJointCalcTypeCoeffK; safecall;
    procedure Set_CalcTypeCoeffK(ret: IRJointCalcTypeCoeffK); safecall;
    property Height: Double read Get_Height write Set_Height;
    property Length: Double read Get_Length write Set_Length;
    property Width: Double read Get_Width write Set_Width;
    property Tg: Double read Get_Tg write Set_Tg;
    property Material: WideString read Get_Material write Set_Material;
    property GroutLayer_fckg: Double read Get_GroutLayer_fckg write Set_GroutLayer_fckg;
    property GroutLayer_cfd: Double read Get_GroutLayer_cfd write Set_GroutLayer_cfd;
    property IsCracked: Integer read Get_IsCracked write Set_IsCracked;
    property CoeffPunchingMethod: RJointCoeffPunchingMethodType read Get_CoeffPunchingMethod write Set_CoeffPunchingMethod;
    property IsCoeffSteelConcreteManual: Integer read Get_IsCoeffSteelConcreteManual write Set_IsCoeffSteelConcreteManual;
    property CoeffSteelConcreteManual: Double read Get_CoeffSteelConcreteManual write Set_CoeffSteelConcreteManual;
    property CoeffK: Double read Get_CoeffK write Set_CoeffK;
    property CalcTypeCoeffK: IRJointCalcTypeCoeffK read Get_CalcTypeCoeffK write Set_CalcTypeCoeffK;
  end;

// *********************************************************************//
// DispIntf:  IRJointColumnBFoundationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D929E84E-8C9B-4141-961F-DEA9955F348B}
// *********************************************************************//
  IRJointColumnBFoundationDisp = dispinterface
    ['{D929E84E-8C9B-4141-961F-DEA9955F348B}']
    property Height: Double dispid 1610743808;
    property Length: Double dispid 1610743810;
    property Width: Double dispid 1610743812;
    property Tg: Double dispid 1610743814;
    property Material: WideString dispid 1610743816;
    property GroutLayer_fckg: Double dispid 1610743818;
    property GroutLayer_cfd: Double dispid 1610743820;
    property IsCracked: Integer dispid 1610743822;
    property CoeffPunchingMethod: RJointCoeffPunchingMethodType dispid 1610743824;
    property IsCoeffSteelConcreteManual: Integer dispid 1610743826;
    property CoeffSteelConcreteManual: Double dispid 1610743828;
    property CoeffK: Double dispid 1610743830;
    property CalcTypeCoeffK: IRJointCalcTypeCoeffK dispid 1610743832;
  end;

// *********************************************************************//
// Interface: IRJointFootStiffenerSimple
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1D07CA22-1C33-11D4-B7FF-0050DA76755E}
// *********************************************************************//
  IRJointFootStiffenerSimple = interface(IDispatch)
    ['{1D07CA22-1C33-11D4-B7FF-0050DA76755E}']
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_Height: Double; safecall;
    procedure Set_Height(ret: Double); safecall;
    function Get_Width: Double; safecall;
    procedure Set_Width(ret: Double); safecall;
    function Get_Thick: Double; safecall;
    procedure Set_Thick(ret: Double); safecall;
    function Get_type_: IRJointFootStiffType; safecall;
    procedure Set_type_(ret: IRJointFootStiffType); safecall;
    function Get_CutHorizontal: Double; safecall;
    procedure Set_CutHorizontal(ret: Double); safecall;
    function Get_CutVertical: Double; safecall;
    procedure Set_CutVertical(ret: Double); safecall;
    property Length: Double read Get_Length write Set_Length;
    property Height: Double read Get_Height write Set_Height;
    property Width: Double read Get_Width write Set_Width;
    property Thick: Double read Get_Thick write Set_Thick;
    property type_: IRJointFootStiffType read Get_type_ write Set_type_;
    property CutHorizontal: Double read Get_CutHorizontal write Set_CutHorizontal;
    property CutVertical: Double read Get_CutVertical write Set_CutVertical;
  end;

// *********************************************************************//
// DispIntf:  IRJointFootStiffenerSimpleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1D07CA22-1C33-11D4-B7FF-0050DA76755E}
// *********************************************************************//
  IRJointFootStiffenerSimpleDisp = dispinterface
    ['{1D07CA22-1C33-11D4-B7FF-0050DA76755E}']
    property Length: Double dispid 1610743808;
    property Height: Double dispid 1610743810;
    property Width: Double dispid 1610743812;
    property Thick: Double dispid 1610743814;
    property type_: IRJointFootStiffType dispid 1610743816;
    property CutHorizontal: Double dispid 1610743818;
    property CutVertical: Double dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRJointFootStiffenerTrapezoid
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3DB5CAF2-15EC-4321-B8B5-10B2675C8715}
// *********************************************************************//
  IRJointFootStiffenerTrapezoid = interface(IDispatch)
    ['{3DB5CAF2-15EC-4321-B8B5-10B2675C8715}']
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_Height: Double; safecall;
    procedure Set_Height(ret: Double); safecall;
    function Get_Width: Double; safecall;
    procedure Set_Width(ret: Double); safecall;
    function Get_Thick: Double; safecall;
    procedure Set_Thick(ret: Double); safecall;
    function Get_type_: IRJointFootStiffType; safecall;
    procedure Set_type_(ret: IRJointFootStiffType); safecall;
    function Get_CutHorizontal: Double; safecall;
    procedure Set_CutHorizontal(ret: Double); safecall;
    function Get_CutVertical: Double; safecall;
    procedure Set_CutVertical(ret: Double); safecall;
    property Length: Double read Get_Length write Set_Length;
    property Height: Double read Get_Height write Set_Height;
    property Width: Double read Get_Width write Set_Width;
    property Thick: Double read Get_Thick write Set_Thick;
    property type_: IRJointFootStiffType read Get_type_ write Set_type_;
    property CutHorizontal: Double read Get_CutHorizontal write Set_CutHorizontal;
    property CutVertical: Double read Get_CutVertical write Set_CutVertical;
  end;

// *********************************************************************//
// DispIntf:  IRJointFootStiffenerTrapezoidDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3DB5CAF2-15EC-4321-B8B5-10B2675C8715}
// *********************************************************************//
  IRJointFootStiffenerTrapezoidDisp = dispinterface
    ['{3DB5CAF2-15EC-4321-B8B5-10B2675C8715}']
    property Length: Double dispid 1610743808;
    property Height: Double dispid 1610743810;
    property Width: Double dispid 1610743812;
    property Thick: Double dispid 1610743814;
    property type_: IRJointFootStiffType dispid 1610743816;
    property CutHorizontal: Double dispid 1610743818;
    property CutVertical: Double dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRJointPinnedLoad
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DEF17FA2-1B6C-11D4-B7FE-0050DA76755E}
// *********************************************************************//
  IRJointPinnedLoad = interface(IRJointLoad)
    ['{DEF17FA2-1B6C-11D4-B7FE-0050DA76755E}']
    function Get_Nt: Double; safecall;
    procedure Set_Nt(ret: Double); safecall;
    function Get_Nc: Double; safecall;
    procedure Set_Nc(ret: Double); safecall;
    function Get_TZ: Double; safecall;
    procedure Set_TZ(ret: Double); safecall;
    function Get_NTz: Double; safecall;
    procedure Set_NTz(ret: Double); safecall;
    function Get_TY: Double; safecall;
    procedure Set_TY(ret: Double); safecall;
    function Get_NTy: Double; safecall;
    procedure Set_NTy(ret: Double); safecall;
    property Nt: Double read Get_Nt write Set_Nt;
    property Nc: Double read Get_Nc write Set_Nc;
    property TZ: Double read Get_TZ write Set_TZ;
    property NTz: Double read Get_NTz write Set_NTz;
    property TY: Double read Get_TY write Set_TY;
    property NTy: Double read Get_NTy write Set_NTy;
  end;

// *********************************************************************//
// DispIntf:  IRJointPinnedLoadDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DEF17FA2-1B6C-11D4-B7FE-0050DA76755E}
// *********************************************************************//
  IRJointPinnedLoadDisp = dispinterface
    ['{DEF17FA2-1B6C-11D4-B7FE-0050DA76755E}']
    property Nt: Double dispid 1610809344;
    property Nc: Double dispid 1610809346;
    property TZ: Double dispid 1610809348;
    property NTz: Double dispid 1610809350;
    property TY: Double dispid 1610809352;
    property NTy: Double dispid 1610809354;
    property Cases: IRobotSelection readonly dispid 1610743808;
    property type_: IRJointLoadType dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRJointFootStiffenerComplex
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1D07CA24-1C33-11D4-B7FF-0050DA76755E}
// *********************************************************************//
  IRJointFootStiffenerComplex = interface(IDispatch)
    ['{1D07CA24-1C33-11D4-B7FF-0050DA76755E}']
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_Height: Double; safecall;
    procedure Set_Height(ret: Double); safecall;
    function Get_ThickPlateHor: Double; safecall;
    procedure Set_ThickPlateHor(ret: Double); safecall;
    function Get_ThickStiff: Double; safecall;
    procedure Set_ThickStiff(ret: Double); safecall;
    property Length: Double read Get_Length write Set_Length;
    property Height: Double read Get_Height write Set_Height;
    property ThickPlateHor: Double read Get_ThickPlateHor write Set_ThickPlateHor;
    property ThickStiff: Double read Get_ThickStiff write Set_ThickStiff;
  end;

// *********************************************************************//
// DispIntf:  IRJointFootStiffenerComplexDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1D07CA24-1C33-11D4-B7FF-0050DA76755E}
// *********************************************************************//
  IRJointFootStiffenerComplexDisp = dispinterface
    ['{1D07CA24-1C33-11D4-B7FF-0050DA76755E}']
    property Length: Double dispid 1610743808;
    property Height: Double dispid 1610743810;
    property ThickPlateHor: Double dispid 1610743812;
    property ThickStiff: Double dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRJointFixedColumnBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1D07CA26-1C33-11D4-B7FF-0050DA76755E}
// *********************************************************************//
  IRJointFixedColumnBase = interface(IRJointConnection)
    ['{1D07CA26-1C33-11D4-B7FF-0050DA76755E}']
    function Get_StiffType: IRJointFixedColumnBaseStiffType; safecall;
    procedure Set_StiffType(ret: IRJointFixedColumnBaseStiffType); safecall;
    function Get_Bolts: IRJointFootBolts; safecall;
    function Get_Anchor: IRJointAnchor; safecall;
    function Get_FootPlate: IRJointFootPlate; safecall;
    function Get_Wedge: IRJointWedge; safecall;
    function Get_Base: IRJointPlate; safecall;
    function Get_Washer: IRJointPlate; safecall;
    function Get_Welds: IRJointFixedFootWelds; safecall;
    function Get_SimpleStiff: IRJointFootStiffenerSimple; safecall;
    function Get_ComplexStiff: IRJointFootStiffenerComplex; safecall;
    function Get_Profile: IRJointProfile; safecall;
    function Get_Materials: IRJointFootMaterials; safecall;
    function Get_BasePlateMaterial: IRobotMaterialData; safecall;
    function Get_NodeNumber: Integer; safecall;
    procedure Set_NodeNumber(ret: Integer); safecall;
    function Get_TrapezoidStiff: IRJointFootStiffenerTrapezoid; safecall;
    function Get_UpperPlate: IRJointPlate; safecall;
    function GetMaterialName(Type_: IRJointColumnBElementType): WideString; safecall;
    procedure SetMaterialName(Type_: IRJointColumnBElementType; const input: WideString); safecall;
    function Get_Foundation: IRJointColumnBFoundation; safecall;
    function Get_IsSwayFrame: Integer; safecall;
    procedure Set_IsSwayFrame(ret: Integer); safecall;
    function Get_IsEndFrez: Integer; safecall;
    procedure Set_IsEndFrez(ret: Integer); safecall;
    function Get_ColumnBaseCalcModel: IRJointColumnBaseCalcModelType; safecall;
    procedure Set_ColumnBaseCalcModel(ret: IRJointColumnBaseCalcModelType); safecall;
    function Get_ColumnLength: Double; safecall;
    procedure Set_ColumnLength(ret: Double); safecall;
    function Get_BetaCoeff: Double; safecall;
    procedure Set_BetaCoeff(ret: Double); safecall;
    function BoltsDimensionNamesVector(from_anchors_base: Integer): IRobotNamesArray; safecall;
    function BoltsClassVector(from_anchors_base: Integer): IRobotNamesArray; safecall;
    function BoltsDimensionsVector(from_anchors_base: Integer): IRobotValuesArray; safecall;
    procedure TurnedOnVerificationCEBFailure(Type_: IRJointColumnBaseCEBFailureType; input: WordBool); safecall;
    function IsTurnedOnVerificationCEBFailure(Type_: IRJointColumnBaseCEBFailureType): WordBool; safecall;
    property StiffType: IRJointFixedColumnBaseStiffType read Get_StiffType write Set_StiffType;
    property Bolts: IRJointFootBolts read Get_Bolts;
    property Anchor: IRJointAnchor read Get_Anchor;
    property FootPlate: IRJointFootPlate read Get_FootPlate;
    property Wedge: IRJointWedge read Get_Wedge;
    property Base: IRJointPlate read Get_Base;
    property Washer: IRJointPlate read Get_Washer;
    property Welds: IRJointFixedFootWelds read Get_Welds;
    property SimpleStiff: IRJointFootStiffenerSimple read Get_SimpleStiff;
    property ComplexStiff: IRJointFootStiffenerComplex read Get_ComplexStiff;
    property Profile: IRJointProfile read Get_Profile;
    property Materials: IRJointFootMaterials read Get_Materials;
    property BasePlateMaterial: IRobotMaterialData read Get_BasePlateMaterial;
    property NodeNumber: Integer read Get_NodeNumber write Set_NodeNumber;
    property TrapezoidStiff: IRJointFootStiffenerTrapezoid read Get_TrapezoidStiff;
    property UpperPlate: IRJointPlate read Get_UpperPlate;
    property Foundation: IRJointColumnBFoundation read Get_Foundation;
    property IsSwayFrame: Integer read Get_IsSwayFrame write Set_IsSwayFrame;
    property IsEndFrez: Integer read Get_IsEndFrez write Set_IsEndFrez;
    property ColumnBaseCalcModel: IRJointColumnBaseCalcModelType read Get_ColumnBaseCalcModel write Set_ColumnBaseCalcModel;
    property ColumnLength: Double read Get_ColumnLength write Set_ColumnLength;
    property BetaCoeff: Double read Get_BetaCoeff write Set_BetaCoeff;
  end;

// *********************************************************************//
// DispIntf:  IRJointFixedColumnBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1D07CA26-1C33-11D4-B7FF-0050DA76755E}
// *********************************************************************//
  IRJointFixedColumnBaseDisp = dispinterface
    ['{1D07CA26-1C33-11D4-B7FF-0050DA76755E}']
    property StiffType: IRJointFixedColumnBaseStiffType dispid 1610809344;
    property Bolts: IRJointFootBolts readonly dispid 1610809346;
    property Anchor: IRJointAnchor readonly dispid 1610809347;
    property FootPlate: IRJointFootPlate readonly dispid 1610809348;
    property Wedge: IRJointWedge readonly dispid 1610809349;
    property Base: IRJointPlate readonly dispid 1610809350;
    property Washer: IRJointPlate readonly dispid 1610809351;
    property Welds: IRJointFixedFootWelds readonly dispid 1610809352;
    property SimpleStiff: IRJointFootStiffenerSimple readonly dispid 1610809353;
    property ComplexStiff: IRJointFootStiffenerComplex readonly dispid 1610809354;
    property Profile: IRJointProfile readonly dispid 1610809355;
    property Materials: IRJointFootMaterials readonly dispid 1610809356;
    property BasePlateMaterial: IRobotMaterialData readonly dispid 1610809357;
    property NodeNumber: Integer dispid 1610809358;
    property TrapezoidStiff: IRJointFootStiffenerTrapezoid readonly dispid 1610809360;
    property UpperPlate: IRJointPlate readonly dispid 1610809361;
    function GetMaterialName(Type_: IRJointColumnBElementType): WideString; dispid 1610809362;
    procedure SetMaterialName(Type_: IRJointColumnBElementType; const input: WideString); dispid 1610809363;
    property Foundation: IRJointColumnBFoundation readonly dispid 1610809364;
    property IsSwayFrame: Integer dispid 1610809365;
    property IsEndFrez: Integer dispid 1610809367;
    property ColumnBaseCalcModel: IRJointColumnBaseCalcModelType dispid 1610809369;
    property ColumnLength: Double dispid 1610809371;
    property BetaCoeff: Double dispid 1610809373;
    function BoltsDimensionNamesVector(from_anchors_base: Integer): IRobotNamesArray; dispid 1610809375;
    function BoltsClassVector(from_anchors_base: Integer): IRobotNamesArray; dispid 1610809376;
    function BoltsDimensionsVector(from_anchors_base: Integer): IRobotValuesArray; dispid 1610809377;
    procedure TurnedOnVerificationCEBFailure(Type_: IRJointColumnBaseCEBFailureType; input: WordBool); dispid 1610809378;
    function IsTurnedOnVerificationCEBFailure(Type_: IRJointColumnBaseCEBFailureType): WordBool; dispid 1610809379;
    property WFRelPos: IRJointWebFlangeRelativePos dispid 1610743808;
    property type_: IRJointConnectionType readonly dispid 1610743810;
    procedure SetToRobot(const info: IRJointConnectionInfo); dispid 1610743811;
    procedure GetFromRobot(const info: IRJointConnectionInfo); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRJointFixedFootWelds
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F14DC592-2194-11D4-B802-0050DA76755E}
// *********************************************************************//
  IRJointFixedFootWelds = interface(IDispatch)
    ['{F14DC592-2194-11D4-B802-0050DA76755E}']
    function Get_FootPlate: IRJointWeld; safecall;
    function Get_Wedge: IRJointWeld; safecall;
    function Get_Washer: IRJointWeld; safecall;
    function Get_Stiff: IRJointWeld; safecall;
    property FootPlate: IRJointWeld read Get_FootPlate;
    property Wedge: IRJointWeld read Get_Wedge;
    property Washer: IRJointWeld read Get_Washer;
    property Stiff: IRJointWeld read Get_Stiff;
  end;

// *********************************************************************//
// DispIntf:  IRJointFixedFootWeldsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F14DC592-2194-11D4-B802-0050DA76755E}
// *********************************************************************//
  IRJointFixedFootWeldsDisp = dispinterface
    ['{F14DC592-2194-11D4-B802-0050DA76755E}']
    property FootPlate: IRJointWeld readonly dispid 1610743808;
    property Wedge: IRJointWeld readonly dispid 1610743809;
    property Washer: IRJointWeld readonly dispid 1610743810;
    property Stiff: IRJointWeld readonly dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRJointFixedLoad
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1D07CA28-1C33-11D4-B7FF-0050DA76755E}
// *********************************************************************//
  IRJointFixedLoad = interface(IRJointLoad)
    ['{1D07CA28-1C33-11D4-B7FF-0050DA76755E}']
    function Get_FX: Double; safecall;
    procedure Set_FX(ret: Double); safecall;
    function Get_FY: Double; safecall;
    procedure Set_FY(ret: Double); safecall;
    function Get_FZ: Double; safecall;
    procedure Set_FZ(ret: Double); safecall;
    function Get_MY: Double; safecall;
    procedure Set_MY(ret: Double); safecall;
    function Get_MZ: Double; safecall;
    procedure Set_MZ(ret: Double); safecall;
    property FX: Double read Get_FX write Set_FX;
    property FY: Double read Get_FY write Set_FY;
    property FZ: Double read Get_FZ write Set_FZ;
    property MY: Double read Get_MY write Set_MY;
    property MZ: Double read Get_MZ write Set_MZ;
  end;

// *********************************************************************//
// DispIntf:  IRJointFixedLoadDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1D07CA28-1C33-11D4-B7FF-0050DA76755E}
// *********************************************************************//
  IRJointFixedLoadDisp = dispinterface
    ['{1D07CA28-1C33-11D4-B7FF-0050DA76755E}']
    property FX: Double dispid 1610809344;
    property FY: Double dispid 1610809346;
    property FZ: Double dispid 1610809348;
    property MY: Double dispid 1610809350;
    property MZ: Double dispid 1610809352;
    property Cases: IRobotSelection readonly dispid 1610743808;
    property type_: IRJointLoadType dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRJointConcreteMaterials
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1D07CA2A-1C33-11D4-B7FF-0050DA76755E}
// *********************************************************************//
  IRJointConcreteMaterials = interface(IDispatch)
    ['{1D07CA2A-1C33-11D4-B7FF-0050DA76755E}']
    function Get_Sigma: Double; safecall;
    procedure Set_Sigma(ret: Double); safecall;
    function Get_Dosage: Double; safecall;
    procedure Set_Dosage(ret: Double); safecall;
    function Get_CoeffBA: Double; safecall;
    procedure Set_CoeffBA(ret: Double); safecall;
    function Get_ConcrName: WideString; safecall;
    procedure Set_ConcrName(const ret: WideString); safecall;
    property Sigma: Double read Get_Sigma write Set_Sigma;
    property Dosage: Double read Get_Dosage write Set_Dosage;
    property CoeffBA: Double read Get_CoeffBA write Set_CoeffBA;
    property ConcrName: WideString read Get_ConcrName write Set_ConcrName;
  end;

// *********************************************************************//
// DispIntf:  IRJointConcreteMaterialsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1D07CA2A-1C33-11D4-B7FF-0050DA76755E}
// *********************************************************************//
  IRJointConcreteMaterialsDisp = dispinterface
    ['{1D07CA2A-1C33-11D4-B7FF-0050DA76755E}']
    property Sigma: Double dispid 1610743808;
    property Dosage: Double dispid 1610743810;
    property CoeffBA: Double dispid 1610743812;
    property ConcrName: WideString dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRJointConcreteColumn
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1D07CA2C-1C33-11D4-B7FF-0050DA76755E}
// *********************************************************************//
  IRJointConcreteColumn = interface(IRJointConnection)
    ['{1D07CA2C-1C33-11D4-B7FF-0050DA76755E}']
    function Get_Profile: IRJointProfile; safecall;
    function Get_Depth: Double; safecall;
    procedure Set_Depth(ret: Double); safecall;
    function Get_Materials: IRJointConcreteMaterials; safecall;
    function Get_Base: IRJointPlate; safecall;
    function Get_Foundation: IRJointConcreteColumnFoundation; safecall;
    function Get_CalcModel: IRJointColumnBasePlateCalcModel; safecall;
    procedure Set_CalcModel(ret: IRJointColumnBasePlateCalcModel); safecall;
    function Get_SpreadFootingType: IRJointSpreadFootingType; safecall;
    procedure Set_SpreadFootingType(ret: IRJointSpreadFootingType); safecall;
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    property Profile: IRJointProfile read Get_Profile;
    property Depth: Double read Get_Depth write Set_Depth;
    property Materials: IRJointConcreteMaterials read Get_Materials;
    property Base: IRJointPlate read Get_Base;
    property Foundation: IRJointConcreteColumnFoundation read Get_Foundation;
    property CalcModel: IRJointColumnBasePlateCalcModel read Get_CalcModel write Set_CalcModel;
    property SpreadFootingType: IRJointSpreadFootingType read Get_SpreadFootingType write Set_SpreadFootingType;
    property Material: WideString read Get_Material write Set_Material;
  end;

// *********************************************************************//
// DispIntf:  IRJointConcreteColumnDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1D07CA2C-1C33-11D4-B7FF-0050DA76755E}
// *********************************************************************//
  IRJointConcreteColumnDisp = dispinterface
    ['{1D07CA2C-1C33-11D4-B7FF-0050DA76755E}']
    property Profile: IRJointProfile readonly dispid 1610809344;
    property Depth: Double dispid 1610809345;
    property Materials: IRJointConcreteMaterials readonly dispid 1610809347;
    property Base: IRJointPlate readonly dispid 1610809348;
    property Foundation: IRJointConcreteColumnFoundation readonly dispid 1610809349;
    property CalcModel: IRJointColumnBasePlateCalcModel dispid 1610809350;
    property SpreadFootingType: IRJointSpreadFootingType dispid 1610809352;
    property Material: WideString dispid 1610809354;
    property WFRelPos: IRJointWebFlangeRelativePos dispid 1610743808;
    property type_: IRJointConnectionType readonly dispid 1610743810;
    procedure SetToRobot(const info: IRJointConnectionInfo); dispid 1610743811;
    procedure GetFromRobot(const info: IRJointConnectionInfo); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRJointConcreteColumnFoundation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D350783-FE49-402F-B197-BA08E2315750}
// *********************************************************************//
  IRJointConcreteColumnFoundation = interface(IDispatch)
    ['{2D350783-FE49-402F-B197-BA08E2315750}']
    function Get_par_a1: Double; safecall;
    procedure Set_par_a1(ret: Double); safecall;
    function Get_par_l: Double; safecall;
    procedure Set_par_l(ret: Double); safecall;
    function Get_par_l1: Double; safecall;
    procedure Set_par_l1(ret: Double); safecall;
    function Get_par_l2: Double; safecall;
    procedure Set_par_l2(ret: Double); safecall;
    function Get_par_b: Double; safecall;
    procedure Set_par_b(ret: Double); safecall;
    function Get_par_b1: Double; safecall;
    procedure Set_par_b1(ret: Double); safecall;
    function Get_par_b2: Double; safecall;
    procedure Set_par_b2(ret: Double); safecall;
    function Get_par_h: Double; safecall;
    procedure Set_par_h(ret: Double); safecall;
    function Get_par_h1: Double; safecall;
    procedure Set_par_h1(ret: Double); safecall;
    function Get_par_h2: Double; safecall;
    procedure Set_par_h2(ret: Double); safecall;
    function Get_par_o1: Double; safecall;
    procedure Set_par_o1(ret: Double); safecall;
    function Get_par_o2: Double; safecall;
    procedure Set_par_o2(ret: Double); safecall;
    property par_a1: Double read Get_par_a1 write Set_par_a1;
    property par_l: Double read Get_par_l write Set_par_l;
    property par_l1: Double read Get_par_l1 write Set_par_l1;
    property par_l2: Double read Get_par_l2 write Set_par_l2;
    property par_b: Double read Get_par_b write Set_par_b;
    property par_b1: Double read Get_par_b1 write Set_par_b1;
    property par_b2: Double read Get_par_b2 write Set_par_b2;
    property par_h: Double read Get_par_h write Set_par_h;
    property par_h1: Double read Get_par_h1 write Set_par_h1;
    property par_h2: Double read Get_par_h2 write Set_par_h2;
    property par_o1: Double read Get_par_o1 write Set_par_o1;
    property par_o2: Double read Get_par_o2 write Set_par_o2;
  end;

// *********************************************************************//
// DispIntf:  IRJointConcreteColumnFoundationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2D350783-FE49-402F-B197-BA08E2315750}
// *********************************************************************//
  IRJointConcreteColumnFoundationDisp = dispinterface
    ['{2D350783-FE49-402F-B197-BA08E2315750}']
    property par_a1: Double dispid 1610743808;
    property par_l: Double dispid 1610743810;
    property par_l1: Double dispid 1610743812;
    property par_l2: Double dispid 1610743814;
    property par_b: Double dispid 1610743816;
    property par_b1: Double dispid 1610743818;
    property par_b2: Double dispid 1610743820;
    property par_h: Double dispid 1610743822;
    property par_h1: Double dispid 1610743824;
    property par_h2: Double dispid 1610743826;
    property par_o1: Double dispid 1610743828;
    property par_o2: Double dispid 1610743830;
  end;

// *********************************************************************//
// Interface: IRJointConcreteColumnLoad
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8C35D16A-B200-4B60-8B8A-5F969DBA3EC3}
// *********************************************************************//
  IRJointConcreteColumnLoad = interface(IRJointLoad)
    ['{8C35D16A-B200-4B60-8B8A-5F969DBA3EC3}']
    function Get_FX: Double; safecall;
    procedure Set_FX(ret: Double); safecall;
    function Get_FY: Double; safecall;
    procedure Set_FY(ret: Double); safecall;
    function Get_FZ: Double; safecall;
    procedure Set_FZ(ret: Double); safecall;
    function Get_MY: Double; safecall;
    procedure Set_MY(ret: Double); safecall;
    function Get_MZ: Double; safecall;
    procedure Set_MZ(ret: Double); safecall;
    function Get_FxAssemb: Double; safecall;
    procedure Set_FxAssemb(ret: Double); safecall;
    property FX: Double read Get_FX write Set_FX;
    property FY: Double read Get_FY write Set_FY;
    property FZ: Double read Get_FZ write Set_FZ;
    property MY: Double read Get_MY write Set_MY;
    property MZ: Double read Get_MZ write Set_MZ;
    property FxAssemb: Double read Get_FxAssemb write Set_FxAssemb;
  end;

// *********************************************************************//
// DispIntf:  IRJointConcreteColumnLoadDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8C35D16A-B200-4B60-8B8A-5F969DBA3EC3}
// *********************************************************************//
  IRJointConcreteColumnLoadDisp = dispinterface
    ['{8C35D16A-B200-4B60-8B8A-5F969DBA3EC3}']
    property FX: Double dispid 1610809344;
    property FY: Double dispid 1610809346;
    property FZ: Double dispid 1610809348;
    property MY: Double dispid 1610809350;
    property MZ: Double dispid 1610809352;
    property FxAssemb: Double dispid 1610809354;
    property Cases: IRobotSelection readonly dispid 1610743808;
    property type_: IRJointLoadType dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRJointAngleBolts
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C135B0E2-2714-11D4-B808-0050DA76755E}
// *********************************************************************//
  IRJointAngleBolts = interface(IDispatch)
    ['{C135B0E2-2714-11D4-B808-0050DA76755E}']
    function Get_Diameter: Integer; safecall;
    function Get__className: WideString; safecall;
    procedure Set__className(const ret: WideString); safecall;
    function Get_DiameterName: WideString; safecall;
    procedure Set_DiameterName(const ret: WideString); safecall;
    function Get_Friction: Double; safecall;
    procedure Set_Friction(ret: Double); safecall;
    function Get_Area: Double; safecall;
    function Get_Rows: Integer; safecall;
    procedure Set_Rows(ret: Integer); safecall;
    function Get_DistFromUpperEdge: Double; safecall;
    procedure Set_DistFromUpperEdge(ret: Double); safecall;
    function Get_DistFromWeb: Double; safecall;
    procedure Set_DistFromWeb(ret: Double); safecall;
    function Get_Spacing: Double; safecall;
    procedure Set_Spacing(ret: Double); safecall;
    function Get_ShearPortion: IRJointBoltShearPortion; safecall;
    procedure Set_ShearPortion(ret: IRJointBoltShearPortion); safecall;
    property Diameter: Integer read Get_Diameter;
    property _className: WideString read Get__className write Set__className;
    property DiameterName: WideString read Get_DiameterName write Set_DiameterName;
    property Friction: Double read Get_Friction write Set_Friction;
    property Area: Double read Get_Area;
    property Rows: Integer read Get_Rows write Set_Rows;
    property DistFromUpperEdge: Double read Get_DistFromUpperEdge write Set_DistFromUpperEdge;
    property DistFromWeb: Double read Get_DistFromWeb write Set_DistFromWeb;
    property Spacing: Double read Get_Spacing write Set_Spacing;
    property ShearPortion: IRJointBoltShearPortion read Get_ShearPortion write Set_ShearPortion;
  end;

// *********************************************************************//
// DispIntf:  IRJointAngleBoltsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C135B0E2-2714-11D4-B808-0050DA76755E}
// *********************************************************************//
  IRJointAngleBoltsDisp = dispinterface
    ['{C135B0E2-2714-11D4-B808-0050DA76755E}']
    property Diameter: Integer readonly dispid 1610743808;
    property _className: WideString dispid 1610743809;
    property DiameterName: WideString dispid 1610743811;
    property Friction: Double dispid 1610743813;
    property Area: Double readonly dispid 1610743815;
    property Rows: Integer dispid 1610743816;
    property DistFromUpperEdge: Double dispid 1610743818;
    property DistFromWeb: Double dispid 1610743820;
    property Spacing: Double dispid 1610743822;
    property ShearPortion: IRJointBoltShearPortion dispid 1610743824;
  end;

// *********************************************************************//
// Interface: IRJointAngle
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C135B0E4-2714-11D4-B808-0050DA76755E}
// *********************************************************************//
  IRJointAngle = interface(IDispatch)
    ['{C135B0E4-2714-11D4-B808-0050DA76755E}']
    function Get_type_: IRJointAngleType; safecall;
    procedure Set_type_(ret: IRJointAngleType); safecall;
    function Get_Profile: IRJointProfile; safecall;
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_DistFromUpperBeamEdge: Double; safecall;
    procedure Set_DistFromUpperBeamEdge(ret: Double); safecall;
    function Get_ProfilePosition: IRJointAngleProfilePosition; safecall;
    procedure Set_ProfilePosition(ret: IRJointAngleProfilePosition); safecall;
    property type_: IRJointAngleType read Get_type_ write Set_type_;
    property Profile: IRJointProfile read Get_Profile;
    property Length: Double read Get_Length write Set_Length;
    property DistFromUpperBeamEdge: Double read Get_DistFromUpperBeamEdge write Set_DistFromUpperBeamEdge;
    property ProfilePosition: IRJointAngleProfilePosition read Get_ProfilePosition write Set_ProfilePosition;
  end;

// *********************************************************************//
// DispIntf:  IRJointAngleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C135B0E4-2714-11D4-B808-0050DA76755E}
// *********************************************************************//
  IRJointAngleDisp = dispinterface
    ['{C135B0E4-2714-11D4-B808-0050DA76755E}']
    property type_: IRJointAngleType dispid 1610743808;
    property Profile: IRJointProfile readonly dispid 1610743810;
    property Length: Double dispid 1610743811;
    property DistFromUpperBeamEdge: Double dispid 1610743813;
    property ProfilePosition: IRJointAngleProfilePosition dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRJointBeamCut
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C135B0E6-2714-11D4-B808-0050DA76755E}
// *********************************************************************//
  IRJointBeamCut = interface(IDispatch)
    ['{C135B0E6-2714-11D4-B808-0050DA76755E}']
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_HeightUpper: Double; safecall;
    procedure Set_HeightUpper(ret: Double); safecall;
    function Get_HeightLower: Double; safecall;
    procedure Set_HeightLower(ret: Double); safecall;
    property Length: Double read Get_Length write Set_Length;
    property HeightUpper: Double read Get_HeightUpper write Set_HeightUpper;
    property HeightLower: Double read Get_HeightLower write Set_HeightLower;
  end;

// *********************************************************************//
// DispIntf:  IRJointBeamCutDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C135B0E6-2714-11D4-B808-0050DA76755E}
// *********************************************************************//
  IRJointBeamCutDisp = dispinterface
    ['{C135B0E6-2714-11D4-B808-0050DA76755E}']
    property Length: Double dispid 1610743808;
    property HeightUpper: Double dispid 1610743810;
    property HeightLower: Double dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRJointWithAngles
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C135B0E8-2714-11D4-B808-0050DA76755E}
// *********************************************************************//
  IRJointWithAngles = interface(IRJointConnection)
    ['{C135B0E8-2714-11D4-B808-0050DA76755E}']
    function Get_BeamBolts: IRJointAngleBolts; safecall;
    function Get_ColumnBolts: IRJointAngleBolts; safecall;
    function Get_Distance: Double; safecall;
    procedure Set_Distance(ret: Double); safecall;
    function Get_BeamCut: IRJointBeamCut; safecall;
    function Get_Angle: IRJointAngle; safecall;
    function Get_BeamProfile: IRJointProfile; safecall;
    function Get_ColumnProfile: IRJointProfile; safecall;
    function Get_IsShearPortionAllBolts: WordBool; safecall;
    procedure Set_IsShearPortionAllBolts(ret: WordBool); safecall;
    function Get_ShearPortionAllBolts: IRJointBoltShearPortion; safecall;
    procedure Set_ShearPortionAllBolts(ret: IRJointBoltShearPortion); safecall;
    property BeamBolts: IRJointAngleBolts read Get_BeamBolts;
    property ColumnBolts: IRJointAngleBolts read Get_ColumnBolts;
    property Distance: Double read Get_Distance write Set_Distance;
    property BeamCut: IRJointBeamCut read Get_BeamCut;
    property Angle: IRJointAngle read Get_Angle;
    property BeamProfile: IRJointProfile read Get_BeamProfile;
    property ColumnProfile: IRJointProfile read Get_ColumnProfile;
    property IsShearPortionAllBolts: WordBool read Get_IsShearPortionAllBolts write Set_IsShearPortionAllBolts;
    property ShearPortionAllBolts: IRJointBoltShearPortion read Get_ShearPortionAllBolts write Set_ShearPortionAllBolts;
  end;

// *********************************************************************//
// DispIntf:  IRJointWithAnglesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C135B0E8-2714-11D4-B808-0050DA76755E}
// *********************************************************************//
  IRJointWithAnglesDisp = dispinterface
    ['{C135B0E8-2714-11D4-B808-0050DA76755E}']
    property BeamBolts: IRJointAngleBolts readonly dispid 1610809344;
    property ColumnBolts: IRJointAngleBolts readonly dispid 1610809345;
    property Distance: Double dispid 1610809346;
    property BeamCut: IRJointBeamCut readonly dispid 1610809348;
    property Angle: IRJointAngle readonly dispid 1610809349;
    property BeamProfile: IRJointProfile readonly dispid 1610809350;
    property ColumnProfile: IRJointProfile readonly dispid 1610809351;
    property IsShearPortionAllBolts: WordBool dispid 1610809352;
    property ShearPortionAllBolts: IRJointBoltShearPortion dispid 1610809354;
    property WFRelPos: IRJointWebFlangeRelativePos dispid 1610743808;
    property type_: IRJointConnectionType readonly dispid 1610743810;
    procedure SetToRobot(const info: IRJointConnectionInfo); dispid 1610743811;
    procedure GetFromRobot(const info: IRJointConnectionInfo); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRJointAngleLoad
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {66DF03B2-2B23-11D4-B80B-0050DA76755E}
// *********************************************************************//
  IRJointAngleLoad = interface(IRJointLoad)
    ['{66DF03B2-2B23-11D4-B80B-0050DA76755E}']
    function Get_FZ: Double; safecall;
    procedure Set_FZ(ret: Double); safecall;
    property FZ: Double read Get_FZ write Set_FZ;
  end;

// *********************************************************************//
// DispIntf:  IRJointAngleLoadDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {66DF03B2-2B23-11D4-B80B-0050DA76755E}
// *********************************************************************//
  IRJointAngleLoadDisp = dispinterface
    ['{66DF03B2-2B23-11D4-B80B-0050DA76755E}']
    property FZ: Double dispid 1610809344;
    property Cases: IRobotSelection readonly dispid 1610743808;
    property type_: IRJointLoadType dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRJointTubeFlangeProfile
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9EFFC6A2-362C-11D4-B817-0050DA76755E}
// *********************************************************************//
  IRJointTubeFlangeProfile = interface(IDispatch)
    ['{9EFFC6A2-362C-11D4-B817-0050DA76755E}']
    function Get_Section: WideString; safecall;
    procedure Set_Section(const ret: WideString); safecall;
    function Get_Excentr: Double; safecall;
    procedure Set_Excentr(ret: Double); safecall;
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    function Get_BarNumber: Integer; safecall;
    procedure Set_BarNumber(ret: Integer); safecall;
    function Get_Exist: WordBool; safecall;
    function Get_Profile: IRJointProfile; safecall;
    function Get_Gamma: Double; safecall;
    procedure Set_Gamma(ret: Double); safecall;
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    property Section: WideString read Get_Section write Set_Section;
    property Excentr: Double read Get_Excentr write Set_Excentr;
    property Material: WideString read Get_Material write Set_Material;
    property BarNumber: Integer read Get_BarNumber write Set_BarNumber;
    property Exist: WordBool read Get_Exist;
    property Profile: IRJointProfile read Get_Profile;
    property Gamma: Double read Get_Gamma write Set_Gamma;
    property Length: Double read Get_Length write Set_Length;
  end;

// *********************************************************************//
// DispIntf:  IRJointTubeFlangeProfileDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9EFFC6A2-362C-11D4-B817-0050DA76755E}
// *********************************************************************//
  IRJointTubeFlangeProfileDisp = dispinterface
    ['{9EFFC6A2-362C-11D4-B817-0050DA76755E}']
    property Section: WideString dispid 1610743808;
    property Excentr: Double dispid 1610743810;
    property Material: WideString dispid 1610743812;
    property BarNumber: Integer dispid 1610743814;
    property Exist: WordBool readonly dispid 1610743816;
    property Profile: IRJointProfile readonly dispid 1610743817;
    property Gamma: Double dispid 1610743818;
    property Length: Double dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRJointTubeDiagProfile
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9EFFC6A4-362C-11D4-B817-0050DA76755E}
// *********************************************************************//
  IRJointTubeDiagProfile = interface(IDispatch)
    ['{9EFFC6A4-362C-11D4-B817-0050DA76755E}']
    function Get_Section: WideString; safecall;
    procedure Set_Section(const ret: WideString); safecall;
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_Angle: Double; safecall;
    procedure Set_Angle(ret: Double); safecall;
    function Get_Gap: Double; safecall;
    procedure Set_Gap(ret: Double); safecall;
    function Get_Overlap: Double; safecall;
    procedure Set_Overlap(ret: Double); safecall;
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    function Get_BarNumber: Integer; safecall;
    procedure Set_BarNumber(ret: Integer); safecall;
    function Get_Exist: WordBool; safecall;
    function Get_Profile: IRJointProfile; safecall;
    function Get_Gamma: Double; safecall;
    procedure Set_Gamma(ret: Double); safecall;
    property Section: WideString read Get_Section write Set_Section;
    property Length: Double read Get_Length write Set_Length;
    property Angle: Double read Get_Angle write Set_Angle;
    property Gap: Double read Get_Gap write Set_Gap;
    property Overlap: Double read Get_Overlap write Set_Overlap;
    property Material: WideString read Get_Material write Set_Material;
    property BarNumber: Integer read Get_BarNumber write Set_BarNumber;
    property Exist: WordBool read Get_Exist;
    property Profile: IRJointProfile read Get_Profile;
    property Gamma: Double read Get_Gamma write Set_Gamma;
  end;

// *********************************************************************//
// DispIntf:  IRJointTubeDiagProfileDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9EFFC6A4-362C-11D4-B817-0050DA76755E}
// *********************************************************************//
  IRJointTubeDiagProfileDisp = dispinterface
    ['{9EFFC6A4-362C-11D4-B817-0050DA76755E}']
    property Section: WideString dispid 1610743808;
    property Length: Double dispid 1610743810;
    property Angle: Double dispid 1610743812;
    property Gap: Double dispid 1610743814;
    property Overlap: Double dispid 1610743816;
    property Material: WideString dispid 1610743818;
    property BarNumber: Integer dispid 1610743820;
    property Exist: WordBool readonly dispid 1610743822;
    property Profile: IRJointProfile readonly dispid 1610743823;
    property Gamma: Double dispid 1610743824;
  end;

// *********************************************************************//
// Interface: IRJointTubePostProfile
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9EFFC6A6-362C-11D4-B817-0050DA76755E}
// *********************************************************************//
  IRJointTubePostProfile = interface(IDispatch)
    ['{9EFFC6A6-362C-11D4-B817-0050DA76755E}']
    function Get_Section: WideString; safecall;
    procedure Set_Section(const ret: WideString); safecall;
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    function Get_Exist: WordBool; safecall;
    function Get_BarNumber: Integer; safecall;
    procedure Set_BarNumber(ret: Integer); safecall;
    function Get_Profile: IRJointProfile; safecall;
    function Get_Gamma: Double; safecall;
    procedure Set_Gamma(ret: Double); safecall;
    property Section: WideString read Get_Section write Set_Section;
    property Length: Double read Get_Length write Set_Length;
    property Material: WideString read Get_Material write Set_Material;
    property Exist: WordBool read Get_Exist;
    property BarNumber: Integer read Get_BarNumber write Set_BarNumber;
    property Profile: IRJointProfile read Get_Profile;
    property Gamma: Double read Get_Gamma write Set_Gamma;
  end;

// *********************************************************************//
// DispIntf:  IRJointTubePostProfileDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9EFFC6A6-362C-11D4-B817-0050DA76755E}
// *********************************************************************//
  IRJointTubePostProfileDisp = dispinterface
    ['{9EFFC6A6-362C-11D4-B817-0050DA76755E}']
    property Section: WideString dispid 1610743808;
    property Length: Double dispid 1610743810;
    property Material: WideString dispid 1610743812;
    property Exist: WordBool readonly dispid 1610743814;
    property BarNumber: Integer dispid 1610743815;
    property Profile: IRJointProfile readonly dispid 1610743817;
    property Gamma: Double dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRJointTube
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CFF9DD54-35FF-11D4-B817-0050DA76755E}
// *********************************************************************//
  IRJointTube = interface(IRJointConnection)
    ['{CFF9DD54-35FF-11D4-B817-0050DA76755E}']
    function Get_TubeType: IRJointTubeType; safecall;
    procedure Set_TubeType(ret: IRJointTubeType); safecall;
    function Get_Flange: IRJointTubeFlangeProfile; safecall;
    function Get_StiffMaterial: WideString; safecall;
    procedure Set_StiffMaterial(const ret: WideString); safecall;
    function Get_DiagLeftUpper: IRJointTubeDiagProfile; safecall;
    function Get_DiagRightUpper: IRJointTubeDiagProfile; safecall;
    function Get_DiagLeftLower: IRJointTubeDiagProfile; safecall;
    function Get_PostUpper: IRJointTubePostProfile; safecall;
    function Get_StiffHoriz: IRJointPlate; safecall;
    function Get_StiffLateral: IRJointPlate; safecall;
    function Get_WeldDiag: IRJointWeld; safecall;
    function Get_WeldStiff: IRJointWeld; safecall;
    function Get_StiffHBracketMaterial: WideString; safecall;
    procedure Set_StiffHBracketMaterial(const ret: WideString); safecall;
    function Get_TransversePlate: IRJointPlate; safecall;
    function Get_TransversePlateMaterial: WideString; safecall;
    procedure Set_TransversePlateMaterial(const ret: WideString); safecall;
    function Get_IsStiffWebChordDiagLeft: WordBool; safecall;
    procedure Set_IsStiffWebChordDiagLeft(ret: WordBool); safecall;
    function Get_IsStiffWebChordDiagRight: WordBool; safecall;
    procedure Set_IsStiffWebChordDiagRight(ret: WordBool); safecall;
    function Get_IsStiffWebChordPost: WordBool; safecall;
    procedure Set_IsStiffWebChordPost(ret: WordBool); safecall;
    function Get_ThickStiffWebChord: Double; safecall;
    procedure Set_ThickStiffWebChord(ret: Double); safecall;
    function Get_WeldStiffWebChord: IRJointWeld; safecall;
    function Get_IsEccentricityTake: WordBool; safecall;
    procedure Set_IsEccentricityTake(ret: WordBool); safecall;
    function Get_TransversePlateLeft: IRJointPlate; safecall;
    function Get_TransversePlateLeftMaterial: WideString; safecall;
    procedure Set_TransversePlateLeftMaterial(const ret: WideString); safecall;
    function Get_WeldTransPlateLeft: IRJointWeld; safecall;
    function Get_WeldTransPlate: IRJointWeld; safecall;
    property TubeType: IRJointTubeType read Get_TubeType write Set_TubeType;
    property Flange: IRJointTubeFlangeProfile read Get_Flange;
    property StiffMaterial: WideString read Get_StiffMaterial write Set_StiffMaterial;
    property DiagLeftUpper: IRJointTubeDiagProfile read Get_DiagLeftUpper;
    property DiagRightUpper: IRJointTubeDiagProfile read Get_DiagRightUpper;
    property DiagLeftLower: IRJointTubeDiagProfile read Get_DiagLeftLower;
    property PostUpper: IRJointTubePostProfile read Get_PostUpper;
    property StiffHoriz: IRJointPlate read Get_StiffHoriz;
    property StiffLateral: IRJointPlate read Get_StiffLateral;
    property WeldDiag: IRJointWeld read Get_WeldDiag;
    property WeldStiff: IRJointWeld read Get_WeldStiff;
    property StiffHBracketMaterial: WideString read Get_StiffHBracketMaterial write Set_StiffHBracketMaterial;
    property TransversePlate: IRJointPlate read Get_TransversePlate;
    property TransversePlateMaterial: WideString read Get_TransversePlateMaterial write Set_TransversePlateMaterial;
    property IsStiffWebChordDiagLeft: WordBool read Get_IsStiffWebChordDiagLeft write Set_IsStiffWebChordDiagLeft;
    property IsStiffWebChordDiagRight: WordBool read Get_IsStiffWebChordDiagRight write Set_IsStiffWebChordDiagRight;
    property IsStiffWebChordPost: WordBool read Get_IsStiffWebChordPost write Set_IsStiffWebChordPost;
    property ThickStiffWebChord: Double read Get_ThickStiffWebChord write Set_ThickStiffWebChord;
    property WeldStiffWebChord: IRJointWeld read Get_WeldStiffWebChord;
    property IsEccentricityTake: WordBool read Get_IsEccentricityTake write Set_IsEccentricityTake;
    property TransversePlateLeft: IRJointPlate read Get_TransversePlateLeft;
    property TransversePlateLeftMaterial: WideString read Get_TransversePlateLeftMaterial write Set_TransversePlateLeftMaterial;
    property WeldTransPlateLeft: IRJointWeld read Get_WeldTransPlateLeft;
    property WeldTransPlate: IRJointWeld read Get_WeldTransPlate;
  end;

// *********************************************************************//
// DispIntf:  IRJointTubeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CFF9DD54-35FF-11D4-B817-0050DA76755E}
// *********************************************************************//
  IRJointTubeDisp = dispinterface
    ['{CFF9DD54-35FF-11D4-B817-0050DA76755E}']
    property TubeType: IRJointTubeType dispid 1610809344;
    property Flange: IRJointTubeFlangeProfile readonly dispid 1610809346;
    property StiffMaterial: WideString dispid 1610809347;
    property DiagLeftUpper: IRJointTubeDiagProfile readonly dispid 1610809349;
    property DiagRightUpper: IRJointTubeDiagProfile readonly dispid 1610809350;
    property DiagLeftLower: IRJointTubeDiagProfile readonly dispid 1610809351;
    property PostUpper: IRJointTubePostProfile readonly dispid 1610809352;
    property StiffHoriz: IRJointPlate readonly dispid 1610809353;
    property StiffLateral: IRJointPlate readonly dispid 1610809354;
    property WeldDiag: IRJointWeld readonly dispid 1610809355;
    property WeldStiff: IRJointWeld readonly dispid 1610809356;
    property StiffHBracketMaterial: WideString dispid 1610809357;
    property TransversePlate: IRJointPlate readonly dispid 1610809359;
    property TransversePlateMaterial: WideString dispid 1610809360;
    property IsStiffWebChordDiagLeft: WordBool dispid 1610809362;
    property IsStiffWebChordDiagRight: WordBool dispid 1610809364;
    property IsStiffWebChordPost: WordBool dispid 1610809366;
    property ThickStiffWebChord: Double dispid 1610809368;
    property WeldStiffWebChord: IRJointWeld readonly dispid 1610809370;
    property IsEccentricityTake: WordBool dispid 1610809371;
    property TransversePlateLeft: IRJointPlate readonly dispid 1610809373;
    property TransversePlateLeftMaterial: WideString dispid 1610809374;
    property WeldTransPlateLeft: IRJointWeld readonly dispid 1610809376;
    property WeldTransPlate: IRJointWeld readonly dispid 1610809377;
    property WFRelPos: IRJointWebFlangeRelativePos dispid 1610743808;
    property type_: IRJointConnectionType readonly dispid 1610743810;
    procedure SetToRobot(const info: IRJointConnectionInfo); dispid 1610743811;
    procedure GetFromRobot(const info: IRJointConnectionInfo); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRJointTubeLoad
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {43FAA522-3AB3-11D4-B81C-0050DA76755E}
// *********************************************************************//
  IRJointTubeLoad = interface(IRJointLoad)
    ['{43FAA522-3AB3-11D4-B81C-0050DA76755E}']
    function Get_FlangeN: Double; safecall;
    procedure Set_FlangeN(ret: Double); safecall;
    function Get_FlangeQ: Double; safecall;
    procedure Set_FlangeQ(ret: Double); safecall;
    function Get_FlangeM: Double; safecall;
    procedure Set_FlangeM(ret: Double); safecall;
    function Get_DiagLeftUpperN: Double; safecall;
    procedure Set_DiagLeftUpperN(ret: Double); safecall;
    function Get_DiagLeftUpperM: Double; safecall;
    procedure Set_DiagLeftUpperM(ret: Double); safecall;
    function Get_DiagRightUpperN: Double; safecall;
    procedure Set_DiagRightUpperN(ret: Double); safecall;
    function Get_DiagRightUpperM: Double; safecall;
    procedure Set_DiagRightUpperM(ret: Double); safecall;
    function Get_PostUpperN: Double; safecall;
    procedure Set_PostUpperN(ret: Double); safecall;
    function Get_PostUpperM: Double; safecall;
    procedure Set_PostUpperM(ret: Double); safecall;
    function Get_DiagLeftLowerN: Double; safecall;
    procedure Set_DiagLeftLowerN(ret: Double); safecall;
    function Get_DiagLeftLowerM: Double; safecall;
    procedure Set_DiagLeftLowerM(ret: Double); safecall;
    property FlangeN: Double read Get_FlangeN write Set_FlangeN;
    property FlangeQ: Double read Get_FlangeQ write Set_FlangeQ;
    property FlangeM: Double read Get_FlangeM write Set_FlangeM;
    property DiagLeftUpperN: Double read Get_DiagLeftUpperN write Set_DiagLeftUpperN;
    property DiagLeftUpperM: Double read Get_DiagLeftUpperM write Set_DiagLeftUpperM;
    property DiagRightUpperN: Double read Get_DiagRightUpperN write Set_DiagRightUpperN;
    property DiagRightUpperM: Double read Get_DiagRightUpperM write Set_DiagRightUpperM;
    property PostUpperN: Double read Get_PostUpperN write Set_PostUpperN;
    property PostUpperM: Double read Get_PostUpperM write Set_PostUpperM;
    property DiagLeftLowerN: Double read Get_DiagLeftLowerN write Set_DiagLeftLowerN;
    property DiagLeftLowerM: Double read Get_DiagLeftLowerM write Set_DiagLeftLowerM;
  end;

// *********************************************************************//
// DispIntf:  IRJointTubeLoadDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {43FAA522-3AB3-11D4-B81C-0050DA76755E}
// *********************************************************************//
  IRJointTubeLoadDisp = dispinterface
    ['{43FAA522-3AB3-11D4-B81C-0050DA76755E}']
    property FlangeN: Double dispid 1610809344;
    property FlangeQ: Double dispid 1610809346;
    property FlangeM: Double dispid 1610809348;
    property DiagLeftUpperN: Double dispid 1610809350;
    property DiagLeftUpperM: Double dispid 1610809352;
    property DiagRightUpperN: Double dispid 1610809354;
    property DiagRightUpperM: Double dispid 1610809356;
    property PostUpperN: Double dispid 1610809358;
    property PostUpperM: Double dispid 1610809360;
    property DiagLeftLowerN: Double dispid 1610809362;
    property DiagLeftLowerM: Double dispid 1610809364;
    property Cases: IRobotSelection readonly dispid 1610743808;
    property type_: IRJointLoadType dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRJointGussetBoltsDiag
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01410332-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetBoltsDiag = interface(IDispatch)
    ['{01410332-4B49-11D4-B832-0050DA76755E}']
    function Get_Diameter: Double; safecall;
    procedure Set_Diameter(ret: Double); safecall;
    function Get__className: WideString; safecall;
    procedure Set__className(const ret: WideString); safecall;
    function Get_Friction: Double; safecall;
    procedure Set_Friction(ret: Double); safecall;
    function Get_Rows: Integer; safecall;
    procedure Set_Rows(ret: Integer); safecall;
    function Get_Spacing: IRobotValuesArray; safecall;
    function Get_DistanceH1: Double; safecall;
    procedure Set_DistanceH1(ret: Double); safecall;
    function Get_BoltAxisShift: Double; safecall;
    procedure Set_BoltAxisShift(ret: Double); safecall;
    function Get_ShearPortion: IRJointBoltShearPortion; safecall;
    procedure Set_ShearPortion(ret: IRJointBoltShearPortion); safecall;
    property Diameter: Double read Get_Diameter write Set_Diameter;
    property _className: WideString read Get__className write Set__className;
    property Friction: Double read Get_Friction write Set_Friction;
    property Rows: Integer read Get_Rows write Set_Rows;
    property Spacing: IRobotValuesArray read Get_Spacing;
    property DistanceH1: Double read Get_DistanceH1 write Set_DistanceH1;
    property BoltAxisShift: Double read Get_BoltAxisShift write Set_BoltAxisShift;
    property ShearPortion: IRJointBoltShearPortion read Get_ShearPortion write Set_ShearPortion;
  end;

// *********************************************************************//
// DispIntf:  IRJointGussetBoltsDiagDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01410332-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetBoltsDiagDisp = dispinterface
    ['{01410332-4B49-11D4-B832-0050DA76755E}']
    property Diameter: Double dispid 1610743808;
    property _className: WideString dispid 1610743810;
    property Friction: Double dispid 1610743812;
    property Rows: Integer dispid 1610743814;
    property Spacing: IRobotValuesArray readonly dispid 1610743816;
    property DistanceH1: Double dispid 1610743817;
    property BoltAxisShift: Double dispid 1610743819;
    property ShearPortion: IRJointBoltShearPortion dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IRJointGussetWeldsDiag
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01410334-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetWeldsDiag = interface(IDispatch)
    ['{01410334-4B49-11D4-B832-0050DA76755E}']
    function Get_ThickFlange: Double; safecall;
    procedure Set_ThickFlange(ret: Double); safecall;
    function Get_ThickCorner: Double; safecall;
    procedure Set_ThickCorner(ret: Double); safecall;
    function Get_Length1: Double; safecall;
    procedure Set_Length1(ret: Double); safecall;
    function Get_Length2: Double; safecall;
    procedure Set_Length2(ret: Double); safecall;
    property ThickFlange: Double read Get_ThickFlange write Set_ThickFlange;
    property ThickCorner: Double read Get_ThickCorner write Set_ThickCorner;
    property Length1: Double read Get_Length1 write Set_Length1;
    property Length2: Double read Get_Length2 write Set_Length2;
  end;

// *********************************************************************//
// DispIntf:  IRJointGussetWeldsDiagDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01410334-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetWeldsDiagDisp = dispinterface
    ['{01410334-4B49-11D4-B832-0050DA76755E}']
    property ThickFlange: Double dispid 1610743808;
    property ThickCorner: Double dispid 1610743810;
    property Length1: Double dispid 1610743812;
    property Length2: Double dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRJointGussetDiagonale
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01410336-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetDiagonale = interface(IDispatch)
    ['{01410336-4B49-11D4-B832-0050DA76755E}']
    function Get_Profile: IRJointProfile; safecall;
    function Get_BoltsDiag: IRJointGussetBoltsDiag; safecall;
    function Get_WeldsDiag: IRJointGussetWeldsDiag; safecall;
    function Get_DistanceEC: Double; safecall;
    procedure Set_DistanceEC(ret: Double); safecall;
    function Get_Position: IRJointGussetDiagonalePositionType; safecall;
    procedure Set_Position(ret: IRJointGussetDiagonalePositionType); safecall;
    function Get_Exist: WordBool; safecall;
    function Get_BarNumber: Integer; safecall;
    procedure Set_BarNumber(ret: Integer); safecall;
    procedure Set_Exist(ret: WordBool); safecall;
    property Profile: IRJointProfile read Get_Profile;
    property BoltsDiag: IRJointGussetBoltsDiag read Get_BoltsDiag;
    property WeldsDiag: IRJointGussetWeldsDiag read Get_WeldsDiag;
    property DistanceEC: Double read Get_DistanceEC write Set_DistanceEC;
    property Position: IRJointGussetDiagonalePositionType read Get_Position write Set_Position;
    property Exist: WordBool read Get_Exist write Set_Exist;
    property BarNumber: Integer read Get_BarNumber write Set_BarNumber;
  end;

// *********************************************************************//
// DispIntf:  IRJointGussetDiagonaleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01410336-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetDiagonaleDisp = dispinterface
    ['{01410336-4B49-11D4-B832-0050DA76755E}']
    property Profile: IRJointProfile readonly dispid 1610743808;
    property BoltsDiag: IRJointGussetBoltsDiag readonly dispid 1610743809;
    property WeldsDiag: IRJointGussetWeldsDiag readonly dispid 1610743810;
    property DistanceEC: Double dispid 1610743811;
    property Position: IRJointGussetDiagonalePositionType dispid 1610743813;
    property Exist: WordBool dispid 1610743815;
    property BarNumber: Integer dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRJointGussetSimple
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01410338-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetSimple = interface(IRJointConnection)
    ['{01410338-4B49-11D4-B832-0050DA76755E}']
    function Get_ProfilePosition: IRJointGussetSimpleProfilePosition; safecall;
    procedure Set_ProfilePosition(ret: IRJointGussetSimpleProfilePosition); safecall;
    function Get_FixType: IRJointGussetFixType; safecall;
    procedure Set_FixType(ret: IRJointGussetFixType); safecall;
    function Get_Diagonale: IRJointGussetDiagonale; safecall;
    function Get_GussetPlate: IRJointGussetSimplePlate; safecall;
    function Get_Attachment: IRJointGussetSimpleAttachment; safecall;
    function Get_BoltsDimensionNamesVector: IRobotNamesArray; safecall;
    function Get_BoltsClassVector: IRobotNamesArray; safecall;
    function Get_BoltsDimensionsVector: IRobotValuesArray; safecall;
    function Get_IsShearPortionAllBolts: WordBool; safecall;
    procedure Set_IsShearPortionAllBolts(ret: WordBool); safecall;
    function Get_ShearPortionAllBolts: IRJointBoltShearPortion; safecall;
    procedure Set_ShearPortionAllBolts(ret: IRJointBoltShearPortion); safecall;
    property ProfilePosition: IRJointGussetSimpleProfilePosition read Get_ProfilePosition write Set_ProfilePosition;
    property FixType: IRJointGussetFixType read Get_FixType write Set_FixType;
    property Diagonale: IRJointGussetDiagonale read Get_Diagonale;
    property GussetPlate: IRJointGussetSimplePlate read Get_GussetPlate;
    property Attachment: IRJointGussetSimpleAttachment read Get_Attachment;
    property BoltsDimensionNamesVector: IRobotNamesArray read Get_BoltsDimensionNamesVector;
    property BoltsClassVector: IRobotNamesArray read Get_BoltsClassVector;
    property BoltsDimensionsVector: IRobotValuesArray read Get_BoltsDimensionsVector;
    property IsShearPortionAllBolts: WordBool read Get_IsShearPortionAllBolts write Set_IsShearPortionAllBolts;
    property ShearPortionAllBolts: IRJointBoltShearPortion read Get_ShearPortionAllBolts write Set_ShearPortionAllBolts;
  end;

// *********************************************************************//
// DispIntf:  IRJointGussetSimpleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01410338-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetSimpleDisp = dispinterface
    ['{01410338-4B49-11D4-B832-0050DA76755E}']
    property ProfilePosition: IRJointGussetSimpleProfilePosition dispid 1610809344;
    property FixType: IRJointGussetFixType dispid 1610809346;
    property Diagonale: IRJointGussetDiagonale readonly dispid 1610809348;
    property GussetPlate: IRJointGussetSimplePlate readonly dispid 1610809349;
    property Attachment: IRJointGussetSimpleAttachment readonly dispid 1610809350;
    property BoltsDimensionNamesVector: IRobotNamesArray readonly dispid 1610809351;
    property BoltsClassVector: IRobotNamesArray readonly dispid 1610809352;
    property BoltsDimensionsVector: IRobotValuesArray readonly dispid 1610809353;
    property IsShearPortionAllBolts: WordBool dispid 1610809354;
    property ShearPortionAllBolts: IRJointBoltShearPortion dispid 1610809356;
    property WFRelPos: IRJointWebFlangeRelativePos dispid 1610743808;
    property type_: IRJointConnectionType readonly dispid 1610743810;
    procedure SetToRobot(const info: IRJointConnectionInfo); dispid 1610743811;
    procedure GetFromRobot(const info: IRJointConnectionInfo); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRJointGussetSimplePlate
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0141033A-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetSimplePlate = interface(IDispatch)
    ['{0141033A-4B49-11D4-B832-0050DA76755E}']
    function Get_Width: Double; safecall;
    procedure Set_Width(ret: Double); safecall;
    function Get_Height: Double; safecall;
    procedure Set_Height(ret: Double); safecall;
    function Get_Thick: Double; safecall;
    procedure Set_Thick(ret: Double); safecall;
    function Get_DistanceEH: Double; safecall;
    procedure Set_DistanceEH(ret: Double); safecall;
    function Get_DistanceEV: Double; safecall;
    procedure Set_DistanceEV(ret: Double); safecall;
    function Get_DistanceD: Double; safecall;
    procedure Set_DistanceD(ret: Double); safecall;
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    function Get_CornersType: IRJointGussetCornersType; safecall;
    procedure Set_CornersType(ret: IRJointGussetCornersType); safecall;
    function Get_V1: Double; safecall;
    procedure Set_V1(ret: Double); safecall;
    function Get_V2: Double; safecall;
    procedure Set_V2(ret: Double); safecall;
    function Get_V3: Double; safecall;
    procedure Set_V3(ret: Double); safecall;
    function Get_V4: Double; safecall;
    procedure Set_V4(ret: Double); safecall;
    function Get_H1: Double; safecall;
    procedure Set_H1(ret: Double); safecall;
    function Get_H2: Double; safecall;
    procedure Set_H2(ret: Double); safecall;
    function Get_H3: Double; safecall;
    procedure Set_H3(ret: Double); safecall;
    function Get_H4: Double; safecall;
    procedure Set_H4(ret: Double); safecall;
    property Width: Double read Get_Width write Set_Width;
    property Height: Double read Get_Height write Set_Height;
    property Thick: Double read Get_Thick write Set_Thick;
    property DistanceEH: Double read Get_DistanceEH write Set_DistanceEH;
    property DistanceEV: Double read Get_DistanceEV write Set_DistanceEV;
    property DistanceD: Double read Get_DistanceD write Set_DistanceD;
    property Material: WideString read Get_Material write Set_Material;
    property CornersType: IRJointGussetCornersType read Get_CornersType write Set_CornersType;
    property V1: Double read Get_V1 write Set_V1;
    property V2: Double read Get_V2 write Set_V2;
    property V3: Double read Get_V3 write Set_V3;
    property V4: Double read Get_V4 write Set_V4;
    property H1: Double read Get_H1 write Set_H1;
    property H2: Double read Get_H2 write Set_H2;
    property H3: Double read Get_H3 write Set_H3;
    property H4: Double read Get_H4 write Set_H4;
  end;

// *********************************************************************//
// DispIntf:  IRJointGussetSimplePlateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0141033A-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetSimplePlateDisp = dispinterface
    ['{0141033A-4B49-11D4-B832-0050DA76755E}']
    property Width: Double dispid 1610743808;
    property Height: Double dispid 1610743810;
    property Thick: Double dispid 1610743812;
    property DistanceEH: Double dispid 1610743814;
    property DistanceEV: Double dispid 1610743816;
    property DistanceD: Double dispid 1610743818;
    property Material: WideString dispid 1610743820;
    property CornersType: IRJointGussetCornersType dispid 1610743822;
    property V1: Double dispid 1610743824;
    property V2: Double dispid 1610743826;
    property V3: Double dispid 1610743828;
    property V4: Double dispid 1610743830;
    property H1: Double dispid 1610743832;
    property H2: Double dispid 1610743834;
    property H3: Double dispid 1610743836;
    property H4: Double dispid 1610743838;
  end;

// *********************************************************************//
// Interface: IRJointGussetSimpleAttachment
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0141033C-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetSimpleAttachment = interface(IDispatch)
    ['{0141033C-4B49-11D4-B832-0050DA76755E}']
    function Get_FixType: IRJointGussetFixType; safecall;
    procedure Set_FixType(ret: IRJointGussetFixType); safecall;
    function Get_BoltsAttach: IRJointGussetSimpleAttachBolts; safecall;
    function Get_WeldsAttach: IRJointGussetSimpleAttachWelds; safecall;
    function Get_WeldType: IRJointWeldType; safecall;
    procedure Set_WeldType(ret: IRJointWeldType); safecall;
    function Get_IsPlateToMainCorner: Integer; safecall;
    procedure Set_IsPlateToMainCorner(ret: Integer); safecall;
    property FixType: IRJointGussetFixType read Get_FixType write Set_FixType;
    property BoltsAttach: IRJointGussetSimpleAttachBolts read Get_BoltsAttach;
    property WeldsAttach: IRJointGussetSimpleAttachWelds read Get_WeldsAttach;
    property WeldType: IRJointWeldType read Get_WeldType write Set_WeldType;
    property IsPlateToMainCorner: Integer read Get_IsPlateToMainCorner write Set_IsPlateToMainCorner;
  end;

// *********************************************************************//
// DispIntf:  IRJointGussetSimpleAttachmentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0141033C-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetSimpleAttachmentDisp = dispinterface
    ['{0141033C-4B49-11D4-B832-0050DA76755E}']
    property FixType: IRJointGussetFixType dispid 1610743808;
    property BoltsAttach: IRJointGussetSimpleAttachBolts readonly dispid 1610743810;
    property WeldsAttach: IRJointGussetSimpleAttachWelds readonly dispid 1610743811;
    property WeldType: IRJointWeldType dispid 1610743812;
    property IsPlateToMainCorner: Integer dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRJointGussetSimpleAttachBolts
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0141033E-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetSimpleAttachBolts = interface(IDispatch)
    ['{0141033E-4B49-11D4-B832-0050DA76755E}']
    function Get_Diameter: Double; safecall;
    procedure Set_Diameter(ret: Double); safecall;
    function Get__className: WideString; safecall;
    procedure Set__className(const ret: WideString); safecall;
    function Get_Friction: Double; safecall;
    procedure Set_Friction(ret: Double); safecall;
    function Get_Horizontal: IRJointGussetSimpleAttachBoltsHorizontal; safecall;
    function Get_Vertical: IRJointGussetSimpleAttachBoltsVertical; safecall;
    function Get_ShearPortion: IRJointBoltShearPortion; safecall;
    procedure Set_ShearPortion(ret: IRJointBoltShearPortion); safecall;
    property Diameter: Double read Get_Diameter write Set_Diameter;
    property _className: WideString read Get__className write Set__className;
    property Friction: Double read Get_Friction write Set_Friction;
    property Horizontal: IRJointGussetSimpleAttachBoltsHorizontal read Get_Horizontal;
    property Vertical: IRJointGussetSimpleAttachBoltsVertical read Get_Vertical;
    property ShearPortion: IRJointBoltShearPortion read Get_ShearPortion write Set_ShearPortion;
  end;

// *********************************************************************//
// DispIntf:  IRJointGussetSimpleAttachBoltsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0141033E-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetSimpleAttachBoltsDisp = dispinterface
    ['{0141033E-4B49-11D4-B832-0050DA76755E}']
    property Diameter: Double dispid 1610743808;
    property _className: WideString dispid 1610743810;
    property Friction: Double dispid 1610743812;
    property Horizontal: IRJointGussetSimpleAttachBoltsHorizontal readonly dispid 1610743814;
    property Vertical: IRJointGussetSimpleAttachBoltsVertical readonly dispid 1610743815;
    property ShearPortion: IRJointBoltShearPortion dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRJointGussetSimpleAttachBoltsHorizontal
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01410340-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetSimpleAttachBoltsHorizontal = interface(IDispatch)
    ['{01410340-4B49-11D4-B832-0050DA76755E}']
    function Get_Rows: Integer; safecall;
    procedure Set_Rows(ret: Integer); safecall;
    function Get_Spacing: IRobotValuesArray; safecall;
    function Get_DistanceH1: Double; safecall;
    procedure Set_DistanceH1(ret: Double); safecall;
    function Get_DistanceEB: Double; safecall;
    procedure Set_DistanceEB(ret: Double); safecall;
    property Rows: Integer read Get_Rows write Set_Rows;
    property Spacing: IRobotValuesArray read Get_Spacing;
    property DistanceH1: Double read Get_DistanceH1 write Set_DistanceH1;
    property DistanceEB: Double read Get_DistanceEB write Set_DistanceEB;
  end;

// *********************************************************************//
// DispIntf:  IRJointGussetSimpleAttachBoltsHorizontalDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01410340-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetSimpleAttachBoltsHorizontalDisp = dispinterface
    ['{01410340-4B49-11D4-B832-0050DA76755E}']
    property Rows: Integer dispid 1610743808;
    property Spacing: IRobotValuesArray readonly dispid 1610743810;
    property DistanceH1: Double dispid 1610743811;
    property DistanceEB: Double dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRJointGussetSimpleAttachBoltsVertical
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01410342-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetSimpleAttachBoltsVertical = interface(IDispatch)
    ['{01410342-4B49-11D4-B832-0050DA76755E}']
    function Get_Rows: Integer; safecall;
    procedure Set_Rows(ret: Integer); safecall;
    function Get_Spacing: IRobotValuesArray; safecall;
    function Get_DistanceH1: Double; safecall;
    procedure Set_DistanceH1(ret: Double); safecall;
    function Get_DistanceEB: Double; safecall;
    procedure Set_DistanceEB(ret: Double); safecall;
    property Rows: Integer read Get_Rows write Set_Rows;
    property Spacing: IRobotValuesArray read Get_Spacing;
    property DistanceH1: Double read Get_DistanceH1 write Set_DistanceH1;
    property DistanceEB: Double read Get_DistanceEB write Set_DistanceEB;
  end;

// *********************************************************************//
// DispIntf:  IRJointGussetSimpleAttachBoltsVerticalDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01410342-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetSimpleAttachBoltsVerticalDisp = dispinterface
    ['{01410342-4B49-11D4-B832-0050DA76755E}']
    property Rows: Integer dispid 1610743808;
    property Spacing: IRobotValuesArray readonly dispid 1610743810;
    property DistanceH1: Double dispid 1610743811;
    property DistanceEB: Double dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRJointGussetSimpleAttachWelds
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01410344-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetSimpleAttachWelds = interface(IDispatch)
    ['{01410344-4B49-11D4-B832-0050DA76755E}']
    function Get_ThickEdgeB: Double; safecall;
    procedure Set_ThickEdgeB(ret: Double); safecall;
    function Get_ThickEdgeA: Double; safecall;
    procedure Set_ThickEdgeA(ret: Double); safecall;
    property ThickEdgeB: Double read Get_ThickEdgeB write Set_ThickEdgeB;
    property ThickEdgeA: Double read Get_ThickEdgeA write Set_ThickEdgeA;
  end;

// *********************************************************************//
// DispIntf:  IRJointGussetSimpleAttachWeldsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01410344-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetSimpleAttachWeldsDisp = dispinterface
    ['{01410344-4B49-11D4-B832-0050DA76755E}']
    property ThickEdgeB: Double dispid 1610743808;
    property ThickEdgeA: Double dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRJointGussetCrossPlate
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01410346-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetCrossPlate = interface(IDispatch)
    ['{01410346-4B49-11D4-B832-0050DA76755E}']
    function Get_B1: Double; safecall;
    procedure Set_B1(ret: Double); safecall;
    function Get_B2: Double; safecall;
    procedure Set_B2(ret: Double); safecall;
    function Get_B3: Double; safecall;
    procedure Set_B3(ret: Double); safecall;
    function Get_B4: Double; safecall;
    procedure Set_B4(ret: Double); safecall;
    function Get_H1: Double; safecall;
    procedure Set_H1(ret: Double); safecall;
    function Get_H2: Double; safecall;
    procedure Set_H2(ret: Double); safecall;
    function Get_H3: Double; safecall;
    procedure Set_H3(ret: Double); safecall;
    function Get_H4: Double; safecall;
    procedure Set_H4(ret: Double); safecall;
    function Get_Thick: Double; safecall;
    procedure Set_Thick(ret: Double); safecall;
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    function Get_CornersType: IRJointGussetCornersType; safecall;
    procedure Set_CornersType(ret: IRJointGussetCornersType); safecall;
    function Get_CutV1: Double; safecall;
    procedure Set_CutV1(ret: Double); safecall;
    function Get_CutV2: Double; safecall;
    procedure Set_CutV2(ret: Double); safecall;
    function Get_CutV3: Double; safecall;
    procedure Set_CutV3(ret: Double); safecall;
    function Get_CutV4: Double; safecall;
    procedure Set_CutV4(ret: Double); safecall;
    function Get_CutH1: Double; safecall;
    procedure Set_CutH1(ret: Double); safecall;
    function Get_CutH2: Double; safecall;
    procedure Set_CutH2(ret: Double); safecall;
    function Get_CutH3: Double; safecall;
    procedure Set_CutH3(ret: Double); safecall;
    function Get_CutH4: Double; safecall;
    procedure Set_CutH4(ret: Double); safecall;
    function Get_HOffset: Double; safecall;
    procedure Set_HOffset(ret: Double); safecall;
    function Get_VOffset: Double; safecall;
    procedure Set_VOffset(ret: Double); safecall;
    function Get_Height: Double; safecall;
    procedure Set_Height(ret: Double); safecall;
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_HorizontalOffset: Double; safecall;
    procedure Set_HorizontalOffset(ret: Double); safecall;
    property B1: Double read Get_B1 write Set_B1;
    property B2: Double read Get_B2 write Set_B2;
    property B3: Double read Get_B3 write Set_B3;
    property B4: Double read Get_B4 write Set_B4;
    property H1: Double read Get_H1 write Set_H1;
    property H2: Double read Get_H2 write Set_H2;
    property H3: Double read Get_H3 write Set_H3;
    property H4: Double read Get_H4 write Set_H4;
    property Thick: Double read Get_Thick write Set_Thick;
    property Material: WideString read Get_Material write Set_Material;
    property CornersType: IRJointGussetCornersType read Get_CornersType write Set_CornersType;
    property CutV1: Double read Get_CutV1 write Set_CutV1;
    property CutV2: Double read Get_CutV2 write Set_CutV2;
    property CutV3: Double read Get_CutV3 write Set_CutV3;
    property CutV4: Double read Get_CutV4 write Set_CutV4;
    property CutH1: Double read Get_CutH1 write Set_CutH1;
    property CutH2: Double read Get_CutH2 write Set_CutH2;
    property CutH3: Double read Get_CutH3 write Set_CutH3;
    property CutH4: Double read Get_CutH4 write Set_CutH4;
    property HOffset: Double read Get_HOffset write Set_HOffset;
    property VOffset: Double read Get_VOffset write Set_VOffset;
    property Height: Double read Get_Height write Set_Height;
    property Length: Double read Get_Length write Set_Length;
    property HorizontalOffset: Double read Get_HorizontalOffset write Set_HorizontalOffset;
  end;

// *********************************************************************//
// DispIntf:  IRJointGussetCrossPlateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01410346-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetCrossPlateDisp = dispinterface
    ['{01410346-4B49-11D4-B832-0050DA76755E}']
    property B1: Double dispid 1610743808;
    property B2: Double dispid 1610743810;
    property B3: Double dispid 1610743812;
    property B4: Double dispid 1610743814;
    property H1: Double dispid 1610743816;
    property H2: Double dispid 1610743818;
    property H3: Double dispid 1610743820;
    property H4: Double dispid 1610743822;
    property Thick: Double dispid 1610743824;
    property Material: WideString dispid 1610743826;
    property CornersType: IRJointGussetCornersType dispid 1610743828;
    property CutV1: Double dispid 1610743830;
    property CutV2: Double dispid 1610743832;
    property CutV3: Double dispid 1610743834;
    property CutV4: Double dispid 1610743836;
    property CutH1: Double dispid 1610743838;
    property CutH2: Double dispid 1610743840;
    property CutH3: Double dispid 1610743842;
    property CutH4: Double dispid 1610743844;
    property HOffset: Double dispid 1610743846;
    property VOffset: Double dispid 1610743848;
    property Height: Double dispid 1610743850;
    property Length: Double dispid 1610743852;
    property HorizontalOffset: Double dispid 1610743854;
  end;

// *********************************************************************//
// Interface: IRJointGussetCross
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01410348-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetCross = interface(IRJointConnection)
    ['{01410348-4B49-11D4-B832-0050DA76755E}']
    function Get_ProfileCutting: IRJointGussetCrossProfileCutting; safecall;
    procedure Set_ProfileCutting(ret: IRJointGussetCrossProfileCutting); safecall;
    function Get_FixType_LeftU_RightL: IRJointGussetFixType; safecall;
    procedure Set_FixType_LeftU_RightL(ret: IRJointGussetFixType); safecall;
    function Get_FixType_LeftL_RightU: IRJointGussetFixType; safecall;
    procedure Set_FixType_LeftL_RightU(ret: IRJointGussetFixType); safecall;
    function Get_DiagLeftUpper: IRJointGussetDiagonale; safecall;
    function Get_DiagLeftLower: IRJointGussetDiagonale; safecall;
    function Get_DiagRightUpper: IRJointGussetDiagonale; safecall;
    function Get_DiagRightLower: IRJointGussetDiagonale; safecall;
    function Get_GussetPlate: IRJointGussetCrossPlate; safecall;
    function Get_BoltsDimensionNamesVector: IRobotNamesArray; safecall;
    function Get_BoltsClassVector: IRobotNamesArray; safecall;
    function Get_BoltsDimensionsVector: IRobotValuesArray; safecall;
    function Get_FixType_LeftUpper: IRJointGussetFixType; safecall;
    procedure Set_FixType_LeftUpper(ret: IRJointGussetFixType); safecall;
    function Get_FixType_RightUpper: IRJointGussetFixType; safecall;
    procedure Set_FixType_RightUpper(ret: IRJointGussetFixType); safecall;
    function Get_FixType_LeftLower: IRJointGussetFixType; safecall;
    procedure Set_FixType_LeftLower(ret: IRJointGussetFixType); safecall;
    function Get_FixType_RightLower: IRJointGussetFixType; safecall;
    procedure Set_FixType_RightLower(ret: IRJointGussetFixType); safecall;
    function Get_IsShearPortionAllBolts: WordBool; safecall;
    procedure Set_IsShearPortionAllBolts(ret: WordBool); safecall;
    function Get_ShearPortionAllBolts: IRJointBoltShearPortion; safecall;
    procedure Set_ShearPortionAllBolts(ret: IRJointBoltShearPortion); safecall;
    property ProfileCutting: IRJointGussetCrossProfileCutting read Get_ProfileCutting write Set_ProfileCutting;
    property FixType_LeftU_RightL: IRJointGussetFixType read Get_FixType_LeftU_RightL write Set_FixType_LeftU_RightL;
    property FixType_LeftL_RightU: IRJointGussetFixType read Get_FixType_LeftL_RightU write Set_FixType_LeftL_RightU;
    property DiagLeftUpper: IRJointGussetDiagonale read Get_DiagLeftUpper;
    property DiagLeftLower: IRJointGussetDiagonale read Get_DiagLeftLower;
    property DiagRightUpper: IRJointGussetDiagonale read Get_DiagRightUpper;
    property DiagRightLower: IRJointGussetDiagonale read Get_DiagRightLower;
    property GussetPlate: IRJointGussetCrossPlate read Get_GussetPlate;
    property BoltsDimensionNamesVector: IRobotNamesArray read Get_BoltsDimensionNamesVector;
    property BoltsClassVector: IRobotNamesArray read Get_BoltsClassVector;
    property BoltsDimensionsVector: IRobotValuesArray read Get_BoltsDimensionsVector;
    property FixType_LeftUpper: IRJointGussetFixType read Get_FixType_LeftUpper write Set_FixType_LeftUpper;
    property FixType_RightUpper: IRJointGussetFixType read Get_FixType_RightUpper write Set_FixType_RightUpper;
    property FixType_LeftLower: IRJointGussetFixType read Get_FixType_LeftLower write Set_FixType_LeftLower;
    property FixType_RightLower: IRJointGussetFixType read Get_FixType_RightLower write Set_FixType_RightLower;
    property IsShearPortionAllBolts: WordBool read Get_IsShearPortionAllBolts write Set_IsShearPortionAllBolts;
    property ShearPortionAllBolts: IRJointBoltShearPortion read Get_ShearPortionAllBolts write Set_ShearPortionAllBolts;
  end;

// *********************************************************************//
// DispIntf:  IRJointGussetCrossDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {01410348-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetCrossDisp = dispinterface
    ['{01410348-4B49-11D4-B832-0050DA76755E}']
    property ProfileCutting: IRJointGussetCrossProfileCutting dispid 1610809344;
    property FixType_LeftU_RightL: IRJointGussetFixType dispid 1610809346;
    property FixType_LeftL_RightU: IRJointGussetFixType dispid 1610809348;
    property DiagLeftUpper: IRJointGussetDiagonale readonly dispid 1610809350;
    property DiagLeftLower: IRJointGussetDiagonale readonly dispid 1610809351;
    property DiagRightUpper: IRJointGussetDiagonale readonly dispid 1610809352;
    property DiagRightLower: IRJointGussetDiagonale readonly dispid 1610809353;
    property GussetPlate: IRJointGussetCrossPlate readonly dispid 1610809354;
    property BoltsDimensionNamesVector: IRobotNamesArray readonly dispid 1610809355;
    property BoltsClassVector: IRobotNamesArray readonly dispid 1610809356;
    property BoltsDimensionsVector: IRobotValuesArray readonly dispid 1610809357;
    property FixType_LeftUpper: IRJointGussetFixType dispid 1610809358;
    property FixType_RightUpper: IRJointGussetFixType dispid 1610809360;
    property FixType_LeftLower: IRJointGussetFixType dispid 1610809362;
    property FixType_RightLower: IRJointGussetFixType dispid 1610809364;
    property IsShearPortionAllBolts: WordBool dispid 1610809366;
    property ShearPortionAllBolts: IRJointBoltShearPortion dispid 1610809368;
    property WFRelPos: IRJointWebFlangeRelativePos dispid 1610743808;
    property type_: IRJointConnectionType readonly dispid 1610743810;
    procedure SetToRobot(const info: IRJointConnectionInfo); dispid 1610743811;
    procedure GetFromRobot(const info: IRJointConnectionInfo); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRJointGussetFlangePlate
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0141034A-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetFlangePlate = interface(IDispatch)
    ['{0141034A-4B49-11D4-B832-0050DA76755E}']
    function Get_B1: Double; safecall;
    procedure Set_B1(ret: Double); safecall;
    function Get_B2: Double; safecall;
    procedure Set_B2(ret: Double); safecall;
    function Get_B3: Double; safecall;
    procedure Set_B3(ret: Double); safecall;
    function Get_B4: Double; safecall;
    procedure Set_B4(ret: Double); safecall;
    function Get_H1: Double; safecall;
    procedure Set_H1(ret: Double); safecall;
    function Get_H2: Double; safecall;
    procedure Set_H2(ret: Double); safecall;
    function Get_H3: Double; safecall;
    procedure Set_H3(ret: Double); safecall;
    function Get_H4: Double; safecall;
    procedure Set_H4(ret: Double); safecall;
    function Get_EH: Double; safecall;
    procedure Set_EH(ret: Double); safecall;
    function Get_EV: Double; safecall;
    procedure Set_EV(ret: Double); safecall;
    function Get_Thick: Double; safecall;
    procedure Set_Thick(ret: Double); safecall;
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    function Get_CornersType: IRJointGussetCornersType; safecall;
    procedure Set_CornersType(ret: IRJointGussetCornersType); safecall;
    function Get_type_: IRJointGussetFlangePlateRegularType; safecall;
    procedure Set_type_(ret: IRJointGussetFlangePlateRegularType); safecall;
    function Get_Height: Double; safecall;
    procedure Set_Height(ret: Double); safecall;
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_NewPlateDefinition: Integer; safecall;
    procedure Set_NewPlateDefinition(ret: Integer); safecall;
    function Get_HOffset: Double; safecall;
    procedure Set_HOffset(ret: Double); safecall;
    function Get_VOffset: Double; safecall;
    procedure Set_VOffset(ret: Double); safecall;
    function Get_CutV1: Double; safecall;
    procedure Set_CutV1(ret: Double); safecall;
    function Get_CutV2: Double; safecall;
    procedure Set_CutV2(ret: Double); safecall;
    function Get_CutV3: Double; safecall;
    procedure Set_CutV3(ret: Double); safecall;
    function Get_CutV4: Double; safecall;
    procedure Set_CutV4(ret: Double); safecall;
    function Get_CutH1: Double; safecall;
    procedure Set_CutH1(ret: Double); safecall;
    function Get_CutH2: Double; safecall;
    procedure Set_CutH2(ret: Double); safecall;
    function Get_CutH3: Double; safecall;
    procedure Set_CutH3(ret: Double); safecall;
    function Get_CutH4: Double; safecall;
    procedure Set_CutH4(ret: Double); safecall;
    property B1: Double read Get_B1 write Set_B1;
    property B2: Double read Get_B2 write Set_B2;
    property B3: Double read Get_B3 write Set_B3;
    property B4: Double read Get_B4 write Set_B4;
    property H1: Double read Get_H1 write Set_H1;
    property H2: Double read Get_H2 write Set_H2;
    property H3: Double read Get_H3 write Set_H3;
    property H4: Double read Get_H4 write Set_H4;
    property EH: Double read Get_EH write Set_EH;
    property EV: Double read Get_EV write Set_EV;
    property Thick: Double read Get_Thick write Set_Thick;
    property Material: WideString read Get_Material write Set_Material;
    property CornersType: IRJointGussetCornersType read Get_CornersType write Set_CornersType;
    property type_: IRJointGussetFlangePlateRegularType read Get_type_ write Set_type_;
    property Height: Double read Get_Height write Set_Height;
    property Length: Double read Get_Length write Set_Length;
    property NewPlateDefinition: Integer read Get_NewPlateDefinition write Set_NewPlateDefinition;
    property HOffset: Double read Get_HOffset write Set_HOffset;
    property VOffset: Double read Get_VOffset write Set_VOffset;
    property CutV1: Double read Get_CutV1 write Set_CutV1;
    property CutV2: Double read Get_CutV2 write Set_CutV2;
    property CutV3: Double read Get_CutV3 write Set_CutV3;
    property CutV4: Double read Get_CutV4 write Set_CutV4;
    property CutH1: Double read Get_CutH1 write Set_CutH1;
    property CutH2: Double read Get_CutH2 write Set_CutH2;
    property CutH3: Double read Get_CutH3 write Set_CutH3;
    property CutH4: Double read Get_CutH4 write Set_CutH4;
  end;

// *********************************************************************//
// DispIntf:  IRJointGussetFlangePlateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0141034A-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetFlangePlateDisp = dispinterface
    ['{0141034A-4B49-11D4-B832-0050DA76755E}']
    property B1: Double dispid 1610743808;
    property B2: Double dispid 1610743810;
    property B3: Double dispid 1610743812;
    property B4: Double dispid 1610743814;
    property H1: Double dispid 1610743816;
    property H2: Double dispid 1610743818;
    property H3: Double dispid 1610743820;
    property H4: Double dispid 1610743822;
    property EH: Double dispid 1610743824;
    property EV: Double dispid 1610743826;
    property Thick: Double dispid 1610743828;
    property Material: WideString dispid 1610743830;
    property CornersType: IRJointGussetCornersType dispid 1610743832;
    property type_: IRJointGussetFlangePlateRegularType dispid 1610743834;
    property Height: Double dispid 1610743836;
    property Length: Double dispid 1610743838;
    property NewPlateDefinition: Integer dispid 1610743840;
    property HOffset: Double dispid 1610743842;
    property VOffset: Double dispid 1610743844;
    property CutV1: Double dispid 1610743846;
    property CutV2: Double dispid 1610743848;
    property CutV3: Double dispid 1610743850;
    property CutV4: Double dispid 1610743852;
    property CutH1: Double dispid 1610743854;
    property CutH2: Double dispid 1610743856;
    property CutH3: Double dispid 1610743858;
    property CutH4: Double dispid 1610743860;
  end;

// *********************************************************************//
// Interface: IRJointGussetFlange
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0141034C-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetFlange = interface(IRJointConnection)
    ['{0141034C-4B49-11D4-B832-0050DA76755E}']
    function Get_FixType_FlangeLeft: IRJointGussetFixType; safecall;
    procedure Set_FixType_FlangeLeft(ret: IRJointGussetFixType); safecall;
    function Get_FixType_FlangeRight: IRJointGussetFixType; safecall;
    procedure Set_FixType_FlangeRight(ret: IRJointGussetFixType); safecall;
    function Get_FixType_DiagonalLeft: IRJointGussetFixType; safecall;
    procedure Set_FixType_DiagonalLeft(ret: IRJointGussetFixType); safecall;
    function Get_FixType_DiagonalRight: IRJointGussetFixType; safecall;
    procedure Set_FixType_DiagonalRight(ret: IRJointGussetFixType); safecall;
    function Get_FixType_DiagonalUp: IRJointGussetFixType; safecall;
    procedure Set_FixType_DiagonalUp(ret: IRJointGussetFixType); safecall;
    function Get_ProfileCutting: IRJointGussetFlangeProfileCutting; safecall;
    procedure Set_ProfileCutting(ret: IRJointGussetFlangeProfileCutting); safecall;
    function Get_FlangeLeft: IRJointGussetDiagonale; safecall;
    function Get_FlangeRight: IRJointGussetDiagonale; safecall;
    function Get_DiagonalLeft: IRJointGussetDiagonale; safecall;
    function Get_DiagonalRight: IRJointGussetDiagonale; safecall;
    function Get_DiagonalUp: IRJointGussetDiagonale; safecall;
    function Get_GussetPlate: IRJointGussetFlangePlate; safecall;
    function Get_BoltsDimensionNamesVector: IRobotNamesArray; safecall;
    function Get_BoltsClassVector: IRobotNamesArray; safecall;
    function Get_BoltsDimensionsVector: IRobotValuesArray; safecall;
    function Get_IsShearPortionAllBolts: WordBool; safecall;
    procedure Set_IsShearPortionAllBolts(ret: WordBool); safecall;
    function Get_ShearPortionAllBolts: IRJointBoltShearPortion; safecall;
    procedure Set_ShearPortionAllBolts(ret: IRJointBoltShearPortion); safecall;
    property FixType_FlangeLeft: IRJointGussetFixType read Get_FixType_FlangeLeft write Set_FixType_FlangeLeft;
    property FixType_FlangeRight: IRJointGussetFixType read Get_FixType_FlangeRight write Set_FixType_FlangeRight;
    property FixType_DiagonalLeft: IRJointGussetFixType read Get_FixType_DiagonalLeft write Set_FixType_DiagonalLeft;
    property FixType_DiagonalRight: IRJointGussetFixType read Get_FixType_DiagonalRight write Set_FixType_DiagonalRight;
    property FixType_DiagonalUp: IRJointGussetFixType read Get_FixType_DiagonalUp write Set_FixType_DiagonalUp;
    property ProfileCutting: IRJointGussetFlangeProfileCutting read Get_ProfileCutting write Set_ProfileCutting;
    property FlangeLeft: IRJointGussetDiagonale read Get_FlangeLeft;
    property FlangeRight: IRJointGussetDiagonale read Get_FlangeRight;
    property DiagonalLeft: IRJointGussetDiagonale read Get_DiagonalLeft;
    property DiagonalRight: IRJointGussetDiagonale read Get_DiagonalRight;
    property DiagonalUp: IRJointGussetDiagonale read Get_DiagonalUp;
    property GussetPlate: IRJointGussetFlangePlate read Get_GussetPlate;
    property BoltsDimensionNamesVector: IRobotNamesArray read Get_BoltsDimensionNamesVector;
    property BoltsClassVector: IRobotNamesArray read Get_BoltsClassVector;
    property BoltsDimensionsVector: IRobotValuesArray read Get_BoltsDimensionsVector;
    property IsShearPortionAllBolts: WordBool read Get_IsShearPortionAllBolts write Set_IsShearPortionAllBolts;
    property ShearPortionAllBolts: IRJointBoltShearPortion read Get_ShearPortionAllBolts write Set_ShearPortionAllBolts;
  end;

// *********************************************************************//
// DispIntf:  IRJointGussetFlangeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0141034C-4B49-11D4-B832-0050DA76755E}
// *********************************************************************//
  IRJointGussetFlangeDisp = dispinterface
    ['{0141034C-4B49-11D4-B832-0050DA76755E}']
    property FixType_FlangeLeft: IRJointGussetFixType dispid 1610809344;
    property FixType_FlangeRight: IRJointGussetFixType dispid 1610809346;
    property FixType_DiagonalLeft: IRJointGussetFixType dispid 1610809348;
    property FixType_DiagonalRight: IRJointGussetFixType dispid 1610809350;
    property FixType_DiagonalUp: IRJointGussetFixType dispid 1610809352;
    property ProfileCutting: IRJointGussetFlangeProfileCutting dispid 1610809354;
    property FlangeLeft: IRJointGussetDiagonale readonly dispid 1610809356;
    property FlangeRight: IRJointGussetDiagonale readonly dispid 1610809357;
    property DiagonalLeft: IRJointGussetDiagonale readonly dispid 1610809358;
    property DiagonalRight: IRJointGussetDiagonale readonly dispid 1610809359;
    property DiagonalUp: IRJointGussetDiagonale readonly dispid 1610809360;
    property GussetPlate: IRJointGussetFlangePlate readonly dispid 1610809361;
    property BoltsDimensionNamesVector: IRobotNamesArray readonly dispid 1610809362;
    property BoltsClassVector: IRobotNamesArray readonly dispid 1610809363;
    property BoltsDimensionsVector: IRobotValuesArray readonly dispid 1610809364;
    property IsShearPortionAllBolts: WordBool dispid 1610809365;
    property ShearPortionAllBolts: IRJointBoltShearPortion dispid 1610809367;
    property WFRelPos: IRJointWebFlangeRelativePos dispid 1610743808;
    property type_: IRJointConnectionType readonly dispid 1610743810;
    procedure SetToRobot(const info: IRJointConnectionInfo); dispid 1610743811;
    procedure GetFromRobot(const info: IRJointConnectionInfo); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRJointGussetSimpleLoad
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1A507E22-56FD-11D4-B844-0050DA76755E}
// *********************************************************************//
  IRJointGussetSimpleLoad = interface(IRJointLoad)
    ['{1A507E22-56FD-11D4-B844-0050DA76755E}']
    function Get_FX: Double; safecall;
    procedure Set_FX(ret: Double); safecall;
    property FX: Double read Get_FX write Set_FX;
  end;

// *********************************************************************//
// DispIntf:  IRJointGussetSimpleLoadDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1A507E22-56FD-11D4-B844-0050DA76755E}
// *********************************************************************//
  IRJointGussetSimpleLoadDisp = dispinterface
    ['{1A507E22-56FD-11D4-B844-0050DA76755E}']
    property FX: Double dispid 1610809344;
    property Cases: IRobotSelection readonly dispid 1610743808;
    property type_: IRJointLoadType dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRJointGussetCrossLoad
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1A507E24-56FD-11D4-B844-0050DA76755E}
// *********************************************************************//
  IRJointGussetCrossLoad = interface(IRJointLoad)
    ['{1A507E24-56FD-11D4-B844-0050DA76755E}']
    function Get_Fx_LeftUpper: Double; safecall;
    procedure Set_Fx_LeftUpper(ret: Double); safecall;
    function Get_Fx_LeftLower: Double; safecall;
    procedure Set_Fx_LeftLower(ret: Double); safecall;
    function Get_Fx_RightUpper: Double; safecall;
    procedure Set_Fx_RightUpper(ret: Double); safecall;
    function Get_Fx_RightLower: Double; safecall;
    procedure Set_Fx_RightLower(ret: Double); safecall;
    property Fx_LeftUpper: Double read Get_Fx_LeftUpper write Set_Fx_LeftUpper;
    property Fx_LeftLower: Double read Get_Fx_LeftLower write Set_Fx_LeftLower;
    property Fx_RightUpper: Double read Get_Fx_RightUpper write Set_Fx_RightUpper;
    property Fx_RightLower: Double read Get_Fx_RightLower write Set_Fx_RightLower;
  end;

// *********************************************************************//
// DispIntf:  IRJointGussetCrossLoadDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1A507E24-56FD-11D4-B844-0050DA76755E}
// *********************************************************************//
  IRJointGussetCrossLoadDisp = dispinterface
    ['{1A507E24-56FD-11D4-B844-0050DA76755E}']
    property Fx_LeftUpper: Double dispid 1610809344;
    property Fx_LeftLower: Double dispid 1610809346;
    property Fx_RightUpper: Double dispid 1610809348;
    property Fx_RightLower: Double dispid 1610809350;
    property Cases: IRobotSelection readonly dispid 1610743808;
    property type_: IRJointLoadType dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRJointGussetFlangeLoad
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1A507E26-56FD-11D4-B844-0050DA76755E}
// *********************************************************************//
  IRJointGussetFlangeLoad = interface(IRJointLoad)
    ['{1A507E26-56FD-11D4-B844-0050DA76755E}']
    function Get_Fx_FlangeLeft: Double; safecall;
    procedure Set_Fx_FlangeLeft(ret: Double); safecall;
    function Get_Fx_FlangeRight: Double; safecall;
    procedure Set_Fx_FlangeRight(ret: Double); safecall;
    function Get_Fx_LeftUpper: Double; safecall;
    procedure Set_Fx_LeftUpper(ret: Double); safecall;
    function Get_Fx_Upper: Double; safecall;
    procedure Set_Fx_Upper(ret: Double); safecall;
    function Get_Fx_RightUpper: Double; safecall;
    procedure Set_Fx_RightUpper(ret: Double); safecall;
    property Fx_FlangeLeft: Double read Get_Fx_FlangeLeft write Set_Fx_FlangeLeft;
    property Fx_FlangeRight: Double read Get_Fx_FlangeRight write Set_Fx_FlangeRight;
    property Fx_LeftUpper: Double read Get_Fx_LeftUpper write Set_Fx_LeftUpper;
    property Fx_Upper: Double read Get_Fx_Upper write Set_Fx_Upper;
    property Fx_RightUpper: Double read Get_Fx_RightUpper write Set_Fx_RightUpper;
  end;

// *********************************************************************//
// DispIntf:  IRJointGussetFlangeLoadDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1A507E26-56FD-11D4-B844-0050DA76755E}
// *********************************************************************//
  IRJointGussetFlangeLoadDisp = dispinterface
    ['{1A507E26-56FD-11D4-B844-0050DA76755E}']
    property Fx_FlangeLeft: Double dispid 1610809344;
    property Fx_FlangeRight: Double dispid 1610809346;
    property Fx_LeftUpper: Double dispid 1610809348;
    property Fx_Upper: Double dispid 1610809350;
    property Fx_RightUpper: Double dispid 1610809352;
    property Cases: IRobotSelection readonly dispid 1610743808;
    property type_: IRJointLoadType dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRJointMainBolts
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D8F75DFE-EFB5-4D37-B04E-58608AF1ED3C}
// *********************************************************************//
  IRJointMainBolts = interface(IDispatch)
    ['{D8F75DFE-EFB5-4D37-B04E-58608AF1ED3C}']
    function Get__className: WideString; safecall;
    procedure Set__className(const ret: WideString); safecall;
    function Get_DiameterName: WideString; safecall;
    procedure Set_DiameterName(const ret: WideString); safecall;
    function Get_Diameter: Integer; safecall;
    function Get_Area: Double; safecall;
    function Get_Friction: Double; safecall;
    procedure Set_Friction(ret: Double); safecall;
    function Get_Rows: Integer; safecall;
    procedure Set_Rows(ret: Integer); safecall;
    function Get_Cols: Integer; safecall;
    procedure Set_Cols(ret: Integer); safecall;
    function Get_SpacingV: Double; safecall;
    procedure Set_SpacingV(ret: Double); safecall;
    function Get_SpacingH: Double; safecall;
    procedure Set_SpacingH(ret: Double); safecall;
    function Get_DistFromUpperElementEdge: Double; safecall;
    procedure Set_DistFromUpperElementEdge(ret: Double); safecall;
    function Get_DistFromVertElementEdge: Double; safecall;
    procedure Set_DistFromVertElementEdge(ret: Double); safecall;
    procedure Set_Diameter(ret: Integer); safecall;
    function Get_CenterElement: Integer; safecall;
    procedure Set_CenterElement(ret: Integer); safecall;
    function Get_ShearPortion: IRJointBoltShearPortion; safecall;
    procedure Set_ShearPortion(ret: IRJointBoltShearPortion); safecall;
    property _className: WideString read Get__className write Set__className;
    property DiameterName: WideString read Get_DiameterName write Set_DiameterName;
    property Diameter: Integer read Get_Diameter write Set_Diameter;
    property Area: Double read Get_Area;
    property Friction: Double read Get_Friction write Set_Friction;
    property Rows: Integer read Get_Rows write Set_Rows;
    property Cols: Integer read Get_Cols write Set_Cols;
    property SpacingV: Double read Get_SpacingV write Set_SpacingV;
    property SpacingH: Double read Get_SpacingH write Set_SpacingH;
    property DistFromUpperElementEdge: Double read Get_DistFromUpperElementEdge write Set_DistFromUpperElementEdge;
    property DistFromVertElementEdge: Double read Get_DistFromVertElementEdge write Set_DistFromVertElementEdge;
    property CenterElement: Integer read Get_CenterElement write Set_CenterElement;
    property ShearPortion: IRJointBoltShearPortion read Get_ShearPortion write Set_ShearPortion;
  end;

// *********************************************************************//
// DispIntf:  IRJointMainBoltsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D8F75DFE-EFB5-4D37-B04E-58608AF1ED3C}
// *********************************************************************//
  IRJointMainBoltsDisp = dispinterface
    ['{D8F75DFE-EFB5-4D37-B04E-58608AF1ED3C}']
    property _className: WideString dispid 1610743808;
    property DiameterName: WideString dispid 1610743810;
    property Diameter: Integer dispid 1610743812;
    property Area: Double readonly dispid 1610743813;
    property Friction: Double dispid 1610743814;
    property Rows: Integer dispid 1610743816;
    property Cols: Integer dispid 1610743818;
    property SpacingV: Double dispid 1610743820;
    property SpacingH: Double dispid 1610743822;
    property DistFromUpperElementEdge: Double dispid 1610743824;
    property DistFromVertElementEdge: Double dispid 1610743826;
    property CenterElement: Integer dispid 1610743829;
    property ShearPortion: IRJointBoltShearPortion dispid 1610743831;
  end;

// *********************************************************************//
// Interface: IRJointBeamBolts
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FD9C74FB-47AE-4034-9CAF-FE767C438196}
// *********************************************************************//
  IRJointBeamBolts = interface(IDispatch)
    ['{FD9C74FB-47AE-4034-9CAF-FE767C438196}']
    function Get_Diameter: Integer; safecall;
    function Get__className: WideString; safecall;
    procedure Set__className(const ret: WideString); safecall;
    function Get_DiameterName: WideString; safecall;
    procedure Set_DiameterName(const ret: WideString); safecall;
    function Get_Friction: Double; safecall;
    procedure Set_Friction(ret: Double); safecall;
    function Get_Area: Double; safecall;
    function Get_Rows: Integer; safecall;
    procedure Set_Rows(ret: Integer); safecall;
    function Get_Cols: Integer; safecall;
    procedure Set_Cols(ret: Integer); safecall;
    function Get_SpacingV: Double; safecall;
    procedure Set_SpacingV(ret: Double); safecall;
    function Get_SpacingH: Double; safecall;
    procedure Set_SpacingH(ret: Double); safecall;
    function Get_DistFromUpperBeamEdge: Double; safecall;
    procedure Set_DistFromUpperBeamEdge(ret: Double); safecall;
    function Get_DistFromVertBeamEdge: Double; safecall;
    procedure Set_DistFromVertBeamEdge(ret: Double); safecall;
    function Get_CenterElement: Integer; safecall;
    procedure Set_CenterElement(ret: Integer); safecall;
    procedure Set_Diameter(ret: Integer); safecall;
    function Get_ShearPortion: IRJointBoltShearPortion; safecall;
    procedure Set_ShearPortion(ret: IRJointBoltShearPortion); safecall;
    property Diameter: Integer read Get_Diameter write Set_Diameter;
    property _className: WideString read Get__className write Set__className;
    property DiameterName: WideString read Get_DiameterName write Set_DiameterName;
    property Friction: Double read Get_Friction write Set_Friction;
    property Area: Double read Get_Area;
    property Rows: Integer read Get_Rows write Set_Rows;
    property Cols: Integer read Get_Cols write Set_Cols;
    property SpacingV: Double read Get_SpacingV write Set_SpacingV;
    property SpacingH: Double read Get_SpacingH write Set_SpacingH;
    property DistFromUpperBeamEdge: Double read Get_DistFromUpperBeamEdge write Set_DistFromUpperBeamEdge;
    property DistFromVertBeamEdge: Double read Get_DistFromVertBeamEdge write Set_DistFromVertBeamEdge;
    property CenterElement: Integer read Get_CenterElement write Set_CenterElement;
    property ShearPortion: IRJointBoltShearPortion read Get_ShearPortion write Set_ShearPortion;
  end;

// *********************************************************************//
// DispIntf:  IRJointBeamBoltsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FD9C74FB-47AE-4034-9CAF-FE767C438196}
// *********************************************************************//
  IRJointBeamBoltsDisp = dispinterface
    ['{FD9C74FB-47AE-4034-9CAF-FE767C438196}']
    property Diameter: Integer dispid 1610743808;
    property _className: WideString dispid 1610743809;
    property DiameterName: WideString dispid 1610743811;
    property Friction: Double dispid 1610743813;
    property Area: Double readonly dispid 1610743815;
    property Rows: Integer dispid 1610743816;
    property Cols: Integer dispid 1610743818;
    property SpacingV: Double dispid 1610743820;
    property SpacingH: Double dispid 1610743822;
    property DistFromUpperBeamEdge: Double dispid 1610743824;
    property DistFromVertBeamEdge: Double dispid 1610743826;
    property CenterElement: Integer dispid 1610743828;
    property ShearPortion: IRJointBoltShearPortion dispid 1610743831;
  end;

// *********************************************************************//
// Interface: IRJointBeamGirderSeatBolts
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB62EFA3-0EDF-4717-B4E6-BD5B4B962B1B}
// *********************************************************************//
  IRJointBeamGirderSeatBolts = interface(IDispatch)
    ['{CB62EFA3-0EDF-4717-B4E6-BD5B4B962B1B}']
    function Get_Diameter: Integer; safecall;
    function Get__className: WideString; safecall;
    procedure Set__className(const ret: WideString); safecall;
    function Get_DiameterName: WideString; safecall;
    procedure Set_DiameterName(const ret: WideString); safecall;
    function Get_Friction: Double; safecall;
    procedure Set_Friction(ret: Double); safecall;
    function Get_Area: Double; safecall;
    function Get_Cols: Integer; safecall;
    procedure Set_Cols(ret: Integer); safecall;
    function Get_DistFromVertEdge: Double; safecall;
    procedure Set_DistFromVertEdge(ret: Double); safecall;
    function Get_DistFromPerpendicularArmEdge: Double; safecall;
    procedure Set_DistFromPerpendicularArmEdge(ret: Double); safecall;
    function Get_Rows: Integer; safecall;
    procedure Set_Rows(ret: Integer); safecall;
    function Get_SpacingV: Double; safecall;
    procedure Set_SpacingV(ret: Double); safecall;
    function Get_SpacingH: Double; safecall;
    procedure Set_SpacingH(ret: Double); safecall;
    procedure Set_Diameter(ret: Integer); safecall;
    function Get_CenterElement: Integer; safecall;
    procedure Set_CenterElement(ret: Integer); safecall;
    function Get_ShearPortion: IRJointBoltShearPortion; safecall;
    procedure Set_ShearPortion(ret: IRJointBoltShearPortion); safecall;
    property Diameter: Integer read Get_Diameter write Set_Diameter;
    property _className: WideString read Get__className write Set__className;
    property DiameterName: WideString read Get_DiameterName write Set_DiameterName;
    property Friction: Double read Get_Friction write Set_Friction;
    property Area: Double read Get_Area;
    property Cols: Integer read Get_Cols write Set_Cols;
    property DistFromVertEdge: Double read Get_DistFromVertEdge write Set_DistFromVertEdge;
    property DistFromPerpendicularArmEdge: Double read Get_DistFromPerpendicularArmEdge write Set_DistFromPerpendicularArmEdge;
    property Rows: Integer read Get_Rows write Set_Rows;
    property SpacingV: Double read Get_SpacingV write Set_SpacingV;
    property SpacingH: Double read Get_SpacingH write Set_SpacingH;
    property CenterElement: Integer read Get_CenterElement write Set_CenterElement;
    property ShearPortion: IRJointBoltShearPortion read Get_ShearPortion write Set_ShearPortion;
  end;

// *********************************************************************//
// DispIntf:  IRJointBeamGirderSeatBoltsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB62EFA3-0EDF-4717-B4E6-BD5B4B962B1B}
// *********************************************************************//
  IRJointBeamGirderSeatBoltsDisp = dispinterface
    ['{CB62EFA3-0EDF-4717-B4E6-BD5B4B962B1B}']
    property Diameter: Integer dispid 1610743808;
    property _className: WideString dispid 1610743809;
    property DiameterName: WideString dispid 1610743811;
    property Friction: Double dispid 1610743813;
    property Area: Double readonly dispid 1610743815;
    property Cols: Integer dispid 1610743816;
    property DistFromVertEdge: Double dispid 1610743818;
    property DistFromPerpendicularArmEdge: Double dispid 1610743820;
    property Rows: Integer dispid 1610743822;
    property SpacingV: Double dispid 1610743824;
    property SpacingH: Double dispid 1610743826;
    property CenterElement: Integer dispid 1610743829;
    property ShearPortion: IRJointBoltShearPortion dispid 1610743831;
  end;

// *********************************************************************//
// Interface: IRJointBeamGirderBeam
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {483D9545-DC88-41F9-80D5-916F5332B3CE}
// *********************************************************************//
  IRJointBeamGirderBeam = interface(IDispatch)
    ['{483D9545-DC88-41F9-80D5-916F5332B3CE}']
    function Get_Profile: IRJointProfile; safecall;
    function Get_CutEnd: IRJointBeamCut; safecall;
    property Profile: IRJointProfile read Get_Profile;
    property CutEnd: IRJointBeamCut read Get_CutEnd;
  end;

// *********************************************************************//
// DispIntf:  IRJointBeamGirderBeamDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {483D9545-DC88-41F9-80D5-916F5332B3CE}
// *********************************************************************//
  IRJointBeamGirderBeamDisp = dispinterface
    ['{483D9545-DC88-41F9-80D5-916F5332B3CE}']
    property Profile: IRJointProfile readonly dispid 1610743808;
    property CutEnd: IRJointBeamCut readonly dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRJointBeamGirderAngle
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E4FF4AE0-1177-427C-A99E-B5C2D738597E}
// *********************************************************************//
  IRJointBeamGirderAngle = interface(IDispatch)
    ['{E4FF4AE0-1177-427C-A99E-B5C2D738597E}']
    function Get_Element: IRJointAngle; safecall;
    function Get_BoltsMain: IRJointMainBolts; safecall;
    function Get_BoltsBeam: IRJointBeamBolts; safecall;
    function Get_WeldsMain: IRJointWeld; safecall;
    function Get_WeldsBeam: IRJointWeld; safecall;
    function Get_ConnectorsMain: IRJointConnectorsType; safecall;
    procedure Set_ConnectorsMain(ret: IRJointConnectorsType); safecall;
    function Get_ConnectorsBeam: IRJointConnectorsType; safecall;
    procedure Set_ConnectorsBeam(ret: IRJointConnectorsType); safecall;
    function Get_CenterElement: Integer; safecall;
    procedure Set_CenterElement(ret: Integer); safecall;
    property Element: IRJointAngle read Get_Element;
    property BoltsMain: IRJointMainBolts read Get_BoltsMain;
    property BoltsBeam: IRJointBeamBolts read Get_BoltsBeam;
    property WeldsMain: IRJointWeld read Get_WeldsMain;
    property WeldsBeam: IRJointWeld read Get_WeldsBeam;
    property ConnectorsMain: IRJointConnectorsType read Get_ConnectorsMain write Set_ConnectorsMain;
    property ConnectorsBeam: IRJointConnectorsType read Get_ConnectorsBeam write Set_ConnectorsBeam;
    property CenterElement: Integer read Get_CenterElement write Set_CenterElement;
  end;

// *********************************************************************//
// DispIntf:  IRJointBeamGirderAngleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E4FF4AE0-1177-427C-A99E-B5C2D738597E}
// *********************************************************************//
  IRJointBeamGirderAngleDisp = dispinterface
    ['{E4FF4AE0-1177-427C-A99E-B5C2D738597E}']
    property Element: IRJointAngle readonly dispid 1610743808;
    property BoltsMain: IRJointMainBolts readonly dispid 1610743809;
    property BoltsBeam: IRJointBeamBolts readonly dispid 1610743810;
    property WeldsMain: IRJointWeld readonly dispid 1610743811;
    property WeldsBeam: IRJointWeld readonly dispid 1610743812;
    property ConnectorsMain: IRJointConnectorsType dispid 1610743813;
    property ConnectorsBeam: IRJointConnectorsType dispid 1610743815;
    property CenterElement: Integer dispid 1610743817;
  end;

// *********************************************************************//
// Interface: IRJointBeamPlate
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {03B68104-3440-4E74-9FE2-1C81B9736019}
// *********************************************************************//
  IRJointBeamPlate = interface(IDispatch)
    ['{03B68104-3440-4E74-9FE2-1C81B9736019}']
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_Height: Double; safecall;
    procedure Set_Height(ret: Double); safecall;
    function Get_Thick: Double; safecall;
    procedure Set_Thick(ret: Double); safecall;
    function Get_DistFromUpperBeamEdge: Double; safecall;
    procedure Set_DistFromUpperBeamEdge(ret: Double); safecall;
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    function Get_ConnectorsType: IRJointConnectorsType; safecall;
    procedure Set_ConnectorsType(ret: IRJointConnectorsType); safecall;
    function Get_BoltsBeam: IRJointBeamBolts; safecall;
    function Get_WeldsMain: IRJointWeld; safecall;
    function Get_WeldsBeam: IRJointWeld; safecall;
    function Get_OneSided: WordBool; safecall;
    procedure Set_OneSided(ret: WordBool); safecall;
    function Get_CenterElement: Integer; safecall;
    procedure Set_CenterElement(ret: Integer); safecall;
    property Length: Double read Get_Length write Set_Length;
    property Height: Double read Get_Height write Set_Height;
    property Thick: Double read Get_Thick write Set_Thick;
    property DistFromUpperBeamEdge: Double read Get_DistFromUpperBeamEdge write Set_DistFromUpperBeamEdge;
    property Material: WideString read Get_Material write Set_Material;
    property ConnectorsType: IRJointConnectorsType read Get_ConnectorsType write Set_ConnectorsType;
    property BoltsBeam: IRJointBeamBolts read Get_BoltsBeam;
    property WeldsMain: IRJointWeld read Get_WeldsMain;
    property WeldsBeam: IRJointWeld read Get_WeldsBeam;
    property OneSided: WordBool read Get_OneSided write Set_OneSided;
    property CenterElement: Integer read Get_CenterElement write Set_CenterElement;
  end;

// *********************************************************************//
// DispIntf:  IRJointBeamPlateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {03B68104-3440-4E74-9FE2-1C81B9736019}
// *********************************************************************//
  IRJointBeamPlateDisp = dispinterface
    ['{03B68104-3440-4E74-9FE2-1C81B9736019}']
    property Length: Double dispid 1610743808;
    property Height: Double dispid 1610743810;
    property Thick: Double dispid 1610743812;
    property DistFromUpperBeamEdge: Double dispid 1610743814;
    property Material: WideString dispid 1610743816;
    property ConnectorsType: IRJointConnectorsType dispid 1610743818;
    property BoltsBeam: IRJointBeamBolts readonly dispid 1610743820;
    property WeldsMain: IRJointWeld readonly dispid 1610743821;
    property WeldsBeam: IRJointWeld readonly dispid 1610743822;
    property OneSided: WordBool dispid 1610743823;
    property CenterElement: Integer dispid 1610743825;
  end;

// *********************************************************************//
// Interface: IRJointBeamGirderSeat
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {78E92455-5E35-43A8-A61D-232CA665C952}
// *********************************************************************//
  IRJointBeamGirderSeat = interface(IDispatch)
    ['{78E92455-5E35-43A8-A61D-232CA665C952}']
    function Get_Section: WideString; safecall;
    procedure Set_Section(const ret: WideString); safecall;
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_ConnectorsToWebType: IRJointConnectorsType; safecall;
    procedure Set_ConnectorsToWebType(ret: IRJointConnectorsType); safecall;
    function Get_BoltsGirder: IRJointBeamGirderSeatBolts; safecall;
    function Get_BoltsBeam: IRJointBeamGirderSeatBolts; safecall;
    function Get_WeldsGirder: IRJointWeld; safecall;
    function Get_WeldsBeam: IRJointWeld; safecall;
    function Get_ConnectorsToBeamFlange: IRJointConnectorsType; safecall;
    procedure Set_ConnectorsToBeamFlange(ret: IRJointConnectorsType); safecall;
    function Get_ProfilePosition: IRJointAngleProfilePosition; safecall;
    procedure Set_ProfilePosition(ret: IRJointAngleProfilePosition); safecall;
    function Get_Profile: IRJointProfile; safecall;
    function Get_Exist: Integer; safecall;
    procedure Set_Exist(ret: Integer); safecall;
    property Section: WideString read Get_Section write Set_Section;
    property Material: WideString read Get_Material write Set_Material;
    property Length: Double read Get_Length write Set_Length;
    property ConnectorsToWebType: IRJointConnectorsType read Get_ConnectorsToWebType write Set_ConnectorsToWebType;
    property BoltsGirder: IRJointBeamGirderSeatBolts read Get_BoltsGirder;
    property BoltsBeam: IRJointBeamGirderSeatBolts read Get_BoltsBeam;
    property WeldsGirder: IRJointWeld read Get_WeldsGirder;
    property WeldsBeam: IRJointWeld read Get_WeldsBeam;
    property ConnectorsToBeamFlange: IRJointConnectorsType read Get_ConnectorsToBeamFlange write Set_ConnectorsToBeamFlange;
    property ProfilePosition: IRJointAngleProfilePosition read Get_ProfilePosition write Set_ProfilePosition;
    property Profile: IRJointProfile read Get_Profile;
    property Exist: Integer read Get_Exist write Set_Exist;
  end;

// *********************************************************************//
// DispIntf:  IRJointBeamGirderSeatDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {78E92455-5E35-43A8-A61D-232CA665C952}
// *********************************************************************//
  IRJointBeamGirderSeatDisp = dispinterface
    ['{78E92455-5E35-43A8-A61D-232CA665C952}']
    property Section: WideString dispid 1610743808;
    property Material: WideString dispid 1610743810;
    property Length: Double dispid 1610743812;
    property ConnectorsToWebType: IRJointConnectorsType dispid 1610743814;
    property BoltsGirder: IRJointBeamGirderSeatBolts readonly dispid 1610743816;
    property BoltsBeam: IRJointBeamGirderSeatBolts readonly dispid 1610743817;
    property WeldsGirder: IRJointWeld readonly dispid 1610743818;
    property WeldsBeam: IRJointWeld readonly dispid 1610743819;
    property ConnectorsToBeamFlange: IRJointConnectorsType dispid 1610743820;
    property ProfilePosition: IRJointAngleProfilePosition dispid 1610743822;
    property Profile: IRJointProfile readonly dispid 1610743824;
    property Exist: Integer dispid 1610743825;
  end;

// *********************************************************************//
// Interface: IRJointBeamGirderStiffener
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8B457D76-6EB3-4B30-9640-6422E0B12890}
// *********************************************************************//
  IRJointBeamGirderStiffener = interface(IDispatch)
    ['{8B457D76-6EB3-4B30-9640-6422E0B12890}']
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_Thick: Double; safecall;
    procedure Set_Thick(ret: Double); safecall;
    function Get_CutLength: Double; safecall;
    procedure Set_CutLength(ret: Double); safecall;
    function Get_CutHeightUp: Double; safecall;
    procedure Set_CutHeightUp(ret: Double); safecall;
    function Get_CutHeightDown: Double; safecall;
    procedure Set_CutHeightDown(ret: Double); safecall;
    function Get_CutEdge: Double; safecall;
    procedure Set_CutEdge(ret: Double); safecall;
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    function Get_ConnectorsType: IRJointConnectorsType; safecall;
    procedure Set_ConnectorsType(ret: IRJointConnectorsType); safecall;
    function Get_BoltsBeam: IRJointBeamBolts; safecall;
    function Get_WeldsBeam: IRJointWeld; safecall;
    property Length: Double read Get_Length write Set_Length;
    property Thick: Double read Get_Thick write Set_Thick;
    property CutLength: Double read Get_CutLength write Set_CutLength;
    property CutHeightUp: Double read Get_CutHeightUp write Set_CutHeightUp;
    property CutHeightDown: Double read Get_CutHeightDown write Set_CutHeightDown;
    property CutEdge: Double read Get_CutEdge write Set_CutEdge;
    property Material: WideString read Get_Material write Set_Material;
    property ConnectorsType: IRJointConnectorsType read Get_ConnectorsType write Set_ConnectorsType;
    property BoltsBeam: IRJointBeamBolts read Get_BoltsBeam;
    property WeldsBeam: IRJointWeld read Get_WeldsBeam;
  end;

// *********************************************************************//
// DispIntf:  IRJointBeamGirderStiffenerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8B457D76-6EB3-4B30-9640-6422E0B12890}
// *********************************************************************//
  IRJointBeamGirderStiffenerDisp = dispinterface
    ['{8B457D76-6EB3-4B30-9640-6422E0B12890}']
    property Length: Double dispid 1610743808;
    property Thick: Double dispid 1610743810;
    property CutLength: Double dispid 1610743812;
    property CutHeightUp: Double dispid 1610743814;
    property CutHeightDown: Double dispid 1610743816;
    property CutEdge: Double dispid 1610743818;
    property Material: WideString dispid 1610743820;
    property ConnectorsType: IRJointConnectorsType dispid 1610743822;
    property BoltsBeam: IRJointBeamBolts readonly dispid 1610743824;
    property WeldsBeam: IRJointWeld readonly dispid 1610743825;
  end;

// *********************************************************************//
// Interface: IRJointBeamGirder
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {73D9E5CE-623C-4A42-8C7E-99D6FB571EC2}
// *********************************************************************//
  IRJointBeamGirder = interface(IRJointConnection)
    ['{73D9E5CE-623C-4A42-8C7E-99D6FB571EC2}']
    function Get_Girder: IRJointProfile; safecall;
    function Get_BeamLeft: IRJointBeamGirderBeam; safecall;
    function Get_BeamRight: IRJointBeamGirderBeam; safecall;
    function Get_AngleLeft: IRJointBeamGirderAngle; safecall;
    function Get_AngleRight: IRJointBeamGirderAngle; safecall;
    function Get_StiffenerLeft: IRJointBeamGirderStiffener; safecall;
    function Get_StiffenerRight: IRJointBeamGirderStiffener; safecall;
    function Get_PlateLeft: IRJointBeamPlate; safecall;
    function Get_PlateRight: IRJointBeamPlate; safecall;
    function Get_SeatLeftUp: IRJointBeamGirderSeat; safecall;
    function Get_SeatLeftDown: IRJointBeamGirderSeat; safecall;
    function Get_SeatRightUp: IRJointBeamGirderSeat; safecall;
    function Get_SeatRightDown: IRJointBeamGirderSeat; safecall;
    function Get_DistGirderToBeamLeft: Double; safecall;
    procedure Set_DistGirderToBeamLeft(ret: Double); safecall;
    function Get_DistGirderToBeamRight: Double; safecall;
    procedure Set_DistGirderToBeamRight(ret: Double); safecall;
    function Get_DistGirderFlangeToBeamFlangeLeft: Double; safecall;
    procedure Set_DistGirderFlangeToBeamFlangeLeft(ret: Double); safecall;
    function Get_DistGirderFlangeToBeamFlangeRight: Double; safecall;
    procedure Set_DistGirderFlangeToBeamFlangeRight(ret: Double); safecall;
    function Get_ElementType: IRJointElementType; safecall;
    procedure Set_ElementType(ret: IRJointElementType); safecall;
    function Get_IsSymetric: WordBool; safecall;
    procedure Set_IsSymetric(ret: WordBool); safecall;
    function Get_SeatLeftUpExist: WordBool; safecall;
    procedure Set_SeatLeftUpExist(ret: WordBool); safecall;
    function Get_SeatUpRightExist: WordBool; safecall;
    procedure Set_SeatUpRightExist(ret: WordBool); safecall;
    function Get_BeamLeftExist: WordBool; safecall;
    procedure Set_BeamLeftExist(ret: WordBool); safecall;
    function Get_BoltsDimensionNamesVector: IRobotNamesArray; safecall;
    function Get_BoltsClassVector: IRobotNamesArray; safecall;
    function Get_BoltsDimensionsVector: IRobotValuesArray; safecall;
    function Get_IsShearPortionAllBolts: WordBool; safecall;
    procedure Set_IsShearPortionAllBolts(ret: WordBool); safecall;
    function Get_ShearPortionAllBolts: IRJointBoltShearPortion; safecall;
    procedure Set_ShearPortionAllBolts(ret: IRJointBoltShearPortion); safecall;
    property Girder: IRJointProfile read Get_Girder;
    property BeamLeft: IRJointBeamGirderBeam read Get_BeamLeft;
    property BeamRight: IRJointBeamGirderBeam read Get_BeamRight;
    property AngleLeft: IRJointBeamGirderAngle read Get_AngleLeft;
    property AngleRight: IRJointBeamGirderAngle read Get_AngleRight;
    property StiffenerLeft: IRJointBeamGirderStiffener read Get_StiffenerLeft;
    property StiffenerRight: IRJointBeamGirderStiffener read Get_StiffenerRight;
    property PlateLeft: IRJointBeamPlate read Get_PlateLeft;
    property PlateRight: IRJointBeamPlate read Get_PlateRight;
    property SeatLeftUp: IRJointBeamGirderSeat read Get_SeatLeftUp;
    property SeatLeftDown: IRJointBeamGirderSeat read Get_SeatLeftDown;
    property SeatRightUp: IRJointBeamGirderSeat read Get_SeatRightUp;
    property SeatRightDown: IRJointBeamGirderSeat read Get_SeatRightDown;
    property DistGirderToBeamLeft: Double read Get_DistGirderToBeamLeft write Set_DistGirderToBeamLeft;
    property DistGirderToBeamRight: Double read Get_DistGirderToBeamRight write Set_DistGirderToBeamRight;
    property DistGirderFlangeToBeamFlangeLeft: Double read Get_DistGirderFlangeToBeamFlangeLeft write Set_DistGirderFlangeToBeamFlangeLeft;
    property DistGirderFlangeToBeamFlangeRight: Double read Get_DistGirderFlangeToBeamFlangeRight write Set_DistGirderFlangeToBeamFlangeRight;
    property ElementType: IRJointElementType read Get_ElementType write Set_ElementType;
    property IsSymetric: WordBool read Get_IsSymetric write Set_IsSymetric;
    property SeatLeftUpExist: WordBool read Get_SeatLeftUpExist write Set_SeatLeftUpExist;
    property SeatUpRightExist: WordBool read Get_SeatUpRightExist write Set_SeatUpRightExist;
    property BeamLeftExist: WordBool read Get_BeamLeftExist write Set_BeamLeftExist;
    property BoltsDimensionNamesVector: IRobotNamesArray read Get_BoltsDimensionNamesVector;
    property BoltsClassVector: IRobotNamesArray read Get_BoltsClassVector;
    property BoltsDimensionsVector: IRobotValuesArray read Get_BoltsDimensionsVector;
    property IsShearPortionAllBolts: WordBool read Get_IsShearPortionAllBolts write Set_IsShearPortionAllBolts;
    property ShearPortionAllBolts: IRJointBoltShearPortion read Get_ShearPortionAllBolts write Set_ShearPortionAllBolts;
  end;

// *********************************************************************//
// DispIntf:  IRJointBeamGirderDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {73D9E5CE-623C-4A42-8C7E-99D6FB571EC2}
// *********************************************************************//
  IRJointBeamGirderDisp = dispinterface
    ['{73D9E5CE-623C-4A42-8C7E-99D6FB571EC2}']
    property Girder: IRJointProfile readonly dispid 1610809344;
    property BeamLeft: IRJointBeamGirderBeam readonly dispid 1610809345;
    property BeamRight: IRJointBeamGirderBeam readonly dispid 1610809346;
    property AngleLeft: IRJointBeamGirderAngle readonly dispid 1610809347;
    property AngleRight: IRJointBeamGirderAngle readonly dispid 1610809348;
    property StiffenerLeft: IRJointBeamGirderStiffener readonly dispid 1610809349;
    property StiffenerRight: IRJointBeamGirderStiffener readonly dispid 1610809350;
    property PlateLeft: IRJointBeamPlate readonly dispid 1610809351;
    property PlateRight: IRJointBeamPlate readonly dispid 1610809352;
    property SeatLeftUp: IRJointBeamGirderSeat readonly dispid 1610809353;
    property SeatLeftDown: IRJointBeamGirderSeat readonly dispid 1610809354;
    property SeatRightUp: IRJointBeamGirderSeat readonly dispid 1610809355;
    property SeatRightDown: IRJointBeamGirderSeat readonly dispid 1610809356;
    property DistGirderToBeamLeft: Double dispid 1610809357;
    property DistGirderToBeamRight: Double dispid 1610809359;
    property DistGirderFlangeToBeamFlangeLeft: Double dispid 1610809361;
    property DistGirderFlangeToBeamFlangeRight: Double dispid 1610809363;
    property ElementType: IRJointElementType dispid 1610809365;
    property IsSymetric: WordBool dispid 1610809367;
    property SeatLeftUpExist: WordBool dispid 1610809369;
    property SeatUpRightExist: WordBool dispid 1610809371;
    property BeamLeftExist: WordBool dispid 1610809373;
    property BoltsDimensionNamesVector: IRobotNamesArray readonly dispid 1610809375;
    property BoltsClassVector: IRobotNamesArray readonly dispid 1610809376;
    property BoltsDimensionsVector: IRobotValuesArray readonly dispid 1610809377;
    property IsShearPortionAllBolts: WordBool dispid 1610809378;
    property ShearPortionAllBolts: IRJointBoltShearPortion dispid 1610809380;
    property WFRelPos: IRJointWebFlangeRelativePos dispid 1610743808;
    property type_: IRJointConnectionType readonly dispid 1610743810;
    procedure SetToRobot(const info: IRJointConnectionInfo); dispid 1610743811;
    procedure GetFromRobot(const info: IRJointConnectionInfo); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRJointBeamGirderLoad
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4E380F52-0806-4513-BB18-58F55309B14E}
// *********************************************************************//
  IRJointBeamGirderLoad = interface(IRJointLoad)
    ['{4E380F52-0806-4513-BB18-58F55309B14E}']
    function Get_LFx: Double; safecall;
    procedure Set_LFx(ret: Double); safecall;
    function Get_LFz: Double; safecall;
    procedure Set_LFz(ret: Double); safecall;
    function Get_LMy: Double; safecall;
    procedure Set_LMy(ret: Double); safecall;
    function Get_RFx: Double; safecall;
    procedure Set_RFx(ret: Double); safecall;
    function Get_RFz: Double; safecall;
    procedure Set_RFz(ret: Double); safecall;
    function Get_RMy: Double; safecall;
    procedure Set_RMy(ret: Double); safecall;
    property LFx: Double read Get_LFx write Set_LFx;
    property LFz: Double read Get_LFz write Set_LFz;
    property LMy: Double read Get_LMy write Set_LMy;
    property RFx: Double read Get_RFx write Set_RFx;
    property RFz: Double read Get_RFz write Set_RFz;
    property RMy: Double read Get_RMy write Set_RMy;
  end;

// *********************************************************************//
// DispIntf:  IRJointBeamGirderLoadDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4E380F52-0806-4513-BB18-58F55309B14E}
// *********************************************************************//
  IRJointBeamGirderLoadDisp = dispinterface
    ['{4E380F52-0806-4513-BB18-58F55309B14E}']
    property LFx: Double dispid 1610809344;
    property LFz: Double dispid 1610809346;
    property LMy: Double dispid 1610809348;
    property RFx: Double dispid 1610809350;
    property RFz: Double dispid 1610809352;
    property RMy: Double dispid 1610809354;
    property Cases: IRobotSelection readonly dispid 1610743808;
    property type_: IRJointLoadType dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRJointBeamColumn
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF36EE95-2731-4928-8603-B36A77A82E17}
// *********************************************************************//
  IRJointBeamColumn = interface(IRJointConnection)
    ['{EF36EE95-2731-4928-8603-B36A77A82E17}']
    function Get_Column: IRJointProfile; safecall;
    function Get_BeamLeft: IRJointProfile; safecall;
    function Get_BeamRight: IRJointProfile; safecall;
    function Get_AngleLeft: IRJointBeamAngle; safecall;
    function Get_AngleRight: IRJointBeamAngle; safecall;
    function Get_PlateLeft: IRJointBeamPlate; safecall;
    function Get_PlateRight: IRJointBeamPlate; safecall;
    function Get_LSeatLeftUp: IRJointBeamSeatL; safecall;
    function Get_LSeatLeftDown: IRJointBeamSeatL; safecall;
    function Get_LSeatRightUp: IRJointBeamSeatL; safecall;
    function Get_LSeatRightDown: IRJointBeamSeatL; safecall;
    function Get_TSeatLeftUp: IRJointBeamSeatT; safecall;
    function Get_TSeatLeftDown: IRJointBeamSeatT; safecall;
    function Get_TSeatRightUp: IRJointBeamSeatT; safecall;
    function Get_TSeatRightDown: IRJointBeamSeatT; safecall;
    function Get_BracketLeftUp: IRJointBeamColumnFlangePlate; safecall;
    function Get_BracketLeftDown: IRJointBeamColumnFlangePlate; safecall;
    function Get_BracketRightUp: IRJointBeamColumnFlangePlate; safecall;
    function Get_BracketRightDown: IRJointBeamColumnFlangePlate; safecall;
    function Get_DistColumnToBeamLeft: Double; safecall;
    procedure Set_DistColumnToBeamLeft(ret: Double); safecall;
    function Get_DistColumnToBeamRight: Double; safecall;
    procedure Set_DistColumnToBeamRight(ret: Double); safecall;
    function Get_ElementType: IRJointBeamColumnElementType; safecall;
    procedure Set_ElementType(ret: IRJointBeamColumnElementType); safecall;
    function Get_BeamLeftExist: WordBool; safecall;
    procedure Set_BeamLeftExist(ret: WordBool); safecall;
    function Get_IsSymetric: WordBool; safecall;
    procedure Set_IsSymetric(ret: WordBool); safecall;
    function Get_SeatLeftUpExist: WordBool; safecall;
    procedure Set_SeatLeftUpExist(ret: WordBool); safecall;
    function Get_SeatUpRightExist: WordBool; safecall;
    procedure Set_SeatUpRightExist(ret: WordBool); safecall;
    function Get_BoltsDimensionNamesVector: IRobotNamesArray; safecall;
    function Get_BoltsClassVector: IRobotNamesArray; safecall;
    function Get_BoltsDimensionsVector: IRobotValuesArray; safecall;
    function Get_BeamLeftCutEnd: IRJointBeamCut; safecall;
    function Get_BeamRightCutEnd: IRJointBeamCut; safecall;
    function Get_IsShearPortionAllBolts: WordBool; safecall;
    procedure Set_IsShearPortionAllBolts(ret: WordBool); safecall;
    function Get_ShearPortionAllBolts: IRJointBoltShearPortion; safecall;
    procedure Set_ShearPortionAllBolts(ret: IRJointBoltShearPortion); safecall;
    property Column: IRJointProfile read Get_Column;
    property BeamLeft: IRJointProfile read Get_BeamLeft;
    property BeamRight: IRJointProfile read Get_BeamRight;
    property AngleLeft: IRJointBeamAngle read Get_AngleLeft;
    property AngleRight: IRJointBeamAngle read Get_AngleRight;
    property PlateLeft: IRJointBeamPlate read Get_PlateLeft;
    property PlateRight: IRJointBeamPlate read Get_PlateRight;
    property LSeatLeftUp: IRJointBeamSeatL read Get_LSeatLeftUp;
    property LSeatLeftDown: IRJointBeamSeatL read Get_LSeatLeftDown;
    property LSeatRightUp: IRJointBeamSeatL read Get_LSeatRightUp;
    property LSeatRightDown: IRJointBeamSeatL read Get_LSeatRightDown;
    property TSeatLeftUp: IRJointBeamSeatT read Get_TSeatLeftUp;
    property TSeatLeftDown: IRJointBeamSeatT read Get_TSeatLeftDown;
    property TSeatRightUp: IRJointBeamSeatT read Get_TSeatRightUp;
    property TSeatRightDown: IRJointBeamSeatT read Get_TSeatRightDown;
    property BracketLeftUp: IRJointBeamColumnFlangePlate read Get_BracketLeftUp;
    property BracketLeftDown: IRJointBeamColumnFlangePlate read Get_BracketLeftDown;
    property BracketRightUp: IRJointBeamColumnFlangePlate read Get_BracketRightUp;
    property BracketRightDown: IRJointBeamColumnFlangePlate read Get_BracketRightDown;
    property DistColumnToBeamLeft: Double read Get_DistColumnToBeamLeft write Set_DistColumnToBeamLeft;
    property DistColumnToBeamRight: Double read Get_DistColumnToBeamRight write Set_DistColumnToBeamRight;
    property ElementType: IRJointBeamColumnElementType read Get_ElementType write Set_ElementType;
    property BeamLeftExist: WordBool read Get_BeamLeftExist write Set_BeamLeftExist;
    property IsSymetric: WordBool read Get_IsSymetric write Set_IsSymetric;
    property SeatLeftUpExist: WordBool read Get_SeatLeftUpExist write Set_SeatLeftUpExist;
    property SeatUpRightExist: WordBool read Get_SeatUpRightExist write Set_SeatUpRightExist;
    property BoltsDimensionNamesVector: IRobotNamesArray read Get_BoltsDimensionNamesVector;
    property BoltsClassVector: IRobotNamesArray read Get_BoltsClassVector;
    property BoltsDimensionsVector: IRobotValuesArray read Get_BoltsDimensionsVector;
    property BeamLeftCutEnd: IRJointBeamCut read Get_BeamLeftCutEnd;
    property BeamRightCutEnd: IRJointBeamCut read Get_BeamRightCutEnd;
    property IsShearPortionAllBolts: WordBool read Get_IsShearPortionAllBolts write Set_IsShearPortionAllBolts;
    property ShearPortionAllBolts: IRJointBoltShearPortion read Get_ShearPortionAllBolts write Set_ShearPortionAllBolts;
  end;

// *********************************************************************//
// DispIntf:  IRJointBeamColumnDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF36EE95-2731-4928-8603-B36A77A82E17}
// *********************************************************************//
  IRJointBeamColumnDisp = dispinterface
    ['{EF36EE95-2731-4928-8603-B36A77A82E17}']
    property Column: IRJointProfile readonly dispid 1610809344;
    property BeamLeft: IRJointProfile readonly dispid 1610809345;
    property BeamRight: IRJointProfile readonly dispid 1610809346;
    property AngleLeft: IRJointBeamAngle readonly dispid 1610809347;
    property AngleRight: IRJointBeamAngle readonly dispid 1610809348;
    property PlateLeft: IRJointBeamPlate readonly dispid 1610809349;
    property PlateRight: IRJointBeamPlate readonly dispid 1610809350;
    property LSeatLeftUp: IRJointBeamSeatL readonly dispid 1610809351;
    property LSeatLeftDown: IRJointBeamSeatL readonly dispid 1610809352;
    property LSeatRightUp: IRJointBeamSeatL readonly dispid 1610809353;
    property LSeatRightDown: IRJointBeamSeatL readonly dispid 1610809354;
    property TSeatLeftUp: IRJointBeamSeatT readonly dispid 1610809355;
    property TSeatLeftDown: IRJointBeamSeatT readonly dispid 1610809356;
    property TSeatRightUp: IRJointBeamSeatT readonly dispid 1610809357;
    property TSeatRightDown: IRJointBeamSeatT readonly dispid 1610809358;
    property BracketLeftUp: IRJointBeamColumnFlangePlate readonly dispid 1610809359;
    property BracketLeftDown: IRJointBeamColumnFlangePlate readonly dispid 1610809360;
    property BracketRightUp: IRJointBeamColumnFlangePlate readonly dispid 1610809361;
    property BracketRightDown: IRJointBeamColumnFlangePlate readonly dispid 1610809362;
    property DistColumnToBeamLeft: Double dispid 1610809363;
    property DistColumnToBeamRight: Double dispid 1610809365;
    property ElementType: IRJointBeamColumnElementType dispid 1610809367;
    property BeamLeftExist: WordBool dispid 1610809369;
    property IsSymetric: WordBool dispid 1610809371;
    property SeatLeftUpExist: WordBool dispid 1610809373;
    property SeatUpRightExist: WordBool dispid 1610809375;
    property BoltsDimensionNamesVector: IRobotNamesArray readonly dispid 1610809377;
    property BoltsClassVector: IRobotNamesArray readonly dispid 1610809378;
    property BoltsDimensionsVector: IRobotValuesArray readonly dispid 1610809379;
    property BeamLeftCutEnd: IRJointBeamCut readonly dispid 1610809380;
    property BeamRightCutEnd: IRJointBeamCut readonly dispid 1610809381;
    property IsShearPortionAllBolts: WordBool dispid 1610809382;
    property ShearPortionAllBolts: IRJointBoltShearPortion dispid 1610809384;
    property WFRelPos: IRJointWebFlangeRelativePos dispid 1610743808;
    property type_: IRJointConnectionType readonly dispid 1610743810;
    procedure SetToRobot(const info: IRJointConnectionInfo); dispid 1610743811;
    procedure GetFromRobot(const info: IRJointConnectionInfo); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRJointBeamAngle
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9A890EAA-1DAA-400D-955C-6C3D28F2110A}
// *********************************************************************//
  IRJointBeamAngle = interface(IDispatch)
    ['{9A890EAA-1DAA-400D-955C-6C3D28F2110A}']
    function Get_Element: IRJointAngle; safecall;
    function Get_BoltsMain: IRJointMainBolts; safecall;
    function Get_BoltsBeam: IRJointBeamBolts; safecall;
    function Get_WeldsMain: IRJointWeld; safecall;
    function Get_WeldsBeam: IRJointWeld; safecall;
    function Get_ConnectorsMain: IRJointConnectorsType; safecall;
    procedure Set_ConnectorsMain(ret: IRJointConnectorsType); safecall;
    function Get_ConnectorsBeam: IRJointConnectorsType; safecall;
    procedure Set_ConnectorsBeam(ret: IRJointConnectorsType); safecall;
    function Get_CenterElement: Integer; safecall;
    procedure Set_CenterElement(ret: Integer); safecall;
    property Element: IRJointAngle read Get_Element;
    property BoltsMain: IRJointMainBolts read Get_BoltsMain;
    property BoltsBeam: IRJointBeamBolts read Get_BoltsBeam;
    property WeldsMain: IRJointWeld read Get_WeldsMain;
    property WeldsBeam: IRJointWeld read Get_WeldsBeam;
    property ConnectorsMain: IRJointConnectorsType read Get_ConnectorsMain write Set_ConnectorsMain;
    property ConnectorsBeam: IRJointConnectorsType read Get_ConnectorsBeam write Set_ConnectorsBeam;
    property CenterElement: Integer read Get_CenterElement write Set_CenterElement;
  end;

// *********************************************************************//
// DispIntf:  IRJointBeamAngleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9A890EAA-1DAA-400D-955C-6C3D28F2110A}
// *********************************************************************//
  IRJointBeamAngleDisp = dispinterface
    ['{9A890EAA-1DAA-400D-955C-6C3D28F2110A}']
    property Element: IRJointAngle readonly dispid 1610743808;
    property BoltsMain: IRJointMainBolts readonly dispid 1610743809;
    property BoltsBeam: IRJointBeamBolts readonly dispid 1610743810;
    property WeldsMain: IRJointWeld readonly dispid 1610743811;
    property WeldsBeam: IRJointWeld readonly dispid 1610743812;
    property ConnectorsMain: IRJointConnectorsType dispid 1610743813;
    property ConnectorsBeam: IRJointConnectorsType dispid 1610743815;
    property CenterElement: Integer dispid 1610743817;
  end;

// *********************************************************************//
// Interface: IRJointBeamSeatL
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FDB7F092-860A-46A5-9C0D-54803D1E8DF3}
// *********************************************************************//
  IRJointBeamSeatL = interface(IDispatch)
    ['{FDB7F092-860A-46A5-9C0D-54803D1E8DF3}']
    function Get_Section: WideString; safecall;
    procedure Set_Section(const ret: WideString); safecall;
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_ConnectorsToMain: IRJointConnectorsType; safecall;
    procedure Set_ConnectorsToMain(ret: IRJointConnectorsType); safecall;
    function Get_ConnectorsToBeam: IRJointConnectorsType; safecall;
    procedure Set_ConnectorsToBeam(ret: IRJointConnectorsType); safecall;
    function Get_BoltsMain: IRJointBeamSeatMainBolts; safecall;
    function Get_BoltsBeam: IRJointMainBolts; safecall;
    function Get_WeldsMain: IRJointWeld; safecall;
    function Get_WeldsBeam: IRJointWeld; safecall;
    function Get_ProfilePosition: IRJointAngleProfilePosition; safecall;
    procedure Set_ProfilePosition(ret: IRJointAngleProfilePosition); safecall;
    function Get_Profile: IRJointProfile; safecall;
    function Get_Exist: Integer; safecall;
    procedure Set_Exist(ret: Integer); safecall;
    property Section: WideString read Get_Section write Set_Section;
    property Material: WideString read Get_Material write Set_Material;
    property Length: Double read Get_Length write Set_Length;
    property ConnectorsToMain: IRJointConnectorsType read Get_ConnectorsToMain write Set_ConnectorsToMain;
    property ConnectorsToBeam: IRJointConnectorsType read Get_ConnectorsToBeam write Set_ConnectorsToBeam;
    property BoltsMain: IRJointBeamSeatMainBolts read Get_BoltsMain;
    property BoltsBeam: IRJointMainBolts read Get_BoltsBeam;
    property WeldsMain: IRJointWeld read Get_WeldsMain;
    property WeldsBeam: IRJointWeld read Get_WeldsBeam;
    property ProfilePosition: IRJointAngleProfilePosition read Get_ProfilePosition write Set_ProfilePosition;
    property Profile: IRJointProfile read Get_Profile;
    property Exist: Integer read Get_Exist write Set_Exist;
  end;

// *********************************************************************//
// DispIntf:  IRJointBeamSeatLDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FDB7F092-860A-46A5-9C0D-54803D1E8DF3}
// *********************************************************************//
  IRJointBeamSeatLDisp = dispinterface
    ['{FDB7F092-860A-46A5-9C0D-54803D1E8DF3}']
    property Section: WideString dispid 1610743808;
    property Material: WideString dispid 1610743810;
    property Length: Double dispid 1610743812;
    property ConnectorsToMain: IRJointConnectorsType dispid 1610743814;
    property ConnectorsToBeam: IRJointConnectorsType dispid 1610743816;
    property BoltsMain: IRJointBeamSeatMainBolts readonly dispid 1610743818;
    property BoltsBeam: IRJointMainBolts readonly dispid 1610743819;
    property WeldsMain: IRJointWeld readonly dispid 1610743820;
    property WeldsBeam: IRJointWeld readonly dispid 1610743821;
    property ProfilePosition: IRJointAngleProfilePosition dispid 1610743822;
    property Profile: IRJointProfile readonly dispid 1610743824;
    property Exist: Integer dispid 1610743825;
  end;

// *********************************************************************//
// Interface: IRJointBeamSeatMainBolts
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7426F9C-3AE9-4BCB-8E0B-3BAD86335211}
// *********************************************************************//
  IRJointBeamSeatMainBolts = interface(IDispatch)
    ['{A7426F9C-3AE9-4BCB-8E0B-3BAD86335211}']
    function Get__className: WideString; safecall;
    procedure Set__className(const ret: WideString); safecall;
    function Get_DiameterName: WideString; safecall;
    procedure Set_DiameterName(const ret: WideString); safecall;
    function Get_Diameter: Integer; safecall;
    function Get_Area: Double; safecall;
    function Get_Friction: Double; safecall;
    procedure Set_Friction(ret: Double); safecall;
    function Get_Rows: Integer; safecall;
    procedure Set_Rows(ret: Integer); safecall;
    function Get_Cols: Integer; safecall;
    procedure Set_Cols(ret: Integer); safecall;
    function Get_SpacingV: Double; safecall;
    procedure Set_SpacingV(ret: Double); safecall;
    function Get_SpacingH: Double; safecall;
    procedure Set_SpacingH(ret: Double); safecall;
    function Get_DistFromFlangeEdge: Double; safecall;
    procedure Set_DistFromFlangeEdge(ret: Double); safecall;
    function Get_DistFromVertElementEdge: Double; safecall;
    procedure Set_DistFromVertElementEdge(ret: Double); safecall;
    procedure Set_Diameter(ret: Integer); safecall;
    function Get_CenterElement: Integer; safecall;
    procedure Set_CenterElement(ret: Integer); safecall;
    function Get_ShearPortion: IRJointBoltShearPortion; safecall;
    procedure Set_ShearPortion(ret: IRJointBoltShearPortion); safecall;
    property _className: WideString read Get__className write Set__className;
    property DiameterName: WideString read Get_DiameterName write Set_DiameterName;
    property Diameter: Integer read Get_Diameter write Set_Diameter;
    property Area: Double read Get_Area;
    property Friction: Double read Get_Friction write Set_Friction;
    property Rows: Integer read Get_Rows write Set_Rows;
    property Cols: Integer read Get_Cols write Set_Cols;
    property SpacingV: Double read Get_SpacingV write Set_SpacingV;
    property SpacingH: Double read Get_SpacingH write Set_SpacingH;
    property DistFromFlangeEdge: Double read Get_DistFromFlangeEdge write Set_DistFromFlangeEdge;
    property DistFromVertElementEdge: Double read Get_DistFromVertElementEdge write Set_DistFromVertElementEdge;
    property CenterElement: Integer read Get_CenterElement write Set_CenterElement;
    property ShearPortion: IRJointBoltShearPortion read Get_ShearPortion write Set_ShearPortion;
  end;

// *********************************************************************//
// DispIntf:  IRJointBeamSeatMainBoltsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7426F9C-3AE9-4BCB-8E0B-3BAD86335211}
// *********************************************************************//
  IRJointBeamSeatMainBoltsDisp = dispinterface
    ['{A7426F9C-3AE9-4BCB-8E0B-3BAD86335211}']
    property _className: WideString dispid 1610743808;
    property DiameterName: WideString dispid 1610743810;
    property Diameter: Integer dispid 1610743812;
    property Area: Double readonly dispid 1610743813;
    property Friction: Double dispid 1610743814;
    property Rows: Integer dispid 1610743816;
    property Cols: Integer dispid 1610743818;
    property SpacingV: Double dispid 1610743820;
    property SpacingH: Double dispid 1610743822;
    property DistFromFlangeEdge: Double dispid 1610743824;
    property DistFromVertElementEdge: Double dispid 1610743826;
    property CenterElement: Integer dispid 1610743829;
    property ShearPortion: IRJointBoltShearPortion dispid 1610743831;
  end;

// *********************************************************************//
// Interface: IRJointBeamSeatT
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D35F19E7-109C-4562-844E-3E845FE3E5AE}
// *********************************************************************//
  IRJointBeamSeatT = interface(IDispatch)
    ['{D35F19E7-109C-4562-844E-3E845FE3E5AE}']
    function Get_Section: WideString; safecall;
    procedure Set_Section(const ret: WideString); safecall;
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_ConnectorsToMain: IRJointConnectorsType; safecall;
    procedure Set_ConnectorsToMain(ret: IRJointConnectorsType); safecall;
    function Get_ConnectorsToBeam: IRJointConnectorsType; safecall;
    procedure Set_ConnectorsToBeam(ret: IRJointConnectorsType); safecall;
    function Get_BoltsMain: IRJointBeamSeatMainBolts; safecall;
    function Get_BoltsBeam: IRJointMainBolts; safecall;
    function Get_WeldsMain: IRJointWeld; safecall;
    function Get_WeldsBeam: IRJointWeld; safecall;
    function Get_Profile: IRJointProfile; safecall;
    function Get_Exist: Integer; safecall;
    procedure Set_Exist(ret: Integer); safecall;
    property Section: WideString read Get_Section write Set_Section;
    property Material: WideString read Get_Material write Set_Material;
    property Length: Double read Get_Length write Set_Length;
    property ConnectorsToMain: IRJointConnectorsType read Get_ConnectorsToMain write Set_ConnectorsToMain;
    property ConnectorsToBeam: IRJointConnectorsType read Get_ConnectorsToBeam write Set_ConnectorsToBeam;
    property BoltsMain: IRJointBeamSeatMainBolts read Get_BoltsMain;
    property BoltsBeam: IRJointMainBolts read Get_BoltsBeam;
    property WeldsMain: IRJointWeld read Get_WeldsMain;
    property WeldsBeam: IRJointWeld read Get_WeldsBeam;
    property Profile: IRJointProfile read Get_Profile;
    property Exist: Integer read Get_Exist write Set_Exist;
  end;

// *********************************************************************//
// DispIntf:  IRJointBeamSeatTDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D35F19E7-109C-4562-844E-3E845FE3E5AE}
// *********************************************************************//
  IRJointBeamSeatTDisp = dispinterface
    ['{D35F19E7-109C-4562-844E-3E845FE3E5AE}']
    property Section: WideString dispid 1610743808;
    property Material: WideString dispid 1610743810;
    property Length: Double dispid 1610743812;
    property ConnectorsToMain: IRJointConnectorsType dispid 1610743814;
    property ConnectorsToBeam: IRJointConnectorsType dispid 1610743816;
    property BoltsMain: IRJointBeamSeatMainBolts readonly dispid 1610743818;
    property BoltsBeam: IRJointMainBolts readonly dispid 1610743819;
    property WeldsMain: IRJointWeld readonly dispid 1610743820;
    property WeldsBeam: IRJointWeld readonly dispid 1610743821;
    property Profile: IRJointProfile readonly dispid 1610743822;
    property Exist: Integer dispid 1610743823;
  end;

// *********************************************************************//
// Interface: IRJointBeamColumnFlangePlate
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56BC4BA1-38CD-4E3E-94D3-16B4C6FACFAD}
// *********************************************************************//
  IRJointBeamColumnFlangePlate = interface(IDispatch)
    ['{56BC4BA1-38CD-4E3E-94D3-16B4C6FACFAD}']
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_Height: Double; safecall;
    procedure Set_Height(ret: Double); safecall;
    function Get_Thick: Double; safecall;
    procedure Set_Thick(ret: Double); safecall;
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    function Get_ConnectorsType: IRJointConnectorsType; safecall;
    procedure Set_ConnectorsType(ret: IRJointConnectorsType); safecall;
    function Get_Bolts: IRJointMainBolts; safecall;
    function Get_WeldsMain: IRJointWeld; safecall;
    function Get_WeldsFlange: IRJointWeld; safecall;
    property Length: Double read Get_Length write Set_Length;
    property Height: Double read Get_Height write Set_Height;
    property Thick: Double read Get_Thick write Set_Thick;
    property Material: WideString read Get_Material write Set_Material;
    property ConnectorsType: IRJointConnectorsType read Get_ConnectorsType write Set_ConnectorsType;
    property Bolts: IRJointMainBolts read Get_Bolts;
    property WeldsMain: IRJointWeld read Get_WeldsMain;
    property WeldsFlange: IRJointWeld read Get_WeldsFlange;
  end;

// *********************************************************************//
// DispIntf:  IRJointBeamColumnFlangePlateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {56BC4BA1-38CD-4E3E-94D3-16B4C6FACFAD}
// *********************************************************************//
  IRJointBeamColumnFlangePlateDisp = dispinterface
    ['{56BC4BA1-38CD-4E3E-94D3-16B4C6FACFAD}']
    property Length: Double dispid 1610743808;
    property Height: Double dispid 1610743810;
    property Thick: Double dispid 1610743812;
    property Material: WideString dispid 1610743814;
    property ConnectorsType: IRJointConnectorsType dispid 1610743816;
    property Bolts: IRJointMainBolts readonly dispid 1610743818;
    property WeldsMain: IRJointWeld readonly dispid 1610743819;
    property WeldsFlange: IRJointWeld readonly dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRJointSplice
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C6532B1F-10FE-4A23-B479-2B095BF230DF}
// *********************************************************************//
  IRJointSplice = interface(IRJointConnection)
    ['{C6532B1F-10FE-4A23-B479-2B095BF230DF}']
    function Get_SubType: IRJointSpliceType; safecall;
    procedure Set_SubType(ret: IRJointSpliceType); safecall;
    function Get_Symmetrical: Integer; safecall;
    procedure Set_Symmetrical(ret: Integer); safecall;
    function Get_AlignUpperBarsEdge: Integer; safecall;
    procedure Set_AlignUpperBarsEdge(ret: Integer); safecall;
    function Get_TheSameMaterialForAllComponents: Integer; safecall;
    procedure Set_TheSameMaterialForAllComponents(ret: Integer); safecall;
    function Get_TheSameSettingsForAllBolts: Integer; safecall;
    procedure Set_TheSameSettingsForAllBolts(ret: Integer); safecall;
    function Get_TheSameThicknessForWebWelds: Integer; safecall;
    procedure Set_TheSameThicknessForWebWelds(ret: Integer); safecall;
    function Get_TheSameThicknessForFlangeWelds: Integer; safecall;
    procedure Set_TheSameThicknessForFlangeWelds(ret: Integer); safecall;
    function Get_DistanceBetweenBarsEdge: Double; safecall;
    procedure Set_DistanceBetweenBarsEdge(ret: Double); safecall;
    function Get_DistanceFromBarAxis: Double; safecall;
    procedure Set_DistanceFromBarAxis(ret: Double); safecall;
    function Get_PlateJointType(sType: IRJointSplicePlatesSetType): IRJointSplicePlateJointType; safecall;
    procedure Set_PlateJointType(sType: IRJointSplicePlatesSetType; ret: IRJointSplicePlateJointType); safecall;
    function Get_PrimaryProfile: IRJointProfile; safecall;
    function Get_SecondaryProfile: IRJointProfile; safecall;
    function Get_Plate(plateType: IRJointSplicePlateType): IRJointSplicePlate; safecall;
    function Get_Bolts(boltsSetType: IRJointSpliceBoltsSetType): IRJointSpliceBolts; safecall;
    function Get_Welds: IRJointSpliceWelds; safecall;
    function Get_BoltsDimensionNamesVector: IRobotNamesArray; safecall;
    function Get_BoltsClassVector: IRobotNamesArray; safecall;
    function Get_BoltsDimensionsVector: IRobotValuesArray; safecall;
    property SubType: IRJointSpliceType read Get_SubType write Set_SubType;
    property Symmetrical: Integer read Get_Symmetrical write Set_Symmetrical;
    property AlignUpperBarsEdge: Integer read Get_AlignUpperBarsEdge write Set_AlignUpperBarsEdge;
    property TheSameMaterialForAllComponents: Integer read Get_TheSameMaterialForAllComponents write Set_TheSameMaterialForAllComponents;
    property TheSameSettingsForAllBolts: Integer read Get_TheSameSettingsForAllBolts write Set_TheSameSettingsForAllBolts;
    property TheSameThicknessForWebWelds: Integer read Get_TheSameThicknessForWebWelds write Set_TheSameThicknessForWebWelds;
    property TheSameThicknessForFlangeWelds: Integer read Get_TheSameThicknessForFlangeWelds write Set_TheSameThicknessForFlangeWelds;
    property DistanceBetweenBarsEdge: Double read Get_DistanceBetweenBarsEdge write Set_DistanceBetweenBarsEdge;
    property DistanceFromBarAxis: Double read Get_DistanceFromBarAxis write Set_DistanceFromBarAxis;
    property PlateJointType[sType: IRJointSplicePlatesSetType]: IRJointSplicePlateJointType read Get_PlateJointType write Set_PlateJointType;
    property PrimaryProfile: IRJointProfile read Get_PrimaryProfile;
    property SecondaryProfile: IRJointProfile read Get_SecondaryProfile;
    property Plate[plateType: IRJointSplicePlateType]: IRJointSplicePlate read Get_Plate;
    property Bolts[boltsSetType: IRJointSpliceBoltsSetType]: IRJointSpliceBolts read Get_Bolts;
    property Welds: IRJointSpliceWelds read Get_Welds;
    property BoltsDimensionNamesVector: IRobotNamesArray read Get_BoltsDimensionNamesVector;
    property BoltsClassVector: IRobotNamesArray read Get_BoltsClassVector;
    property BoltsDimensionsVector: IRobotValuesArray read Get_BoltsDimensionsVector;
  end;

// *********************************************************************//
// DispIntf:  IRJointSpliceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C6532B1F-10FE-4A23-B479-2B095BF230DF}
// *********************************************************************//
  IRJointSpliceDisp = dispinterface
    ['{C6532B1F-10FE-4A23-B479-2B095BF230DF}']
    property SubType: IRJointSpliceType dispid 1610809344;
    property Symmetrical: Integer dispid 1610809346;
    property AlignUpperBarsEdge: Integer dispid 1610809348;
    property TheSameMaterialForAllComponents: Integer dispid 1610809350;
    property TheSameSettingsForAllBolts: Integer dispid 1610809352;
    property TheSameThicknessForWebWelds: Integer dispid 1610809354;
    property TheSameThicknessForFlangeWelds: Integer dispid 1610809356;
    property DistanceBetweenBarsEdge: Double dispid 1610809358;
    property DistanceFromBarAxis: Double dispid 1610809360;
    property PlateJointType[sType: IRJointSplicePlatesSetType]: IRJointSplicePlateJointType dispid 1610809362;
    property PrimaryProfile: IRJointProfile readonly dispid 1610809364;
    property SecondaryProfile: IRJointProfile readonly dispid 1610809365;
    property Plate[plateType: IRJointSplicePlateType]: IRJointSplicePlate readonly dispid 1610809366;
    property Bolts[boltsSetType: IRJointSpliceBoltsSetType]: IRJointSpliceBolts readonly dispid 1610809367;
    property Welds: IRJointSpliceWelds readonly dispid 1610809368;
    property BoltsDimensionNamesVector: IRobotNamesArray readonly dispid 1610809369;
    property BoltsClassVector: IRobotNamesArray readonly dispid 1610809370;
    property BoltsDimensionsVector: IRobotValuesArray readonly dispid 1610809371;
    property WFRelPos: IRJointWebFlangeRelativePos dispid 1610743808;
    property type_: IRJointConnectionType readonly dispid 1610743810;
    procedure SetToRobot(const info: IRJointConnectionInfo); dispid 1610743811;
    procedure GetFromRobot(const info: IRJointConnectionInfo); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRJointSplicePlate
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {749E41E7-4B80-4309-A003-203631E9F68E}
// *********************************************************************//
  IRJointSplicePlate = interface(IRJointPlate)
    ['{749E41E7-4B80-4309-A003-203631E9F68E}']
    function Get_type_: IRJointSplicePlateType; safecall;
    procedure Set_type_(ret: IRJointSplicePlateType); safecall;
    function Get_Center: Integer; safecall;
    procedure Set_Center(ret: Integer); safecall;
    function Get_OneSided: Integer; safecall;
    procedure Set_OneSided(ret: Integer); safecall;
    function Get_DistanceFromPrimaryBarEdge: Double; safecall;
    procedure Set_DistanceFromPrimaryBarEdge(ret: Double); safecall;
    function Get_DistanceFromSecondaryBarEdge: Double; safecall;
    procedure Set_DistanceFromSecondaryBarEdge(ret: Double); safecall;
    function Get_DistanceFromEdgeOrPrimaryBarAxis: Double; safecall;
    procedure Set_DistanceFromEdgeOrPrimaryBarAxis(ret: Double); safecall;
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    property type_: IRJointSplicePlateType read Get_type_ write Set_type_;
    property Center: Integer read Get_Center write Set_Center;
    property OneSided: Integer read Get_OneSided write Set_OneSided;
    property DistanceFromPrimaryBarEdge: Double read Get_DistanceFromPrimaryBarEdge write Set_DistanceFromPrimaryBarEdge;
    property DistanceFromSecondaryBarEdge: Double read Get_DistanceFromSecondaryBarEdge write Set_DistanceFromSecondaryBarEdge;
    property DistanceFromEdgeOrPrimaryBarAxis: Double read Get_DistanceFromEdgeOrPrimaryBarAxis write Set_DistanceFromEdgeOrPrimaryBarAxis;
    property Material: WideString read Get_Material write Set_Material;
  end;

// *********************************************************************//
// DispIntf:  IRJointSplicePlateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {749E41E7-4B80-4309-A003-203631E9F68E}
// *********************************************************************//
  IRJointSplicePlateDisp = dispinterface
    ['{749E41E7-4B80-4309-A003-203631E9F68E}']
    property type_: IRJointSplicePlateType dispid 1610809344;
    property Center: Integer dispid 1610809346;
    property OneSided: Integer dispid 1610809348;
    property DistanceFromPrimaryBarEdge: Double dispid 1610809350;
    property DistanceFromSecondaryBarEdge: Double dispid 1610809352;
    property DistanceFromEdgeOrPrimaryBarAxis: Double dispid 1610809354;
    property Material: WideString dispid 1610809356;
    property Length: Double dispid 1610743808;
    property Width: Double dispid 1610743810;
    property Thick: Double dispid 1610743812;
    property Exist: Integer dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRJointSpliceBolts
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {17DC42CF-D0B8-4DDE-AECA-71B2EBC6B402}
// *********************************************************************//
  IRJointSpliceBolts = interface(IDispatch)
    ['{17DC42CF-D0B8-4DDE-AECA-71B2EBC6B402}']
    function Get_SetType: IRJointSpliceBoltsSetType; safecall;
    procedure Set_SetType(ret: IRJointSpliceBoltsSetType); safecall;
    function Get__className: WideString; safecall;
    procedure Set__className(const ret: WideString); safecall;
    function Get_DiameterName: WideString; safecall;
    procedure Set_DiameterName(const ret: WideString); safecall;
    function Get_Diameter: Double; safecall;
    procedure Set_Diameter(ret: Double); safecall;
    function Get_ShearPortion: IRJointBoltShearPortion; safecall;
    procedure Set_ShearPortion(ret: IRJointBoltShearPortion); safecall;
    function Get_ConnectionCategory: IRJointSpliceBoltsConnectionCategory; safecall;
    procedure Set_ConnectionCategory(ret: IRJointSpliceBoltsConnectionCategory); safecall;
    function Get_SlipFactor: Double; safecall;
    procedure Set_SlipFactor(ret: Double); safecall;
    function Get_Ks: Double; safecall;
    procedure Set_Ks(ret: Double); safecall;
    function Get_Rows: Integer; safecall;
    procedure Set_Rows(ret: Integer); safecall;
    function Get_Cols: Integer; safecall;
    procedure Set_Cols(ret: Integer); safecall;
    function Get_Center: Integer; safecall;
    procedure Set_Center(ret: Integer); safecall;
    function Get_SpacingV: Double; safecall;
    procedure Set_SpacingV(ret: Double); safecall;
    function Get_SpacingH: Double; safecall;
    procedure Set_SpacingH(ret: Double); safecall;
    function Get_DistanceFromHorizontalEdge: Double; safecall;
    procedure Set_DistanceFromHorizontalEdge(ret: Double); safecall;
    function Get_DistanceFromVerticalEdge: Double; safecall;
    procedure Set_DistanceFromVerticalEdge(ret: Double); safecall;
    property SetType: IRJointSpliceBoltsSetType read Get_SetType write Set_SetType;
    property _className: WideString read Get__className write Set__className;
    property DiameterName: WideString read Get_DiameterName write Set_DiameterName;
    property Diameter: Double read Get_Diameter write Set_Diameter;
    property ShearPortion: IRJointBoltShearPortion read Get_ShearPortion write Set_ShearPortion;
    property ConnectionCategory: IRJointSpliceBoltsConnectionCategory read Get_ConnectionCategory write Set_ConnectionCategory;
    property SlipFactor: Double read Get_SlipFactor write Set_SlipFactor;
    property Ks: Double read Get_Ks write Set_Ks;
    property Rows: Integer read Get_Rows write Set_Rows;
    property Cols: Integer read Get_Cols write Set_Cols;
    property Center: Integer read Get_Center write Set_Center;
    property SpacingV: Double read Get_SpacingV write Set_SpacingV;
    property SpacingH: Double read Get_SpacingH write Set_SpacingH;
    property DistanceFromHorizontalEdge: Double read Get_DistanceFromHorizontalEdge write Set_DistanceFromHorizontalEdge;
    property DistanceFromVerticalEdge: Double read Get_DistanceFromVerticalEdge write Set_DistanceFromVerticalEdge;
  end;

// *********************************************************************//
// DispIntf:  IRJointSpliceBoltsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {17DC42CF-D0B8-4DDE-AECA-71B2EBC6B402}
// *********************************************************************//
  IRJointSpliceBoltsDisp = dispinterface
    ['{17DC42CF-D0B8-4DDE-AECA-71B2EBC6B402}']
    property SetType: IRJointSpliceBoltsSetType dispid 1610743808;
    property _className: WideString dispid 1610743810;
    property DiameterName: WideString dispid 1610743812;
    property Diameter: Double dispid 1610743814;
    property ShearPortion: IRJointBoltShearPortion dispid 1610743816;
    property ConnectionCategory: IRJointSpliceBoltsConnectionCategory dispid 1610743818;
    property SlipFactor: Double dispid 1610743820;
    property Ks: Double dispid 1610743822;
    property Rows: Integer dispid 1610743824;
    property Cols: Integer dispid 1610743826;
    property Center: Integer dispid 1610743828;
    property SpacingV: Double dispid 1610743830;
    property SpacingH: Double dispid 1610743832;
    property DistanceFromHorizontalEdge: Double dispid 1610743834;
    property DistanceFromVerticalEdge: Double dispid 1610743836;
  end;

// *********************************************************************//
// Interface: IRJointSpliceWelds
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {90544103-699D-4653-9BDE-449EA7022228}
// *********************************************************************//
  IRJointSpliceWelds = interface(IDispatch)
    ['{90544103-699D-4653-9BDE-449EA7022228}']
    function Get_WebThicknessSecondary: Double; safecall;
    procedure Set_WebThicknessSecondary(ret: Double); safecall;
    function Get_WebThicknessPrimary: Double; safecall;
    procedure Set_WebThicknessPrimary(ret: Double); safecall;
    function Get_UpperFlangeExternalThicknessSecondary: Double; safecall;
    procedure Set_UpperFlangeExternalThicknessSecondary(ret: Double); safecall;
    function Get_UpperFlangeExternalThicknessPrimary: Double; safecall;
    procedure Set_UpperFlangeExternalThicknessPrimary(ret: Double); safecall;
    function Get_UpperFlangeInternalThicknessSecondary: Double; safecall;
    procedure Set_UpperFlangeInternalThicknessSecondary(ret: Double); safecall;
    function Get_UpperFlangeInternalThicknessPrimary: Double; safecall;
    procedure Set_UpperFlangeInternalThicknessPrimary(ret: Double); safecall;
    function Get_LowerFlangeExternalThicknessSecondary: Double; safecall;
    procedure Set_LowerFlangeExternalThicknessSecondary(ret: Double); safecall;
    function Get_LowerFlangeExternalThicknessPrimary: Double; safecall;
    procedure Set_LowerFlangeExternalThicknessPrimary(ret: Double); safecall;
    function Get_LowerFlangeInternalThicknessSecondary: Double; safecall;
    procedure Set_LowerFlangeInternalThicknessSecondary(ret: Double); safecall;
    function Get_LowerFlangeInternalThicknessPrimary: Double; safecall;
    procedure Set_LowerFlangeInternalThicknessPrimary(ret: Double); safecall;
    property WebThicknessSecondary: Double read Get_WebThicknessSecondary write Set_WebThicknessSecondary;
    property WebThicknessPrimary: Double read Get_WebThicknessPrimary write Set_WebThicknessPrimary;
    property UpperFlangeExternalThicknessSecondary: Double read Get_UpperFlangeExternalThicknessSecondary write Set_UpperFlangeExternalThicknessSecondary;
    property UpperFlangeExternalThicknessPrimary: Double read Get_UpperFlangeExternalThicknessPrimary write Set_UpperFlangeExternalThicknessPrimary;
    property UpperFlangeInternalThicknessSecondary: Double read Get_UpperFlangeInternalThicknessSecondary write Set_UpperFlangeInternalThicknessSecondary;
    property UpperFlangeInternalThicknessPrimary: Double read Get_UpperFlangeInternalThicknessPrimary write Set_UpperFlangeInternalThicknessPrimary;
    property LowerFlangeExternalThicknessSecondary: Double read Get_LowerFlangeExternalThicknessSecondary write Set_LowerFlangeExternalThicknessSecondary;
    property LowerFlangeExternalThicknessPrimary: Double read Get_LowerFlangeExternalThicknessPrimary write Set_LowerFlangeExternalThicknessPrimary;
    property LowerFlangeInternalThicknessSecondary: Double read Get_LowerFlangeInternalThicknessSecondary write Set_LowerFlangeInternalThicknessSecondary;
    property LowerFlangeInternalThicknessPrimary: Double read Get_LowerFlangeInternalThicknessPrimary write Set_LowerFlangeInternalThicknessPrimary;
  end;

// *********************************************************************//
// DispIntf:  IRJointSpliceWeldsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {90544103-699D-4653-9BDE-449EA7022228}
// *********************************************************************//
  IRJointSpliceWeldsDisp = dispinterface
    ['{90544103-699D-4653-9BDE-449EA7022228}']
    property WebThicknessSecondary: Double dispid 1610743808;
    property WebThicknessPrimary: Double dispid 1610743810;
    property UpperFlangeExternalThicknessSecondary: Double dispid 1610743812;
    property UpperFlangeExternalThicknessPrimary: Double dispid 1610743814;
    property UpperFlangeInternalThicknessSecondary: Double dispid 1610743816;
    property UpperFlangeInternalThicknessPrimary: Double dispid 1610743818;
    property LowerFlangeExternalThicknessSecondary: Double dispid 1610743820;
    property LowerFlangeExternalThicknessPrimary: Double dispid 1610743822;
    property LowerFlangeInternalThicknessSecondary: Double dispid 1610743824;
    property LowerFlangeInternalThicknessPrimary: Double dispid 1610743826;
  end;

// *********************************************************************//
// Interface: IRJointSpliceLoad
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9BE95901-2D39-4304-8A7E-EFC1C55A058C}
// *********************************************************************//
  IRJointSpliceLoad = interface(IDispatch)
    ['{9BE95901-2D39-4304-8A7E-EFC1C55A058C}']
    function Get_force_N: Double; safecall;
    procedure Set_force_N(ret: Double); safecall;
    function Get_force_Vy: Double; safecall;
    procedure Set_force_Vy(ret: Double); safecall;
    function Get_force_Vz: Double; safecall;
    procedure Set_force_Vz(ret: Double); safecall;
    function Get_moment_My: Double; safecall;
    procedure Set_moment_My(ret: Double); safecall;
    function Get_moment_Mz: Double; safecall;
    procedure Set_moment_Mz(ret: Double); safecall;
    property force_N: Double read Get_force_N write Set_force_N;
    property force_Vy: Double read Get_force_Vy write Set_force_Vy;
    property force_Vz: Double read Get_force_Vz write Set_force_Vz;
    property moment_My: Double read Get_moment_My write Set_moment_My;
    property moment_Mz: Double read Get_moment_Mz write Set_moment_Mz;
  end;

// *********************************************************************//
// DispIntf:  IRJointSpliceLoadDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9BE95901-2D39-4304-8A7E-EFC1C55A058C}
// *********************************************************************//
  IRJointSpliceLoadDisp = dispinterface
    ['{9BE95901-2D39-4304-8A7E-EFC1C55A058C}']
    property force_N: Double dispid 1610743808;
    property force_Vy: Double dispid 1610743810;
    property force_Vz: Double dispid 1610743812;
    property moment_My: Double dispid 1610743814;
    property moment_Mz: Double dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRJointTie
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {46550810-8064-43F1-8B5F-FBED0D80F1A7}
// *********************************************************************//
  IRJointTie = interface(IRJointConnection)
    ['{46550810-8064-43F1-8B5F-FBED0D80F1A7}']
    function Get_TheSameMaterialForAllComponents: Integer; safecall;
    procedure Set_TheSameMaterialForAllComponents(ret: Integer); safecall;
    function Get_PrimaryProfile: IRJointProfile; safecall;
    function Get_SecondaryProfile: IRJointProfile; safecall;
    function Get_Stiffeners: IRJointTieStiffeners; safecall;
    function Get_Plates: IRJointTiePlates; safecall;
    function Get_Connectors: IRJointTieConnectors; safecall;
    function Get_BoltsDimensionNamesVector: IRobotNamesArray; safecall;
    function Get_BoltsClassVector: IRobotNamesArray; safecall;
    function Get_BoltsDimensionsVector: IRobotValuesArray; safecall;
    function Get_VaryingLoads: Integer; safecall;
    procedure Set_VaryingLoads(ret: Integer); safecall;
    property TheSameMaterialForAllComponents: Integer read Get_TheSameMaterialForAllComponents write Set_TheSameMaterialForAllComponents;
    property PrimaryProfile: IRJointProfile read Get_PrimaryProfile;
    property SecondaryProfile: IRJointProfile read Get_SecondaryProfile;
    property Stiffeners: IRJointTieStiffeners read Get_Stiffeners;
    property Plates: IRJointTiePlates read Get_Plates;
    property Connectors: IRJointTieConnectors read Get_Connectors;
    property BoltsDimensionNamesVector: IRobotNamesArray read Get_BoltsDimensionNamesVector;
    property BoltsClassVector: IRobotNamesArray read Get_BoltsClassVector;
    property BoltsDimensionsVector: IRobotValuesArray read Get_BoltsDimensionsVector;
    property VaryingLoads: Integer read Get_VaryingLoads write Set_VaryingLoads;
  end;

// *********************************************************************//
// DispIntf:  IRJointTieDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {46550810-8064-43F1-8B5F-FBED0D80F1A7}
// *********************************************************************//
  IRJointTieDisp = dispinterface
    ['{46550810-8064-43F1-8B5F-FBED0D80F1A7}']
    property TheSameMaterialForAllComponents: Integer dispid 1610809344;
    property PrimaryProfile: IRJointProfile readonly dispid 1610809346;
    property SecondaryProfile: IRJointProfile readonly dispid 1610809347;
    property Stiffeners: IRJointTieStiffeners readonly dispid 1610809348;
    property Plates: IRJointTiePlates readonly dispid 1610809349;
    property Connectors: IRJointTieConnectors readonly dispid 1610809350;
    property BoltsDimensionNamesVector: IRobotNamesArray readonly dispid 1610809351;
    property BoltsClassVector: IRobotNamesArray readonly dispid 1610809352;
    property BoltsDimensionsVector: IRobotValuesArray readonly dispid 1610809353;
    property VaryingLoads: Integer dispid 1610809354;
    property WFRelPos: IRJointWebFlangeRelativePos dispid 1610743808;
    property type_: IRJointConnectionType readonly dispid 1610743810;
    procedure SetToRobot(const info: IRJointConnectionInfo); dispid 1610743811;
    procedure GetFromRobot(const info: IRJointConnectionInfo); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRJointTieStiffeners
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CBA2F951-B348-407B-B294-4E1D120A377E}
// *********************************************************************//
  IRJointTieStiffeners = interface(IDispatch)
    ['{CBA2F951-B348-407B-B294-4E1D120A377E}']
    function Get_type_: IRJointTieStiffenersType; safecall;
    procedure Set_type_(ret: IRJointTieStiffenersType); safecall;
    function Get_Heigth: Double; safecall;
    procedure Set_Heigth(ret: Double); safecall;
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_Thickness: Double; safecall;
    procedure Set_Thickness(ret: Double); safecall;
    function Get_CutVertical: Double; safecall;
    procedure Set_CutVertical(ret: Double); safecall;
    function Get_CutHorizontal: Double; safecall;
    procedure Set_CutHorizontal(ret: Double); safecall;
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    property type_: IRJointTieStiffenersType read Get_type_ write Set_type_;
    property Heigth: Double read Get_Heigth write Set_Heigth;
    property Length: Double read Get_Length write Set_Length;
    property Thickness: Double read Get_Thickness write Set_Thickness;
    property CutVertical: Double read Get_CutVertical write Set_CutVertical;
    property CutHorizontal: Double read Get_CutHorizontal write Set_CutHorizontal;
    property Material: WideString read Get_Material write Set_Material;
  end;

// *********************************************************************//
// DispIntf:  IRJointTieStiffenersDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CBA2F951-B348-407B-B294-4E1D120A377E}
// *********************************************************************//
  IRJointTieStiffenersDisp = dispinterface
    ['{CBA2F951-B348-407B-B294-4E1D120A377E}']
    property type_: IRJointTieStiffenersType dispid 1610743808;
    property Heigth: Double dispid 1610743810;
    property Length: Double dispid 1610743812;
    property Thickness: Double dispid 1610743814;
    property CutVertical: Double dispid 1610743816;
    property CutHorizontal: Double dispid 1610743818;
    property Material: WideString dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRJointTiePlates
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC2FAC40-020E-4E8A-8FC4-A48C44605503}
// *********************************************************************//
  IRJointTiePlates = interface(IRJointPlate)
    ['{EC2FAC40-020E-4E8A-8FC4-A48C44605503}']
    function Get_Material: WideString; safecall;
    procedure Set_Material(const ret: WideString); safecall;
    property Material: WideString read Get_Material write Set_Material;
  end;

// *********************************************************************//
// DispIntf:  IRJointTiePlatesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC2FAC40-020E-4E8A-8FC4-A48C44605503}
// *********************************************************************//
  IRJointTiePlatesDisp = dispinterface
    ['{EC2FAC40-020E-4E8A-8FC4-A48C44605503}']
    property Material: WideString dispid 1610809344;
    property Length: Double dispid 1610743808;
    property Width: Double dispid 1610743810;
    property Thick: Double dispid 1610743812;
    property Exist: Integer dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRJointTieConnectors
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4CB6CCA2-99C7-4D1C-888B-C3F13F190D7C}
// *********************************************************************//
  IRJointTieConnectors = interface(IDispatch)
    ['{4CB6CCA2-99C7-4D1C-888B-C3F13F190D7C}']
    function Get_Bolts: IRJointTieBolts; safecall;
    function Get_Welds: IRJointTieWelds; safecall;
    property Bolts: IRJointTieBolts read Get_Bolts;
    property Welds: IRJointTieWelds read Get_Welds;
  end;

// *********************************************************************//
// DispIntf:  IRJointTieConnectorsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4CB6CCA2-99C7-4D1C-888B-C3F13F190D7C}
// *********************************************************************//
  IRJointTieConnectorsDisp = dispinterface
    ['{4CB6CCA2-99C7-4D1C-888B-C3F13F190D7C}']
    property Bolts: IRJointTieBolts readonly dispid 1610743808;
    property Welds: IRJointTieWelds readonly dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRJointTieBolts
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C662D7A7-2FA5-4E1E-91B2-054D67326AA0}
// *********************************************************************//
  IRJointTieBolts = interface(IDispatch)
    ['{C662D7A7-2FA5-4E1E-91B2-054D67326AA0}']
    function Get__className: WideString; safecall;
    procedure Set__className(const ret: WideString); safecall;
    function Get_DiameterName: WideString; safecall;
    procedure Set_DiameterName(const ret: WideString); safecall;
    function Get_Diameter: Double; safecall;
    procedure Set_Diameter(ret: Double); safecall;
    function Get_ConnectionCategory: IRJointTieBoltsConnectionCategory; safecall;
    procedure Set_ConnectionCategory(ret: IRJointTieBoltsConnectionCategory); safecall;
    function Get_Arrangement: IRJointTieBoltsArrangementType; safecall;
    procedure Set_Arrangement(ret: IRJointTieBoltsArrangementType); safecall;
    function Get_CircularNumber: Integer; safecall;
    procedure Set_CircularNumber(ret: Integer); safecall;
    function Get_VerticalNumber: Integer; safecall;
    procedure Set_VerticalNumber(ret: Integer); safecall;
    function Get_HorizontalNumber: Integer; safecall;
    procedure Set_HorizontalNumber(ret: Integer); safecall;
    function Get_DistanceFromCirclePlateEdge: Double; safecall;
    procedure Set_DistanceFromCirclePlateEdge(ret: Double); safecall;
    function Get_DistanceFromHorizontalRectPlateEdge: Double; safecall;
    procedure Set_DistanceFromHorizontalRectPlateEdge(ret: Double); safecall;
    function Get_DistanceFromVerticalRectPlateEdge: Double; safecall;
    procedure Set_DistanceFromVerticalRectPlateEdge(ret: Double); safecall;
    function Get_DistanceFromHorizontalRectProfileEdge: Double; safecall;
    procedure Set_DistanceFromHorizontalRectProfileEdge(ret: Double); safecall;
    function Get_DistanceFromVerticalRectProfileEdge: Double; safecall;
    procedure Set_DistanceFromVerticalRectProfileEdge(ret: Double); safecall;
    function Get_HorizontalSpacingInputByDistanceFromEdge: Integer; safecall;
    procedure Set_HorizontalSpacingInputByDistanceFromEdge(ret: Integer); safecall;
    function Get_VerticalSpacingInputByDistanceFromEdge: Integer; safecall;
    procedure Set_VerticalSpacingInputByDistanceFromEdge(ret: Integer); safecall;
    function Get_HorizontalSpacing: Double; safecall;
    procedure Set_HorizontalSpacing(ret: Double); safecall;
    function Get_VerticalSpacing: Double; safecall;
    procedure Set_VerticalSpacing(ret: Double); safecall;
    property _className: WideString read Get__className write Set__className;
    property DiameterName: WideString read Get_DiameterName write Set_DiameterName;
    property Diameter: Double read Get_Diameter write Set_Diameter;
    property ConnectionCategory: IRJointTieBoltsConnectionCategory read Get_ConnectionCategory write Set_ConnectionCategory;
    property Arrangement: IRJointTieBoltsArrangementType read Get_Arrangement write Set_Arrangement;
    property CircularNumber: Integer read Get_CircularNumber write Set_CircularNumber;
    property VerticalNumber: Integer read Get_VerticalNumber write Set_VerticalNumber;
    property HorizontalNumber: Integer read Get_HorizontalNumber write Set_HorizontalNumber;
    property DistanceFromCirclePlateEdge: Double read Get_DistanceFromCirclePlateEdge write Set_DistanceFromCirclePlateEdge;
    property DistanceFromHorizontalRectPlateEdge: Double read Get_DistanceFromHorizontalRectPlateEdge write Set_DistanceFromHorizontalRectPlateEdge;
    property DistanceFromVerticalRectPlateEdge: Double read Get_DistanceFromVerticalRectPlateEdge write Set_DistanceFromVerticalRectPlateEdge;
    property DistanceFromHorizontalRectProfileEdge: Double read Get_DistanceFromHorizontalRectProfileEdge write Set_DistanceFromHorizontalRectProfileEdge;
    property DistanceFromVerticalRectProfileEdge: Double read Get_DistanceFromVerticalRectProfileEdge write Set_DistanceFromVerticalRectProfileEdge;
    property HorizontalSpacingInputByDistanceFromEdge: Integer read Get_HorizontalSpacingInputByDistanceFromEdge write Set_HorizontalSpacingInputByDistanceFromEdge;
    property VerticalSpacingInputByDistanceFromEdge: Integer read Get_VerticalSpacingInputByDistanceFromEdge write Set_VerticalSpacingInputByDistanceFromEdge;
    property HorizontalSpacing: Double read Get_HorizontalSpacing write Set_HorizontalSpacing;
    property VerticalSpacing: Double read Get_VerticalSpacing write Set_VerticalSpacing;
  end;

// *********************************************************************//
// DispIntf:  IRJointTieBoltsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C662D7A7-2FA5-4E1E-91B2-054D67326AA0}
// *********************************************************************//
  IRJointTieBoltsDisp = dispinterface
    ['{C662D7A7-2FA5-4E1E-91B2-054D67326AA0}']
    property _className: WideString dispid 1610743808;
    property DiameterName: WideString dispid 1610743810;
    property Diameter: Double dispid 1610743812;
    property ConnectionCategory: IRJointTieBoltsConnectionCategory dispid 1610743814;
    property Arrangement: IRJointTieBoltsArrangementType dispid 1610743816;
    property CircularNumber: Integer dispid 1610743818;
    property VerticalNumber: Integer dispid 1610743820;
    property HorizontalNumber: Integer dispid 1610743822;
    property DistanceFromCirclePlateEdge: Double dispid 1610743824;
    property DistanceFromHorizontalRectPlateEdge: Double dispid 1610743826;
    property DistanceFromVerticalRectPlateEdge: Double dispid 1610743828;
    property DistanceFromHorizontalRectProfileEdge: Double dispid 1610743830;
    property DistanceFromVerticalRectProfileEdge: Double dispid 1610743832;
    property HorizontalSpacingInputByDistanceFromEdge: Integer dispid 1610743834;
    property VerticalSpacingInputByDistanceFromEdge: Integer dispid 1610743836;
    property HorizontalSpacing: Double dispid 1610743838;
    property VerticalSpacing: Double dispid 1610743840;
  end;

// *********************************************************************//
// Interface: IRJointTieWelds
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {19240A51-BB19-42AB-BEB7-6C11858362FF}
// *********************************************************************//
  IRJointTieWelds = interface(IDispatch)
    ['{19240A51-BB19-42AB-BEB7-6C11858362FF}']
    function Get_BarsType: IRJointWeldType; safecall;
    procedure Set_BarsType(ret: IRJointWeldType); safecall;
    function Get_StiffenersType: IRJointWeldType; safecall;
    procedure Set_StiffenersType(ret: IRJointWeldType); safecall;
    function Get_a_w: Double; safecall;
    procedure Set_a_w(ret: Double); safecall;
    function Get_a_s: Double; safecall;
    procedure Set_a_s(ret: Double); safecall;
    property BarsType: IRJointWeldType read Get_BarsType write Set_BarsType;
    property StiffenersType: IRJointWeldType read Get_StiffenersType write Set_StiffenersType;
    property a_w: Double read Get_a_w write Set_a_w;
    property a_s: Double read Get_a_s write Set_a_s;
  end;

// *********************************************************************//
// DispIntf:  IRJointTieWeldsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {19240A51-BB19-42AB-BEB7-6C11858362FF}
// *********************************************************************//
  IRJointTieWeldsDisp = dispinterface
    ['{19240A51-BB19-42AB-BEB7-6C11858362FF}']
    property BarsType: IRJointWeldType dispid 1610743808;
    property StiffenersType: IRJointWeldType dispid 1610743810;
    property a_w: Double dispid 1610743812;
    property a_s: Double dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRJointTieLoad
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C82D6A5B-86D5-4A17-B909-5B9A65D1D5C7}
// *********************************************************************//
  IRJointTieLoad = interface(IDispatch)
    ['{C82D6A5B-86D5-4A17-B909-5B9A65D1D5C7}']
    function Get_forceULS_N1: Double; safecall;
    procedure Set_forceULS_N1(ret: Double); safecall;
    function Get_forceULS_N2: Double; safecall;
    procedure Set_forceULS_N2(ret: Double); safecall;
    function Get_forceSLS_N1: Double; safecall;
    procedure Set_forceSLS_N1(ret: Double); safecall;
    function Get_forceSLS_N2: Double; safecall;
    procedure Set_forceSLS_N2(ret: Double); safecall;
    property forceULS_N1: Double read Get_forceULS_N1 write Set_forceULS_N1;
    property forceULS_N2: Double read Get_forceULS_N2 write Set_forceULS_N2;
    property forceSLS_N1: Double read Get_forceSLS_N1 write Set_forceSLS_N1;
    property forceSLS_N2: Double read Get_forceSLS_N2 write Set_forceSLS_N2;
  end;

// *********************************************************************//
// DispIntf:  IRJointTieLoadDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C82D6A5B-86D5-4A17-B909-5B9A65D1D5C7}
// *********************************************************************//
  IRJointTieLoadDisp = dispinterface
    ['{C82D6A5B-86D5-4A17-B909-5B9A65D1D5C7}']
    property forceULS_N1: Double dispid 1610743808;
    property forceULS_N2: Double dispid 1610743810;
    property forceSLS_N1: Double dispid 1610743812;
    property forceSLS_N2: Double dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRConcrBarSectionData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E0368BE-B302-11D3-9977-0080C86BE4DF}
// *********************************************************************//
  IRConcrBarSectionData = interface(IDispatch)
    ['{3E0368BE-B302-11D3-9977-0080C86BE4DF}']
    function Get_N: SYSINT; safecall;
    procedure Set_N(ret: SYSINT); safecall;
    function Get_H: Double; safecall;
    procedure Set_H(ret: Double); safecall;
    function Get_B: Double; safecall;
    procedure Set_B(ret: Double); safecall;
    function Get_Bf: Double; safecall;
    procedure Set_Bf(ret: Double); safecall;
    function Get_Hf: Double; safecall;
    procedure Set_Hf(ret: Double); safecall;
    function Get_Bfb: Double; safecall;
    procedure Set_Bfb(ret: Double); safecall;
    function Get_Hfb: Double; safecall;
    procedure Set_Hfb(ret: Double); safecall;
    function Get_A: Double; safecall;
    procedure Set_A(ret: Double); safecall;
    function Get_Ap: Double; safecall;
    procedure Set_Ap(ret: Double); safecall;
    function Get_Ac: Double; safecall;
    procedure Set_Ac(ret: Double); safecall;
    function Get_Per: Double; safecall;
    procedure Set_Per(ret: Double); safecall;
    function Get_type_: IRConcrBarSectionGeometryType; safecall;
    procedure Set_type_(ret: IRConcrBarSectionGeometryType); safecall;
    function Get_Rr: Double; safecall;
    procedure Set_Rr(ret: Double); safecall;
    function Get_Rl: Double; safecall;
    procedure Set_Rl(ret: Double); safecall;
    property N: SYSINT read Get_N write Set_N;
    property H: Double read Get_H write Set_H;
    property B: Double read Get_B write Set_B;
    property Bf: Double read Get_Bf write Set_Bf;
    property Hf: Double read Get_Hf write Set_Hf;
    property Bfb: Double read Get_Bfb write Set_Bfb;
    property Hfb: Double read Get_Hfb write Set_Hfb;
    property A: Double read Get_A write Set_A;
    property Ap: Double read Get_Ap write Set_Ap;
    property Ac: Double read Get_Ac write Set_Ac;
    property Per: Double read Get_Per write Set_Per;
    property type_: IRConcrBarSectionGeometryType read Get_type_ write Set_type_;
    property Rr: Double read Get_Rr write Set_Rr;
    property Rl: Double read Get_Rl write Set_Rl;
  end;

// *********************************************************************//
// DispIntf:  IRConcrBarSectionDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E0368BE-B302-11D3-9977-0080C86BE4DF}
// *********************************************************************//
  IRConcrBarSectionDataDisp = dispinterface
    ['{3E0368BE-B302-11D3-9977-0080C86BE4DF}']
    property N: SYSINT dispid 1610743808;
    property H: Double dispid 1610743810;
    property B: Double dispid 1610743812;
    property Bf: Double dispid 1610743814;
    property Hf: Double dispid 1610743816;
    property Bfb: Double dispid 1610743818;
    property Hfb: Double dispid 1610743820;
    property A: Double dispid 1610743822;
    property Ap: Double dispid 1610743824;
    property Ac: Double dispid 1610743826;
    property Per: Double dispid 1610743828;
    property type_: IRConcrBarSectionGeometryType dispid 1610743830;
    property Rr: Double dispid 1610743832;
    property Rl: Double dispid 1610743834;
  end;

// *********************************************************************//
// Interface: IRBestParamSet
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E0368B5-B302-11D3-9977-0080C86BE4DF}
// *********************************************************************//
  IRBestParamSet = interface(IDispatch)
    ['{3E0368B5-B302-11D3-9977-0080C86BE4DF}']
    function GetDouble(param_id: SYSINT; out _value: Double): Integer; safecall;
    function SetDouble(param_id: SYSINT; _value: Double): Integer; safecall;
    function GetInteger(param_id: SYSINT; out _value: SYSINT): Integer; safecall;
    function SetInteger(param_id: SYSINT; _value: SYSINT): Integer; safecall;
    function GetString(param_id: SYSINT; out _value: WideString): Integer; safecall;
    function SetString(param_id: SYSINT; const _value: WideString): Integer; safecall;
    procedure Clear; safecall;
    procedure ClearInteger(param_id: SYSINT); safecall;
    procedure ClearDouble(param_id: SYSINT); safecall;
    procedure ClearString(param_id: SYSINT); safecall;
    function IsValidDouble(param_id: SYSINT; _value: Double): Integer; safecall;
    function IsValidInteger(param_id: SYSINT; _value: SYSINT): Integer; safecall;
    function IsValidString(param_id: SYSINT; const _value: WideString): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRBestParamSetDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E0368B5-B302-11D3-9977-0080C86BE4DF}
// *********************************************************************//
  IRBestParamSetDisp = dispinterface
    ['{3E0368B5-B302-11D3-9977-0080C86BE4DF}']
    function GetDouble(param_id: SYSINT; out _value: Double): Integer; dispid 1610743808;
    function SetDouble(param_id: SYSINT; _value: Double): Integer; dispid 1610743809;
    function GetInteger(param_id: SYSINT; out _value: SYSINT): Integer; dispid 1610743810;
    function SetInteger(param_id: SYSINT; _value: SYSINT): Integer; dispid 1610743811;
    function GetString(param_id: SYSINT; out _value: WideString): Integer; dispid 1610743812;
    function SetString(param_id: SYSINT; const _value: WideString): Integer; dispid 1610743813;
    procedure Clear; dispid 1610743814;
    procedure ClearInteger(param_id: SYSINT); dispid 1610743815;
    procedure ClearDouble(param_id: SYSINT); dispid 1610743816;
    procedure ClearString(param_id: SYSINT); dispid 1610743817;
    function IsValidDouble(param_id: SYSINT; _value: Double): Integer; dispid 1610743818;
    function IsValidInteger(param_id: SYSINT; _value: SYSINT): Integer; dispid 1610743819;
    function IsValidString(param_id: SYSINT; const _value: WideString): Integer; dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRBestCalcParamsData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E0368B7-B302-11D3-9977-0080C86BE4DF}
// *********************************************************************//
  IRBestCalcParamsData = interface(IRBestParamSet)
    ['{3E0368B7-B302-11D3-9977-0080C86BE4DF}']
    function Get_ModularityList: IRobotValuesArray; safecall;
    property ModularityList: IRobotValuesArray read Get_ModularityList;
  end;

// *********************************************************************//
// DispIntf:  IRBestCalcParamsDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E0368B7-B302-11D3-9977-0080C86BE4DF}
// *********************************************************************//
  IRBestCalcParamsDataDisp = dispinterface
    ['{3E0368B7-B302-11D3-9977-0080C86BE4DF}']
    property ModularityList: IRobotValuesArray readonly dispid 1610809344;
    function GetDouble(param_id: SYSINT; out _value: Double): Integer; dispid 1610743808;
    function SetDouble(param_id: SYSINT; _value: Double): Integer; dispid 1610743809;
    function GetInteger(param_id: SYSINT; out _value: SYSINT): Integer; dispid 1610743810;
    function SetInteger(param_id: SYSINT; _value: SYSINT): Integer; dispid 1610743811;
    function GetString(param_id: SYSINT; out _value: WideString): Integer; dispid 1610743812;
    function SetString(param_id: SYSINT; const _value: WideString): Integer; dispid 1610743813;
    procedure Clear; dispid 1610743814;
    procedure ClearInteger(param_id: SYSINT); dispid 1610743815;
    procedure ClearDouble(param_id: SYSINT); dispid 1610743816;
    procedure ClearString(param_id: SYSINT); dispid 1610743817;
    function IsValidDouble(param_id: SYSINT; _value: Double): Integer; dispid 1610743818;
    function IsValidInteger(param_id: SYSINT; _value: SYSINT): Integer; dispid 1610743819;
    function IsValidString(param_id: SYSINT; const _value: WideString): Integer; dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRBestCalcParamsDataList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E0368B8-B302-11D3-9977-0080C86BE4DF}
// *********************************************************************//
  IRBestCalcParamsDataList = interface(IDispatch)
    ['{3E0368B8-B302-11D3-9977-0080C86BE4DF}']
    function Get_Selected: WideString; safecall;
    procedure Set_Selected(const ret: WideString); safecall;
    function Get_LabNames: IRobotNamesArray; safecall;
    function Get(const lab_name: WideString): IRBestCalcParamsData; safecall;
    function Delete(const lab_name: WideString): Integer; safecall;
    function Store(const lab_name: WideString; const _params: IRBestCalcParamsData): Integer; safecall;
    function Create: IRBestCalcParamsData; safecall;
    property Selected: WideString read Get_Selected write Set_Selected;
    property LabNames: IRobotNamesArray read Get_LabNames;
  end;

// *********************************************************************//
// DispIntf:  IRBestCalcParamsDataListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E0368B8-B302-11D3-9977-0080C86BE4DF}
// *********************************************************************//
  IRBestCalcParamsDataListDisp = dispinterface
    ['{3E0368B8-B302-11D3-9977-0080C86BE4DF}']
    property Selected: WideString dispid 1610743808;
    property LabNames: IRobotNamesArray readonly dispid 1610743810;
    function Get(const lab_name: WideString): IRBestCalcParamsData; dispid 1610743811;
    function Delete(const lab_name: WideString): Integer; dispid 1610743812;
    function Store(const lab_name: WideString; const _params: IRBestCalcParamsData): Integer; dispid 1610743813;
    function Create: IRBestCalcParamsData; dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRBestMemberData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E0368B9-B302-11D3-9977-0080C86BE4DF}
// *********************************************************************//
  IRBestMemberData = interface(IRBestParamSet)
    ['{3E0368B9-B302-11D3-9977-0080C86BE4DF}']
  end;

// *********************************************************************//
// DispIntf:  IRBestMemberDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E0368B9-B302-11D3-9977-0080C86BE4DF}
// *********************************************************************//
  IRBestMemberDataDisp = dispinterface
    ['{3E0368B9-B302-11D3-9977-0080C86BE4DF}']
    function GetDouble(param_id: SYSINT; out _value: Double): Integer; dispid 1610743808;
    function SetDouble(param_id: SYSINT; _value: Double): Integer; dispid 1610743809;
    function GetInteger(param_id: SYSINT; out _value: SYSINT): Integer; dispid 1610743810;
    function SetInteger(param_id: SYSINT; _value: SYSINT): Integer; dispid 1610743811;
    function GetString(param_id: SYSINT; out _value: WideString): Integer; dispid 1610743812;
    function SetString(param_id: SYSINT; const _value: WideString): Integer; dispid 1610743813;
    procedure Clear; dispid 1610743814;
    procedure ClearInteger(param_id: SYSINT); dispid 1610743815;
    procedure ClearDouble(param_id: SYSINT); dispid 1610743816;
    procedure ClearString(param_id: SYSINT); dispid 1610743817;
    function IsValidDouble(param_id: SYSINT; _value: Double): Integer; dispid 1610743818;
    function IsValidInteger(param_id: SYSINT; _value: SYSINT): Integer; dispid 1610743819;
    function IsValidString(param_id: SYSINT; const _value: WideString): Integer; dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRBestResults
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E0368BA-B302-11D3-9977-0080C86BE4DF}
// *********************************************************************//
  IRBestResults = interface(IRBestParamSet)
    ['{3E0368BA-B302-11D3-9977-0080C86BE4DF}']
  end;

// *********************************************************************//
// DispIntf:  IRBestResultsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E0368BA-B302-11D3-9977-0080C86BE4DF}
// *********************************************************************//
  IRBestResultsDisp = dispinterface
    ['{3E0368BA-B302-11D3-9977-0080C86BE4DF}']
    function GetDouble(param_id: SYSINT; out _value: Double): Integer; dispid 1610743808;
    function SetDouble(param_id: SYSINT; _value: Double): Integer; dispid 1610743809;
    function GetInteger(param_id: SYSINT; out _value: SYSINT): Integer; dispid 1610743810;
    function SetInteger(param_id: SYSINT; _value: SYSINT): Integer; dispid 1610743811;
    function GetString(param_id: SYSINT; out _value: WideString): Integer; dispid 1610743812;
    function SetString(param_id: SYSINT; const _value: WideString): Integer; dispid 1610743813;
    procedure Clear; dispid 1610743814;
    procedure ClearInteger(param_id: SYSINT); dispid 1610743815;
    procedure ClearDouble(param_id: SYSINT); dispid 1610743816;
    procedure ClearString(param_id: SYSINT); dispid 1610743817;
    function IsValidDouble(param_id: SYSINT; _value: Double): Integer; dispid 1610743818;
    function IsValidInteger(param_id: SYSINT; _value: SYSINT): Integer; dispid 1610743819;
    function IsValidString(param_id: SYSINT; const _value: WideString): Integer; dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRBestForceData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E0368BC-B302-11D3-9977-0080C86BE4DF}
// *********************************************************************//
  IRBestForceData = interface(IRBestParamSet)
    ['{3E0368BC-B302-11D3-9977-0080C86BE4DF}']
    function Get_Values: IRobotBarForceData; safecall;
    function Get_LimitState: IRobotLimitState; safecall;
    property Values: IRobotBarForceData read Get_Values;
    property LimitState: IRobotLimitState read Get_LimitState;
  end;

// *********************************************************************//
// DispIntf:  IRBestForceDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E0368BC-B302-11D3-9977-0080C86BE4DF}
// *********************************************************************//
  IRBestForceDataDisp = dispinterface
    ['{3E0368BC-B302-11D3-9977-0080C86BE4DF}']
    property Values: IRobotBarForceData readonly dispid 1610809344;
    property LimitState: IRobotLimitState readonly dispid 1610809345;
    function GetDouble(param_id: SYSINT; out _value: Double): Integer; dispid 1610743808;
    function SetDouble(param_id: SYSINT; _value: Double): Integer; dispid 1610743809;
    function GetInteger(param_id: SYSINT; out _value: SYSINT): Integer; dispid 1610743810;
    function SetInteger(param_id: SYSINT; _value: SYSINT): Integer; dispid 1610743811;
    function GetString(param_id: SYSINT; out _value: WideString): Integer; dispid 1610743812;
    function SetString(param_id: SYSINT; const _value: WideString): Integer; dispid 1610743813;
    procedure Clear; dispid 1610743814;
    procedure ClearInteger(param_id: SYSINT); dispid 1610743815;
    procedure ClearDouble(param_id: SYSINT); dispid 1610743816;
    procedure ClearString(param_id: SYSINT); dispid 1610743817;
    function IsValidDouble(param_id: SYSINT; _value: Double): Integer; dispid 1610743818;
    function IsValidInteger(param_id: SYSINT; _value: SYSINT): Integer; dispid 1610743819;
    function IsValidString(param_id: SYSINT; const _value: WideString): Integer; dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRBestDimParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E0368BD-B302-11D3-9977-0080C86BE4DF}
// *********************************************************************//
  IRBestDimParams = interface(IRBestParamSet)
    ['{3E0368BD-B302-11D3-9977-0080C86BE4DF}']
  end;

// *********************************************************************//
// DispIntf:  IRBestDimParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E0368BD-B302-11D3-9977-0080C86BE4DF}
// *********************************************************************//
  IRBestDimParamsDisp = dispinterface
    ['{3E0368BD-B302-11D3-9977-0080C86BE4DF}']
    function GetDouble(param_id: SYSINT; out _value: Double): Integer; dispid 1610743808;
    function SetDouble(param_id: SYSINT; _value: Double): Integer; dispid 1610743809;
    function GetInteger(param_id: SYSINT; out _value: SYSINT): Integer; dispid 1610743810;
    function SetInteger(param_id: SYSINT; _value: SYSINT): Integer; dispid 1610743811;
    function GetString(param_id: SYSINT; out _value: WideString): Integer; dispid 1610743812;
    function SetString(param_id: SYSINT; const _value: WideString): Integer; dispid 1610743813;
    procedure Clear; dispid 1610743814;
    procedure ClearInteger(param_id: SYSINT); dispid 1610743815;
    procedure ClearDouble(param_id: SYSINT); dispid 1610743816;
    procedure ClearString(param_id: SYSINT); dispid 1610743817;
    function IsValidDouble(param_id: SYSINT; _value: Double): Integer; dispid 1610743818;
    function IsValidInteger(param_id: SYSINT; _value: SYSINT): Integer; dispid 1610743819;
    function IsValidString(param_id: SYSINT; const _value: WideString): Integer; dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRBestMemberDlg
// Flags:     (0)
// GUID:      {3E0368B3-B302-11D3-9977-0080C86BE4DF}
// *********************************************************************//
  IRBestMemberDlg = interface(IUnknown)
    ['{3E0368B3-B302-11D3-9977-0080C86BE4DF}']
    function DoModal(const _params: IRBestMemberData): HResult; stdcall;
    function SetStandard(const _params: IRBestMemberData): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IRBestCalcParamsDlg
// Flags:     (0)
// GUID:      {3E0368B2-B302-11D3-9977-0080C86BE4DF}
// *********************************************************************//
  IRBestCalcParamsDlg = interface(IUnknown)
    ['{3E0368B2-B302-11D3-9977-0080C86BE4DF}']
    function DoModal(const param_list: IRBestCalcParamsDataList): HResult; stdcall;
    function SetStandard(const _params: IRBestCalcParamsData): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IRBestPlateCalcParamsDlg
// Flags:     (0)
// GUID:      {7E96FB42-780B-11D4-B84E-0050DA76755E}
// *********************************************************************//
  IRBestPlateCalcParamsDlg = interface(IUnknown)
    ['{7E96FB42-780B-11D4-B84E-0050DA76755E}']
    function DoModal(const _params: IRBestCalcParamsData; var label_name: WideString): HResult; stdcall;
    function SetStandard(const _params: IRBestCalcParamsData): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IRBestCodeCalcEngine
// Flags:     (0)
// GUID:      {3E0368B4-B302-11D3-9977-0080C86BE4DF}
// *********************************************************************//
  IRBestCodeCalcEngine = interface(IUnknown)
    ['{3E0368B4-B302-11D3-9977-0080C86BE4DF}']
    function SetParams(const calc_params: IRBestCalcParamsData; const memb_def: IRBestMemberData): HResult; stdcall;
    function SetGeometry(const sect_geo: IRConcrBarSectionData): HResult; stdcall;
    function SetForces(const Forces: IRobotObjectsArray; pos: Double): HResult; stdcall;
    function SetForcesSlender(const forces_begin: IRobotObjectsArray; 
                              const forces_midle: IRobotObjectsArray; 
                              const forces_end: IRobotObjectsArray): HResult; stdcall;
    function Calculate(const dim_params: IRBestDimParams): HResult; stdcall;
    function GetResults(const ret: IRBestResults): HResult; stdcall;
    function SetForcesArray(var _forces: PSafeArray; var _params: PSafeArray; _pos: Double): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IRBestCodeService
// Flags:     (0)
// GUID:      {3E0368B1-B302-11D3-9977-0080C86BE4DF}
// *********************************************************************//
  IRBestCodeService = interface(IUnknown)
    ['{3E0368B1-B302-11D3-9977-0080C86BE4DF}']
    function Get_CalcParamsDlg(out ret: IRBestCalcParamsDlg): HResult; stdcall;
    function Get_MemberDlg(out ret: IRBestMemberDlg): HResult; stdcall;
    function Get_CalcEngine(out ret: IRBestCodeCalcEngine): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IRBestCodeServiceExt
// Flags:     (0)
// GUID:      {7E96FB44-780B-11D4-B84E-0050DA76755E}
// *********************************************************************//
  IRBestCodeServiceExt = interface(IRBestCodeService)
    ['{7E96FB44-780B-11D4-B84E-0050DA76755E}']
    function IsServed(calc_type: IRBestCodeCalculationType; out ret: WordBool): HResult; stdcall;
    function GetCalcParamsDlg(calc_type: IRBestCodeCalculationType; out ret: IUnknown): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IRConcrPlateCodeService2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F08A1D48-7686-4266-9CC2-E1CF992BD2D8}
// *********************************************************************//
  IRConcrPlateCodeService2 = interface(IDispatch)
    ['{F08A1D48-7686-4266-9CC2-E1CF992BD2D8}']
    function Get_RobotVersion: WideString; safecall;
    function Get_ShowLongTermCracking: WordBool; safecall;
    property RobotVersion: WideString read Get_RobotVersion;
    property ShowLongTermCracking: WordBool read Get_ShowLongTermCracking;
  end;

// *********************************************************************//
// DispIntf:  IRConcrPlateCodeService2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F08A1D48-7686-4266-9CC2-E1CF992BD2D8}
// *********************************************************************//
  IRConcrPlateCodeService2Disp = dispinterface
    ['{F08A1D48-7686-4266-9CC2-E1CF992BD2D8}']
    property RobotVersion: WideString readonly dispid 1610743808;
    property ShowLongTermCracking: WordBool readonly dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRBestCodeService2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5D46D356-BB54-429B-98A9-5DAEC4DB1193}
// *********************************************************************//
  IRBestCodeService2 = interface(IDispatch)
    ['{5D46D356-BB54-429B-98A9-5DAEC4DB1193}']
    function Get_RobotVersion: WideString; safecall;
    function Get_ShowBucklingButton: WordBool; safecall;
    property RobotVersion: WideString read Get_RobotVersion;
    property ShowBucklingButton: WordBool read Get_ShowBucklingButton;
  end;

// *********************************************************************//
// DispIntf:  IRBestCodeService2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5D46D356-BB54-429B-98A9-5DAEC4DB1193}
// *********************************************************************//
  IRBestCodeService2Disp = dispinterface
    ['{5D46D356-BB54-429B-98A9-5DAEC4DB1193}']
    property RobotVersion: WideString readonly dispid 1610743808;
    property ShowBucklingButton: WordBool readonly dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRobotCodeRegistrar
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {498EB680-CF3B-11D3-B7C0-0050DA76755E}
// *********************************************************************//
  IRobotCodeRegistrar = interface(IDispatch)
    ['{498EB680-CF3B-11D3-B7C0-0050DA76755E}']
    function Get_CodeType: IRobotCodeType; safecall;
    procedure Set_CodeType(ret: IRobotCodeType); safecall;
    function Get_CodeName: WideString; safecall;
    procedure Set_CodeName(const ret: WideString); safecall;
    function Get_Manufacturer: WideString; safecall;
    procedure Set_Manufacturer(const ret: WideString); safecall;
    function Get_Guid: WideString; safecall;
    procedure Set_Guid(const ret: WideString); safecall;
    function Get_ProgId: WideString; safecall;
    procedure Set_ProgId(const ret: WideString); safecall;
    procedure Register; safecall;
    procedure Unregister; safecall;
    function Get_Country: WideString; safecall;
    procedure Set_Country(const ret: WideString); safecall;
    property CodeType: IRobotCodeType read Get_CodeType write Set_CodeType;
    property CodeName: WideString read Get_CodeName write Set_CodeName;
    property Manufacturer: WideString read Get_Manufacturer write Set_Manufacturer;
    property Guid: WideString read Get_Guid write Set_Guid;
    property ProgId: WideString read Get_ProgId write Set_ProgId;
    property Country: WideString read Get_Country write Set_Country;
  end;

// *********************************************************************//
// DispIntf:  IRobotCodeRegistrarDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {498EB680-CF3B-11D3-B7C0-0050DA76755E}
// *********************************************************************//
  IRobotCodeRegistrarDisp = dispinterface
    ['{498EB680-CF3B-11D3-B7C0-0050DA76755E}']
    property CodeType: IRobotCodeType dispid 1610743808;
    property CodeName: WideString dispid 1610743810;
    property Manufacturer: WideString dispid 1610743812;
    property Guid: WideString dispid 1610743814;
    property ProgId: WideString dispid 1610743816;
    procedure Register; dispid 1610743818;
    procedure Unregister; dispid 1610743819;
    property Country: WideString dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRobotAddInRegistrar
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {49F36B02-24CC-11D4-B804-0050DA76755E}
// *********************************************************************//
  IRobotAddInRegistrar = interface(IDispatch)
    ['{49F36B02-24CC-11D4-B804-0050DA76755E}']
    function Get_ProviderName: WideString; safecall;
    procedure Set_ProviderName(const ret: WideString); safecall;
    function Get_ProductName: WideString; safecall;
    procedure Set_ProductName(const ret: WideString); safecall;
    function Get_Guid: WideString; safecall;
    procedure Set_Guid(const ret: WideString); safecall;
    function Get_ProgId: WideString; safecall;
    procedure Set_ProgId(const ret: WideString); safecall;
    function Register: WordBool; safecall;
    procedure Unregister; safecall;
    function InstallMenu(const menu_name: WideString; const options: IRobotCmdList): WordBool; safecall;
    property ProviderName: WideString read Get_ProviderName write Set_ProviderName;
    property ProductName: WideString read Get_ProductName write Set_ProductName;
    property Guid: WideString read Get_Guid write Set_Guid;
    property ProgId: WideString read Get_ProgId write Set_ProgId;
  end;

// *********************************************************************//
// DispIntf:  IRobotAddInRegistrarDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {49F36B02-24CC-11D4-B804-0050DA76755E}
// *********************************************************************//
  IRobotAddInRegistrarDisp = dispinterface
    ['{49F36B02-24CC-11D4-B804-0050DA76755E}']
    property ProviderName: WideString dispid 1610743808;
    property ProductName: WideString dispid 1610743810;
    property Guid: WideString dispid 1610743812;
    property ProgId: WideString dispid 1610743814;
    function Register: WordBool; dispid 1610743816;
    procedure Unregister; dispid 1610743817;
    function InstallMenu(const menu_name: WideString; const options: IRobotCmdList): WordBool; dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRobotCmdList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CE4DE4E4-1114-11D4-B7F6-0050DA76755E}
// *********************************************************************//
  IRobotCmdList = interface(IDispatch)
    ['{CE4DE4E4-1114-11D4-B7F6-0050DA76755E}']
    function Get_Count: Integer; safecall;
    function New(cmd_id: Integer; const cmd_name: WideString): Integer; safecall;
    function Get(idx: Integer): IRobotCmdInfo; safecall;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRobotCmdListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CE4DE4E4-1114-11D4-B7F6-0050DA76755E}
// *********************************************************************//
  IRobotCmdListDisp = dispinterface
    ['{CE4DE4E4-1114-11D4-B7F6-0050DA76755E}']
    property Count: Integer readonly dispid 1610743808;
    function New(cmd_id: Integer; const cmd_name: WideString): Integer; dispid 1610743809;
    function Get(idx: Integer): IRobotCmdInfo; dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotCmdInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CE4DE4E2-1114-11D4-B7F6-0050DA76755E}
// *********************************************************************//
  IRobotCmdInfo = interface(IDispatch)
    ['{CE4DE4E2-1114-11D4-B7F6-0050DA76755E}']
    function Get_Id: Integer; safecall;
    procedure Set_Id(ret: Integer); safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_MenuEnabled: WordBool; safecall;
    procedure Set_MenuEnabled(ret: WordBool); safecall;
    function Get_MenuChecked: Integer; safecall;
    procedure Set_MenuChecked(ret: Integer); safecall;
    property Id: Integer read Get_Id write Set_Id;
    property Name: WideString read Get_Name write Set_Name;
    property MenuEnabled: WordBool read Get_MenuEnabled write Set_MenuEnabled;
    property MenuChecked: Integer read Get_MenuChecked write Set_MenuChecked;
  end;

// *********************************************************************//
// DispIntf:  IRobotCmdInfoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CE4DE4E2-1114-11D4-B7F6-0050DA76755E}
// *********************************************************************//
  IRobotCmdInfoDisp = dispinterface
    ['{CE4DE4E2-1114-11D4-B7F6-0050DA76755E}']
    property Id: Integer dispid 1610743808;
    property Name: WideString dispid 1610743810;
    property MenuEnabled: WordBool dispid 1610743812;
    property MenuChecked: Integer dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRobotAddInMngr
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D46F4972-E2C0-11D2-9892-0080C86BE4DF}
// *********************************************************************//
  IRobotAddInMngr = interface(IDispatch)
    ['{D46F4972-E2C0-11D2-9892-0080C86BE4DF}']
    function InstallCommand(add_in_id: Integer; cmd_id: Integer): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotAddInMngrDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D46F4972-E2C0-11D2-9892-0080C86BE4DF}
// *********************************************************************//
  IRobotAddInMngrDisp = dispinterface
    ['{D46F4972-E2C0-11D2-9892-0080C86BE4DF}']
    function InstallCommand(add_in_id: Integer; cmd_id: Integer): Integer; dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRConcrReinforceData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF48F2C2-5180-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRConcrReinforceData = interface(IDispatch)
    ['{BF48F2C2-5180-11D4-B83E-0050DA76755E}']
    function Get_BarDim_D1_Bot: Double; safecall;
    procedure Set_BarDim_D1_Bot(ret: Double); safecall;
    function Get_BarDim_D1_Up: Double; safecall;
    procedure Set_BarDim_D1_Up(ret: Double); safecall;
    function Get_BarDim_D2_Bot: Double; safecall;
    procedure Set_BarDim_D2_Bot(ret: Double); safecall;
    function Get_BarDim_D2_Up: Double; safecall;
    procedure Set_BarDim_D2_Up(ret: Double); safecall;
    function Get_Cover_Bot: Double; safecall;
    procedure Set_Cover_Bot(ret: Double); safecall;
    function Get_Cover_Up: Double; safecall;
    procedure Set_Cover_Up(ret: Double); safecall;
    function Get_CodeName: WideString; safecall;
    function Get_ReinforcingSteel: IRConcrSteelParams; safecall;
    function Get_Concrete: IRConcrConcreteParams; safecall;
    function GetMainDirection(out _x: Double; out _y: Double; out _z: Double): IRConcrReinforceDirection; safecall;
    procedure SetMainDirection(dir_type: IRConcrReinforceDirection; _x: Double; _y: Double; 
                               _z: Double); safecall;
    property BarDim_D1_Bot: Double read Get_BarDim_D1_Bot write Set_BarDim_D1_Bot;
    property BarDim_D1_Up: Double read Get_BarDim_D1_Up write Set_BarDim_D1_Up;
    property BarDim_D2_Bot: Double read Get_BarDim_D2_Bot write Set_BarDim_D2_Bot;
    property BarDim_D2_Up: Double read Get_BarDim_D2_Up write Set_BarDim_D2_Up;
    property Cover_Bot: Double read Get_Cover_Bot write Set_Cover_Bot;
    property Cover_Up: Double read Get_Cover_Up write Set_Cover_Up;
    property CodeName: WideString read Get_CodeName;
    property ReinforcingSteel: IRConcrSteelParams read Get_ReinforcingSteel;
    property Concrete: IRConcrConcreteParams read Get_Concrete;
  end;

// *********************************************************************//
// DispIntf:  IRConcrReinforceDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF48F2C2-5180-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRConcrReinforceDataDisp = dispinterface
    ['{BF48F2C2-5180-11D4-B83E-0050DA76755E}']
    property BarDim_D1_Bot: Double dispid 1610743808;
    property BarDim_D1_Up: Double dispid 1610743810;
    property BarDim_D2_Bot: Double dispid 1610743812;
    property BarDim_D2_Up: Double dispid 1610743814;
    property Cover_Bot: Double dispid 1610743816;
    property Cover_Up: Double dispid 1610743818;
    property CodeName: WideString readonly dispid 1610743820;
    property ReinforcingSteel: IRConcrSteelParams readonly dispid 1610743821;
    property Concrete: IRConcrConcreteParams readonly dispid 1610743822;
    function GetMainDirection(out _x: Double; out _y: Double; out _z: Double): IRConcrReinforceDirection; dispid 1610743823;
    procedure SetMainDirection(dir_type: IRConcrReinforceDirection; _x: Double; _y: Double; 
                               _z: Double); dispid 1610743824;
  end;

// *********************************************************************//
// Interface: IRConcrReinforceData2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A31252B6-9163-4CB5-A7C1-ED1AA8CD4EB2}
// *********************************************************************//
  IRConcrReinforceData2 = interface(IRConcrReinforceData)
    ['{A31252B6-9163-4CB5-A7C1-ED1AA8CD4EB2}']
    procedure GhostMethod_IRConcrReinforceData2_0_1; safecall;
    procedure GhostMethod_IRConcrReinforceData2_4_2; safecall;
    procedure GhostMethod_IRConcrReinforceData2_8_3; safecall;
    procedure GhostMethod_IRConcrReinforceData2_12_4; safecall;
    procedure GhostMethod_IRConcrReinforceData2_16_5; safecall;
    procedure GhostMethod_IRConcrReinforceData2_20_6; safecall;
    procedure GhostMethod_IRConcrReinforceData2_24_7; safecall;
    procedure GhostMethod_IRConcrReinforceData2_28_8; safecall;
    procedure GhostMethod_IRConcrReinforceData2_32_9; safecall;
    procedure GhostMethod_IRConcrReinforceData2_36_10; safecall;
    procedure GhostMethod_IRConcrReinforceData2_40_11; safecall;
    procedure GhostMethod_IRConcrReinforceData2_44_12; safecall;
    procedure GhostMethod_IRConcrReinforceData2_48_13; safecall;
    procedure GhostMethod_IRConcrReinforceData2_52_14; safecall;
    procedure GhostMethod_IRConcrReinforceData2_56_15; safecall;
    procedure GhostMethod_IRConcrReinforceData2_60_16; safecall;
    procedure GhostMethod_IRConcrReinforceData2_64_17; safecall;
    procedure GhostMethod_IRConcrReinforceData2_68_18; safecall;
    procedure GhostMethod_IRConcrReinforceData2_72_19; safecall;
    procedure GhostMethod_IRConcrReinforceData2_76_20; safecall;
    procedure GhostMethod_IRConcrReinforceData2_80_21; safecall;
    procedure GhostMethod_IRConcrReinforceData2_84_22; safecall;
    procedure GhostMethod_IRConcrReinforceData2_88_23; safecall;
    procedure GhostMethod_IRConcrReinforceData2_92_24; safecall;
    function Get_Main: IRConcrReinforceDataMain; safecall;
    property Main: IRConcrReinforceDataMain read Get_Main;
  end;

// *********************************************************************//
// DispIntf:  IRConcrReinforceData2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A31252B6-9163-4CB5-A7C1-ED1AA8CD4EB2}
// *********************************************************************//
  IRConcrReinforceData2Disp = dispinterface
    ['{A31252B6-9163-4CB5-A7C1-ED1AA8CD4EB2}']
    procedure GhostMethod_IRConcrReinforceData2_0_1; dispid 1610678272;
    procedure GhostMethod_IRConcrReinforceData2_4_2; dispid 1610678273;
    procedure GhostMethod_IRConcrReinforceData2_8_3; dispid 1610678274;
    procedure GhostMethod_IRConcrReinforceData2_12_4; dispid 1610678275;
    procedure GhostMethod_IRConcrReinforceData2_16_5; dispid 1610678276;
    procedure GhostMethod_IRConcrReinforceData2_20_6; dispid 1610678277;
    procedure GhostMethod_IRConcrReinforceData2_24_7; dispid 1610678278;
    procedure GhostMethod_IRConcrReinforceData2_28_8; dispid 1610678279;
    procedure GhostMethod_IRConcrReinforceData2_32_9; dispid 1610678280;
    procedure GhostMethod_IRConcrReinforceData2_36_10; dispid 1610678281;
    procedure GhostMethod_IRConcrReinforceData2_40_11; dispid 1610678282;
    procedure GhostMethod_IRConcrReinforceData2_44_12; dispid 1610678283;
    procedure GhostMethod_IRConcrReinforceData2_48_13; dispid 1610678284;
    procedure GhostMethod_IRConcrReinforceData2_52_14; dispid 1610678285;
    procedure GhostMethod_IRConcrReinforceData2_56_15; dispid 1610678286;
    procedure GhostMethod_IRConcrReinforceData2_60_16; dispid 1610678287;
    procedure GhostMethod_IRConcrReinforceData2_64_17; dispid 1610678288;
    procedure GhostMethod_IRConcrReinforceData2_68_18; dispid 1610678289;
    procedure GhostMethod_IRConcrReinforceData2_72_19; dispid 1610678290;
    procedure GhostMethod_IRConcrReinforceData2_76_20; dispid 1610678291;
    procedure GhostMethod_IRConcrReinforceData2_80_21; dispid 1610678292;
    procedure GhostMethod_IRConcrReinforceData2_84_22; dispid 1610678293;
    procedure GhostMethod_IRConcrReinforceData2_88_23; dispid 1610678294;
    procedure GhostMethod_IRConcrReinforceData2_92_24; dispid 1610678295;
    property Main: IRConcrReinforceDataMain readonly dispid 1610809344;
    property BarDim_D1_Bot: Double dispid 1610743808;
    property BarDim_D1_Up: Double dispid 1610743810;
    property BarDim_D2_Bot: Double dispid 1610743812;
    property BarDim_D2_Up: Double dispid 1610743814;
    property Cover_Bot: Double dispid 1610743816;
    property Cover_Up: Double dispid 1610743818;
    property CodeName: WideString readonly dispid 1610743820;
    property ReinforcingSteel: IRConcrSteelParams readonly dispid 1610743821;
    property Concrete: IRConcrConcreteParams readonly dispid 1610743822;
    function GetMainDirection(out _x: Double; out _y: Double; out _z: Double): IRConcrReinforceDirection; dispid 1610743823;
    procedure SetMainDirection(dir_type: IRConcrReinforceDirection; _x: Double; _y: Double; 
                               _z: Double); dispid 1610743824;
  end;

// *********************************************************************//
// Interface: IRConcrSteelParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF48F2C6-5180-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRConcrSteelParams = interface(IDispatch)
    ['{BF48F2C6-5180-11D4-B83E-0050DA76755E}']
    function Get_FY: Double; safecall;
    procedure Set_FY(ret: Double); safecall;
    function Get_Ft: Double; safecall;
    procedure Set_Ft(ret: Double); safecall;
    function Get_Fy_calc: Double; safecall;
    procedure Set_Fy_calc(ret: Double); safecall;
    function Get_Ft_calc: Double; safecall;
    procedure Set_Ft_calc(ret: Double); safecall;
    function Get_Ey: Double; safecall;
    procedure Set_Ey(ret: Double); safecall;
    function Get_Grade: Smallint; safecall;
    procedure Set_Grade(ret: Smallint); safecall;
    property FY: Double read Get_FY write Set_FY;
    property Ft: Double read Get_Ft write Set_Ft;
    property Fy_calc: Double read Get_Fy_calc write Set_Fy_calc;
    property Ft_calc: Double read Get_Ft_calc write Set_Ft_calc;
    property Ey: Double read Get_Ey write Set_Ey;
    property Grade: Smallint read Get_Grade write Set_Grade;
  end;

// *********************************************************************//
// DispIntf:  IRConcrSteelParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF48F2C6-5180-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRConcrSteelParamsDisp = dispinterface
    ['{BF48F2C6-5180-11D4-B83E-0050DA76755E}']
    property FY: Double dispid 1610743808;
    property Ft: Double dispid 1610743810;
    property Fy_calc: Double dispid 1610743812;
    property Ft_calc: Double dispid 1610743814;
    property Ey: Double dispid 1610743816;
    property Grade: Smallint dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRConcrConcreteParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF48F2C4-5180-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRConcrConcreteParams = interface(IDispatch)
    ['{BF48F2C4-5180-11D4-B83E-0050DA76755E}']
    function Get_Fc: Double; safecall;
    procedure Set_Fc(ret: Double); safecall;
    function Get_Fcj: Double; safecall;
    procedure Set_Fcj(ret: Double); safecall;
    function Get_Fc_calc: Double; safecall;
    procedure Set_Fc_calc(ret: Double); safecall;
    function Get_Ft: Double; safecall;
    procedure Set_Ft(ret: Double); safecall;
    function Get_Ec: Double; safecall;
    procedure Set_Ec(ret: Double); safecall;
    function Get_Grade: Smallint; safecall;
    procedure Set_Grade(ret: Smallint); safecall;
    property Fc: Double read Get_Fc write Set_Fc;
    property Fcj: Double read Get_Fcj write Set_Fcj;
    property Fc_calc: Double read Get_Fc_calc write Set_Fc_calc;
    property Ft: Double read Get_Ft write Set_Ft;
    property Ec: Double read Get_Ec write Set_Ec;
    property Grade: Smallint read Get_Grade write Set_Grade;
  end;

// *********************************************************************//
// DispIntf:  IRConcrConcreteParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF48F2C4-5180-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRConcrConcreteParamsDisp = dispinterface
    ['{BF48F2C4-5180-11D4-B83E-0050DA76755E}']
    property Fc: Double dispid 1610743808;
    property Fcj: Double dispid 1610743810;
    property Fc_calc: Double dispid 1610743812;
    property Ft: Double dispid 1610743814;
    property Ec: Double dispid 1610743816;
    property Grade: Smallint dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRConcrReinforceDataMain
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97C4C4B5-8367-4E9E-9290-9B2DD0DBAB65}
// *********************************************************************//
  IRConcrReinforceDataMain = interface(IRConcrReinforceData)
    ['{97C4C4B5-8367-4E9E-9290-9B2DD0DBAB65}']
    function Get_ReinfCalcType: IRConcrReinforceCalcType; safecall;
    procedure Set_ReinfCalcType(ret: IRConcrReinforceCalcType); safecall;
    function Get_UnidirReinf: WordBool; safecall;
    procedure Set_UnidirReinf(ret: WordBool); safecall;
    function Get_MembraneReinfInOneLayer: WordBool; safecall;
    procedure Set_MembraneReinfInOneLayer(ret: WordBool); safecall;
    function Get_MinimumReinf: IRConcrMinimumReinforcementType; safecall;
    procedure Set_MinimumReinf(ret: IRConcrMinimumReinforcementType); safecall;
    property ReinfCalcType: IRConcrReinforceCalcType read Get_ReinfCalcType write Set_ReinfCalcType;
    property UnidirReinf: WordBool read Get_UnidirReinf write Set_UnidirReinf;
    property MembraneReinfInOneLayer: WordBool read Get_MembraneReinfInOneLayer write Set_MembraneReinfInOneLayer;
    property MinimumReinf: IRConcrMinimumReinforcementType read Get_MinimumReinf write Set_MinimumReinf;
  end;

// *********************************************************************//
// DispIntf:  IRConcrReinforceDataMainDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97C4C4B5-8367-4E9E-9290-9B2DD0DBAB65}
// *********************************************************************//
  IRConcrReinforceDataMainDisp = dispinterface
    ['{97C4C4B5-8367-4E9E-9290-9B2DD0DBAB65}']
    property ReinfCalcType: IRConcrReinforceCalcType dispid 1610809344;
    property UnidirReinf: WordBool dispid 1610809346;
    property MembraneReinfInOneLayer: WordBool dispid 1610809348;
    property MinimumReinf: IRConcrMinimumReinforcementType dispid 1610809350;
    property BarDim_D1_Bot: Double dispid 1610743808;
    property BarDim_D1_Up: Double dispid 1610743810;
    property BarDim_D2_Bot: Double dispid 1610743812;
    property BarDim_D2_Up: Double dispid 1610743814;
    property Cover_Bot: Double dispid 1610743816;
    property Cover_Up: Double dispid 1610743818;
    property CodeName: WideString readonly dispid 1610743820;
    property ReinforcingSteel: IRConcrSteelParams readonly dispid 1610743821;
    property Concrete: IRConcrConcreteParams readonly dispid 1610743822;
    function GetMainDirection(out _x: Double; out _y: Double; out _z: Double): IRConcrReinforceDirection; dispid 1610743823;
    procedure SetMainDirection(dir_type: IRConcrReinforceDirection; _x: Double; _y: Double; 
                               _z: Double); dispid 1610743824;
  end;

// *********************************************************************//
// Interface: IRConcr_PN84_ReinforceData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF48F2C8-5180-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRConcr_PN84_ReinforceData = interface(IRConcrReinforceData)
    ['{BF48F2C8-5180-11D4-B83E-0050DA76755E}']
    function Get_CheckConstructionStages: WordBool; safecall;
    procedure Set_CheckConstructionStages(ret: WordBool); safecall;
    function Get_SingleShortLoad: WordBool; safecall;
    procedure Set_SingleShortLoad(ret: WordBool); safecall;
    function Get_LongActionAbove100: WordBool; safecall;
    procedure Set_LongActionAbove100(ret: WordBool); safecall;
    function Get_SLS_Cracking: WordBool; safecall;
    procedure Set_SLS_Cracking(ret: WordBool); safecall;
    function Get_SLS_Deflection: WordBool; safecall;
    procedure Set_SLS_Deflection(ret: WordBool); safecall;
    function Get_SLS_CrackingReinfCorrect: WordBool; safecall;
    procedure Set_SLS_CrackingReinfCorrect(ret: WordBool); safecall;
    function Get_SLS_DeflectionReinfCorrect: WordBool; safecall;
    procedure Set_SLS_DeflectionReinfCorrect(ret: WordBool); safecall;
    function Get_SLS_Exposure: Smallint; safecall;
    procedure Set_SLS_Exposure(ret: Smallint); safecall;
    function Get_SLS_MaxCracking: Double; safecall;
    procedure Set_SLS_MaxCracking(ret: Double); safecall;
    function Get_SLS_MaxDeflection: Double; safecall;
    procedure Set_SLS_MaxDeflection(ret: Double); safecall;
    function Get_SLS_LoadsRatio: Double; safecall;
    procedure Set_SLS_LoadsRatio(ret: Double); safecall;
    function Get_SLS_ConcreteAge: Smallint; safecall;
    procedure Set_SLS_ConcreteAge(ret: Smallint); safecall;
    function Get_SLS_EnvHumidity: IRConcr_PN84_HumidityType; safecall;
    procedure Set_SLS_EnvHumidity(ret: IRConcr_PN84_HumidityType); safecall;
    function Get_SLS_CreepingCoef: Double; safecall;
    procedure Set_SLS_CreepingCoef(ret: Double); safecall;
    function Get_Main: IRConcrReinforceDataMain; safecall;
    property CheckConstructionStages: WordBool read Get_CheckConstructionStages write Set_CheckConstructionStages;
    property SingleShortLoad: WordBool read Get_SingleShortLoad write Set_SingleShortLoad;
    property LongActionAbove100: WordBool read Get_LongActionAbove100 write Set_LongActionAbove100;
    property SLS_Cracking: WordBool read Get_SLS_Cracking write Set_SLS_Cracking;
    property SLS_Deflection: WordBool read Get_SLS_Deflection write Set_SLS_Deflection;
    property SLS_CrackingReinfCorrect: WordBool read Get_SLS_CrackingReinfCorrect write Set_SLS_CrackingReinfCorrect;
    property SLS_DeflectionReinfCorrect: WordBool read Get_SLS_DeflectionReinfCorrect write Set_SLS_DeflectionReinfCorrect;
    property SLS_Exposure: Smallint read Get_SLS_Exposure write Set_SLS_Exposure;
    property SLS_MaxCracking: Double read Get_SLS_MaxCracking write Set_SLS_MaxCracking;
    property SLS_MaxDeflection: Double read Get_SLS_MaxDeflection write Set_SLS_MaxDeflection;
    property SLS_LoadsRatio: Double read Get_SLS_LoadsRatio write Set_SLS_LoadsRatio;
    property SLS_ConcreteAge: Smallint read Get_SLS_ConcreteAge write Set_SLS_ConcreteAge;
    property SLS_EnvHumidity: IRConcr_PN84_HumidityType read Get_SLS_EnvHumidity write Set_SLS_EnvHumidity;
    property SLS_CreepingCoef: Double read Get_SLS_CreepingCoef write Set_SLS_CreepingCoef;
    property Main: IRConcrReinforceDataMain read Get_Main;
  end;

// *********************************************************************//
// DispIntf:  IRConcr_PN84_ReinforceDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF48F2C8-5180-11D4-B83E-0050DA76755E}
// *********************************************************************//
  IRConcr_PN84_ReinforceDataDisp = dispinterface
    ['{BF48F2C8-5180-11D4-B83E-0050DA76755E}']
    property CheckConstructionStages: WordBool dispid 1610809344;
    property SingleShortLoad: WordBool dispid 1610809346;
    property LongActionAbove100: WordBool dispid 1610809348;
    property SLS_Cracking: WordBool dispid 1610809350;
    property SLS_Deflection: WordBool dispid 1610809352;
    property SLS_CrackingReinfCorrect: WordBool dispid 1610809354;
    property SLS_DeflectionReinfCorrect: WordBool dispid 1610809356;
    property SLS_Exposure: Smallint dispid 1610809358;
    property SLS_MaxCracking: Double dispid 1610809360;
    property SLS_MaxDeflection: Double dispid 1610809362;
    property SLS_LoadsRatio: Double dispid 1610809364;
    property SLS_ConcreteAge: Smallint dispid 1610809366;
    property SLS_EnvHumidity: IRConcr_PN84_HumidityType dispid 1610809368;
    property SLS_CreepingCoef: Double dispid 1610809370;
    property Main: IRConcrReinforceDataMain readonly dispid 1610809372;
    property BarDim_D1_Bot: Double dispid 1610743808;
    property BarDim_D1_Up: Double dispid 1610743810;
    property BarDim_D2_Bot: Double dispid 1610743812;
    property BarDim_D2_Up: Double dispid 1610743814;
    property Cover_Bot: Double dispid 1610743816;
    property Cover_Up: Double dispid 1610743818;
    property CodeName: WideString readonly dispid 1610743820;
    property ReinforcingSteel: IRConcrSteelParams readonly dispid 1610743821;
    property Concrete: IRConcrConcreteParams readonly dispid 1610743822;
    function GetMainDirection(out _x: Double; out _y: Double; out _z: Double): IRConcrReinforceDirection; dispid 1610743823;
    procedure SetMainDirection(dir_type: IRConcrReinforceDirection; _x: Double; _y: Double; 
                               _z: Double); dispid 1610743824;
  end;

// *********************************************************************//
// Interface: IRConcr_PN99_ReinforceData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B72CDD22-5415-11D4-B841-0050DA76755E}
// *********************************************************************//
  IRConcr_PN99_ReinforceData = interface(IRConcrReinforceData)
    ['{B72CDD22-5415-11D4-B841-0050DA76755E}']
    function Get_SLS_Cracking: WordBool; safecall;
    procedure Set_SLS_Cracking(ret: WordBool); safecall;
    function Get_SLS_Deflection: WordBool; safecall;
    procedure Set_SLS_Deflection(ret: WordBool); safecall;
    function Get_SLS_CrackingReinfCorrect: WordBool; safecall;
    procedure Set_SLS_CrackingReinfCorrect(ret: WordBool); safecall;
    function Get_SLS_DeflectionReinfCorrect: WordBool; safecall;
    procedure Set_SLS_DeflectionReinfCorrect(ret: WordBool); safecall;
    function Get_SLS_Exposure: Smallint; safecall;
    procedure Set_SLS_Exposure(ret: Smallint); safecall;
    function Get_SLS_MaxCracking: Double; safecall;
    procedure Set_SLS_MaxCracking(ret: Double); safecall;
    function Get_SLS_MaxDeflection: Double; safecall;
    procedure Set_SLS_MaxDeflection(ret: Double); safecall;
    function Get_SLS_Concrete: Double; safecall;
    procedure Set_SLS_Concrete(ret: Double); safecall;
    function Get_SLS_ConcreteAge: Smallint; safecall;
    procedure Set_SLS_ConcreteAge(ret: Smallint); safecall;
    function Get_SLS_EnvHumidityVal: Double; safecall;
    procedure Set_SLS_EnvHumidityVal(ret: Double); safecall;
    function Get_Main: IRConcrReinforceDataMain; safecall;
    function Get_SLS_LoadRatio: Double; safecall;
    procedure Set_SLS_LoadRatio(ret: Double); safecall;
    function Get_SLS_CreepingCoef: WordBool; safecall;
    procedure Set_SLS_CreepingCoef(ret: WordBool); safecall;
    function Get_SLS_CreepingCoefValue: Double; safecall;
    procedure Set_SLS_CreepingCoefValue(ret: Double); safecall;
    function Get_SLS_ExposureTop: Smallint; safecall;
    procedure Set_SLS_ExposureTop(ret: Smallint); safecall;
    function Get_SLS_ExposureBot: Smallint; safecall;
    procedure Set_SLS_ExposureBot(ret: Smallint); safecall;
    function Get_SLS_MaxCrackingTop: Double; safecall;
    procedure Set_SLS_MaxCrackingTop(ret: Double); safecall;
    function Get_SLS_MaxCrackingTopEnabled: WordBool; safecall;
    procedure Set_SLS_MaxCrackingTopEnabled(ret: WordBool); safecall;
    function Get_SLS_MaxCrackingBot: Double; safecall;
    procedure Set_SLS_MaxCrackingBot(ret: Double); safecall;
    function Get_SLS_MaxCrackingBotEnabled: WordBool; safecall;
    procedure Set_SLS_MaxCrackingBotEnabled(ret: WordBool); safecall;
    function Get_IsSpecialStructure: WordBool; safecall;
    procedure Set_IsSpecialStructure(ret: WordBool); safecall;
    property SLS_Cracking: WordBool read Get_SLS_Cracking write Set_SLS_Cracking;
    property SLS_Deflection: WordBool read Get_SLS_Deflection write Set_SLS_Deflection;
    property SLS_CrackingReinfCorrect: WordBool read Get_SLS_CrackingReinfCorrect write Set_SLS_CrackingReinfCorrect;
    property SLS_DeflectionReinfCorrect: WordBool read Get_SLS_DeflectionReinfCorrect write Set_SLS_DeflectionReinfCorrect;
    property SLS_Exposure: Smallint read Get_SLS_Exposure write Set_SLS_Exposure;
    property SLS_MaxCracking: Double read Get_SLS_MaxCracking write Set_SLS_MaxCracking;
    property SLS_MaxDeflection: Double read Get_SLS_MaxDeflection write Set_SLS_MaxDeflection;
    property SLS_Concrete: Double read Get_SLS_Concrete write Set_SLS_Concrete;
    property SLS_ConcreteAge: Smallint read Get_SLS_ConcreteAge write Set_SLS_ConcreteAge;
    property SLS_EnvHumidityVal: Double read Get_SLS_EnvHumidityVal write Set_SLS_EnvHumidityVal;
    property Main: IRConcrReinforceDataMain read Get_Main;
    property SLS_LoadRatio: Double read Get_SLS_LoadRatio write Set_SLS_LoadRatio;
    property SLS_CreepingCoef: WordBool read Get_SLS_CreepingCoef write Set_SLS_CreepingCoef;
    property SLS_CreepingCoefValue: Double read Get_SLS_CreepingCoefValue write Set_SLS_CreepingCoefValue;
    property SLS_ExposureTop: Smallint read Get_SLS_ExposureTop write Set_SLS_ExposureTop;
    property SLS_ExposureBot: Smallint read Get_SLS_ExposureBot write Set_SLS_ExposureBot;
    property SLS_MaxCrackingTop: Double read Get_SLS_MaxCrackingTop write Set_SLS_MaxCrackingTop;
    property SLS_MaxCrackingTopEnabled: WordBool read Get_SLS_MaxCrackingTopEnabled write Set_SLS_MaxCrackingTopEnabled;
    property SLS_MaxCrackingBot: Double read Get_SLS_MaxCrackingBot write Set_SLS_MaxCrackingBot;
    property SLS_MaxCrackingBotEnabled: WordBool read Get_SLS_MaxCrackingBotEnabled write Set_SLS_MaxCrackingBotEnabled;
    property IsSpecialStructure: WordBool read Get_IsSpecialStructure write Set_IsSpecialStructure;
  end;

// *********************************************************************//
// DispIntf:  IRConcr_PN99_ReinforceDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B72CDD22-5415-11D4-B841-0050DA76755E}
// *********************************************************************//
  IRConcr_PN99_ReinforceDataDisp = dispinterface
    ['{B72CDD22-5415-11D4-B841-0050DA76755E}']
    property SLS_Cracking: WordBool dispid 1610809344;
    property SLS_Deflection: WordBool dispid 1610809346;
    property SLS_CrackingReinfCorrect: WordBool dispid 1610809348;
    property SLS_DeflectionReinfCorrect: WordBool dispid 1610809350;
    property SLS_Exposure: Smallint dispid 1610809352;
    property SLS_MaxCracking: Double dispid 1610809354;
    property SLS_MaxDeflection: Double dispid 1610809356;
    property SLS_Concrete: Double dispid 1610809358;
    property SLS_ConcreteAge: Smallint dispid 1610809360;
    property SLS_EnvHumidityVal: Double dispid 1610809362;
    property Main: IRConcrReinforceDataMain readonly dispid 1610809364;
    property SLS_LoadRatio: Double dispid 1610809365;
    property SLS_CreepingCoef: WordBool dispid 1610809367;
    property SLS_CreepingCoefValue: Double dispid 1610809369;
    property SLS_ExposureTop: Smallint dispid 1610809371;
    property SLS_ExposureBot: Smallint dispid 1610809373;
    property SLS_MaxCrackingTop: Double dispid 1610809375;
    property SLS_MaxCrackingTopEnabled: WordBool dispid 1610809377;
    property SLS_MaxCrackingBot: Double dispid 1610809379;
    property SLS_MaxCrackingBotEnabled: WordBool dispid 1610809381;
    property IsSpecialStructure: WordBool dispid 1610809383;
    property BarDim_D1_Bot: Double dispid 1610743808;
    property BarDim_D1_Up: Double dispid 1610743810;
    property BarDim_D2_Bot: Double dispid 1610743812;
    property BarDim_D2_Up: Double dispid 1610743814;
    property Cover_Bot: Double dispid 1610743816;
    property Cover_Up: Double dispid 1610743818;
    property CodeName: WideString readonly dispid 1610743820;
    property ReinforcingSteel: IRConcrSteelParams readonly dispid 1610743821;
    property Concrete: IRConcrConcreteParams readonly dispid 1610743822;
    function GetMainDirection(out _x: Double; out _y: Double; out _z: Double): IRConcrReinforceDirection; dispid 1610743823;
    procedure SetMainDirection(dir_type: IRConcrReinforceDirection; _x: Double; _y: Double; 
                               _z: Double); dispid 1610743824;
  end;

// *********************************************************************//
// Interface: IRConcr_BAEL_ReinforceData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {086753D2-54C6-11D4-B842-0050DA76755E}
// *********************************************************************//
  IRConcr_BAEL_ReinforceData = interface(IRConcrReinforceData)
    ['{086753D2-54C6-11D4-B842-0050DA76755E}']
    function Get_Cracking: IRConcr_BAEL_CrackingType; safecall;
    procedure Set_Cracking(ret: IRConcr_BAEL_CrackingType); safecall;
    function Get_CrackEnv: IRConcr_BAEL_EnvironmentType; safecall;
    procedure Set_CrackEnv(ret: IRConcr_BAEL_EnvironmentType); safecall;
    function Get_CrackWaterLevel: IRConcr_BAEL_WaterLevel; safecall;
    procedure Set_CrackWaterLevel(ret: IRConcr_BAEL_WaterLevel); safecall;
    function Get_CrackAlpha: Double; safecall;
    procedure Set_CrackAlpha(ret: Double); safecall;
    function Get_SteelSymbol: WideString; safecall;
    procedure Set_SteelSymbol(const ret: WideString); safecall;
    function Get_SLS_Deflection: WordBool; safecall;
    procedure Set_SLS_Deflection(ret: WordBool); safecall;
    function Get_SLS_DeflectionReinfCorrect: WordBool; safecall;
    procedure Set_SLS_DeflectionReinfCorrect(ret: WordBool); safecall;
    function Get_SLS_MaxDeflection: Double; safecall;
    procedure Set_SLS_MaxDeflection(ret: Double); safecall;
    function Get_CrackExtraParams: WordBool; safecall;
    procedure Set_CrackExtraParams(ret: WordBool); safecall;
    function Get_Main: IRConcrReinforceDataMain; safecall;
    function Get_CrackingTop: IRConcr_BAEL_CrackingType; safecall;
    procedure Set_CrackingTop(ret: IRConcr_BAEL_CrackingType); safecall;
    function Get_CrackingBot: IRConcr_BAEL_CrackingType; safecall;
    procedure Set_CrackingBot(ret: IRConcr_BAEL_CrackingType); safecall;
    function Get_CrackEnvTop: IRConcr_BAEL_EnvironmentType; safecall;
    procedure Set_CrackEnvTop(ret: IRConcr_BAEL_EnvironmentType); safecall;
    function Get_CrackEnvBot: IRConcr_BAEL_EnvironmentType; safecall;
    procedure Set_CrackEnvBot(ret: IRConcr_BAEL_EnvironmentType); safecall;
    function Get_CrackWaterLevelTop: IRConcr_BAEL_WaterLevel; safecall;
    procedure Set_CrackWaterLevelTop(ret: IRConcr_BAEL_WaterLevel); safecall;
    function Get_CrackWaterLevelBot: IRConcr_BAEL_WaterLevel; safecall;
    procedure Set_CrackWaterLevelBot(ret: IRConcr_BAEL_WaterLevel); safecall;
    function Get_CrackAlphaTop: Double; safecall;
    procedure Set_CrackAlphaTop(ret: Double); safecall;
    function Get_CrackAlphaBot: Double; safecall;
    procedure Set_CrackAlphaBot(ret: Double); safecall;
    function Get_CrackExtraParamsTop: WordBool; safecall;
    procedure Set_CrackExtraParamsTop(ret: WordBool); safecall;
    function Get_CrackExtraParamsBot: WordBool; safecall;
    procedure Set_CrackExtraParamsBot(ret: WordBool); safecall;
    function Get_SLS_ConcreteStressesTop: Double; safecall;
    procedure Set_SLS_ConcreteStressesTop(ret: Double); safecall;
    function Get_SLS_SteelStressesTop: Double; safecall;
    procedure Set_SLS_SteelStressesTop(ret: Double); safecall;
    function Get_SLS_ConcreteStressesBot: Double; safecall;
    procedure Set_SLS_ConcreteStressesBot(ret: Double); safecall;
    function Get_SLS_SteelStressesBot: Double; safecall;
    procedure Set_SLS_SteelStressesBot(ret: Double); safecall;
    property Cracking: IRConcr_BAEL_CrackingType read Get_Cracking write Set_Cracking;
    property CrackEnv: IRConcr_BAEL_EnvironmentType read Get_CrackEnv write Set_CrackEnv;
    property CrackWaterLevel: IRConcr_BAEL_WaterLevel read Get_CrackWaterLevel write Set_CrackWaterLevel;
    property CrackAlpha: Double read Get_CrackAlpha write Set_CrackAlpha;
    property SteelSymbol: WideString read Get_SteelSymbol write Set_SteelSymbol;
    property SLS_Deflection: WordBool read Get_SLS_Deflection write Set_SLS_Deflection;
    property SLS_DeflectionReinfCorrect: WordBool read Get_SLS_DeflectionReinfCorrect write Set_SLS_DeflectionReinfCorrect;
    property SLS_MaxDeflection: Double read Get_SLS_MaxDeflection write Set_SLS_MaxDeflection;
    property CrackExtraParams: WordBool read Get_CrackExtraParams write Set_CrackExtraParams;
    property Main: IRConcrReinforceDataMain read Get_Main;
    property CrackingTop: IRConcr_BAEL_CrackingType read Get_CrackingTop write Set_CrackingTop;
    property CrackingBot: IRConcr_BAEL_CrackingType read Get_CrackingBot write Set_CrackingBot;
    property CrackEnvTop: IRConcr_BAEL_EnvironmentType read Get_CrackEnvTop write Set_CrackEnvTop;
    property CrackEnvBot: IRConcr_BAEL_EnvironmentType read Get_CrackEnvBot write Set_CrackEnvBot;
    property CrackWaterLevelTop: IRConcr_BAEL_WaterLevel read Get_CrackWaterLevelTop write Set_CrackWaterLevelTop;
    property CrackWaterLevelBot: IRConcr_BAEL_WaterLevel read Get_CrackWaterLevelBot write Set_CrackWaterLevelBot;
    property CrackAlphaTop: Double read Get_CrackAlphaTop write Set_CrackAlphaTop;
    property CrackAlphaBot: Double read Get_CrackAlphaBot write Set_CrackAlphaBot;
    property CrackExtraParamsTop: WordBool read Get_CrackExtraParamsTop write Set_CrackExtraParamsTop;
    property CrackExtraParamsBot: WordBool read Get_CrackExtraParamsBot write Set_CrackExtraParamsBot;
    property SLS_ConcreteStressesTop: Double read Get_SLS_ConcreteStressesTop write Set_SLS_ConcreteStressesTop;
    property SLS_SteelStressesTop: Double read Get_SLS_SteelStressesTop write Set_SLS_SteelStressesTop;
    property SLS_ConcreteStressesBot: Double read Get_SLS_ConcreteStressesBot write Set_SLS_ConcreteStressesBot;
    property SLS_SteelStressesBot: Double read Get_SLS_SteelStressesBot write Set_SLS_SteelStressesBot;
  end;

// *********************************************************************//
// DispIntf:  IRConcr_BAEL_ReinforceDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {086753D2-54C6-11D4-B842-0050DA76755E}
// *********************************************************************//
  IRConcr_BAEL_ReinforceDataDisp = dispinterface
    ['{086753D2-54C6-11D4-B842-0050DA76755E}']
    property Cracking: IRConcr_BAEL_CrackingType dispid 1610809344;
    property CrackEnv: IRConcr_BAEL_EnvironmentType dispid 1610809346;
    property CrackWaterLevel: IRConcr_BAEL_WaterLevel dispid 1610809348;
    property CrackAlpha: Double dispid 1610809350;
    property SteelSymbol: WideString dispid 1610809352;
    property SLS_Deflection: WordBool dispid 1610809354;
    property SLS_DeflectionReinfCorrect: WordBool dispid 1610809356;
    property SLS_MaxDeflection: Double dispid 1610809358;
    property CrackExtraParams: WordBool dispid 1610809360;
    property Main: IRConcrReinforceDataMain readonly dispid 1610809362;
    property CrackingTop: IRConcr_BAEL_CrackingType dispid 1610809363;
    property CrackingBot: IRConcr_BAEL_CrackingType dispid 1610809365;
    property CrackEnvTop: IRConcr_BAEL_EnvironmentType dispid 1610809367;
    property CrackEnvBot: IRConcr_BAEL_EnvironmentType dispid 1610809369;
    property CrackWaterLevelTop: IRConcr_BAEL_WaterLevel dispid 1610809371;
    property CrackWaterLevelBot: IRConcr_BAEL_WaterLevel dispid 1610809373;
    property CrackAlphaTop: Double dispid 1610809375;
    property CrackAlphaBot: Double dispid 1610809377;
    property CrackExtraParamsTop: WordBool dispid 1610809379;
    property CrackExtraParamsBot: WordBool dispid 1610809381;
    property SLS_ConcreteStressesTop: Double dispid 1610809383;
    property SLS_SteelStressesTop: Double dispid 1610809385;
    property SLS_ConcreteStressesBot: Double dispid 1610809387;
    property SLS_SteelStressesBot: Double dispid 1610809389;
    property BarDim_D1_Bot: Double dispid 1610743808;
    property BarDim_D1_Up: Double dispid 1610743810;
    property BarDim_D2_Bot: Double dispid 1610743812;
    property BarDim_D2_Up: Double dispid 1610743814;
    property Cover_Bot: Double dispid 1610743816;
    property Cover_Up: Double dispid 1610743818;
    property CodeName: WideString readonly dispid 1610743820;
    property ReinforcingSteel: IRConcrSteelParams readonly dispid 1610743821;
    property Concrete: IRConcrConcreteParams readonly dispid 1610743822;
    function GetMainDirection(out _x: Double; out _y: Double; out _z: Double): IRConcrReinforceDirection; dispid 1610743823;
    procedure SetMainDirection(dir_type: IRConcrReinforceDirection; _x: Double; _y: Double; 
                               _z: Double); dispid 1610743824;
  end;

// *********************************************************************//
// Interface: IRConcr_ACI318_ReinforceData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {50EBB8BA-27A5-47CD-A6D3-7E308C416BDA}
// *********************************************************************//
  IRConcr_ACI318_ReinforceData = interface(IRConcrReinforceData)
    ['{50EBB8BA-27A5-47CD-A6D3-7E308C416BDA}']
    function Get_SLS_Cracking: WordBool; safecall;
    procedure Set_SLS_Cracking(ret: WordBool); safecall;
    function Get_SLS_Deflection: WordBool; safecall;
    procedure Set_SLS_Deflection(ret: WordBool); safecall;
    function Get_SLS_ReinforcementCorrection: WordBool; safecall;
    procedure Set_SLS_ReinforcementCorrection(ret: WordBool); safecall;
    function Get_SLS_MaxCracking: Double; safecall;
    procedure Set_SLS_MaxCracking(ret: Double); safecall;
    function Get_SLS_MaxDeflection: Double; safecall;
    procedure Set_SLS_MaxDeflection(ret: Double); safecall;
    function Get_SLS_LoadRatio: Double; safecall;
    procedure Set_SLS_LoadRatio(ret: Double); safecall;
    function Get_SLS_LoadActionPeriod: IRConcr_ACI318_LoadActionPeriodType; safecall;
    procedure Set_SLS_LoadActionPeriod(ret: IRConcr_ACI318_LoadActionPeriodType); safecall;
    function Get_SLS_Factor: WordBool; safecall;
    procedure Set_SLS_Factor(ret: WordBool); safecall;
    function Get_SLS_FactorValue: Double; safecall;
    procedure Set_SLS_FactorValue(ret: Double); safecall;
    function Get_IsMetric: WordBool; safecall;
    procedure SetBarDim(_type: IRConcrReinforceBarType; _val: IRConcr_ACI318_BarDim); safecall;
    function GetBarDim(_type: IRConcrReinforceBarType): IRConcr_ACI318_BarDim; safecall;
    procedure SetMetricBarDim(_type: IRConcrReinforceBarType; _val: IRConcr_ACI318_MetricBarDim); safecall;
    function GetMetricBarDim(_bar_type: IRConcrReinforceBarType): IRConcr_ACI318_MetricBarDim; safecall;
    function Get_Main: IRConcrReinforceDataMain; safecall;
    function Get_SLS_CreepingCoef: WordBool; safecall;
    procedure Set_SLS_CreepingCoef(ret: WordBool); safecall;
    function Get_SLS_CreepingCoefValue: Double; safecall;
    procedure Set_SLS_CreepingCoefValue(ret: Double); safecall;
    property SLS_Cracking: WordBool read Get_SLS_Cracking write Set_SLS_Cracking;
    property SLS_Deflection: WordBool read Get_SLS_Deflection write Set_SLS_Deflection;
    property SLS_ReinforcementCorrection: WordBool read Get_SLS_ReinforcementCorrection write Set_SLS_ReinforcementCorrection;
    property SLS_MaxCracking: Double read Get_SLS_MaxCracking write Set_SLS_MaxCracking;
    property SLS_MaxDeflection: Double read Get_SLS_MaxDeflection write Set_SLS_MaxDeflection;
    property SLS_LoadRatio: Double read Get_SLS_LoadRatio write Set_SLS_LoadRatio;
    property SLS_LoadActionPeriod: IRConcr_ACI318_LoadActionPeriodType read Get_SLS_LoadActionPeriod write Set_SLS_LoadActionPeriod;
    property SLS_Factor: WordBool read Get_SLS_Factor write Set_SLS_Factor;
    property SLS_FactorValue: Double read Get_SLS_FactorValue write Set_SLS_FactorValue;
    property IsMetric: WordBool read Get_IsMetric;
    property Main: IRConcrReinforceDataMain read Get_Main;
    property SLS_CreepingCoef: WordBool read Get_SLS_CreepingCoef write Set_SLS_CreepingCoef;
    property SLS_CreepingCoefValue: Double read Get_SLS_CreepingCoefValue write Set_SLS_CreepingCoefValue;
  end;

// *********************************************************************//
// DispIntf:  IRConcr_ACI318_ReinforceDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {50EBB8BA-27A5-47CD-A6D3-7E308C416BDA}
// *********************************************************************//
  IRConcr_ACI318_ReinforceDataDisp = dispinterface
    ['{50EBB8BA-27A5-47CD-A6D3-7E308C416BDA}']
    property SLS_Cracking: WordBool dispid 1610809344;
    property SLS_Deflection: WordBool dispid 1610809346;
    property SLS_ReinforcementCorrection: WordBool dispid 1610809348;
    property SLS_MaxCracking: Double dispid 1610809350;
    property SLS_MaxDeflection: Double dispid 1610809352;
    property SLS_LoadRatio: Double dispid 1610809354;
    property SLS_LoadActionPeriod: IRConcr_ACI318_LoadActionPeriodType dispid 1610809356;
    property SLS_Factor: WordBool dispid 1610809358;
    property SLS_FactorValue: Double dispid 1610809360;
    property IsMetric: WordBool readonly dispid 1610809362;
    procedure SetBarDim(_type: IRConcrReinforceBarType; _val: IRConcr_ACI318_BarDim); dispid 1610809363;
    function GetBarDim(_type: IRConcrReinforceBarType): IRConcr_ACI318_BarDim; dispid 1610809364;
    procedure SetMetricBarDim(_type: IRConcrReinforceBarType; _val: IRConcr_ACI318_MetricBarDim); dispid 1610809365;
    function GetMetricBarDim(_bar_type: IRConcrReinforceBarType): IRConcr_ACI318_MetricBarDim; dispid 1610809366;
    property Main: IRConcrReinforceDataMain readonly dispid 1610809367;
    property SLS_CreepingCoef: WordBool dispid 1610809368;
    property SLS_CreepingCoefValue: Double dispid 1610809370;
    property BarDim_D1_Bot: Double dispid 1610743808;
    property BarDim_D1_Up: Double dispid 1610743810;
    property BarDim_D2_Bot: Double dispid 1610743812;
    property BarDim_D2_Up: Double dispid 1610743814;
    property Cover_Bot: Double dispid 1610743816;
    property Cover_Up: Double dispid 1610743818;
    property CodeName: WideString readonly dispid 1610743820;
    property ReinforcingSteel: IRConcrSteelParams readonly dispid 1610743821;
    property Concrete: IRConcrConcreteParams readonly dispid 1610743822;
    function GetMainDirection(out _x: Double; out _y: Double; out _z: Double): IRConcrReinforceDirection; dispid 1610743823;
    procedure SetMainDirection(dir_type: IRConcrReinforceDirection; _x: Double; _y: Double; 
                               _z: Double); dispid 1610743824;
  end;

// *********************************************************************//
// Interface: IRConcr_ACI318_ConcreteParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C0E17140-4D2D-44DE-A1B7-1B9E378264E5}
// *********************************************************************//
  IRConcr_ACI318_ConcreteParams = interface(IRConcrConcreteParams)
    ['{C0E17140-4D2D-44DE-A1B7-1B9E378264E5}']
    function Get_AsInStructure: WordBool; safecall;
    procedure Set_AsInStructure(ret: WordBool); safecall;
    property AsInStructure: WordBool read Get_AsInStructure write Set_AsInStructure;
  end;

// *********************************************************************//
// DispIntf:  IRConcr_ACI318_ConcreteParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C0E17140-4D2D-44DE-A1B7-1B9E378264E5}
// *********************************************************************//
  IRConcr_ACI318_ConcreteParamsDisp = dispinterface
    ['{C0E17140-4D2D-44DE-A1B7-1B9E378264E5}']
    property AsInStructure: WordBool dispid 1610809344;
    property Fc: Double dispid 1610743808;
    property Fcj: Double dispid 1610743810;
    property Fc_calc: Double dispid 1610743812;
    property Ft: Double dispid 1610743814;
    property Ec: Double dispid 1610743816;
    property Grade: Smallint dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRConcr_BS8110_ReinforceData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4E96DFF9-A86F-42FF-99EE-5DE6074C4ADE}
// *********************************************************************//
  IRConcr_BS8110_ReinforceData = interface(IRConcrReinforceData)
    ['{4E96DFF9-A86F-42FF-99EE-5DE6074C4ADE}']
    function Get_SLS_Cracking: WordBool; safecall;
    procedure Set_SLS_Cracking(ret: WordBool); safecall;
    function Get_SLS_Deflection: WordBool; safecall;
    procedure Set_SLS_Deflection(ret: WordBool); safecall;
    function Get_SLS_DeflectionReinfCorection: WordBool; safecall;
    procedure Set_SLS_DeflectionReinfCorection(ret: WordBool); safecall;
    function Get_SLS_CrackingReinfCorection: WordBool; safecall;
    procedure Set_SLS_CrackingReinfCorection(ret: WordBool); safecall;
    function Get_SLS_Exposure: IRConcr_BS8110_ExposureRatings; safecall;
    procedure Set_SLS_Exposure(ret: IRConcr_BS8110_ExposureRatings); safecall;
    function Get_SLS_MaxDeflection: Double; safecall;
    procedure Set_SLS_MaxDeflection(ret: Double); safecall;
    function Get_SLS_MaxCracking: Double; safecall;
    procedure Set_SLS_MaxCracking(ret: Double); safecall;
    function Get_SLS_LoadRatio: Double; safecall;
    procedure Set_SLS_LoadRatio(ret: Double); safecall;
    function Get_SLS_ConcreteAge: IRConcr_BS8110_ConcreteAge; safecall;
    procedure Set_SLS_ConcreteAge(ret: IRConcr_BS8110_ConcreteAge); safecall;
    function Get_SLS_EnvHumidity: Smallint; safecall;
    procedure Set_SLS_EnvHumidity(ret: Smallint); safecall;
    function Get_SLS_CreepingCoef: WordBool; safecall;
    procedure Set_SLS_CreepingCoef(ret: WordBool); safecall;
    function Get_SLS_CreepingCoefValue: Double; safecall;
    procedure Set_SLS_CreepingCoefValue(ret: Double); safecall;
    function Get_PartialSafetyFactors: IRConcr_BS8110_PartialSafetyFactors; safecall;
    procedure Set_PartialSafetyFactors(ret: IRConcr_BS8110_PartialSafetyFactors); safecall;
    function Get_Main: IRConcrReinforceDataMain; safecall;
    property SLS_Cracking: WordBool read Get_SLS_Cracking write Set_SLS_Cracking;
    property SLS_Deflection: WordBool read Get_SLS_Deflection write Set_SLS_Deflection;
    property SLS_DeflectionReinfCorection: WordBool read Get_SLS_DeflectionReinfCorection write Set_SLS_DeflectionReinfCorection;
    property SLS_CrackingReinfCorection: WordBool read Get_SLS_CrackingReinfCorection write Set_SLS_CrackingReinfCorection;
    property SLS_Exposure: IRConcr_BS8110_ExposureRatings read Get_SLS_Exposure write Set_SLS_Exposure;
    property SLS_MaxDeflection: Double read Get_SLS_MaxDeflection write Set_SLS_MaxDeflection;
    property SLS_MaxCracking: Double read Get_SLS_MaxCracking write Set_SLS_MaxCracking;
    property SLS_LoadRatio: Double read Get_SLS_LoadRatio write Set_SLS_LoadRatio;
    property SLS_ConcreteAge: IRConcr_BS8110_ConcreteAge read Get_SLS_ConcreteAge write Set_SLS_ConcreteAge;
    property SLS_EnvHumidity: Smallint read Get_SLS_EnvHumidity write Set_SLS_EnvHumidity;
    property SLS_CreepingCoef: WordBool read Get_SLS_CreepingCoef write Set_SLS_CreepingCoef;
    property SLS_CreepingCoefValue: Double read Get_SLS_CreepingCoefValue write Set_SLS_CreepingCoefValue;
    property PartialSafetyFactors: IRConcr_BS8110_PartialSafetyFactors read Get_PartialSafetyFactors write Set_PartialSafetyFactors;
    property Main: IRConcrReinforceDataMain read Get_Main;
  end;

// *********************************************************************//
// DispIntf:  IRConcr_BS8110_ReinforceDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4E96DFF9-A86F-42FF-99EE-5DE6074C4ADE}
// *********************************************************************//
  IRConcr_BS8110_ReinforceDataDisp = dispinterface
    ['{4E96DFF9-A86F-42FF-99EE-5DE6074C4ADE}']
    property SLS_Cracking: WordBool dispid 1610809344;
    property SLS_Deflection: WordBool dispid 1610809346;
    property SLS_DeflectionReinfCorection: WordBool dispid 1610809348;
    property SLS_CrackingReinfCorection: WordBool dispid 1610809350;
    property SLS_Exposure: IRConcr_BS8110_ExposureRatings dispid 1610809352;
    property SLS_MaxDeflection: Double dispid 1610809354;
    property SLS_MaxCracking: Double dispid 1610809356;
    property SLS_LoadRatio: Double dispid 1610809358;
    property SLS_ConcreteAge: IRConcr_BS8110_ConcreteAge dispid 1610809360;
    property SLS_EnvHumidity: Smallint dispid 1610809362;
    property SLS_CreepingCoef: WordBool dispid 1610809364;
    property SLS_CreepingCoefValue: Double dispid 1610809366;
    property PartialSafetyFactors: IRConcr_BS8110_PartialSafetyFactors dispid 1610809368;
    property Main: IRConcrReinforceDataMain readonly dispid 1610809370;
    property BarDim_D1_Bot: Double dispid 1610743808;
    property BarDim_D1_Up: Double dispid 1610743810;
    property BarDim_D2_Bot: Double dispid 1610743812;
    property BarDim_D2_Up: Double dispid 1610743814;
    property Cover_Bot: Double dispid 1610743816;
    property Cover_Up: Double dispid 1610743818;
    property CodeName: WideString readonly dispid 1610743820;
    property ReinforcingSteel: IRConcrSteelParams readonly dispid 1610743821;
    property Concrete: IRConcrConcreteParams readonly dispid 1610743822;
    function GetMainDirection(out _x: Double; out _y: Double; out _z: Double): IRConcrReinforceDirection; dispid 1610743823;
    procedure SetMainDirection(dir_type: IRConcrReinforceDirection; _x: Double; _y: Double; 
                               _z: Double); dispid 1610743824;
  end;

// *********************************************************************//
// DispIntf:  _IRConcrSlabRequiredReinfEngineEvents
// Flags:     (4096) Dispatchable
// GUID:      {05EA059B-8552-4047-95FC-26E5A566D118}
// *********************************************************************//
  _IRConcrSlabRequiredReinfEngineEvents = dispinterface
    ['{05EA059B-8552-4047-95FC-26E5A566D118}']
    procedure CalcNotify(const strText: WideString; nType: Integer; out bHandled: WordBool; 
                         out nReturnValue: Integer); dispid 1;
    procedure ProgressNotify(const strText: WideString; nType: Integer; lParam: Integer; 
                             wParam: Integer; out nReturnValue: Integer); dispid 2;
    procedure CalcNotifyEx(nCaller: Integer; const strText: WideString; 
                           const strFullText: WideString; const strCaption: WideString; 
                           nType: Integer; nTypeEx: Integer; const strSelection: WideString; 
                           out bHandled: WordBool; out nReturnValue: Integer); dispid 3;
  end;

// *********************************************************************//
// Interface: IRConcr_SNIP_ConcreteParams
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B6080B90-B083-47C9-85EF-C53CD569F0AE}
// *********************************************************************//
  IRConcr_SNIP_ConcreteParams = interface(IRConcrConcreteParams)
    ['{B6080B90-B083-47C9-85EF-C53CD569F0AE}']
    function Get_type_: IRConcr_SNIP_ConcreteTypes; safecall;
    procedure Set_type_(ret: IRConcr_SNIP_ConcreteTypes); safecall;
    function Get_CuringMethod: IRConcr_SNIP_CuringMethods; safecall;
    procedure Set_CuringMethod(ret: IRConcr_SNIP_CuringMethods); safecall;
    function Get_ConcretingInLayers: WordBool; safecall;
    procedure Set_ConcretingInLayers(ret: WordBool); safecall;
    function Get_HighHumidity: WordBool; safecall;
    procedure Set_HighHumidity(ret: WordBool); safecall;
    property type_: IRConcr_SNIP_ConcreteTypes read Get_type_ write Set_type_;
    property CuringMethod: IRConcr_SNIP_CuringMethods read Get_CuringMethod write Set_CuringMethod;
    property ConcretingInLayers: WordBool read Get_ConcretingInLayers write Set_ConcretingInLayers;
    property HighHumidity: WordBool read Get_HighHumidity write Set_HighHumidity;
  end;

// *********************************************************************//
// DispIntf:  IRConcr_SNIP_ConcreteParamsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B6080B90-B083-47C9-85EF-C53CD569F0AE}
// *********************************************************************//
  IRConcr_SNIP_ConcreteParamsDisp = dispinterface
    ['{B6080B90-B083-47C9-85EF-C53CD569F0AE}']
    property type_: IRConcr_SNIP_ConcreteTypes dispid 1610809344;
    property CuringMethod: IRConcr_SNIP_CuringMethods dispid 1610809346;
    property ConcretingInLayers: WordBool dispid 1610809348;
    property HighHumidity: WordBool dispid 1610809350;
    property Fc: Double dispid 1610743808;
    property Fcj: Double dispid 1610743810;
    property Fc_calc: Double dispid 1610743812;
    property Ft: Double dispid 1610743814;
    property Ec: Double dispid 1610743816;
    property Grade: Smallint dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRConcr_SNIP_ReinforceData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2AEF7EDA-EFEB-446F-A997-2C8A598A9CD1}
// *********************************************************************//
  IRConcr_SNIP_ReinforceData = interface(IRConcrReinforceData2)
    ['{2AEF7EDA-EFEB-446F-A997-2C8A598A9CD1}']
    function Get_SLS_Cracking: WordBool; safecall;
    procedure Set_SLS_Cracking(ret: WordBool); safecall;
    function Get_SLS_CrackingReinfCorrection: WordBool; safecall;
    procedure Set_SLS_CrackingReinfCorrection(ret: WordBool); safecall;
    function Get_SLS_Exposure: IRConcr_SNIP_Exposure; safecall;
    procedure Set_SLS_Exposure(ret: IRConcr_SNIP_Exposure); safecall;
    property SLS_Cracking: WordBool read Get_SLS_Cracking write Set_SLS_Cracking;
    property SLS_CrackingReinfCorrection: WordBool read Get_SLS_CrackingReinfCorrection write Set_SLS_CrackingReinfCorrection;
    property SLS_Exposure: IRConcr_SNIP_Exposure read Get_SLS_Exposure write Set_SLS_Exposure;
  end;

// *********************************************************************//
// DispIntf:  IRConcr_SNIP_ReinforceDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2AEF7EDA-EFEB-446F-A997-2C8A598A9CD1}
// *********************************************************************//
  IRConcr_SNIP_ReinforceDataDisp = dispinterface
    ['{2AEF7EDA-EFEB-446F-A997-2C8A598A9CD1}']
    property SLS_Cracking: WordBool dispid 1610874880;
    property SLS_CrackingReinfCorrection: WordBool dispid 1610874882;
    property SLS_Exposure: IRConcr_SNIP_Exposure dispid 1610874884;
    procedure GhostMethod_IRConcrReinforceData2_0_1; dispid 1610678272;
    procedure GhostMethod_IRConcrReinforceData2_4_2; dispid 1610678273;
    procedure GhostMethod_IRConcrReinforceData2_8_3; dispid 1610678274;
    procedure GhostMethod_IRConcrReinforceData2_12_4; dispid 1610678275;
    procedure GhostMethod_IRConcrReinforceData2_16_5; dispid 1610678276;
    procedure GhostMethod_IRConcrReinforceData2_20_6; dispid 1610678277;
    procedure GhostMethod_IRConcrReinforceData2_24_7; dispid 1610678278;
    procedure GhostMethod_IRConcrReinforceData2_28_8; dispid 1610678279;
    procedure GhostMethod_IRConcrReinforceData2_32_9; dispid 1610678280;
    procedure GhostMethod_IRConcrReinforceData2_36_10; dispid 1610678281;
    procedure GhostMethod_IRConcrReinforceData2_40_11; dispid 1610678282;
    procedure GhostMethod_IRConcrReinforceData2_44_12; dispid 1610678283;
    procedure GhostMethod_IRConcrReinforceData2_48_13; dispid 1610678284;
    procedure GhostMethod_IRConcrReinforceData2_52_14; dispid 1610678285;
    procedure GhostMethod_IRConcrReinforceData2_56_15; dispid 1610678286;
    procedure GhostMethod_IRConcrReinforceData2_60_16; dispid 1610678287;
    procedure GhostMethod_IRConcrReinforceData2_64_17; dispid 1610678288;
    procedure GhostMethod_IRConcrReinforceData2_68_18; dispid 1610678289;
    procedure GhostMethod_IRConcrReinforceData2_72_19; dispid 1610678290;
    procedure GhostMethod_IRConcrReinforceData2_76_20; dispid 1610678291;
    procedure GhostMethod_IRConcrReinforceData2_80_21; dispid 1610678292;
    procedure GhostMethod_IRConcrReinforceData2_84_22; dispid 1610678293;
    procedure GhostMethod_IRConcrReinforceData2_88_23; dispid 1610678294;
    procedure GhostMethod_IRConcrReinforceData2_92_24; dispid 1610678295;
    property Main: IRConcrReinforceDataMain readonly dispid 1610809344;
    property BarDim_D1_Bot: Double dispid 1610743808;
    property BarDim_D1_Up: Double dispid 1610743810;
    property BarDim_D2_Bot: Double dispid 1610743812;
    property BarDim_D2_Up: Double dispid 1610743814;
    property Cover_Bot: Double dispid 1610743816;
    property Cover_Up: Double dispid 1610743818;
    property CodeName: WideString readonly dispid 1610743820;
    property ReinforcingSteel: IRConcrSteelParams readonly dispid 1610743821;
    property Concrete: IRConcrConcreteParams readonly dispid 1610743822;
    function GetMainDirection(out _x: Double; out _y: Double; out _z: Double): IRConcrReinforceDirection; dispid 1610743823;
    procedure SetMainDirection(dir_type: IRConcrReinforceDirection; _x: Double; _y: Double; 
                               _z: Double); dispid 1610743824;
  end;

// *********************************************************************//
// Interface: IRConcr_EC2_ReinforceData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C5522D66-6F69-447F-A728-E76EF72E106F}
// *********************************************************************//
  IRConcr_EC2_ReinforceData = interface(IRConcrReinforceData2)
    ['{C5522D66-6F69-447F-A728-E76EF72E106F}']
    function Get_SLS_Cracking: WordBool; safecall;
    procedure Set_SLS_Cracking(ret: WordBool); safecall;
    function Get_SLS_Deflection: WordBool; safecall;
    procedure Set_SLS_Deflection(ret: WordBool); safecall;
    function Get_SLS_CrackingReinfCorrect: WordBool; safecall;
    procedure Set_SLS_CrackingReinfCorrect(ret: WordBool); safecall;
    function Get_SLS_DeflectionReinfCorrect: WordBool; safecall;
    procedure Set_SLS_DeflectionReinfCorrect(ret: WordBool); safecall;
    function Get_SLS_Exposure: IRConcr_EC2_ExposureRatings; safecall;
    procedure Set_SLS_Exposure(ret: IRConcr_EC2_ExposureRatings); safecall;
    function Get_SLS_MaxCracking: Double; safecall;
    procedure Set_SLS_MaxCracking(ret: Double); safecall;
    function Get_SLS_MaxDeflection: Double; safecall;
    procedure Set_SLS_MaxDeflection(ret: Double); safecall;
    function Get_SLS_ConcreteAge: Smallint; safecall;
    procedure Set_SLS_ConcreteAge(ret: Smallint); safecall;
    function Get_SLS_EnvHumidityVal: Double; safecall;
    procedure Set_SLS_EnvHumidityVal(ret: Double); safecall;
    function Get_SLS_CreepingCoef: WordBool; safecall;
    procedure Set_SLS_CreepingCoef(ret: WordBool); safecall;
    function Get_SLS_CreepingCoefValue: Double; safecall;
    procedure Set_SLS_CreepingCoefValue(ret: Double); safecall;
    function Get_NAD: IRConcr_EC2_NAD; safecall;
    procedure Set_NAD(ret: IRConcr_EC2_NAD); safecall;
    property SLS_Cracking: WordBool read Get_SLS_Cracking write Set_SLS_Cracking;
    property SLS_Deflection: WordBool read Get_SLS_Deflection write Set_SLS_Deflection;
    property SLS_CrackingReinfCorrect: WordBool read Get_SLS_CrackingReinfCorrect write Set_SLS_CrackingReinfCorrect;
    property SLS_DeflectionReinfCorrect: WordBool read Get_SLS_DeflectionReinfCorrect write Set_SLS_DeflectionReinfCorrect;
    property SLS_Exposure: IRConcr_EC2_ExposureRatings read Get_SLS_Exposure write Set_SLS_Exposure;
    property SLS_MaxCracking: Double read Get_SLS_MaxCracking write Set_SLS_MaxCracking;
    property SLS_MaxDeflection: Double read Get_SLS_MaxDeflection write Set_SLS_MaxDeflection;
    property SLS_ConcreteAge: Smallint read Get_SLS_ConcreteAge write Set_SLS_ConcreteAge;
    property SLS_EnvHumidityVal: Double read Get_SLS_EnvHumidityVal write Set_SLS_EnvHumidityVal;
    property SLS_CreepingCoef: WordBool read Get_SLS_CreepingCoef write Set_SLS_CreepingCoef;
    property SLS_CreepingCoefValue: Double read Get_SLS_CreepingCoefValue write Set_SLS_CreepingCoefValue;
    property NAD: IRConcr_EC2_NAD read Get_NAD write Set_NAD;
  end;

// *********************************************************************//
// DispIntf:  IRConcr_EC2_ReinforceDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C5522D66-6F69-447F-A728-E76EF72E106F}
// *********************************************************************//
  IRConcr_EC2_ReinforceDataDisp = dispinterface
    ['{C5522D66-6F69-447F-A728-E76EF72E106F}']
    property SLS_Cracking: WordBool dispid 1610874880;
    property SLS_Deflection: WordBool dispid 1610874882;
    property SLS_CrackingReinfCorrect: WordBool dispid 1610874884;
    property SLS_DeflectionReinfCorrect: WordBool dispid 1610874886;
    property SLS_Exposure: IRConcr_EC2_ExposureRatings dispid 1610874888;
    property SLS_MaxCracking: Double dispid 1610874890;
    property SLS_MaxDeflection: Double dispid 1610874892;
    property SLS_ConcreteAge: Smallint dispid 1610874894;
    property SLS_EnvHumidityVal: Double dispid 1610874896;
    property SLS_CreepingCoef: WordBool dispid 1610874898;
    property SLS_CreepingCoefValue: Double dispid 1610874900;
    property NAD: IRConcr_EC2_NAD dispid 1610874902;
    procedure GhostMethod_IRConcrReinforceData2_0_1; dispid 1610678272;
    procedure GhostMethod_IRConcrReinforceData2_4_2; dispid 1610678273;
    procedure GhostMethod_IRConcrReinforceData2_8_3; dispid 1610678274;
    procedure GhostMethod_IRConcrReinforceData2_12_4; dispid 1610678275;
    procedure GhostMethod_IRConcrReinforceData2_16_5; dispid 1610678276;
    procedure GhostMethod_IRConcrReinforceData2_20_6; dispid 1610678277;
    procedure GhostMethod_IRConcrReinforceData2_24_7; dispid 1610678278;
    procedure GhostMethod_IRConcrReinforceData2_28_8; dispid 1610678279;
    procedure GhostMethod_IRConcrReinforceData2_32_9; dispid 1610678280;
    procedure GhostMethod_IRConcrReinforceData2_36_10; dispid 1610678281;
    procedure GhostMethod_IRConcrReinforceData2_40_11; dispid 1610678282;
    procedure GhostMethod_IRConcrReinforceData2_44_12; dispid 1610678283;
    procedure GhostMethod_IRConcrReinforceData2_48_13; dispid 1610678284;
    procedure GhostMethod_IRConcrReinforceData2_52_14; dispid 1610678285;
    procedure GhostMethod_IRConcrReinforceData2_56_15; dispid 1610678286;
    procedure GhostMethod_IRConcrReinforceData2_60_16; dispid 1610678287;
    procedure GhostMethod_IRConcrReinforceData2_64_17; dispid 1610678288;
    procedure GhostMethod_IRConcrReinforceData2_68_18; dispid 1610678289;
    procedure GhostMethod_IRConcrReinforceData2_72_19; dispid 1610678290;
    procedure GhostMethod_IRConcrReinforceData2_76_20; dispid 1610678291;
    procedure GhostMethod_IRConcrReinforceData2_80_21; dispid 1610678292;
    procedure GhostMethod_IRConcrReinforceData2_84_22; dispid 1610678293;
    procedure GhostMethod_IRConcrReinforceData2_88_23; dispid 1610678294;
    procedure GhostMethod_IRConcrReinforceData2_92_24; dispid 1610678295;
    property Main: IRConcrReinforceDataMain readonly dispid 1610809344;
    property BarDim_D1_Bot: Double dispid 1610743808;
    property BarDim_D1_Up: Double dispid 1610743810;
    property BarDim_D2_Bot: Double dispid 1610743812;
    property BarDim_D2_Up: Double dispid 1610743814;
    property Cover_Bot: Double dispid 1610743816;
    property Cover_Up: Double dispid 1610743818;
    property CodeName: WideString readonly dispid 1610743820;
    property ReinforcingSteel: IRConcrSteelParams readonly dispid 1610743821;
    property Concrete: IRConcrConcreteParams readonly dispid 1610743822;
    function GetMainDirection(out _x: Double; out _y: Double; out _z: Double): IRConcrReinforceDirection; dispid 1610743823;
    procedure SetMainDirection(dir_type: IRConcrReinforceDirection; _x: Double; _y: Double; 
                               _z: Double); dispid 1610743824;
  end;

// *********************************************************************//
// Interface: IRConcr_IS2000_ReinforceData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1386EB35-ABF0-410F-85C1-D84721771947}
// *********************************************************************//
  IRConcr_IS2000_ReinforceData = interface(IRConcrReinforceData)
    ['{1386EB35-ABF0-410F-85C1-D84721771947}']
    function Get_SLS_Cracking: WordBool; safecall;
    procedure Set_SLS_Cracking(ret: WordBool); safecall;
    function Get_SLS_Deflection: WordBool; safecall;
    procedure Set_SLS_Deflection(ret: WordBool); safecall;
    function Get_SLS_CrackingReinfCorrect: WordBool; safecall;
    procedure Set_SLS_CrackingReinfCorrect(ret: WordBool); safecall;
    function Get_SLS_DeflectionReinfCorrect: WordBool; safecall;
    procedure Set_SLS_DeflectionReinfCorrect(ret: WordBool); safecall;
    function Get_SLS_ConcreteAge: Smallint; safecall;
    procedure Set_SLS_ConcreteAge(ret: Smallint); safecall;
    function Get_SLS_MaxDeflection: Double; safecall;
    procedure Set_SLS_MaxDeflection(ret: Double); safecall;
    function Get_SLS_LoadRatio: Double; safecall;
    procedure Set_SLS_LoadRatio(ret: Double); safecall;
    function Get_SLS_CreepingCoeff: WordBool; safecall;
    procedure Set_SLS_CreepingCoeff(ret: WordBool); safecall;
    function Get_SLS_CreepingCoeffValue: Double; safecall;
    procedure Set_SLS_CreepingCoeffValue(ret: Double); safecall;
    function Get_SLS_ExposureTop: Smallint; safecall;
    procedure Set_SLS_ExposureTop(ret: Smallint); safecall;
    function Get_SLS_ExposureBot: Smallint; safecall;
    procedure Set_SLS_ExposureBot(ret: Smallint); safecall;
    function Get_SLS_MaxCrackingTop: Double; safecall;
    procedure Set_SLS_MaxCrackingTop(ret: Double); safecall;
    function Get_SLS_MaxCrackingTopEnabled: WordBool; safecall;
    procedure Set_SLS_MaxCrackingTopEnabled(ret: WordBool); safecall;
    function Get_SLS_MaxCrackingBot: Double; safecall;
    procedure Set_SLS_MaxCrackingBot(ret: Double); safecall;
    function Get_SLS_MaxCrackingBotEnabled: WordBool; safecall;
    procedure Set_SLS_MaxCrackingBotEnabled(ret: WordBool); safecall;
    function Get_Main: IRConcrReinforceDataMain; safecall;
    property SLS_Cracking: WordBool read Get_SLS_Cracking write Set_SLS_Cracking;
    property SLS_Deflection: WordBool read Get_SLS_Deflection write Set_SLS_Deflection;
    property SLS_CrackingReinfCorrect: WordBool read Get_SLS_CrackingReinfCorrect write Set_SLS_CrackingReinfCorrect;
    property SLS_DeflectionReinfCorrect: WordBool read Get_SLS_DeflectionReinfCorrect write Set_SLS_DeflectionReinfCorrect;
    property SLS_ConcreteAge: Smallint read Get_SLS_ConcreteAge write Set_SLS_ConcreteAge;
    property SLS_MaxDeflection: Double read Get_SLS_MaxDeflection write Set_SLS_MaxDeflection;
    property SLS_LoadRatio: Double read Get_SLS_LoadRatio write Set_SLS_LoadRatio;
    property SLS_CreepingCoeff: WordBool read Get_SLS_CreepingCoeff write Set_SLS_CreepingCoeff;
    property SLS_CreepingCoeffValue: Double read Get_SLS_CreepingCoeffValue write Set_SLS_CreepingCoeffValue;
    property SLS_ExposureTop: Smallint read Get_SLS_ExposureTop write Set_SLS_ExposureTop;
    property SLS_ExposureBot: Smallint read Get_SLS_ExposureBot write Set_SLS_ExposureBot;
    property SLS_MaxCrackingTop: Double read Get_SLS_MaxCrackingTop write Set_SLS_MaxCrackingTop;
    property SLS_MaxCrackingTopEnabled: WordBool read Get_SLS_MaxCrackingTopEnabled write Set_SLS_MaxCrackingTopEnabled;
    property SLS_MaxCrackingBot: Double read Get_SLS_MaxCrackingBot write Set_SLS_MaxCrackingBot;
    property SLS_MaxCrackingBotEnabled: WordBool read Get_SLS_MaxCrackingBotEnabled write Set_SLS_MaxCrackingBotEnabled;
    property Main: IRConcrReinforceDataMain read Get_Main;
  end;

// *********************************************************************//
// DispIntf:  IRConcr_IS2000_ReinforceDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1386EB35-ABF0-410F-85C1-D84721771947}
// *********************************************************************//
  IRConcr_IS2000_ReinforceDataDisp = dispinterface
    ['{1386EB35-ABF0-410F-85C1-D84721771947}']
    property SLS_Cracking: WordBool dispid 1610809344;
    property SLS_Deflection: WordBool dispid 1610809346;
    property SLS_CrackingReinfCorrect: WordBool dispid 1610809348;
    property SLS_DeflectionReinfCorrect: WordBool dispid 1610809350;
    property SLS_ConcreteAge: Smallint dispid 1610809352;
    property SLS_MaxDeflection: Double dispid 1610809354;
    property SLS_LoadRatio: Double dispid 1610809356;
    property SLS_CreepingCoeff: WordBool dispid 1610809358;
    property SLS_CreepingCoeffValue: Double dispid 1610809360;
    property SLS_ExposureTop: Smallint dispid 1610809362;
    property SLS_ExposureBot: Smallint dispid 1610809364;
    property SLS_MaxCrackingTop: Double dispid 1610809366;
    property SLS_MaxCrackingTopEnabled: WordBool dispid 1610809368;
    property SLS_MaxCrackingBot: Double dispid 1610809370;
    property SLS_MaxCrackingBotEnabled: WordBool dispid 1610809372;
    property Main: IRConcrReinforceDataMain readonly dispid 1610809374;
    property BarDim_D1_Bot: Double dispid 1610743808;
    property BarDim_D1_Up: Double dispid 1610743810;
    property BarDim_D2_Bot: Double dispid 1610743812;
    property BarDim_D2_Up: Double dispid 1610743814;
    property Cover_Bot: Double dispid 1610743816;
    property Cover_Up: Double dispid 1610743818;
    property CodeName: WideString readonly dispid 1610743820;
    property ReinforcingSteel: IRConcrSteelParams readonly dispid 1610743821;
    property Concrete: IRConcrConcreteParams readonly dispid 1610743822;
    function GetMainDirection(out _x: Double; out _y: Double; out _z: Double): IRConcrReinforceDirection; dispid 1610743823;
    procedure SetMainDirection(dir_type: IRConcrReinforceDirection; _x: Double; _y: Double; 
                               _z: Double); dispid 1610743824;
  end;

// *********************************************************************//
// Interface: IRConcrColumnBucklingModel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {00FD1B34-442B-4CE4-A927-C33E160C033A}
// *********************************************************************//
  IRConcrColumnBucklingModel = interface(IDispatch)
    ['{00FD1B34-442B-4CE4-A927-C33E160C033A}']
    function Get_IsSwayY: WordBool; safecall;
    procedure Set_IsSwayY(ret: WordBool); safecall;
    function Get_IsSwayZ: WordBool; safecall;
    procedure Set_IsSwayZ(ret: WordBool); safecall;
    function Get_IsDirectionYOff: WordBool; safecall;
    procedure Set_IsDirectionYOff(ret: WordBool); safecall;
    function Get_IsDirectionZOff: WordBool; safecall;
    procedure Set_IsDirectionZOff(ret: WordBool); safecall;
    function Get_KY: Double; safecall;
    procedure Set_KY(ret: Double); safecall;
    function Get_Ly: Double; safecall;
    procedure Set_Ly(ret: Double); safecall;
    function Get_KZ: Double; safecall;
    procedure Set_KZ(ret: Double); safecall;
    function Get_Lz: Double; safecall;
    procedure Set_Lz(ret: Double); safecall;
    function Get_TotalStructureHeight: Double; safecall;
    procedure Set_TotalStructureHeight(ret: Double); safecall;
    function Get_NumberOfStories: Integer; safecall;
    procedure Set_NumberOfStories(ret: Integer); safecall;
    function Get_IsTotalStructureHeight: WordBool; safecall;
    procedure Set_IsTotalStructureHeight(ret: WordBool); safecall;
    property IsSwayY: WordBool read Get_IsSwayY write Set_IsSwayY;
    property IsSwayZ: WordBool read Get_IsSwayZ write Set_IsSwayZ;
    property IsDirectionYOff: WordBool read Get_IsDirectionYOff write Set_IsDirectionYOff;
    property IsDirectionZOff: WordBool read Get_IsDirectionZOff write Set_IsDirectionZOff;
    property KY: Double read Get_KY write Set_KY;
    property Ly: Double read Get_Ly write Set_Ly;
    property KZ: Double read Get_KZ write Set_KZ;
    property Lz: Double read Get_Lz write Set_Lz;
    property TotalStructureHeight: Double read Get_TotalStructureHeight write Set_TotalStructureHeight;
    property NumberOfStories: Integer read Get_NumberOfStories write Set_NumberOfStories;
    property IsTotalStructureHeight: WordBool read Get_IsTotalStructureHeight write Set_IsTotalStructureHeight;
  end;

// *********************************************************************//
// DispIntf:  IRConcrColumnBucklingModelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {00FD1B34-442B-4CE4-A927-C33E160C033A}
// *********************************************************************//
  IRConcrColumnBucklingModelDisp = dispinterface
    ['{00FD1B34-442B-4CE4-A927-C33E160C033A}']
    property IsSwayY: WordBool dispid 1610743808;
    property IsSwayZ: WordBool dispid 1610743810;
    property IsDirectionYOff: WordBool dispid 1610743812;
    property IsDirectionZOff: WordBool dispid 1610743814;
    property KY: Double dispid 1610743816;
    property Ly: Double dispid 1610743818;
    property KZ: Double dispid 1610743820;
    property Lz: Double dispid 1610743822;
    property TotalStructureHeight: Double dispid 1610743824;
    property NumberOfStories: Integer dispid 1610743826;
    property IsTotalStructureHeight: WordBool dispid 1610743828;
  end;

// *********************************************************************//
// Interface: IRConcrColumnLoads
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CAB19F3A-ABFA-43C5-8593-578D34FE0AB3}
// *********************************************************************//
  IRConcrColumnLoads = interface(IDispatch)
    ['{CAB19F3A-ABFA-43C5-8593-578D34FE0AB3}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_item(index: Integer): IRConcrColumnLoad; safecall;
    function Get_Count: Integer; safecall;
    function Add: IRConcrColumnLoad; safecall;
    procedure RemoveAll; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property item[index: Integer]: IRConcrColumnLoad read Get_item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRConcrColumnLoadsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CAB19F3A-ABFA-43C5-8593-578D34FE0AB3}
// *********************************************************************//
  IRConcrColumnLoadsDisp = dispinterface
    ['{CAB19F3A-ABFA-43C5-8593-578D34FE0AB3}']
    property _NewEnum: IUnknown readonly dispid -4;
    property item[index: Integer]: IRConcrColumnLoad readonly dispid 0; default;
    property Count: Integer readonly dispid 1610743810;
    function Add: IRConcrColumnLoad; dispid 1610743811;
    procedure RemoveAll; dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRConcrColumnLoad
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E356FA4B-B5D4-49D7-9F9D-736F84338E46}
// *********************************************************************//
  IRConcrColumnLoad = interface(IDispatch)
    ['{E356FA4B-B5D4-49D7-9F9D-736F84338E46}']
    function Get_CaseName: WideString; safecall;
    procedure Set_CaseName(const ret: WideString); safecall;
    function Get_CaseType: IRConcrColumnLoadCaseType; safecall;
    procedure Set_CaseType(ret: IRConcrColumnLoadCaseType); safecall;
    function Get_N: Double; safecall;
    procedure Set_N(ret: Double); safecall;
    function Get_MyA: Double; safecall;
    procedure Set_MyA(ret: Double); safecall;
    function Get_MyB: Double; safecall;
    procedure Set_MyB(ret: Double); safecall;
    function Get_MyC: Double; safecall;
    procedure Set_MyC(ret: Double); safecall;
    function Get_FY: Double; safecall;
    procedure Set_FY(ret: Double); safecall;
    function Get_MzA: Double; safecall;
    procedure Set_MzA(ret: Double); safecall;
    function Get_MzB: Double; safecall;
    procedure Set_MzB(ret: Double); safecall;
    function Get_MzC: Double; safecall;
    procedure Set_MzC(ret: Double); safecall;
    function Get_FZ: Double; safecall;
    procedure Set_FZ(ret: Double); safecall;
    function Get_Gamma: Double; safecall;
    procedure Set_Gamma(ret: Double); safecall;
    function Get_MnsY: Double; safecall;
    procedure Set_MnsY(ret: Double); safecall;
    function Get_MnsZ: Double; safecall;
    procedure Set_MnsZ(ret: Double); safecall;
    function Get_NdN: Double; safecall;
    procedure Set_NdN(ret: Double); safecall;
    property CaseName: WideString read Get_CaseName write Set_CaseName;
    property CaseType: IRConcrColumnLoadCaseType read Get_CaseType write Set_CaseType;
    property N: Double read Get_N write Set_N;
    property MyA: Double read Get_MyA write Set_MyA;
    property MyB: Double read Get_MyB write Set_MyB;
    property MyC: Double read Get_MyC write Set_MyC;
    property FY: Double read Get_FY write Set_FY;
    property MzA: Double read Get_MzA write Set_MzA;
    property MzB: Double read Get_MzB write Set_MzB;
    property MzC: Double read Get_MzC write Set_MzC;
    property FZ: Double read Get_FZ write Set_FZ;
    property Gamma: Double read Get_Gamma write Set_Gamma;
    property MnsY: Double read Get_MnsY write Set_MnsY;
    property MnsZ: Double read Get_MnsZ write Set_MnsZ;
    property NdN: Double read Get_NdN write Set_NdN;
  end;

// *********************************************************************//
// DispIntf:  IRConcrColumnLoadDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E356FA4B-B5D4-49D7-9F9D-736F84338E46}
// *********************************************************************//
  IRConcrColumnLoadDisp = dispinterface
    ['{E356FA4B-B5D4-49D7-9F9D-736F84338E46}']
    property CaseName: WideString dispid 1610743808;
    property CaseType: IRConcrColumnLoadCaseType dispid 1610743810;
    property N: Double dispid 1610743812;
    property MyA: Double dispid 1610743814;
    property MyB: Double dispid 1610743816;
    property MyC: Double dispid 1610743818;
    property FY: Double dispid 1610743820;
    property MzA: Double dispid 1610743822;
    property MzB: Double dispid 1610743824;
    property MzC: Double dispid 1610743826;
    property FZ: Double dispid 1610743828;
    property Gamma: Double dispid 1610743830;
    property MnsY: Double dispid 1610743832;
    property MnsZ: Double dispid 1610743834;
    property NdN: Double dispid 1610743836;
  end;

// *********************************************************************//
// Interface: IRConcrCodeReport
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9644D4F2-4D45-4EDB-A42A-2051FE50AB76}
// *********************************************************************//
  IRConcrCodeReport = interface(IDispatch)
    ['{9644D4F2-4D45-4EDB-A42A-2051FE50AB76}']
    procedure AddMessage(const _message: WideString); safecall;
    procedure AddWarning(const _warning: WideString); safecall;
    procedure AddError(const _text: WideString); safecall;
  end;

// *********************************************************************//
// DispIntf:  IRConcrCodeReportDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9644D4F2-4D45-4EDB-A42A-2051FE50AB76}
// *********************************************************************//
  IRConcrCodeReportDisp = dispinterface
    ['{9644D4F2-4D45-4EDB-A42A-2051FE50AB76}']
    procedure AddMessage(const _message: WideString); dispid 1610743808;
    procedure AddWarning(const _warning: WideString); dispid 1610743809;
    procedure AddError(const _text: WideString); dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRobotApplication
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F787078F-CDE5-11D1-8FF1-00A02447BAAE}
// *********************************************************************//
  IRobotApplication = interface(IDispatch)
    ['{F787078F-CDE5-11D1-8FF1-00A02447BAAE}']
    function Get_Visible: Integer; safecall;
    procedure Set_Visible(__MIDL__IRobotApplication0000: Integer); safecall;
    function Get_Interactive: Integer; safecall;
    procedure Set_Interactive(ret: Integer); safecall;
    function Get_Project: IRobotProject; safecall;
    function Get_Version: Double; safecall;
    function Get_Preferences: IRobotPreferences; safecall;
    function Get_Window: IRobotWindow; safecall;
    procedure Quit(quit_option: IRobotQuitOption); safecall;
    function Get_CmpntFactory: IRobotComponentFactory; safecall;
    function Get_Kernel: IRobotKernel; safecall;
    function Get_ProgramVersion: WideString; safecall;
    function Get_UserControl: WordBool; safecall;
    procedure Set_UserControl(ret: WordBool); safecall;
    function Get_Is360: WordBool; safecall;
    function LicenseCheckEntitlement(_entitlement: IRobotLicenseEntitlement): IRobotLicenseEntitlementStatus; safecall;
    property Visible: Integer read Get_Visible write Set_Visible;
    property Interactive: Integer read Get_Interactive write Set_Interactive;
    property Project: IRobotProject read Get_Project;
    property Version: Double read Get_Version;
    property Preferences: IRobotPreferences read Get_Preferences;
    property Window: IRobotWindow read Get_Window;
    property CmpntFactory: IRobotComponentFactory read Get_CmpntFactory;
    property Kernel: IRobotKernel read Get_Kernel;
    property ProgramVersion: WideString read Get_ProgramVersion;
    property UserControl: WordBool read Get_UserControl write Set_UserControl;
    property Is360: WordBool read Get_Is360;
  end;

// *********************************************************************//
// DispIntf:  IRobotApplicationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F787078F-CDE5-11D1-8FF1-00A02447BAAE}
// *********************************************************************//
  IRobotApplicationDisp = dispinterface
    ['{F787078F-CDE5-11D1-8FF1-00A02447BAAE}']
    property Visible: Integer dispid 1;
    property Interactive: Integer dispid 1610743810;
    property Project: IRobotProject readonly dispid 2;
    property Version: Double readonly dispid 1610743813;
    property Preferences: IRobotPreferences readonly dispid 1610743814;
    property Window: IRobotWindow readonly dispid 1610743815;
    procedure Quit(quit_option: IRobotQuitOption); dispid 1610743816;
    property CmpntFactory: IRobotComponentFactory readonly dispid 1610743817;
    property Kernel: IRobotKernel readonly dispid 1610743818;
    property ProgramVersion: WideString readonly dispid 1610743819;
    property UserControl: WordBool dispid 1610743820;
    property Is360: WordBool readonly dispid 1610743822;
    function LicenseCheckEntitlement(_entitlement: IRobotLicenseEntitlement): IRobotLicenseEntitlementStatus; dispid 1610743823;
  end;

// *********************************************************************//
// Interface: IRobotAddIn
// Flags:     (4096) Dispatchable
// GUID:      {7BEC0EB0-E2B9-11D2-9892-0080C86BE4DF}
// *********************************************************************//
  IRobotAddIn = interface(IDispatch)
    ['{7BEC0EB0-E2B9-11D2-9892-0080C86BE4DF}']
    function GetExpectedVersion(out ret: Double): HResult; stdcall;
    function Connect(const robot_app: IRobotApplication; add_in_id: Integer; first_time: WordBool; 
                     out ret: WordBool): HResult; stdcall;
    function InstallCommands(const cmd_list: IRobotCmdList; out ret: Integer): HResult; stdcall;
    function Disconnect(out ret: WordBool): HResult; stdcall;
    function DoCommand(cmd_id: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IRobotProtectionInfo
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {D2CE81B2-944E-11D4-B866-0050DA76755E}
// *********************************************************************//
  IRobotProtectionInfo = interface(IDispatch)
    ['{D2CE81B2-944E-11D4-B866-0050DA76755E}']
    function IsExtensionEnabled(_ext_num: Integer): WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRobotProtectionInfoDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {D2CE81B2-944E-11D4-B866-0050DA76755E}
// *********************************************************************//
  IRobotProtectionInfoDisp = dispinterface
    ['{D2CE81B2-944E-11D4-B866-0050DA76755E}']
    function IsExtensionEnabled(_ext_num: Integer): WordBool; dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRobotSTRFileAnalyser
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7BA1C5F2-1DF5-11D5-B8E4-FFFFFF000000}
// *********************************************************************//
  IRobotSTRFileAnalyser = interface(IDispatch)
    ['{7BA1C5F2-1DF5-11D5-B8E4-FFFFFF000000}']
    function Get_InsertParams: IRobotFileInsertParams; safecall;
    function Get_Params: IRobotSTRParams; safecall;
    function ReadParams(const _file_path: WideString): WordBool; safecall;
    function InsertToProject(const _file_path: WideString; _ignore_warnings: WordBool; 
                             _only_geometry: WordBool): WordBool; safecall;
    property InsertParams: IRobotFileInsertParams read Get_InsertParams;
    property Params: IRobotSTRParams read Get_Params;
  end;

// *********************************************************************//
// DispIntf:  IRobotSTRFileAnalyserDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7BA1C5F2-1DF5-11D5-B8E4-FFFFFF000000}
// *********************************************************************//
  IRobotSTRFileAnalyserDisp = dispinterface
    ['{7BA1C5F2-1DF5-11D5-B8E4-FFFFFF000000}']
    property InsertParams: IRobotFileInsertParams readonly dispid 1610743808;
    property Params: IRobotSTRParams readonly dispid 1610743809;
    function ReadParams(const _file_path: WideString): WordBool; dispid 1610743810;
    function InsertToProject(const _file_path: WideString; _ignore_warnings: WordBool; 
                             _only_geometry: WordBool): WordBool; dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRConcrBarDiameters
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4FE840FB-0442-41DB-9A23-E40FD2065C36}
// *********************************************************************//
  IRConcrBarDiameters = interface(IDispatch)
    ['{4FE840FB-0442-41DB-9A23-E40FD2065C36}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_item(index: Integer): Double; safecall;
    function Get_Count: Integer; safecall;
    procedure Add(_newDiam: Double); safecall;
    procedure RemoveAll; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property item[index: Integer]: Double read Get_item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRConcrBarDiametersDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4FE840FB-0442-41DB-9A23-E40FD2065C36}
// *********************************************************************//
  IRConcrBarDiametersDisp = dispinterface
    ['{4FE840FB-0442-41DB-9A23-E40FD2065C36}']
    property _NewEnum: IUnknown readonly dispid -4;
    property item[index: Integer]: Double readonly dispid 0; default;
    property Count: Integer readonly dispid 1610743810;
    procedure Add(_newDiam: Double); dispid 1610743811;
    procedure RemoveAll; dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRConcrSteelStrengths
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {527EE047-39BC-4AEB-9920-BCC6651C34DB}
// *********************************************************************//
  IRConcrSteelStrengths = interface(IDispatch)
    ['{527EE047-39BC-4AEB-9920-BCC6651C34DB}']
  end;

// *********************************************************************//
// DispIntf:  IRConcrSteelStrengthsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {527EE047-39BC-4AEB-9920-BCC6651C34DB}
// *********************************************************************//
  IRConcrSteelStrengthsDisp = dispinterface
    ['{527EE047-39BC-4AEB-9920-BCC6651C34DB}']
  end;

// *********************************************************************//
// Interface: IRConcrConcrete
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E3C964B5-812F-4C09-9364-6A2360D9E0DB}
// *********************************************************************//
  IRConcrConcrete = interface(IDispatch)
    ['{E3C964B5-812F-4C09-9364-6A2360D9E0DB}']
    function Get_CharacteristicStrength: Double; safecall;
    procedure Set_CharacteristicStrength(ret: Double); safecall;
    property CharacteristicStrength: Double read Get_CharacteristicStrength write Set_CharacteristicStrength;
  end;

// *********************************************************************//
// DispIntf:  IRConcrConcreteDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E3C964B5-812F-4C09-9364-6A2360D9E0DB}
// *********************************************************************//
  IRConcrConcreteDisp = dispinterface
    ['{E3C964B5-812F-4C09-9364-6A2360D9E0DB}']
    property CharacteristicStrength: Double dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRConcrSteelNames
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D70B7781-D98A-4B9E-8219-CB8EBA274ECE}
// *********************************************************************//
  IRConcrSteelNames = interface(IDispatch)
    ['{D70B7781-D98A-4B9E-8219-CB8EBA274ECE}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_item(index: Integer): WideString; safecall;
    function Get_Count: Integer; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property item[index: Integer]: WideString read Get_item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRConcrSteelNamesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D70B7781-D98A-4B9E-8219-CB8EBA274ECE}
// *********************************************************************//
  IRConcrSteelNamesDisp = dispinterface
    ['{D70B7781-D98A-4B9E-8219-CB8EBA274ECE}']
    property _NewEnum: IUnknown readonly dispid -4;
    property item[index: Integer]: WideString readonly dispid 0; default;
    property Count: Integer readonly dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRConcrSteel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {87695661-932C-4B09-9FCF-8F32C4333127}
// *********************************************************************//
  IRConcrSteel = interface(IDispatch)
    ['{87695661-932C-4B09-9FCF-8F32C4333127}']
    function Get_SelectedName(_type: IRConcrSteelType): WideString; safecall;
    procedure Set_SelectedName(_type: IRConcrSteelType; const ret: WideString); safecall;
    function Get_SurfaceType(_type: IRConcrSteelType): IRConcrSteelSurfaceType; safecall;
    procedure Set_SurfaceType(_type: IRConcrSteelType; ret: IRConcrSteelSurfaceType); safecall;
    function Get_AvailableStrengths(surface: IRConcrSteelSurfaceType): IRConcrSteelStrengths; safecall;
    function Get_AvailableNames(surface: IRConcrSteelSurfaceType): IRConcrSteelNames; safecall;
    function Get_BarDiameters(_type: IRConcrSteelType): IRConcrBarDiameters; safecall;
    function Get_CharacteristicStrength(_type: IRConcrSteelType): Double; safecall;
    procedure Set_CharacteristicStrength(_type: IRConcrSteelType; ret: Double); safecall;
    function Get_BarsDatabasePath: WideString; safecall;
    property SelectedName[_type: IRConcrSteelType]: WideString read Get_SelectedName write Set_SelectedName;
    property SurfaceType[_type: IRConcrSteelType]: IRConcrSteelSurfaceType read Get_SurfaceType write Set_SurfaceType;
    property AvailableStrengths[surface: IRConcrSteelSurfaceType]: IRConcrSteelStrengths read Get_AvailableStrengths;
    property AvailableNames[surface: IRConcrSteelSurfaceType]: IRConcrSteelNames read Get_AvailableNames;
    property BarDiameters[_type: IRConcrSteelType]: IRConcrBarDiameters read Get_BarDiameters;
    property CharacteristicStrength[_type: IRConcrSteelType]: Double read Get_CharacteristicStrength write Set_CharacteristicStrength;
    property BarsDatabasePath: WideString read Get_BarsDatabasePath;
  end;

// *********************************************************************//
// DispIntf:  IRConcrSteelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {87695661-932C-4B09-9FCF-8F32C4333127}
// *********************************************************************//
  IRConcrSteelDisp = dispinterface
    ['{87695661-932C-4B09-9FCF-8F32C4333127}']
    property SelectedName[_type: IRConcrSteelType]: WideString dispid 1610743808;
    property SurfaceType[_type: IRConcrSteelType]: IRConcrSteelSurfaceType dispid 1610743810;
    property AvailableStrengths[surface: IRConcrSteelSurfaceType]: IRConcrSteelStrengths readonly dispid 1610743812;
    property AvailableNames[surface: IRConcrSteelSurfaceType]: IRConcrSteelNames readonly dispid 1610743813;
    property BarDiameters[_type: IRConcrSteelType]: IRConcrBarDiameters readonly dispid 1610743814;
    property CharacteristicStrength[_type: IRConcrSteelType]: Double dispid 1610743815;
    property BarsDatabasePath: WideString readonly dispid 1610743817;
  end;

// *********************************************************************//
// Interface: IRConcrReinforcingBar
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {309536A1-19D7-4CA4-84D1-70AC8E46AC8B}
// *********************************************************************//
  IRConcrReinforcingBar = interface(IDispatch)
    ['{309536A1-19D7-4CA4-84D1-70AC8E46AC8B}']
    function Get_SteelType: IRConcrSteelType; safecall;
    procedure Set_SteelType(ret: IRConcrSteelType); safecall;
    function Get_Weight: Double; safecall;
    function Get_Position: IRobotGeoPoint3D; safecall;
    function Get_DirectionX: IRobotGeoPoint3D; safecall;
    function Get_DirectionY: IRobotGeoPoint3D; safecall;
    function Get_DirectionZ: IRobotGeoPoint3D; safecall;
    function Get_Span: Smallint; safecall;
    procedure Set_Span(ret: Smallint); safecall;
    function Get_type_: IRConcrBarType; safecall;
    function Get_SubType: IRConcrBarSubtype; safecall;
    function Get_GroupNumber: SYSINT; safecall;
    procedure Set_GroupNumber(ret: SYSINT); safecall;
    function Get_ROBarEditorId: Integer; safecall;
    function SetDirections(_Xx: Double; _Xy: Double; _Xz: Double; _Yx: Double; _Yy: Double; 
                           _Yz: Double): WordBool; safecall;
    function GetROBarEditor(_readOnly: WordBool): IDispatch; safecall;
    procedure SetROBarEditor(const _editor: IDispatch); safecall;
    function SetBarShape: WordBool; safecall;
    function CreateCopy(_offX: Double; _offY: Double; _offZ: Double; _number: Integer): WordBool; safecall;
    function Get_IsParametric: WordBool; safecall;
    procedure Set_IsParametric(ret: WordBool); safecall;
    property SteelType: IRConcrSteelType read Get_SteelType write Set_SteelType;
    property Weight: Double read Get_Weight;
    property Position: IRobotGeoPoint3D read Get_Position;
    property DirectionX: IRobotGeoPoint3D read Get_DirectionX;
    property DirectionY: IRobotGeoPoint3D read Get_DirectionY;
    property DirectionZ: IRobotGeoPoint3D read Get_DirectionZ;
    property Span: Smallint read Get_Span write Set_Span;
    property type_: IRConcrBarType read Get_type_;
    property SubType: IRConcrBarSubtype read Get_SubType;
    property GroupNumber: SYSINT read Get_GroupNumber write Set_GroupNumber;
    property ROBarEditorId: Integer read Get_ROBarEditorId;
    property IsParametric: WordBool read Get_IsParametric write Set_IsParametric;
  end;

// *********************************************************************//
// DispIntf:  IRConcrReinforcingBarDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {309536A1-19D7-4CA4-84D1-70AC8E46AC8B}
// *********************************************************************//
  IRConcrReinforcingBarDisp = dispinterface
    ['{309536A1-19D7-4CA4-84D1-70AC8E46AC8B}']
    property SteelType: IRConcrSteelType dispid 1610743808;
    property Weight: Double readonly dispid 1610743810;
    property Position: IRobotGeoPoint3D readonly dispid 1610743811;
    property DirectionX: IRobotGeoPoint3D readonly dispid 1610743812;
    property DirectionY: IRobotGeoPoint3D readonly dispid 1610743813;
    property DirectionZ: IRobotGeoPoint3D readonly dispid 1610743814;
    property Span: Smallint dispid 1610743815;
    property type_: IRConcrBarType readonly dispid 1610743817;
    property SubType: IRConcrBarSubtype readonly dispid 1610743818;
    property GroupNumber: SYSINT dispid 1610743819;
    property ROBarEditorId: Integer readonly dispid 1610743821;
    function SetDirections(_Xx: Double; _Xy: Double; _Xz: Double; _Yx: Double; _Yy: Double; 
                           _Yz: Double): WordBool; dispid 1610743822;
    function GetROBarEditor(_readOnly: WordBool): IDispatch; dispid 1610743823;
    procedure SetROBarEditor(const _editor: IDispatch); dispid 1610743824;
    function SetBarShape: WordBool; dispid 1610743825;
    function CreateCopy(_offX: Double; _offY: Double; _offZ: Double; _number: Integer): WordBool; dispid 1610743826;
    property IsParametric: WordBool dispid 1610743827;
  end;

// *********************************************************************//
// Interface: IRConcrReinforcingBars
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A35362BF-6D9D-43E1-A471-062D863EE78C}
// *********************************************************************//
  IRConcrReinforcingBars = interface(IDispatch)
    ['{A35362BF-6D9D-43E1-A471-062D863EE78C}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_item(index: Integer): IRConcrReinforcingBar; safecall;
    function Get_Count: Integer; safecall;
    function Add(const _shapeCode: WideString; _type: IRConcrBarType; _subType: IRConcrBarSubtype; 
                 _diameter: Double; _bendDiam: Double): IRConcrReinforcingBar; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property item[index: Integer]: IRConcrReinforcingBar read Get_item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRConcrReinforcingBarsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A35362BF-6D9D-43E1-A471-062D863EE78C}
// *********************************************************************//
  IRConcrReinforcingBarsDisp = dispinterface
    ['{A35362BF-6D9D-43E1-A471-062D863EE78C}']
    property _NewEnum: IUnknown readonly dispid -4;
    property item[index: Integer]: IRConcrReinforcingBar readonly dispid 0; default;
    property Count: Integer readonly dispid 1610743810;
    function Add(const _shapeCode: WideString; _type: IRConcrBarType; _subType: IRConcrBarSubtype; 
                 _diameter: Double; _bendDiam: Double): IRConcrReinforcingBar; dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRConcrReinforcement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E46B8023-B608-4FCC-8D6B-8875F459240B}
// *********************************************************************//
  IRConcrReinforcement = interface(IDispatch)
    ['{E46B8023-B608-4FCC-8D6B-8875F459240B}']
    function Get_Comment: WideString; safecall;
    procedure Set_Comment(const ret: WideString); safecall;
    function Get_GroupingMethod: Integer; safecall;
    procedure Set_GroupingMethod(ret: Integer); safecall;
    function Get_GroupGlobally: WordBool; safecall;
    procedure Set_GroupGlobally(ret: WordBool); safecall;
    function Get_Bars: IRConcrReinforcingBars; safecall;
    procedure RemoveAll; safecall;
    function LockRefresh(_lock: WordBool): WordBool; safecall;
    function Freeze(_freeze: WordBool): WordBool; safecall;
    procedure RemoveParametric; safecall;
    function Get_IsFrozen: WordBool; safecall;
    property Comment: WideString read Get_Comment write Set_Comment;
    property GroupingMethod: Integer read Get_GroupingMethod write Set_GroupingMethod;
    property GroupGlobally: WordBool read Get_GroupGlobally write Set_GroupGlobally;
    property Bars: IRConcrReinforcingBars read Get_Bars;
    property IsFrozen: WordBool read Get_IsFrozen;
  end;

// *********************************************************************//
// DispIntf:  IRConcrReinforcementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E46B8023-B608-4FCC-8D6B-8875F459240B}
// *********************************************************************//
  IRConcrReinforcementDisp = dispinterface
    ['{E46B8023-B608-4FCC-8D6B-8875F459240B}']
    property Comment: WideString dispid 1610743808;
    property GroupingMethod: Integer dispid 1610743810;
    property GroupGlobally: WordBool dispid 1610743812;
    property Bars: IRConcrReinforcingBars readonly dispid 1610743814;
    procedure RemoveAll; dispid 1610743815;
    function LockRefresh(_lock: WordBool): WordBool; dispid 1610743816;
    function Freeze(_freeze: WordBool): WordBool; dispid 1610743817;
    procedure RemoveParametric; dispid 1610743818;
    property IsFrozen: WordBool readonly dispid 1610743819;
  end;

// *********************************************************************//
// Interface: IRConcrCodeBeam
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D6CB5641-9A96-416B-983E-8934F0FD64E6}
// *********************************************************************//
  IRConcrCodeBeam = interface(IDispatch)
    ['{D6CB5641-9A96-416B-983E-8934F0FD64E6}']
    function Verification(const _beam: IRConcrBeam; const _report: IRConcrCodeReport): WordBool; safecall;
    function IsCommandEnabled(_command: IRConcrCodeBeamCommand): WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRConcrCodeBeamDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D6CB5641-9A96-416B-983E-8934F0FD64E6}
// *********************************************************************//
  IRConcrCodeBeamDisp = dispinterface
    ['{D6CB5641-9A96-416B-983E-8934F0FD64E6}']
    function Verification(const _beam: IRConcrBeam; const _report: IRConcrCodeReport): WordBool; dispid 1610743808;
    function IsCommandEnabled(_command: IRConcrCodeBeamCommand): WordBool; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRConcrBeam
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4B424584-90CA-4F0B-B6E7-49D9886CEE55}
// *********************************************************************//
  IRConcrBeam = interface(IDispatch)
    ['{4B424584-90CA-4F0B-B6E7-49D9886CEE55}']
    function Get_Reinforcement: IRConcrReinforcement; safecall;
    function Get_Steel: IRConcrSteel; safecall;
    function Get_Concrete: IRConcrConcrete; safecall;
    function Get_Geometry: IRConcrBeamGeometry; safecall;
    function Get_ImportOptions: IRConcrBeamImportOptions; safecall;
    function Get_StructureUserNoCount: Smallint; safecall;
    procedure Set_StructureUserNoCount(ret: Smallint); safecall;
    function Get_StructureUserNo(nIdx: Smallint): Integer; safecall;
    procedure Set_StructureUserNo(nIdx: Smallint; ret: Integer); safecall;
    function Get_CalculationOptions: IRConcrBeamCalcOptions; safecall;
    function Get_PatternOptions: IRConcrBeamPatternOptions; safecall;
    function Get_Name: WideString; safecall;
    function Get_PointLoad(nNo: Smallint): IRConcrBeamPointLoad; safecall;
    function Get_LinearLoad(nNo: Smallint): IRConcrBeamLinearLoad; safecall;
    function Get_LinearLoadsCount: Smallint; safecall;
    procedure Set_LinearLoadsCount(ret: Smallint); safecall;
    function Get_PointLoadsCount: Smallint; safecall;
    procedure Set_PointLoadsCount(ret: Smallint); safecall;
    function Get_StoryOptions: IRConcrBeamStoryOptions; safecall;
    function Get_IsActive: WordBool; safecall;
    function Get_UniqueId: Integer; safecall;
    function CreateCalculationNoteRtf(const _fileName: WideString): WordBool; safecall;
    procedure Save; safecall;
    procedure Activate; safecall;
    function Verify(_showErrors: WordBool): Integer; safecall;
    function Calculate(_createReinforcement: WordBool): WordBool; safecall;
    function GenerateSpliceBars: WordBool; safecall;
    function VerifySpan(_showErrors: WordBool; _spanNo: Smallint): Integer; safecall;
    function CreateFromBars(const _selText: WideString): WordBool; safecall;
    function Get_IsSelected: WordBool; safecall;
    procedure Set_IsSelected(ret: WordBool); safecall;
    function Get_NumberOfElements: Integer; safecall;
    procedure Set_NumberOfElements(ret: Integer); safecall;
    property Reinforcement: IRConcrReinforcement read Get_Reinforcement;
    property Steel: IRConcrSteel read Get_Steel;
    property Concrete: IRConcrConcrete read Get_Concrete;
    property Geometry: IRConcrBeamGeometry read Get_Geometry;
    property ImportOptions: IRConcrBeamImportOptions read Get_ImportOptions;
    property StructureUserNoCount: Smallint read Get_StructureUserNoCount write Set_StructureUserNoCount;
    property StructureUserNo[nIdx: Smallint]: Integer read Get_StructureUserNo write Set_StructureUserNo;
    property CalculationOptions: IRConcrBeamCalcOptions read Get_CalculationOptions;
    property PatternOptions: IRConcrBeamPatternOptions read Get_PatternOptions;
    property Name: WideString read Get_Name;
    property PointLoad[nNo: Smallint]: IRConcrBeamPointLoad read Get_PointLoad;
    property LinearLoad[nNo: Smallint]: IRConcrBeamLinearLoad read Get_LinearLoad;
    property LinearLoadsCount: Smallint read Get_LinearLoadsCount write Set_LinearLoadsCount;
    property PointLoadsCount: Smallint read Get_PointLoadsCount write Set_PointLoadsCount;
    property StoryOptions: IRConcrBeamStoryOptions read Get_StoryOptions;
    property IsActive: WordBool read Get_IsActive;
    property UniqueId: Integer read Get_UniqueId;
    property IsSelected: WordBool read Get_IsSelected write Set_IsSelected;
    property NumberOfElements: Integer read Get_NumberOfElements write Set_NumberOfElements;
  end;

// *********************************************************************//
// DispIntf:  IRConcrBeamDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4B424584-90CA-4F0B-B6E7-49D9886CEE55}
// *********************************************************************//
  IRConcrBeamDisp = dispinterface
    ['{4B424584-90CA-4F0B-B6E7-49D9886CEE55}']
    property Reinforcement: IRConcrReinforcement readonly dispid 1610743808;
    property Steel: IRConcrSteel readonly dispid 1610743809;
    property Concrete: IRConcrConcrete readonly dispid 1610743810;
    property Geometry: IRConcrBeamGeometry readonly dispid 1610743811;
    property ImportOptions: IRConcrBeamImportOptions readonly dispid 1610743812;
    property StructureUserNoCount: Smallint dispid 1610743813;
    property StructureUserNo[nIdx: Smallint]: Integer dispid 1610743815;
    property CalculationOptions: IRConcrBeamCalcOptions readonly dispid 1610743817;
    property PatternOptions: IRConcrBeamPatternOptions readonly dispid 1610743818;
    property Name: WideString readonly dispid 1610743819;
    property PointLoad[nNo: Smallint]: IRConcrBeamPointLoad readonly dispid 1610743820;
    property LinearLoad[nNo: Smallint]: IRConcrBeamLinearLoad readonly dispid 1610743821;
    property LinearLoadsCount: Smallint dispid 1610743822;
    property PointLoadsCount: Smallint dispid 1610743824;
    property StoryOptions: IRConcrBeamStoryOptions readonly dispid 1610743826;
    property IsActive: WordBool readonly dispid 1610743827;
    property UniqueId: Integer readonly dispid 1610743828;
    function CreateCalculationNoteRtf(const _fileName: WideString): WordBool; dispid 1610743829;
    procedure Save; dispid 1610743830;
    procedure Activate; dispid 1610743831;
    function Verify(_showErrors: WordBool): Integer; dispid 1610743832;
    function Calculate(_createReinforcement: WordBool): WordBool; dispid 1610743833;
    function GenerateSpliceBars: WordBool; dispid 1610743834;
    function VerifySpan(_showErrors: WordBool; _spanNo: Smallint): Integer; dispid 1610743835;
    function CreateFromBars(const _selText: WideString): WordBool; dispid 1610743836;
    property IsSelected: WordBool dispid 1610743837;
    property NumberOfElements: Integer dispid 1610743839;
  end;

// *********************************************************************//
// Interface: IRConcrBeamGeometry
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {12F97AEA-51CA-4EA0-849B-9E2D396041CC}
// *********************************************************************//
  IRConcrBeamGeometry = interface(IDispatch)
    ['{12F97AEA-51CA-4EA0-849B-9E2D396041CC}']
    function Get_ConcreteVolume: Double; safecall;
    function Get_ShutteringArea: Double; safecall;
    function Get_SpanNumber: Smallint; safecall;
    procedure Set_SpanNumber(ret: Smallint); safecall;
    function Get_Span(nSpanNo: Smallint): IRConcrBeamSpan; safecall;
    function Get_LeftCantilever: WordBool; safecall;
    procedure Set_LeftCantilever(ret: WordBool); safecall;
    function Get_RightCantilever: WordBool; safecall;
    procedure Set_RightCantilever(ret: WordBool); safecall;
    function Get_AutoNameSpans: WordBool; safecall;
    procedure Set_AutoNameSpans(ret: WordBool); safecall;
    function Get_AutoNameSupports: WordBool; safecall;
    procedure Set_AutoNameSupports(ret: WordBool); safecall;
    procedure UpdateInternalGeometryData; safecall;
    property ConcreteVolume: Double read Get_ConcreteVolume;
    property ShutteringArea: Double read Get_ShutteringArea;
    property SpanNumber: Smallint read Get_SpanNumber write Set_SpanNumber;
    property Span[nSpanNo: Smallint]: IRConcrBeamSpan read Get_Span;
    property LeftCantilever: WordBool read Get_LeftCantilever write Set_LeftCantilever;
    property RightCantilever: WordBool read Get_RightCantilever write Set_RightCantilever;
    property AutoNameSpans: WordBool read Get_AutoNameSpans write Set_AutoNameSpans;
    property AutoNameSupports: WordBool read Get_AutoNameSupports write Set_AutoNameSupports;
  end;

// *********************************************************************//
// DispIntf:  IRConcrBeamGeometryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {12F97AEA-51CA-4EA0-849B-9E2D396041CC}
// *********************************************************************//
  IRConcrBeamGeometryDisp = dispinterface
    ['{12F97AEA-51CA-4EA0-849B-9E2D396041CC}']
    property ConcreteVolume: Double readonly dispid 1610743808;
    property ShutteringArea: Double readonly dispid 1610743809;
    property SpanNumber: Smallint dispid 1610743810;
    property Span[nSpanNo: Smallint]: IRConcrBeamSpan readonly dispid 1610743812;
    property LeftCantilever: WordBool dispid 1610743813;
    property RightCantilever: WordBool dispid 1610743815;
    property AutoNameSpans: WordBool dispid 1610743817;
    property AutoNameSupports: WordBool dispid 1610743819;
    procedure UpdateInternalGeometryData; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IRConcrBeamSpan
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A00B6B2A-EB53-42DA-A938-61FE216C2D84}
// *********************************************************************//
  IRConcrBeamSpan = interface(IDispatch)
    ['{A00B6B2A-EB53-42DA-A938-61FE216C2D84}']
    function Get_SegmentNumber: Smallint; safecall;
    procedure Set_SegmentNumber(ret: Smallint); safecall;
    function Get_segment(nSegmentNumber: Smallint): IRConcrBeamSegment; safecall;
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_LeftSupport: IRConcrBeamSupport; safecall;
    function Get_RightSupport: IRConcrBeamSupport; safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_CalculationLength: Double; safecall;
    function Get_HasOpenings: WordBool; safecall;
    property SegmentNumber: Smallint read Get_SegmentNumber write Set_SegmentNumber;
    property segment[nSegmentNumber: Smallint]: IRConcrBeamSegment read Get_segment;
    property Length: Double read Get_Length write Set_Length;
    property LeftSupport: IRConcrBeamSupport read Get_LeftSupport;
    property RightSupport: IRConcrBeamSupport read Get_RightSupport;
    property Name: WideString read Get_Name write Set_Name;
    property CalculationLength: Double read Get_CalculationLength;
    property HasOpenings: WordBool read Get_HasOpenings;
  end;

// *********************************************************************//
// DispIntf:  IRConcrBeamSpanDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A00B6B2A-EB53-42DA-A938-61FE216C2D84}
// *********************************************************************//
  IRConcrBeamSpanDisp = dispinterface
    ['{A00B6B2A-EB53-42DA-A938-61FE216C2D84}']
    property SegmentNumber: Smallint dispid 1610743808;
    property segment[nSegmentNumber: Smallint]: IRConcrBeamSegment readonly dispid 1610743810;
    property Length: Double dispid 1610743811;
    property LeftSupport: IRConcrBeamSupport readonly dispid 1610743813;
    property RightSupport: IRConcrBeamSupport readonly dispid 1610743814;
    property Name: WideString dispid 1610743815;
    property CalculationLength: Double readonly dispid 1610743817;
    property HasOpenings: WordBool readonly dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRConcrBeamSegment
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {293CF336-DD11-4F08-ACF7-5A2C9CEFBC1C}
// *********************************************************************//
  IRConcrBeamSegment = interface(IDispatch)
    ['{293CF336-DD11-4F08-ACF7-5A2C9CEFBC1C}']
    function Get_SectionType: IRConcrBeamSectionType; safecall;
    procedure Set_SectionType(ret: IRConcrBeamSectionType); safecall;
    function Get_Dim(nType: IRConcrBeamSectionDimType): Double; safecall;
    procedure Set_Dim(nType: IRConcrBeamSectionDimType; ret: Double); safecall;
    property SectionType: IRConcrBeamSectionType read Get_SectionType write Set_SectionType;
    property Dim[nType: IRConcrBeamSectionDimType]: Double read Get_Dim write Set_Dim;
  end;

// *********************************************************************//
// DispIntf:  IRConcrBeamSegmentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {293CF336-DD11-4F08-ACF7-5A2C9CEFBC1C}
// *********************************************************************//
  IRConcrBeamSegmentDisp = dispinterface
    ['{293CF336-DD11-4F08-ACF7-5A2C9CEFBC1C}']
    property SectionType: IRConcrBeamSectionType dispid 1610743808;
    property Dim[nType: IRConcrBeamSectionDimType]: Double dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRConcrBeamSupport
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8B57AD3F-2FED-4AF2-B7A4-1E0BA1E5A182}
// *********************************************************************//
  IRConcrBeamSupport = interface(IDispatch)
    ['{8B57AD3F-2FED-4AF2-B7A4-1E0BA1E5A182}']
    function Get_Width: Double; safecall;
    procedure Set_Width(ret: Double); safecall;
    function Get_type_: IRConcrBeamSupportType; safecall;
    procedure Set_type_(ret: IRConcrBeamSupportType); safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_MaterialType: IRConcrBeamSupportMaterialType; safecall;
    procedure Set_MaterialType(ret: IRConcrBeamSupportMaterialType); safecall;
    property Width: Double read Get_Width write Set_Width;
    property type_: IRConcrBeamSupportType read Get_type_ write Set_type_;
    property Name: WideString read Get_Name write Set_Name;
    property MaterialType: IRConcrBeamSupportMaterialType read Get_MaterialType write Set_MaterialType;
  end;

// *********************************************************************//
// DispIntf:  IRConcrBeamSupportDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8B57AD3F-2FED-4AF2-B7A4-1E0BA1E5A182}
// *********************************************************************//
  IRConcrBeamSupportDisp = dispinterface
    ['{8B57AD3F-2FED-4AF2-B7A4-1E0BA1E5A182}']
    property Width: Double dispid 1610743808;
    property type_: IRConcrBeamSupportType dispid 1610743810;
    property Name: WideString dispid 1610743812;
    property MaterialType: IRConcrBeamSupportMaterialType dispid 1610743814;
  end;

// *********************************************************************//
// Interface: IRConcrBeamImportOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0A343F47-F446-4F4F-9DF0-53B3884A68F9}
// *********************************************************************//
  IRConcrBeamImportOptions = interface(IDispatch)
    ['{0A343F47-F446-4F4F-9DF0-53B3884A68F9}']
    function Get_ImportCombinations: WordBool; safecall;
    procedure Set_ImportCombinations(ret: WordBool); safecall;
    function Get_ShowDialog: WordBool; safecall;
    procedure Set_ShowDialog(ret: WordBool); safecall;
    function Get_LiveLongCoeff: Double; safecall;
    procedure Set_LiveLongCoeff(ret: Double); safecall;
    function Get_RunCalcAuto: WordBool; safecall;
    procedure Set_RunCalcAuto(ret: WordBool); safecall;
    function Get_GroupByLevel: WordBool; safecall;
    procedure Set_GroupByLevel(ret: WordBool); safecall;
    function Get_GroupByGeometry: WordBool; safecall;
    procedure Set_GroupByGeometry(ret: WordBool); safecall;
    property ImportCombinations: WordBool read Get_ImportCombinations write Set_ImportCombinations;
    property ShowDialog: WordBool read Get_ShowDialog write Set_ShowDialog;
    property LiveLongCoeff: Double read Get_LiveLongCoeff write Set_LiveLongCoeff;
    property RunCalcAuto: WordBool read Get_RunCalcAuto write Set_RunCalcAuto;
    property GroupByLevel: WordBool read Get_GroupByLevel write Set_GroupByLevel;
    property GroupByGeometry: WordBool read Get_GroupByGeometry write Set_GroupByGeometry;
  end;

// *********************************************************************//
// DispIntf:  IRConcrBeamImportOptionsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0A343F47-F446-4F4F-9DF0-53B3884A68F9}
// *********************************************************************//
  IRConcrBeamImportOptionsDisp = dispinterface
    ['{0A343F47-F446-4F4F-9DF0-53B3884A68F9}']
    property ImportCombinations: WordBool dispid 1610743808;
    property ShowDialog: WordBool dispid 1610743810;
    property LiveLongCoeff: Double dispid 1610743812;
    property RunCalcAuto: WordBool dispid 1610743814;
    property GroupByLevel: WordBool dispid 1610743816;
    property GroupByGeometry: WordBool dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRConcrBeamCalcOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C63F44E2-2A12-4227-8B60-EAEF0E276B5E}
// *********************************************************************//
  IRConcrBeamCalcOptions = interface(IDispatch)
    ['{C63F44E2-2A12-4227-8B60-EAEF0E276B5E}']
    function Get_CoverBottom: Double; safecall;
    procedure Set_CoverBottom(ret: Double); safecall;
    function Get_CoverBottomFixed: WordBool; safecall;
    procedure Set_CoverBottomFixed(ret: WordBool); safecall;
    function Get_CoverTop: Double; safecall;
    procedure Set_CoverTop(ret: Double); safecall;
    function Get_CoverTopFixed: WordBool; safecall;
    procedure Set_CoverTopFixed(ret: WordBool); safecall;
    function Get_CoverSide: Double; safecall;
    procedure Set_CoverSide(ret: Double); safecall;
    function Get_CoverSideFixed: WordBool; safecall;
    procedure Set_CoverSideFixed(ret: WordBool); safecall;
    function Get_CalcSpanLengthInAxis: WordBool; safecall;
    procedure Set_CalcSpanLengthInAxis(ret: WordBool); safecall;
    property CoverBottom: Double read Get_CoverBottom write Set_CoverBottom;
    property CoverBottomFixed: WordBool read Get_CoverBottomFixed write Set_CoverBottomFixed;
    property CoverTop: Double read Get_CoverTop write Set_CoverTop;
    property CoverTopFixed: WordBool read Get_CoverTopFixed write Set_CoverTopFixed;
    property CoverSide: Double read Get_CoverSide write Set_CoverSide;
    property CoverSideFixed: WordBool read Get_CoverSideFixed write Set_CoverSideFixed;
    property CalcSpanLengthInAxis: WordBool read Get_CalcSpanLengthInAxis write Set_CalcSpanLengthInAxis;
  end;

// *********************************************************************//
// DispIntf:  IRConcrBeamCalcOptionsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C63F44E2-2A12-4227-8B60-EAEF0E276B5E}
// *********************************************************************//
  IRConcrBeamCalcOptionsDisp = dispinterface
    ['{C63F44E2-2A12-4227-8B60-EAEF0E276B5E}']
    property CoverBottom: Double dispid 1610743808;
    property CoverBottomFixed: WordBool dispid 1610743810;
    property CoverTop: Double dispid 1610743812;
    property CoverTopFixed: WordBool dispid 1610743814;
    property CoverSide: Double dispid 1610743816;
    property CoverSideFixed: WordBool dispid 1610743818;
    property CalcSpanLengthInAxis: WordBool dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRConcrBeamPatternOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {23F11DBA-2977-4945-9C14-3E6779D66B49}
// *********************************************************************//
  IRConcrBeamPatternOptions = interface(IDispatch)
    ['{23F11DBA-2977-4945-9C14-3E6779D66B49}']
    function Get_SpanBySpan: WordBool; safecall;
    procedure Set_SpanBySpan(ret: WordBool); safecall;
    property SpanBySpan: WordBool read Get_SpanBySpan write Set_SpanBySpan;
  end;

// *********************************************************************//
// DispIntf:  IRConcrBeamPatternOptionsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {23F11DBA-2977-4945-9C14-3E6779D66B49}
// *********************************************************************//
  IRConcrBeamPatternOptionsDisp = dispinterface
    ['{23F11DBA-2977-4945-9C14-3E6779D66B49}']
    property SpanBySpan: WordBool dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRConcrBeamPointLoad
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {75EF6EC6-077E-4BF7-A0CE-F9F3E7E59A36}
// *********************************************************************//
  IRConcrBeamPointLoad = interface(IDispatch)
    ['{75EF6EC6-077E-4BF7-A0CE-F9F3E7E59A36}']
    function Get_Nature: IRConcrBeamLoadNatureType; safecall;
    procedure Set_Nature(ret: IRConcrBeamLoadNatureType); safecall;
    function Get_type_: IRConcrBeamPointLoadType; safecall;
    procedure Set_type_(ret: IRConcrBeamPointLoadType); safecall;
    function Get_Case_: Smallint; safecall;
    procedure Set_Case_(ret: Smallint); safecall;
    function Get_Spans: IRConcrBeamSpanNumbers; safecall;
    function Get_RelativeCoordinates: WordBool; safecall;
    procedure Set_RelativeCoordinates(ret: WordBool); safecall;
    function Get_X1: Double; safecall;
    procedure Set_X1(ret: Double); safecall;
    function Get_Value: Double; safecall;
    procedure Set_Value(ret: Double); safecall;
    property Nature: IRConcrBeamLoadNatureType read Get_Nature write Set_Nature;
    property type_: IRConcrBeamPointLoadType read Get_type_ write Set_type_;
    property Case_: Smallint read Get_Case_ write Set_Case_;
    property Spans: IRConcrBeamSpanNumbers read Get_Spans;
    property RelativeCoordinates: WordBool read Get_RelativeCoordinates write Set_RelativeCoordinates;
    property X1: Double read Get_X1 write Set_X1;
    property Value: Double read Get_Value write Set_Value;
  end;

// *********************************************************************//
// DispIntf:  IRConcrBeamPointLoadDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {75EF6EC6-077E-4BF7-A0CE-F9F3E7E59A36}
// *********************************************************************//
  IRConcrBeamPointLoadDisp = dispinterface
    ['{75EF6EC6-077E-4BF7-A0CE-F9F3E7E59A36}']
    property Nature: IRConcrBeamLoadNatureType dispid 1610743808;
    property type_: IRConcrBeamPointLoadType dispid 1610743810;
    property Case_: Smallint dispid 1610743812;
    property Spans: IRConcrBeamSpanNumbers readonly dispid 1610743814;
    property RelativeCoordinates: WordBool dispid 1610743815;
    property X1: Double dispid 1610743817;
    property Value: Double dispid 1610743819;
  end;

// *********************************************************************//
// Interface: IRConcrBeamSpanNumbers
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C46AC902-D6B0-47E8-84C4-53F50A85055D}
// *********************************************************************//
  IRConcrBeamSpanNumbers = interface(IDispatch)
    ['{C46AC902-D6B0-47E8-84C4-53F50A85055D}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_item(index: Integer): Smallint; safecall;
    function Get_Count: Integer; safecall;
    procedure Add(_newVal: Smallint); safecall;
    procedure RemoveAll; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property item[index: Integer]: Smallint read Get_item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRConcrBeamSpanNumbersDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C46AC902-D6B0-47E8-84C4-53F50A85055D}
// *********************************************************************//
  IRConcrBeamSpanNumbersDisp = dispinterface
    ['{C46AC902-D6B0-47E8-84C4-53F50A85055D}']
    property _NewEnum: IUnknown readonly dispid -4;
    property item[index: Integer]: Smallint readonly dispid 0; default;
    property Count: Integer readonly dispid 1610743810;
    procedure Add(_newVal: Smallint); dispid 1610743811;
    procedure RemoveAll; dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRConcrBeamLinearLoad
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4C56313B-32C8-476B-BE01-24E0F03348FA}
// *********************************************************************//
  IRConcrBeamLinearLoad = interface(IDispatch)
    ['{4C56313B-32C8-476B-BE01-24E0F03348FA}']
    function Get_Nature: IRConcrBeamLoadNatureType; safecall;
    procedure Set_Nature(ret: IRConcrBeamLoadNatureType); safecall;
    function Get_type_: IRConcrBeamLinearLoadType; safecall;
    procedure Set_type_(ret: IRConcrBeamLinearLoadType); safecall;
    function Get_Case_: Smallint; safecall;
    procedure Set_Case_(ret: Smallint); safecall;
    function Get_Spans: IRConcrBeamSpanNumbers; safecall;
    function Get_RelativeCoordinates: WordBool; safecall;
    procedure Set_RelativeCoordinates(ret: WordBool); safecall;
    function Get_X1: Double; safecall;
    procedure Set_X1(ret: Double); safecall;
    function Get_X2: Double; safecall;
    procedure Set_X2(ret: Double); safecall;
    function Get_X3: Double; safecall;
    procedure Set_X3(ret: Double); safecall;
    function Get_X4: Double; safecall;
    procedure Set_X4(ret: Double); safecall;
    function Get_Value1: Double; safecall;
    procedure Set_Value1(ret: Double); safecall;
    function Get_Value2: Double; safecall;
    procedure Set_Value2(ret: Double); safecall;
    function Get_Value3: Double; safecall;
    procedure Set_Value3(ret: Double); safecall;
    property Nature: IRConcrBeamLoadNatureType read Get_Nature write Set_Nature;
    property type_: IRConcrBeamLinearLoadType read Get_type_ write Set_type_;
    property Case_: Smallint read Get_Case_ write Set_Case_;
    property Spans: IRConcrBeamSpanNumbers read Get_Spans;
    property RelativeCoordinates: WordBool read Get_RelativeCoordinates write Set_RelativeCoordinates;
    property X1: Double read Get_X1 write Set_X1;
    property X2: Double read Get_X2 write Set_X2;
    property X3: Double read Get_X3 write Set_X3;
    property X4: Double read Get_X4 write Set_X4;
    property Value1: Double read Get_Value1 write Set_Value1;
    property Value2: Double read Get_Value2 write Set_Value2;
    property Value3: Double read Get_Value3 write Set_Value3;
  end;

// *********************************************************************//
// DispIntf:  IRConcrBeamLinearLoadDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4C56313B-32C8-476B-BE01-24E0F03348FA}
// *********************************************************************//
  IRConcrBeamLinearLoadDisp = dispinterface
    ['{4C56313B-32C8-476B-BE01-24E0F03348FA}']
    property Nature: IRConcrBeamLoadNatureType dispid 1610743808;
    property type_: IRConcrBeamLinearLoadType dispid 1610743810;
    property Case_: Smallint dispid 1610743812;
    property Spans: IRConcrBeamSpanNumbers readonly dispid 1610743814;
    property RelativeCoordinates: WordBool dispid 1610743815;
    property X1: Double dispid 1610743817;
    property X2: Double dispid 1610743819;
    property X3: Double dispid 1610743821;
    property X4: Double dispid 1610743823;
    property Value1: Double dispid 1610743825;
    property Value2: Double dispid 1610743827;
    property Value3: Double dispid 1610743829;
  end;

// *********************************************************************//
// Interface: IRConcrBeamStoryOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E41547ED-F318-4EB5-9D19-475328CAE0EA}
// *********************************************************************//
  IRConcrBeamStoryOptions = interface(IDispatch)
    ['{E41547ED-F318-4EB5-9D19-475328CAE0EA}']
    function Get_Cracking: IRConcrBeamCrackingType; safecall;
    procedure Set_Cracking(ret: IRConcrBeamCrackingType); safecall;
    property Cracking: IRConcrBeamCrackingType read Get_Cracking write Set_Cracking;
  end;

// *********************************************************************//
// DispIntf:  IRConcrBeamStoryOptionsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E41547ED-F318-4EB5-9D19-475328CAE0EA}
// *********************************************************************//
  IRConcrBeamStoryOptionsDisp = dispinterface
    ['{E41547ED-F318-4EB5-9D19-475328CAE0EA}']
    property Cracking: IRConcrBeamCrackingType dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRConcrCodeColumn
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8BC8E445-2D93-4715-BCD7-2BDE8EF9AC12}
// *********************************************************************//
  IRConcrCodeColumn = interface(IDispatch)
    ['{8BC8E445-2D93-4715-BCD7-2BDE8EF9AC12}']
    function Verification(const _column: IRConcrColumn; const _report: IRConcrCodeReport): WordBool; safecall;
    function IsCommandEnabled(_command: IRConcrCodeColumnCommand): WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRConcrCodeColumnDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8BC8E445-2D93-4715-BCD7-2BDE8EF9AC12}
// *********************************************************************//
  IRConcrCodeColumnDisp = dispinterface
    ['{8BC8E445-2D93-4715-BCD7-2BDE8EF9AC12}']
    function Verification(const _column: IRConcrColumn; const _report: IRConcrCodeReport): WordBool; dispid 1610743808;
    function IsCommandEnabled(_command: IRConcrCodeColumnCommand): WordBool; dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRConcrColumn
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {66260BA3-10A5-4848-A6AB-472700DD6205}
// *********************************************************************//
  IRConcrColumn = interface(IDispatch)
    ['{66260BA3-10A5-4848-A6AB-472700DD6205}']
    function Get_Reinforcement: IRConcrReinforcement; safecall;
    function Get_Steel: IRConcrSteel; safecall;
    function Get_Concrete: IRConcrConcrete; safecall;
    function Get_Geometry: IRConcrColumnGeometry; safecall;
    function Get_ImportOptions: IRConcrColumnImportOptions; safecall;
    function Get_StructureUserNoCount: Smallint; safecall;
    procedure Set_StructureUserNoCount(ret: Smallint); safecall;
    function Get_StructureUserNo(nIdx: Smallint): Integer; safecall;
    procedure Set_StructureUserNo(nIdx: Smallint; ret: Integer); safecall;
    function Get_CalculationOptions: IRConcrColumnCalcOptions; safecall;
    function Get_PatternOptions: IRConcrColumnPatternOptions; safecall;
    function Get_Name: WideString; safecall;
    function Get_IsActive: WordBool; safecall;
    function Get_UniqueId: Integer; safecall;
    function CreateCalculationNoteRtf(const _fileName: WideString): WordBool; safecall;
    procedure Activate; safecall;
    function Verify(_showErrors: WordBool): Integer; safecall;
    function Calculate(_createReinforcement: WordBool): WordBool; safecall;
    procedure Save; safecall;
    function CreateFromBars(const _selText: WideString): WordBool; safecall;
    function Get_NumberOfElements: Integer; safecall;
    procedure Set_NumberOfElements(ret: Integer); safecall;
    function Get_BucklingModel: IRConcrColumnBucklingModel; safecall;
    function Get_Loads: IRConcrColumnLoads; safecall;
    function Get_IsSelected: WordBool; safecall;
    procedure Set_IsSelected(ret: WordBool); safecall;
    function Get_HasUpperColumn: WordBool; safecall;
    function Get_UpperColumn: IRConcrColumn; safecall;
    procedure Set_UpperColumn(const ret: IRConcrColumn); safecall;
    function Get_UpperColumnDY: Double; safecall;
    procedure Set_UpperColumnDY(ret: Double); safecall;
    function Get_UpperColumnDZ: Double; safecall;
    procedure Set_UpperColumnDZ(ret: Double); safecall;
    property Reinforcement: IRConcrReinforcement read Get_Reinforcement;
    property Steel: IRConcrSteel read Get_Steel;
    property Concrete: IRConcrConcrete read Get_Concrete;
    property Geometry: IRConcrColumnGeometry read Get_Geometry;
    property ImportOptions: IRConcrColumnImportOptions read Get_ImportOptions;
    property StructureUserNoCount: Smallint read Get_StructureUserNoCount write Set_StructureUserNoCount;
    property StructureUserNo[nIdx: Smallint]: Integer read Get_StructureUserNo write Set_StructureUserNo;
    property CalculationOptions: IRConcrColumnCalcOptions read Get_CalculationOptions;
    property PatternOptions: IRConcrColumnPatternOptions read Get_PatternOptions;
    property Name: WideString read Get_Name;
    property IsActive: WordBool read Get_IsActive;
    property UniqueId: Integer read Get_UniqueId;
    property NumberOfElements: Integer read Get_NumberOfElements write Set_NumberOfElements;
    property BucklingModel: IRConcrColumnBucklingModel read Get_BucklingModel;
    property Loads: IRConcrColumnLoads read Get_Loads;
    property IsSelected: WordBool read Get_IsSelected write Set_IsSelected;
    property HasUpperColumn: WordBool read Get_HasUpperColumn;
    property UpperColumn: IRConcrColumn read Get_UpperColumn write Set_UpperColumn;
    property UpperColumnDY: Double read Get_UpperColumnDY write Set_UpperColumnDY;
    property UpperColumnDZ: Double read Get_UpperColumnDZ write Set_UpperColumnDZ;
  end;

// *********************************************************************//
// DispIntf:  IRConcrColumnDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {66260BA3-10A5-4848-A6AB-472700DD6205}
// *********************************************************************//
  IRConcrColumnDisp = dispinterface
    ['{66260BA3-10A5-4848-A6AB-472700DD6205}']
    property Reinforcement: IRConcrReinforcement readonly dispid 1610743808;
    property Steel: IRConcrSteel readonly dispid 1610743809;
    property Concrete: IRConcrConcrete readonly dispid 1610743810;
    property Geometry: IRConcrColumnGeometry readonly dispid 1610743811;
    property ImportOptions: IRConcrColumnImportOptions readonly dispid 1610743812;
    property StructureUserNoCount: Smallint dispid 1610743813;
    property StructureUserNo[nIdx: Smallint]: Integer dispid 1610743815;
    property CalculationOptions: IRConcrColumnCalcOptions readonly dispid 1610743817;
    property PatternOptions: IRConcrColumnPatternOptions readonly dispid 1610743818;
    property Name: WideString readonly dispid 1610743819;
    property IsActive: WordBool readonly dispid 1610743820;
    property UniqueId: Integer readonly dispid 1610743821;
    function CreateCalculationNoteRtf(const _fileName: WideString): WordBool; dispid 1610743822;
    procedure Activate; dispid 1610743823;
    function Verify(_showErrors: WordBool): Integer; dispid 1610743824;
    function Calculate(_createReinforcement: WordBool): WordBool; dispid 1610743825;
    procedure Save; dispid 1610743826;
    function CreateFromBars(const _selText: WideString): WordBool; dispid 1610743827;
    property NumberOfElements: Integer dispid 1610743828;
    property BucklingModel: IRConcrColumnBucklingModel readonly dispid 1610743830;
    property Loads: IRConcrColumnLoads readonly dispid 1610743831;
    property IsSelected: WordBool dispid 1610743832;
    property HasUpperColumn: WordBool readonly dispid 1610743834;
    property UpperColumn: IRConcrColumn dispid 1610743835;
    property UpperColumnDY: Double dispid 1610743837;
    property UpperColumnDZ: Double dispid 1610743839;
  end;

// *********************************************************************//
// Interface: IRConcrColumnGeometry
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E7D6841B-68B1-45D3-9FBD-6552AAA00C1A}
// *********************************************************************//
  IRConcrColumnGeometry = interface(IDispatch)
    ['{E7D6841B-68B1-45D3-9FBD-6552AAA00C1A}']
    function Get_Dim(T: IRConcrColumnDimensionType): Double; safecall;
    procedure Set_Dim(T: IRConcrColumnDimensionType; ret: Double); safecall;
    function Get_Section: IRConcrColumnSectionType; safecall;
    procedure Set_Section(ret: IRConcrColumnSectionType); safecall;
    function Get_ShutteringArea: Double; safecall;
    function Get_ConcreteVolume: Double; safecall;
    function Get_SectionName: WideString; safecall;
    procedure Set_SectionName(const ret: WideString); safecall;
    function Get_DimIsFixed(T: IRConcrColumnDimensionType): WordBool; safecall;
    procedure Set_DimIsFixed(T: IRConcrColumnDimensionType; ret: WordBool); safecall;
    property Dim[T: IRConcrColumnDimensionType]: Double read Get_Dim write Set_Dim;
    property Section: IRConcrColumnSectionType read Get_Section write Set_Section;
    property ShutteringArea: Double read Get_ShutteringArea;
    property ConcreteVolume: Double read Get_ConcreteVolume;
    property SectionName: WideString read Get_SectionName write Set_SectionName;
    property DimIsFixed[T: IRConcrColumnDimensionType]: WordBool read Get_DimIsFixed write Set_DimIsFixed;
  end;

// *********************************************************************//
// DispIntf:  IRConcrColumnGeometryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E7D6841B-68B1-45D3-9FBD-6552AAA00C1A}
// *********************************************************************//
  IRConcrColumnGeometryDisp = dispinterface
    ['{E7D6841B-68B1-45D3-9FBD-6552AAA00C1A}']
    property Dim[T: IRConcrColumnDimensionType]: Double dispid 1610743808;
    property Section: IRConcrColumnSectionType dispid 1610743810;
    property ShutteringArea: Double readonly dispid 1610743812;
    property ConcreteVolume: Double readonly dispid 1610743813;
    property SectionName: WideString dispid 1610743814;
    property DimIsFixed[T: IRConcrColumnDimensionType]: WordBool dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRConcrColumnImportOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E993C0F3-4150-423C-916F-C9184A03A7BC}
// *********************************************************************//
  IRConcrColumnImportOptions = interface(IDispatch)
    ['{E993C0F3-4150-423C-916F-C9184A03A7BC}']
    function Get_ImportCombinations: WordBool; safecall;
    procedure Set_ImportCombinations(ret: WordBool); safecall;
    function Get_GroupByGeometry: WordBool; safecall;
    procedure Set_GroupByGeometry(ret: WordBool); safecall;
    function Get_GroupByLevel: WordBool; safecall;
    procedure Set_GroupByLevel(ret: WordBool); safecall;
    function Get_RunCalcAuto: WordBool; safecall;
    procedure Set_RunCalcAuto(ret: WordBool); safecall;
    function Get_ShowDialog: WordBool; safecall;
    procedure Set_ShowDialog(ret: WordBool); safecall;
    property ImportCombinations: WordBool read Get_ImportCombinations write Set_ImportCombinations;
    property GroupByGeometry: WordBool read Get_GroupByGeometry write Set_GroupByGeometry;
    property GroupByLevel: WordBool read Get_GroupByLevel write Set_GroupByLevel;
    property RunCalcAuto: WordBool read Get_RunCalcAuto write Set_RunCalcAuto;
    property ShowDialog: WordBool read Get_ShowDialog write Set_ShowDialog;
  end;

// *********************************************************************//
// DispIntf:  IRConcrColumnImportOptionsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E993C0F3-4150-423C-916F-C9184A03A7BC}
// *********************************************************************//
  IRConcrColumnImportOptionsDisp = dispinterface
    ['{E993C0F3-4150-423C-916F-C9184A03A7BC}']
    property ImportCombinations: WordBool dispid 1610743808;
    property GroupByGeometry: WordBool dispid 1610743810;
    property GroupByLevel: WordBool dispid 1610743812;
    property RunCalcAuto: WordBool dispid 1610743814;
    property ShowDialog: WordBool dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRConcrColumnCalcOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ADA501BC-AE18-42B7-8FD9-E913657EACE2}
// *********************************************************************//
  IRConcrColumnCalcOptions = interface(IDispatch)
    ['{ADA501BC-AE18-42B7-8FD9-E913657EACE2}']
    function Get_Cover: Double; safecall;
    procedure Set_Cover(ret: Double); safecall;
    property Cover: Double read Get_Cover write Set_Cover;
  end;

// *********************************************************************//
// DispIntf:  IRConcrColumnCalcOptionsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ADA501BC-AE18-42B7-8FD9-E913657EACE2}
// *********************************************************************//
  IRConcrColumnCalcOptionsDisp = dispinterface
    ['{ADA501BC-AE18-42B7-8FD9-E913657EACE2}']
    property Cover: Double dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRConcrColumnPatternOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2F37DF9D-C689-43B5-B956-CF6AD8E76E9F}
// *********************************************************************//
  IRConcrColumnPatternOptions = interface(IDispatch)
    ['{2F37DF9D-C689-43B5-B956-CF6AD8E76E9F}']
    function Get_TiesToBeam: WordBool; safecall;
    procedure Set_TiesToBeam(ret: WordBool); safecall;
    property TiesToBeam: WordBool read Get_TiesToBeam write Set_TiesToBeam;
  end;

// *********************************************************************//
// DispIntf:  IRConcrColumnPatternOptionsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2F37DF9D-C689-43B5-B956-CF6AD8E76E9F}
// *********************************************************************//
  IRConcrColumnPatternOptionsDisp = dispinterface
    ['{2F37DF9D-C689-43B5-B956-CF6AD8E76E9F}']
    property TiesToBeam: WordBool dispid 1610743808;
  end;

// *********************************************************************//
// Interface: IRConcrCodeService
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E93FD0B-8487-4079-A640-09E02CFE645F}
// *********************************************************************//
  IRConcrCodeService = interface(IDispatch)
    ['{3E93FD0B-8487-4079-A640-09E02CFE645F}']
    function IsConcrComponentServed(_module: IRobotProjectComponentType): WordBool; safecall;
    function Get_Column: IRConcrCodeColumn; safecall;
    function Get_Beam: IRConcrCodeBeam; safecall;
    property Column: IRConcrCodeColumn read Get_Column;
    property Beam: IRConcrCodeBeam read Get_Beam;
  end;

// *********************************************************************//
// DispIntf:  IRConcrCodeServiceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E93FD0B-8487-4079-A640-09E02CFE645F}
// *********************************************************************//
  IRConcrCodeServiceDisp = dispinterface
    ['{3E93FD0B-8487-4079-A640-09E02CFE645F}']
    function IsConcrComponentServed(_module: IRobotProjectComponentType): WordBool; dispid 1610743808;
    property Column: IRConcrCodeColumn readonly dispid 1610743809;
    property Beam: IRConcrCodeBeam readonly dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRConcrContinuousFootingSegment
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DCA74C6B-E767-4A05-8EA6-AE92B2EEC138}
// *********************************************************************//
  IRConcrContinuousFootingSegment = interface(IDispatch)
    ['{DCA74C6B-E767-4A05-8EA6-AE92B2EEC138}']
    function Get_SectionType: IRConcrContinuousFootingSectionType; safecall;
    procedure Set_SectionType(ret: IRConcrContinuousFootingSectionType); safecall;
    function Get_Dim(nType: IRConcrContinuousFootingSectionDimType): Double; safecall;
    procedure Set_Dim(nType: IRConcrContinuousFootingSectionDimType; ret: Double); safecall;
    property SectionType: IRConcrContinuousFootingSectionType read Get_SectionType write Set_SectionType;
    property Dim[nType: IRConcrContinuousFootingSectionDimType]: Double read Get_Dim write Set_Dim;
  end;

// *********************************************************************//
// DispIntf:  IRConcrContinuousFootingSegmentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DCA74C6B-E767-4A05-8EA6-AE92B2EEC138}
// *********************************************************************//
  IRConcrContinuousFootingSegmentDisp = dispinterface
    ['{DCA74C6B-E767-4A05-8EA6-AE92B2EEC138}']
    property SectionType: IRConcrContinuousFootingSectionType dispid 1610743808;
    property Dim[nType: IRConcrContinuousFootingSectionDimType]: Double dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRConcrContinuousFootingSupport
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {38FF49BA-B18D-4700-9EA8-AD4258716D04}
// *********************************************************************//
  IRConcrContinuousFootingSupport = interface(IDispatch)
    ['{38FF49BA-B18D-4700-9EA8-AD4258716D04}']
    function Get_Width: Double; safecall;
    procedure Set_Width(ret: Double); safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_MaterialType: IRConcrContinuousFootingSupportMaterialType; safecall;
    procedure Set_MaterialType(ret: IRConcrContinuousFootingSupportMaterialType); safecall;
    property Width: Double read Get_Width write Set_Width;
    property Name: WideString read Get_Name write Set_Name;
    property MaterialType: IRConcrContinuousFootingSupportMaterialType read Get_MaterialType write Set_MaterialType;
  end;

// *********************************************************************//
// DispIntf:  IRConcrContinuousFootingSupportDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {38FF49BA-B18D-4700-9EA8-AD4258716D04}
// *********************************************************************//
  IRConcrContinuousFootingSupportDisp = dispinterface
    ['{38FF49BA-B18D-4700-9EA8-AD4258716D04}']
    property Width: Double dispid 1610743808;
    property Name: WideString dispid 1610743810;
    property MaterialType: IRConcrContinuousFootingSupportMaterialType dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRConcrContinuousFootingSpan
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0617F69F-EB54-4B1A-AEA7-C3D717AA8CD3}
// *********************************************************************//
  IRConcrContinuousFootingSpan = interface(IDispatch)
    ['{0617F69F-EB54-4B1A-AEA7-C3D717AA8CD3}']
    function Get_SegmentNumber: Smallint; safecall;
    procedure Set_SegmentNumber(ret: Smallint); safecall;
    function Get_segment(nSegmentNumber: Smallint): IRConcrContinuousFootingSegment; safecall;
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_LeftSupport: IRConcrContinuousFootingSupport; safecall;
    function Get_RightSupport: IRConcrContinuousFootingSupport; safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_CalculationLength: Double; safecall;
    property SegmentNumber: Smallint read Get_SegmentNumber write Set_SegmentNumber;
    property segment[nSegmentNumber: Smallint]: IRConcrContinuousFootingSegment read Get_segment;
    property Length: Double read Get_Length write Set_Length;
    property LeftSupport: IRConcrContinuousFootingSupport read Get_LeftSupport;
    property RightSupport: IRConcrContinuousFootingSupport read Get_RightSupport;
    property Name: WideString read Get_Name write Set_Name;
    property CalculationLength: Double read Get_CalculationLength;
  end;

// *********************************************************************//
// DispIntf:  IRConcrContinuousFootingSpanDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0617F69F-EB54-4B1A-AEA7-C3D717AA8CD3}
// *********************************************************************//
  IRConcrContinuousFootingSpanDisp = dispinterface
    ['{0617F69F-EB54-4B1A-AEA7-C3D717AA8CD3}']
    property SegmentNumber: Smallint dispid 1610743808;
    property segment[nSegmentNumber: Smallint]: IRConcrContinuousFootingSegment readonly dispid 1610743810;
    property Length: Double dispid 1610743811;
    property LeftSupport: IRConcrContinuousFootingSupport readonly dispid 1610743813;
    property RightSupport: IRConcrContinuousFootingSupport readonly dispid 1610743814;
    property Name: WideString dispid 1610743815;
    property CalculationLength: Double readonly dispid 1610743817;
  end;

// *********************************************************************//
// Interface: IRConcrContinuousFootingGeometry
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E082A95B-34E2-4AFA-8CC2-A24879813B98}
// *********************************************************************//
  IRConcrContinuousFootingGeometry = interface(IDispatch)
    ['{E082A95B-34E2-4AFA-8CC2-A24879813B98}']
    function Get_ConcreteVolume: Double; safecall;
    function Get_ShutteringArea: Double; safecall;
    function Get_SpanNumber: Smallint; safecall;
    procedure Set_SpanNumber(ret: Smallint); safecall;
    function Get_Span(nSpanNo: Smallint): IRConcrContinuousFootingSpan; safecall;
    function Get_LeftCantilever: WordBool; safecall;
    procedure Set_LeftCantilever(ret: WordBool); safecall;
    function Get_RightCantilever: WordBool; safecall;
    procedure Set_RightCantilever(ret: WordBool); safecall;
    function Get_AutoNameSpans: WordBool; safecall;
    procedure Set_AutoNameSpans(ret: WordBool); safecall;
    function Get_AutoNameSupports: WordBool; safecall;
    procedure Set_AutoNameSupports(ret: WordBool); safecall;
    procedure UpdateInternalGeometryData; safecall;
    property ConcreteVolume: Double read Get_ConcreteVolume;
    property ShutteringArea: Double read Get_ShutteringArea;
    property SpanNumber: Smallint read Get_SpanNumber write Set_SpanNumber;
    property Span[nSpanNo: Smallint]: IRConcrContinuousFootingSpan read Get_Span;
    property LeftCantilever: WordBool read Get_LeftCantilever write Set_LeftCantilever;
    property RightCantilever: WordBool read Get_RightCantilever write Set_RightCantilever;
    property AutoNameSpans: WordBool read Get_AutoNameSpans write Set_AutoNameSpans;
    property AutoNameSupports: WordBool read Get_AutoNameSupports write Set_AutoNameSupports;
  end;

// *********************************************************************//
// DispIntf:  IRConcrContinuousFootingGeometryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E082A95B-34E2-4AFA-8CC2-A24879813B98}
// *********************************************************************//
  IRConcrContinuousFootingGeometryDisp = dispinterface
    ['{E082A95B-34E2-4AFA-8CC2-A24879813B98}']
    property ConcreteVolume: Double readonly dispid 1610743808;
    property ShutteringArea: Double readonly dispid 1610743809;
    property SpanNumber: Smallint dispid 1610743810;
    property Span[nSpanNo: Smallint]: IRConcrContinuousFootingSpan readonly dispid 1610743812;
    property LeftCantilever: WordBool dispid 1610743813;
    property RightCantilever: WordBool dispid 1610743815;
    property AutoNameSpans: WordBool dispid 1610743817;
    property AutoNameSupports: WordBool dispid 1610743819;
    procedure UpdateInternalGeometryData; dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IRConcrContinuousFooting
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B7369965-1F22-4D86-BD27-6A5CFBB65D42}
// *********************************************************************//
  IRConcrContinuousFooting = interface(IDispatch)
    ['{B7369965-1F22-4D86-BD27-6A5CFBB65D42}']
    function Get_Reinforcement: IRConcrReinforcement; safecall;
    function Get_Steel: IRConcrSteel; safecall;
    function Get_Concrete: IRConcrConcrete; safecall;
    function Get_Geometry: IRConcrContinuousFootingGeometry; safecall;
    function Get_StructureUserNoCount: Smallint; safecall;
    procedure Set_StructureUserNoCount(ret: Smallint); safecall;
    function Get_StructureUserNo(nIdx: Smallint): Integer; safecall;
    procedure Set_StructureUserNo(nIdx: Smallint; ret: Integer); safecall;
    function Get_ImportOptions: IRConcrBeamImportOptions; safecall;
    function Get_PatternOptions: IRConcrBeamPatternOptions; safecall;
    function Get_CalculationOptions: IRConcrBeamCalcOptions; safecall;
    function Get_Name: WideString; safecall;
    function Get_IsActive: WordBool; safecall;
    function Get_UniqueId: Integer; safecall;
    function CreateCalculationNoteRtf(const _fileName: WideString): WordBool; safecall;
    procedure Save; safecall;
    procedure Activate; safecall;
    function Verify(_showErrors: WordBool): Integer; safecall;
    function Calculate(_createReinforcement: WordBool): WordBool; safecall;
    function Get_IsSelected: WordBool; safecall;
    procedure Set_IsSelected(ret: WordBool); safecall;
    function Get_NumberOfElements: Integer; safecall;
    procedure Set_NumberOfElements(ret: Integer); safecall;
    property Reinforcement: IRConcrReinforcement read Get_Reinforcement;
    property Steel: IRConcrSteel read Get_Steel;
    property Concrete: IRConcrConcrete read Get_Concrete;
    property Geometry: IRConcrContinuousFootingGeometry read Get_Geometry;
    property StructureUserNoCount: Smallint read Get_StructureUserNoCount write Set_StructureUserNoCount;
    property StructureUserNo[nIdx: Smallint]: Integer read Get_StructureUserNo write Set_StructureUserNo;
    property ImportOptions: IRConcrBeamImportOptions read Get_ImportOptions;
    property PatternOptions: IRConcrBeamPatternOptions read Get_PatternOptions;
    property CalculationOptions: IRConcrBeamCalcOptions read Get_CalculationOptions;
    property Name: WideString read Get_Name;
    property IsActive: WordBool read Get_IsActive;
    property UniqueId: Integer read Get_UniqueId;
    property IsSelected: WordBool read Get_IsSelected write Set_IsSelected;
    property NumberOfElements: Integer read Get_NumberOfElements write Set_NumberOfElements;
  end;

// *********************************************************************//
// DispIntf:  IRConcrContinuousFootingDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B7369965-1F22-4D86-BD27-6A5CFBB65D42}
// *********************************************************************//
  IRConcrContinuousFootingDisp = dispinterface
    ['{B7369965-1F22-4D86-BD27-6A5CFBB65D42}']
    property Reinforcement: IRConcrReinforcement readonly dispid 1610743808;
    property Steel: IRConcrSteel readonly dispid 1610743809;
    property Concrete: IRConcrConcrete readonly dispid 1610743810;
    property Geometry: IRConcrContinuousFootingGeometry readonly dispid 1610743811;
    property StructureUserNoCount: Smallint dispid 1610743812;
    property StructureUserNo[nIdx: Smallint]: Integer dispid 1610743814;
    property ImportOptions: IRConcrBeamImportOptions readonly dispid 1610743816;
    property PatternOptions: IRConcrBeamPatternOptions readonly dispid 1610743817;
    property CalculationOptions: IRConcrBeamCalcOptions readonly dispid 1610743818;
    property Name: WideString readonly dispid 1610743819;
    property IsActive: WordBool readonly dispid 1610743820;
    property UniqueId: Integer readonly dispid 1610743821;
    function CreateCalculationNoteRtf(const _fileName: WideString): WordBool; dispid 1610743822;
    procedure Save; dispid 1610743823;
    procedure Activate; dispid 1610743824;
    function Verify(_showErrors: WordBool): Integer; dispid 1610743825;
    function Calculate(_createReinforcement: WordBool): WordBool; dispid 1610743826;
    property IsSelected: WordBool dispid 1610743827;
    property NumberOfElements: Integer dispid 1610743829;
  end;

// *********************************************************************//
// Interface: IRConcrFootingPattern
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {09C6D6D1-B927-42B9-AF10-0F94D27BC977}
// *********************************************************************//
  IRConcrFootingPattern = interface(IDispatch)
    ['{09C6D6D1-B927-42B9-AF10-0F94D27BC977}']
    function Get_Diameter1: Double; safecall;
    procedure Set_Diameter1(ret: Double); safecall;
    function Get_Diameter2: Double; safecall;
    procedure Set_Diameter2(ret: Double); safecall;
    function Get_Spacing1Min: Double; safecall;
    procedure Set_Spacing1Min(ret: Double); safecall;
    function Get_Spacing2Min: Double; safecall;
    procedure Set_Spacing2Min(ret: Double); safecall;
    function Get_Spacing1Max: Double; safecall;
    procedure Set_Spacing1Max(ret: Double); safecall;
    function Get_Spacing2Max: Double; safecall;
    procedure Set_Spacing2Max(ret: Double); safecall;
    property Diameter1: Double read Get_Diameter1 write Set_Diameter1;
    property Diameter2: Double read Get_Diameter2 write Set_Diameter2;
    property Spacing1Min: Double read Get_Spacing1Min write Set_Spacing1Min;
    property Spacing2Min: Double read Get_Spacing2Min write Set_Spacing2Min;
    property Spacing1Max: Double read Get_Spacing1Max write Set_Spacing1Max;
    property Spacing2Max: Double read Get_Spacing2Max write Set_Spacing2Max;
  end;

// *********************************************************************//
// DispIntf:  IRConcrFootingPatternDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {09C6D6D1-B927-42B9-AF10-0F94D27BC977}
// *********************************************************************//
  IRConcrFootingPatternDisp = dispinterface
    ['{09C6D6D1-B927-42B9-AF10-0F94D27BC977}']
    property Diameter1: Double dispid 1610743808;
    property Diameter2: Double dispid 1610743810;
    property Spacing1Min: Double dispid 1610743812;
    property Spacing2Min: Double dispid 1610743814;
    property Spacing1Max: Double dispid 1610743816;
    property Spacing2Max: Double dispid 1610743818;
  end;

// *********************************************************************//
// Interface: IRConcrFootingCalculationOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E43EBEC-5F77-4042-AB6D-2975CB911F51}
// *********************************************************************//
  IRConcrFootingCalculationOptions = interface(IDispatch)
    ['{3E43EBEC-5F77-4042-AB6D-2975CB911F51}']
    function Get_Cover: Double; safecall;
    procedure Set_Cover(ret: Double); safecall;
    function Get_PierCover: Double; safecall;
    procedure Set_PierCover(ret: Double); safecall;
    function Get_NominalCover: Double; safecall;
    function Get_NominalPierCover: Double; safecall;
    property Cover: Double read Get_Cover write Set_Cover;
    property PierCover: Double read Get_PierCover write Set_PierCover;
    property NominalCover: Double read Get_NominalCover;
    property NominalPierCover: Double read Get_NominalPierCover;
  end;

// *********************************************************************//
// DispIntf:  IRConcrFootingCalculationOptionsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3E43EBEC-5F77-4042-AB6D-2975CB911F51}
// *********************************************************************//
  IRConcrFootingCalculationOptionsDisp = dispinterface
    ['{3E43EBEC-5F77-4042-AB6D-2975CB911F51}']
    property Cover: Double dispid 1610743808;
    property PierCover: Double dispid 1610743810;
    property NominalCover: Double readonly dispid 1610743812;
    property NominalPierCover: Double readonly dispid 1610743813;
  end;

// *********************************************************************//
// Interface: IRConcrFootingResults
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F0B13704-0E3C-4E48-9744-56D66E9CB1E4}
// *********************************************************************//
  IRConcrFootingResults = interface(IDispatch)
    ['{F0B13704-0E3C-4E48-9744-56D66E9CB1E4}']
    function Get_AX: Double; safecall;
    procedure Set_AX(ret: Double); safecall;
    function Get_AY: Double; safecall;
    procedure Set_AY(ret: Double); safecall;
    function Get_val(_type: IRConcrFootResultType): Double; safecall;
    procedure Set_val(_type: IRConcrFootResultType; ret: Double); safecall;
    property AX: Double read Get_AX write Set_AX;
    property AY: Double read Get_AY write Set_AY;
    property val[_type: IRConcrFootResultType]: Double read Get_val write Set_val;
  end;

// *********************************************************************//
// DispIntf:  IRConcrFootingResultsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F0B13704-0E3C-4E48-9744-56D66E9CB1E4}
// *********************************************************************//
  IRConcrFootingResultsDisp = dispinterface
    ['{F0B13704-0E3C-4E48-9744-56D66E9CB1E4}']
    property AX: Double dispid 1610743808;
    property AY: Double dispid 1610743810;
    property val[_type: IRConcrFootResultType]: Double dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IRConcrFootingLoads
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {968D3064-3A73-4196-96CE-EE22EE316691}
// *********************************************************************//
  IRConcrFootingLoads = interface(IDispatch)
    ['{968D3064-3A73-4196-96CE-EE22EE316691}']
  end;

// *********************************************************************//
// DispIntf:  IRConcrFootingLoadsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {968D3064-3A73-4196-96CE-EE22EE316691}
// *********************************************************************//
  IRConcrFootingLoadsDisp = dispinterface
    ['{968D3064-3A73-4196-96CE-EE22EE316691}']
  end;

// *********************************************************************//
// Interface: IRConcrFootingGround
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7C346240-5BDC-4DF6-B90E-4EA310E49311}
// *********************************************************************//
  IRConcrFootingGround = interface(IDispatch)
    ['{7C346240-5BDC-4DF6-B90E-4EA310E49311}']
    function Get_SoilLevel: Double; safecall;
    procedure Set_SoilLevel(ret: Double); safecall;
    function Get_ColumnPierLevel: Double; safecall;
    procedure Set_ColumnPierLevel(ret: Double); safecall;
    property SoilLevel: Double read Get_SoilLevel write Set_SoilLevel;
    property ColumnPierLevel: Double read Get_ColumnPierLevel write Set_ColumnPierLevel;
  end;

// *********************************************************************//
// DispIntf:  IRConcrFootingGroundDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7C346240-5BDC-4DF6-B90E-4EA310E49311}
// *********************************************************************//
  IRConcrFootingGroundDisp = dispinterface
    ['{7C346240-5BDC-4DF6-B90E-4EA310E49311}']
    property SoilLevel: Double dispid 1610743808;
    property ColumnPierLevel: Double dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRConcrFootingGeometry
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE16239E-CBF0-4F1F-9A5F-57F210043A6D}
// *********************************************************************//
  IRConcrFootingGeometry = interface(IDispatch)
    ['{FE16239E-CBF0-4F1F-9A5F-57F210043A6D}']
    function Get_Shape: IRConcrFootingShapeType; safecall;
    procedure Set_Shape(ret: IRConcrFootingShapeType); safecall;
    function Get_type_: IRConcrFootingType; safecall;
    procedure Set_type_(ret: IRConcrFootingType); safecall;
    function Get_ShutteringArea: Double; safecall;
    function Get_ConcreteVolume: Double; safecall;
    function GetDim(_dimType: IRConcrFootingDimType): Double; safecall;
    procedure SetDim(_dimType: IRConcrFootingDimType; _val: Double); safecall;
    function Get_PierType: IRConcrFootingPierType; safecall;
    procedure Set_PierType(ret: IRConcrFootingPierType); safecall;
    property Shape: IRConcrFootingShapeType read Get_Shape write Set_Shape;
    property type_: IRConcrFootingType read Get_type_ write Set_type_;
    property ShutteringArea: Double read Get_ShutteringArea;
    property ConcreteVolume: Double read Get_ConcreteVolume;
    property PierType: IRConcrFootingPierType read Get_PierType write Set_PierType;
  end;

// *********************************************************************//
// DispIntf:  IRConcrFootingGeometryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE16239E-CBF0-4F1F-9A5F-57F210043A6D}
// *********************************************************************//
  IRConcrFootingGeometryDisp = dispinterface
    ['{FE16239E-CBF0-4F1F-9A5F-57F210043A6D}']
    property Shape: IRConcrFootingShapeType dispid 1610743808;
    property type_: IRConcrFootingType dispid 1610743810;
    property ShutteringArea: Double readonly dispid 1610743812;
    property ConcreteVolume: Double readonly dispid 1610743813;
    function GetDim(_dimType: IRConcrFootingDimType): Double; dispid 1610743814;
    procedure SetDim(_dimType: IRConcrFootingDimType; _val: Double); dispid 1610743815;
    property PierType: IRConcrFootingPierType dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRConcrFooting
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {15AD9A74-EF28-41AB-9D11-2FE487FB5EA1}
// *********************************************************************//
  IRConcrFooting = interface(IDispatch)
    ['{15AD9A74-EF28-41AB-9D11-2FE487FB5EA1}']
    function Get_Geometry: IRConcrFootingGeometry; safecall;
    function Get_Ground: IRConcrFootingGround; safecall;
    function Get_Loads: IRConcrFootingLoads; safecall;
    function Get_Results: IRConcrFootingResults; safecall;
    function Get_Reinforcement: IRConcrReinforcement; safecall;
    function Get_Steel: IRConcrSteel; safecall;
    function Get_Concrete: IRConcrConcrete; safecall;
    function Get_CalculationOptions: IRConcrFootingCalculationOptions; safecall;
    function Get_Pattern: IRConcrFootingPattern; safecall;
    function Get_StructureUserNoCount: Smallint; safecall;
    procedure Set_StructureUserNoCount(ret: Smallint); safecall;
    function Get_StructureUserNo(nIdx: Smallint): Integer; safecall;
    procedure Set_StructureUserNo(nIdx: Smallint; ret: Integer); safecall;
    function Get_Name: WideString; safecall;
    function Get_IsActive: WordBool; safecall;
    function Get_UniqueId: Integer; safecall;
    function CreateCalculationNoteRtf(const _fileName: WideString): WordBool; safecall;
    procedure DisplayDrawing; safecall;
    procedure Save; safecall;
    procedure CreateReinforcement; safecall;
    procedure Activate; safecall;
    function Verify(_showErrors: WordBool): Integer; safecall;
    function Calculate(_createReinforcement: WordBool): WordBool; safecall;
    function CreateFromNodes(const _selText: WideString): WordBool; safecall;
    function Get_NumberOfElements: Integer; safecall;
    procedure Set_NumberOfElements(ret: Integer); safecall;
    function Get_FootRotation: Double; safecall;
    procedure Set_FootRotation(ret: Double); safecall;
    function Get_IsSelected: WordBool; safecall;
    procedure Set_IsSelected(ret: WordBool); safecall;
    property Geometry: IRConcrFootingGeometry read Get_Geometry;
    property Ground: IRConcrFootingGround read Get_Ground;
    property Loads: IRConcrFootingLoads read Get_Loads;
    property Results: IRConcrFootingResults read Get_Results;
    property Reinforcement: IRConcrReinforcement read Get_Reinforcement;
    property Steel: IRConcrSteel read Get_Steel;
    property Concrete: IRConcrConcrete read Get_Concrete;
    property CalculationOptions: IRConcrFootingCalculationOptions read Get_CalculationOptions;
    property Pattern: IRConcrFootingPattern read Get_Pattern;
    property StructureUserNoCount: Smallint read Get_StructureUserNoCount write Set_StructureUserNoCount;
    property StructureUserNo[nIdx: Smallint]: Integer read Get_StructureUserNo write Set_StructureUserNo;
    property Name: WideString read Get_Name;
    property IsActive: WordBool read Get_IsActive;
    property UniqueId: Integer read Get_UniqueId;
    property NumberOfElements: Integer read Get_NumberOfElements write Set_NumberOfElements;
    property FootRotation: Double read Get_FootRotation write Set_FootRotation;
    property IsSelected: WordBool read Get_IsSelected write Set_IsSelected;
  end;

// *********************************************************************//
// DispIntf:  IRConcrFootingDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {15AD9A74-EF28-41AB-9D11-2FE487FB5EA1}
// *********************************************************************//
  IRConcrFootingDisp = dispinterface
    ['{15AD9A74-EF28-41AB-9D11-2FE487FB5EA1}']
    property Geometry: IRConcrFootingGeometry readonly dispid 1610743808;
    property Ground: IRConcrFootingGround readonly dispid 1610743809;
    property Loads: IRConcrFootingLoads readonly dispid 1610743810;
    property Results: IRConcrFootingResults readonly dispid 1610743811;
    property Reinforcement: IRConcrReinforcement readonly dispid 1610743812;
    property Steel: IRConcrSteel readonly dispid 1610743813;
    property Concrete: IRConcrConcrete readonly dispid 1610743814;
    property CalculationOptions: IRConcrFootingCalculationOptions readonly dispid 1610743815;
    property Pattern: IRConcrFootingPattern readonly dispid 1610743816;
    property StructureUserNoCount: Smallint dispid 1610743817;
    property StructureUserNo[nIdx: Smallint]: Integer dispid 1610743819;
    property Name: WideString readonly dispid 1610743821;
    property IsActive: WordBool readonly dispid 1610743822;
    property UniqueId: Integer readonly dispid 1610743823;
    function CreateCalculationNoteRtf(const _fileName: WideString): WordBool; dispid 1610743824;
    procedure DisplayDrawing; dispid 1610743825;
    procedure Save; dispid 1610743826;
    procedure CreateReinforcement; dispid 1610743827;
    procedure Activate; dispid 1610743828;
    function Verify(_showErrors: WordBool): Integer; dispid 1610743829;
    function Calculate(_createReinforcement: WordBool): WordBool; dispid 1610743830;
    function CreateFromNodes(const _selText: WideString): WordBool; dispid 1610743831;
    property NumberOfElements: Integer dispid 1610743832;
    property FootRotation: Double dispid 1610743834;
    property IsSelected: WordBool dispid 1610743836;
  end;

// *********************************************************************//
// Interface: IRConcrDrawingBarGroup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {33BC3B5D-9A66-4275-89A1-F0B1F2F86188}
// *********************************************************************//
  IRConcrDrawingBarGroup = interface(IDispatch)
    ['{33BC3B5D-9A66-4275-89A1-F0B1F2F86188}']
    function Get_BarCount: Integer; safecall;
    function Get_Bar(nBarIndex: Integer): IRConcrReinforcingBar; safecall;
    property BarCount: Integer read Get_BarCount;
    property Bar[nBarIndex: Integer]: IRConcrReinforcingBar read Get_Bar;
  end;

// *********************************************************************//
// DispIntf:  IRConcrDrawingBarGroupDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {33BC3B5D-9A66-4275-89A1-F0B1F2F86188}
// *********************************************************************//
  IRConcrDrawingBarGroupDisp = dispinterface
    ['{33BC3B5D-9A66-4275-89A1-F0B1F2F86188}']
    property BarCount: Integer readonly dispid 1610743808;
    property Bar[nBarIndex: Integer]: IRConcrReinforcingBar readonly dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRConcrDrawing
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {36B4D700-9CF3-4466-915A-497F39F5FA4A}
// *********************************************************************//
  IRConcrDrawing = interface(IDispatch)
    ['{36B4D700-9CF3-4466-915A-497F39F5FA4A}']
    function Get_GroupCount: Integer; safecall;
    function Get_group(nIndex: Integer): IRConcrDrawingBarGroup; safecall;
    property GroupCount: Integer read Get_GroupCount;
    property group[nIndex: Integer]: IRConcrDrawingBarGroup read Get_group;
  end;

// *********************************************************************//
// DispIntf:  IRConcrDrawingDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {36B4D700-9CF3-4466-915A-497F39F5FA4A}
// *********************************************************************//
  IRConcrDrawingDisp = dispinterface
    ['{36B4D700-9CF3-4466-915A-497F39F5FA4A}']
    property GroupCount: Integer readonly dispid 1610743808;
    property group[nIndex: Integer]: IRConcrDrawingBarGroup readonly dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRConcrSlabWizard
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B23F8CBE-E83A-48DC-AC2A-3D2208C0E007}
// *********************************************************************//
  IRConcrSlabWizard = interface(IDispatch)
    ['{B23F8CBE-E83A-48DC-AC2A-3D2208C0E007}']
    function Get_Thickness: Double; safecall;
    procedure Set_Thickness(ret: Double); safecall;
    function Finish: WordBool; safecall;
    procedure AddSlabNode(_x: Double; _y: Double); safecall;
    procedure AddOpening; safecall;
    procedure AddOpeningNode(_x: Double; _y: Double); safecall;
    procedure AddColumnSupport(_x: Double; _y: Double; _b: Double; _h: Double; _alpha: Double); safecall;
    procedure AddWallSupport(_x1: Double; _y1: Double; _x2: Double; _y2: Double; 
                             _thickness: Double; _type: IRConcrSlabSupportType); safecall;
    property Thickness: Double read Get_Thickness write Set_Thickness;
  end;

// *********************************************************************//
// DispIntf:  IRConcrSlabWizardDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B23F8CBE-E83A-48DC-AC2A-3D2208C0E007}
// *********************************************************************//
  IRConcrSlabWizardDisp = dispinterface
    ['{B23F8CBE-E83A-48DC-AC2A-3D2208C0E007}']
    property Thickness: Double dispid 1610743808;
    function Finish: WordBool; dispid 1610743810;
    procedure AddSlabNode(_x: Double; _y: Double); dispid 1610743811;
    procedure AddOpening; dispid 1610743812;
    procedure AddOpeningNode(_x: Double; _y: Double); dispid 1610743813;
    procedure AddColumnSupport(_x: Double; _y: Double; _b: Double; _h: Double; _alpha: Double); dispid 1610743814;
    procedure AddWallSupport(_x1: Double; _y1: Double; _x2: Double; _y2: Double; 
                             _thickness: Double; _type: IRConcrSlabSupportType); dispid 1610743815;
  end;

// *********************************************************************//
// Interface: IRConcrSlabPatternOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1E1A36A2-A178-40A6-A375-DC6071FF6CE4}
// *********************************************************************//
  IRConcrSlabPatternOptions = interface(IDispatch)
    ['{1E1A36A2-A178-40A6-A375-DC6071FF6CE4}']
    function Get_ReinforcementType: IRConcrSlabRnfType; safecall;
    procedure Set_ReinforcementType(ret: IRConcrSlabRnfType); safecall;
    function Get_ReinforcementSegment: IRConcrSlabRnfSegmentType; safecall;
    procedure Set_ReinforcementSegment(ret: IRConcrSlabRnfSegmentType); safecall;
    property ReinforcementType: IRConcrSlabRnfType read Get_ReinforcementType write Set_ReinforcementType;
    property ReinforcementSegment: IRConcrSlabRnfSegmentType read Get_ReinforcementSegment write Set_ReinforcementSegment;
  end;

// *********************************************************************//
// DispIntf:  IRConcrSlabPatternOptionsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1E1A36A2-A178-40A6-A375-DC6071FF6CE4}
// *********************************************************************//
  IRConcrSlabPatternOptionsDisp = dispinterface
    ['{1E1A36A2-A178-40A6-A375-DC6071FF6CE4}']
    property ReinforcementType: IRConcrSlabRnfType dispid 1610743808;
    property ReinforcementSegment: IRConcrSlabRnfSegmentType dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRConcrSlabGeometry
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EDBD46B6-C73C-4AE4-9161-0B5B0B480A29}
// *********************************************************************//
  IRConcrSlabGeometry = interface(IDispatch)
    ['{EDBD46B6-C73C-4AE4-9161-0B5B0B480A29}']
    function Get_ShutteringArea: Double; safecall;
    function Get_ConcreteVolume: Double; safecall;
    property ShutteringArea: Double read Get_ShutteringArea;
    property ConcreteVolume: Double read Get_ConcreteVolume;
  end;

// *********************************************************************//
// DispIntf:  IRConcrSlabGeometryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EDBD46B6-C73C-4AE4-9161-0B5B0B480A29}
// *********************************************************************//
  IRConcrSlabGeometryDisp = dispinterface
    ['{EDBD46B6-C73C-4AE4-9161-0B5B0B480A29}']
    property ShutteringArea: Double readonly dispid 1610743808;
    property ConcreteVolume: Double readonly dispid 1610743809;
  end;

// *********************************************************************//
// Interface: IRConcrSlabCalculationOptions
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {81BFF62A-F907-44F4-9FF3-DE8045503531}
// *********************************************************************//
  IRConcrSlabCalculationOptions = interface(IDispatch)
    ['{81BFF62A-F907-44F4-9FF3-DE8045503531}']
    function Get_Cover: Double; safecall;
    procedure Set_Cover(ret: Double); safecall;
    function Get_CoverLateral: Double; safecall;
    procedure Set_CoverLateral(ret: Double); safecall;
    property Cover: Double read Get_Cover write Set_Cover;
    property CoverLateral: Double read Get_CoverLateral write Set_CoverLateral;
  end;

// *********************************************************************//
// DispIntf:  IRConcrSlabCalculationOptionsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {81BFF62A-F907-44F4-9FF3-DE8045503531}
// *********************************************************************//
  IRConcrSlabCalculationOptionsDisp = dispinterface
    ['{81BFF62A-F907-44F4-9FF3-DE8045503531}']
    property Cover: Double dispid 1610743808;
    property CoverLateral: Double dispid 1610743810;
  end;

// *********************************************************************//
// Interface: IRConcrSlab
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EB4A9573-F984-4D3D-B823-114AAE0EB29F}
// *********************************************************************//
  IRConcrSlab = interface(IDispatch)
    ['{EB4A9573-F984-4D3D-B823-114AAE0EB29F}']
    function Get_Reinforcement: IRConcrReinforcement; safecall;
    function Get_Steel: IRConcrSteel; safecall;
    function Get_Concrete: IRConcrConcrete; safecall;
    function Get_Geometry: IRConcrSlabGeometry; safecall;
    function Get_CalculationOptions: IRConcrSlabCalculationOptions; safecall;
    function Get_PatternOptions: IRConcrSlabPatternOptions; safecall;
    function Get_Name: WideString; safecall;
    function Get_UniqueId: Integer; safecall;
    function CreateCalculationNoteRtf(const _fileName: WideString): WordBool; safecall;
    procedure Save; safecall;
    function CreateFromObjects(const _selText: WideString): WordBool; safecall;
    procedure Activate; safecall;
    function StartWizard: IRConcrSlabWizard; safecall;
    function Get_IsSelected: WordBool; safecall;
    procedure Set_IsSelected(ret: WordBool); safecall;
    property Reinforcement: IRConcrReinforcement read Get_Reinforcement;
    property Steel: IRConcrSteel read Get_Steel;
    property Concrete: IRConcrConcrete read Get_Concrete;
    property Geometry: IRConcrSlabGeometry read Get_Geometry;
    property CalculationOptions: IRConcrSlabCalculationOptions read Get_CalculationOptions;
    property PatternOptions: IRConcrSlabPatternOptions read Get_PatternOptions;
    property Name: WideString read Get_Name;
    property UniqueId: Integer read Get_UniqueId;
    property IsSelected: WordBool read Get_IsSelected write Set_IsSelected;
  end;

// *********************************************************************//
// DispIntf:  IRConcrSlabDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EB4A9573-F984-4D3D-B823-114AAE0EB29F}
// *********************************************************************//
  IRConcrSlabDisp = dispinterface
    ['{EB4A9573-F984-4D3D-B823-114AAE0EB29F}']
    property Reinforcement: IRConcrReinforcement readonly dispid 1610743808;
    property Steel: IRConcrSteel readonly dispid 1610743809;
    property Concrete: IRConcrConcrete readonly dispid 1610743810;
    property Geometry: IRConcrSlabGeometry readonly dispid 1610743811;
    property CalculationOptions: IRConcrSlabCalculationOptions readonly dispid 1610743812;
    property PatternOptions: IRConcrSlabPatternOptions readonly dispid 1610743813;
    property Name: WideString readonly dispid 1610743814;
    property UniqueId: Integer readonly dispid 1610743815;
    function CreateCalculationNoteRtf(const _fileName: WideString): WordBool; dispid 1610743816;
    procedure Save; dispid 1610743817;
    function CreateFromObjects(const _selText: WideString): WordBool; dispid 1610743818;
    procedure Activate; dispid 1610743819;
    function StartWizard: IRConcrSlabWizard; dispid 1610743820;
    property IsSelected: WordBool dispid 1610743821;
  end;

// *********************************************************************//
// Interface: IRConcrWallOpening
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {47B0E01C-5C26-475D-983D-88B93666E6B5}
// *********************************************************************//
  IRConcrWallOpening = interface(IDispatch)
    ['{47B0E01C-5C26-475D-983D-88B93666E6B5}']
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_LX: Double; safecall;
    procedure Set_LX(ret: Double); safecall;
    function Get_Lz: Double; safecall;
    procedure Set_Lz(ret: Double); safecall;
    function Get_PosX: Double; safecall;
    procedure Set_PosX(ret: Double); safecall;
    function Get_PosZ: Double; safecall;
    procedure Set_PosZ(ret: Double); safecall;
    property Name: WideString read Get_Name write Set_Name;
    property LX: Double read Get_LX write Set_LX;
    property Lz: Double read Get_Lz write Set_Lz;
    property PosX: Double read Get_PosX write Set_PosX;
    property PosZ: Double read Get_PosZ write Set_PosZ;
  end;

// *********************************************************************//
// DispIntf:  IRConcrWallOpeningDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {47B0E01C-5C26-475D-983D-88B93666E6B5}
// *********************************************************************//
  IRConcrWallOpeningDisp = dispinterface
    ['{47B0E01C-5C26-475D-983D-88B93666E6B5}']
    property Name: WideString dispid 1610743808;
    property LX: Double dispid 1610743810;
    property Lz: Double dispid 1610743812;
    property PosX: Double dispid 1610743814;
    property PosZ: Double dispid 1610743816;
  end;

// *********************************************************************//
// Interface: IRConcrWallOpenings
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {520861E8-9746-479C-817B-07D7E36E6E2B}
// *********************************************************************//
  IRConcrWallOpenings = interface(IDispatch)
    ['{520861E8-9746-479C-817B-07D7E36E6E2B}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_item(index: Integer): IRConcrWallOpening; safecall;
    function Get_Count: Integer; safecall;
    function Add: IRConcrWallOpening; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property item[index: Integer]: IRConcrWallOpening read Get_item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf:  IRConcrWallOpeningsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {520861E8-9746-479C-817B-07D7E36E6E2B}
// *********************************************************************//
  IRConcrWallOpeningsDisp = dispinterface
    ['{520861E8-9746-479C-817B-07D7E36E6E2B}']
    property _NewEnum: IUnknown readonly dispid -4;
    property item[index: Integer]: IRConcrWallOpening readonly dispid 0; default;
    property Count: Integer readonly dispid 1610743810;
    function Add: IRConcrWallOpening; dispid 1610743811;
  end;

// *********************************************************************//
// Interface: IRConcrWallGeometry
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {20039A26-E005-45C3-A6EB-538C2E454A00}
// *********************************************************************//
  IRConcrWallGeometry = interface(IDispatch)
    ['{20039A26-E005-45C3-A6EB-538C2E454A00}']
    function Get_Length: Double; safecall;
    procedure Set_Length(ret: Double); safecall;
    function Get_Height: Double; safecall;
    procedure Set_Height(ret: Double); safecall;
    function Get_Thickness: Double; safecall;
    procedure Set_Thickness(ret: Double); safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const ret: WideString); safecall;
    function Get_LeftBoundaryThickness: Double; safecall;
    procedure Set_LeftBoundaryThickness(ret: Double); safecall;
    function Get_RightBoundaryThickness: Double; safecall;
    procedure Set_RightBoundaryThickness(ret: Double); safecall;
    function Get_LeftBoundaryLength: Double; safecall;
    procedure Set_LeftBoundaryLength(ret: Double); safecall;
    function Get_RightBoundaryLength: Double; safecall;
    procedure Set_RightBoundaryLength(ret: Double); safecall;
    function Get_Openings: IRConcrWallOpenings; safecall;
    property Length: Double read Get_Length write Set_Length;
    property Height: Double read Get_Height write Set_Height;
    property Thickness: Double read Get_Thickness write Set_Thickness;
    property Name: WideString read Get_Name write Set_Name;
    property LeftBoundaryThickness: Double read Get_LeftBoundaryThickness write Set_LeftBoundaryThickness;
    property RightBoundaryThickness: Double read Get_RightBoundaryThickness write Set_RightBoundaryThickness;
    property LeftBoundaryLength: Double read Get_LeftBoundaryLength write Set_LeftBoundaryLength;
    property RightBoundaryLength: Double read Get_RightBoundaryLength write Set_RightBoundaryLength;
    property Openings: IRConcrWallOpenings read Get_Openings;
  end;

// *********************************************************************//
// DispIntf:  IRConcrWallGeometryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {20039A26-E005-45C3-A6EB-538C2E454A00}
// *********************************************************************//
  IRConcrWallGeometryDisp = dispinterface
    ['{20039A26-E005-45C3-A6EB-538C2E454A00}']
    property Length: Double dispid 1610743808;
    property Height: Double dispid 1610743810;
    property Thickness: Double dispid 1610743812;
    property Name: WideString dispid 1610743814;
    property LeftBoundaryThickness: Double dispid 1610743816;
    property RightBoundaryThickness: Double dispid 1610743818;
    property LeftBoundaryLength: Double dispid 1610743820;
    property RightBoundaryLength: Double dispid 1610743822;
    property Openings: IRConcrWallOpenings readonly dispid 1610743824;
  end;

// *********************************************************************//
// Interface: IRConcrWall
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B2646B54-7116-422C-9CED-8014720EA4CB}
// *********************************************************************//
  IRConcrWall = interface(IDispatch)
    ['{B2646B54-7116-422C-9CED-8014720EA4CB}']
    function Get_Reinforcement: IRConcrReinforcement; safecall;
    function Get_Steel: IRConcrSteel; safecall;
    function Get_Concrete: IRConcrConcrete; safecall;
    function Get_Name: WideString; safecall;
    function Get_Geometry: IRConcrWallGeometry; safecall;
    function Get_UniqueId: Integer; safecall;
    function CreateCalculationNoteRtf(const _fileName: WideString): WordBool; safecall;
    procedure Save; safecall;
    function CreateFromObjects(const _selTaxt: WideString): WordBool; safecall;
    procedure Activate; safecall;
    function Verify(_showErrors: WordBool): Integer; safecall;
    function Calculate(_createReinforcement: WordBool): WordBool; safecall;
    function Get_IsSelected: WordBool; safecall;
    procedure Set_IsSelected(ret: WordBool); safecall;
    property Reinforcement: IRConcrReinforcement read Get_Reinforcement;
    property Steel: IRConcrSteel read Get_Steel;
    property Concrete: IRConcrConcrete read Get_Concrete;
    property Name: WideString read Get_Name;
    property Geometry: IRConcrWallGeometry read Get_Geometry;
    property UniqueId: Integer read Get_UniqueId;
    property IsSelected: WordBool read Get_IsSelected write Set_IsSelected;
  end;

// *********************************************************************//
// DispIntf:  IRConcrWallDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B2646B54-7116-422C-9CED-8014720EA4CB}
// *********************************************************************//
  IRConcrWallDisp = dispinterface
    ['{B2646B54-7116-422C-9CED-8014720EA4CB}']
    property Reinforcement: IRConcrReinforcement readonly dispid 1610743808;
    property Steel: IRConcrSteel readonly dispid 1610743809;
    property Concrete: IRConcrConcrete readonly dispid 1610743810;
    property Name: WideString readonly dispid 1610743811;
    property Geometry: IRConcrWallGeometry readonly dispid 1610743812;
    property UniqueId: Integer readonly dispid 1610743813;
    function CreateCalculationNoteRtf(const _fileName: WideString): WordBool; dispid 1610743814;
    procedure Save; dispid 1610743815;
    function CreateFromObjects(const _selTaxt: WideString): WordBool; dispid 1610743816;
    procedure Activate; dispid 1610743817;
    function Verify(_showErrors: WordBool): Integer; dispid 1610743818;
    function Calculate(_createReinforcement: WordBool): WordBool; dispid 1610743819;
    property IsSelected: WordBool dispid 1610743820;
  end;

// *********************************************************************//
// Interface: IRConcrDeepBeamGeometry
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {17224138-D65D-4206-88C5-2B674A92AED8}
// *********************************************************************//
  IRConcrDeepBeamGeometry = interface(IDispatch)
    ['{17224138-D65D-4206-88C5-2B674A92AED8}']
  end;

// *********************************************************************//
// DispIntf:  IRConcrDeepBeamGeometryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {17224138-D65D-4206-88C5-2B674A92AED8}
// *********************************************************************//
  IRConcrDeepBeamGeometryDisp = dispinterface
    ['{17224138-D65D-4206-88C5-2B674A92AED8}']
  end;

// *********************************************************************//
// Interface: IRConcrDeepBeam
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C41A7A3F-B5A1-4903-8928-D34BEB966B9A}
// *********************************************************************//
  IRConcrDeepBeam = interface(IDispatch)
    ['{C41A7A3F-B5A1-4903-8928-D34BEB966B9A}']
    function Get_Reinforcement: IRConcrReinforcement; safecall;
    function Get_Steel: IRConcrSteel; safecall;
    function Get_Concrete: IRConcrConcrete; safecall;
    function Get_Name: WideString; safecall;
    function Get_IsActive: WordBool; safecall;
    function Get_Geometry: IRConcrDeepBeamGeometry; safecall;
    function Get_UniqueId: Integer; safecall;
    function CreateCalculationNoteRtf(const _fileName: WideString): WordBool; safecall;
    procedure Save; safecall;
    function CreateFromObjects(const _selText: WideString): WordBool; safecall;
    procedure Activate; safecall;
    function Get_IsSelected: WordBool; safecall;
    procedure Set_IsSelected(ret: WordBool); safecall;
    property Reinforcement: IRConcrReinforcement read Get_Reinforcement;
    property Steel: IRConcrSteel read Get_Steel;
    property Concrete: IRConcrConcrete read Get_Concrete;
    property Name: WideString read Get_Name;
    property IsActive: WordBool read Get_IsActive;
    property Geometry: IRConcrDeepBeamGeometry read Get_Geometry;
    property UniqueId: Integer read Get_UniqueId;
    property IsSelected: WordBool read Get_IsSelected write Set_IsSelected;
  end;

// *********************************************************************//
// DispIntf:  IRConcrDeepBeamDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C41A7A3F-B5A1-4903-8928-D34BEB966B9A}
// *********************************************************************//
  IRConcrDeepBeamDisp = dispinterface
    ['{C41A7A3F-B5A1-4903-8928-D34BEB966B9A}']
    property Reinforcement: IRConcrReinforcement readonly dispid 1610743808;
    property Steel: IRConcrSteel readonly dispid 1610743809;
    property Concrete: IRConcrConcrete readonly dispid 1610743810;
    property Name: WideString readonly dispid 1610743811;
    property IsActive: WordBool readonly dispid 1610743812;
    property Geometry: IRConcrDeepBeamGeometry readonly dispid 1610743813;
    property UniqueId: Integer readonly dispid 1610743814;
    function CreateCalculationNoteRtf(const _fileName: WideString): WordBool; dispid 1610743815;
    procedure Save; dispid 1610743816;
    function CreateFromObjects(const _selText: WideString): WordBool; dispid 1610743817;
    procedure Activate; dispid 1610743818;
    property IsSelected: WordBool dispid 1610743819;
  end;

// *********************************************************************//
// The Class CoDontUseIt provides a Create and CreateRemote method to          
// create instances of the default interface IDontUseIt exposed by              
// the CoClass DontUseIt. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDontUseIt = class
    class function Create: IDontUseIt;
    class function CreateRemote(const MachineName: string): IDontUseIt;
  end;

// *********************************************************************//
// The Class CoRobotLabel provides a Create and CreateRemote method to          
// create instances of the default interface IRobotLabel exposed by              
// the CoClass RobotLabel. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotLabel = class
    class function Create: IRobotLabel;
    class function CreateRemote(const MachineName: string): IRobotLabel;
  end;

// *********************************************************************//
// The Class CoRobotLabelServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotLabelServer exposed by              
// the CoClass RobotLabelServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotLabelServer = class
    class function Create: IRobotLabelServer;
    class function CreateRemote(const MachineName: string): IRobotLabelServer;
  end;

// *********************************************************************//
// The Class CoRobotLabelCollection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCollection exposed by              
// the CoClass RobotLabelCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotLabelCollection = class
    class function Create: IRobotCollection;
    class function CreateRemote(const MachineName: string): IRobotCollection;
  end;

// *********************************************************************//
// The Class CoRobotObjectLabelCollection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCollection exposed by              
// the CoClass RobotObjectLabelCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjectLabelCollection = class
    class function Create: IRobotCollection;
    class function CreateRemote(const MachineName: string): IRobotCollection;
  end;

// *********************************************************************//
// The Class CoRobotLoadRecord provides a Create and CreateRemote method to          
// create instances of the default interface IRobotLoadRecord2 exposed by              
// the CoClass RobotLoadRecord. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotLoadRecord = class
    class function Create: IRobotLoadRecord2;
    class function CreateRemote(const MachineName: string): IRobotLoadRecord2;
  end;

// *********************************************************************//
// The Class CoRobotLoadRecordMngr provides a Create and CreateRemote method to          
// create instances of the default interface IRobotLoadRecordMngr exposed by              
// the CoClass RobotLoadRecordMngr. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotLoadRecordMngr = class
    class function Create: IRobotLoadRecordMngr;
    class function CreateRemote(const MachineName: string): IRobotLoadRecordMngr;
  end;

// *********************************************************************//
// The Class CoRobotLoadRecordLinear provides a Create and CreateRemote method to          
// create instances of the default interface IRobotLoadRecordLinear exposed by              
// the CoClass RobotLoadRecordLinear. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotLoadRecordLinear = class
    class function Create: IRobotLoadRecordLinear;
    class function CreateRemote(const MachineName: string): IRobotLoadRecordLinear;
  end;

// *********************************************************************//
// The Class CoRobotLoadRecordLinear3D provides a Create and CreateRemote method to          
// create instances of the default interface IRobotLoadRecordLinear3D exposed by              
// the CoClass RobotLoadRecordLinear3D. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotLoadRecordLinear3D = class
    class function Create: IRobotLoadRecordLinear3D;
    class function CreateRemote(const MachineName: string): IRobotLoadRecordLinear3D;
  end;

// *********************************************************************//
// The Class CoRobotLoadRecordIn3Points provides a Create and CreateRemote method to          
// create instances of the default interface IRobotLoadRecordIn3Points exposed by              
// the CoClass RobotLoadRecordIn3Points. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotLoadRecordIn3Points = class
    class function Create: IRobotLoadRecordIn3Points;
    class function CreateRemote(const MachineName: string): IRobotLoadRecordIn3Points;
  end;

// *********************************************************************//
// The Class CoRobotLoadRecordThermalIn3Points provides a Create and CreateRemote method to          
// create instances of the default interface IRobotLoadRecordThermalIn3Points exposed by              
// the CoClass RobotLoadRecordThermalIn3Points. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotLoadRecordThermalIn3Points = class
    class function Create: IRobotLoadRecordThermalIn3Points;
    class function CreateRemote(const MachineName: string): IRobotLoadRecordThermalIn3Points;
  end;

// *********************************************************************//
// The Class CoRobotLoadRecordInContour provides a Create and CreateRemote method to          
// create instances of the default interface IRobotLoadRecordInContour exposed by              
// the CoClass RobotLoadRecordInContour. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotLoadRecordInContour = class
    class function Create: IRobotLoadRecordInContour;
    class function CreateRemote(const MachineName: string): IRobotLoadRecordInContour;
  end;

// *********************************************************************//
// The Class CoRobotSimpleCase provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSimpleCase exposed by              
// the CoClass RobotSimpleCase. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSimpleCase = class
    class function Create: IRobotSimpleCase;
    class function CreateRemote(const MachineName: string): IRobotSimpleCase;
  end;

// *********************************************************************//
// The Class CoRobotCaseCombination provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCaseCombination exposed by              
// the CoClass RobotCaseCombination. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCaseCombination = class
    class function Create: IRobotCaseCombination;
    class function CreateRemote(const MachineName: string): IRobotCaseCombination;
  end;

// *********************************************************************//
// The Class CoRobotCaseCollection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCaseCollection exposed by              
// the CoClass RobotCaseCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCaseCollection = class
    class function Create: IRobotCaseCollection;
    class function CreateRemote(const MachineName: string): IRobotCaseCollection;
  end;

// *********************************************************************//
// The Class CoRobotCaseFactor provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCaseFactor exposed by              
// the CoClass RobotCaseFactor. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCaseFactor = class
    class function Create: IRobotCaseFactor;
    class function CreateRemote(const MachineName: string): IRobotCaseFactor;
  end;

// *********************************************************************//
// The Class CoRobotCaseFactorMngr provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCaseFactorMngr exposed by              
// the CoClass RobotCaseFactorMngr. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCaseFactorMngr = class
    class function Create: IRobotCaseFactorMngr;
    class function CreateRemote(const MachineName: string): IRobotCaseFactorMngr;
  end;

// *********************************************************************//
// The Class CoRobotCaseServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCaseServer exposed by              
// the CoClass RobotCaseServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCaseServer = class
    class function Create: IRobotCaseServer;
    class function CreateRemote(const MachineName: string): IRobotCaseServer;
  end;

// *********************************************************************//
// The Class CoRobotCodeCmbComponentMngr provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCodeCmbComponentMngr exposed by              
// the CoClass RobotCodeCmbComponentMngr. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCodeCmbComponentMngr = class
    class function Create: IRobotCodeCmbComponentMngr;
    class function CreateRemote(const MachineName: string): IRobotCodeCmbComponentMngr;
  end;

// *********************************************************************//
// The Class CoRobotCodeCombination provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCodeCombination exposed by              
// the CoClass RobotCodeCombination. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCodeCombination = class
    class function Create: IRobotCodeCombination;
    class function CreateRemote(const MachineName: string): IRobotCodeCombination;
  end;

// *********************************************************************//
// The Class CoRobotCodeCmbFactor provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCodeCmbFactor exposed by              
// the CoClass RobotCodeCmbFactor. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCodeCmbFactor = class
    class function Create: IRobotCodeCmbFactor;
    class function CreateRemote(const MachineName: string): IRobotCodeCmbFactor;
  end;

// *********************************************************************//
// The Class CoRobotCodeCmbComponent provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCodeCmbComponent exposed by              
// the CoClass RobotCodeCmbComponent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCodeCmbComponent = class
    class function Create: IRobotCodeCmbComponent;
    class function CreateRemote(const MachineName: string): IRobotCodeCmbComponent;
  end;

// *********************************************************************//
// The Class CoRobotCodeCombinationEngine provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCodeCombinationEngine exposed by              
// the CoClass RobotCodeCombinationEngine. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCodeCombinationEngine = class
    class function Create: IRobotCodeCombinationEngine;
    class function CreateRemote(const MachineName: string): IRobotCodeCombinationEngine;
  end;

// *********************************************************************//
// The Class CoRobotMobileCase provides a Create and CreateRemote method to          
// create instances of the default interface IRobotMobileCase exposed by              
// the CoClass RobotMobileCase. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotMobileCase = class
    class function Create: IRobotMobileCase;
    class function CreateRemote(const MachineName: string): IRobotMobileCase;
  end;

// *********************************************************************//
// The Class CoRobotMobileCaseComponentMngr provides a Create and CreateRemote method to          
// create instances of the default interface IRobotMobileCaseComponentMngr exposed by              
// the CoClass RobotMobileCaseComponentMngr. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotMobileCaseComponentMngr = class
    class function Create: IRobotMobileCaseComponentMngr;
    class function CreateRemote(const MachineName: string): IRobotMobileCaseComponentMngr;
  end;

// *********************************************************************//
// The Class CoRobotMobileCaseComponent provides a Create and CreateRemote method to          
// create instances of the default interface IRobotMobileCaseComponent exposed by              
// the CoClass RobotMobileCaseComponent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotMobileCaseComponent = class
    class function Create: IRobotMobileCaseComponent;
    class function CreateRemote(const MachineName: string): IRobotMobileCaseComponent;
  end;

// *********************************************************************//
// The Class CoRobotMobileCaseRoute provides a Create and CreateRemote method to          
// create instances of the default interface IRobotMobileCaseRoute exposed by              
// the CoClass RobotMobileCaseRoute. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotMobileCaseRoute = class
    class function Create: IRobotMobileCaseRoute;
    class function CreateRemote(const MachineName: string): IRobotMobileCaseRoute;
  end;

// *********************************************************************//
// The Class CoRobotMobileCaseSegmentFactors provides a Create and CreateRemote method to          
// create instances of the default interface IRobotMobileCaseSegmentFactors exposed by              
// the CoClass RobotMobileCaseSegmentFactors. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotMobileCaseSegmentFactors = class
    class function Create: IRobotMobileCaseSegmentFactors;
    class function CreateRemote(const MachineName: string): IRobotMobileCaseSegmentFactors;
  end;

// *********************************************************************//
// The Class CoRobotNode provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNode exposed by              
// the CoClass RobotNode. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNode = class
    class function Create: IRobotNode;
    class function CreateRemote(const MachineName: string): IRobotNode;
  end;

// *********************************************************************//
// The Class CoRobotNodeCollection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCollection exposed by              
// the CoClass RobotNodeCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNodeCollection = class
    class function Create: IRobotCollection;
    class function CreateRemote(const MachineName: string): IRobotCollection;
  end;

// *********************************************************************//
// The Class CoRobotNodeServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNodeServer exposed by              
// the CoClass RobotNodeServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNodeServer = class
    class function Create: IRobotNodeServer;
    class function CreateRemote(const MachineName: string): IRobotNodeServer;
  end;

// *********************************************************************//
// The Class CoRobotNodeSupport provides a Create and CreateRemote method to          
// create instances of the default interface IRobotLabel exposed by              
// the CoClass RobotNodeSupport. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNodeSupport = class
    class function Create: IRobotLabel;
    class function CreateRemote(const MachineName: string): IRobotLabel;
  end;

// *********************************************************************//
// The Class CoRobotNodeSupportData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNodeSupportData exposed by              
// the CoClass RobotNodeSupportData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNodeSupportData = class
    class function Create: IRobotNodeSupportData;
    class function CreateRemote(const MachineName: string): IRobotNodeSupportData;
  end;

// *********************************************************************//
// The Class CoRobotBarEnd provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarEnd exposed by              
// the CoClass RobotBarEnd. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarEnd = class
    class function Create: IRobotBarEnd;
    class function CreateRemote(const MachineName: string): IRobotBarEnd;
  end;

// *********************************************************************//
// The Class CoRobotBar provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBar exposed by              
// the CoClass RobotBar. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBar = class
    class function Create: IRobotBar;
    class function CreateRemote(const MachineName: string): IRobotBar;
  end;

// *********************************************************************//
// The Class CoRobotBarCollection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCollection exposed by              
// the CoClass RobotBarCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarCollection = class
    class function Create: IRobotCollection;
    class function CreateRemote(const MachineName: string): IRobotCollection;
  end;

// *********************************************************************//
// The Class CoRobotBarServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarServer exposed by              
// the CoClass RobotBarServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarServer = class
    class function Create: IRobotBarServer;
    class function CreateRemote(const MachineName: string): IRobotBarServer;
  end;

// *********************************************************************//
// The Class CoRobotBarReleaseData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarReleaseData exposed by              
// the CoClass RobotBarReleaseData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarReleaseData = class
    class function Create: IRobotBarReleaseData;
    class function CreateRemote(const MachineName: string): IRobotBarReleaseData;
  end;

// *********************************************************************//
// The Class CoRobotBarEndReleaseData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarEndReleaseData exposed by              
// the CoClass RobotBarEndReleaseData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarEndReleaseData = class
    class function Create: IRobotBarEndReleaseData;
    class function CreateRemote(const MachineName: string): IRobotBarEndReleaseData;
  end;

// *********************************************************************//
// The Class CoRobotBarRelease provides a Create and CreateRemote method to          
// create instances of the default interface IRobotLabel exposed by              
// the CoClass RobotBarRelease. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarRelease = class
    class function Create: IRobotLabel;
    class function CreateRemote(const MachineName: string): IRobotLabel;
  end;

// *********************************************************************//
// The Class CoRobotMaterialData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotMaterialData exposed by              
// the CoClass RobotMaterialData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotMaterialData = class
    class function Create: IRobotMaterialData;
    class function CreateRemote(const MachineName: string): IRobotMaterialData;
  end;

// *********************************************************************//
// The Class CoRobotBarMaterial provides a Create and CreateRemote method to          
// create instances of the default interface IRobotLabel exposed by              
// the CoClass RobotBarMaterial. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarMaterial = class
    class function Create: IRobotLabel;
    class function CreateRemote(const MachineName: string): IRobotLabel;
  end;

// *********************************************************************//
// The Class CoRobotBarSectionNonstdData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarSectionNonstdData exposed by              
// the CoClass RobotBarSectionNonstdData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarSectionNonstdData = class
    class function Create: IRobotBarSectionNonstdData;
    class function CreateRemote(const MachineName: string): IRobotBarSectionNonstdData;
  end;

// *********************************************************************//
// The Class CoRobotBarSectionData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarSectionData exposed by              
// the CoClass RobotBarSectionData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarSectionData = class
    class function Create: IRobotBarSectionData;
    class function CreateRemote(const MachineName: string): IRobotBarSectionData;
  end;

// *********************************************************************//
// The Class CoRobotBarSection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotLabel exposed by              
// the CoClass RobotBarSection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarSection = class
    class function Create: IRobotLabel;
    class function CreateRemote(const MachineName: string): IRobotLabel;
  end;

// *********************************************************************//
// The Class CoRobotBarEndBracketData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarEndBracketData exposed by              
// the CoClass RobotBarEndBracketData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarEndBracketData = class
    class function Create: IRobotBarEndBracketData;
    class function CreateRemote(const MachineName: string): IRobotBarEndBracketData;
  end;

// *********************************************************************//
// The Class CoRobotBarEndOffsetData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarEndOffsetData exposed by              
// the CoClass RobotBarEndOffsetData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarEndOffsetData = class
    class function Create: IRobotBarEndOffsetData;
    class function CreateRemote(const MachineName: string): IRobotBarEndOffsetData;
  end;

// *********************************************************************//
// The Class CoRobotBarOffsetData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarOffsetData exposed by              
// the CoClass RobotBarOffsetData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarOffsetData = class
    class function Create: IRobotBarOffsetData;
    class function CreateRemote(const MachineName: string): IRobotBarOffsetData;
  end;

// *********************************************************************//
// The Class CoRobotThicknessData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotThicknessData exposed by              
// the CoClass RobotThicknessData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotThicknessData = class
    class function Create: IRobotThicknessData;
    class function CreateRemote(const MachineName: string): IRobotThicknessData;
  end;

// *********************************************************************//
// The Class CoRobotThicknessHomoData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotThicknessHomoData exposed by              
// the CoClass RobotThicknessHomoData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotThicknessHomoData = class
    class function Create: IRobotThicknessHomoData;
    class function CreateRemote(const MachineName: string): IRobotThicknessHomoData;
  end;

// *********************************************************************//
// The Class CoRobotThicknessMatrix provides a Create and CreateRemote method to          
// create instances of the default interface IRobotThicknessMatrix exposed by              
// the CoClass RobotThicknessMatrix. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotThicknessMatrix = class
    class function Create: IRobotThicknessMatrix;
    class function CreateRemote(const MachineName: string): IRobotThicknessMatrix;
  end;

// *********************************************************************//
// The Class CoRobotThicknessOrthoData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotThicknessOrthoData exposed by              
// the CoClass RobotThicknessOrthoData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotThicknessOrthoData = class
    class function Create: IRobotThicknessOrthoData;
    class function CreateRemote(const MachineName: string): IRobotThicknessOrthoData;
  end;

// *********************************************************************//
// The Class CoRobotResultServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotResultServer exposed by              
// the CoClass RobotResultServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotResultServer = class
    class function Create: IRobotResultServer;
    class function CreateRemote(const MachineName: string): IRobotResultServer;
  end;

// *********************************************************************//
// The Class CoRobotNodeResultServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNodeResultServer exposed by              
// the CoClass RobotNodeResultServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNodeResultServer = class
    class function Create: IRobotNodeResultServer;
    class function CreateRemote(const MachineName: string): IRobotNodeResultServer;
  end;

// *********************************************************************//
// The Class CoRobotReactionServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotReactionServer exposed by              
// the CoClass RobotReactionServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotReactionServer = class
    class function Create: IRobotReactionServer;
    class function CreateRemote(const MachineName: string): IRobotReactionServer;
  end;

// *********************************************************************//
// The Class CoRobotReactionData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotReactionData exposed by              
// the CoClass RobotReactionData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotReactionData = class
    class function Create: IRobotReactionData;
    class function CreateRemote(const MachineName: string): IRobotReactionData;
  end;

// *********************************************************************//
// The Class CoRobotNodeDisplacementServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNodeDisplacementServer exposed by              
// the CoClass RobotNodeDisplacementServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNodeDisplacementServer = class
    class function Create: IRobotNodeDisplacementServer;
    class function CreateRemote(const MachineName: string): IRobotNodeDisplacementServer;
  end;

// *********************************************************************//
// The Class CoRobotNodeDisplacementData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotDisplacementData exposed by              
// the CoClass RobotNodeDisplacementData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNodeDisplacementData = class
    class function Create: IRobotDisplacementData;
    class function CreateRemote(const MachineName: string): IRobotDisplacementData;
  end;

// *********************************************************************//
// The Class CoRobotBarResultServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarResultServer exposed by              
// the CoClass RobotBarResultServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarResultServer = class
    class function Create: IRobotBarResultServer;
    class function CreateRemote(const MachineName: string): IRobotBarResultServer;
  end;

// *********************************************************************//
// The Class CoRobotBarForceServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarForceServer exposed by              
// the CoClass RobotBarForceServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarForceServer = class
    class function Create: IRobotBarForceServer;
    class function CreateRemote(const MachineName: string): IRobotBarForceServer;
  end;

// *********************************************************************//
// The Class CoRobotBarForceData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarForceData exposed by              
// the CoClass RobotBarForceData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarForceData = class
    class function Create: IRobotBarForceData;
    class function CreateRemote(const MachineName: string): IRobotBarForceData;
  end;

// *********************************************************************//
// The Class CoRobotBarStressData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarStressData exposed by              
// the CoClass RobotBarStressData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarStressData = class
    class function Create: IRobotBarStressData;
    class function CreateRemote(const MachineName: string): IRobotBarStressData;
  end;

// *********************************************************************//
// The Class CoRobotBarStressServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarStressServer exposed by              
// the CoClass RobotBarStressServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarStressServer = class
    class function Create: IRobotBarStressServer;
    class function CreateRemote(const MachineName: string): IRobotBarStressServer;
  end;

// *********************************************************************//
// The Class CoRobotBarDeflectionData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarDeflectionData exposed by              
// the CoClass RobotBarDeflectionData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarDeflectionData = class
    class function Create: IRobotBarDeflectionData;
    class function CreateRemote(const MachineName: string): IRobotBarDeflectionData;
  end;

// *********************************************************************//
// The Class CoRobotBarDeflectionServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarDeflectionServer exposed by              
// the CoClass RobotBarDeflectionServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarDeflectionServer = class
    class function Create: IRobotBarDeflectionServer;
    class function CreateRemote(const MachineName: string): IRobotBarDeflectionServer;
  end;

// *********************************************************************//
// The Class CoRobotBarBucklingData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarBucklingData exposed by              
// the CoClass RobotBarBucklingData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarBucklingData = class
    class function Create: IRobotBarBucklingData;
    class function CreateRemote(const MachineName: string): IRobotBarBucklingData;
  end;

// *********************************************************************//
// The Class CoRobotBarBucklingServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarBucklingServer exposed by              
// the CoClass RobotBarBucklingServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarBucklingServer = class
    class function Create: IRobotBarBucklingServer;
    class function CreateRemote(const MachineName: string): IRobotBarBucklingServer;
  end;

// *********************************************************************//
// The Class CoRobotNodeBucklingServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNodeBucklingServer exposed by              
// the CoClass RobotNodeBucklingServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNodeBucklingServer = class
    class function Create: IRobotNodeBucklingServer;
    class function CreateRemote(const MachineName: string): IRobotNodeBucklingServer;
  end;

// *********************************************************************//
// The Class CoRobotEigenvalues provides a Create and CreateRemote method to          
// create instances of the default interface IRobotEigenvalues exposed by              
// the CoClass RobotEigenvalues. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotEigenvalues = class
    class function Create: IRobotEigenvalues;
    class function CreateRemote(const MachineName: string): IRobotEigenvalues;
  end;

// *********************************************************************//
// The Class CoRobotEigenvaluesServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotEigenvaluesServer exposed by              
// the CoClass RobotEigenvaluesServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotEigenvaluesServer = class
    class function Create: IRobotEigenvaluesServer;
    class function CreateRemote(const MachineName: string): IRobotEigenvaluesServer;
  end;

// *********************************************************************//
// The Class CoRobotAdvancedResultServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotAdvancedResultServer exposed by              
// the CoClass RobotAdvancedResultServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotAdvancedResultServer = class
    class function Create: IRobotAdvancedResultServer;
    class function CreateRemote(const MachineName: string): IRobotAdvancedResultServer;
  end;

// *********************************************************************//
// The Class CoRobotMassSumServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotMassSumServer exposed by              
// the CoClass RobotMassSumServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotMassSumServer = class
    class function Create: IRobotMassSumServer;
    class function CreateRemote(const MachineName: string): IRobotMassSumServer;
  end;

// *********************************************************************//
// The Class CoRobotSpectralCoefficients provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSpectralCoefficients exposed by              
// the CoClass RobotSpectralCoefficients. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSpectralCoefficients = class
    class function Create: IRobotSpectralCoefficients;
    class function CreateRemote(const MachineName: string): IRobotSpectralCoefficients;
  end;

// *********************************************************************//
// The Class CoRobotEigenvectorsServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotEigenvectorsServer exposed by              
// the CoClass RobotEigenvectorsServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotEigenvectorsServer = class
    class function Create: IRobotEigenvectorsServer;
    class function CreateRemote(const MachineName: string): IRobotEigenvectorsServer;
  end;

// *********************************************************************//
// The Class CoRobotVehicleData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotVehicleData exposed by              
// the CoClass RobotVehicleData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotVehicleData = class
    class function Create: IRobotVehicleData;
    class function CreateRemote(const MachineName: string): IRobotVehicleData;
  end;

// *********************************************************************//
// The Class CoRobotVehicleLoadMngr provides a Create and CreateRemote method to          
// create instances of the default interface IRobotVehicleLoadMngr exposed by              
// the CoClass RobotVehicleLoadMngr. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotVehicleLoadMngr = class
    class function Create: IRobotVehicleLoadMngr;
    class function CreateRemote(const MachineName: string): IRobotVehicleLoadMngr;
  end;

// *********************************************************************//
// The Class CoRobotVehicleLoad provides a Create and CreateRemote method to          
// create instances of the default interface IRobotVehicleLoad exposed by              
// the CoClass RobotVehicleLoad. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotVehicleLoad = class
    class function Create: IRobotVehicleLoad;
    class function CreateRemote(const MachineName: string): IRobotVehicleLoad;
  end;

// *********************************************************************//
// The Class CoRobotStructure provides a Create and CreateRemote method to          
// create instances of the default interface IRobotStructure exposed by              
// the CoClass RobotStructure. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotStructure = class
    class function Create: IRobotStructure;
    class function CreateRemote(const MachineName: string): IRobotStructure;
  end;

// *********************************************************************//
// The Class CoRobotForcesData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotForcesData exposed by              
// the CoClass RobotForcesData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotForcesData = class
    class function Create: IRobotForcesData;
    class function CreateRemote(const MachineName: string): IRobotForcesData;
  end;

// *********************************************************************//
// The Class CoRobotPseudostaticForceServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotPseudostaticForceServer exposed by              
// the CoClass RobotPseudostaticForceServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotPseudostaticForceServer = class
    class function Create: IRobotPseudostaticForceServer;
    class function CreateRemote(const MachineName: string): IRobotPseudostaticForceServer;
  end;

// *********************************************************************//
// The Class CoRobotDisplacementData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotDisplacementData exposed by              
// the CoClass RobotDisplacementData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotDisplacementData = class
    class function Create: IRobotDisplacementData;
    class function CreateRemote(const MachineName: string): IRobotDisplacementData;
  end;

// *********************************************************************//
// The Class CoRobotUniversalResultAccess provides a Create and CreateRemote method to          
// create instances of the default interface IRobotUniversalResultAccess exposed by              
// the CoClass RobotUniversalResultAccess. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotUniversalResultAccess = class
    class function Create: IRobotUniversalResultAccess;
    class function CreateRemote(const MachineName: string): IRobotUniversalResultAccess;
  end;

// *********************************************************************//
// The Class CoRobotCodeCmbRegulations provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCodeCmbRegulations exposed by              
// the CoClass RobotCodeCmbRegulations. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCodeCmbRegulations = class
    class function Create: IRobotCodeCmbRegulations;
    class function CreateRemote(const MachineName: string): IRobotCodeCmbRegulations;
  end;

// *********************************************************************//
// The Class CoRobotCodeCmbActionServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCodeCmbActionServer exposed by              
// the CoClass RobotCodeCmbActionServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCodeCmbActionServer = class
    class function Create: IRobotCodeCmbActionServer;
    class function CreateRemote(const MachineName: string): IRobotCodeCmbActionServer;
  end;

// *********************************************************************//
// The Class CoRobotCodeCmbCombs provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCodeCmbCombs exposed by              
// the CoClass RobotCodeCmbCombs. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCodeCmbCombs = class
    class function Create: IRobotCodeCmbCombs;
    class function CreateRemote(const MachineName: string): IRobotCodeCmbCombs;
  end;

// *********************************************************************//
// The Class CoRobotCodeCmbGenerationParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCodeCmbGenerationParams exposed by              
// the CoClass RobotCodeCmbGenerationParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCodeCmbGenerationParams = class
    class function Create: IRobotCodeCmbGenerationParams;
    class function CreateRemote(const MachineName: string): IRobotCodeCmbGenerationParams;
  end;

// *********************************************************************//
// The Class CoRobotCodeCmbGroup provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCodeCmbGroup exposed by              
// the CoClass RobotCodeCmbGroup. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCodeCmbGroup = class
    class function Create: IRobotCodeCmbGroup;
    class function CreateRemote(const MachineName: string): IRobotCodeCmbGroup;
  end;

// *********************************************************************//
// The Class CoRobotCodeCmbGroupServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCodeCmbGroupServer exposed by              
// the CoClass RobotCodeCmbGroupServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCodeCmbGroupServer = class
    class function Create: IRobotCodeCmbGroupServer;
    class function CreateRemote(const MachineName: string): IRobotCodeCmbGroupServer;
  end;

// *********************************************************************//
// The Class CoRobotCodeCmbGroupRelation provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCodeCmbGroupRelation exposed by              
// the CoClass RobotCodeCmbGroupRelation. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCodeCmbGroupRelation = class
    class function Create: IRobotCodeCmbGroupRelation;
    class function CreateRemote(const MachineName: string): IRobotCodeCmbGroupRelation;
  end;

// *********************************************************************//
// The Class CoRobotCodeCmbGroupRelationServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCodeCmbGroupRelationServer exposed by              
// the CoClass RobotCodeCmbGroupRelationServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCodeCmbGroupRelationServer = class
    class function Create: IRobotCodeCmbGroupRelationServer;
    class function CreateRemote(const MachineName: string): IRobotCodeCmbGroupRelationServer;
  end;

// *********************************************************************//
// The Class CoRobotCodeCmbActiveCaseInfo provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCodeCmbActiveCaseInfo exposed by              
// the CoClass RobotCodeCmbActiveCaseInfo. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCodeCmbActiveCaseInfo = class
    class function Create: IRobotCodeCmbActiveCaseInfo;
    class function CreateRemote(const MachineName: string): IRobotCodeCmbActiveCaseInfo;
  end;

// *********************************************************************//
// The Class CoRobotCodeCmbActiveCaseCollection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCollection exposed by              
// the CoClass RobotCodeCmbActiveCaseCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCodeCmbActiveCaseCollection = class
    class function Create: IRobotCollection;
    class function CreateRemote(const MachineName: string): IRobotCollection;
  end;

// *********************************************************************//
// The Class CoRobotModalAnalysisParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotModalAnalysisParams exposed by              
// the CoClass RobotModalAnalysisParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotModalAnalysisParams = class
    class function Create: IRobotModalAnalysisParams;
    class function CreateRemote(const MachineName: string): IRobotModalAnalysisParams;
  end;

// *********************************************************************//
// The Class CoRobotModalAnalysisBase provides a Create and CreateRemote method to          
// create instances of the default interface IRobotModalAnalysisBase exposed by              
// the CoClass RobotModalAnalysisBase. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotModalAnalysisBase = class
    class function Create: IRobotModalAnalysisBase;
    class function CreateRemote(const MachineName: string): IRobotModalAnalysisBase;
  end;

// *********************************************************************//
// The Class CoRobotModalAnalysisLimits provides a Create and CreateRemote method to          
// create instances of the default interface IRobotModalAnalysisLimits exposed by              
// the CoClass RobotModalAnalysisLimits. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotModalAnalysisLimits = class
    class function Create: IRobotModalAnalysisLimits;
    class function CreateRemote(const MachineName: string): IRobotModalAnalysisLimits;
  end;

// *********************************************************************//
// The Class CoRobotModalAnalysisShifts provides a Create and CreateRemote method to          
// create instances of the default interface IRobotModalAnalysisShifts exposed by              
// the CoClass RobotModalAnalysisShifts. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotModalAnalysisShifts = class
    class function Create: IRobotModalAnalysisShifts;
    class function CreateRemote(const MachineName: string): IRobotModalAnalysisShifts;
  end;

// *********************************************************************//
// The Class CoRobotBarCableData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarCableData exposed by              
// the CoClass RobotBarCableData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarCableData = class
    class function Create: IRobotBarCableData;
    class function CreateRemote(const MachineName: string): IRobotBarCableData;
  end;

// *********************************************************************//
// The Class CoRobotLinearReleaseData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotLinearReleaseData exposed by              
// the CoClass RobotLinearReleaseData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotLinearReleaseData = class
    class function Create: IRobotLinearReleaseData;
    class function CreateRemote(const MachineName: string): IRobotLinearReleaseData;
  end;

// *********************************************************************//
// The Class CoRobotBarElasticGroundData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarElasticGroundData exposed by              
// the CoClass RobotBarElasticGroundData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarElasticGroundData = class
    class function Create: IRobotBarElasticGroundData;
    class function CreateRemote(const MachineName: string): IRobotBarElasticGroundData;
  end;

// *********************************************************************//
// The Class CoRobotNodeRigidLinkData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNodeRigidLinkData exposed by              
// the CoClass RobotNodeRigidLinkData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNodeRigidLinkData = class
    class function Create: IRobotNodeRigidLinkData;
    class function CreateRemote(const MachineName: string): IRobotNodeRigidLinkData;
  end;

// *********************************************************************//
// The Class CoRobotNonlinearAnalysisParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNonlinearAnalysisParams exposed by              
// the CoClass RobotNonlinearAnalysisParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNonlinearAnalysisParams = class
    class function Create: IRobotNonlinearAnalysisParams;
    class function CreateRemote(const MachineName: string): IRobotNonlinearAnalysisParams;
  end;

// *********************************************************************//
// The Class CoRobotNodeRigidLinkDef provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNodeRigidLinkDef exposed by              
// the CoClass RobotNodeRigidLinkDef. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNodeRigidLinkDef = class
    class function Create: IRobotNodeRigidLinkDef;
    class function CreateRemote(const MachineName: string): IRobotNodeRigidLinkDef;
  end;

// *********************************************************************//
// The Class CoRobotNodeRigidLinkServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNodeRigidLinkServer exposed by              
// the CoClass RobotNodeRigidLinkServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNodeRigidLinkServer = class
    class function Create: IRobotNodeRigidLinkServer;
    class function CreateRemote(const MachineName: string): IRobotNodeRigidLinkServer;
  end;

// *********************************************************************//
// The Class CoRobotCaseAnalysisModesFilter provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCaseAnalysisModesFilter exposed by              
// the CoClass RobotCaseAnalysisModesFilter. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCaseAnalysisModesFilter = class
    class function Create: IRobotCaseAnalysisModesFilter;
    class function CreateRemote(const MachineName: string): IRobotCaseAnalysisModesFilter;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_PS_92_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_PS_92_Params exposed by              
// the CoClass RobotSeismicAnalysis_PS_92_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_PS_92_Params = class
    class function Create: IRobotSeismicAnalysis_PS_92_Params;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_PS_92_Params;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_PS_92_SiteEnvelope provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_PS_92_SiteEnvelope exposed by              
// the CoClass RobotSeismicAnalysis_PS_92_SiteEnvelope. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_PS_92_SiteEnvelope = class
    class function Create: IRobotSeismicAnalysis_PS_92_SiteEnvelope;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_PS_92_SiteEnvelope;
  end;

// *********************************************************************//
// The Class CoRobotDynamicAnalysisExcitationDirection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotDynamicAnalysisExcitationDirection exposed by              
// the CoClass RobotDynamicAnalysisExcitationDirection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotDynamicAnalysisExcitationDirection = class
    class function Create: IRobotDynamicAnalysisExcitationDirection;
    class function CreateRemote(const MachineName: string): IRobotDynamicAnalysisExcitationDirection;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_PS_69_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_PS_69_Params exposed by              
// the CoClass RobotSeismicAnalysis_PS_69_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_PS_69_Params = class
    class function Create: IRobotSeismicAnalysis_PS_69_Params;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_PS_69_Params;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_P_100_92_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_P_100_92_Params exposed by              
// the CoClass RobotSeismicAnalysis_P_100_92_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_P_100_92_Params = class
    class function Create: IRobotSeismicAnalysis_P_100_92_Params;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_P_100_92_Params;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_EC_8_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_EC_8_Params exposed by              
// the CoClass RobotSeismicAnalysis_EC_8_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_EC_8_Params = class
    class function Create: IRobotSeismicAnalysis_EC_8_Params;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_EC_8_Params;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_EAK_2000_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_EAK_2000_Params exposed by              
// the CoClass RobotSeismicAnalysis_EAK_2000_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_EAK_2000_Params = class
    class function Create: IRobotSeismicAnalysis_EAK_2000_Params;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_EAK_2000_Params;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_P_100_2006_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_P_100_2006_Params exposed by              
// the CoClass RobotSeismicAnalysis_P_100_2006_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_P_100_2006_Params = class
    class function Create: IRobotSeismicAnalysis_P_100_2006_Params;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_P_100_2006_Params;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_IBC_2006_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_IBC_2006_Params exposed by              
// the CoClass RobotSeismicAnalysis_IBC_2006_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_IBC_2006_Params = class
    class function Create: IRobotSeismicAnalysis_IBC_2006_Params;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_IBC_2006_Params;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_IBC_2000_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_IBC_2000_Params exposed by              
// the CoClass RobotSeismicAnalysis_IBC_2000_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_IBC_2000_Params = class
    class function Create: IRobotSeismicAnalysis_IBC_2000_Params;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_IBC_2000_Params;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_UBC_97_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_UBC_97_Params exposed by              
// the CoClass RobotSeismicAnalysis_UBC_97_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_UBC_97_Params = class
    class function Create: IRobotSeismicAnalysis_UBC_97_Params;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_UBC_97_Params;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_TURKISH_23098_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_TURKISH_23098_Params exposed by              
// the CoClass RobotSeismicAnalysis_TURKISH_23098_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_TURKISH_23098_Params = class
    class function Create: IRobotSeismicAnalysis_TURKISH_23098_Params;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_TURKISH_23098_Params;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_RPA_88_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_RPA_88_Params exposed by              
// the CoClass RobotSeismicAnalysis_RPA_88_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_RPA_88_Params = class
    class function Create: IRobotSeismicAnalysis_RPA_88_Params;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_RPA_88_Params;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_DM_16_1_96_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_DM_16_1_96_Params exposed by              
// the CoClass RobotSeismicAnalysis_DM_16_1_96_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_DM_16_1_96_Params = class
    class function Create: IRobotSeismicAnalysis_DM_16_1_96_Params;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_DM_16_1_96_Params;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_AFPS_90_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_AFPS_90_Params exposed by              
// the CoClass RobotSeismicAnalysis_AFPS_90_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_AFPS_90_Params = class
    class function Create: IRobotSeismicAnalysis_AFPS_90_Params;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_AFPS_90_Params;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_CHINESE_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_CHINESE_Params exposed by              
// the CoClass RobotSeismicAnalysis_CHINESE_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_CHINESE_Params = class
    class function Create: IRobotSeismicAnalysis_CHINESE_Params;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_CHINESE_Params;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_CIRSOC_103_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_CIRSOC_103_Params exposed by              
// the CoClass RobotSeismicAnalysis_CIRSOC_103_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_CIRSOC_103_Params = class
    class function Create: IRobotSeismicAnalysis_CIRSOC_103_Params;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_CIRSOC_103_Params;
  end;

// *********************************************************************//
// The Class CoRobotSpectralAnalysisSpectrum provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSpectralAnalysisSpectrum exposed by              
// the CoClass RobotSpectralAnalysisSpectrum. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSpectralAnalysisSpectrum = class
    class function Create: IRobotSpectralAnalysisSpectrum;
    class function CreateRemote(const MachineName: string): IRobotSpectralAnalysisSpectrum;
  end;

// *********************************************************************//
// The Class CoRobotSpectralAnalysisParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSpectralAnalysisParams exposed by              
// the CoClass RobotSpectralAnalysisParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSpectralAnalysisParams = class
    class function Create: IRobotSpectralAnalysisParams;
    class function CreateRemote(const MachineName: string): IRobotSpectralAnalysisParams;
  end;

// *********************************************************************//
// The Class CoRobotBarDisplacementServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarDisplacementServer exposed by              
// the CoClass RobotBarDisplacementServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarDisplacementServer = class
    class function Create: IRobotBarDisplacementServer;
    class function CreateRemote(const MachineName: string): IRobotBarDisplacementServer;
  end;

// *********************************************************************//
// The Class CoRobotNodeCompatibilityData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNodeCompatibilityData exposed by              
// the CoClass RobotNodeCompatibilityData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNodeCompatibilityData = class
    class function Create: IRobotNodeCompatibilityData;
    class function CreateRemote(const MachineName: string): IRobotNodeCompatibilityData;
  end;

// *********************************************************************//
// The Class CoRobotNodeCompatibilityDef provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNodeCompatibilityDef exposed by              
// the CoClass RobotNodeCompatibilityDef. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNodeCompatibilityDef = class
    class function Create: IRobotNodeCompatibilityDef;
    class function CreateRemote(const MachineName: string): IRobotNodeCompatibilityDef;
  end;

// *********************************************************************//
// The Class CoRobotNodeCompatibilityServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNodeCompatibilityServer exposed by              
// the CoClass RobotNodeCompatibilityServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNodeCompatibilityServer = class
    class function Create: IRobotNodeCompatibilityServer;
    class function CreateRemote(const MachineName: string): IRobotNodeCompatibilityServer;
  end;

// *********************************************************************//
// The Class CoRobotModalWithStaticForcesAnalysisParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotModalWithStaticForcesAnalysisParams exposed by              
// the CoClass RobotModalWithStaticForcesAnalysisParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotModalWithStaticForcesAnalysisParams = class
    class function Create: IRobotModalWithStaticForcesAnalysisParams;
    class function CreateRemote(const MachineName: string): IRobotModalWithStaticForcesAnalysisParams;
  end;

// *********************************************************************//
// The Class CoRobotBarSectionConcreteData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarSectionConcreteData exposed by              
// the CoClass RobotBarSectionConcreteData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarSectionConcreteData = class
    class function Create: IRobotBarSectionConcreteData;
    class function CreateRemote(const MachineName: string): IRobotBarSectionConcreteData;
  end;

// *********************************************************************//
// The Class CoRobotAppKernel provides a Create and CreateRemote method to          
// create instances of the default interface IRobotKernel exposed by              
// the CoClass RobotAppKernel. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotAppKernel = class
    class function Create: IRobotKernel;
    class function CreateRemote(const MachineName: string): IRobotKernel;
  end;

// *********************************************************************//
// The Class CoRobotAppAuthenticateService provides a Create and CreateRemote method to          
// create instances of the default interface IRobotAuthenticateService exposed by              
// the CoClass RobotAppAuthenticateService. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotAppAuthenticateService = class
    class function Create: IRobotAuthenticateService;
    class function CreateRemote(const MachineName: string): IRobotAuthenticateService;
  end;

// *********************************************************************//
// The Class CoRDimMemberType provides a Create and CreateRemote method to          
// create instances of the default interface IRDimMemberType exposed by              
// the CoClass RDimMemberType. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimMemberType = class
    class function Create: IRDimMemberType;
    class function CreateRemote(const MachineName: string): IRDimMemberType;
  end;

// *********************************************************************//
// The Class CoRobotBucklingAnalysisParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBucklingAnalysisParams exposed by              
// the CoClass RobotBucklingAnalysisParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBucklingAnalysisParams = class
    class function Create: IRobotBucklingAnalysisParams;
    class function CreateRemote(const MachineName: string): IRobotBucklingAnalysisParams;
  end;

// *********************************************************************//
// The Class CoRobotHarmonicAnalysisParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotHarmonicAnalysisParams exposed by              
// the CoClass RobotHarmonicAnalysisParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotHarmonicAnalysisParams = class
    class function Create: IRobotHarmonicAnalysisParams;
    class function CreateRemote(const MachineName: string): IRobotHarmonicAnalysisParams;
  end;

// *********************************************************************//
// The Class CoRobotLimits provides a Create and CreateRemote method to          
// create instances of the default interface IRobotModalAnalysisLimits exposed by              
// the CoClass RobotLimits. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotLimits = class
    class function Create: IRobotModalAnalysisLimits;
    class function CreateRemote(const MachineName: string): IRobotModalAnalysisLimits;
  end;

// *********************************************************************//
// The Class CoRobotTimeHistoryAnalysisParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotTimeHistoryAnalysisParams exposed by              
// the CoClass RobotTimeHistoryAnalysisParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotTimeHistoryAnalysisParams = class
    class function Create: IRobotTimeHistoryAnalysisParams;
    class function CreateRemote(const MachineName: string): IRobotTimeHistoryAnalysisParams;
  end;

// *********************************************************************//
// The Class CoRobotTimeHistoryNewmarkParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotTimeHistoryNewmarkParams exposed by              
// the CoClass RobotTimeHistoryNewmarkParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotTimeHistoryNewmarkParams = class
    class function Create: IRobotTimeHistoryNewmarkParams;
    class function CreateRemote(const MachineName: string): IRobotTimeHistoryNewmarkParams;
  end;

// *********************************************************************//
// The Class CoRobotTimeHistoryModalDecompositionParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotTimeHistoryModalDecompositionParams exposed by              
// the CoClass RobotTimeHistoryModalDecompositionParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotTimeHistoryModalDecompositionParams = class
    class function Create: IRobotTimeHistoryModalDecompositionParams;
    class function CreateRemote(const MachineName: string): IRobotTimeHistoryModalDecompositionParams;
  end;

// *********************************************************************//
// The Class CoRobotTimeHistoryPointsCollection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotTimeHistoryPointsCollection exposed by              
// the CoClass RobotTimeHistoryPointsCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotTimeHistoryPointsCollection = class
    class function Create: IRobotTimeHistoryPointsCollection;
    class function CreateRemote(const MachineName: string): IRobotTimeHistoryPointsCollection;
  end;

// *********************************************************************//
// The Class CoRobotTimeHistoryFunctionList provides a Create and CreateRemote method to          
// create instances of the default interface IRobotTimeHistoryFunctionList exposed by              
// the CoClass RobotTimeHistoryFunctionList. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotTimeHistoryFunctionList = class
    class function Create: IRobotTimeHistoryFunctionList;
    class function CreateRemote(const MachineName: string): IRobotTimeHistoryFunctionList;
  end;

// *********************************************************************//
// The Class CoRobotTimeHistoryNonlinearParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotTimeHistoryNonlinearParams exposed by              
// the CoClass RobotTimeHistoryNonlinearParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotTimeHistoryNonlinearParams = class
    class function Create: IRobotTimeHistoryNonlinearParams;
    class function CreateRemote(const MachineName: string): IRobotTimeHistoryNonlinearParams;
  end;

// *********************************************************************//
// The Class CoRobotTimeHistoryPredictorCorectorParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotTimeHistoryPredictorCorectorParams exposed by              
// the CoClass RobotTimeHistoryPredictorCorectorParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotTimeHistoryPredictorCorectorParams = class
    class function Create: IRobotTimeHistoryPredictorCorectorParams;
    class function CreateRemote(const MachineName: string): IRobotTimeHistoryPredictorCorectorParams;
  end;

// *********************************************************************//
// The Class CoRobotBarElement provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarElement exposed by              
// the CoClass RobotBarElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarElement = class
    class function Create: IRobotBarElement;
    class function CreateRemote(const MachineName: string): IRobotBarElement;
  end;

// *********************************************************************//
// The Class CoRobotBarElementCollection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCollection exposed by              
// the CoClass RobotBarElementCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarElementCollection = class
    class function Create: IRobotCollection;
    class function CreateRemote(const MachineName: string): IRobotCollection;
  end;

// *********************************************************************//
// The Class CoRobotPushOverAnalysisParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotPushOverAnalysisParams exposed by              
// the CoClass RobotPushOverAnalysisParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotPushOverAnalysisParams = class
    class function Create: IRobotPushOverAnalysisParams;
    class function CreateRemote(const MachineName: string): IRobotPushOverAnalysisParams;
  end;

// *********************************************************************//
// The Class CoRobotSolidPropertiesData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSolidPropertiesData exposed by              
// the CoClass RobotSolidPropertiesData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSolidPropertiesData = class
    class function Create: IRobotSolidPropertiesData;
    class function CreateRemote(const MachineName: string): IRobotSolidPropertiesData;
  end;

// *********************************************************************//
// The Class CoRobotNonlinearLinkServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNonlinearLinkServer exposed by              
// the CoClass RobotNonlinearLinkServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNonlinearLinkServer = class
    class function Create: IRobotNonlinearLinkServer;
    class function CreateRemote(const MachineName: string): IRobotNonlinearLinkServer;
  end;

// *********************************************************************//
// The Class CoRobotNonlinearLink provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNonlinearLink exposed by              
// the CoClass RobotNonlinearLink. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNonlinearLink = class
    class function Create: IRobotNonlinearLink;
    class function CreateRemote(const MachineName: string): IRobotNonlinearLink;
  end;

// *********************************************************************//
// The Class CoRobotNonlinearLinkParamsLinear provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNonlinearLinkParamsLinear exposed by              
// the CoClass RobotNonlinearLinkParamsLinear. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNonlinearLinkParamsLinear = class
    class function Create: IRobotNonlinearLinkParamsLinear;
    class function CreateRemote(const MachineName: string): IRobotNonlinearLinkParamsLinear;
  end;

// *********************************************************************//
// The Class CoRobotNonlinearLinkParamsBLinear provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNonlinearLinkParamsBLinear exposed by              
// the CoClass RobotNonlinearLinkParamsBLinear. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNonlinearLinkParamsBLinear = class
    class function Create: IRobotNonlinearLinkParamsBLinear;
    class function CreateRemote(const MachineName: string): IRobotNonlinearLinkParamsBLinear;
  end;

// *********************************************************************//
// The Class CoRobotNonlinearLinkParamsParabolic provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNonlinearLinkParamsParabolic exposed by              
// the CoClass RobotNonlinearLinkParamsParabolic. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNonlinearLinkParamsParabolic = class
    class function Create: IRobotNonlinearLinkParamsParabolic;
    class function CreateRemote(const MachineName: string): IRobotNonlinearLinkParamsParabolic;
  end;

// *********************************************************************//
// The Class CoRobotNonlinearLinkParamsPlastic provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNonlinearLinkParamsPlastic exposed by              
// the CoClass RobotNonlinearLinkParamsPlastic. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNonlinearLinkParamsPlastic = class
    class function Create: IRobotNonlinearLinkParamsPlastic;
    class function CreateRemote(const MachineName: string): IRobotNonlinearLinkParamsPlastic;
  end;

// *********************************************************************//
// The Class CoRobotNonlinearLinkParamsPlasticHardening provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNonlinearLinkParamsPlasticHardening exposed by              
// the CoClass RobotNonlinearLinkParamsPlasticHardening. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNonlinearLinkParamsPlasticHardening = class
    class function Create: IRobotNonlinearLinkParamsPlasticHardening;
    class function CreateRemote(const MachineName: string): IRobotNonlinearLinkParamsPlasticHardening;
  end;

// *********************************************************************//
// The Class CoRobotNonlinearLinkParamsGapHook provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNonlinearLinkParamsGapHook exposed by              
// the CoClass RobotNonlinearLinkParamsGapHook. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNonlinearLinkParamsGapHook = class
    class function Create: IRobotNonlinearLinkParamsGapHook;
    class function CreateRemote(const MachineName: string): IRobotNonlinearLinkParamsGapHook;
  end;

// *********************************************************************//
// The Class CoRobotNonlinearLinkParamsCustom provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNonlinearLinkParamsCustom exposed by              
// the CoClass RobotNonlinearLinkParamsCustom. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNonlinearLinkParamsCustom = class
    class function Create: IRobotNonlinearLinkParamsCustom;
    class function CreateRemote(const MachineName: string): IRobotNonlinearLinkParamsCustom;
  end;

// *********************************************************************//
// The Class CoRobotNonlinearLinkParamsCustomSegment provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNonlinearLinkParamsCustomSegment exposed by              
// the CoClass RobotNonlinearLinkParamsCustomSegment. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNonlinearLinkParamsCustomSegment = class
    class function Create: IRobotNonlinearLinkParamsCustomSegment;
    class function CreateRemote(const MachineName: string): IRobotNonlinearLinkParamsCustomSegment;
  end;

// *********************************************************************//
// The Class CoRobotNonlinearLinkMngr provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNonlinearLinkMngr exposed by              
// the CoClass RobotNonlinearLinkMngr. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNonlinearLinkMngr = class
    class function Create: IRobotNonlinearLinkMngr;
    class function CreateRemote(const MachineName: string): IRobotNonlinearLinkMngr;
  end;

// *********************************************************************//
// The Class CoRobotBarGeoImperfectionsData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarGeoImperfectionsData exposed by              
// the CoClass RobotBarGeoImperfectionsData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarGeoImperfectionsData = class
    class function Create: IRobotBarGeoImperfectionsData;
    class function CreateRemote(const MachineName: string): IRobotBarGeoImperfectionsData;
  end;

// *********************************************************************//
// The Class CoRobotTimeHistoryResults provides a Create and CreateRemote method to          
// create instances of the default interface IRobotTimeHistoryResults exposed by              
// the CoClass RobotTimeHistoryResults. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotTimeHistoryResults = class
    class function Create: IRobotTimeHistoryResults;
    class function CreateRemote(const MachineName: string): IRobotTimeHistoryResults;
  end;

// *********************************************************************//
// The Class CoRobotTimeHistoryResultServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotTimeHistoryResultServer exposed by              
// the CoClass RobotTimeHistoryResultServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotTimeHistoryResultServer = class
    class function Create: IRobotTimeHistoryResultServer;
    class function CreateRemote(const MachineName: string): IRobotTimeHistoryResultServer;
  end;

// *********************************************************************//
// The Class CoRobotExtremeValue provides a Create and CreateRemote method to          
// create instances of the default interface IRobotExtremeValue exposed by              
// the CoClass RobotExtremeValue. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotExtremeValue = class
    class function Create: IRobotExtremeValue;
    class function CreateRemote(const MachineName: string): IRobotExtremeValue;
  end;

// *********************************************************************//
// The Class CoRobotExtremeParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotExtremeParams exposed by              
// the CoClass RobotExtremeParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotExtremeParams = class
    class function Create: IRobotExtremeParams;
    class function CreateRemote(const MachineName: string): IRobotExtremeParams;
  end;

// *********************************************************************//
// The Class CoRobotExtremeResultServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotExtremeResultServer exposed by              
// the CoClass RobotExtremeResultServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotExtremeResultServer = class
    class function Create: IRobotExtremeResultServer;
    class function CreateRemote(const MachineName: string): IRobotExtremeResultServer;
  end;

// *********************************************************************//
// The Class CoRobotStructureEditTools provides a Create and CreateRemote method to          
// create instances of the default interface IRobotStructureEditTools exposed by              
// the CoClass RobotStructureEditTools. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotStructureEditTools = class
    class function Create: IRobotStructureEditTools;
    class function CreateRemote(const MachineName: string): IRobotStructureEditTools;
  end;

// *********************************************************************//
// The Class CoRobotStructureCache provides a Create and CreateRemote method to          
// create instances of the default interface IRobotStructureCache exposed by              
// the CoClass RobotStructureCache. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotStructureCache = class
    class function Create: IRobotStructureCache;
    class function CreateRemote(const MachineName: string): IRobotStructureCache;
  end;

// *********************************************************************//
// The Class CoRobotStructureApplyInfo provides a Create and CreateRemote method to          
// create instances of the default interface IRobotStructureApplyInfo exposed by              
// the CoClass RobotStructureApplyInfo. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotStructureApplyInfo = class
    class function Create: IRobotStructureApplyInfo;
    class function CreateRemote(const MachineName: string): IRobotStructureApplyInfo;
  end;

// *********************************************************************//
// The Class CoRobotBarSectionComplexData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarSectionComplexData exposed by              
// the CoClass RobotBarSectionComplexData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarSectionComplexData = class
    class function Create: IRobotBarSectionComplexData;
    class function CreateRemote(const MachineName: string): IRobotBarSectionComplexData;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_RPS_2000_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_RPS_2000_Params exposed by              
// the CoClass RobotSeismicAnalysis_RPS_2000_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_RPS_2000_Params = class
    class function Create: IRobotSeismicAnalysis_RPS_2000_Params;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_RPS_2000_Params;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_RPA_2003_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_RPA_2003_Params exposed by              
// the CoClass RobotSeismicAnalysis_RPA_2003_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_RPA_2003_Params = class
    class function Create: IRobotSeismicAnalysis_RPA_2003_Params;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_RPA_2003_Params;
  end;

// *********************************************************************//
// The Class CoRobotStorey provides a Create and CreateRemote method to          
// create instances of the default interface IRobotStorey exposed by              
// the CoClass RobotStorey. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotStorey = class
    class function Create: IRobotStorey;
    class function CreateRemote(const MachineName: string): IRobotStorey;
  end;

// *********************************************************************//
// The Class CoRobotStoreyMngr provides a Create and CreateRemote method to          
// create instances of the default interface IRobotStoreyMngr exposed by              
// the CoClass RobotStoreyMngr. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotStoreyMngr = class
    class function Create: IRobotStoreyMngr;
    class function CreateRemote(const MachineName: string): IRobotStoreyMngr;
  end;

// *********************************************************************//
// The Class CoRobotMassEccentricities provides a Create and CreateRemote method to          
// create instances of the default interface IRobotMassEccentricities exposed by              
// the CoClass RobotMassEccentricities. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotMassEccentricities = class
    class function Create: IRobotMassEccentricities;
    class function CreateRemote(const MachineName: string): IRobotMassEccentricities;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_ITALY_ORDINANZA_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_ITALY_ORDINANZA_Params exposed by              
// the CoClass RobotSeismicAnalysis_ITALY_ORDINANZA_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_ITALY_ORDINANZA_Params = class
    class function Create: IRobotSeismicAnalysis_ITALY_ORDINANZA_Params;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_ITALY_ORDINANZA_Params;
  end;

// *********************************************************************//
// The Class CoRobotGroupObjectServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotGroupObjectServer exposed by              
// the CoClass RobotGroupObjectServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotGroupObjectServer = class
    class function Create: IRobotGroupObjectServer;
    class function CreateRemote(const MachineName: string): IRobotGroupObjectServer;
  end;

// *********************************************************************//
// The Class CoRobotStructureValues provides a Create and CreateRemote method to          
// create instances of the default interface IRobotStructureValues exposed by              
// the CoClass RobotStructureValues. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotStructureValues = class
    class function Create: IRobotStructureValues;
    class function CreateRemote(const MachineName: string): IRobotStructureValues;
  end;

// *********************************************************************//
// The Class CoRobotMaterialQuantitySurvey provides a Create and CreateRemote method to          
// create instances of the default interface IRobotMaterialQuantitySurvey exposed by              
// the CoClass RobotMaterialQuantitySurvey. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotMaterialQuantitySurvey = class
    class function Create: IRobotMaterialQuantitySurvey;
    class function CreateRemote(const MachineName: string): IRobotMaterialQuantitySurvey;
  end;

// *********************************************************************//
// The Class CoRobotBarSectionQuantitySurvey provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarSectionQuantitySurvey exposed by              
// the CoClass RobotBarSectionQuantitySurvey. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarSectionQuantitySurvey = class
    class function Create: IRobotBarSectionQuantitySurvey;
    class function CreateRemote(const MachineName: string): IRobotBarSectionQuantitySurvey;
  end;

// *********************************************************************//
// The Class CoRobotThicknessQuantitySurvey provides a Create and CreateRemote method to          
// create instances of the default interface IRobotThicknessQuantitySurvey exposed by              
// the CoClass RobotThicknessQuantitySurvey. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotThicknessQuantitySurvey = class
    class function Create: IRobotThicknessQuantitySurvey;
    class function CreateRemote(const MachineName: string): IRobotThicknessQuantitySurvey;
  end;

// *********************************************************************//
// The Class CoRobotStructureQuantitySurvey provides a Create and CreateRemote method to          
// create instances of the default interface IRobotStructureQuantitySurvey exposed by              
// the CoClass RobotStructureQuantitySurvey. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotStructureQuantitySurvey = class
    class function Create: IRobotStructureQuantitySurvey;
    class function CreateRemote(const MachineName: string): IRobotStructureQuantitySurvey;
  end;

// *********************************************************************//
// The Class CoRobotStructureMergeData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotStructureMergeData exposed by              
// the CoClass RobotStructureMergeData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotStructureMergeData = class
    class function Create: IRobotStructureMergeData;
    class function CreateRemote(const MachineName: string): IRobotStructureMergeData;
  end;

// *********************************************************************//
// The Class CoRobotResultQueryParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotResultQueryParams exposed by              
// the CoClass RobotResultQueryParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotResultQueryParams = class
    class function Create: IRobotResultQueryParams;
    class function CreateRemote(const MachineName: string): IRobotResultQueryParams;
  end;

// *********************************************************************//
// The Class CoRobotSupportEquivalentWallElasticity provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSupportEquivalentWallElasticity exposed by              
// the CoClass RobotSupportEquivalentWallElasticity. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSupportEquivalentWallElasticity = class
    class function Create: IRobotSupportEquivalentWallElasticity;
    class function CreateRemote(const MachineName: string): IRobotSupportEquivalentWallElasticity;
  end;

// *********************************************************************//
// The Class CoRobotSupportEquivalentColumnElasticity provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSupportEquivalentColumnElasticity exposed by              
// the CoClass RobotSupportEquivalentColumnElasticity. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSupportEquivalentColumnElasticity = class
    class function Create: IRobotSupportEquivalentColumnElasticity;
    class function CreateRemote(const MachineName: string): IRobotSupportEquivalentColumnElasticity;
  end;

// *********************************************************************//
// The Class CoRobotAdvancedSupportData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotAdvancedSupportData exposed by              
// the CoClass RobotAdvancedSupportData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotAdvancedSupportData = class
    class function Create: IRobotAdvancedSupportData;
    class function CreateRemote(const MachineName: string): IRobotAdvancedSupportData;
  end;

// *********************************************************************//
// The Class CoRobotLoadRecordBarTrapezoidal provides a Create and CreateRemote method to          
// create instances of the default interface IRobotLoadRecordBarTrapezoidal exposed by              
// the CoClass RobotLoadRecordBarTrapezoidal. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotLoadRecordBarTrapezoidal = class
    class function Create: IRobotLoadRecordBarTrapezoidal;
    class function CreateRemote(const MachineName: string): IRobotLoadRecordBarTrapezoidal;
  end;

// *********************************************************************//
// The Class CoRobotBarSectionSpecialData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarSectionSpecialData exposed by              
// the CoClass RobotBarSectionSpecialData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarSectionSpecialData = class
    class function Create: IRobotBarSectionSpecialData;
    class function CreateRemote(const MachineName: string): IRobotBarSectionSpecialData;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_PS_92_2008_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_PS_92_2008_Params exposed by              
// the CoClass RobotSeismicAnalysis_PS_92_2008_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_PS_92_2008_Params = class
    class function Create: IRobotSeismicAnalysis_PS_92_2008_Params;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_PS_92_2008_Params;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_PS_92_2008_SiteEnvelope provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_PS_92_2008_SiteEnvelope exposed by              
// the CoClass RobotSeismicAnalysis_PS_92_2008_SiteEnvelope. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_PS_92_2008_SiteEnvelope = class
    class function Create: IRobotSeismicAnalysis_PS_92_2008_SiteEnvelope;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_PS_92_2008_SiteEnvelope;
  end;

// *********************************************************************//
// The Class CoRobotLoadRecordDead provides a Create and CreateRemote method to          
// create instances of the default interface IRobotLoadRecordDead exposed by              
// the CoClass RobotLoadRecordDead. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotLoadRecordDead = class
    class function Create: IRobotLoadRecordDead;
    class function CreateRemote(const MachineName: string): IRobotLoadRecordDead;
  end;

// *********************************************************************//
// The Class CoRobotStoreySelection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotStoreySelection exposed by              
// the CoClass RobotStoreySelection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotStoreySelection = class
    class function Create: IRobotStoreySelection;
    class function CreateRemote(const MachineName: string): IRobotStoreySelection;
  end;

// *********************************************************************//
// The Class CoRobotDynamicAnalysisDamping provides a Create and CreateRemote method to          
// create instances of the default interface IRobotDynamicAnalysisDamping exposed by              
// the CoClass RobotDynamicAnalysisDamping. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotDynamicAnalysisDamping = class
    class function Create: IRobotDynamicAnalysisDamping;
    class function CreateRemote(const MachineName: string): IRobotDynamicAnalysisDamping;
  end;

// *********************************************************************//
// The Class CoRobotFRFAnalysisParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFRFAnalysisParams exposed by              
// the CoClass RobotFRFAnalysisParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFRFAnalysisParams = class
    class function Create: IRobotFRFAnalysisParams;
    class function CreateRemote(const MachineName: string): IRobotFRFAnalysisParams;
  end;

// *********************************************************************//
// The Class CoRobotFootfallAnalysisNodeSelection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFootfallAnalysisNodeSelection exposed by              
// the CoClass RobotFootfallAnalysisNodeSelection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFootfallAnalysisNodeSelection = class
    class function Create: IRobotFootfallAnalysisNodeSelection;
    class function CreateRemote(const MachineName: string): IRobotFootfallAnalysisNodeSelection;
  end;

// *********************************************************************//
// The Class CoRobotFootfallAnalysisModalParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFootfallAnalysisModalParams exposed by              
// the CoClass RobotFootfallAnalysisModalParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFootfallAnalysisModalParams = class
    class function Create: IRobotFootfallAnalysisModalParams;
    class function CreateRemote(const MachineName: string): IRobotFootfallAnalysisModalParams;
  end;

// *********************************************************************//
// The Class CoRobotFootfallAnalysisParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFootfallAnalysisParams exposed by              
// the CoClass RobotFootfallAnalysisParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFootfallAnalysisParams = class
    class function Create: IRobotFootfallAnalysisParams;
    class function CreateRemote(const MachineName: string): IRobotFootfallAnalysisParams;
  end;

// *********************************************************************//
// The Class CoRobotFRFResults provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFRFResults exposed by              
// the CoClass RobotFRFResults. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFRFResults = class
    class function Create: IRobotFRFResults;
    class function CreateRemote(const MachineName: string): IRobotFRFResults;
  end;

// *********************************************************************//
// The Class CoRobotFRFResultServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFRFResultServer exposed by              
// the CoClass RobotFRFResultServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFRFResultServer = class
    class function Create: IRobotFRFResultServer;
    class function CreateRemote(const MachineName: string): IRobotFRFResultServer;
  end;

// *********************************************************************//
// The Class CoRobotFootfallResults provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFootfallResults exposed by              
// the CoClass RobotFootfallResults. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFootfallResults = class
    class function Create: IRobotFootfallResults;
    class function CreateRemote(const MachineName: string): IRobotFootfallResults;
  end;

// *********************************************************************//
// The Class CoRobotStoreyValues provides a Create and CreateRemote method to          
// create instances of the default interface IRobotStoreyValues exposed by              
// the CoClass RobotStoreyValues. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotStoreyValues = class
    class function Create: IRobotStoreyValues;
    class function CreateRemote(const MachineName: string): IRobotStoreyValues;
  end;

// *********************************************************************//
// The Class CoRobotStoreyReducedForces provides a Create and CreateRemote method to          
// create instances of the default interface IRobotStoreyReducedForces exposed by              
// the CoClass RobotStoreyReducedForces. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotStoreyReducedForces = class
    class function Create: IRobotStoreyReducedForces;
    class function CreateRemote(const MachineName: string): IRobotStoreyReducedForces;
  end;

// *********************************************************************//
// The Class CoRobotStoreyDisplacements provides a Create and CreateRemote method to          
// create instances of the default interface IRobotStoreyDisplacements exposed by              
// the CoClass RobotStoreyDisplacements. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotStoreyDisplacements = class
    class function Create: IRobotStoreyDisplacements;
    class function CreateRemote(const MachineName: string): IRobotStoreyDisplacements;
  end;

// *********************************************************************//
// The Class CoRobotStoreyResultServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotStoreyResultServer exposed by              
// the CoClass RobotStoreyResultServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotStoreyResultServer = class
    class function Create: IRobotStoreyResultServer;
    class function CreateRemote(const MachineName: string): IRobotStoreyResultServer;
  end;

// *********************************************************************//
// The Class CoRobotTimeHistoryHHTParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotTimeHistoryHHTParams exposed by              
// the CoClass RobotTimeHistoryHHTParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotTimeHistoryHHTParams = class
    class function Create: IRobotTimeHistoryHHTParams;
    class function CreateRemote(const MachineName: string): IRobotTimeHistoryHHTParams;
  end;

// *********************************************************************//
// The Class CoRobotTimeHistoryNewmarkAccelParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotTimeHistoryNewmarkAccelParams exposed by              
// the CoClass RobotTimeHistoryNewmarkAccelParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotTimeHistoryNewmarkAccelParams = class
    class function Create: IRobotTimeHistoryNewmarkAccelParams;
    class function CreateRemote(const MachineName: string): IRobotTimeHistoryNewmarkAccelParams;
  end;

// *********************************************************************//
// The Class CoRobotSELFSeismicEngine provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSELFSeismicEngine exposed by              
// the CoClass RobotSELFSeismicEngine. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSELFSeismicEngine = class
    class function Create: IRobotSELFSeismicEngine;
    class function CreateRemote(const MachineName: string): IRobotSELFSeismicEngine;
  end;

// *********************************************************************//
// The Class CoRobotWindLoadsSimulationParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotWindLoadsSimulationParams exposed by              
// the CoClass RobotWindLoadsSimulationParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotWindLoadsSimulationParams = class
    class function Create: IRobotWindLoadsSimulationParams;
    class function CreateRemote(const MachineName: string): IRobotWindLoadsSimulationParams;
  end;

// *********************************************************************//
// The Class CoRobotWindLoadsSimulationEngine provides a Create and CreateRemote method to          
// create instances of the default interface IRobotWindLoadsSimulationEngine exposed by              
// the CoClass RobotWindLoadsSimulationEngine. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotWindLoadsSimulationEngine = class
    class function Create: IRobotWindLoadsSimulationEngine;
    class function CreateRemote(const MachineName: string): IRobotWindLoadsSimulationEngine;
  end;

// *********************************************************************//
// The Class CoRobotSELFSeismicGenerationParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSELFSeismicGenerationParams exposed by              
// the CoClass RobotSELFSeismicGenerationParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSELFSeismicGenerationParams = class
    class function Create: IRobotSELFSeismicGenerationParams;
    class function CreateRemote(const MachineName: string): IRobotSELFSeismicGenerationParams;
  end;

// *********************************************************************//
// The Class CoRobotSELFSeismicStructureParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSELFSeismicStructureParams exposed by              
// the CoClass RobotSELFSeismicStructureParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSELFSeismicStructureParams = class
    class function Create: IRobotSELFSeismicStructureParams;
    class function CreateRemote(const MachineName: string): IRobotSELFSeismicStructureParams;
  end;

// *********************************************************************//
// The Class CoRobotSELFSeismicAnalysisParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSELFSeismicAnalysisParams exposed by              
// the CoClass RobotSELFSeismicAnalysisParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSELFSeismicAnalysisParams = class
    class function Create: IRobotSELFSeismicAnalysisParams;
    class function CreateRemote(const MachineName: string): IRobotSELFSeismicAnalysisParams;
  end;

// *********************************************************************//
// The Class CoRobotSELFSeismic_ASCE_7_10_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSELFSeismic_ASCE_7_10_Params exposed by              
// the CoClass RobotSELFSeismic_ASCE_7_10_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSELFSeismic_ASCE_7_10_Params = class
    class function Create: IRobotSELFSeismic_ASCE_7_10_Params;
    class function CreateRemote(const MachineName: string): IRobotSELFSeismic_ASCE_7_10_Params;
  end;

// *********************************************************************//
// The Class CoRobotSELFSeismic_EC_8_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSELFSeismic_EC_8_Params exposed by              
// the CoClass RobotSELFSeismic_EC_8_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSELFSeismic_EC_8_Params = class
    class function Create: IRobotSELFSeismic_EC_8_Params;
    class function CreateRemote(const MachineName: string): IRobotSELFSeismic_EC_8_Params;
  end;

// *********************************************************************//
// The Class CoRobotSELFSeismic_AS_1170_4_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSELFSeismic_AS_1170_4_Params exposed by              
// the CoClass RobotSELFSeismic_AS_1170_4_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSELFSeismic_AS_1170_4_Params = class
    class function Create: IRobotSELFSeismic_AS_1170_4_Params;
    class function CreateRemote(const MachineName: string): IRobotSELFSeismic_AS_1170_4_Params;
  end;

// *********************************************************************//
// The Class CoRobotSeismicResidualMode provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicResidualMode exposed by              
// the CoClass RobotSeismicResidualMode. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicResidualMode = class
    class function Create: IRobotSeismicResidualMode;
    class function CreateRemote(const MachineName: string): IRobotSeismicResidualMode;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_EC8_General_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_EC8_General_Params exposed by              
// the CoClass RobotSeismicAnalysis_EC8_General_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_EC8_General_Params = class
    class function Create: IRobotSeismicAnalysis_EC8_General_Params;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_EC8_General_Params;
  end;

// *********************************************************************//
// The Class CoRobotSeismicAnalysis_EC8_Params provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicAnalysis_EC8_Params exposed by              
// the CoClass RobotSeismicAnalysis_EC8_Params. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicAnalysis_EC8_Params = class
    class function Create: IRobotSeismicAnalysis_EC8_Params;
    class function CreateRemote(const MachineName: string): IRobotSeismicAnalysis_EC8_Params;
  end;

// *********************************************************************//
// The Class CoRobotDAMNotionalLoads provides a Create and CreateRemote method to          
// create instances of the default interface IRobotDAMNotionalLoads exposed by              
// the CoClass RobotDAMNotionalLoads. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotDAMNotionalLoads = class
    class function Create: IRobotDAMNotionalLoads;
    class function CreateRemote(const MachineName: string): IRobotDAMNotionalLoads;
  end;

// *********************************************************************//
// The Class CoRobotDAMReducedStiffness provides a Create and CreateRemote method to          
// create instances of the default interface IRobotDAMReducedStiffness exposed by              
// the CoClass RobotDAMReducedStiffness. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotDAMReducedStiffness = class
    class function Create: IRobotDAMReducedStiffness;
    class function CreateRemote(const MachineName: string): IRobotDAMReducedStiffness;
  end;

// *********************************************************************//
// The Class CoRobotDAMParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotDAMParams exposed by              
// the CoClass RobotDAMParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotDAMParams = class
    class function Create: IRobotDAMParams;
    class function CreateRemote(const MachineName: string): IRobotDAMParams;
  end;

// *********************************************************************//
// The Class CoRobotDAMCalcModule provides a Create and CreateRemote method to          
// create instances of the default interface IRobotDAMCalcModule exposed by              
// the CoClass RobotDAMCalcModule. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotDAMCalcModule = class
    class function Create: IRobotDAMCalcModule;
    class function CreateRemote(const MachineName: string): IRobotDAMCalcModule;
  end;

// *********************************************************************//
// The Class CoRobotCalculationResume provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCalculationResume exposed by              
// the CoClass RobotCalculationResume. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCalculationResume = class
    class function Create: IRobotCalculationResume;
    class function CreateRemote(const MachineName: string): IRobotCalculationResume;
  end;

// *********************************************************************//
// The Class CoRobotCalcEngine provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCalcEngine exposed by              
// the CoClass RobotCalcEngine. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCalcEngine = class
    class function Create: IRobotCalcEngine;
    class function CreateRemote(const MachineName: string): IRobotCalcEngine;
  end;

// *********************************************************************//
// The Class CoRobotStructureAnalysisParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotStructureAnalysisParams exposed by              
// the CoClass RobotStructureAnalysisParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotStructureAnalysisParams = class
    class function Create: IRobotStructureAnalysisParams;
    class function CreateRemote(const MachineName: string): IRobotStructureAnalysisParams;
  end;

// *********************************************************************//
// The Class CoRobotSparseMSolverParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSparseMSolverParams exposed by              
// the CoClass RobotSparseMSolverParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSparseMSolverParams = class
    class function Create: IRobotSparseMSolverParams;
    class function CreateRemote(const MachineName: string): IRobotSparseMSolverParams;
  end;

// *********************************************************************//
// The Class CoRobotIterativeSolverParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotIterativeSolverParams exposed by              
// the CoClass RobotIterativeSolverParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotIterativeSolverParams = class
    class function Create: IRobotIterativeSolverParams;
    class function CreateRemote(const MachineName: string): IRobotIterativeSolverParams;
  end;

// *********************************************************************//
// The Class CoRobotSeismicResultsSaveParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSeismicResultsSaveParams exposed by              
// the CoClass RobotSeismicResultsSaveParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSeismicResultsSaveParams = class
    class function Create: IRobotSeismicResultsSaveParams;
    class function CreateRemote(const MachineName: string): IRobotSeismicResultsSaveParams;
  end;

// *********************************************************************//
// The Class CoRobotModelGenerationParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotModelGenerationParams exposed by              
// the CoClass RobotModelGenerationParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotModelGenerationParams = class
    class function Create: IRobotModelGenerationParams;
    class function CreateRemote(const MachineName: string): IRobotModelGenerationParams;
  end;

// *********************************************************************//
// The Class CoRobotBucklingDeformationParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBucklingDeformationParams exposed by              
// the CoClass RobotBucklingDeformationParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBucklingDeformationParams = class
    class function Create: IRobotBucklingDeformationParams;
    class function CreateRemote(const MachineName: string): IRobotBucklingDeformationParams;
  end;

// *********************************************************************//
// The Class CoRobotSelection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSelection exposed by              
// the CoClass RobotSelection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSelection = class
    class function Create: IRobotSelection;
    class function CreateRemote(const MachineName: string): IRobotSelection;
  end;

// *********************************************************************//
// The Class CoRobotMultiSelection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotMultiSelection exposed by              
// the CoClass RobotMultiSelection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotMultiSelection = class
    class function Create: IRobotMultiSelection;
    class function CreateRemote(const MachineName: string): IRobotMultiSelection;
  end;

// *********************************************************************//
// The Class CoRobotSelectionFactory provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSelectionFactory exposed by              
// the CoClass RobotSelectionFactory. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSelectionFactory = class
    class function Create: IRobotSelectionFactory;
    class function CreateRemote(const MachineName: string): IRobotSelectionFactory;
  end;

// *********************************************************************//
// The Class CoRobotGroup provides a Create and CreateRemote method to          
// create instances of the default interface IRobotGroup exposed by              
// the CoClass RobotGroup. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotGroup = class
    class function Create: IRobotGroup;
    class function CreateRemote(const MachineName: string): IRobotGroup;
  end;

// *********************************************************************//
// The Class CoRobotGroupServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotGroupServer exposed by              
// the CoClass RobotGroupServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotGroupServer = class
    class function Create: IRobotGroupServer;
    class function CreateRemote(const MachineName: string): IRobotGroupServer;
  end;

// *********************************************************************//
// The Class CoRobotModeSelection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotModeSelection exposed by              
// the CoClass RobotModeSelection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotModeSelection = class
    class function Create: IRobotModeSelection;
    class function CreateRemote(const MachineName: string): IRobotModeSelection;
  end;

// *********************************************************************//
// The Class CoRobotObjEdgeSelection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotObjEdgeSelection exposed by              
// the CoClass RobotObjEdgeSelection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjEdgeSelection = class
    class function Create: IRobotObjEdgeSelection;
    class function CreateRemote(const MachineName: string): IRobotObjEdgeSelection;
  end;

// *********************************************************************//
// The Class CoRobotPreferences provides a Create and CreateRemote method to          
// create instances of the default interface IRobotPreferences exposed by              
// the CoClass RobotPreferences. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotPreferences = class
    class function Create: IRobotPreferences;
    class function CreateRemote(const MachineName: string): IRobotPreferences;
  end;

// *********************************************************************//
// The Class CoRobotSectionDatabase provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSectionDatabase exposed by              
// the CoClass RobotSectionDatabase. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSectionDatabase = class
    class function Create: IRobotSectionDatabase;
    class function CreateRemote(const MachineName: string): IRobotSectionDatabase;
  end;

// *********************************************************************//
// The Class CoRobotMaterialDatabase provides a Create and CreateRemote method to          
// create instances of the default interface IRobotMaterialDatabase exposed by              
// the CoClass RobotMaterialDatabase. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotMaterialDatabase = class
    class function Create: IRobotMaterialDatabase;
    class function CreateRemote(const MachineName: string): IRobotMaterialDatabase;
  end;

// *********************************************************************//
// The Class CoRobotSectionDatabaseList provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSectionDatabaseList exposed by              
// the CoClass RobotSectionDatabaseList. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSectionDatabaseList = class
    class function Create: IRobotSectionDatabaseList;
    class function CreateRemote(const MachineName: string): IRobotSectionDatabaseList;
  end;

// *********************************************************************//
// The Class CoRobotProjectPreferences provides a Create and CreateRemote method to          
// create instances of the default interface IRobotProjectPreferences exposed by              
// the CoClass RobotProjectPreferences. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotProjectPreferences = class
    class function Create: IRobotProjectPreferences;
    class function CreateRemote(const MachineName: string): IRobotProjectPreferences;
  end;

// *********************************************************************//
// The Class CoRobotKernelPreferences provides a Create and CreateRemote method to          
// create instances of the default interface IRobotKernelPreferences exposed by              
// the CoClass RobotKernelPreferences. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotKernelPreferences = class
    class function Create: IRobotKernelPreferences;
    class function CreateRemote(const MachineName: string): IRobotKernelPreferences;
  end;

// *********************************************************************//
// The Class CoRobotVehicleDatabaseList provides a Create and CreateRemote method to          
// create instances of the default interface IRobotVehicleDatabaseList exposed by              
// the CoClass RobotVehicleDatabaseList. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotVehicleDatabaseList = class
    class function Create: IRobotVehicleDatabaseList;
    class function CreateRemote(const MachineName: string): IRobotVehicleDatabaseList;
  end;

// *********************************************************************//
// The Class CoRobotVehicleDatabase provides a Create and CreateRemote method to          
// create instances of the default interface IRobotVehicleDatabase exposed by              
// the CoClass RobotVehicleDatabase. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotVehicleDatabase = class
    class function Create: IRobotVehicleDatabase;
    class function CreateRemote(const MachineName: string): IRobotVehicleDatabase;
  end;

// *********************************************************************//
// The Class CoRobotEurocodeFactors provides a Create and CreateRemote method to          
// create instances of the default interface IRobotEurocodeFactors exposed by              
// the CoClass RobotEurocodeFactors. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotEurocodeFactors = class
    class function Create: IRobotEurocodeFactors;
    class function CreateRemote(const MachineName: string): IRobotEurocodeFactors;
  end;

// *********************************************************************//
// The Class CoRobotEurocodeSteelDesignFactors provides a Create and CreateRemote method to          
// create instances of the default interface IRobotEurocodeSteelDesignFactors exposed by              
// the CoClass RobotEurocodeSteelDesignFactors. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotEurocodeSteelDesignFactors = class
    class function Create: IRobotEurocodeSteelDesignFactors;
    class function CreateRemote(const MachineName: string): IRobotEurocodeSteelDesignFactors;
  end;

// *********************************************************************//
// The Class CoRobotEurocodeSteelConnectionFactors provides a Create and CreateRemote method to          
// create instances of the default interface IRobotEurocodeSteelConnectionFactors exposed by              
// the CoClass RobotEurocodeSteelConnectionFactors. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotEurocodeSteelConnectionFactors = class
    class function Create: IRobotEurocodeSteelConnectionFactors;
    class function CreateRemote(const MachineName: string): IRobotEurocodeSteelConnectionFactors;
  end;

// *********************************************************************//
// The Class CoRobotValuesArray provides a Create and CreateRemote method to          
// create instances of the default interface IRobotValuesArray exposed by              
// the CoClass RobotValuesArray. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotValuesArray = class
    class function Create: IRobotValuesArray;
    class function CreateRemote(const MachineName: string): IRobotValuesArray;
  end;

// *********************************************************************//
// The Class CoRobotNamesArray provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNamesArray exposed by              
// the CoClass RobotNamesArray. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNamesArray = class
    class function Create: IRobotNamesArray;
    class function CreateRemote(const MachineName: string): IRobotNamesArray;
  end;

// *********************************************************************//
// The Class CoRobotNumbersArray provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNumbersArray exposed by              
// the CoClass RobotNumbersArray. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNumbersArray = class
    class function Create: IRobotNumbersArray;
    class function CreateRemote(const MachineName: string): IRobotNumbersArray;
  end;

// *********************************************************************//
// The Class CoRobotObjectsArray provides a Create and CreateRemote method to          
// create instances of the default interface IRobotObjectsArray exposed by              
// the CoClass RobotObjectsArray. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjectsArray = class
    class function Create: IRobotObjectsArray;
    class function CreateRemote(const MachineName: string): IRobotObjectsArray;
  end;

// *********************************************************************//
// The Class CoRobotNumbersCollection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNumbersCollection exposed by              
// the CoClass RobotNumbersCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNumbersCollection = class
    class function Create: IRobotNumbersCollection;
    class function CreateRemote(const MachineName: string): IRobotNumbersCollection;
  end;

// *********************************************************************//
// The Class CoRobotWindow provides a Create and CreateRemote method to          
// create instances of the default interface IRobotWindow exposed by              
// the CoClass RobotWindow. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotWindow = class
    class function Create: IRobotWindow;
    class function CreateRemote(const MachineName: string): IRobotWindow;
  end;

// *********************************************************************//
// The Class CoRobotPointsArray provides a Create and CreateRemote method to          
// create instances of the default interface IRobotPointsArray exposed by              
// the CoClass RobotPointsArray. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotPointsArray = class
    class function Create: IRobotPointsArray;
    class function CreateRemote(const MachineName: string): IRobotPointsArray;
  end;

// *********************************************************************//
// The Class CoRobotLinearReleaseDefList provides a Create and CreateRemote method to          
// create instances of the default interface IRobotLinearReleaseDefList exposed by              
// the CoClass RobotLinearReleaseDefList. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotLinearReleaseDefList = class
    class function Create: IRobotLinearReleaseDefList;
    class function CreateRemote(const MachineName: string): IRobotLinearReleaseDefList;
  end;

// *********************************************************************//
// The Class CoRobotNumbersDictionary provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNumbersDictionary exposed by              
// the CoClass RobotNumbersDictionary. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNumbersDictionary = class
    class function Create: IRobotNumbersDictionary;
    class function CreateRemote(const MachineName: string): IRobotNumbersDictionary;
  end;

// *********************************************************************//
// The Class CoRobotParamCollection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotParamCollection exposed by              
// the CoClass RobotParamCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotParamCollection = class
    class function Create: IRobotParamCollection;
    class function CreateRemote(const MachineName: string): IRobotParamCollection;
  end;

// *********************************************************************//
// The Class CoRobotNumbersArrayInProc provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNumbersArray exposed by              
// the CoClass RobotNumbersArrayInProc. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNumbersArrayInProc = class
    class function Create: IRobotNumbersArray;
    class function CreateRemote(const MachineName: string): IRobotNumbersArray;
  end;

// *********************************************************************//
// The Class CoRobotResultRow provides a Create and CreateRemote method to          
// create instances of the default interface IRobotResultRow exposed by              
// the CoClass RobotResultRow. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotResultRow = class
    class function Create: IRobotResultRow;
    class function CreateRemote(const MachineName: string): IRobotResultRow;
  end;

// *********************************************************************//
// The Class CoRobotResultRowSet provides a Create and CreateRemote method to          
// create instances of the default interface IRobotResultRowSet exposed by              
// the CoClass RobotResultRowSet. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotResultRowSet = class
    class function Create: IRobotResultRowSet;
    class function CreateRemote(const MachineName: string): IRobotResultRowSet;
  end;

// *********************************************************************//
// The Class CoRobotFiniteElementData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFiniteElementData exposed by              
// the CoClass RobotFiniteElementData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFiniteElementData = class
    class function Create: IRobotFiniteElementData;
    class function CreateRemote(const MachineName: string): IRobotFiniteElementData;
  end;

// *********************************************************************//
// The Class CoRobotFiniteElementDataSet provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFiniteElementDataSet exposed by              
// the CoClass RobotFiniteElementDataSet. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFiniteElementDataSet = class
    class function Create: IRobotFiniteElementDataSet;
    class function CreateRemote(const MachineName: string): IRobotFiniteElementDataSet;
  end;

// *********************************************************************//
// The Class CoRobotBarElementData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarElementData exposed by              
// the CoClass RobotBarElementData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarElementData = class
    class function Create: IRobotBarElementData;
    class function CreateRemote(const MachineName: string): IRobotBarElementData;
  end;

// *********************************************************************//
// The Class CoRobotBarElementDataSet provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarElementDataSet exposed by              
// the CoClass RobotBarElementDataSet. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarElementDataSet = class
    class function Create: IRobotBarElementDataSet;
    class function CreateRemote(const MachineName: string): IRobotBarElementDataSet;
  end;

// *********************************************************************//
// The Class CoRobotGeoPoint2D provides a Create and CreateRemote method to          
// create instances of the default interface IRobotGeoPoint2D exposed by              
// the CoClass RobotGeoPoint2D. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotGeoPoint2D = class
    class function Create: IRobotGeoPoint2D;
    class function CreateRemote(const MachineName: string): IRobotGeoPoint2D;
  end;

// *********************************************************************//
// The Class CoRobotGeoPoint3D provides a Create and CreateRemote method to          
// create instances of the default interface IRobotGeoPoint3D exposed by              
// the CoClass RobotGeoPoint3D. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotGeoPoint3D = class
    class function Create: IRobotGeoPoint3D;
    class function CreateRemote(const MachineName: string): IRobotGeoPoint3D;
  end;

// *********************************************************************//
// The Class CoRobotGeoCurveDiv provides a Create and CreateRemote method to          
// create instances of the default interface IRobotGeoCurveDiv exposed by              
// the CoClass RobotGeoCurveDiv. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotGeoCurveDiv = class
    class function Create: IRobotGeoCurveDiv;
    class function CreateRemote(const MachineName: string): IRobotGeoCurveDiv;
  end;

// *********************************************************************//
// The Class CoRobotGeoSegment provides a Create and CreateRemote method to          
// create instances of the default interface IRobotGeoSegment exposed by              
// the CoClass RobotGeoSegment. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotGeoSegment = class
    class function Create: IRobotGeoSegment;
    class function CreateRemote(const MachineName: string): IRobotGeoSegment;
  end;

// *********************************************************************//
// The Class CoRobotGeoSegmentLine provides a Create and CreateRemote method to          
// create instances of the default interface IRobotGeoSegmentLine exposed by              
// the CoClass RobotGeoSegmentLine. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotGeoSegmentLine = class
    class function Create: IRobotGeoSegmentLine;
    class function CreateRemote(const MachineName: string): IRobotGeoSegmentLine;
  end;

// *********************************************************************//
// The Class CoRobotGeoSegmentArc provides a Create and CreateRemote method to          
// create instances of the default interface IRobotGeoSegmentArc exposed by              
// the CoClass RobotGeoSegmentArc. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotGeoSegmentArc = class
    class function Create: IRobotGeoSegmentArc;
    class function CreateRemote(const MachineName: string): IRobotGeoSegmentArc;
  end;

// *********************************************************************//
// The Class CoRobotGeoObject provides a Create and CreateRemote method to          
// create instances of the default interface IRobotGeoObject exposed by              
// the CoClass RobotGeoObject. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotGeoObject = class
    class function Create: IRobotGeoObject;
    class function CreateRemote(const MachineName: string): IRobotGeoObject;
  end;

// *********************************************************************//
// The Class CoRobotGeoPolyline provides a Create and CreateRemote method to          
// create instances of the default interface IRobotGeoPolyline exposed by              
// the CoClass RobotGeoPolyline. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotGeoPolyline = class
    class function Create: IRobotGeoPolyline;
    class function CreateRemote(const MachineName: string): IRobotGeoPolyline;
  end;

// *********************************************************************//
// The Class CoRobotGeoContour provides a Create and CreateRemote method to          
// create instances of the default interface IRobotGeoContour exposed by              
// the CoClass RobotGeoContour. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotGeoContour = class
    class function Create: IRobotGeoContour;
    class function CreateRemote(const MachineName: string): IRobotGeoContour;
  end;

// *********************************************************************//
// The Class CoRobotGeoArc provides a Create and CreateRemote method to          
// create instances of the default interface IRobotGeoArc exposed by              
// the CoClass RobotGeoArc. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotGeoArc = class
    class function Create: IRobotGeoArc;
    class function CreateRemote(const MachineName: string): IRobotGeoArc;
  end;

// *********************************************************************//
// The Class CoRobotGeoCircle provides a Create and CreateRemote method to          
// create instances of the default interface IRobotGeoCircle exposed by              
// the CoClass RobotGeoCircle. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotGeoCircle = class
    class function Create: IRobotGeoCircle;
    class function CreateRemote(const MachineName: string): IRobotGeoCircle;
  end;

// *********************************************************************//
// The Class CoRobotGeoSegmentCollection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCollection exposed by              
// the CoClass RobotGeoSegmentCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotGeoSegmentCollection = class
    class function Create: IRobotCollection;
    class function CreateRemote(const MachineName: string): IRobotCollection;
  end;

// *********************************************************************//
// The Class CoRobotGeoPoint3DCollection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCollection exposed by              
// the CoClass RobotGeoPoint3DCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotGeoPoint3DCollection = class
    class function Create: IRobotCollection;
    class function CreateRemote(const MachineName: string): IRobotCollection;
  end;

// *********************************************************************//
// The Class CoRobotGeoLayer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotGeoLayer exposed by              
// the CoClass RobotGeoLayer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotGeoLayer = class
    class function Create: IRobotGeoLayer;
    class function CreateRemote(const MachineName: string): IRobotGeoLayer;
  end;

// *********************************************************************//
// The Class CoRobotObjModifExtrusion provides a Create and CreateRemote method to          
// create instances of the default interface IRobotObjModifExtrusion exposed by              
// the CoClass RobotObjModifExtrusion. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjModifExtrusion = class
    class function Create: IRobotObjModifExtrusion;
    class function CreateRemote(const MachineName: string): IRobotObjModifExtrusion;
  end;

// *********************************************************************//
// The Class CoRobotObjModifLathe provides a Create and CreateRemote method to          
// create instances of the default interface IRobotObjModifLathe exposed by              
// the CoClass RobotObjModifLathe. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjModifLathe = class
    class function Create: IRobotObjModifLathe;
    class function CreateRemote(const MachineName: string): IRobotObjModifLathe;
  end;

// *********************************************************************//
// The Class CoRobotObjModifPyramid provides a Create and CreateRemote method to          
// create instances of the default interface IRobotObjModifPyramid exposed by              
// the CoClass RobotObjModifPyramid. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjModifPyramid = class
    class function Create: IRobotObjModifPyramid;
    class function CreateRemote(const MachineName: string): IRobotObjModifPyramid;
  end;

// *********************************************************************//
// The Class CoRobotObjOperTranslation provides a Create and CreateRemote method to          
// create instances of the default interface IRobotObjOperTranslation exposed by              
// the CoClass RobotObjOperTranslation. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjOperTranslation = class
    class function Create: IRobotObjOperTranslation;
    class function CreateRemote(const MachineName: string): IRobotObjOperTranslation;
  end;

// *********************************************************************//
// The Class CoRobotObjOperScaling provides a Create and CreateRemote method to          
// create instances of the default interface IRobotObjOperScaling exposed by              
// the CoClass RobotObjOperScaling. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjOperScaling = class
    class function Create: IRobotObjOperScaling;
    class function CreateRemote(const MachineName: string): IRobotObjOperScaling;
  end;

// *********************************************************************//
// The Class CoRobotObjOperRotation provides a Create and CreateRemote method to          
// create instances of the default interface IRobotObjOperRotation exposed by              
// the CoClass RobotObjOperRotation. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjOperRotation = class
    class function Create: IRobotObjOperRotation;
    class function CreateRemote(const MachineName: string): IRobotObjOperRotation;
  end;

// *********************************************************************//
// The Class CoRobotObjOperMeshing provides a Create and CreateRemote method to          
// create instances of the default interface IRobotObjOperMeshing exposed by              
// the CoClass RobotObjOperMeshing. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjOperMeshing = class
    class function Create: IRobotObjOperMeshing;
    class function CreateRemote(const MachineName: string): IRobotObjOperMeshing;
  end;

// *********************************************************************//
// The Class CoRobotObjEdge provides a Create and CreateRemote method to          
// create instances of the default interface IRobotObjEdge exposed by              
// the CoClass RobotObjEdge. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjEdge = class
    class function Create: IRobotObjEdge;
    class function CreateRemote(const MachineName: string): IRobotObjEdge;
  end;

// *********************************************************************//
// The Class CoRobotObjAttributes provides a Create and CreateRemote method to          
// create instances of the default interface IRobotObjAttributes exposed by              
// the CoClass RobotObjAttributes. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjAttributes = class
    class function Create: IRobotObjAttributes;
    class function CreateRemote(const MachineName: string): IRobotObjAttributes;
  end;

// *********************************************************************//
// The Class CoRobotObjPart provides a Create and CreateRemote method to          
// create instances of the default interface IRobotObjPart2 exposed by              
// the CoClass RobotObjPart. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjPart = class
    class function Create: IRobotObjPart2;
    class function CreateRemote(const MachineName: string): IRobotObjPart2;
  end;

// *********************************************************************//
// The Class CoRobotObjPartMain provides a Create and CreateRemote method to          
// create instances of the default interface IRobotObjPartMain exposed by              
// the CoClass RobotObjPartMain. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjPartMain = class
    class function Create: IRobotObjPartMain;
    class function CreateRemote(const MachineName: string): IRobotObjPartMain;
  end;

// *********************************************************************//
// The Class CoRobotObjPartReference provides a Create and CreateRemote method to          
// create instances of the default interface IRobotObjPartReference exposed by              
// the CoClass RobotObjPartReference. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjPartReference = class
    class function Create: IRobotObjPartReference;
    class function CreateRemote(const MachineName: string): IRobotObjPartReference;
  end;

// *********************************************************************//
// The Class CoRobotObjObject provides a Create and CreateRemote method to          
// create instances of the default interface IRobotObjObject exposed by              
// the CoClass RobotObjObject. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjObject = class
    class function Create: IRobotObjObject;
    class function CreateRemote(const MachineName: string): IRobotObjObject;
  end;

// *********************************************************************//
// The Class CoRobotObjOperationCollection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCollection exposed by              
// the CoClass RobotObjOperationCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjOperationCollection = class
    class function Create: IRobotCollection;
    class function CreateRemote(const MachineName: string): IRobotCollection;
  end;

// *********************************************************************//
// The Class CoRobotObjModificationCollection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCollection exposed by              
// the CoClass RobotObjModificationCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjModificationCollection = class
    class function Create: IRobotCollection;
    class function CreateRemote(const MachineName: string): IRobotCollection;
  end;

// *********************************************************************//
// The Class CoRobotObjEdgeCollection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCollection exposed by              
// the CoClass RobotObjEdgeCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjEdgeCollection = class
    class function Create: IRobotCollection;
    class function CreateRemote(const MachineName: string): IRobotCollection;
  end;

// *********************************************************************//
// The Class CoRobotObjObjectServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotObjObjectServer exposed by              
// the CoClass RobotObjObjectServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjObjectServer = class
    class function Create: IRobotObjObjectServer;
    class function CreateRemote(const MachineName: string): IRobotObjObjectServer;
  end;

// *********************************************************************//
// The Class CoRobotObjLabelCol provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCollection exposed by              
// the CoClass RobotObjLabelCol. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjLabelCol = class
    class function Create: IRobotCollection;
    class function CreateRemote(const MachineName: string): IRobotCollection;
  end;

// *********************************************************************//
// The Class CoRobotLinearReleaseServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotLinearReleaseServer exposed by              
// the CoClass RobotLinearReleaseServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotLinearReleaseServer = class
    class function Create: IRobotLinearReleaseServer;
    class function CreateRemote(const MachineName: string): IRobotLinearReleaseServer;
  end;

// *********************************************************************//
// The Class CoRobotLinearReleaseDef provides a Create and CreateRemote method to          
// create instances of the default interface IRobotLinearReleaseDef exposed by              
// the CoClass RobotLinearReleaseDef. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotLinearReleaseDef = class
    class function Create: IRobotLinearReleaseDef;
    class function CreateRemote(const MachineName: string): IRobotLinearReleaseDef;
  end;

// *********************************************************************//
// The Class CoRobotObjObjectCollection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCollection exposed by              
// the CoClass RobotObjObjectCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjObjectCollection = class
    class function Create: IRobotCollection;
    class function CreateRemote(const MachineName: string): IRobotCollection;
  end;

// *********************************************************************//
// The Class CoRobotSpectralAnalysisPointsCollection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSpectralAnalysisPointsCollection exposed by              
// the CoClass RobotSpectralAnalysisPointsCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSpectralAnalysisPointsCollection = class
    class function Create: IRobotSpectralAnalysisPointsCollection;
    class function CreateRemote(const MachineName: string): IRobotSpectralAnalysisPointsCollection;
  end;

// *********************************************************************//
// The Class CoRobotObjMesh provides a Create and CreateRemote method to          
// create instances of the default interface IRobotObjMesh exposed by              
// the CoClass RobotObjMesh. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotObjMesh = class
    class function Create: IRobotObjMesh;
    class function CreateRemote(const MachineName: string): IRobotObjMesh;
  end;

// *********************************************************************//
// The Class CoRobotFiniteElement provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFiniteElement exposed by              
// the CoClass RobotFiniteElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFiniteElement = class
    class function Create: IRobotFiniteElement;
    class function CreateRemote(const MachineName: string): IRobotFiniteElement;
  end;

// *********************************************************************//
// The Class CoRobotFiniteElementNodes provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFiniteElementNodes exposed by              
// the CoClass RobotFiniteElementNodes. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFiniteElementNodes = class
    class function Create: IRobotFiniteElementNodes;
    class function CreateRemote(const MachineName: string): IRobotFiniteElementNodes;
  end;

// *********************************************************************//
// The Class CoRobotFiniteElementServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFiniteElementServer exposed by              
// the CoClass RobotFiniteElementServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFiniteElementServer = class
    class function Create: IRobotFiniteElementServer;
    class function CreateRemote(const MachineName: string): IRobotFiniteElementServer;
  end;

// *********************************************************************//
// The Class CoRobotFiniteElementCollection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCollection exposed by              
// the CoClass RobotFiniteElementCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFiniteElementCollection = class
    class function Create: IRobotCollection;
    class function CreateRemote(const MachineName: string): IRobotCollection;
  end;

// *********************************************************************//
// The Class CoRobotEmitter provides a Create and CreateRemote method to          
// create instances of the default interface IRobotEmitter exposed by              
// the CoClass RobotEmitter. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotEmitter = class
    class function Create: IRobotEmitter;
    class function CreateRemote(const MachineName: string): IRobotEmitter;
  end;

// *********************************************************************//
// The Class CoRobotComponentFactory provides a Create and CreateRemote method to          
// create instances of the default interface IRobotComponentFactory exposed by              
// the CoClass RobotComponentFactory. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotComponentFactory = class
    class function Create: IRobotComponentFactory;
    class function CreateRemote(const MachineName: string): IRobotComponentFactory;
  end;

// *********************************************************************//
// The Class CoRobotFeResultParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFeResultParams exposed by              
// the CoClass RobotFeResultParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFeResultParams = class
    class function Create: IRobotFeResultParams;
    class function CreateRemote(const MachineName: string): IRobotFeResultParams;
  end;

// *********************************************************************//
// The Class CoRobotFeResultDetailed provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFeResultDetailed exposed by              
// the CoClass RobotFeResultDetailed. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFeResultDetailed = class
    class function Create: IRobotFeResultDetailed;
    class function CreateRemote(const MachineName: string): IRobotFeResultDetailed;
  end;

// *********************************************************************//
// The Class CoRobotFeResultServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFeResultServer exposed by              
// the CoClass RobotFeResultServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFeResultServer = class
    class function Create: IRobotFeResultServer;
    class function CreateRemote(const MachineName: string): IRobotFeResultServer;
  end;

// *********************************************************************//
// The Class CoRobotFeResultPrincipal provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFeResultPrincipal exposed by              
// the CoClass RobotFeResultPrincipal. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFeResultPrincipal = class
    class function Create: IRobotFeResultPrincipal;
    class function CreateRemote(const MachineName: string): IRobotFeResultPrincipal;
  end;

// *********************************************************************//
// The Class CoRobotFeResultComplex provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFeResultComplex exposed by              
// the CoClass RobotFeResultComplex. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFeResultComplex = class
    class function Create: IRobotFeResultComplex;
    class function CreateRemote(const MachineName: string): IRobotFeResultComplex;
  end;

// *********************************************************************//
// The Class CoRobotFeResultReinforcement provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFeResultReinforcement exposed by              
// the CoClass RobotFeResultReinforcement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFeResultReinforcement = class
    class function Create: IRobotFeResultReinforcement;
    class function CreateRemote(const MachineName: string): IRobotFeResultReinforcement;
  end;

// *********************************************************************//
// The Class CoRobotFeResultReduced provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFeResultReduced exposed by              
// the CoClass RobotFeResultReduced. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFeResultReduced = class
    class function Create: IRobotFeResultReduced;
    class function CreateRemote(const MachineName: string): IRobotFeResultReduced;
  end;

// *********************************************************************//
// The Class CoRobotPanelCutMngr provides a Create and CreateRemote method to          
// create instances of the default interface IRobotPanelCutMngr exposed by              
// the CoClass RobotPanelCutMngr. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotPanelCutMngr = class
    class function Create: IRobotPanelCutMngr;
    class function CreateRemote(const MachineName: string): IRobotPanelCutMngr;
  end;

// *********************************************************************//
// The Class CoRobotPanelCut provides a Create and CreateRemote method to          
// create instances of the default interface IRobotPanelCut exposed by              
// the CoClass RobotPanelCut. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotPanelCut = class
    class function Create: IRobotPanelCut;
    class function CreateRemote(const MachineName: string): IRobotPanelCut;
  end;

// *********************************************************************//
// The Class CoRobotFeExtremeParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFeExtremeParams exposed by              
// the CoClass RobotFeExtremeParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFeExtremeParams = class
    class function Create: IRobotFeExtremeParams;
    class function CreateRemote(const MachineName: string): IRobotFeExtremeParams;
  end;

// *********************************************************************//
// The Class CoRobotFeExtremeValue provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFeExtremeValue exposed by              
// the CoClass RobotFeExtremeValue. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFeExtremeValue = class
    class function Create: IRobotFeExtremeValue;
    class function CreateRemote(const MachineName: string): IRobotFeExtremeValue;
  end;

// *********************************************************************//
// The Class CoRobotFeMultiResultType provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFeMultiResultType exposed by              
// the CoClass RobotFeMultiResultType. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFeMultiResultType = class
    class function Create: IRobotFeMultiResultType;
    class function CreateRemote(const MachineName: string): IRobotFeMultiResultType;
  end;

// *********************************************************************//
// The Class CoRobotFeMultiExtremeValue provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFeMultiExtremeValue exposed by              
// the CoClass RobotFeMultiExtremeValue. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFeMultiExtremeValue = class
    class function Create: IRobotFeMultiExtremeValue;
    class function CreateRemote(const MachineName: string): IRobotFeMultiExtremeValue;
  end;

// *********************************************************************//
// The Class CoRobotMeshMethod provides a Create and CreateRemote method to          
// create instances of the default interface IRobotMeshMethod exposed by              
// the CoClass RobotMeshMethod. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotMeshMethod = class
    class function Create: IRobotMeshMethod;
    class function CreateRemote(const MachineName: string): IRobotMeshMethod;
  end;

// *********************************************************************//
// The Class CoRobotMeshGeneration provides a Create and CreateRemote method to          
// create instances of the default interface IRobotMeshGeneration exposed by              
// the CoClass RobotMeshGeneration. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotMeshGeneration = class
    class function Create: IRobotMeshGeneration;
    class function CreateRemote(const MachineName: string): IRobotMeshGeneration;
  end;

// *********************************************************************//
// The Class CoRobotMeshCoonsParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotMeshCoonsParams exposed by              
// the CoClass RobotMeshCoonsParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotMeshCoonsParams = class
    class function Create: IRobotMeshCoonsParams;
    class function CreateRemote(const MachineName: string): IRobotMeshCoonsParams;
  end;

// *********************************************************************//
// The Class CoRobotMeshSurfaceFiniteElems provides a Create and CreateRemote method to          
// create instances of the default interface IRobotMeshSurfaceFiniteElems exposed by              
// the CoClass RobotMeshSurfaceFiniteElems. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotMeshSurfaceFiniteElems = class
    class function Create: IRobotMeshSurfaceFiniteElems;
    class function CreateRemote(const MachineName: string): IRobotMeshSurfaceFiniteElems;
  end;

// *********************************************************************//
// The Class CoRobotMeshDelaunayParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotMeshDelaunayParams exposed by              
// the CoClass RobotMeshDelaunayParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotMeshDelaunayParams = class
    class function Create: IRobotMeshDelaunayParams;
    class function CreateRemote(const MachineName: string): IRobotMeshDelaunayParams;
  end;

// *********************************************************************//
// The Class CoRobotMeshVolumeParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotMeshVolumeParams exposed by              
// the CoClass RobotMeshVolumeParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotMeshVolumeParams = class
    class function Create: IRobotMeshVolumeParams;
    class function CreateRemote(const MachineName: string): IRobotMeshVolumeParams;
  end;

// *********************************************************************//
// The Class CoRobotMeshSurfaceParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotMeshSurfaceParams exposed by              
// the CoClass RobotMeshSurfaceParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotMeshSurfaceParams = class
    class function Create: IRobotMeshSurfaceParams;
    class function CreateRemote(const MachineName: string): IRobotMeshSurfaceParams;
  end;

// *********************************************************************//
// The Class CoRobotMeshParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotMeshParams exposed by              
// the CoClass RobotMeshParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotMeshParams = class
    class function Create: IRobotMeshParams;
    class function CreateRemote(const MachineName: string): IRobotMeshParams;
  end;

// *********************************************************************//
// The Class CoRobotNonlinearHingeModelServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNonlinearHingeModelServer exposed by              
// the CoClass RobotNonlinearHingeModelServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNonlinearHingeModelServer = class
    class function Create: IRobotNonlinearHingeModelServer;
    class function CreateRemote(const MachineName: string): IRobotNonlinearHingeModelServer;
  end;

// *********************************************************************//
// The Class CoRobotNonlinearHingeModel provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNonlinearHingeModel exposed by              
// the CoClass RobotNonlinearHingeModel. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNonlinearHingeModel = class
    class function Create: IRobotNonlinearHingeModel;
    class function CreateRemote(const MachineName: string): IRobotNonlinearHingeModel;
  end;

// *********************************************************************//
// The Class CoRobotNonlinearHingeModelAxisParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNonlinearHingeModelAxisParams exposed by              
// the CoClass RobotNonlinearHingeModelAxisParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNonlinearHingeModelAxisParams = class
    class function Create: IRobotNonlinearHingeModelAxisParams;
    class function CreateRemote(const MachineName: string): IRobotNonlinearHingeModelAxisParams;
  end;

// *********************************************************************//
// The Class CoRobotNonlinearHingeModelPoints provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNonlinearHingeModelPoints exposed by              
// the CoClass RobotNonlinearHingeModelPoints. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNonlinearHingeModelPoints = class
    class function Create: IRobotNonlinearHingeModelPoints;
    class function CreateRemote(const MachineName: string): IRobotNonlinearHingeModelPoints;
  end;

// *********************************************************************//
// The Class CoRobotNonlinearHingeData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNonlinearHingeData exposed by              
// the CoClass RobotNonlinearHingeData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNonlinearHingeData = class
    class function Create: IRobotNonlinearHingeData;
    class function CreateRemote(const MachineName: string): IRobotNonlinearHingeData;
  end;

// *********************************************************************//
// The Class CoRobotNonlinearHingeDef provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNonlinearHingeDef exposed by              
// the CoClass RobotNonlinearHingeDef. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNonlinearHingeDef = class
    class function Create: IRobotNonlinearHingeDef;
    class function CreateRemote(const MachineName: string): IRobotNonlinearHingeDef;
  end;

// *********************************************************************//
// The Class CoRobotNonlinearHingeServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotNonlinearHingeServer exposed by              
// the CoClass RobotNonlinearHingeServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotNonlinearHingeServer = class
    class function Create: IRobotNonlinearHingeServer;
    class function CreateRemote(const MachineName: string): IRobotNonlinearHingeServer;
  end;

// *********************************************************************//
// The Class CoRobotMaterialElasticModel provides a Create and CreateRemote method to          
// create instances of the default interface IRobotMaterialElasticModel exposed by              
// the CoClass RobotMaterialElasticModel. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotMaterialElasticModel = class
    class function Create: IRobotMaterialElasticModel;
    class function CreateRemote(const MachineName: string): IRobotMaterialElasticModel;
  end;

// *********************************************************************//
// The Class CoRobotBarSectionElasticParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBarSectionElasticParams exposed by              
// the CoClass RobotBarSectionElasticParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBarSectionElasticParams = class
    class function Create: IRobotBarSectionElasticParams;
    class function CreateRemote(const MachineName: string): IRobotBarSectionElasticParams;
  end;

// *********************************************************************//
// The Class CoRobotCladdingData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCladdingData exposed by              
// the CoClass RobotCladdingData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCladdingData = class
    class function Create: IRobotCladdingData;
    class function CreateRemote(const MachineName: string): IRobotCladdingData;
  end;

// *********************************************************************//
// The Class CoRobotPanelCalcModelData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotPanelCalcModelData exposed by              
// the CoClass RobotPanelCalcModelData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotPanelCalcModelData = class
    class function Create: IRobotPanelCalcModelData;
    class function CreateRemote(const MachineName: string): IRobotPanelCalcModelData;
  end;

// *********************************************************************//
// The Class CoRobotUnitData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotUnitData exposed by              
// the CoClass RobotUnitData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotUnitData = class
    class function Create: IRobotUnitData;
    class function CreateRemote(const MachineName: string): IRobotUnitData;
  end;

// *********************************************************************//
// The Class CoRobotUnitMngr provides a Create and CreateRemote method to          
// create instances of the default interface IRobotUnitMngr exposed by              
// the CoClass RobotUnitMngr. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotUnitMngr = class
    class function Create: IRobotUnitMngr;
    class function CreateRemote(const MachineName: string): IRobotUnitMngr;
  end;

// *********************************************************************//
// The Class CoRobotUnitComplexData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotUnitComplexData exposed by              
// the CoClass RobotUnitComplexData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotUnitComplexData = class
    class function Create: IRobotUnitComplexData;
    class function CreateRemote(const MachineName: string): IRobotUnitComplexData;
  end;

// *********************************************************************//
// The Class CoRobotUnitEditionServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotUnitEditionServer exposed by              
// the CoClass RobotUnitEditionServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotUnitEditionServer = class
    class function Create: IRobotUnitEditionServer;
    class function CreateRemote(const MachineName: string): IRobotUnitEditionServer;
  end;

// *********************************************************************//
// The Class CoRobotUnitEditionData provides a Create and CreateRemote method to          
// create instances of the default interface IRobotUnitEditionData exposed by              
// the CoClass RobotUnitEditionData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotUnitEditionData = class
    class function Create: IRobotUnitEditionData;
    class function CreateRemote(const MachineName: string): IRobotUnitEditionData;
  end;

// *********************************************************************//
// The Class CoRobotStructureGeoAnalyser provides a Create and CreateRemote method to          
// create instances of the default interface IRobotStructureGeoAnalyser exposed by              
// the CoClass RobotStructureGeoAnalyser. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotStructureGeoAnalyser = class
    class function Create: IRobotStructureGeoAnalyser;
    class function CreateRemote(const MachineName: string): IRobotStructureGeoAnalyser;
  end;

// *********************************************************************//
// The Class CoRobotParamDef provides a Create and CreateRemote method to          
// create instances of the default interface IRobotParamDef exposed by              
// the CoClass RobotParamDef. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotParamDef = class
    class function Create: IRobotParamDef;
    class function CreateRemote(const MachineName: string): IRobotParamDef;
  end;

// *********************************************************************//
// The Class CoRobotParamSchemaDef provides a Create and CreateRemote method to          
// create instances of the default interface IRobotParamSchemaDef exposed by              
// the CoClass RobotParamSchemaDef. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotParamSchemaDef = class
    class function Create: IRobotParamSchemaDef;
    class function CreateRemote(const MachineName: string): IRobotParamSchemaDef;
  end;

// *********************************************************************//
// The Class CoRobotParamSchema provides a Create and CreateRemote method to          
// create instances of the default interface IRobotParamSchema exposed by              
// the CoClass RobotParamSchema. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotParamSchema = class
    class function Create: IRobotParamSchema;
    class function CreateRemote(const MachineName: string): IRobotParamSchema;
  end;

// *********************************************************************//
// The Class CoRobotParamSchemaMngr provides a Create and CreateRemote method to          
// create instances of the default interface IRobotParamSchemaMngr exposed by              
// the CoClass RobotParamSchemaMngr. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotParamSchemaMngr = class
    class function Create: IRobotParamSchemaMngr;
    class function CreateRemote(const MachineName: string): IRobotParamSchemaMngr;
  end;

// *********************************************************************//
// The Class CoRobotParamServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotParamServer exposed by              
// the CoClass RobotParamServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotParamServer = class
    class function Create: IRobotParamServer;
    class function CreateRemote(const MachineName: string): IRobotParamServer;
  end;

// *********************************************************************//
// The Class CoRobotProjectComponentCollection provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCollection exposed by              
// the CoClass RobotProjectComponentCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotProjectComponentCollection = class
    class function Create: IRobotCollection;
    class function CreateRemote(const MachineName: string): IRobotCollection;
  end;

// *********************************************************************//
// The Class CoRobotProjectComponent provides a Create and CreateRemote method to          
// create instances of the default interface IRobotProjectComponent exposed by              
// the CoClass RobotProjectComponent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotProjectComponent = class
    class function Create: IRobotProjectComponent;
    class function CreateRemote(const MachineName: string): IRobotProjectComponent;
  end;

// *********************************************************************//
// The Class CoRobotProjectComponentMngr provides a Create and CreateRemote method to          
// create instances of the default interface IRobotProjectComponentMngr exposed by              
// the CoClass RobotProjectComponentMngr. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotProjectComponentMngr = class
    class function Create: IRobotProjectComponentMngr;
    class function CreateRemote(const MachineName: string): IRobotProjectComponentMngr;
  end;

// *********************************************************************//
// The Class CoRobotFileInsertParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotFileInsertParams exposed by              
// the CoClass RobotFileInsertParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotFileInsertParams = class
    class function Create: IRobotFileInsertParams;
    class function CreateRemote(const MachineName: string): IRobotFileInsertParams;
  end;

// *********************************************************************//
// The Class CoRobotProject provides a Create and CreateRemote method to          
// create instances of the default interface IRobotProject exposed by              
// the CoClass RobotProject. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotProject = class
    class function Create: IRobotProject;
    class function CreateRemote(const MachineName: string): IRobotProject;
  end;

// *********************************************************************//
// The Class CoRobotSTRParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSTRParams exposed by              
// the CoClass RobotSTRParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSTRParams = class
    class function Create: IRobotSTRParams;
    class function CreateRemote(const MachineName: string): IRobotSTRParams;
  end;

// *********************************************************************//
// The Class CoRobotSTRParameter provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSTRParameter exposed by              
// the CoClass RobotSTRParameter. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSTRParameter = class
    class function Create: IRobotSTRParameter;
    class function CreateRemote(const MachineName: string): IRobotSTRParameter;
  end;

// *********************************************************************//
// The Class CoRobotStructuralAxisSequenceList provides a Create and CreateRemote method to          
// create instances of the default interface IRobotStructuralAxisSequenceList exposed by              
// the CoClass RobotStructuralAxisSequenceList. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotStructuralAxisSequenceList = class
    class function Create: IRobotStructuralAxisSequenceList;
    class function CreateRemote(const MachineName: string): IRobotStructuralAxisSequenceList;
  end;

// *********************************************************************//
// The Class CoRobotStructuralAxisGridCartesian provides a Create and CreateRemote method to          
// create instances of the default interface IRobotStructuralAxisGridCartesian exposed by              
// the CoClass RobotStructuralAxisGridCartesian. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotStructuralAxisGridCartesian = class
    class function Create: IRobotStructuralAxisGridCartesian;
    class function CreateRemote(const MachineName: string): IRobotStructuralAxisGridCartesian;
  end;

// *********************************************************************//
// The Class CoRobotStructuralAxisGridMngr provides a Create and CreateRemote method to          
// create instances of the default interface IRobotStructuralAxisGridMngr exposed by              
// the CoClass RobotStructuralAxisGridMngr. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotStructuralAxisGridMngr = class
    class function Create: IRobotStructuralAxisGridMngr;
    class function CreateRemote(const MachineName: string): IRobotStructuralAxisGridMngr;
  end;

// *********************************************************************//
// The Class CoRobotBackgroundLayers provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBackgroundLayers exposed by              
// the CoClass RobotBackgroundLayers. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBackgroundLayers = class
    class function Create: IRobotBackgroundLayers;
    class function CreateRemote(const MachineName: string): IRobotBackgroundLayers;
  end;

// *********************************************************************//
// The Class CoRobotBackgroundVisibilityRange provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBackgroundVisibilityRange exposed by              
// the CoClass RobotBackgroundVisibilityRange. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBackgroundVisibilityRange = class
    class function Create: IRobotBackgroundVisibilityRange;
    class function CreateRemote(const MachineName: string): IRobotBackgroundVisibilityRange;
  end;

// *********************************************************************//
// The Class CoRobotBackgroundInsertParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBackgroundInsertParams exposed by              
// the CoClass RobotBackgroundInsertParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBackgroundInsertParams = class
    class function Create: IRobotBackgroundInsertParams;
    class function CreateRemote(const MachineName: string): IRobotBackgroundInsertParams;
  end;

// *********************************************************************//
// The Class CoRobotBackground provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBackground exposed by              
// the CoClass RobotBackground. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBackground = class
    class function Create: IRobotBackground;
    class function CreateRemote(const MachineName: string): IRobotBackground;
  end;

// *********************************************************************//
// The Class CoRobotBackgroundServer provides a Create and CreateRemote method to          
// create instances of the default interface IRobotBackgroundServer exposed by              
// the CoClass RobotBackgroundServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotBackgroundServer = class
    class function Create: IRobotBackgroundServer;
    class function CreateRemote(const MachineName: string): IRobotBackgroundServer;
  end;

// *********************************************************************//
// The Class CoRobotSnowWindParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSnowWindParams exposed by              
// the CoClass RobotSnowWindParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSnowWindParams = class
    class function Create: IRobotSnowWindParams;
    class function CreateRemote(const MachineName: string): IRobotSnowWindParams;
  end;

// *********************************************************************//
// The Class CoRobotSnowWindEngine provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSnowWindEngine exposed by              
// the CoClass RobotSnowWindEngine. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSnowWindEngine = class
    class function Create: IRobotSnowWindEngine;
    class function CreateRemote(const MachineName: string): IRobotSnowWindEngine;
  end;

// *********************************************************************//
// The Class CoRobotSWCodePLParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSWCodePLParams exposed by              
// the CoClass RobotSWCodePLParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSWCodePLParams = class
    class function Create: IRobotSWCodePLParams;
    class function CreateRemote(const MachineName: string): IRobotSWCodePLParams;
  end;

// *********************************************************************//
// The Class CoRobotSWCodeFRParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSWCodeFRParams exposed by              
// the CoClass RobotSWCodeFRParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSWCodeFRParams = class
    class function Create: IRobotSWCodeFRParams;
    class function CreateRemote(const MachineName: string): IRobotSWCodeFRParams;
  end;

// *********************************************************************//
// The Class CoRobotSWCodeECParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSWCodeECParams exposed by              
// the CoClass RobotSWCodeECParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSWCodeECParams = class
    class function Create: IRobotSWCodeECParams;
    class function CreateRemote(const MachineName: string): IRobotSWCodeECParams;
  end;

// *********************************************************************//
// The Class CoRobotSWStruct3DElement provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSWStruct3DElement exposed by              
// the CoClass RobotSWStruct3DElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSWStruct3DElement = class
    class function Create: IRobotSWStruct3DElement;
    class function CreateRemote(const MachineName: string): IRobotSWStruct3DElement;
  end;

// *********************************************************************//
// The Class CoRobotSWStruct3DFrame provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSWStruct3DFrame exposed by              
// the CoClass RobotSWStruct3DFrame. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSWStruct3DFrame = class
    class function Create: IRobotSWStruct3DFrame;
    class function CreateRemote(const MachineName: string): IRobotSWStruct3DFrame;
  end;

// *********************************************************************//
// The Class CoRobotSWStruct3D provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSWStruct3D exposed by              
// the CoClass RobotSWStruct3D. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSWStruct3D = class
    class function Create: IRobotSWStruct3D;
    class function CreateRemote(const MachineName: string): IRobotSWStruct3D;
  end;

// *********************************************************************//
// The Class CoRobotSWStruct3DPurlinGenParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSWStruct3DPurlinGenParams exposed by              
// the CoClass RobotSWStruct3DPurlinGenParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSWStruct3DPurlinGenParams = class
    class function Create: IRobotSWStruct3DPurlinGenParams;
    class function CreateRemote(const MachineName: string): IRobotSWStruct3DPurlinGenParams;
  end;

// *********************************************************************//
// The Class CoRobotSWStruct3DGenParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSWStruct3DGenParams exposed by              
// the CoClass RobotSWStruct3DGenParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotSWStruct3DGenParams = class
    class function Create: IRobotSWStruct3DGenParams;
    class function CreateRemote(const MachineName: string): IRobotSWStruct3DGenParams;
  end;

// *********************************************************************//
// The Class CoRobotViewMngr provides a Create and CreateRemote method to          
// create instances of the default interface IRobotViewMngr exposed by              
// the CoClass RobotViewMngr. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotViewMngr = class
    class function Create: IRobotViewMngr;
    class function CreateRemote(const MachineName: string): IRobotViewMngr;
  end;

// *********************************************************************//
// The Class CoRobotTable provides a Create and CreateRemote method to          
// create instances of the default interface IRobotTable exposed by              
// the CoClass RobotTable. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotTable = class
    class function Create: IRobotTable;
    class function CreateRemote(const MachineName: string): IRobotTable;
  end;

// *********************************************************************//
// The Class CoRobotTableFrame provides a Create and CreateRemote method to          
// create instances of the default interface IRobotTableFrame exposed by              
// the CoClass RobotTableFrame. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotTableFrame = class
    class function Create: IRobotTableFrame;
    class function CreateRemote(const MachineName: string): IRobotTableFrame;
  end;

// *********************************************************************//
// The Class CoRobotTableConfig provides a Create and CreateRemote method to          
// create instances of the default interface IRobotTableConfig exposed by              
// the CoClass RobotTableConfig. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotTableConfig = class
    class function Create: IRobotTableConfig;
    class function CreateRemote(const MachineName: string): IRobotTableConfig;
  end;

// *********************************************************************//
// The Class CoRobotView provides a Create and CreateRemote method to          
// create instances of the default interface IRobotView2 exposed by              
// the CoClass RobotView. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotView = class
    class function Create: IRobotView2;
    class function CreateRemote(const MachineName: string): IRobotView2;
  end;

// *********************************************************************//
// The Class CoRobotViewDetailedAnalysis provides a Create and CreateRemote method to          
// create instances of the default interface IRobotViewDetailedAnalysis exposed by              
// the CoClass RobotViewDetailedAnalysis. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotViewDetailedAnalysis = class
    class function Create: IRobotViewDetailedAnalysis;
    class function CreateRemote(const MachineName: string): IRobotViewDetailedAnalysis;
  end;

// *********************************************************************//
// The Class CoRobotViewDisplayParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotViewDisplayParams exposed by              
// the CoClass RobotViewDisplayParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotViewDisplayParams = class
    class function Create: IRobotViewDisplayParams;
    class function CreateRemote(const MachineName: string): IRobotViewDisplayParams;
  end;

// *********************************************************************//
// The Class CoRobotViewDiagramParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotViewDiagramParams exposed by              
// the CoClass RobotViewDiagramParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotViewDiagramParams = class
    class function Create: IRobotViewDiagramParams;
    class function CreateRemote(const MachineName: string): IRobotViewDiagramParams;
  end;

// *********************************************************************//
// The Class CoRobotViewDiagrams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotViewDiagrams exposed by              
// the CoClass RobotViewDiagrams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotViewDiagrams = class
    class function Create: IRobotViewDiagrams;
    class function CreateRemote(const MachineName: string): IRobotViewDiagrams;
  end;

// *********************************************************************//
// The Class CoRobotViewBarMaps provides a Create and CreateRemote method to          
// create instances of the default interface IRobotViewBarMaps exposed by              
// the CoClass RobotViewBarMaps. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotViewBarMaps = class
    class function Create: IRobotViewBarMaps;
    class function CreateRemote(const MachineName: string): IRobotViewBarMaps;
  end;

// *********************************************************************//
// The Class CoRobotViewFeMaps provides a Create and CreateRemote method to          
// create instances of the default interface IRobotViewFeMaps exposed by              
// the CoClass RobotViewFeMaps. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotViewFeMaps = class
    class function Create: IRobotViewFeMaps;
    class function CreateRemote(const MachineName: string): IRobotViewFeMaps;
  end;

// *********************************************************************//
// The Class CoRobotViewBarMapParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotViewBarMapParams exposed by              
// the CoClass RobotViewBarMapParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotViewBarMapParams = class
    class function Create: IRobotViewBarMapParams;
    class function CreateRemote(const MachineName: string): IRobotViewBarMapParams;
  end;

// *********************************************************************//
// The Class CoRobotViewDetailedAnalysisParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotViewDetailedAnalysisParams exposed by              
// the CoClass RobotViewDetailedAnalysisParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotViewDetailedAnalysisParams = class
    class function Create: IRobotViewDetailedAnalysisParams;
    class function CreateRemote(const MachineName: string): IRobotViewDetailedAnalysisParams;
  end;

// *********************************************************************//
// The Class CoRobotViewFeMapParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotViewFeMapParams exposed by              
// the CoClass RobotViewFeMapParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotViewFeMapParams = class
    class function Create: IRobotViewFeMapParams;
    class function CreateRemote(const MachineName: string): IRobotViewFeMapParams;
  end;

// *********************************************************************//
// The Class CoRobotViewPanelCuts provides a Create and CreateRemote method to          
// create instances of the default interface IRobotViewPanelCuts exposed by              
// the CoClass RobotViewPanelCuts. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotViewPanelCuts = class
    class function Create: IRobotViewPanelCuts;
    class function CreateRemote(const MachineName: string): IRobotViewPanelCuts;
  end;

// *********************************************************************//
// The Class CoRobotViewPanelCutParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotViewPanelCutParams exposed by              
// the CoClass RobotViewPanelCutParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotViewPanelCutParams = class
    class function Create: IRobotViewPanelCutParams;
    class function CreateRemote(const MachineName: string): IRobotViewPanelCutParams;
  end;

// *********************************************************************//
// The Class CoRobotViewGlobalAnalysisParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotViewGlobalAnalysisParams exposed by              
// the CoClass RobotViewGlobalAnalysisParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotViewGlobalAnalysisParams = class
    class function Create: IRobotViewGlobalAnalysisParams;
    class function CreateRemote(const MachineName: string): IRobotViewGlobalAnalysisParams;
  end;

// *********************************************************************//
// The Class CoRobotViewGlobalAnalysisResultsParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotViewGlobalAnalysisResultsParams exposed by              
// the CoClass RobotViewGlobalAnalysisResultsParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotViewGlobalAnalysisResultsParams = class
    class function Create: IRobotViewGlobalAnalysisResultsParams;
    class function CreateRemote(const MachineName: string): IRobotViewGlobalAnalysisResultsParams;
  end;

// *********************************************************************//
// The Class CoRobotViewGlobalAnalysis provides a Create and CreateRemote method to          
// create instances of the default interface IRobotViewGlobalAnalysis exposed by              
// the CoClass RobotViewGlobalAnalysis. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotViewGlobalAnalysis = class
    class function Create: IRobotViewGlobalAnalysis;
    class function CreateRemote(const MachineName: string): IRobotViewGlobalAnalysis;
  end;

// *********************************************************************//
// The Class CoRobotViewInfluenceLines provides a Create and CreateRemote method to          
// create instances of the default interface IRobotViewInfluenceLines exposed by              
// the CoClass RobotViewInfluenceLines. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotViewInfluenceLines = class
    class function Create: IRobotViewInfluenceLines;
    class function CreateRemote(const MachineName: string): IRobotViewInfluenceLines;
  end;

// *********************************************************************//
// The Class CoRobotViewInfluenceLinesParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotViewInfluenceLinesParams exposed by              
// the CoClass RobotViewInfluenceLinesParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotViewInfluenceLinesParams = class
    class function Create: IRobotViewInfluenceLinesParams;
    class function CreateRemote(const MachineName: string): IRobotViewInfluenceLinesParams;
  end;

// *********************************************************************//
// The Class CoRobotViewScreenCaptureParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotViewScreenCaptureParams exposed by              
// the CoClass RobotViewScreenCaptureParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotViewScreenCaptureParams = class
    class function Create: IRobotViewScreenCaptureParams;
    class function CreateRemote(const MachineName: string): IRobotViewScreenCaptureParams;
  end;

// *********************************************************************//
// The Class CoRobotTableScreenCaptureParams provides a Create and CreateRemote method to          
// create instances of the default interface IRobotTableScreenCaptureParams exposed by              
// the CoClass RobotTableScreenCaptureParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotTableScreenCaptureParams = class
    class function Create: IRobotTableScreenCaptureParams;
    class function CreateRemote(const MachineName: string): IRobotTableScreenCaptureParams;
  end;

// *********************************************************************//
// The Class CoRobotPrintable provides a Create and CreateRemote method to          
// create instances of the default interface IRobotPrintable exposed by              
// the CoClass RobotPrintable. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotPrintable = class
    class function Create: IRobotPrintable;
    class function CreateRemote(const MachineName: string): IRobotPrintable;
  end;

// *********************************************************************//
// The Class CoRobotPrintEngine provides a Create and CreateRemote method to          
// create instances of the default interface IRobotPrintEngine exposed by              
// the CoClass RobotPrintEngine. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotPrintEngine = class
    class function Create: IRobotPrintEngine;
    class function CreateRemote(const MachineName: string): IRobotPrintEngine;
  end;

// *********************************************************************//
// The Class CoRobotRtfView provides a Create and CreateRemote method to          
// create instances of the default interface IRobotRtfView exposed by              
// the CoClass RobotRtfView. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotRtfView = class
    class function Create: IRobotRtfView;
    class function CreateRemote(const MachineName: string): IRobotRtfView;
  end;

// *********************************************************************//
// The Class CoRobotVariableMngr provides a Create and CreateRemote method to          
// create instances of the default interface IRobotVariableMngr exposed by              
// the CoClass RobotVariableMngr. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotVariableMngr = class
    class function Create: IRobotVariableMngr;
    class function CreateRemote(const MachineName: string): IRobotVariableMngr;
  end;

// *********************************************************************//
// The Class CoRobotPageSetup provides a Create and CreateRemote method to          
// create instances of the default interface IRobotPageSetup exposed by              
// the CoClass RobotPageSetup. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotPageSetup = class
    class function Create: IRobotPageSetup;
    class function CreateRemote(const MachineName: string): IRobotPageSetup;
  end;

// *********************************************************************//
// The Class CoRobotReportTemplateMngr provides a Create and CreateRemote method to          
// create instances of the default interface IRobotReportTemplateMngr exposed by              
// the CoClass RobotReportTemplateMngr. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotReportTemplateMngr = class
    class function Create: IRobotReportTemplateMngr;
    class function CreateRemote(const MachineName: string): IRobotReportTemplateMngr;
  end;

// *********************************************************************//
// The Class CoRobotScreenCaptureMngr provides a Create and CreateRemote method to          
// create instances of the default interface IRobotScreenCaptureMngr exposed by              
// the CoClass RobotScreenCaptureMngr. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotScreenCaptureMngr = class
    class function Create: IRobotScreenCaptureMngr;
    class function CreateRemote(const MachineName: string): IRobotScreenCaptureMngr;
  end;

// *********************************************************************//
// The Class CoRobotReportStdElementRtf provides a Create and CreateRemote method to          
// create instances of the default interface IRobotReportStdElementRtf exposed by              
// the CoClass RobotReportStdElementRtf. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotReportStdElementRtf = class
    class function Create: IRobotReportStdElementRtf;
    class function CreateRemote(const MachineName: string): IRobotReportStdElementRtf;
  end;

// *********************************************************************//
// The Class CoRobotReportItem provides a Create and CreateRemote method to          
// create instances of the default interface IRobotReportItem exposed by              
// the CoClass RobotReportItem. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotReportItem = class
    class function Create: IRobotReportItem;
    class function CreateRemote(const MachineName: string): IRobotReportItem;
  end;

// *********************************************************************//
// The Class CoRobotReportItemList provides a Create and CreateRemote method to          
// create instances of the default interface IRobotReportItemList exposed by              
// the CoClass RobotReportItemList. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotReportItemList = class
    class function Create: IRobotReportItemList;
    class function CreateRemote(const MachineName: string): IRobotReportItemList;
  end;

// *********************************************************************//
// The Class CoRobotPageSetupTableOfContents provides a Create and CreateRemote method to          
// create instances of the default interface IRobotPageSetupTableOfContents exposed by              
// the CoClass RobotPageSetupTableOfContents. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotPageSetupTableOfContents = class
    class function Create: IRobotPageSetupTableOfContents;
    class function CreateRemote(const MachineName: string): IRobotPageSetupTableOfContents;
  end;

// *********************************************************************//
// The Class CoRobotHtmlView provides a Create and CreateRemote method to          
// create instances of the default interface IRobotHtmlView exposed by              
// the CoClass RobotHtmlView. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotHtmlView = class
    class function Create: IRobotHtmlView;
    class function CreateRemote(const MachineName: string): IRobotHtmlView;
  end;

// *********************************************************************//
// The Class CoRobotMultiView provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCollection exposed by              
// the CoClass RobotMultiView. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotMultiView = class
    class function Create: IRobotCollection;
    class function CreateRemote(const MachineName: string): IRobotCollection;
  end;

// *********************************************************************//
// The Class CoRDimStream provides a Create and CreateRemote method to          
// create instances of the default interface IRDimStream exposed by              
// the CoClass RDimStream. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimStream = class
    class function Create: IRDimStream;
    class function CreateRemote(const MachineName: string): IRDimStream;
  end;

// *********************************************************************//
// The Class CoRDimSimEffDef provides a Create and CreateRemote method to          
// create instances of the default interface IRDimSimEffDef exposed by              
// the CoClass RDimSimEffDef. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimSimEffDef = class
    class function Create: IRDimSimEffDef;
    class function CreateRemote(const MachineName: string): IRDimSimEffDef;
  end;

// *********************************************************************//
// The Class CoRDimEffDef provides a Create and CreateRemote method to          
// create instances of the default interface IRDimEffDef exposed by              
// the CoClass RDimEffDef. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimEffDef = class
    class function Create: IRDimEffDef;
    class function CreateRemote(const MachineName: string): IRDimEffDef;
  end;

// *********************************************************************//
// The Class CoRDimMatDef provides a Create and CreateRemote method to          
// create instances of the default interface IRDimMatDef exposed by              
// the CoClass RDimMatDef. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimMatDef = class
    class function Create: IRDimMatDef;
    class function CreateRemote(const MachineName: string): IRDimMatDef;
  end;

// *********************************************************************//
// The Class CoRDimProfDef provides a Create and CreateRemote method to          
// create instances of the default interface IRDimProfDef exposed by              
// the CoClass RDimProfDef. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimProfDef = class
    class function Create: IRDimProfDef;
    class function CreateRemote(const MachineName: string): IRDimProfDef;
  end;

// *********************************************************************//
// The Class CoRDimMembSrv provides a Create and CreateRemote method to          
// create instances of the default interface IRDimMembSrv exposed by              
// the CoClass RDimMembSrv. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimMembSrv = class
    class function Create: IRDimMembSrv;
    class function CreateRemote(const MachineName: string): IRDimMembSrv;
  end;

// *********************************************************************//
// The Class CoRDimConnection provides a Create and CreateRemote method to          
// create instances of the default interface IRDimConnection exposed by              
// the CoClass RDimConnection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimConnection = class
    class function Create: IRDimConnection;
    class function CreateRemote(const MachineName: string): IRDimConnection;
  end;

// *********************************************************************//
// The Class CoRDimDeflDisp provides a Create and CreateRemote method to          
// create instances of the default interface IRDimDeflDisp exposed by              
// the CoClass RDimDeflDisp. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimDeflDisp = class
    class function Create: IRDimDeflDisp;
    class function CreateRemote(const MachineName: string): IRDimDeflDisp;
  end;

// *********************************************************************//
// The Class CoRDimCalcState provides a Create and CreateRemote method to          
// create instances of the default interface IRDimCalcState exposed by              
// the CoClass RDimCalcState. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimCalcState = class
    class function Create: IRDimCalcState;
    class function CreateRemote(const MachineName: string): IRDimCalcState;
  end;

// *********************************************************************//
// The Class CoRDimUnits provides a Create and CreateRemote method to          
// create instances of the default interface IRDimUnits exposed by              
// the CoClass RDimUnits. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimUnits = class
    class function Create: IRDimUnits;
    class function CreateRemote(const MachineName: string): IRDimUnits;
  end;

// *********************************************************************//
// The Class CoRDimGrpProfs provides a Create and CreateRemote method to          
// create instances of the default interface IRDimGrpProfs exposed by              
// the CoClass RDimGrpProfs. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimGrpProfs = class
    class function Create: IRDimGrpProfs;
    class function CreateRemote(const MachineName: string): IRDimGrpProfs;
  end;

// *********************************************************************//
// The Class CoRDimGroup provides a Create and CreateRemote method to          
// create instances of the default interface IRDimGroup exposed by              
// the CoClass RDimGroup. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimGroup = class
    class function Create: IRDimGroup;
    class function CreateRemote(const MachineName: string): IRDimGroup;
  end;

// *********************************************************************//
// The Class CoRDimGroups provides a Create and CreateRemote method to          
// create instances of the default interface IRDimGroups exposed by              
// the CoClass RDimGroups. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimGroups = class
    class function Create: IRDimGroups;
    class function CreateRemote(const MachineName: string): IRDimGroups;
  end;

// *********************************************************************//
// The Class CoRDimMembDef provides a Create and CreateRemote method to          
// create instances of the default interface IRDimMembDef exposed by              
// the CoClass RDimMembDef. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimMembDef = class
    class function Create: IRDimMembDef;
    class function CreateRemote(const MachineName: string): IRDimMembDef;
  end;

// *********************************************************************//
// The Class CoRDimMembDefDataSrv provides a Create and CreateRemote method to          
// create instances of the default interface IRDimMembDefDataSrv exposed by              
// the CoClass RDimMembDefDataSrv. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimMembDefDataSrv = class
    class function Create: IRDimMembDefDataSrv;
    class function CreateRemote(const MachineName: string): IRDimMembDefDataSrv;
  end;

// *********************************************************************//
// The Class CoRDimMember provides a Create and CreateRemote method to          
// create instances of the default interface IRDimMember exposed by              
// the CoClass RDimMember. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimMember = class
    class function Create: IRDimMember;
    class function CreateRemote(const MachineName: string): IRDimMember;
  end;

// *********************************************************************//
// The Class CoRDimMembers provides a Create and CreateRemote method to          
// create instances of the default interface IRDimMembers exposed by              
// the CoClass RDimMembers. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimMembers = class
    class function Create: IRDimMembers;
    class function CreateRemote(const MachineName: string): IRDimMembers;
  end;

// *********************************************************************//
// The Class CoRDimServer provides a Create and CreateRemote method to          
// create instances of the default interface IRDimServer exposed by              
// the CoClass RDimServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimServer = class
    class function Create: IRDimServer;
    class function CreateRemote(const MachineName: string): IRDimServer;
  end;

// *********************************************************************//
// The Class CoRDimAdjoinParams provides a Create and CreateRemote method to          
// create instances of the default interface IRDimAdjoinParams exposed by              
// the CoClass RDimAdjoinParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimAdjoinParams = class
    class function Create: IRDimAdjoinParams;
    class function CreateRemote(const MachineName: string): IRDimAdjoinParams;
  end;

// *********************************************************************//
// The Class CoRDimAdjoinAutomat provides a Create and CreateRemote method to          
// create instances of the default interface IRDimAdjoinAutomat exposed by              
// the CoClass RDimAdjoinAutomat. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimAdjoinAutomat = class
    class function Create: IRDimAdjoinAutomat;
    class function CreateRemote(const MachineName: string): IRDimAdjoinAutomat;
  end;

// *********************************************************************//
// The Class CoRDimAdjoinBranch provides a Create and CreateRemote method to          
// create instances of the default interface IRDimAdjoinBranch exposed by              
// the CoClass RDimAdjoinBranch. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimAdjoinBranch = class
    class function Create: IRDimAdjoinBranch;
    class function CreateRemote(const MachineName: string): IRDimAdjoinBranch;
  end;

// *********************************************************************//
// The Class CoRDimInternalPoints provides a Create and CreateRemote method to          
// create instances of the default interface IRDimInternalPoints exposed by              
// the CoClass RDimInternalPoints. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRDimInternalPoints = class
    class function Create: IRDimInternalPoints;
    class function CreateRemote(const MachineName: string): IRDimInternalPoints;
  end;

// *********************************************************************//
// The Class CoRJointConnectionInfo provides a Create and CreateRemote method to          
// create instances of the default interface IRJointConnectionInfo exposed by              
// the CoClass RJointConnectionInfo. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointConnectionInfo = class
    class function Create: IRJointConnectionInfo;
    class function CreateRemote(const MachineName: string): IRJointConnectionInfo;
  end;

// *********************************************************************//
// The Class CoRJointWeld provides a Create and CreateRemote method to          
// create instances of the default interface IRJointWeld exposed by              
// the CoClass RJointWeld. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointWeld = class
    class function Create: IRJointWeld;
    class function CreateRemote(const MachineName: string): IRJointWeld;
  end;

// *********************************************************************//
// The Class CoRJointPlate provides a Create and CreateRemote method to          
// create instances of the default interface IRJointPlate exposed by              
// the CoClass RJointPlate. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointPlate = class
    class function Create: IRJointPlate;
    class function CreateRemote(const MachineName: string): IRJointPlate;
  end;

// *********************************************************************//
// The Class CoRJointKneeDiagonalStiff provides a Create and CreateRemote method to          
// create instances of the default interface IRJointKneeDiagonalStiff exposed by              
// the CoClass RJointKneeDiagonalStiff. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointKneeDiagonalStiff = class
    class function Create: IRJointKneeDiagonalStiff;
    class function CreateRemote(const MachineName: string): IRJointKneeDiagonalStiff;
  end;

// *********************************************************************//
// The Class CoRJointKneeBolts provides a Create and CreateRemote method to          
// create instances of the default interface IRJointKneeBolts exposed by              
// the CoClass RJointKneeBolts. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointKneeBolts = class
    class function Create: IRJointKneeBolts;
    class function CreateRemote(const MachineName: string): IRJointKneeBolts;
  end;

// *********************************************************************//
// The Class CoRJointKneeBracket provides a Create and CreateRemote method to          
// create instances of the default interface IRJointKneeBracket exposed by              
// the CoClass RJointKneeBracket. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointKneeBracket = class
    class function Create: IRJointKneeBracket;
    class function CreateRemote(const MachineName: string): IRJointKneeBracket;
  end;

// *********************************************************************//
// The Class CoRJointKneeWebPlate provides a Create and CreateRemote method to          
// create instances of the default interface IRJointKneeWebPlate exposed by              
// the CoClass RJointKneeWebPlate. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointKneeWebPlate = class
    class function Create: IRJointKneeWebPlate;
    class function CreateRemote(const MachineName: string): IRJointKneeWebPlate;
  end;

// *********************************************************************//
// The Class CoRJointKneeCodeParamsPN90 provides a Create and CreateRemote method to          
// create instances of the default interface IRJointKneeCodeParamsPN90 exposed by              
// the CoClass RJointKneeCodeParamsPN90. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointKneeCodeParamsPN90 = class
    class function Create: IRJointKneeCodeParamsPN90;
    class function CreateRemote(const MachineName: string): IRJointKneeCodeParamsPN90;
  end;

// *********************************************************************//
// The Class CoRJointKneeCodeParamsCM66 provides a Create and CreateRemote method to          
// create instances of the default interface IRJointKneeCodeParamsCM66 exposed by              
// the CoClass RJointKneeCodeParamsCM66. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointKneeCodeParamsCM66 = class
    class function Create: IRJointKneeCodeParamsCM66;
    class function CreateRemote(const MachineName: string): IRJointKneeCodeParamsCM66;
  end;

// *********************************************************************//
// The Class CoRJointKneeCodeParamsEC32 provides a Create and CreateRemote method to          
// create instances of the default interface IRJointKneeCodeParamsEC32 exposed by              
// the CoClass RJointKneeCodeParamsEC32. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointKneeCodeParamsEC32 = class
    class function Create: IRJointKneeCodeParamsEC32;
    class function CreateRemote(const MachineName: string): IRJointKneeCodeParamsEC32;
  end;

// *********************************************************************//
// The Class CoRJointKnee provides a Create and CreateRemote method to          
// create instances of the default interface IRJointKnee exposed by              
// the CoClass RJointKnee. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointKnee = class
    class function Create: IRJointKnee;
    class function CreateRemote(const MachineName: string): IRJointKnee;
  end;

// *********************************************************************//
// The Class CoRJointConnectionServer provides a Create and CreateRemote method to          
// create instances of the default interface IRJointConnectionServer exposed by              
// the CoClass RJointConnectionServer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointConnectionServer = class
    class function Create: IRJointConnectionServer;
    class function CreateRemote(const MachineName: string): IRJointConnectionServer;
  end;

// *********************************************************************//
// The Class CoRJointKneeStiffColumn provides a Create and CreateRemote method to          
// create instances of the default interface IRJointKneeStiffColumn exposed by              
// the CoClass RJointKneeStiffColumn. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointKneeStiffColumn = class
    class function Create: IRJointKneeStiffColumn;
    class function CreateRemote(const MachineName: string): IRJointKneeStiffColumn;
  end;

// *********************************************************************//
// The Class CoRJointProfile provides a Create and CreateRemote method to          
// create instances of the default interface IRJointProfile exposed by              
// the CoClass RJointProfile. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointProfile = class
    class function Create: IRJointProfile;
    class function CreateRemote(const MachineName: string): IRJointProfile;
  end;

// *********************************************************************//
// The Class CoRJointLoad provides a Create and CreateRemote method to          
// create instances of the default interface IRJointLoad exposed by              
// the CoClass RJointLoad. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointLoad = class
    class function Create: IRJointLoad;
    class function CreateRemote(const MachineName: string): IRJointLoad;
  end;

// *********************************************************************//
// The Class CoRJointKneeLoad provides a Create and CreateRemote method to          
// create instances of the default interface IRJointKneeLoad exposed by              
// the CoClass RJointKneeLoad. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointKneeLoad = class
    class function Create: IRJointKneeLoad;
    class function CreateRemote(const MachineName: string): IRJointKneeLoad;
  end;

// *********************************************************************//
// The Class CoRJointAnchorBolt provides a Create and CreateRemote method to          
// create instances of the default interface IRJointAnchorBolt exposed by              
// the CoClass RJointAnchorBolt. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointAnchorBolt = class
    class function Create: IRJointAnchorBolt;
    class function CreateRemote(const MachineName: string): IRJointAnchorBolt;
  end;

// *********************************************************************//
// The Class CoRJointAnchorPlate provides a Create and CreateRemote method to          
// create instances of the default interface IRJointAnchorPlate exposed by              
// the CoClass RJointAnchorPlate. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointAnchorPlate = class
    class function Create: IRJointAnchorPlate;
    class function CreateRemote(const MachineName: string): IRJointAnchorPlate;
  end;

// *********************************************************************//
// The Class CoRJointAnchor provides a Create and CreateRemote method to          
// create instances of the default interface IRJointAnchor exposed by              
// the CoClass RJointAnchor. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointAnchor = class
    class function Create: IRJointAnchor;
    class function CreateRemote(const MachineName: string): IRJointAnchor;
  end;

// *********************************************************************//
// The Class CoRJointFootBolts provides a Create and CreateRemote method to          
// create instances of the default interface IRJointFootBolts exposed by              
// the CoClass RJointFootBolts. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointFootBolts = class
    class function Create: IRJointFootBolts;
    class function CreateRemote(const MachineName: string): IRJointFootBolts;
  end;

// *********************************************************************//
// The Class CoRJointFootPlate provides a Create and CreateRemote method to          
// create instances of the default interface IRJointFootPlate exposed by              
// the CoClass RJointFootPlate. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointFootPlate = class
    class function Create: IRJointFootPlate;
    class function CreateRemote(const MachineName: string): IRJointFootPlate;
  end;

// *********************************************************************//
// The Class CoRJointWedge provides a Create and CreateRemote method to          
// create instances of the default interface IRJointWedge exposed by              
// the CoClass RJointWedge. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointWedge = class
    class function Create: IRJointWedge;
    class function CreateRemote(const MachineName: string): IRJointWedge;
  end;

// *********************************************************************//
// The Class CoRJointBearingPlate provides a Create and CreateRemote method to          
// create instances of the default interface IRJointBearingPlate exposed by              
// the CoClass RJointBearingPlate. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointBearingPlate = class
    class function Create: IRJointBearingPlate;
    class function CreateRemote(const MachineName: string): IRJointBearingPlate;
  end;

// *********************************************************************//
// The Class CoRJointFootWelds provides a Create and CreateRemote method to          
// create instances of the default interface IRJointFootWelds exposed by              
// the CoClass RJointFootWelds. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointFootWelds = class
    class function Create: IRJointFootWelds;
    class function CreateRemote(const MachineName: string): IRJointFootWelds;
  end;

// *********************************************************************//
// The Class CoRJointColumnBracket provides a Create and CreateRemote method to          
// create instances of the default interface IRJointColumnBracket exposed by              
// the CoClass RJointColumnBracket. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointColumnBracket = class
    class function Create: IRJointColumnBracket;
    class function CreateRemote(const MachineName: string): IRJointColumnBracket;
  end;

// *********************************************************************//
// The Class CoRJointPinnedColumnBase provides a Create and CreateRemote method to          
// create instances of the default interface IRJointPinnedColumnBase exposed by              
// the CoClass RJointPinnedColumnBase. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointPinnedColumnBase = class
    class function Create: IRJointPinnedColumnBase;
    class function CreateRemote(const MachineName: string): IRJointPinnedColumnBase;
  end;

// *********************************************************************//
// The Class CoRJointFootStiffenerVert provides a Create and CreateRemote method to          
// create instances of the default interface IRJointFootStiffenerVert exposed by              
// the CoClass RJointFootStiffenerVert. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointFootStiffenerVert = class
    class function Create: IRJointFootStiffenerVert;
    class function CreateRemote(const MachineName: string): IRJointFootStiffenerVert;
  end;

// *********************************************************************//
// The Class CoRJointFootStiffenerHoriz provides a Create and CreateRemote method to          
// create instances of the default interface IRJointFootStiffenerHoriz exposed by              
// the CoClass RJointFootStiffenerHoriz. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointFootStiffenerHoriz = class
    class function Create: IRJointFootStiffenerHoriz;
    class function CreateRemote(const MachineName: string): IRJointFootStiffenerHoriz;
  end;

// *********************************************************************//
// The Class CoRJointFootMaterials provides a Create and CreateRemote method to          
// create instances of the default interface IRJointFootMaterials exposed by              
// the CoClass RJointFootMaterials. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointFootMaterials = class
    class function Create: IRJointFootMaterials;
    class function CreateRemote(const MachineName: string): IRJointFootMaterials;
  end;

// *********************************************************************//
// The Class CoRJointPinnedLoad provides a Create and CreateRemote method to          
// create instances of the default interface IRJointPinnedLoad exposed by              
// the CoClass RJointPinnedLoad. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointPinnedLoad = class
    class function Create: IRJointPinnedLoad;
    class function CreateRemote(const MachineName: string): IRJointPinnedLoad;
  end;

// *********************************************************************//
// The Class CoRJointColumnSquare provides a Create and CreateRemote method to          
// create instances of the default interface IRJointColumnSquare exposed by              
// the CoClass RJointColumnSquare. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointColumnSquare = class
    class function Create: IRJointColumnSquare;
    class function CreateRemote(const MachineName: string): IRJointColumnSquare;
  end;

// *********************************************************************//
// The Class CoRJointFootStiffenerSimple provides a Create and CreateRemote method to          
// create instances of the default interface IRJointFootStiffenerSimple exposed by              
// the CoClass RJointFootStiffenerSimple. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointFootStiffenerSimple = class
    class function Create: IRJointFootStiffenerSimple;
    class function CreateRemote(const MachineName: string): IRJointFootStiffenerSimple;
  end;

// *********************************************************************//
// The Class CoRJointFootStiffenerComplex provides a Create and CreateRemote method to          
// create instances of the default interface IRJointFootStiffenerComplex exposed by              
// the CoClass RJointFootStiffenerComplex. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointFootStiffenerComplex = class
    class function Create: IRJointFootStiffenerComplex;
    class function CreateRemote(const MachineName: string): IRJointFootStiffenerComplex;
  end;

// *********************************************************************//
// The Class CoRJointFootStiffenerTrapezoid provides a Create and CreateRemote method to          
// create instances of the default interface IRJointFootStiffenerTrapezoid exposed by              
// the CoClass RJointFootStiffenerTrapezoid. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointFootStiffenerTrapezoid = class
    class function Create: IRJointFootStiffenerTrapezoid;
    class function CreateRemote(const MachineName: string): IRJointFootStiffenerTrapezoid;
  end;

// *********************************************************************//
// The Class CoRJointColumnBFoundation provides a Create and CreateRemote method to          
// create instances of the default interface IRJointColumnBFoundation exposed by              
// the CoClass RJointColumnBFoundation. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointColumnBFoundation = class
    class function Create: IRJointColumnBFoundation;
    class function CreateRemote(const MachineName: string): IRJointColumnBFoundation;
  end;

// *********************************************************************//
// The Class CoRJointFixedColumnBase provides a Create and CreateRemote method to          
// create instances of the default interface IRJointFixedColumnBase exposed by              
// the CoClass RJointFixedColumnBase. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointFixedColumnBase = class
    class function Create: IRJointFixedColumnBase;
    class function CreateRemote(const MachineName: string): IRJointFixedColumnBase;
  end;

// *********************************************************************//
// The Class CoRJointFixedLoad provides a Create and CreateRemote method to          
// create instances of the default interface IRJointFixedLoad exposed by              
// the CoClass RJointFixedLoad. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointFixedLoad = class
    class function Create: IRJointFixedLoad;
    class function CreateRemote(const MachineName: string): IRJointFixedLoad;
  end;

// *********************************************************************//
// The Class CoRJointConcreteMaterials provides a Create and CreateRemote method to          
// create instances of the default interface IRJointConcreteMaterials exposed by              
// the CoClass RJointConcreteMaterials. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointConcreteMaterials = class
    class function Create: IRJointConcreteMaterials;
    class function CreateRemote(const MachineName: string): IRJointConcreteMaterials;
  end;

// *********************************************************************//
// The Class CoRJointConcreteColumn provides a Create and CreateRemote method to          
// create instances of the default interface IRJointConcreteColumn exposed by              
// the CoClass RJointConcreteColumn. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointConcreteColumn = class
    class function Create: IRJointConcreteColumn;
    class function CreateRemote(const MachineName: string): IRJointConcreteColumn;
  end;

// *********************************************************************//
// The Class CoRJointConcreteColumnFoundation provides a Create and CreateRemote method to          
// create instances of the default interface IRJointConcreteColumnFoundation exposed by              
// the CoClass RJointConcreteColumnFoundation. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointConcreteColumnFoundation = class
    class function Create: IRJointConcreteColumnFoundation;
    class function CreateRemote(const MachineName: string): IRJointConcreteColumnFoundation;
  end;

// *********************************************************************//
// The Class CoRJointConcreteColumnLoad provides a Create and CreateRemote method to          
// create instances of the default interface IRJointConcreteColumnLoad exposed by              
// the CoClass RJointConcreteColumnLoad. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointConcreteColumnLoad = class
    class function Create: IRJointConcreteColumnLoad;
    class function CreateRemote(const MachineName: string): IRJointConcreteColumnLoad;
  end;

// *********************************************************************//
// The Class CoRJointFixedFootWelds provides a Create and CreateRemote method to          
// create instances of the default interface IRJointFixedFootWelds exposed by              
// the CoClass RJointFixedFootWelds. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointFixedFootWelds = class
    class function Create: IRJointFixedFootWelds;
    class function CreateRemote(const MachineName: string): IRJointFixedFootWelds;
  end;

// *********************************************************************//
// The Class CoRJointAngleBolts provides a Create and CreateRemote method to          
// create instances of the default interface IRJointAngleBolts exposed by              
// the CoClass RJointAngleBolts. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointAngleBolts = class
    class function Create: IRJointAngleBolts;
    class function CreateRemote(const MachineName: string): IRJointAngleBolts;
  end;

// *********************************************************************//
// The Class CoRJointAngle provides a Create and CreateRemote method to          
// create instances of the default interface IRJointAngle exposed by              
// the CoClass RJointAngle. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointAngle = class
    class function Create: IRJointAngle;
    class function CreateRemote(const MachineName: string): IRJointAngle;
  end;

// *********************************************************************//
// The Class CoRJointBeamCut provides a Create and CreateRemote method to          
// create instances of the default interface IRJointBeamCut exposed by              
// the CoClass RJointBeamCut. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointBeamCut = class
    class function Create: IRJointBeamCut;
    class function CreateRemote(const MachineName: string): IRJointBeamCut;
  end;

// *********************************************************************//
// The Class CoRJointWithAngles provides a Create and CreateRemote method to          
// create instances of the default interface IRJointWithAngles exposed by              
// the CoClass RJointWithAngles. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointWithAngles = class
    class function Create: IRJointWithAngles;
    class function CreateRemote(const MachineName: string): IRJointWithAngles;
  end;

// *********************************************************************//
// The Class CoRJointAngleLoad provides a Create and CreateRemote method to          
// create instances of the default interface IRJointAngleLoad exposed by              
// the CoClass RJointAngleLoad. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointAngleLoad = class
    class function Create: IRJointAngleLoad;
    class function CreateRemote(const MachineName: string): IRJointAngleLoad;
  end;

// *********************************************************************//
// The Class CoRJointTubeFlangeProfile provides a Create and CreateRemote method to          
// create instances of the default interface IRJointTubeFlangeProfile exposed by              
// the CoClass RJointTubeFlangeProfile. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointTubeFlangeProfile = class
    class function Create: IRJointTubeFlangeProfile;
    class function CreateRemote(const MachineName: string): IRJointTubeFlangeProfile;
  end;

// *********************************************************************//
// The Class CoRJointTubeDiagProfile provides a Create and CreateRemote method to          
// create instances of the default interface IRJointTubeDiagProfile exposed by              
// the CoClass RJointTubeDiagProfile. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointTubeDiagProfile = class
    class function Create: IRJointTubeDiagProfile;
    class function CreateRemote(const MachineName: string): IRJointTubeDiagProfile;
  end;

// *********************************************************************//
// The Class CoRJointTubePostProfile provides a Create and CreateRemote method to          
// create instances of the default interface IRJointTubePostProfile exposed by              
// the CoClass RJointTubePostProfile. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointTubePostProfile = class
    class function Create: IRJointTubePostProfile;
    class function CreateRemote(const MachineName: string): IRJointTubePostProfile;
  end;

// *********************************************************************//
// The Class CoRJointTube provides a Create and CreateRemote method to          
// create instances of the default interface IRJointTube exposed by              
// the CoClass RJointTube. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointTube = class
    class function Create: IRJointTube;
    class function CreateRemote(const MachineName: string): IRJointTube;
  end;

// *********************************************************************//
// The Class CoRJointTubeLoad provides a Create and CreateRemote method to          
// create instances of the default interface IRJointTubeLoad exposed by              
// the CoClass RJointTubeLoad. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointTubeLoad = class
    class function Create: IRJointTubeLoad;
    class function CreateRemote(const MachineName: string): IRJointTubeLoad;
  end;

// *********************************************************************//
// The Class CoRJointGussetBoltsDiag provides a Create and CreateRemote method to          
// create instances of the default interface IRJointGussetBoltsDiag exposed by              
// the CoClass RJointGussetBoltsDiag. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointGussetBoltsDiag = class
    class function Create: IRJointGussetBoltsDiag;
    class function CreateRemote(const MachineName: string): IRJointGussetBoltsDiag;
  end;

// *********************************************************************//
// The Class CoRJointGussetWeldsDiag provides a Create and CreateRemote method to          
// create instances of the default interface IRJointGussetWeldsDiag exposed by              
// the CoClass RJointGussetWeldsDiag. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointGussetWeldsDiag = class
    class function Create: IRJointGussetWeldsDiag;
    class function CreateRemote(const MachineName: string): IRJointGussetWeldsDiag;
  end;

// *********************************************************************//
// The Class CoRJointGussetDiagonale provides a Create and CreateRemote method to          
// create instances of the default interface IRJointGussetDiagonale exposed by              
// the CoClass RJointGussetDiagonale. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointGussetDiagonale = class
    class function Create: IRJointGussetDiagonale;
    class function CreateRemote(const MachineName: string): IRJointGussetDiagonale;
  end;

// *********************************************************************//
// The Class CoRJointGussetSimple provides a Create and CreateRemote method to          
// create instances of the default interface IRJointGussetSimple exposed by              
// the CoClass RJointGussetSimple. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointGussetSimple = class
    class function Create: IRJointGussetSimple;
    class function CreateRemote(const MachineName: string): IRJointGussetSimple;
  end;

// *********************************************************************//
// The Class CoRJointGussetSimplePlate provides a Create and CreateRemote method to          
// create instances of the default interface IRJointGussetSimplePlate exposed by              
// the CoClass RJointGussetSimplePlate. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointGussetSimplePlate = class
    class function Create: IRJointGussetSimplePlate;
    class function CreateRemote(const MachineName: string): IRJointGussetSimplePlate;
  end;

// *********************************************************************//
// The Class CoRJointGussetSimpleAttachment provides a Create and CreateRemote method to          
// create instances of the default interface IRJointGussetSimpleAttachment exposed by              
// the CoClass RJointGussetSimpleAttachment. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointGussetSimpleAttachment = class
    class function Create: IRJointGussetSimpleAttachment;
    class function CreateRemote(const MachineName: string): IRJointGussetSimpleAttachment;
  end;

// *********************************************************************//
// The Class CoRJointGussetSimpleAttachBolts provides a Create and CreateRemote method to          
// create instances of the default interface IRJointGussetSimpleAttachBolts exposed by              
// the CoClass RJointGussetSimpleAttachBolts. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointGussetSimpleAttachBolts = class
    class function Create: IRJointGussetSimpleAttachBolts;
    class function CreateRemote(const MachineName: string): IRJointGussetSimpleAttachBolts;
  end;

// *********************************************************************//
// The Class CoRJointGussetSimpleAttachBoltsHorizontal provides a Create and CreateRemote method to          
// create instances of the default interface IRJointGussetSimpleAttachBoltsHorizontal exposed by              
// the CoClass RJointGussetSimpleAttachBoltsHorizontal. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointGussetSimpleAttachBoltsHorizontal = class
    class function Create: IRJointGussetSimpleAttachBoltsHorizontal;
    class function CreateRemote(const MachineName: string): IRJointGussetSimpleAttachBoltsHorizontal;
  end;

// *********************************************************************//
// The Class CoRJointGussetSimpleAttachBoltsVertical provides a Create and CreateRemote method to          
// create instances of the default interface IRJointGussetSimpleAttachBoltsVertical exposed by              
// the CoClass RJointGussetSimpleAttachBoltsVertical. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointGussetSimpleAttachBoltsVertical = class
    class function Create: IRJointGussetSimpleAttachBoltsVertical;
    class function CreateRemote(const MachineName: string): IRJointGussetSimpleAttachBoltsVertical;
  end;

// *********************************************************************//
// The Class CoRJointGussetSimpleAttachWelds provides a Create and CreateRemote method to          
// create instances of the default interface IRJointGussetSimpleAttachWelds exposed by              
// the CoClass RJointGussetSimpleAttachWelds. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointGussetSimpleAttachWelds = class
    class function Create: IRJointGussetSimpleAttachWelds;
    class function CreateRemote(const MachineName: string): IRJointGussetSimpleAttachWelds;
  end;

// *********************************************************************//
// The Class CoRJointGussetCrossPlate provides a Create and CreateRemote method to          
// create instances of the default interface IRJointGussetCrossPlate exposed by              
// the CoClass RJointGussetCrossPlate. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointGussetCrossPlate = class
    class function Create: IRJointGussetCrossPlate;
    class function CreateRemote(const MachineName: string): IRJointGussetCrossPlate;
  end;

// *********************************************************************//
// The Class CoRJointGussetCross provides a Create and CreateRemote method to          
// create instances of the default interface IRJointGussetCross exposed by              
// the CoClass RJointGussetCross. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointGussetCross = class
    class function Create: IRJointGussetCross;
    class function CreateRemote(const MachineName: string): IRJointGussetCross;
  end;

// *********************************************************************//
// The Class CoRJointGussetFlangePlate provides a Create and CreateRemote method to          
// create instances of the default interface IRJointGussetFlangePlate exposed by              
// the CoClass RJointGussetFlangePlate. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointGussetFlangePlate = class
    class function Create: IRJointGussetFlangePlate;
    class function CreateRemote(const MachineName: string): IRJointGussetFlangePlate;
  end;

// *********************************************************************//
// The Class CoRJointGussetFlange provides a Create and CreateRemote method to          
// create instances of the default interface IRJointGussetFlange exposed by              
// the CoClass RJointGussetFlange. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointGussetFlange = class
    class function Create: IRJointGussetFlange;
    class function CreateRemote(const MachineName: string): IRJointGussetFlange;
  end;

// *********************************************************************//
// The Class CoRJointGussetSimpleLoad provides a Create and CreateRemote method to          
// create instances of the default interface IRJointGussetSimpleLoad exposed by              
// the CoClass RJointGussetSimpleLoad. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointGussetSimpleLoad = class
    class function Create: IRJointGussetSimpleLoad;
    class function CreateRemote(const MachineName: string): IRJointGussetSimpleLoad;
  end;

// *********************************************************************//
// The Class CoRJointGussetCrossLoad provides a Create and CreateRemote method to          
// create instances of the default interface IRJointGussetCrossLoad exposed by              
// the CoClass RJointGussetCrossLoad. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointGussetCrossLoad = class
    class function Create: IRJointGussetCrossLoad;
    class function CreateRemote(const MachineName: string): IRJointGussetCrossLoad;
  end;

// *********************************************************************//
// The Class CoRJointGussetFlangeLoad provides a Create and CreateRemote method to          
// create instances of the default interface IRJointGussetFlangeLoad exposed by              
// the CoClass RJointGussetFlangeLoad. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointGussetFlangeLoad = class
    class function Create: IRJointGussetFlangeLoad;
    class function CreateRemote(const MachineName: string): IRJointGussetFlangeLoad;
  end;

// *********************************************************************//
// The Class CoRJointMainBolts provides a Create and CreateRemote method to          
// create instances of the default interface IRJointMainBolts exposed by              
// the CoClass RJointMainBolts. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointMainBolts = class
    class function Create: IRJointMainBolts;
    class function CreateRemote(const MachineName: string): IRJointMainBolts;
  end;

// *********************************************************************//
// The Class CoRJointBeamBolts provides a Create and CreateRemote method to          
// create instances of the default interface IRJointBeamBolts exposed by              
// the CoClass RJointBeamBolts. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointBeamBolts = class
    class function Create: IRJointBeamBolts;
    class function CreateRemote(const MachineName: string): IRJointBeamBolts;
  end;

// *********************************************************************//
// The Class CoRJointBeamGirderSeatBolts provides a Create and CreateRemote method to          
// create instances of the default interface IRJointBeamGirderSeatBolts exposed by              
// the CoClass RJointBeamGirderSeatBolts. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointBeamGirderSeatBolts = class
    class function Create: IRJointBeamGirderSeatBolts;
    class function CreateRemote(const MachineName: string): IRJointBeamGirderSeatBolts;
  end;

// *********************************************************************//
// The Class CoRJointBeamGirderBeam provides a Create and CreateRemote method to          
// create instances of the default interface IRJointBeamGirderBeam exposed by              
// the CoClass RJointBeamGirderBeam. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointBeamGirderBeam = class
    class function Create: IRJointBeamGirderBeam;
    class function CreateRemote(const MachineName: string): IRJointBeamGirderBeam;
  end;

// *********************************************************************//
// The Class CoRJointBeamGirderAngle provides a Create and CreateRemote method to          
// create instances of the default interface IRJointBeamGirderAngle exposed by              
// the CoClass RJointBeamGirderAngle. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointBeamGirderAngle = class
    class function Create: IRJointBeamGirderAngle;
    class function CreateRemote(const MachineName: string): IRJointBeamGirderAngle;
  end;

// *********************************************************************//
// The Class CoRJointBeamPlate provides a Create and CreateRemote method to          
// create instances of the default interface IRJointBeamPlate exposed by              
// the CoClass RJointBeamPlate. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointBeamPlate = class
    class function Create: IRJointBeamPlate;
    class function CreateRemote(const MachineName: string): IRJointBeamPlate;
  end;

// *********************************************************************//
// The Class CoRJointBeamGirderSeat provides a Create and CreateRemote method to          
// create instances of the default interface IRJointBeamGirderSeat exposed by              
// the CoClass RJointBeamGirderSeat. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointBeamGirderSeat = class
    class function Create: IRJointBeamGirderSeat;
    class function CreateRemote(const MachineName: string): IRJointBeamGirderSeat;
  end;

// *********************************************************************//
// The Class CoRJointBeamGirderStiffener provides a Create and CreateRemote method to          
// create instances of the default interface IRJointBeamGirderStiffener exposed by              
// the CoClass RJointBeamGirderStiffener. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointBeamGirderStiffener = class
    class function Create: IRJointBeamGirderStiffener;
    class function CreateRemote(const MachineName: string): IRJointBeamGirderStiffener;
  end;

// *********************************************************************//
// The Class CoRJointBeamGirder provides a Create and CreateRemote method to          
// create instances of the default interface IRJointBeamGirder exposed by              
// the CoClass RJointBeamGirder. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointBeamGirder = class
    class function Create: IRJointBeamGirder;
    class function CreateRemote(const MachineName: string): IRJointBeamGirder;
  end;

// *********************************************************************//
// The Class CoRJointBeamGirderLoad provides a Create and CreateRemote method to          
// create instances of the default interface IRJointBeamGirderLoad exposed by              
// the CoClass RJointBeamGirderLoad. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointBeamGirderLoad = class
    class function Create: IRJointBeamGirderLoad;
    class function CreateRemote(const MachineName: string): IRJointBeamGirderLoad;
  end;

// *********************************************************************//
// The Class CoRJointBeamColumn provides a Create and CreateRemote method to          
// create instances of the default interface IRJointBeamColumn exposed by              
// the CoClass RJointBeamColumn. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointBeamColumn = class
    class function Create: IRJointBeamColumn;
    class function CreateRemote(const MachineName: string): IRJointBeamColumn;
  end;

// *********************************************************************//
// The Class CoRJointBeamAngle provides a Create and CreateRemote method to          
// create instances of the default interface IRJointBeamAngle exposed by              
// the CoClass RJointBeamAngle. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointBeamAngle = class
    class function Create: IRJointBeamAngle;
    class function CreateRemote(const MachineName: string): IRJointBeamAngle;
  end;

// *********************************************************************//
// The Class CoRJointBeamColumnFlangePlate provides a Create and CreateRemote method to          
// create instances of the default interface IRJointBeamColumnFlangePlate exposed by              
// the CoClass RJointBeamColumnFlangePlate. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointBeamColumnFlangePlate = class
    class function Create: IRJointBeamColumnFlangePlate;
    class function CreateRemote(const MachineName: string): IRJointBeamColumnFlangePlate;
  end;

// *********************************************************************//
// The Class CoRJointBeamSeatMainBolts provides a Create and CreateRemote method to          
// create instances of the default interface IRJointBeamSeatMainBolts exposed by              
// the CoClass RJointBeamSeatMainBolts. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointBeamSeatMainBolts = class
    class function Create: IRJointBeamSeatMainBolts;
    class function CreateRemote(const MachineName: string): IRJointBeamSeatMainBolts;
  end;

// *********************************************************************//
// The Class CoRJointBeamSeatL provides a Create and CreateRemote method to          
// create instances of the default interface IRJointBeamSeatL exposed by              
// the CoClass RJointBeamSeatL. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointBeamSeatL = class
    class function Create: IRJointBeamSeatL;
    class function CreateRemote(const MachineName: string): IRJointBeamSeatL;
  end;

// *********************************************************************//
// The Class CoRJointBeamSeatT provides a Create and CreateRemote method to          
// create instances of the default interface IRJointBeamSeatT exposed by              
// the CoClass RJointBeamSeatT. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointBeamSeatT = class
    class function Create: IRJointBeamSeatT;
    class function CreateRemote(const MachineName: string): IRJointBeamSeatT;
  end;

// *********************************************************************//
// The Class CoRJointSplice provides a Create and CreateRemote method to          
// create instances of the default interface IRJointSplice exposed by              
// the CoClass RJointSplice. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointSplice = class
    class function Create: IRJointSplice;
    class function CreateRemote(const MachineName: string): IRJointSplice;
  end;

// *********************************************************************//
// The Class CoRJointSpliceLoad provides a Create and CreateRemote method to          
// create instances of the default interface IRJointSpliceLoad exposed by              
// the CoClass RJointSpliceLoad. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointSpliceLoad = class
    class function Create: IRJointSpliceLoad;
    class function CreateRemote(const MachineName: string): IRJointSpliceLoad;
  end;

// *********************************************************************//
// The Class CoRJointSplicePlate provides a Create and CreateRemote method to          
// create instances of the default interface IRJointSplicePlate exposed by              
// the CoClass RJointSplicePlate. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointSplicePlate = class
    class function Create: IRJointSplicePlate;
    class function CreateRemote(const MachineName: string): IRJointSplicePlate;
  end;

// *********************************************************************//
// The Class CoRJointSpliceBolts provides a Create and CreateRemote method to          
// create instances of the default interface IRJointSpliceBolts exposed by              
// the CoClass RJointSpliceBolts. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointSpliceBolts = class
    class function Create: IRJointSpliceBolts;
    class function CreateRemote(const MachineName: string): IRJointSpliceBolts;
  end;

// *********************************************************************//
// The Class CoRJointSpliceWelds provides a Create and CreateRemote method to          
// create instances of the default interface IRJointSpliceWelds exposed by              
// the CoClass RJointSpliceWelds. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointSpliceWelds = class
    class function Create: IRJointSpliceWelds;
    class function CreateRemote(const MachineName: string): IRJointSpliceWelds;
  end;

// *********************************************************************//
// The Class CoRJointTie provides a Create and CreateRemote method to          
// create instances of the default interface IRJointTie exposed by              
// the CoClass RJointTie. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointTie = class
    class function Create: IRJointTie;
    class function CreateRemote(const MachineName: string): IRJointTie;
  end;

// *********************************************************************//
// The Class CoRJointTieLoad provides a Create and CreateRemote method to          
// create instances of the default interface IRJointTieLoad exposed by              
// the CoClass RJointTieLoad. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointTieLoad = class
    class function Create: IRJointTieLoad;
    class function CreateRemote(const MachineName: string): IRJointTieLoad;
  end;

// *********************************************************************//
// The Class CoRJointTieStiffeners provides a Create and CreateRemote method to          
// create instances of the default interface IRJointTieStiffeners exposed by              
// the CoClass RJointTieStiffeners. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointTieStiffeners = class
    class function Create: IRJointTieStiffeners;
    class function CreateRemote(const MachineName: string): IRJointTieStiffeners;
  end;

// *********************************************************************//
// The Class CoRJointTiePlates provides a Create and CreateRemote method to          
// create instances of the default interface IRJointTiePlates exposed by              
// the CoClass RJointTiePlates. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointTiePlates = class
    class function Create: IRJointTiePlates;
    class function CreateRemote(const MachineName: string): IRJointTiePlates;
  end;

// *********************************************************************//
// The Class CoRJointTieConnectors provides a Create and CreateRemote method to          
// create instances of the default interface IRJointTieConnectors exposed by              
// the CoClass RJointTieConnectors. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointTieConnectors = class
    class function Create: IRJointTieConnectors;
    class function CreateRemote(const MachineName: string): IRJointTieConnectors;
  end;

// *********************************************************************//
// The Class CoRJointTieBolts provides a Create and CreateRemote method to          
// create instances of the default interface IRJointTieBolts exposed by              
// the CoClass RJointTieBolts. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointTieBolts = class
    class function Create: IRJointTieBolts;
    class function CreateRemote(const MachineName: string): IRJointTieBolts;
  end;

// *********************************************************************//
// The Class CoRJointTieWelds provides a Create and CreateRemote method to          
// create instances of the default interface IRJointTieWelds exposed by              
// the CoClass RJointTieWelds. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRJointTieWelds = class
    class function Create: IRJointTieWelds;
    class function CreateRemote(const MachineName: string): IRJointTieWelds;
  end;

// *********************************************************************//
// The Class CoRConcrBarSectionData provides a Create and CreateRemote method to          
// create instances of the default interface IRConcrBarSectionData exposed by              
// the CoClass RConcrBarSectionData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcrBarSectionData = class
    class function Create: IRConcrBarSectionData;
    class function CreateRemote(const MachineName: string): IRConcrBarSectionData;
  end;

// *********************************************************************//
// The Class CoRBestParamSet provides a Create and CreateRemote method to          
// create instances of the default interface IRBestParamSet exposed by              
// the CoClass RBestParamSet. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRBestParamSet = class
    class function Create: IRBestParamSet;
    class function CreateRemote(const MachineName: string): IRBestParamSet;
  end;

// *********************************************************************//
// The Class CoRBestCalcParamsData provides a Create and CreateRemote method to          
// create instances of the default interface IRBestCalcParamsData exposed by              
// the CoClass RBestCalcParamsData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRBestCalcParamsData = class
    class function Create: IRBestCalcParamsData;
    class function CreateRemote(const MachineName: string): IRBestCalcParamsData;
  end;

// *********************************************************************//
// The Class CoRBestCalcParamsDataList provides a Create and CreateRemote method to          
// create instances of the default interface IRBestCalcParamsDataList exposed by              
// the CoClass RBestCalcParamsDataList. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRBestCalcParamsDataList = class
    class function Create: IRBestCalcParamsDataList;
    class function CreateRemote(const MachineName: string): IRBestCalcParamsDataList;
  end;

// *********************************************************************//
// The Class CoRBestMemberData provides a Create and CreateRemote method to          
// create instances of the default interface IRBestMemberData exposed by              
// the CoClass RBestMemberData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRBestMemberData = class
    class function Create: IRBestMemberData;
    class function CreateRemote(const MachineName: string): IRBestMemberData;
  end;

// *********************************************************************//
// The Class CoRBestResults provides a Create and CreateRemote method to          
// create instances of the default interface IRBestResults exposed by              
// the CoClass RBestResults. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRBestResults = class
    class function Create: IRBestResults;
    class function CreateRemote(const MachineName: string): IRBestResults;
  end;

// *********************************************************************//
// The Class CoRBestForceData provides a Create and CreateRemote method to          
// create instances of the default interface IRBestForceData exposed by              
// the CoClass RBestForceData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRBestForceData = class
    class function Create: IRBestForceData;
    class function CreateRemote(const MachineName: string): IRBestForceData;
  end;

// *********************************************************************//
// The Class CoRBestDimParams provides a Create and CreateRemote method to          
// create instances of the default interface IRBestDimParams exposed by              
// the CoClass RBestDimParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRBestDimParams = class
    class function Create: IRBestDimParams;
    class function CreateRemote(const MachineName: string): IRBestDimParams;
  end;

// *********************************************************************//
// The Class CoRConcrMemberRequiredReinfCalcParams provides a Create and CreateRemote method to          
// create instances of the default interface IRConcrMemberRequiredReinfCalcParams exposed by              
// the CoClass RConcrMemberRequiredReinfCalcParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcrMemberRequiredReinfCalcParams = class
    class function Create: IRConcrMemberRequiredReinfCalcParams;
    class function CreateRemote(const MachineName: string): IRConcrMemberRequiredReinfCalcParams;
  end;

// *********************************************************************//
// The Class CoRConcrMemberRequiredReinfEngine provides a Create and CreateRemote method to          
// create instances of the default interface IRConcrMemberRequiredReinfEngine exposed by              
// the CoClass RConcrMemberRequiredReinfEngine. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcrMemberRequiredReinfEngine = class
    class function Create: IRConcrMemberRequiredReinfEngine;
    class function CreateRemote(const MachineName: string): IRConcrMemberRequiredReinfEngine;
  end;

// *********************************************************************//
// The Class CoRobotCodeRegistrar provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCodeRegistrar exposed by              
// the CoClass RobotCodeRegistrar. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCodeRegistrar = class
    class function Create: IRobotCodeRegistrar;
    class function CreateRemote(const MachineName: string): IRobotCodeRegistrar;
  end;

// *********************************************************************//
// The Class CoRobotAddInRegistrar provides a Create and CreateRemote method to          
// create instances of the default interface IRobotAddInRegistrar exposed by              
// the CoClass RobotAddInRegistrar. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotAddInRegistrar = class
    class function Create: IRobotAddInRegistrar;
    class function CreateRemote(const MachineName: string): IRobotAddInRegistrar;
  end;

// *********************************************************************//
// The Class CoRobotCmdInfo provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCmdInfo exposed by              
// the CoClass RobotCmdInfo. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCmdInfo = class
    class function Create: IRobotCmdInfo;
    class function CreateRemote(const MachineName: string): IRobotCmdInfo;
  end;

// *********************************************************************//
// The Class CoRobotCmdList provides a Create and CreateRemote method to          
// create instances of the default interface IRobotCmdList exposed by              
// the CoClass RobotCmdList. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotCmdList = class
    class function Create: IRobotCmdList;
    class function CreateRemote(const MachineName: string): IRobotCmdList;
  end;

// *********************************************************************//
// The Class CoRobotAddInMngr provides a Create and CreateRemote method to          
// create instances of the default interface IRobotAddInMngr exposed by              
// the CoClass RobotAddInMngr. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotAddInMngr = class
    class function Create: IRobotAddInMngr;
    class function CreateRemote(const MachineName: string): IRobotAddInMngr;
  end;

// *********************************************************************//
// The Class CoRConcrReinforceData provides a Create and CreateRemote method to          
// create instances of the default interface IRConcrReinforceData2 exposed by              
// the CoClass RConcrReinforceData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcrReinforceData = class
    class function Create: IRConcrReinforceData2;
    class function CreateRemote(const MachineName: string): IRConcrReinforceData2;
  end;

// *********************************************************************//
// The Class CoRConcrConcreteParams provides a Create and CreateRemote method to          
// create instances of the default interface IRConcrConcreteParams exposed by              
// the CoClass RConcrConcreteParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcrConcreteParams = class
    class function Create: IRConcrConcreteParams;
    class function CreateRemote(const MachineName: string): IRConcrConcreteParams;
  end;

// *********************************************************************//
// The Class CoRConcrSteelParams provides a Create and CreateRemote method to          
// create instances of the default interface IRConcrSteelParams exposed by              
// the CoClass RConcrSteelParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcrSteelParams = class
    class function Create: IRConcrSteelParams;
    class function CreateRemote(const MachineName: string): IRConcrSteelParams;
  end;

// *********************************************************************//
// The Class CoRConcr_PN84_ReinforceData provides a Create and CreateRemote method to          
// create instances of the default interface IRConcr_PN84_ReinforceData exposed by              
// the CoClass RConcr_PN84_ReinforceData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcr_PN84_ReinforceData = class
    class function Create: IRConcr_PN84_ReinforceData;
    class function CreateRemote(const MachineName: string): IRConcr_PN84_ReinforceData;
  end;

// *********************************************************************//
// The Class CoRConcr_PN99_ReinforceData provides a Create and CreateRemote method to          
// create instances of the default interface IRConcr_PN99_ReinforceData exposed by              
// the CoClass RConcr_PN99_ReinforceData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcr_PN99_ReinforceData = class
    class function Create: IRConcr_PN99_ReinforceData;
    class function CreateRemote(const MachineName: string): IRConcr_PN99_ReinforceData;
  end;

// *********************************************************************//
// The Class CoRConcr_BAEL_ReinforceData provides a Create and CreateRemote method to          
// create instances of the default interface IRConcr_BAEL_ReinforceData exposed by              
// the CoClass RConcr_BAEL_ReinforceData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcr_BAEL_ReinforceData = class
    class function Create: IRConcr_BAEL_ReinforceData;
    class function CreateRemote(const MachineName: string): IRConcr_BAEL_ReinforceData;
  end;

// *********************************************************************//
// The Class CoRConcr_ACI318_ReinforceData provides a Create and CreateRemote method to          
// create instances of the default interface IRConcr_ACI318_ReinforceData exposed by              
// the CoClass RConcr_ACI318_ReinforceData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcr_ACI318_ReinforceData = class
    class function Create: IRConcr_ACI318_ReinforceData;
    class function CreateRemote(const MachineName: string): IRConcr_ACI318_ReinforceData;
  end;

// *********************************************************************//
// The Class CoRConcr_ACI318_ConcreteParams provides a Create and CreateRemote method to          
// create instances of the default interface IRConcr_ACI318_ConcreteParams exposed by              
// the CoClass RConcr_ACI318_ConcreteParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcr_ACI318_ConcreteParams = class
    class function Create: IRConcr_ACI318_ConcreteParams;
    class function CreateRemote(const MachineName: string): IRConcr_ACI318_ConcreteParams;
  end;

// *********************************************************************//
// The Class CoRConcr_BS8110_ReinforceData provides a Create and CreateRemote method to          
// create instances of the default interface IRConcr_BS8110_ReinforceData exposed by              
// the CoClass RConcr_BS8110_ReinforceData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcr_BS8110_ReinforceData = class
    class function Create: IRConcr_BS8110_ReinforceData;
    class function CreateRemote(const MachineName: string): IRConcr_BS8110_ReinforceData;
  end;

// *********************************************************************//
// The Class CoRConcrSlabRequiredReinfCalcParams provides a Create and CreateRemote method to          
// create instances of the default interface IRConcrSlabRequiredReinfCalcParams exposed by              
// the CoClass RConcrSlabRequiredReinfCalcParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcrSlabRequiredReinfCalcParams = class
    class function Create: IRConcrSlabRequiredReinfCalcParams;
    class function CreateRemote(const MachineName: string): IRConcrSlabRequiredReinfCalcParams;
  end;

// *********************************************************************//
// The Class CoRConcrSlabRequiredReinfEngine provides a Create and CreateRemote method to          
// create instances of the default interface IRConcrSlabRequiredReinfEngine exposed by              
// the CoClass RConcrSlabRequiredReinfEngine. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcrSlabRequiredReinfEngine = class
    class function Create: IRConcrSlabRequiredReinfEngine;
    class function CreateRemote(const MachineName: string): IRConcrSlabRequiredReinfEngine;
  end;

// *********************************************************************//
// The Class CoRConcrCalcEngine provides a Create and CreateRemote method to          
// create instances of the default interface IRConcrCalcEngine exposed by              
// the CoClass RConcrCalcEngine. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcrCalcEngine = class
    class function Create: IRConcrCalcEngine;
    class function CreateRemote(const MachineName: string): IRConcrCalcEngine;
  end;

// *********************************************************************//
// The Class CoRConcrReinforceDataMain provides a Create and CreateRemote method to          
// create instances of the default interface IRConcrReinforceDataMain exposed by              
// the CoClass RConcrReinforceDataMain. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcrReinforceDataMain = class
    class function Create: IRConcrReinforceDataMain;
    class function CreateRemote(const MachineName: string): IRConcrReinforceDataMain;
  end;

// *********************************************************************//
// The Class CoRConcr_SNIP_ConcreteParams provides a Create and CreateRemote method to          
// create instances of the default interface IRConcr_SNIP_ConcreteParams exposed by              
// the CoClass RConcr_SNIP_ConcreteParams. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcr_SNIP_ConcreteParams = class
    class function Create: IRConcr_SNIP_ConcreteParams;
    class function CreateRemote(const MachineName: string): IRConcr_SNIP_ConcreteParams;
  end;

// *********************************************************************//
// The Class CoRConcr_SNIP_ReinforceData provides a Create and CreateRemote method to          
// create instances of the default interface IRConcr_SNIP_ReinforceData exposed by              
// the CoClass RConcr_SNIP_ReinforceData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcr_SNIP_ReinforceData = class
    class function Create: IRConcr_SNIP_ReinforceData;
    class function CreateRemote(const MachineName: string): IRConcr_SNIP_ReinforceData;
  end;

// *********************************************************************//
// The Class CoRConcr_EC2_ReinforceData provides a Create and CreateRemote method to          
// create instances of the default interface IRConcr_EC2_ReinforceData exposed by              
// the CoClass RConcr_EC2_ReinforceData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcr_EC2_ReinforceData = class
    class function Create: IRConcr_EC2_ReinforceData;
    class function CreateRemote(const MachineName: string): IRConcr_EC2_ReinforceData;
  end;

// *********************************************************************//
// The Class CoRConcr_IS2000_ReinforceData provides a Create and CreateRemote method to          
// create instances of the default interface IRConcr_IS2000_ReinforceData exposed by              
// the CoClass RConcr_IS2000_ReinforceData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcr_IS2000_ReinforceData = class
    class function Create: IRConcr_IS2000_ReinforceData;
    class function CreateRemote(const MachineName: string): IRConcr_IS2000_ReinforceData;
  end;

// *********************************************************************//
// The Class CoRConcrColumnBucklingModel provides a Create and CreateRemote method to          
// create instances of the default interface IRConcrColumnBucklingModel exposed by              
// the CoClass RConcrColumnBucklingModel. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcrColumnBucklingModel = class
    class function Create: IRConcrColumnBucklingModel;
    class function CreateRemote(const MachineName: string): IRConcrColumnBucklingModel;
  end;

// *********************************************************************//
// The Class CoRConcrColumnLoads provides a Create and CreateRemote method to          
// create instances of the default interface IRConcrColumnLoads exposed by              
// the CoClass RConcrColumnLoads. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcrColumnLoads = class
    class function Create: IRConcrColumnLoads;
    class function CreateRemote(const MachineName: string): IRConcrColumnLoads;
  end;

// *********************************************************************//
// The Class CoRConcrColumnLoad provides a Create and CreateRemote method to          
// create instances of the default interface IRConcrColumnLoad exposed by              
// the CoClass RConcrColumnLoad. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcrColumnLoad = class
    class function Create: IRConcrColumnLoad;
    class function CreateRemote(const MachineName: string): IRConcrColumnLoad;
  end;

// *********************************************************************//
// The Class CoRConcrCodeReport provides a Create and CreateRemote method to          
// create instances of the default interface IRConcrCodeReport exposed by              
// the CoClass RConcrCodeReport. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRConcrCodeReport = class
    class function Create: IRConcrCodeReport;
    class function CreateRemote(const MachineName: string): IRConcrCodeReport;
  end;

// *********************************************************************//
// The Class CoRobotApplication provides a Create and CreateRemote method to          
// create instances of the default interface IRobotApplication exposed by              
// the CoClass RobotApplication. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotApplication = class
    class function Create: IRobotApplication;
    class function CreateRemote(const MachineName: string): IRobotApplication;
  end;

// *********************************************************************//
// The Class CoRobotProtectionInfo provides a Create and CreateRemote method to          
// create instances of the default interface IRobotProtectionInfo exposed by              
// the CoClass RobotProtectionInfo. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotProtectionInfo = class
    class function Create: IRobotProtectionInfo;
    class function CreateRemote(const MachineName: string): IRobotProtectionInfo;
  end;

// *********************************************************************//
// The Class CoRobotAppSTRAnalyser provides a Create and CreateRemote method to          
// create instances of the default interface IRobotSTRFileAnalyser exposed by              
// the CoClass RobotAppSTRAnalyser. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRobotAppSTRAnalyser = class
    class function Create: IRobotSTRFileAnalyser;
    class function CreateRemote(const MachineName: string): IRobotSTRFileAnalyser;
  end;

implementation

uses ComObj;

class function CoDontUseIt.Create: IDontUseIt;
begin
  Result := CreateComObject(CLASS_DontUseIt) as IDontUseIt;
end;

class function CoDontUseIt.CreateRemote(const MachineName: string): IDontUseIt;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DontUseIt) as IDontUseIt;
end;

class function CoRobotLabel.Create: IRobotLabel;
begin
  Result := CreateComObject(CLASS_RobotLabel) as IRobotLabel;
end;

class function CoRobotLabel.CreateRemote(const MachineName: string): IRobotLabel;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotLabel) as IRobotLabel;
end;

class function CoRobotLabelServer.Create: IRobotLabelServer;
begin
  Result := CreateComObject(CLASS_RobotLabelServer) as IRobotLabelServer;
end;

class function CoRobotLabelServer.CreateRemote(const MachineName: string): IRobotLabelServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotLabelServer) as IRobotLabelServer;
end;

class function CoRobotLabelCollection.Create: IRobotCollection;
begin
  Result := CreateComObject(CLASS_RobotLabelCollection) as IRobotCollection;
end;

class function CoRobotLabelCollection.CreateRemote(const MachineName: string): IRobotCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotLabelCollection) as IRobotCollection;
end;

class function CoRobotObjectLabelCollection.Create: IRobotCollection;
begin
  Result := CreateComObject(CLASS_RobotObjectLabelCollection) as IRobotCollection;
end;

class function CoRobotObjectLabelCollection.CreateRemote(const MachineName: string): IRobotCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjectLabelCollection) as IRobotCollection;
end;

class function CoRobotLoadRecord.Create: IRobotLoadRecord2;
begin
  Result := CreateComObject(CLASS_RobotLoadRecord) as IRobotLoadRecord2;
end;

class function CoRobotLoadRecord.CreateRemote(const MachineName: string): IRobotLoadRecord2;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotLoadRecord) as IRobotLoadRecord2;
end;

class function CoRobotLoadRecordMngr.Create: IRobotLoadRecordMngr;
begin
  Result := CreateComObject(CLASS_RobotLoadRecordMngr) as IRobotLoadRecordMngr;
end;

class function CoRobotLoadRecordMngr.CreateRemote(const MachineName: string): IRobotLoadRecordMngr;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotLoadRecordMngr) as IRobotLoadRecordMngr;
end;

class function CoRobotLoadRecordLinear.Create: IRobotLoadRecordLinear;
begin
  Result := CreateComObject(CLASS_RobotLoadRecordLinear) as IRobotLoadRecordLinear;
end;

class function CoRobotLoadRecordLinear.CreateRemote(const MachineName: string): IRobotLoadRecordLinear;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotLoadRecordLinear) as IRobotLoadRecordLinear;
end;

class function CoRobotLoadRecordLinear3D.Create: IRobotLoadRecordLinear3D;
begin
  Result := CreateComObject(CLASS_RobotLoadRecordLinear3D) as IRobotLoadRecordLinear3D;
end;

class function CoRobotLoadRecordLinear3D.CreateRemote(const MachineName: string): IRobotLoadRecordLinear3D;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotLoadRecordLinear3D) as IRobotLoadRecordLinear3D;
end;

class function CoRobotLoadRecordIn3Points.Create: IRobotLoadRecordIn3Points;
begin
  Result := CreateComObject(CLASS_RobotLoadRecordIn3Points) as IRobotLoadRecordIn3Points;
end;

class function CoRobotLoadRecordIn3Points.CreateRemote(const MachineName: string): IRobotLoadRecordIn3Points;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotLoadRecordIn3Points) as IRobotLoadRecordIn3Points;
end;

class function CoRobotLoadRecordThermalIn3Points.Create: IRobotLoadRecordThermalIn3Points;
begin
  Result := CreateComObject(CLASS_RobotLoadRecordThermalIn3Points) as IRobotLoadRecordThermalIn3Points;
end;

class function CoRobotLoadRecordThermalIn3Points.CreateRemote(const MachineName: string): IRobotLoadRecordThermalIn3Points;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotLoadRecordThermalIn3Points) as IRobotLoadRecordThermalIn3Points;
end;

class function CoRobotLoadRecordInContour.Create: IRobotLoadRecordInContour;
begin
  Result := CreateComObject(CLASS_RobotLoadRecordInContour) as IRobotLoadRecordInContour;
end;

class function CoRobotLoadRecordInContour.CreateRemote(const MachineName: string): IRobotLoadRecordInContour;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotLoadRecordInContour) as IRobotLoadRecordInContour;
end;

class function CoRobotSimpleCase.Create: IRobotSimpleCase;
begin
  Result := CreateComObject(CLASS_RobotSimpleCase) as IRobotSimpleCase;
end;

class function CoRobotSimpleCase.CreateRemote(const MachineName: string): IRobotSimpleCase;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSimpleCase) as IRobotSimpleCase;
end;

class function CoRobotCaseCombination.Create: IRobotCaseCombination;
begin
  Result := CreateComObject(CLASS_RobotCaseCombination) as IRobotCaseCombination;
end;

class function CoRobotCaseCombination.CreateRemote(const MachineName: string): IRobotCaseCombination;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCaseCombination) as IRobotCaseCombination;
end;

class function CoRobotCaseCollection.Create: IRobotCaseCollection;
begin
  Result := CreateComObject(CLASS_RobotCaseCollection) as IRobotCaseCollection;
end;

class function CoRobotCaseCollection.CreateRemote(const MachineName: string): IRobotCaseCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCaseCollection) as IRobotCaseCollection;
end;

class function CoRobotCaseFactor.Create: IRobotCaseFactor;
begin
  Result := CreateComObject(CLASS_RobotCaseFactor) as IRobotCaseFactor;
end;

class function CoRobotCaseFactor.CreateRemote(const MachineName: string): IRobotCaseFactor;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCaseFactor) as IRobotCaseFactor;
end;

class function CoRobotCaseFactorMngr.Create: IRobotCaseFactorMngr;
begin
  Result := CreateComObject(CLASS_RobotCaseFactorMngr) as IRobotCaseFactorMngr;
end;

class function CoRobotCaseFactorMngr.CreateRemote(const MachineName: string): IRobotCaseFactorMngr;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCaseFactorMngr) as IRobotCaseFactorMngr;
end;

class function CoRobotCaseServer.Create: IRobotCaseServer;
begin
  Result := CreateComObject(CLASS_RobotCaseServer) as IRobotCaseServer;
end;

class function CoRobotCaseServer.CreateRemote(const MachineName: string): IRobotCaseServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCaseServer) as IRobotCaseServer;
end;

class function CoRobotCodeCmbComponentMngr.Create: IRobotCodeCmbComponentMngr;
begin
  Result := CreateComObject(CLASS_RobotCodeCmbComponentMngr) as IRobotCodeCmbComponentMngr;
end;

class function CoRobotCodeCmbComponentMngr.CreateRemote(const MachineName: string): IRobotCodeCmbComponentMngr;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCodeCmbComponentMngr) as IRobotCodeCmbComponentMngr;
end;

class function CoRobotCodeCombination.Create: IRobotCodeCombination;
begin
  Result := CreateComObject(CLASS_RobotCodeCombination) as IRobotCodeCombination;
end;

class function CoRobotCodeCombination.CreateRemote(const MachineName: string): IRobotCodeCombination;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCodeCombination) as IRobotCodeCombination;
end;

class function CoRobotCodeCmbFactor.Create: IRobotCodeCmbFactor;
begin
  Result := CreateComObject(CLASS_RobotCodeCmbFactor) as IRobotCodeCmbFactor;
end;

class function CoRobotCodeCmbFactor.CreateRemote(const MachineName: string): IRobotCodeCmbFactor;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCodeCmbFactor) as IRobotCodeCmbFactor;
end;

class function CoRobotCodeCmbComponent.Create: IRobotCodeCmbComponent;
begin
  Result := CreateComObject(CLASS_RobotCodeCmbComponent) as IRobotCodeCmbComponent;
end;

class function CoRobotCodeCmbComponent.CreateRemote(const MachineName: string): IRobotCodeCmbComponent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCodeCmbComponent) as IRobotCodeCmbComponent;
end;

class function CoRobotCodeCombinationEngine.Create: IRobotCodeCombinationEngine;
begin
  Result := CreateComObject(CLASS_RobotCodeCombinationEngine) as IRobotCodeCombinationEngine;
end;

class function CoRobotCodeCombinationEngine.CreateRemote(const MachineName: string): IRobotCodeCombinationEngine;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCodeCombinationEngine) as IRobotCodeCombinationEngine;
end;

class function CoRobotMobileCase.Create: IRobotMobileCase;
begin
  Result := CreateComObject(CLASS_RobotMobileCase) as IRobotMobileCase;
end;

class function CoRobotMobileCase.CreateRemote(const MachineName: string): IRobotMobileCase;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotMobileCase) as IRobotMobileCase;
end;

class function CoRobotMobileCaseComponentMngr.Create: IRobotMobileCaseComponentMngr;
begin
  Result := CreateComObject(CLASS_RobotMobileCaseComponentMngr) as IRobotMobileCaseComponentMngr;
end;

class function CoRobotMobileCaseComponentMngr.CreateRemote(const MachineName: string): IRobotMobileCaseComponentMngr;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotMobileCaseComponentMngr) as IRobotMobileCaseComponentMngr;
end;

class function CoRobotMobileCaseComponent.Create: IRobotMobileCaseComponent;
begin
  Result := CreateComObject(CLASS_RobotMobileCaseComponent) as IRobotMobileCaseComponent;
end;

class function CoRobotMobileCaseComponent.CreateRemote(const MachineName: string): IRobotMobileCaseComponent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotMobileCaseComponent) as IRobotMobileCaseComponent;
end;

class function CoRobotMobileCaseRoute.Create: IRobotMobileCaseRoute;
begin
  Result := CreateComObject(CLASS_RobotMobileCaseRoute) as IRobotMobileCaseRoute;
end;

class function CoRobotMobileCaseRoute.CreateRemote(const MachineName: string): IRobotMobileCaseRoute;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotMobileCaseRoute) as IRobotMobileCaseRoute;
end;

class function CoRobotMobileCaseSegmentFactors.Create: IRobotMobileCaseSegmentFactors;
begin
  Result := CreateComObject(CLASS_RobotMobileCaseSegmentFactors) as IRobotMobileCaseSegmentFactors;
end;

class function CoRobotMobileCaseSegmentFactors.CreateRemote(const MachineName: string): IRobotMobileCaseSegmentFactors;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotMobileCaseSegmentFactors) as IRobotMobileCaseSegmentFactors;
end;

class function CoRobotNode.Create: IRobotNode;
begin
  Result := CreateComObject(CLASS_RobotNode) as IRobotNode;
end;

class function CoRobotNode.CreateRemote(const MachineName: string): IRobotNode;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNode) as IRobotNode;
end;

class function CoRobotNodeCollection.Create: IRobotCollection;
begin
  Result := CreateComObject(CLASS_RobotNodeCollection) as IRobotCollection;
end;

class function CoRobotNodeCollection.CreateRemote(const MachineName: string): IRobotCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNodeCollection) as IRobotCollection;
end;

class function CoRobotNodeServer.Create: IRobotNodeServer;
begin
  Result := CreateComObject(CLASS_RobotNodeServer) as IRobotNodeServer;
end;

class function CoRobotNodeServer.CreateRemote(const MachineName: string): IRobotNodeServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNodeServer) as IRobotNodeServer;
end;

class function CoRobotNodeSupport.Create: IRobotLabel;
begin
  Result := CreateComObject(CLASS_RobotNodeSupport) as IRobotLabel;
end;

class function CoRobotNodeSupport.CreateRemote(const MachineName: string): IRobotLabel;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNodeSupport) as IRobotLabel;
end;

class function CoRobotNodeSupportData.Create: IRobotNodeSupportData;
begin
  Result := CreateComObject(CLASS_RobotNodeSupportData) as IRobotNodeSupportData;
end;

class function CoRobotNodeSupportData.CreateRemote(const MachineName: string): IRobotNodeSupportData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNodeSupportData) as IRobotNodeSupportData;
end;

class function CoRobotBarEnd.Create: IRobotBarEnd;
begin
  Result := CreateComObject(CLASS_RobotBarEnd) as IRobotBarEnd;
end;

class function CoRobotBarEnd.CreateRemote(const MachineName: string): IRobotBarEnd;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarEnd) as IRobotBarEnd;
end;

class function CoRobotBar.Create: IRobotBar;
begin
  Result := CreateComObject(CLASS_RobotBar) as IRobotBar;
end;

class function CoRobotBar.CreateRemote(const MachineName: string): IRobotBar;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBar) as IRobotBar;
end;

class function CoRobotBarCollection.Create: IRobotCollection;
begin
  Result := CreateComObject(CLASS_RobotBarCollection) as IRobotCollection;
end;

class function CoRobotBarCollection.CreateRemote(const MachineName: string): IRobotCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarCollection) as IRobotCollection;
end;

class function CoRobotBarServer.Create: IRobotBarServer;
begin
  Result := CreateComObject(CLASS_RobotBarServer) as IRobotBarServer;
end;

class function CoRobotBarServer.CreateRemote(const MachineName: string): IRobotBarServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarServer) as IRobotBarServer;
end;

class function CoRobotBarReleaseData.Create: IRobotBarReleaseData;
begin
  Result := CreateComObject(CLASS_RobotBarReleaseData) as IRobotBarReleaseData;
end;

class function CoRobotBarReleaseData.CreateRemote(const MachineName: string): IRobotBarReleaseData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarReleaseData) as IRobotBarReleaseData;
end;

class function CoRobotBarEndReleaseData.Create: IRobotBarEndReleaseData;
begin
  Result := CreateComObject(CLASS_RobotBarEndReleaseData) as IRobotBarEndReleaseData;
end;

class function CoRobotBarEndReleaseData.CreateRemote(const MachineName: string): IRobotBarEndReleaseData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarEndReleaseData) as IRobotBarEndReleaseData;
end;

class function CoRobotBarRelease.Create: IRobotLabel;
begin
  Result := CreateComObject(CLASS_RobotBarRelease) as IRobotLabel;
end;

class function CoRobotBarRelease.CreateRemote(const MachineName: string): IRobotLabel;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarRelease) as IRobotLabel;
end;

class function CoRobotMaterialData.Create: IRobotMaterialData;
begin
  Result := CreateComObject(CLASS_RobotMaterialData) as IRobotMaterialData;
end;

class function CoRobotMaterialData.CreateRemote(const MachineName: string): IRobotMaterialData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotMaterialData) as IRobotMaterialData;
end;

class function CoRobotBarMaterial.Create: IRobotLabel;
begin
  Result := CreateComObject(CLASS_RobotBarMaterial) as IRobotLabel;
end;

class function CoRobotBarMaterial.CreateRemote(const MachineName: string): IRobotLabel;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarMaterial) as IRobotLabel;
end;

class function CoRobotBarSectionNonstdData.Create: IRobotBarSectionNonstdData;
begin
  Result := CreateComObject(CLASS_RobotBarSectionNonstdData) as IRobotBarSectionNonstdData;
end;

class function CoRobotBarSectionNonstdData.CreateRemote(const MachineName: string): IRobotBarSectionNonstdData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarSectionNonstdData) as IRobotBarSectionNonstdData;
end;

class function CoRobotBarSectionData.Create: IRobotBarSectionData;
begin
  Result := CreateComObject(CLASS_RobotBarSectionData) as IRobotBarSectionData;
end;

class function CoRobotBarSectionData.CreateRemote(const MachineName: string): IRobotBarSectionData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarSectionData) as IRobotBarSectionData;
end;

class function CoRobotBarSection.Create: IRobotLabel;
begin
  Result := CreateComObject(CLASS_RobotBarSection) as IRobotLabel;
end;

class function CoRobotBarSection.CreateRemote(const MachineName: string): IRobotLabel;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarSection) as IRobotLabel;
end;

class function CoRobotBarEndBracketData.Create: IRobotBarEndBracketData;
begin
  Result := CreateComObject(CLASS_RobotBarEndBracketData) as IRobotBarEndBracketData;
end;

class function CoRobotBarEndBracketData.CreateRemote(const MachineName: string): IRobotBarEndBracketData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarEndBracketData) as IRobotBarEndBracketData;
end;

class function CoRobotBarEndOffsetData.Create: IRobotBarEndOffsetData;
begin
  Result := CreateComObject(CLASS_RobotBarEndOffsetData) as IRobotBarEndOffsetData;
end;

class function CoRobotBarEndOffsetData.CreateRemote(const MachineName: string): IRobotBarEndOffsetData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarEndOffsetData) as IRobotBarEndOffsetData;
end;

class function CoRobotBarOffsetData.Create: IRobotBarOffsetData;
begin
  Result := CreateComObject(CLASS_RobotBarOffsetData) as IRobotBarOffsetData;
end;

class function CoRobotBarOffsetData.CreateRemote(const MachineName: string): IRobotBarOffsetData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarOffsetData) as IRobotBarOffsetData;
end;

class function CoRobotThicknessData.Create: IRobotThicknessData;
begin
  Result := CreateComObject(CLASS_RobotThicknessData) as IRobotThicknessData;
end;

class function CoRobotThicknessData.CreateRemote(const MachineName: string): IRobotThicknessData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotThicknessData) as IRobotThicknessData;
end;

class function CoRobotThicknessHomoData.Create: IRobotThicknessHomoData;
begin
  Result := CreateComObject(CLASS_RobotThicknessHomoData) as IRobotThicknessHomoData;
end;

class function CoRobotThicknessHomoData.CreateRemote(const MachineName: string): IRobotThicknessHomoData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotThicknessHomoData) as IRobotThicknessHomoData;
end;

class function CoRobotThicknessMatrix.Create: IRobotThicknessMatrix;
begin
  Result := CreateComObject(CLASS_RobotThicknessMatrix) as IRobotThicknessMatrix;
end;

class function CoRobotThicknessMatrix.CreateRemote(const MachineName: string): IRobotThicknessMatrix;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotThicknessMatrix) as IRobotThicknessMatrix;
end;

class function CoRobotThicknessOrthoData.Create: IRobotThicknessOrthoData;
begin
  Result := CreateComObject(CLASS_RobotThicknessOrthoData) as IRobotThicknessOrthoData;
end;

class function CoRobotThicknessOrthoData.CreateRemote(const MachineName: string): IRobotThicknessOrthoData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotThicknessOrthoData) as IRobotThicknessOrthoData;
end;

class function CoRobotResultServer.Create: IRobotResultServer;
begin
  Result := CreateComObject(CLASS_RobotResultServer) as IRobotResultServer;
end;

class function CoRobotResultServer.CreateRemote(const MachineName: string): IRobotResultServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotResultServer) as IRobotResultServer;
end;

class function CoRobotNodeResultServer.Create: IRobotNodeResultServer;
begin
  Result := CreateComObject(CLASS_RobotNodeResultServer) as IRobotNodeResultServer;
end;

class function CoRobotNodeResultServer.CreateRemote(const MachineName: string): IRobotNodeResultServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNodeResultServer) as IRobotNodeResultServer;
end;

class function CoRobotReactionServer.Create: IRobotReactionServer;
begin
  Result := CreateComObject(CLASS_RobotReactionServer) as IRobotReactionServer;
end;

class function CoRobotReactionServer.CreateRemote(const MachineName: string): IRobotReactionServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotReactionServer) as IRobotReactionServer;
end;

class function CoRobotReactionData.Create: IRobotReactionData;
begin
  Result := CreateComObject(CLASS_RobotReactionData) as IRobotReactionData;
end;

class function CoRobotReactionData.CreateRemote(const MachineName: string): IRobotReactionData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotReactionData) as IRobotReactionData;
end;

class function CoRobotNodeDisplacementServer.Create: IRobotNodeDisplacementServer;
begin
  Result := CreateComObject(CLASS_RobotNodeDisplacementServer) as IRobotNodeDisplacementServer;
end;

class function CoRobotNodeDisplacementServer.CreateRemote(const MachineName: string): IRobotNodeDisplacementServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNodeDisplacementServer) as IRobotNodeDisplacementServer;
end;

class function CoRobotNodeDisplacementData.Create: IRobotDisplacementData;
begin
  Result := CreateComObject(CLASS_RobotNodeDisplacementData) as IRobotDisplacementData;
end;

class function CoRobotNodeDisplacementData.CreateRemote(const MachineName: string): IRobotDisplacementData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNodeDisplacementData) as IRobotDisplacementData;
end;

class function CoRobotBarResultServer.Create: IRobotBarResultServer;
begin
  Result := CreateComObject(CLASS_RobotBarResultServer) as IRobotBarResultServer;
end;

class function CoRobotBarResultServer.CreateRemote(const MachineName: string): IRobotBarResultServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarResultServer) as IRobotBarResultServer;
end;

class function CoRobotBarForceServer.Create: IRobotBarForceServer;
begin
  Result := CreateComObject(CLASS_RobotBarForceServer) as IRobotBarForceServer;
end;

class function CoRobotBarForceServer.CreateRemote(const MachineName: string): IRobotBarForceServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarForceServer) as IRobotBarForceServer;
end;

class function CoRobotBarForceData.Create: IRobotBarForceData;
begin
  Result := CreateComObject(CLASS_RobotBarForceData) as IRobotBarForceData;
end;

class function CoRobotBarForceData.CreateRemote(const MachineName: string): IRobotBarForceData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarForceData) as IRobotBarForceData;
end;

class function CoRobotBarStressData.Create: IRobotBarStressData;
begin
  Result := CreateComObject(CLASS_RobotBarStressData) as IRobotBarStressData;
end;

class function CoRobotBarStressData.CreateRemote(const MachineName: string): IRobotBarStressData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarStressData) as IRobotBarStressData;
end;

class function CoRobotBarStressServer.Create: IRobotBarStressServer;
begin
  Result := CreateComObject(CLASS_RobotBarStressServer) as IRobotBarStressServer;
end;

class function CoRobotBarStressServer.CreateRemote(const MachineName: string): IRobotBarStressServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarStressServer) as IRobotBarStressServer;
end;

class function CoRobotBarDeflectionData.Create: IRobotBarDeflectionData;
begin
  Result := CreateComObject(CLASS_RobotBarDeflectionData) as IRobotBarDeflectionData;
end;

class function CoRobotBarDeflectionData.CreateRemote(const MachineName: string): IRobotBarDeflectionData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarDeflectionData) as IRobotBarDeflectionData;
end;

class function CoRobotBarDeflectionServer.Create: IRobotBarDeflectionServer;
begin
  Result := CreateComObject(CLASS_RobotBarDeflectionServer) as IRobotBarDeflectionServer;
end;

class function CoRobotBarDeflectionServer.CreateRemote(const MachineName: string): IRobotBarDeflectionServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarDeflectionServer) as IRobotBarDeflectionServer;
end;

class function CoRobotBarBucklingData.Create: IRobotBarBucklingData;
begin
  Result := CreateComObject(CLASS_RobotBarBucklingData) as IRobotBarBucklingData;
end;

class function CoRobotBarBucklingData.CreateRemote(const MachineName: string): IRobotBarBucklingData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarBucklingData) as IRobotBarBucklingData;
end;

class function CoRobotBarBucklingServer.Create: IRobotBarBucklingServer;
begin
  Result := CreateComObject(CLASS_RobotBarBucklingServer) as IRobotBarBucklingServer;
end;

class function CoRobotBarBucklingServer.CreateRemote(const MachineName: string): IRobotBarBucklingServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarBucklingServer) as IRobotBarBucklingServer;
end;

class function CoRobotNodeBucklingServer.Create: IRobotNodeBucklingServer;
begin
  Result := CreateComObject(CLASS_RobotNodeBucklingServer) as IRobotNodeBucklingServer;
end;

class function CoRobotNodeBucklingServer.CreateRemote(const MachineName: string): IRobotNodeBucklingServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNodeBucklingServer) as IRobotNodeBucklingServer;
end;

class function CoRobotEigenvalues.Create: IRobotEigenvalues;
begin
  Result := CreateComObject(CLASS_RobotEigenvalues) as IRobotEigenvalues;
end;

class function CoRobotEigenvalues.CreateRemote(const MachineName: string): IRobotEigenvalues;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotEigenvalues) as IRobotEigenvalues;
end;

class function CoRobotEigenvaluesServer.Create: IRobotEigenvaluesServer;
begin
  Result := CreateComObject(CLASS_RobotEigenvaluesServer) as IRobotEigenvaluesServer;
end;

class function CoRobotEigenvaluesServer.CreateRemote(const MachineName: string): IRobotEigenvaluesServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotEigenvaluesServer) as IRobotEigenvaluesServer;
end;

class function CoRobotAdvancedResultServer.Create: IRobotAdvancedResultServer;
begin
  Result := CreateComObject(CLASS_RobotAdvancedResultServer) as IRobotAdvancedResultServer;
end;

class function CoRobotAdvancedResultServer.CreateRemote(const MachineName: string): IRobotAdvancedResultServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotAdvancedResultServer) as IRobotAdvancedResultServer;
end;

class function CoRobotMassSumServer.Create: IRobotMassSumServer;
begin
  Result := CreateComObject(CLASS_RobotMassSumServer) as IRobotMassSumServer;
end;

class function CoRobotMassSumServer.CreateRemote(const MachineName: string): IRobotMassSumServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotMassSumServer) as IRobotMassSumServer;
end;

class function CoRobotSpectralCoefficients.Create: IRobotSpectralCoefficients;
begin
  Result := CreateComObject(CLASS_RobotSpectralCoefficients) as IRobotSpectralCoefficients;
end;

class function CoRobotSpectralCoefficients.CreateRemote(const MachineName: string): IRobotSpectralCoefficients;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSpectralCoefficients) as IRobotSpectralCoefficients;
end;

class function CoRobotEigenvectorsServer.Create: IRobotEigenvectorsServer;
begin
  Result := CreateComObject(CLASS_RobotEigenvectorsServer) as IRobotEigenvectorsServer;
end;

class function CoRobotEigenvectorsServer.CreateRemote(const MachineName: string): IRobotEigenvectorsServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotEigenvectorsServer) as IRobotEigenvectorsServer;
end;

class function CoRobotVehicleData.Create: IRobotVehicleData;
begin
  Result := CreateComObject(CLASS_RobotVehicleData) as IRobotVehicleData;
end;

class function CoRobotVehicleData.CreateRemote(const MachineName: string): IRobotVehicleData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotVehicleData) as IRobotVehicleData;
end;

class function CoRobotVehicleLoadMngr.Create: IRobotVehicleLoadMngr;
begin
  Result := CreateComObject(CLASS_RobotVehicleLoadMngr) as IRobotVehicleLoadMngr;
end;

class function CoRobotVehicleLoadMngr.CreateRemote(const MachineName: string): IRobotVehicleLoadMngr;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotVehicleLoadMngr) as IRobotVehicleLoadMngr;
end;

class function CoRobotVehicleLoad.Create: IRobotVehicleLoad;
begin
  Result := CreateComObject(CLASS_RobotVehicleLoad) as IRobotVehicleLoad;
end;

class function CoRobotVehicleLoad.CreateRemote(const MachineName: string): IRobotVehicleLoad;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotVehicleLoad) as IRobotVehicleLoad;
end;

class function CoRobotStructure.Create: IRobotStructure;
begin
  Result := CreateComObject(CLASS_RobotStructure) as IRobotStructure;
end;

class function CoRobotStructure.CreateRemote(const MachineName: string): IRobotStructure;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotStructure) as IRobotStructure;
end;

class function CoRobotForcesData.Create: IRobotForcesData;
begin
  Result := CreateComObject(CLASS_RobotForcesData) as IRobotForcesData;
end;

class function CoRobotForcesData.CreateRemote(const MachineName: string): IRobotForcesData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotForcesData) as IRobotForcesData;
end;

class function CoRobotPseudostaticForceServer.Create: IRobotPseudostaticForceServer;
begin
  Result := CreateComObject(CLASS_RobotPseudostaticForceServer) as IRobotPseudostaticForceServer;
end;

class function CoRobotPseudostaticForceServer.CreateRemote(const MachineName: string): IRobotPseudostaticForceServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotPseudostaticForceServer) as IRobotPseudostaticForceServer;
end;

class function CoRobotDisplacementData.Create: IRobotDisplacementData;
begin
  Result := CreateComObject(CLASS_RobotDisplacementData) as IRobotDisplacementData;
end;

class function CoRobotDisplacementData.CreateRemote(const MachineName: string): IRobotDisplacementData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotDisplacementData) as IRobotDisplacementData;
end;

class function CoRobotUniversalResultAccess.Create: IRobotUniversalResultAccess;
begin
  Result := CreateComObject(CLASS_RobotUniversalResultAccess) as IRobotUniversalResultAccess;
end;

class function CoRobotUniversalResultAccess.CreateRemote(const MachineName: string): IRobotUniversalResultAccess;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotUniversalResultAccess) as IRobotUniversalResultAccess;
end;

class function CoRobotCodeCmbRegulations.Create: IRobotCodeCmbRegulations;
begin
  Result := CreateComObject(CLASS_RobotCodeCmbRegulations) as IRobotCodeCmbRegulations;
end;

class function CoRobotCodeCmbRegulations.CreateRemote(const MachineName: string): IRobotCodeCmbRegulations;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCodeCmbRegulations) as IRobotCodeCmbRegulations;
end;

class function CoRobotCodeCmbActionServer.Create: IRobotCodeCmbActionServer;
begin
  Result := CreateComObject(CLASS_RobotCodeCmbActionServer) as IRobotCodeCmbActionServer;
end;

class function CoRobotCodeCmbActionServer.CreateRemote(const MachineName: string): IRobotCodeCmbActionServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCodeCmbActionServer) as IRobotCodeCmbActionServer;
end;

class function CoRobotCodeCmbCombs.Create: IRobotCodeCmbCombs;
begin
  Result := CreateComObject(CLASS_RobotCodeCmbCombs) as IRobotCodeCmbCombs;
end;

class function CoRobotCodeCmbCombs.CreateRemote(const MachineName: string): IRobotCodeCmbCombs;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCodeCmbCombs) as IRobotCodeCmbCombs;
end;

class function CoRobotCodeCmbGenerationParams.Create: IRobotCodeCmbGenerationParams;
begin
  Result := CreateComObject(CLASS_RobotCodeCmbGenerationParams) as IRobotCodeCmbGenerationParams;
end;

class function CoRobotCodeCmbGenerationParams.CreateRemote(const MachineName: string): IRobotCodeCmbGenerationParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCodeCmbGenerationParams) as IRobotCodeCmbGenerationParams;
end;

class function CoRobotCodeCmbGroup.Create: IRobotCodeCmbGroup;
begin
  Result := CreateComObject(CLASS_RobotCodeCmbGroup) as IRobotCodeCmbGroup;
end;

class function CoRobotCodeCmbGroup.CreateRemote(const MachineName: string): IRobotCodeCmbGroup;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCodeCmbGroup) as IRobotCodeCmbGroup;
end;

class function CoRobotCodeCmbGroupServer.Create: IRobotCodeCmbGroupServer;
begin
  Result := CreateComObject(CLASS_RobotCodeCmbGroupServer) as IRobotCodeCmbGroupServer;
end;

class function CoRobotCodeCmbGroupServer.CreateRemote(const MachineName: string): IRobotCodeCmbGroupServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCodeCmbGroupServer) as IRobotCodeCmbGroupServer;
end;

class function CoRobotCodeCmbGroupRelation.Create: IRobotCodeCmbGroupRelation;
begin
  Result := CreateComObject(CLASS_RobotCodeCmbGroupRelation) as IRobotCodeCmbGroupRelation;
end;

class function CoRobotCodeCmbGroupRelation.CreateRemote(const MachineName: string): IRobotCodeCmbGroupRelation;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCodeCmbGroupRelation) as IRobotCodeCmbGroupRelation;
end;

class function CoRobotCodeCmbGroupRelationServer.Create: IRobotCodeCmbGroupRelationServer;
begin
  Result := CreateComObject(CLASS_RobotCodeCmbGroupRelationServer) as IRobotCodeCmbGroupRelationServer;
end;

class function CoRobotCodeCmbGroupRelationServer.CreateRemote(const MachineName: string): IRobotCodeCmbGroupRelationServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCodeCmbGroupRelationServer) as IRobotCodeCmbGroupRelationServer;
end;

class function CoRobotCodeCmbActiveCaseInfo.Create: IRobotCodeCmbActiveCaseInfo;
begin
  Result := CreateComObject(CLASS_RobotCodeCmbActiveCaseInfo) as IRobotCodeCmbActiveCaseInfo;
end;

class function CoRobotCodeCmbActiveCaseInfo.CreateRemote(const MachineName: string): IRobotCodeCmbActiveCaseInfo;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCodeCmbActiveCaseInfo) as IRobotCodeCmbActiveCaseInfo;
end;

class function CoRobotCodeCmbActiveCaseCollection.Create: IRobotCollection;
begin
  Result := CreateComObject(CLASS_RobotCodeCmbActiveCaseCollection) as IRobotCollection;
end;

class function CoRobotCodeCmbActiveCaseCollection.CreateRemote(const MachineName: string): IRobotCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCodeCmbActiveCaseCollection) as IRobotCollection;
end;

class function CoRobotModalAnalysisParams.Create: IRobotModalAnalysisParams;
begin
  Result := CreateComObject(CLASS_RobotModalAnalysisParams) as IRobotModalAnalysisParams;
end;

class function CoRobotModalAnalysisParams.CreateRemote(const MachineName: string): IRobotModalAnalysisParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotModalAnalysisParams) as IRobotModalAnalysisParams;
end;

class function CoRobotModalAnalysisBase.Create: IRobotModalAnalysisBase;
begin
  Result := CreateComObject(CLASS_RobotModalAnalysisBase) as IRobotModalAnalysisBase;
end;

class function CoRobotModalAnalysisBase.CreateRemote(const MachineName: string): IRobotModalAnalysisBase;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotModalAnalysisBase) as IRobotModalAnalysisBase;
end;

class function CoRobotModalAnalysisLimits.Create: IRobotModalAnalysisLimits;
begin
  Result := CreateComObject(CLASS_RobotModalAnalysisLimits) as IRobotModalAnalysisLimits;
end;

class function CoRobotModalAnalysisLimits.CreateRemote(const MachineName: string): IRobotModalAnalysisLimits;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotModalAnalysisLimits) as IRobotModalAnalysisLimits;
end;

class function CoRobotModalAnalysisShifts.Create: IRobotModalAnalysisShifts;
begin
  Result := CreateComObject(CLASS_RobotModalAnalysisShifts) as IRobotModalAnalysisShifts;
end;

class function CoRobotModalAnalysisShifts.CreateRemote(const MachineName: string): IRobotModalAnalysisShifts;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotModalAnalysisShifts) as IRobotModalAnalysisShifts;
end;

class function CoRobotBarCableData.Create: IRobotBarCableData;
begin
  Result := CreateComObject(CLASS_RobotBarCableData) as IRobotBarCableData;
end;

class function CoRobotBarCableData.CreateRemote(const MachineName: string): IRobotBarCableData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarCableData) as IRobotBarCableData;
end;

class function CoRobotLinearReleaseData.Create: IRobotLinearReleaseData;
begin
  Result := CreateComObject(CLASS_RobotLinearReleaseData) as IRobotLinearReleaseData;
end;

class function CoRobotLinearReleaseData.CreateRemote(const MachineName: string): IRobotLinearReleaseData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotLinearReleaseData) as IRobotLinearReleaseData;
end;

class function CoRobotBarElasticGroundData.Create: IRobotBarElasticGroundData;
begin
  Result := CreateComObject(CLASS_RobotBarElasticGroundData) as IRobotBarElasticGroundData;
end;

class function CoRobotBarElasticGroundData.CreateRemote(const MachineName: string): IRobotBarElasticGroundData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarElasticGroundData) as IRobotBarElasticGroundData;
end;

class function CoRobotNodeRigidLinkData.Create: IRobotNodeRigidLinkData;
begin
  Result := CreateComObject(CLASS_RobotNodeRigidLinkData) as IRobotNodeRigidLinkData;
end;

class function CoRobotNodeRigidLinkData.CreateRemote(const MachineName: string): IRobotNodeRigidLinkData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNodeRigidLinkData) as IRobotNodeRigidLinkData;
end;

class function CoRobotNonlinearAnalysisParams.Create: IRobotNonlinearAnalysisParams;
begin
  Result := CreateComObject(CLASS_RobotNonlinearAnalysisParams) as IRobotNonlinearAnalysisParams;
end;

class function CoRobotNonlinearAnalysisParams.CreateRemote(const MachineName: string): IRobotNonlinearAnalysisParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNonlinearAnalysisParams) as IRobotNonlinearAnalysisParams;
end;

class function CoRobotNodeRigidLinkDef.Create: IRobotNodeRigidLinkDef;
begin
  Result := CreateComObject(CLASS_RobotNodeRigidLinkDef) as IRobotNodeRigidLinkDef;
end;

class function CoRobotNodeRigidLinkDef.CreateRemote(const MachineName: string): IRobotNodeRigidLinkDef;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNodeRigidLinkDef) as IRobotNodeRigidLinkDef;
end;

class function CoRobotNodeRigidLinkServer.Create: IRobotNodeRigidLinkServer;
begin
  Result := CreateComObject(CLASS_RobotNodeRigidLinkServer) as IRobotNodeRigidLinkServer;
end;

class function CoRobotNodeRigidLinkServer.CreateRemote(const MachineName: string): IRobotNodeRigidLinkServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNodeRigidLinkServer) as IRobotNodeRigidLinkServer;
end;

class function CoRobotCaseAnalysisModesFilter.Create: IRobotCaseAnalysisModesFilter;
begin
  Result := CreateComObject(CLASS_RobotCaseAnalysisModesFilter) as IRobotCaseAnalysisModesFilter;
end;

class function CoRobotCaseAnalysisModesFilter.CreateRemote(const MachineName: string): IRobotCaseAnalysisModesFilter;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCaseAnalysisModesFilter) as IRobotCaseAnalysisModesFilter;
end;

class function CoRobotSeismicAnalysis_PS_92_Params.Create: IRobotSeismicAnalysis_PS_92_Params;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_PS_92_Params) as IRobotSeismicAnalysis_PS_92_Params;
end;

class function CoRobotSeismicAnalysis_PS_92_Params.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_PS_92_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_PS_92_Params) as IRobotSeismicAnalysis_PS_92_Params;
end;

class function CoRobotSeismicAnalysis_PS_92_SiteEnvelope.Create: IRobotSeismicAnalysis_PS_92_SiteEnvelope;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_PS_92_SiteEnvelope) as IRobotSeismicAnalysis_PS_92_SiteEnvelope;
end;

class function CoRobotSeismicAnalysis_PS_92_SiteEnvelope.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_PS_92_SiteEnvelope;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_PS_92_SiteEnvelope) as IRobotSeismicAnalysis_PS_92_SiteEnvelope;
end;

class function CoRobotDynamicAnalysisExcitationDirection.Create: IRobotDynamicAnalysisExcitationDirection;
begin
  Result := CreateComObject(CLASS_RobotDynamicAnalysisExcitationDirection) as IRobotDynamicAnalysisExcitationDirection;
end;

class function CoRobotDynamicAnalysisExcitationDirection.CreateRemote(const MachineName: string): IRobotDynamicAnalysisExcitationDirection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotDynamicAnalysisExcitationDirection) as IRobotDynamicAnalysisExcitationDirection;
end;

class function CoRobotSeismicAnalysis_PS_69_Params.Create: IRobotSeismicAnalysis_PS_69_Params;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_PS_69_Params) as IRobotSeismicAnalysis_PS_69_Params;
end;

class function CoRobotSeismicAnalysis_PS_69_Params.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_PS_69_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_PS_69_Params) as IRobotSeismicAnalysis_PS_69_Params;
end;

class function CoRobotSeismicAnalysis_P_100_92_Params.Create: IRobotSeismicAnalysis_P_100_92_Params;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_P_100_92_Params) as IRobotSeismicAnalysis_P_100_92_Params;
end;

class function CoRobotSeismicAnalysis_P_100_92_Params.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_P_100_92_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_P_100_92_Params) as IRobotSeismicAnalysis_P_100_92_Params;
end;

class function CoRobotSeismicAnalysis_EC_8_Params.Create: IRobotSeismicAnalysis_EC_8_Params;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_EC_8_Params) as IRobotSeismicAnalysis_EC_8_Params;
end;

class function CoRobotSeismicAnalysis_EC_8_Params.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_EC_8_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_EC_8_Params) as IRobotSeismicAnalysis_EC_8_Params;
end;

class function CoRobotSeismicAnalysis_EAK_2000_Params.Create: IRobotSeismicAnalysis_EAK_2000_Params;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_EAK_2000_Params) as IRobotSeismicAnalysis_EAK_2000_Params;
end;

class function CoRobotSeismicAnalysis_EAK_2000_Params.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_EAK_2000_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_EAK_2000_Params) as IRobotSeismicAnalysis_EAK_2000_Params;
end;

class function CoRobotSeismicAnalysis_P_100_2006_Params.Create: IRobotSeismicAnalysis_P_100_2006_Params;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_P_100_2006_Params) as IRobotSeismicAnalysis_P_100_2006_Params;
end;

class function CoRobotSeismicAnalysis_P_100_2006_Params.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_P_100_2006_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_P_100_2006_Params) as IRobotSeismicAnalysis_P_100_2006_Params;
end;

class function CoRobotSeismicAnalysis_IBC_2006_Params.Create: IRobotSeismicAnalysis_IBC_2006_Params;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_IBC_2006_Params) as IRobotSeismicAnalysis_IBC_2006_Params;
end;

class function CoRobotSeismicAnalysis_IBC_2006_Params.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_IBC_2006_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_IBC_2006_Params) as IRobotSeismicAnalysis_IBC_2006_Params;
end;

class function CoRobotSeismicAnalysis_IBC_2000_Params.Create: IRobotSeismicAnalysis_IBC_2000_Params;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_IBC_2000_Params) as IRobotSeismicAnalysis_IBC_2000_Params;
end;

class function CoRobotSeismicAnalysis_IBC_2000_Params.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_IBC_2000_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_IBC_2000_Params) as IRobotSeismicAnalysis_IBC_2000_Params;
end;

class function CoRobotSeismicAnalysis_UBC_97_Params.Create: IRobotSeismicAnalysis_UBC_97_Params;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_UBC_97_Params) as IRobotSeismicAnalysis_UBC_97_Params;
end;

class function CoRobotSeismicAnalysis_UBC_97_Params.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_UBC_97_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_UBC_97_Params) as IRobotSeismicAnalysis_UBC_97_Params;
end;

class function CoRobotSeismicAnalysis_TURKISH_23098_Params.Create: IRobotSeismicAnalysis_TURKISH_23098_Params;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_TURKISH_23098_Params) as IRobotSeismicAnalysis_TURKISH_23098_Params;
end;

class function CoRobotSeismicAnalysis_TURKISH_23098_Params.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_TURKISH_23098_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_TURKISH_23098_Params) as IRobotSeismicAnalysis_TURKISH_23098_Params;
end;

class function CoRobotSeismicAnalysis_RPA_88_Params.Create: IRobotSeismicAnalysis_RPA_88_Params;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_RPA_88_Params) as IRobotSeismicAnalysis_RPA_88_Params;
end;

class function CoRobotSeismicAnalysis_RPA_88_Params.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_RPA_88_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_RPA_88_Params) as IRobotSeismicAnalysis_RPA_88_Params;
end;

class function CoRobotSeismicAnalysis_DM_16_1_96_Params.Create: IRobotSeismicAnalysis_DM_16_1_96_Params;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_DM_16_1_96_Params) as IRobotSeismicAnalysis_DM_16_1_96_Params;
end;

class function CoRobotSeismicAnalysis_DM_16_1_96_Params.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_DM_16_1_96_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_DM_16_1_96_Params) as IRobotSeismicAnalysis_DM_16_1_96_Params;
end;

class function CoRobotSeismicAnalysis_AFPS_90_Params.Create: IRobotSeismicAnalysis_AFPS_90_Params;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_AFPS_90_Params) as IRobotSeismicAnalysis_AFPS_90_Params;
end;

class function CoRobotSeismicAnalysis_AFPS_90_Params.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_AFPS_90_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_AFPS_90_Params) as IRobotSeismicAnalysis_AFPS_90_Params;
end;

class function CoRobotSeismicAnalysis_CHINESE_Params.Create: IRobotSeismicAnalysis_CHINESE_Params;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_CHINESE_Params) as IRobotSeismicAnalysis_CHINESE_Params;
end;

class function CoRobotSeismicAnalysis_CHINESE_Params.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_CHINESE_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_CHINESE_Params) as IRobotSeismicAnalysis_CHINESE_Params;
end;

class function CoRobotSeismicAnalysis_CIRSOC_103_Params.Create: IRobotSeismicAnalysis_CIRSOC_103_Params;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_CIRSOC_103_Params) as IRobotSeismicAnalysis_CIRSOC_103_Params;
end;

class function CoRobotSeismicAnalysis_CIRSOC_103_Params.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_CIRSOC_103_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_CIRSOC_103_Params) as IRobotSeismicAnalysis_CIRSOC_103_Params;
end;

class function CoRobotSpectralAnalysisSpectrum.Create: IRobotSpectralAnalysisSpectrum;
begin
  Result := CreateComObject(CLASS_RobotSpectralAnalysisSpectrum) as IRobotSpectralAnalysisSpectrum;
end;

class function CoRobotSpectralAnalysisSpectrum.CreateRemote(const MachineName: string): IRobotSpectralAnalysisSpectrum;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSpectralAnalysisSpectrum) as IRobotSpectralAnalysisSpectrum;
end;

class function CoRobotSpectralAnalysisParams.Create: IRobotSpectralAnalysisParams;
begin
  Result := CreateComObject(CLASS_RobotSpectralAnalysisParams) as IRobotSpectralAnalysisParams;
end;

class function CoRobotSpectralAnalysisParams.CreateRemote(const MachineName: string): IRobotSpectralAnalysisParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSpectralAnalysisParams) as IRobotSpectralAnalysisParams;
end;

class function CoRobotBarDisplacementServer.Create: IRobotBarDisplacementServer;
begin
  Result := CreateComObject(CLASS_RobotBarDisplacementServer) as IRobotBarDisplacementServer;
end;

class function CoRobotBarDisplacementServer.CreateRemote(const MachineName: string): IRobotBarDisplacementServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarDisplacementServer) as IRobotBarDisplacementServer;
end;

class function CoRobotNodeCompatibilityData.Create: IRobotNodeCompatibilityData;
begin
  Result := CreateComObject(CLASS_RobotNodeCompatibilityData) as IRobotNodeCompatibilityData;
end;

class function CoRobotNodeCompatibilityData.CreateRemote(const MachineName: string): IRobotNodeCompatibilityData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNodeCompatibilityData) as IRobotNodeCompatibilityData;
end;

class function CoRobotNodeCompatibilityDef.Create: IRobotNodeCompatibilityDef;
begin
  Result := CreateComObject(CLASS_RobotNodeCompatibilityDef) as IRobotNodeCompatibilityDef;
end;

class function CoRobotNodeCompatibilityDef.CreateRemote(const MachineName: string): IRobotNodeCompatibilityDef;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNodeCompatibilityDef) as IRobotNodeCompatibilityDef;
end;

class function CoRobotNodeCompatibilityServer.Create: IRobotNodeCompatibilityServer;
begin
  Result := CreateComObject(CLASS_RobotNodeCompatibilityServer) as IRobotNodeCompatibilityServer;
end;

class function CoRobotNodeCompatibilityServer.CreateRemote(const MachineName: string): IRobotNodeCompatibilityServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNodeCompatibilityServer) as IRobotNodeCompatibilityServer;
end;

class function CoRobotModalWithStaticForcesAnalysisParams.Create: IRobotModalWithStaticForcesAnalysisParams;
begin
  Result := CreateComObject(CLASS_RobotModalWithStaticForcesAnalysisParams) as IRobotModalWithStaticForcesAnalysisParams;
end;

class function CoRobotModalWithStaticForcesAnalysisParams.CreateRemote(const MachineName: string): IRobotModalWithStaticForcesAnalysisParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotModalWithStaticForcesAnalysisParams) as IRobotModalWithStaticForcesAnalysisParams;
end;

class function CoRobotBarSectionConcreteData.Create: IRobotBarSectionConcreteData;
begin
  Result := CreateComObject(CLASS_RobotBarSectionConcreteData) as IRobotBarSectionConcreteData;
end;

class function CoRobotBarSectionConcreteData.CreateRemote(const MachineName: string): IRobotBarSectionConcreteData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarSectionConcreteData) as IRobotBarSectionConcreteData;
end;

class function CoRobotAppKernel.Create: IRobotKernel;
begin
  Result := CreateComObject(CLASS_RobotAppKernel) as IRobotKernel;
end;

class function CoRobotAppKernel.CreateRemote(const MachineName: string): IRobotKernel;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotAppKernel) as IRobotKernel;
end;

class function CoRobotAppAuthenticateService.Create: IRobotAuthenticateService;
begin
  Result := CreateComObject(CLASS_RobotAppAuthenticateService) as IRobotAuthenticateService;
end;

class function CoRobotAppAuthenticateService.CreateRemote(const MachineName: string): IRobotAuthenticateService;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotAppAuthenticateService) as IRobotAuthenticateService;
end;

class function CoRDimMemberType.Create: IRDimMemberType;
begin
  Result := CreateComObject(CLASS_RDimMemberType) as IRDimMemberType;
end;

class function CoRDimMemberType.CreateRemote(const MachineName: string): IRDimMemberType;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimMemberType) as IRDimMemberType;
end;

class function CoRobotBucklingAnalysisParams.Create: IRobotBucklingAnalysisParams;
begin
  Result := CreateComObject(CLASS_RobotBucklingAnalysisParams) as IRobotBucklingAnalysisParams;
end;

class function CoRobotBucklingAnalysisParams.CreateRemote(const MachineName: string): IRobotBucklingAnalysisParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBucklingAnalysisParams) as IRobotBucklingAnalysisParams;
end;

class function CoRobotHarmonicAnalysisParams.Create: IRobotHarmonicAnalysisParams;
begin
  Result := CreateComObject(CLASS_RobotHarmonicAnalysisParams) as IRobotHarmonicAnalysisParams;
end;

class function CoRobotHarmonicAnalysisParams.CreateRemote(const MachineName: string): IRobotHarmonicAnalysisParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotHarmonicAnalysisParams) as IRobotHarmonicAnalysisParams;
end;

class function CoRobotLimits.Create: IRobotModalAnalysisLimits;
begin
  Result := CreateComObject(CLASS_RobotLimits) as IRobotModalAnalysisLimits;
end;

class function CoRobotLimits.CreateRemote(const MachineName: string): IRobotModalAnalysisLimits;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotLimits) as IRobotModalAnalysisLimits;
end;

class function CoRobotTimeHistoryAnalysisParams.Create: IRobotTimeHistoryAnalysisParams;
begin
  Result := CreateComObject(CLASS_RobotTimeHistoryAnalysisParams) as IRobotTimeHistoryAnalysisParams;
end;

class function CoRobotTimeHistoryAnalysisParams.CreateRemote(const MachineName: string): IRobotTimeHistoryAnalysisParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotTimeHistoryAnalysisParams) as IRobotTimeHistoryAnalysisParams;
end;

class function CoRobotTimeHistoryNewmarkParams.Create: IRobotTimeHistoryNewmarkParams;
begin
  Result := CreateComObject(CLASS_RobotTimeHistoryNewmarkParams) as IRobotTimeHistoryNewmarkParams;
end;

class function CoRobotTimeHistoryNewmarkParams.CreateRemote(const MachineName: string): IRobotTimeHistoryNewmarkParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotTimeHistoryNewmarkParams) as IRobotTimeHistoryNewmarkParams;
end;

class function CoRobotTimeHistoryModalDecompositionParams.Create: IRobotTimeHistoryModalDecompositionParams;
begin
  Result := CreateComObject(CLASS_RobotTimeHistoryModalDecompositionParams) as IRobotTimeHistoryModalDecompositionParams;
end;

class function CoRobotTimeHistoryModalDecompositionParams.CreateRemote(const MachineName: string): IRobotTimeHistoryModalDecompositionParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotTimeHistoryModalDecompositionParams) as IRobotTimeHistoryModalDecompositionParams;
end;

class function CoRobotTimeHistoryPointsCollection.Create: IRobotTimeHistoryPointsCollection;
begin
  Result := CreateComObject(CLASS_RobotTimeHistoryPointsCollection) as IRobotTimeHistoryPointsCollection;
end;

class function CoRobotTimeHistoryPointsCollection.CreateRemote(const MachineName: string): IRobotTimeHistoryPointsCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotTimeHistoryPointsCollection) as IRobotTimeHistoryPointsCollection;
end;

class function CoRobotTimeHistoryFunctionList.Create: IRobotTimeHistoryFunctionList;
begin
  Result := CreateComObject(CLASS_RobotTimeHistoryFunctionList) as IRobotTimeHistoryFunctionList;
end;

class function CoRobotTimeHistoryFunctionList.CreateRemote(const MachineName: string): IRobotTimeHistoryFunctionList;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotTimeHistoryFunctionList) as IRobotTimeHistoryFunctionList;
end;

class function CoRobotTimeHistoryNonlinearParams.Create: IRobotTimeHistoryNonlinearParams;
begin
  Result := CreateComObject(CLASS_RobotTimeHistoryNonlinearParams) as IRobotTimeHistoryNonlinearParams;
end;

class function CoRobotTimeHistoryNonlinearParams.CreateRemote(const MachineName: string): IRobotTimeHistoryNonlinearParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotTimeHistoryNonlinearParams) as IRobotTimeHistoryNonlinearParams;
end;

class function CoRobotTimeHistoryPredictorCorectorParams.Create: IRobotTimeHistoryPredictorCorectorParams;
begin
  Result := CreateComObject(CLASS_RobotTimeHistoryPredictorCorectorParams) as IRobotTimeHistoryPredictorCorectorParams;
end;

class function CoRobotTimeHistoryPredictorCorectorParams.CreateRemote(const MachineName: string): IRobotTimeHistoryPredictorCorectorParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotTimeHistoryPredictorCorectorParams) as IRobotTimeHistoryPredictorCorectorParams;
end;

class function CoRobotBarElement.Create: IRobotBarElement;
begin
  Result := CreateComObject(CLASS_RobotBarElement) as IRobotBarElement;
end;

class function CoRobotBarElement.CreateRemote(const MachineName: string): IRobotBarElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarElement) as IRobotBarElement;
end;

class function CoRobotBarElementCollection.Create: IRobotCollection;
begin
  Result := CreateComObject(CLASS_RobotBarElementCollection) as IRobotCollection;
end;

class function CoRobotBarElementCollection.CreateRemote(const MachineName: string): IRobotCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarElementCollection) as IRobotCollection;
end;

class function CoRobotPushOverAnalysisParams.Create: IRobotPushOverAnalysisParams;
begin
  Result := CreateComObject(CLASS_RobotPushOverAnalysisParams) as IRobotPushOverAnalysisParams;
end;

class function CoRobotPushOverAnalysisParams.CreateRemote(const MachineName: string): IRobotPushOverAnalysisParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotPushOverAnalysisParams) as IRobotPushOverAnalysisParams;
end;

class function CoRobotSolidPropertiesData.Create: IRobotSolidPropertiesData;
begin
  Result := CreateComObject(CLASS_RobotSolidPropertiesData) as IRobotSolidPropertiesData;
end;

class function CoRobotSolidPropertiesData.CreateRemote(const MachineName: string): IRobotSolidPropertiesData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSolidPropertiesData) as IRobotSolidPropertiesData;
end;

class function CoRobotNonlinearLinkServer.Create: IRobotNonlinearLinkServer;
begin
  Result := CreateComObject(CLASS_RobotNonlinearLinkServer) as IRobotNonlinearLinkServer;
end;

class function CoRobotNonlinearLinkServer.CreateRemote(const MachineName: string): IRobotNonlinearLinkServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNonlinearLinkServer) as IRobotNonlinearLinkServer;
end;

class function CoRobotNonlinearLink.Create: IRobotNonlinearLink;
begin
  Result := CreateComObject(CLASS_RobotNonlinearLink) as IRobotNonlinearLink;
end;

class function CoRobotNonlinearLink.CreateRemote(const MachineName: string): IRobotNonlinearLink;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNonlinearLink) as IRobotNonlinearLink;
end;

class function CoRobotNonlinearLinkParamsLinear.Create: IRobotNonlinearLinkParamsLinear;
begin
  Result := CreateComObject(CLASS_RobotNonlinearLinkParamsLinear) as IRobotNonlinearLinkParamsLinear;
end;

class function CoRobotNonlinearLinkParamsLinear.CreateRemote(const MachineName: string): IRobotNonlinearLinkParamsLinear;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNonlinearLinkParamsLinear) as IRobotNonlinearLinkParamsLinear;
end;

class function CoRobotNonlinearLinkParamsBLinear.Create: IRobotNonlinearLinkParamsBLinear;
begin
  Result := CreateComObject(CLASS_RobotNonlinearLinkParamsBLinear) as IRobotNonlinearLinkParamsBLinear;
end;

class function CoRobotNonlinearLinkParamsBLinear.CreateRemote(const MachineName: string): IRobotNonlinearLinkParamsBLinear;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNonlinearLinkParamsBLinear) as IRobotNonlinearLinkParamsBLinear;
end;

class function CoRobotNonlinearLinkParamsParabolic.Create: IRobotNonlinearLinkParamsParabolic;
begin
  Result := CreateComObject(CLASS_RobotNonlinearLinkParamsParabolic) as IRobotNonlinearLinkParamsParabolic;
end;

class function CoRobotNonlinearLinkParamsParabolic.CreateRemote(const MachineName: string): IRobotNonlinearLinkParamsParabolic;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNonlinearLinkParamsParabolic) as IRobotNonlinearLinkParamsParabolic;
end;

class function CoRobotNonlinearLinkParamsPlastic.Create: IRobotNonlinearLinkParamsPlastic;
begin
  Result := CreateComObject(CLASS_RobotNonlinearLinkParamsPlastic) as IRobotNonlinearLinkParamsPlastic;
end;

class function CoRobotNonlinearLinkParamsPlastic.CreateRemote(const MachineName: string): IRobotNonlinearLinkParamsPlastic;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNonlinearLinkParamsPlastic) as IRobotNonlinearLinkParamsPlastic;
end;

class function CoRobotNonlinearLinkParamsPlasticHardening.Create: IRobotNonlinearLinkParamsPlasticHardening;
begin
  Result := CreateComObject(CLASS_RobotNonlinearLinkParamsPlasticHardening) as IRobotNonlinearLinkParamsPlasticHardening;
end;

class function CoRobotNonlinearLinkParamsPlasticHardening.CreateRemote(const MachineName: string): IRobotNonlinearLinkParamsPlasticHardening;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNonlinearLinkParamsPlasticHardening) as IRobotNonlinearLinkParamsPlasticHardening;
end;

class function CoRobotNonlinearLinkParamsGapHook.Create: IRobotNonlinearLinkParamsGapHook;
begin
  Result := CreateComObject(CLASS_RobotNonlinearLinkParamsGapHook) as IRobotNonlinearLinkParamsGapHook;
end;

class function CoRobotNonlinearLinkParamsGapHook.CreateRemote(const MachineName: string): IRobotNonlinearLinkParamsGapHook;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNonlinearLinkParamsGapHook) as IRobotNonlinearLinkParamsGapHook;
end;

class function CoRobotNonlinearLinkParamsCustom.Create: IRobotNonlinearLinkParamsCustom;
begin
  Result := CreateComObject(CLASS_RobotNonlinearLinkParamsCustom) as IRobotNonlinearLinkParamsCustom;
end;

class function CoRobotNonlinearLinkParamsCustom.CreateRemote(const MachineName: string): IRobotNonlinearLinkParamsCustom;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNonlinearLinkParamsCustom) as IRobotNonlinearLinkParamsCustom;
end;

class function CoRobotNonlinearLinkParamsCustomSegment.Create: IRobotNonlinearLinkParamsCustomSegment;
begin
  Result := CreateComObject(CLASS_RobotNonlinearLinkParamsCustomSegment) as IRobotNonlinearLinkParamsCustomSegment;
end;

class function CoRobotNonlinearLinkParamsCustomSegment.CreateRemote(const MachineName: string): IRobotNonlinearLinkParamsCustomSegment;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNonlinearLinkParamsCustomSegment) as IRobotNonlinearLinkParamsCustomSegment;
end;

class function CoRobotNonlinearLinkMngr.Create: IRobotNonlinearLinkMngr;
begin
  Result := CreateComObject(CLASS_RobotNonlinearLinkMngr) as IRobotNonlinearLinkMngr;
end;

class function CoRobotNonlinearLinkMngr.CreateRemote(const MachineName: string): IRobotNonlinearLinkMngr;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNonlinearLinkMngr) as IRobotNonlinearLinkMngr;
end;

class function CoRobotBarGeoImperfectionsData.Create: IRobotBarGeoImperfectionsData;
begin
  Result := CreateComObject(CLASS_RobotBarGeoImperfectionsData) as IRobotBarGeoImperfectionsData;
end;

class function CoRobotBarGeoImperfectionsData.CreateRemote(const MachineName: string): IRobotBarGeoImperfectionsData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarGeoImperfectionsData) as IRobotBarGeoImperfectionsData;
end;

class function CoRobotTimeHistoryResults.Create: IRobotTimeHistoryResults;
begin
  Result := CreateComObject(CLASS_RobotTimeHistoryResults) as IRobotTimeHistoryResults;
end;

class function CoRobotTimeHistoryResults.CreateRemote(const MachineName: string): IRobotTimeHistoryResults;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotTimeHistoryResults) as IRobotTimeHistoryResults;
end;

class function CoRobotTimeHistoryResultServer.Create: IRobotTimeHistoryResultServer;
begin
  Result := CreateComObject(CLASS_RobotTimeHistoryResultServer) as IRobotTimeHistoryResultServer;
end;

class function CoRobotTimeHistoryResultServer.CreateRemote(const MachineName: string): IRobotTimeHistoryResultServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotTimeHistoryResultServer) as IRobotTimeHistoryResultServer;
end;

class function CoRobotExtremeValue.Create: IRobotExtremeValue;
begin
  Result := CreateComObject(CLASS_RobotExtremeValue) as IRobotExtremeValue;
end;

class function CoRobotExtremeValue.CreateRemote(const MachineName: string): IRobotExtremeValue;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotExtremeValue) as IRobotExtremeValue;
end;

class function CoRobotExtremeParams.Create: IRobotExtremeParams;
begin
  Result := CreateComObject(CLASS_RobotExtremeParams) as IRobotExtremeParams;
end;

class function CoRobotExtremeParams.CreateRemote(const MachineName: string): IRobotExtremeParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotExtremeParams) as IRobotExtremeParams;
end;

class function CoRobotExtremeResultServer.Create: IRobotExtremeResultServer;
begin
  Result := CreateComObject(CLASS_RobotExtremeResultServer) as IRobotExtremeResultServer;
end;

class function CoRobotExtremeResultServer.CreateRemote(const MachineName: string): IRobotExtremeResultServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotExtremeResultServer) as IRobotExtremeResultServer;
end;

class function CoRobotStructureEditTools.Create: IRobotStructureEditTools;
begin
  Result := CreateComObject(CLASS_RobotStructureEditTools) as IRobotStructureEditTools;
end;

class function CoRobotStructureEditTools.CreateRemote(const MachineName: string): IRobotStructureEditTools;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotStructureEditTools) as IRobotStructureEditTools;
end;

class function CoRobotStructureCache.Create: IRobotStructureCache;
begin
  Result := CreateComObject(CLASS_RobotStructureCache) as IRobotStructureCache;
end;

class function CoRobotStructureCache.CreateRemote(const MachineName: string): IRobotStructureCache;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotStructureCache) as IRobotStructureCache;
end;

class function CoRobotStructureApplyInfo.Create: IRobotStructureApplyInfo;
begin
  Result := CreateComObject(CLASS_RobotStructureApplyInfo) as IRobotStructureApplyInfo;
end;

class function CoRobotStructureApplyInfo.CreateRemote(const MachineName: string): IRobotStructureApplyInfo;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotStructureApplyInfo) as IRobotStructureApplyInfo;
end;

class function CoRobotBarSectionComplexData.Create: IRobotBarSectionComplexData;
begin
  Result := CreateComObject(CLASS_RobotBarSectionComplexData) as IRobotBarSectionComplexData;
end;

class function CoRobotBarSectionComplexData.CreateRemote(const MachineName: string): IRobotBarSectionComplexData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarSectionComplexData) as IRobotBarSectionComplexData;
end;

class function CoRobotSeismicAnalysis_RPS_2000_Params.Create: IRobotSeismicAnalysis_RPS_2000_Params;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_RPS_2000_Params) as IRobotSeismicAnalysis_RPS_2000_Params;
end;

class function CoRobotSeismicAnalysis_RPS_2000_Params.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_RPS_2000_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_RPS_2000_Params) as IRobotSeismicAnalysis_RPS_2000_Params;
end;

class function CoRobotSeismicAnalysis_RPA_2003_Params.Create: IRobotSeismicAnalysis_RPA_2003_Params;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_RPA_2003_Params) as IRobotSeismicAnalysis_RPA_2003_Params;
end;

class function CoRobotSeismicAnalysis_RPA_2003_Params.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_RPA_2003_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_RPA_2003_Params) as IRobotSeismicAnalysis_RPA_2003_Params;
end;

class function CoRobotStorey.Create: IRobotStorey;
begin
  Result := CreateComObject(CLASS_RobotStorey) as IRobotStorey;
end;

class function CoRobotStorey.CreateRemote(const MachineName: string): IRobotStorey;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotStorey) as IRobotStorey;
end;

class function CoRobotStoreyMngr.Create: IRobotStoreyMngr;
begin
  Result := CreateComObject(CLASS_RobotStoreyMngr) as IRobotStoreyMngr;
end;

class function CoRobotStoreyMngr.CreateRemote(const MachineName: string): IRobotStoreyMngr;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotStoreyMngr) as IRobotStoreyMngr;
end;

class function CoRobotMassEccentricities.Create: IRobotMassEccentricities;
begin
  Result := CreateComObject(CLASS_RobotMassEccentricities) as IRobotMassEccentricities;
end;

class function CoRobotMassEccentricities.CreateRemote(const MachineName: string): IRobotMassEccentricities;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotMassEccentricities) as IRobotMassEccentricities;
end;

class function CoRobotSeismicAnalysis_ITALY_ORDINANZA_Params.Create: IRobotSeismicAnalysis_ITALY_ORDINANZA_Params;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_ITALY_ORDINANZA_Params) as IRobotSeismicAnalysis_ITALY_ORDINANZA_Params;
end;

class function CoRobotSeismicAnalysis_ITALY_ORDINANZA_Params.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_ITALY_ORDINANZA_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_ITALY_ORDINANZA_Params) as IRobotSeismicAnalysis_ITALY_ORDINANZA_Params;
end;

class function CoRobotGroupObjectServer.Create: IRobotGroupObjectServer;
begin
  Result := CreateComObject(CLASS_RobotGroupObjectServer) as IRobotGroupObjectServer;
end;

class function CoRobotGroupObjectServer.CreateRemote(const MachineName: string): IRobotGroupObjectServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotGroupObjectServer) as IRobotGroupObjectServer;
end;

class function CoRobotStructureValues.Create: IRobotStructureValues;
begin
  Result := CreateComObject(CLASS_RobotStructureValues) as IRobotStructureValues;
end;

class function CoRobotStructureValues.CreateRemote(const MachineName: string): IRobotStructureValues;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotStructureValues) as IRobotStructureValues;
end;

class function CoRobotMaterialQuantitySurvey.Create: IRobotMaterialQuantitySurvey;
begin
  Result := CreateComObject(CLASS_RobotMaterialQuantitySurvey) as IRobotMaterialQuantitySurvey;
end;

class function CoRobotMaterialQuantitySurvey.CreateRemote(const MachineName: string): IRobotMaterialQuantitySurvey;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotMaterialQuantitySurvey) as IRobotMaterialQuantitySurvey;
end;

class function CoRobotBarSectionQuantitySurvey.Create: IRobotBarSectionQuantitySurvey;
begin
  Result := CreateComObject(CLASS_RobotBarSectionQuantitySurvey) as IRobotBarSectionQuantitySurvey;
end;

class function CoRobotBarSectionQuantitySurvey.CreateRemote(const MachineName: string): IRobotBarSectionQuantitySurvey;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarSectionQuantitySurvey) as IRobotBarSectionQuantitySurvey;
end;

class function CoRobotThicknessQuantitySurvey.Create: IRobotThicknessQuantitySurvey;
begin
  Result := CreateComObject(CLASS_RobotThicknessQuantitySurvey) as IRobotThicknessQuantitySurvey;
end;

class function CoRobotThicknessQuantitySurvey.CreateRemote(const MachineName: string): IRobotThicknessQuantitySurvey;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotThicknessQuantitySurvey) as IRobotThicknessQuantitySurvey;
end;

class function CoRobotStructureQuantitySurvey.Create: IRobotStructureQuantitySurvey;
begin
  Result := CreateComObject(CLASS_RobotStructureQuantitySurvey) as IRobotStructureQuantitySurvey;
end;

class function CoRobotStructureQuantitySurvey.CreateRemote(const MachineName: string): IRobotStructureQuantitySurvey;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotStructureQuantitySurvey) as IRobotStructureQuantitySurvey;
end;

class function CoRobotStructureMergeData.Create: IRobotStructureMergeData;
begin
  Result := CreateComObject(CLASS_RobotStructureMergeData) as IRobotStructureMergeData;
end;

class function CoRobotStructureMergeData.CreateRemote(const MachineName: string): IRobotStructureMergeData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotStructureMergeData) as IRobotStructureMergeData;
end;

class function CoRobotResultQueryParams.Create: IRobotResultQueryParams;
begin
  Result := CreateComObject(CLASS_RobotResultQueryParams) as IRobotResultQueryParams;
end;

class function CoRobotResultQueryParams.CreateRemote(const MachineName: string): IRobotResultQueryParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotResultQueryParams) as IRobotResultQueryParams;
end;

class function CoRobotSupportEquivalentWallElasticity.Create: IRobotSupportEquivalentWallElasticity;
begin
  Result := CreateComObject(CLASS_RobotSupportEquivalentWallElasticity) as IRobotSupportEquivalentWallElasticity;
end;

class function CoRobotSupportEquivalentWallElasticity.CreateRemote(const MachineName: string): IRobotSupportEquivalentWallElasticity;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSupportEquivalentWallElasticity) as IRobotSupportEquivalentWallElasticity;
end;

class function CoRobotSupportEquivalentColumnElasticity.Create: IRobotSupportEquivalentColumnElasticity;
begin
  Result := CreateComObject(CLASS_RobotSupportEquivalentColumnElasticity) as IRobotSupportEquivalentColumnElasticity;
end;

class function CoRobotSupportEquivalentColumnElasticity.CreateRemote(const MachineName: string): IRobotSupportEquivalentColumnElasticity;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSupportEquivalentColumnElasticity) as IRobotSupportEquivalentColumnElasticity;
end;

class function CoRobotAdvancedSupportData.Create: IRobotAdvancedSupportData;
begin
  Result := CreateComObject(CLASS_RobotAdvancedSupportData) as IRobotAdvancedSupportData;
end;

class function CoRobotAdvancedSupportData.CreateRemote(const MachineName: string): IRobotAdvancedSupportData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotAdvancedSupportData) as IRobotAdvancedSupportData;
end;

class function CoRobotLoadRecordBarTrapezoidal.Create: IRobotLoadRecordBarTrapezoidal;
begin
  Result := CreateComObject(CLASS_RobotLoadRecordBarTrapezoidal) as IRobotLoadRecordBarTrapezoidal;
end;

class function CoRobotLoadRecordBarTrapezoidal.CreateRemote(const MachineName: string): IRobotLoadRecordBarTrapezoidal;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotLoadRecordBarTrapezoidal) as IRobotLoadRecordBarTrapezoidal;
end;

class function CoRobotBarSectionSpecialData.Create: IRobotBarSectionSpecialData;
begin
  Result := CreateComObject(CLASS_RobotBarSectionSpecialData) as IRobotBarSectionSpecialData;
end;

class function CoRobotBarSectionSpecialData.CreateRemote(const MachineName: string): IRobotBarSectionSpecialData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarSectionSpecialData) as IRobotBarSectionSpecialData;
end;

class function CoRobotSeismicAnalysis_PS_92_2008_Params.Create: IRobotSeismicAnalysis_PS_92_2008_Params;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_PS_92_2008_Params) as IRobotSeismicAnalysis_PS_92_2008_Params;
end;

class function CoRobotSeismicAnalysis_PS_92_2008_Params.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_PS_92_2008_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_PS_92_2008_Params) as IRobotSeismicAnalysis_PS_92_2008_Params;
end;

class function CoRobotSeismicAnalysis_PS_92_2008_SiteEnvelope.Create: IRobotSeismicAnalysis_PS_92_2008_SiteEnvelope;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_PS_92_2008_SiteEnvelope) as IRobotSeismicAnalysis_PS_92_2008_SiteEnvelope;
end;

class function CoRobotSeismicAnalysis_PS_92_2008_SiteEnvelope.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_PS_92_2008_SiteEnvelope;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_PS_92_2008_SiteEnvelope) as IRobotSeismicAnalysis_PS_92_2008_SiteEnvelope;
end;

class function CoRobotLoadRecordDead.Create: IRobotLoadRecordDead;
begin
  Result := CreateComObject(CLASS_RobotLoadRecordDead) as IRobotLoadRecordDead;
end;

class function CoRobotLoadRecordDead.CreateRemote(const MachineName: string): IRobotLoadRecordDead;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotLoadRecordDead) as IRobotLoadRecordDead;
end;

class function CoRobotStoreySelection.Create: IRobotStoreySelection;
begin
  Result := CreateComObject(CLASS_RobotStoreySelection) as IRobotStoreySelection;
end;

class function CoRobotStoreySelection.CreateRemote(const MachineName: string): IRobotStoreySelection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotStoreySelection) as IRobotStoreySelection;
end;

class function CoRobotDynamicAnalysisDamping.Create: IRobotDynamicAnalysisDamping;
begin
  Result := CreateComObject(CLASS_RobotDynamicAnalysisDamping) as IRobotDynamicAnalysisDamping;
end;

class function CoRobotDynamicAnalysisDamping.CreateRemote(const MachineName: string): IRobotDynamicAnalysisDamping;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotDynamicAnalysisDamping) as IRobotDynamicAnalysisDamping;
end;

class function CoRobotFRFAnalysisParams.Create: IRobotFRFAnalysisParams;
begin
  Result := CreateComObject(CLASS_RobotFRFAnalysisParams) as IRobotFRFAnalysisParams;
end;

class function CoRobotFRFAnalysisParams.CreateRemote(const MachineName: string): IRobotFRFAnalysisParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFRFAnalysisParams) as IRobotFRFAnalysisParams;
end;

class function CoRobotFootfallAnalysisNodeSelection.Create: IRobotFootfallAnalysisNodeSelection;
begin
  Result := CreateComObject(CLASS_RobotFootfallAnalysisNodeSelection) as IRobotFootfallAnalysisNodeSelection;
end;

class function CoRobotFootfallAnalysisNodeSelection.CreateRemote(const MachineName: string): IRobotFootfallAnalysisNodeSelection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFootfallAnalysisNodeSelection) as IRobotFootfallAnalysisNodeSelection;
end;

class function CoRobotFootfallAnalysisModalParams.Create: IRobotFootfallAnalysisModalParams;
begin
  Result := CreateComObject(CLASS_RobotFootfallAnalysisModalParams) as IRobotFootfallAnalysisModalParams;
end;

class function CoRobotFootfallAnalysisModalParams.CreateRemote(const MachineName: string): IRobotFootfallAnalysisModalParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFootfallAnalysisModalParams) as IRobotFootfallAnalysisModalParams;
end;

class function CoRobotFootfallAnalysisParams.Create: IRobotFootfallAnalysisParams;
begin
  Result := CreateComObject(CLASS_RobotFootfallAnalysisParams) as IRobotFootfallAnalysisParams;
end;

class function CoRobotFootfallAnalysisParams.CreateRemote(const MachineName: string): IRobotFootfallAnalysisParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFootfallAnalysisParams) as IRobotFootfallAnalysisParams;
end;

class function CoRobotFRFResults.Create: IRobotFRFResults;
begin
  Result := CreateComObject(CLASS_RobotFRFResults) as IRobotFRFResults;
end;

class function CoRobotFRFResults.CreateRemote(const MachineName: string): IRobotFRFResults;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFRFResults) as IRobotFRFResults;
end;

class function CoRobotFRFResultServer.Create: IRobotFRFResultServer;
begin
  Result := CreateComObject(CLASS_RobotFRFResultServer) as IRobotFRFResultServer;
end;

class function CoRobotFRFResultServer.CreateRemote(const MachineName: string): IRobotFRFResultServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFRFResultServer) as IRobotFRFResultServer;
end;

class function CoRobotFootfallResults.Create: IRobotFootfallResults;
begin
  Result := CreateComObject(CLASS_RobotFootfallResults) as IRobotFootfallResults;
end;

class function CoRobotFootfallResults.CreateRemote(const MachineName: string): IRobotFootfallResults;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFootfallResults) as IRobotFootfallResults;
end;

class function CoRobotStoreyValues.Create: IRobotStoreyValues;
begin
  Result := CreateComObject(CLASS_RobotStoreyValues) as IRobotStoreyValues;
end;

class function CoRobotStoreyValues.CreateRemote(const MachineName: string): IRobotStoreyValues;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotStoreyValues) as IRobotStoreyValues;
end;

class function CoRobotStoreyReducedForces.Create: IRobotStoreyReducedForces;
begin
  Result := CreateComObject(CLASS_RobotStoreyReducedForces) as IRobotStoreyReducedForces;
end;

class function CoRobotStoreyReducedForces.CreateRemote(const MachineName: string): IRobotStoreyReducedForces;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotStoreyReducedForces) as IRobotStoreyReducedForces;
end;

class function CoRobotStoreyDisplacements.Create: IRobotStoreyDisplacements;
begin
  Result := CreateComObject(CLASS_RobotStoreyDisplacements) as IRobotStoreyDisplacements;
end;

class function CoRobotStoreyDisplacements.CreateRemote(const MachineName: string): IRobotStoreyDisplacements;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotStoreyDisplacements) as IRobotStoreyDisplacements;
end;

class function CoRobotStoreyResultServer.Create: IRobotStoreyResultServer;
begin
  Result := CreateComObject(CLASS_RobotStoreyResultServer) as IRobotStoreyResultServer;
end;

class function CoRobotStoreyResultServer.CreateRemote(const MachineName: string): IRobotStoreyResultServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotStoreyResultServer) as IRobotStoreyResultServer;
end;

class function CoRobotTimeHistoryHHTParams.Create: IRobotTimeHistoryHHTParams;
begin
  Result := CreateComObject(CLASS_RobotTimeHistoryHHTParams) as IRobotTimeHistoryHHTParams;
end;

class function CoRobotTimeHistoryHHTParams.CreateRemote(const MachineName: string): IRobotTimeHistoryHHTParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotTimeHistoryHHTParams) as IRobotTimeHistoryHHTParams;
end;

class function CoRobotTimeHistoryNewmarkAccelParams.Create: IRobotTimeHistoryNewmarkAccelParams;
begin
  Result := CreateComObject(CLASS_RobotTimeHistoryNewmarkAccelParams) as IRobotTimeHistoryNewmarkAccelParams;
end;

class function CoRobotTimeHistoryNewmarkAccelParams.CreateRemote(const MachineName: string): IRobotTimeHistoryNewmarkAccelParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotTimeHistoryNewmarkAccelParams) as IRobotTimeHistoryNewmarkAccelParams;
end;

class function CoRobotSELFSeismicEngine.Create: IRobotSELFSeismicEngine;
begin
  Result := CreateComObject(CLASS_RobotSELFSeismicEngine) as IRobotSELFSeismicEngine;
end;

class function CoRobotSELFSeismicEngine.CreateRemote(const MachineName: string): IRobotSELFSeismicEngine;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSELFSeismicEngine) as IRobotSELFSeismicEngine;
end;

class function CoRobotWindLoadsSimulationParams.Create: IRobotWindLoadsSimulationParams;
begin
  Result := CreateComObject(CLASS_RobotWindLoadsSimulationParams) as IRobotWindLoadsSimulationParams;
end;

class function CoRobotWindLoadsSimulationParams.CreateRemote(const MachineName: string): IRobotWindLoadsSimulationParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotWindLoadsSimulationParams) as IRobotWindLoadsSimulationParams;
end;

class function CoRobotWindLoadsSimulationEngine.Create: IRobotWindLoadsSimulationEngine;
begin
  Result := CreateComObject(CLASS_RobotWindLoadsSimulationEngine) as IRobotWindLoadsSimulationEngine;
end;

class function CoRobotWindLoadsSimulationEngine.CreateRemote(const MachineName: string): IRobotWindLoadsSimulationEngine;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotWindLoadsSimulationEngine) as IRobotWindLoadsSimulationEngine;
end;

class function CoRobotSELFSeismicGenerationParams.Create: IRobotSELFSeismicGenerationParams;
begin
  Result := CreateComObject(CLASS_RobotSELFSeismicGenerationParams) as IRobotSELFSeismicGenerationParams;
end;

class function CoRobotSELFSeismicGenerationParams.CreateRemote(const MachineName: string): IRobotSELFSeismicGenerationParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSELFSeismicGenerationParams) as IRobotSELFSeismicGenerationParams;
end;

class function CoRobotSELFSeismicStructureParams.Create: IRobotSELFSeismicStructureParams;
begin
  Result := CreateComObject(CLASS_RobotSELFSeismicStructureParams) as IRobotSELFSeismicStructureParams;
end;

class function CoRobotSELFSeismicStructureParams.CreateRemote(const MachineName: string): IRobotSELFSeismicStructureParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSELFSeismicStructureParams) as IRobotSELFSeismicStructureParams;
end;

class function CoRobotSELFSeismicAnalysisParams.Create: IRobotSELFSeismicAnalysisParams;
begin
  Result := CreateComObject(CLASS_RobotSELFSeismicAnalysisParams) as IRobotSELFSeismicAnalysisParams;
end;

class function CoRobotSELFSeismicAnalysisParams.CreateRemote(const MachineName: string): IRobotSELFSeismicAnalysisParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSELFSeismicAnalysisParams) as IRobotSELFSeismicAnalysisParams;
end;

class function CoRobotSELFSeismic_ASCE_7_10_Params.Create: IRobotSELFSeismic_ASCE_7_10_Params;
begin
  Result := CreateComObject(CLASS_RobotSELFSeismic_ASCE_7_10_Params) as IRobotSELFSeismic_ASCE_7_10_Params;
end;

class function CoRobotSELFSeismic_ASCE_7_10_Params.CreateRemote(const MachineName: string): IRobotSELFSeismic_ASCE_7_10_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSELFSeismic_ASCE_7_10_Params) as IRobotSELFSeismic_ASCE_7_10_Params;
end;

class function CoRobotSELFSeismic_EC_8_Params.Create: IRobotSELFSeismic_EC_8_Params;
begin
  Result := CreateComObject(CLASS_RobotSELFSeismic_EC_8_Params) as IRobotSELFSeismic_EC_8_Params;
end;

class function CoRobotSELFSeismic_EC_8_Params.CreateRemote(const MachineName: string): IRobotSELFSeismic_EC_8_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSELFSeismic_EC_8_Params) as IRobotSELFSeismic_EC_8_Params;
end;

class function CoRobotSELFSeismic_AS_1170_4_Params.Create: IRobotSELFSeismic_AS_1170_4_Params;
begin
  Result := CreateComObject(CLASS_RobotSELFSeismic_AS_1170_4_Params) as IRobotSELFSeismic_AS_1170_4_Params;
end;

class function CoRobotSELFSeismic_AS_1170_4_Params.CreateRemote(const MachineName: string): IRobotSELFSeismic_AS_1170_4_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSELFSeismic_AS_1170_4_Params) as IRobotSELFSeismic_AS_1170_4_Params;
end;

class function CoRobotSeismicResidualMode.Create: IRobotSeismicResidualMode;
begin
  Result := CreateComObject(CLASS_RobotSeismicResidualMode) as IRobotSeismicResidualMode;
end;

class function CoRobotSeismicResidualMode.CreateRemote(const MachineName: string): IRobotSeismicResidualMode;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicResidualMode) as IRobotSeismicResidualMode;
end;

class function CoRobotSeismicAnalysis_EC8_General_Params.Create: IRobotSeismicAnalysis_EC8_General_Params;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_EC8_General_Params) as IRobotSeismicAnalysis_EC8_General_Params;
end;

class function CoRobotSeismicAnalysis_EC8_General_Params.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_EC8_General_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_EC8_General_Params) as IRobotSeismicAnalysis_EC8_General_Params;
end;

class function CoRobotSeismicAnalysis_EC8_Params.Create: IRobotSeismicAnalysis_EC8_Params;
begin
  Result := CreateComObject(CLASS_RobotSeismicAnalysis_EC8_Params) as IRobotSeismicAnalysis_EC8_Params;
end;

class function CoRobotSeismicAnalysis_EC8_Params.CreateRemote(const MachineName: string): IRobotSeismicAnalysis_EC8_Params;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicAnalysis_EC8_Params) as IRobotSeismicAnalysis_EC8_Params;
end;

class function CoRobotDAMNotionalLoads.Create: IRobotDAMNotionalLoads;
begin
  Result := CreateComObject(CLASS_RobotDAMNotionalLoads) as IRobotDAMNotionalLoads;
end;

class function CoRobotDAMNotionalLoads.CreateRemote(const MachineName: string): IRobotDAMNotionalLoads;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotDAMNotionalLoads) as IRobotDAMNotionalLoads;
end;

class function CoRobotDAMReducedStiffness.Create: IRobotDAMReducedStiffness;
begin
  Result := CreateComObject(CLASS_RobotDAMReducedStiffness) as IRobotDAMReducedStiffness;
end;

class function CoRobotDAMReducedStiffness.CreateRemote(const MachineName: string): IRobotDAMReducedStiffness;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotDAMReducedStiffness) as IRobotDAMReducedStiffness;
end;

class function CoRobotDAMParams.Create: IRobotDAMParams;
begin
  Result := CreateComObject(CLASS_RobotDAMParams) as IRobotDAMParams;
end;

class function CoRobotDAMParams.CreateRemote(const MachineName: string): IRobotDAMParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotDAMParams) as IRobotDAMParams;
end;

class function CoRobotDAMCalcModule.Create: IRobotDAMCalcModule;
begin
  Result := CreateComObject(CLASS_RobotDAMCalcModule) as IRobotDAMCalcModule;
end;

class function CoRobotDAMCalcModule.CreateRemote(const MachineName: string): IRobotDAMCalcModule;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotDAMCalcModule) as IRobotDAMCalcModule;
end;

class function CoRobotCalculationResume.Create: IRobotCalculationResume;
begin
  Result := CreateComObject(CLASS_RobotCalculationResume) as IRobotCalculationResume;
end;

class function CoRobotCalculationResume.CreateRemote(const MachineName: string): IRobotCalculationResume;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCalculationResume) as IRobotCalculationResume;
end;

class function CoRobotCalcEngine.Create: IRobotCalcEngine;
begin
  Result := CreateComObject(CLASS_RobotCalcEngine) as IRobotCalcEngine;
end;

class function CoRobotCalcEngine.CreateRemote(const MachineName: string): IRobotCalcEngine;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCalcEngine) as IRobotCalcEngine;
end;

class function CoRobotStructureAnalysisParams.Create: IRobotStructureAnalysisParams;
begin
  Result := CreateComObject(CLASS_RobotStructureAnalysisParams) as IRobotStructureAnalysisParams;
end;

class function CoRobotStructureAnalysisParams.CreateRemote(const MachineName: string): IRobotStructureAnalysisParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotStructureAnalysisParams) as IRobotStructureAnalysisParams;
end;

class function CoRobotSparseMSolverParams.Create: IRobotSparseMSolverParams;
begin
  Result := CreateComObject(CLASS_RobotSparseMSolverParams) as IRobotSparseMSolverParams;
end;

class function CoRobotSparseMSolverParams.CreateRemote(const MachineName: string): IRobotSparseMSolverParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSparseMSolverParams) as IRobotSparseMSolverParams;
end;

class function CoRobotIterativeSolverParams.Create: IRobotIterativeSolverParams;
begin
  Result := CreateComObject(CLASS_RobotIterativeSolverParams) as IRobotIterativeSolverParams;
end;

class function CoRobotIterativeSolverParams.CreateRemote(const MachineName: string): IRobotIterativeSolverParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotIterativeSolverParams) as IRobotIterativeSolverParams;
end;

class function CoRobotSeismicResultsSaveParams.Create: IRobotSeismicResultsSaveParams;
begin
  Result := CreateComObject(CLASS_RobotSeismicResultsSaveParams) as IRobotSeismicResultsSaveParams;
end;

class function CoRobotSeismicResultsSaveParams.CreateRemote(const MachineName: string): IRobotSeismicResultsSaveParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSeismicResultsSaveParams) as IRobotSeismicResultsSaveParams;
end;

class function CoRobotModelGenerationParams.Create: IRobotModelGenerationParams;
begin
  Result := CreateComObject(CLASS_RobotModelGenerationParams) as IRobotModelGenerationParams;
end;

class function CoRobotModelGenerationParams.CreateRemote(const MachineName: string): IRobotModelGenerationParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotModelGenerationParams) as IRobotModelGenerationParams;
end;

class function CoRobotBucklingDeformationParams.Create: IRobotBucklingDeformationParams;
begin
  Result := CreateComObject(CLASS_RobotBucklingDeformationParams) as IRobotBucklingDeformationParams;
end;

class function CoRobotBucklingDeformationParams.CreateRemote(const MachineName: string): IRobotBucklingDeformationParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBucklingDeformationParams) as IRobotBucklingDeformationParams;
end;

class function CoRobotSelection.Create: IRobotSelection;
begin
  Result := CreateComObject(CLASS_RobotSelection) as IRobotSelection;
end;

class function CoRobotSelection.CreateRemote(const MachineName: string): IRobotSelection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSelection) as IRobotSelection;
end;

class function CoRobotMultiSelection.Create: IRobotMultiSelection;
begin
  Result := CreateComObject(CLASS_RobotMultiSelection) as IRobotMultiSelection;
end;

class function CoRobotMultiSelection.CreateRemote(const MachineName: string): IRobotMultiSelection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotMultiSelection) as IRobotMultiSelection;
end;

class function CoRobotSelectionFactory.Create: IRobotSelectionFactory;
begin
  Result := CreateComObject(CLASS_RobotSelectionFactory) as IRobotSelectionFactory;
end;

class function CoRobotSelectionFactory.CreateRemote(const MachineName: string): IRobotSelectionFactory;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSelectionFactory) as IRobotSelectionFactory;
end;

class function CoRobotGroup.Create: IRobotGroup;
begin
  Result := CreateComObject(CLASS_RobotGroup) as IRobotGroup;
end;

class function CoRobotGroup.CreateRemote(const MachineName: string): IRobotGroup;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotGroup) as IRobotGroup;
end;

class function CoRobotGroupServer.Create: IRobotGroupServer;
begin
  Result := CreateComObject(CLASS_RobotGroupServer) as IRobotGroupServer;
end;

class function CoRobotGroupServer.CreateRemote(const MachineName: string): IRobotGroupServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotGroupServer) as IRobotGroupServer;
end;

class function CoRobotModeSelection.Create: IRobotModeSelection;
begin
  Result := CreateComObject(CLASS_RobotModeSelection) as IRobotModeSelection;
end;

class function CoRobotModeSelection.CreateRemote(const MachineName: string): IRobotModeSelection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotModeSelection) as IRobotModeSelection;
end;

class function CoRobotObjEdgeSelection.Create: IRobotObjEdgeSelection;
begin
  Result := CreateComObject(CLASS_RobotObjEdgeSelection) as IRobotObjEdgeSelection;
end;

class function CoRobotObjEdgeSelection.CreateRemote(const MachineName: string): IRobotObjEdgeSelection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjEdgeSelection) as IRobotObjEdgeSelection;
end;

class function CoRobotPreferences.Create: IRobotPreferences;
begin
  Result := CreateComObject(CLASS_RobotPreferences) as IRobotPreferences;
end;

class function CoRobotPreferences.CreateRemote(const MachineName: string): IRobotPreferences;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotPreferences) as IRobotPreferences;
end;

class function CoRobotSectionDatabase.Create: IRobotSectionDatabase;
begin
  Result := CreateComObject(CLASS_RobotSectionDatabase) as IRobotSectionDatabase;
end;

class function CoRobotSectionDatabase.CreateRemote(const MachineName: string): IRobotSectionDatabase;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSectionDatabase) as IRobotSectionDatabase;
end;

class function CoRobotMaterialDatabase.Create: IRobotMaterialDatabase;
begin
  Result := CreateComObject(CLASS_RobotMaterialDatabase) as IRobotMaterialDatabase;
end;

class function CoRobotMaterialDatabase.CreateRemote(const MachineName: string): IRobotMaterialDatabase;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotMaterialDatabase) as IRobotMaterialDatabase;
end;

class function CoRobotSectionDatabaseList.Create: IRobotSectionDatabaseList;
begin
  Result := CreateComObject(CLASS_RobotSectionDatabaseList) as IRobotSectionDatabaseList;
end;

class function CoRobotSectionDatabaseList.CreateRemote(const MachineName: string): IRobotSectionDatabaseList;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSectionDatabaseList) as IRobotSectionDatabaseList;
end;

class function CoRobotProjectPreferences.Create: IRobotProjectPreferences;
begin
  Result := CreateComObject(CLASS_RobotProjectPreferences) as IRobotProjectPreferences;
end;

class function CoRobotProjectPreferences.CreateRemote(const MachineName: string): IRobotProjectPreferences;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotProjectPreferences) as IRobotProjectPreferences;
end;

class function CoRobotKernelPreferences.Create: IRobotKernelPreferences;
begin
  Result := CreateComObject(CLASS_RobotKernelPreferences) as IRobotKernelPreferences;
end;

class function CoRobotKernelPreferences.CreateRemote(const MachineName: string): IRobotKernelPreferences;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotKernelPreferences) as IRobotKernelPreferences;
end;

class function CoRobotVehicleDatabaseList.Create: IRobotVehicleDatabaseList;
begin
  Result := CreateComObject(CLASS_RobotVehicleDatabaseList) as IRobotVehicleDatabaseList;
end;

class function CoRobotVehicleDatabaseList.CreateRemote(const MachineName: string): IRobotVehicleDatabaseList;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotVehicleDatabaseList) as IRobotVehicleDatabaseList;
end;

class function CoRobotVehicleDatabase.Create: IRobotVehicleDatabase;
begin
  Result := CreateComObject(CLASS_RobotVehicleDatabase) as IRobotVehicleDatabase;
end;

class function CoRobotVehicleDatabase.CreateRemote(const MachineName: string): IRobotVehicleDatabase;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotVehicleDatabase) as IRobotVehicleDatabase;
end;

class function CoRobotEurocodeFactors.Create: IRobotEurocodeFactors;
begin
  Result := CreateComObject(CLASS_RobotEurocodeFactors) as IRobotEurocodeFactors;
end;

class function CoRobotEurocodeFactors.CreateRemote(const MachineName: string): IRobotEurocodeFactors;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotEurocodeFactors) as IRobotEurocodeFactors;
end;

class function CoRobotEurocodeSteelDesignFactors.Create: IRobotEurocodeSteelDesignFactors;
begin
  Result := CreateComObject(CLASS_RobotEurocodeSteelDesignFactors) as IRobotEurocodeSteelDesignFactors;
end;

class function CoRobotEurocodeSteelDesignFactors.CreateRemote(const MachineName: string): IRobotEurocodeSteelDesignFactors;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotEurocodeSteelDesignFactors) as IRobotEurocodeSteelDesignFactors;
end;

class function CoRobotEurocodeSteelConnectionFactors.Create: IRobotEurocodeSteelConnectionFactors;
begin
  Result := CreateComObject(CLASS_RobotEurocodeSteelConnectionFactors) as IRobotEurocodeSteelConnectionFactors;
end;

class function CoRobotEurocodeSteelConnectionFactors.CreateRemote(const MachineName: string): IRobotEurocodeSteelConnectionFactors;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotEurocodeSteelConnectionFactors) as IRobotEurocodeSteelConnectionFactors;
end;

class function CoRobotValuesArray.Create: IRobotValuesArray;
begin
  Result := CreateComObject(CLASS_RobotValuesArray) as IRobotValuesArray;
end;

class function CoRobotValuesArray.CreateRemote(const MachineName: string): IRobotValuesArray;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotValuesArray) as IRobotValuesArray;
end;

class function CoRobotNamesArray.Create: IRobotNamesArray;
begin
  Result := CreateComObject(CLASS_RobotNamesArray) as IRobotNamesArray;
end;

class function CoRobotNamesArray.CreateRemote(const MachineName: string): IRobotNamesArray;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNamesArray) as IRobotNamesArray;
end;

class function CoRobotNumbersArray.Create: IRobotNumbersArray;
begin
  Result := CreateComObject(CLASS_RobotNumbersArray) as IRobotNumbersArray;
end;

class function CoRobotNumbersArray.CreateRemote(const MachineName: string): IRobotNumbersArray;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNumbersArray) as IRobotNumbersArray;
end;

class function CoRobotObjectsArray.Create: IRobotObjectsArray;
begin
  Result := CreateComObject(CLASS_RobotObjectsArray) as IRobotObjectsArray;
end;

class function CoRobotObjectsArray.CreateRemote(const MachineName: string): IRobotObjectsArray;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjectsArray) as IRobotObjectsArray;
end;

class function CoRobotNumbersCollection.Create: IRobotNumbersCollection;
begin
  Result := CreateComObject(CLASS_RobotNumbersCollection) as IRobotNumbersCollection;
end;

class function CoRobotNumbersCollection.CreateRemote(const MachineName: string): IRobotNumbersCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNumbersCollection) as IRobotNumbersCollection;
end;

class function CoRobotWindow.Create: IRobotWindow;
begin
  Result := CreateComObject(CLASS_RobotWindow) as IRobotWindow;
end;

class function CoRobotWindow.CreateRemote(const MachineName: string): IRobotWindow;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotWindow) as IRobotWindow;
end;

class function CoRobotPointsArray.Create: IRobotPointsArray;
begin
  Result := CreateComObject(CLASS_RobotPointsArray) as IRobotPointsArray;
end;

class function CoRobotPointsArray.CreateRemote(const MachineName: string): IRobotPointsArray;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotPointsArray) as IRobotPointsArray;
end;

class function CoRobotLinearReleaseDefList.Create: IRobotLinearReleaseDefList;
begin
  Result := CreateComObject(CLASS_RobotLinearReleaseDefList) as IRobotLinearReleaseDefList;
end;

class function CoRobotLinearReleaseDefList.CreateRemote(const MachineName: string): IRobotLinearReleaseDefList;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotLinearReleaseDefList) as IRobotLinearReleaseDefList;
end;

class function CoRobotNumbersDictionary.Create: IRobotNumbersDictionary;
begin
  Result := CreateComObject(CLASS_RobotNumbersDictionary) as IRobotNumbersDictionary;
end;

class function CoRobotNumbersDictionary.CreateRemote(const MachineName: string): IRobotNumbersDictionary;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNumbersDictionary) as IRobotNumbersDictionary;
end;

class function CoRobotParamCollection.Create: IRobotParamCollection;
begin
  Result := CreateComObject(CLASS_RobotParamCollection) as IRobotParamCollection;
end;

class function CoRobotParamCollection.CreateRemote(const MachineName: string): IRobotParamCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotParamCollection) as IRobotParamCollection;
end;

class function CoRobotNumbersArrayInProc.Create: IRobotNumbersArray;
begin
  Result := CreateComObject(CLASS_RobotNumbersArrayInProc) as IRobotNumbersArray;
end;

class function CoRobotNumbersArrayInProc.CreateRemote(const MachineName: string): IRobotNumbersArray;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNumbersArrayInProc) as IRobotNumbersArray;
end;

class function CoRobotResultRow.Create: IRobotResultRow;
begin
  Result := CreateComObject(CLASS_RobotResultRow) as IRobotResultRow;
end;

class function CoRobotResultRow.CreateRemote(const MachineName: string): IRobotResultRow;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotResultRow) as IRobotResultRow;
end;

class function CoRobotResultRowSet.Create: IRobotResultRowSet;
begin
  Result := CreateComObject(CLASS_RobotResultRowSet) as IRobotResultRowSet;
end;

class function CoRobotResultRowSet.CreateRemote(const MachineName: string): IRobotResultRowSet;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotResultRowSet) as IRobotResultRowSet;
end;

class function CoRobotFiniteElementData.Create: IRobotFiniteElementData;
begin
  Result := CreateComObject(CLASS_RobotFiniteElementData) as IRobotFiniteElementData;
end;

class function CoRobotFiniteElementData.CreateRemote(const MachineName: string): IRobotFiniteElementData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFiniteElementData) as IRobotFiniteElementData;
end;

class function CoRobotFiniteElementDataSet.Create: IRobotFiniteElementDataSet;
begin
  Result := CreateComObject(CLASS_RobotFiniteElementDataSet) as IRobotFiniteElementDataSet;
end;

class function CoRobotFiniteElementDataSet.CreateRemote(const MachineName: string): IRobotFiniteElementDataSet;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFiniteElementDataSet) as IRobotFiniteElementDataSet;
end;

class function CoRobotBarElementData.Create: IRobotBarElementData;
begin
  Result := CreateComObject(CLASS_RobotBarElementData) as IRobotBarElementData;
end;

class function CoRobotBarElementData.CreateRemote(const MachineName: string): IRobotBarElementData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarElementData) as IRobotBarElementData;
end;

class function CoRobotBarElementDataSet.Create: IRobotBarElementDataSet;
begin
  Result := CreateComObject(CLASS_RobotBarElementDataSet) as IRobotBarElementDataSet;
end;

class function CoRobotBarElementDataSet.CreateRemote(const MachineName: string): IRobotBarElementDataSet;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarElementDataSet) as IRobotBarElementDataSet;
end;

class function CoRobotGeoPoint2D.Create: IRobotGeoPoint2D;
begin
  Result := CreateComObject(CLASS_RobotGeoPoint2D) as IRobotGeoPoint2D;
end;

class function CoRobotGeoPoint2D.CreateRemote(const MachineName: string): IRobotGeoPoint2D;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotGeoPoint2D) as IRobotGeoPoint2D;
end;

class function CoRobotGeoPoint3D.Create: IRobotGeoPoint3D;
begin
  Result := CreateComObject(CLASS_RobotGeoPoint3D) as IRobotGeoPoint3D;
end;

class function CoRobotGeoPoint3D.CreateRemote(const MachineName: string): IRobotGeoPoint3D;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotGeoPoint3D) as IRobotGeoPoint3D;
end;

class function CoRobotGeoCurveDiv.Create: IRobotGeoCurveDiv;
begin
  Result := CreateComObject(CLASS_RobotGeoCurveDiv) as IRobotGeoCurveDiv;
end;

class function CoRobotGeoCurveDiv.CreateRemote(const MachineName: string): IRobotGeoCurveDiv;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotGeoCurveDiv) as IRobotGeoCurveDiv;
end;

class function CoRobotGeoSegment.Create: IRobotGeoSegment;
begin
  Result := CreateComObject(CLASS_RobotGeoSegment) as IRobotGeoSegment;
end;

class function CoRobotGeoSegment.CreateRemote(const MachineName: string): IRobotGeoSegment;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotGeoSegment) as IRobotGeoSegment;
end;

class function CoRobotGeoSegmentLine.Create: IRobotGeoSegmentLine;
begin
  Result := CreateComObject(CLASS_RobotGeoSegmentLine) as IRobotGeoSegmentLine;
end;

class function CoRobotGeoSegmentLine.CreateRemote(const MachineName: string): IRobotGeoSegmentLine;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotGeoSegmentLine) as IRobotGeoSegmentLine;
end;

class function CoRobotGeoSegmentArc.Create: IRobotGeoSegmentArc;
begin
  Result := CreateComObject(CLASS_RobotGeoSegmentArc) as IRobotGeoSegmentArc;
end;

class function CoRobotGeoSegmentArc.CreateRemote(const MachineName: string): IRobotGeoSegmentArc;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotGeoSegmentArc) as IRobotGeoSegmentArc;
end;

class function CoRobotGeoObject.Create: IRobotGeoObject;
begin
  Result := CreateComObject(CLASS_RobotGeoObject) as IRobotGeoObject;
end;

class function CoRobotGeoObject.CreateRemote(const MachineName: string): IRobotGeoObject;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotGeoObject) as IRobotGeoObject;
end;

class function CoRobotGeoPolyline.Create: IRobotGeoPolyline;
begin
  Result := CreateComObject(CLASS_RobotGeoPolyline) as IRobotGeoPolyline;
end;

class function CoRobotGeoPolyline.CreateRemote(const MachineName: string): IRobotGeoPolyline;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotGeoPolyline) as IRobotGeoPolyline;
end;

class function CoRobotGeoContour.Create: IRobotGeoContour;
begin
  Result := CreateComObject(CLASS_RobotGeoContour) as IRobotGeoContour;
end;

class function CoRobotGeoContour.CreateRemote(const MachineName: string): IRobotGeoContour;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotGeoContour) as IRobotGeoContour;
end;

class function CoRobotGeoArc.Create: IRobotGeoArc;
begin
  Result := CreateComObject(CLASS_RobotGeoArc) as IRobotGeoArc;
end;

class function CoRobotGeoArc.CreateRemote(const MachineName: string): IRobotGeoArc;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotGeoArc) as IRobotGeoArc;
end;

class function CoRobotGeoCircle.Create: IRobotGeoCircle;
begin
  Result := CreateComObject(CLASS_RobotGeoCircle) as IRobotGeoCircle;
end;

class function CoRobotGeoCircle.CreateRemote(const MachineName: string): IRobotGeoCircle;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotGeoCircle) as IRobotGeoCircle;
end;

class function CoRobotGeoSegmentCollection.Create: IRobotCollection;
begin
  Result := CreateComObject(CLASS_RobotGeoSegmentCollection) as IRobotCollection;
end;

class function CoRobotGeoSegmentCollection.CreateRemote(const MachineName: string): IRobotCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotGeoSegmentCollection) as IRobotCollection;
end;

class function CoRobotGeoPoint3DCollection.Create: IRobotCollection;
begin
  Result := CreateComObject(CLASS_RobotGeoPoint3DCollection) as IRobotCollection;
end;

class function CoRobotGeoPoint3DCollection.CreateRemote(const MachineName: string): IRobotCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotGeoPoint3DCollection) as IRobotCollection;
end;

class function CoRobotGeoLayer.Create: IRobotGeoLayer;
begin
  Result := CreateComObject(CLASS_RobotGeoLayer) as IRobotGeoLayer;
end;

class function CoRobotGeoLayer.CreateRemote(const MachineName: string): IRobotGeoLayer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotGeoLayer) as IRobotGeoLayer;
end;

class function CoRobotObjModifExtrusion.Create: IRobotObjModifExtrusion;
begin
  Result := CreateComObject(CLASS_RobotObjModifExtrusion) as IRobotObjModifExtrusion;
end;

class function CoRobotObjModifExtrusion.CreateRemote(const MachineName: string): IRobotObjModifExtrusion;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjModifExtrusion) as IRobotObjModifExtrusion;
end;

class function CoRobotObjModifLathe.Create: IRobotObjModifLathe;
begin
  Result := CreateComObject(CLASS_RobotObjModifLathe) as IRobotObjModifLathe;
end;

class function CoRobotObjModifLathe.CreateRemote(const MachineName: string): IRobotObjModifLathe;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjModifLathe) as IRobotObjModifLathe;
end;

class function CoRobotObjModifPyramid.Create: IRobotObjModifPyramid;
begin
  Result := CreateComObject(CLASS_RobotObjModifPyramid) as IRobotObjModifPyramid;
end;

class function CoRobotObjModifPyramid.CreateRemote(const MachineName: string): IRobotObjModifPyramid;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjModifPyramid) as IRobotObjModifPyramid;
end;

class function CoRobotObjOperTranslation.Create: IRobotObjOperTranslation;
begin
  Result := CreateComObject(CLASS_RobotObjOperTranslation) as IRobotObjOperTranslation;
end;

class function CoRobotObjOperTranslation.CreateRemote(const MachineName: string): IRobotObjOperTranslation;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjOperTranslation) as IRobotObjOperTranslation;
end;

class function CoRobotObjOperScaling.Create: IRobotObjOperScaling;
begin
  Result := CreateComObject(CLASS_RobotObjOperScaling) as IRobotObjOperScaling;
end;

class function CoRobotObjOperScaling.CreateRemote(const MachineName: string): IRobotObjOperScaling;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjOperScaling) as IRobotObjOperScaling;
end;

class function CoRobotObjOperRotation.Create: IRobotObjOperRotation;
begin
  Result := CreateComObject(CLASS_RobotObjOperRotation) as IRobotObjOperRotation;
end;

class function CoRobotObjOperRotation.CreateRemote(const MachineName: string): IRobotObjOperRotation;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjOperRotation) as IRobotObjOperRotation;
end;

class function CoRobotObjOperMeshing.Create: IRobotObjOperMeshing;
begin
  Result := CreateComObject(CLASS_RobotObjOperMeshing) as IRobotObjOperMeshing;
end;

class function CoRobotObjOperMeshing.CreateRemote(const MachineName: string): IRobotObjOperMeshing;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjOperMeshing) as IRobotObjOperMeshing;
end;

class function CoRobotObjEdge.Create: IRobotObjEdge;
begin
  Result := CreateComObject(CLASS_RobotObjEdge) as IRobotObjEdge;
end;

class function CoRobotObjEdge.CreateRemote(const MachineName: string): IRobotObjEdge;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjEdge) as IRobotObjEdge;
end;

class function CoRobotObjAttributes.Create: IRobotObjAttributes;
begin
  Result := CreateComObject(CLASS_RobotObjAttributes) as IRobotObjAttributes;
end;

class function CoRobotObjAttributes.CreateRemote(const MachineName: string): IRobotObjAttributes;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjAttributes) as IRobotObjAttributes;
end;

class function CoRobotObjPart.Create: IRobotObjPart2;
begin
  Result := CreateComObject(CLASS_RobotObjPart) as IRobotObjPart2;
end;

class function CoRobotObjPart.CreateRemote(const MachineName: string): IRobotObjPart2;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjPart) as IRobotObjPart2;
end;

class function CoRobotObjPartMain.Create: IRobotObjPartMain;
begin
  Result := CreateComObject(CLASS_RobotObjPartMain) as IRobotObjPartMain;
end;

class function CoRobotObjPartMain.CreateRemote(const MachineName: string): IRobotObjPartMain;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjPartMain) as IRobotObjPartMain;
end;

class function CoRobotObjPartReference.Create: IRobotObjPartReference;
begin
  Result := CreateComObject(CLASS_RobotObjPartReference) as IRobotObjPartReference;
end;

class function CoRobotObjPartReference.CreateRemote(const MachineName: string): IRobotObjPartReference;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjPartReference) as IRobotObjPartReference;
end;

class function CoRobotObjObject.Create: IRobotObjObject;
begin
  Result := CreateComObject(CLASS_RobotObjObject) as IRobotObjObject;
end;

class function CoRobotObjObject.CreateRemote(const MachineName: string): IRobotObjObject;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjObject) as IRobotObjObject;
end;

class function CoRobotObjOperationCollection.Create: IRobotCollection;
begin
  Result := CreateComObject(CLASS_RobotObjOperationCollection) as IRobotCollection;
end;

class function CoRobotObjOperationCollection.CreateRemote(const MachineName: string): IRobotCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjOperationCollection) as IRobotCollection;
end;

class function CoRobotObjModificationCollection.Create: IRobotCollection;
begin
  Result := CreateComObject(CLASS_RobotObjModificationCollection) as IRobotCollection;
end;

class function CoRobotObjModificationCollection.CreateRemote(const MachineName: string): IRobotCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjModificationCollection) as IRobotCollection;
end;

class function CoRobotObjEdgeCollection.Create: IRobotCollection;
begin
  Result := CreateComObject(CLASS_RobotObjEdgeCollection) as IRobotCollection;
end;

class function CoRobotObjEdgeCollection.CreateRemote(const MachineName: string): IRobotCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjEdgeCollection) as IRobotCollection;
end;

class function CoRobotObjObjectServer.Create: IRobotObjObjectServer;
begin
  Result := CreateComObject(CLASS_RobotObjObjectServer) as IRobotObjObjectServer;
end;

class function CoRobotObjObjectServer.CreateRemote(const MachineName: string): IRobotObjObjectServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjObjectServer) as IRobotObjObjectServer;
end;

class function CoRobotObjLabelCol.Create: IRobotCollection;
begin
  Result := CreateComObject(CLASS_RobotObjLabelCol) as IRobotCollection;
end;

class function CoRobotObjLabelCol.CreateRemote(const MachineName: string): IRobotCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjLabelCol) as IRobotCollection;
end;

class function CoRobotLinearReleaseServer.Create: IRobotLinearReleaseServer;
begin
  Result := CreateComObject(CLASS_RobotLinearReleaseServer) as IRobotLinearReleaseServer;
end;

class function CoRobotLinearReleaseServer.CreateRemote(const MachineName: string): IRobotLinearReleaseServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotLinearReleaseServer) as IRobotLinearReleaseServer;
end;

class function CoRobotLinearReleaseDef.Create: IRobotLinearReleaseDef;
begin
  Result := CreateComObject(CLASS_RobotLinearReleaseDef) as IRobotLinearReleaseDef;
end;

class function CoRobotLinearReleaseDef.CreateRemote(const MachineName: string): IRobotLinearReleaseDef;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotLinearReleaseDef) as IRobotLinearReleaseDef;
end;

class function CoRobotObjObjectCollection.Create: IRobotCollection;
begin
  Result := CreateComObject(CLASS_RobotObjObjectCollection) as IRobotCollection;
end;

class function CoRobotObjObjectCollection.CreateRemote(const MachineName: string): IRobotCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjObjectCollection) as IRobotCollection;
end;

class function CoRobotSpectralAnalysisPointsCollection.Create: IRobotSpectralAnalysisPointsCollection;
begin
  Result := CreateComObject(CLASS_RobotSpectralAnalysisPointsCollection) as IRobotSpectralAnalysisPointsCollection;
end;

class function CoRobotSpectralAnalysisPointsCollection.CreateRemote(const MachineName: string): IRobotSpectralAnalysisPointsCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSpectralAnalysisPointsCollection) as IRobotSpectralAnalysisPointsCollection;
end;

class function CoRobotObjMesh.Create: IRobotObjMesh;
begin
  Result := CreateComObject(CLASS_RobotObjMesh) as IRobotObjMesh;
end;

class function CoRobotObjMesh.CreateRemote(const MachineName: string): IRobotObjMesh;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotObjMesh) as IRobotObjMesh;
end;

class function CoRobotFiniteElement.Create: IRobotFiniteElement;
begin
  Result := CreateComObject(CLASS_RobotFiniteElement) as IRobotFiniteElement;
end;

class function CoRobotFiniteElement.CreateRemote(const MachineName: string): IRobotFiniteElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFiniteElement) as IRobotFiniteElement;
end;

class function CoRobotFiniteElementNodes.Create: IRobotFiniteElementNodes;
begin
  Result := CreateComObject(CLASS_RobotFiniteElementNodes) as IRobotFiniteElementNodes;
end;

class function CoRobotFiniteElementNodes.CreateRemote(const MachineName: string): IRobotFiniteElementNodes;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFiniteElementNodes) as IRobotFiniteElementNodes;
end;

class function CoRobotFiniteElementServer.Create: IRobotFiniteElementServer;
begin
  Result := CreateComObject(CLASS_RobotFiniteElementServer) as IRobotFiniteElementServer;
end;

class function CoRobotFiniteElementServer.CreateRemote(const MachineName: string): IRobotFiniteElementServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFiniteElementServer) as IRobotFiniteElementServer;
end;

class function CoRobotFiniteElementCollection.Create: IRobotCollection;
begin
  Result := CreateComObject(CLASS_RobotFiniteElementCollection) as IRobotCollection;
end;

class function CoRobotFiniteElementCollection.CreateRemote(const MachineName: string): IRobotCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFiniteElementCollection) as IRobotCollection;
end;

class function CoRobotEmitter.Create: IRobotEmitter;
begin
  Result := CreateComObject(CLASS_RobotEmitter) as IRobotEmitter;
end;

class function CoRobotEmitter.CreateRemote(const MachineName: string): IRobotEmitter;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotEmitter) as IRobotEmitter;
end;

class function CoRobotComponentFactory.Create: IRobotComponentFactory;
begin
  Result := CreateComObject(CLASS_RobotComponentFactory) as IRobotComponentFactory;
end;

class function CoRobotComponentFactory.CreateRemote(const MachineName: string): IRobotComponentFactory;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotComponentFactory) as IRobotComponentFactory;
end;

class function CoRobotFeResultParams.Create: IRobotFeResultParams;
begin
  Result := CreateComObject(CLASS_RobotFeResultParams) as IRobotFeResultParams;
end;

class function CoRobotFeResultParams.CreateRemote(const MachineName: string): IRobotFeResultParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFeResultParams) as IRobotFeResultParams;
end;

class function CoRobotFeResultDetailed.Create: IRobotFeResultDetailed;
begin
  Result := CreateComObject(CLASS_RobotFeResultDetailed) as IRobotFeResultDetailed;
end;

class function CoRobotFeResultDetailed.CreateRemote(const MachineName: string): IRobotFeResultDetailed;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFeResultDetailed) as IRobotFeResultDetailed;
end;

class function CoRobotFeResultServer.Create: IRobotFeResultServer;
begin
  Result := CreateComObject(CLASS_RobotFeResultServer) as IRobotFeResultServer;
end;

class function CoRobotFeResultServer.CreateRemote(const MachineName: string): IRobotFeResultServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFeResultServer) as IRobotFeResultServer;
end;

class function CoRobotFeResultPrincipal.Create: IRobotFeResultPrincipal;
begin
  Result := CreateComObject(CLASS_RobotFeResultPrincipal) as IRobotFeResultPrincipal;
end;

class function CoRobotFeResultPrincipal.CreateRemote(const MachineName: string): IRobotFeResultPrincipal;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFeResultPrincipal) as IRobotFeResultPrincipal;
end;

class function CoRobotFeResultComplex.Create: IRobotFeResultComplex;
begin
  Result := CreateComObject(CLASS_RobotFeResultComplex) as IRobotFeResultComplex;
end;

class function CoRobotFeResultComplex.CreateRemote(const MachineName: string): IRobotFeResultComplex;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFeResultComplex) as IRobotFeResultComplex;
end;

class function CoRobotFeResultReinforcement.Create: IRobotFeResultReinforcement;
begin
  Result := CreateComObject(CLASS_RobotFeResultReinforcement) as IRobotFeResultReinforcement;
end;

class function CoRobotFeResultReinforcement.CreateRemote(const MachineName: string): IRobotFeResultReinforcement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFeResultReinforcement) as IRobotFeResultReinforcement;
end;

class function CoRobotFeResultReduced.Create: IRobotFeResultReduced;
begin
  Result := CreateComObject(CLASS_RobotFeResultReduced) as IRobotFeResultReduced;
end;

class function CoRobotFeResultReduced.CreateRemote(const MachineName: string): IRobotFeResultReduced;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFeResultReduced) as IRobotFeResultReduced;
end;

class function CoRobotPanelCutMngr.Create: IRobotPanelCutMngr;
begin
  Result := CreateComObject(CLASS_RobotPanelCutMngr) as IRobotPanelCutMngr;
end;

class function CoRobotPanelCutMngr.CreateRemote(const MachineName: string): IRobotPanelCutMngr;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotPanelCutMngr) as IRobotPanelCutMngr;
end;

class function CoRobotPanelCut.Create: IRobotPanelCut;
begin
  Result := CreateComObject(CLASS_RobotPanelCut) as IRobotPanelCut;
end;

class function CoRobotPanelCut.CreateRemote(const MachineName: string): IRobotPanelCut;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotPanelCut) as IRobotPanelCut;
end;

class function CoRobotFeExtremeParams.Create: IRobotFeExtremeParams;
begin
  Result := CreateComObject(CLASS_RobotFeExtremeParams) as IRobotFeExtremeParams;
end;

class function CoRobotFeExtremeParams.CreateRemote(const MachineName: string): IRobotFeExtremeParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFeExtremeParams) as IRobotFeExtremeParams;
end;

class function CoRobotFeExtremeValue.Create: IRobotFeExtremeValue;
begin
  Result := CreateComObject(CLASS_RobotFeExtremeValue) as IRobotFeExtremeValue;
end;

class function CoRobotFeExtremeValue.CreateRemote(const MachineName: string): IRobotFeExtremeValue;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFeExtremeValue) as IRobotFeExtremeValue;
end;

class function CoRobotFeMultiResultType.Create: IRobotFeMultiResultType;
begin
  Result := CreateComObject(CLASS_RobotFeMultiResultType) as IRobotFeMultiResultType;
end;

class function CoRobotFeMultiResultType.CreateRemote(const MachineName: string): IRobotFeMultiResultType;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFeMultiResultType) as IRobotFeMultiResultType;
end;

class function CoRobotFeMultiExtremeValue.Create: IRobotFeMultiExtremeValue;
begin
  Result := CreateComObject(CLASS_RobotFeMultiExtremeValue) as IRobotFeMultiExtremeValue;
end;

class function CoRobotFeMultiExtremeValue.CreateRemote(const MachineName: string): IRobotFeMultiExtremeValue;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFeMultiExtremeValue) as IRobotFeMultiExtremeValue;
end;

class function CoRobotMeshMethod.Create: IRobotMeshMethod;
begin
  Result := CreateComObject(CLASS_RobotMeshMethod) as IRobotMeshMethod;
end;

class function CoRobotMeshMethod.CreateRemote(const MachineName: string): IRobotMeshMethod;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotMeshMethod) as IRobotMeshMethod;
end;

class function CoRobotMeshGeneration.Create: IRobotMeshGeneration;
begin
  Result := CreateComObject(CLASS_RobotMeshGeneration) as IRobotMeshGeneration;
end;

class function CoRobotMeshGeneration.CreateRemote(const MachineName: string): IRobotMeshGeneration;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotMeshGeneration) as IRobotMeshGeneration;
end;

class function CoRobotMeshCoonsParams.Create: IRobotMeshCoonsParams;
begin
  Result := CreateComObject(CLASS_RobotMeshCoonsParams) as IRobotMeshCoonsParams;
end;

class function CoRobotMeshCoonsParams.CreateRemote(const MachineName: string): IRobotMeshCoonsParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotMeshCoonsParams) as IRobotMeshCoonsParams;
end;

class function CoRobotMeshSurfaceFiniteElems.Create: IRobotMeshSurfaceFiniteElems;
begin
  Result := CreateComObject(CLASS_RobotMeshSurfaceFiniteElems) as IRobotMeshSurfaceFiniteElems;
end;

class function CoRobotMeshSurfaceFiniteElems.CreateRemote(const MachineName: string): IRobotMeshSurfaceFiniteElems;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotMeshSurfaceFiniteElems) as IRobotMeshSurfaceFiniteElems;
end;

class function CoRobotMeshDelaunayParams.Create: IRobotMeshDelaunayParams;
begin
  Result := CreateComObject(CLASS_RobotMeshDelaunayParams) as IRobotMeshDelaunayParams;
end;

class function CoRobotMeshDelaunayParams.CreateRemote(const MachineName: string): IRobotMeshDelaunayParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotMeshDelaunayParams) as IRobotMeshDelaunayParams;
end;

class function CoRobotMeshVolumeParams.Create: IRobotMeshVolumeParams;
begin
  Result := CreateComObject(CLASS_RobotMeshVolumeParams) as IRobotMeshVolumeParams;
end;

class function CoRobotMeshVolumeParams.CreateRemote(const MachineName: string): IRobotMeshVolumeParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotMeshVolumeParams) as IRobotMeshVolumeParams;
end;

class function CoRobotMeshSurfaceParams.Create: IRobotMeshSurfaceParams;
begin
  Result := CreateComObject(CLASS_RobotMeshSurfaceParams) as IRobotMeshSurfaceParams;
end;

class function CoRobotMeshSurfaceParams.CreateRemote(const MachineName: string): IRobotMeshSurfaceParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotMeshSurfaceParams) as IRobotMeshSurfaceParams;
end;

class function CoRobotMeshParams.Create: IRobotMeshParams;
begin
  Result := CreateComObject(CLASS_RobotMeshParams) as IRobotMeshParams;
end;

class function CoRobotMeshParams.CreateRemote(const MachineName: string): IRobotMeshParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotMeshParams) as IRobotMeshParams;
end;

class function CoRobotNonlinearHingeModelServer.Create: IRobotNonlinearHingeModelServer;
begin
  Result := CreateComObject(CLASS_RobotNonlinearHingeModelServer) as IRobotNonlinearHingeModelServer;
end;

class function CoRobotNonlinearHingeModelServer.CreateRemote(const MachineName: string): IRobotNonlinearHingeModelServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNonlinearHingeModelServer) as IRobotNonlinearHingeModelServer;
end;

class function CoRobotNonlinearHingeModel.Create: IRobotNonlinearHingeModel;
begin
  Result := CreateComObject(CLASS_RobotNonlinearHingeModel) as IRobotNonlinearHingeModel;
end;

class function CoRobotNonlinearHingeModel.CreateRemote(const MachineName: string): IRobotNonlinearHingeModel;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNonlinearHingeModel) as IRobotNonlinearHingeModel;
end;

class function CoRobotNonlinearHingeModelAxisParams.Create: IRobotNonlinearHingeModelAxisParams;
begin
  Result := CreateComObject(CLASS_RobotNonlinearHingeModelAxisParams) as IRobotNonlinearHingeModelAxisParams;
end;

class function CoRobotNonlinearHingeModelAxisParams.CreateRemote(const MachineName: string): IRobotNonlinearHingeModelAxisParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNonlinearHingeModelAxisParams) as IRobotNonlinearHingeModelAxisParams;
end;

class function CoRobotNonlinearHingeModelPoints.Create: IRobotNonlinearHingeModelPoints;
begin
  Result := CreateComObject(CLASS_RobotNonlinearHingeModelPoints) as IRobotNonlinearHingeModelPoints;
end;

class function CoRobotNonlinearHingeModelPoints.CreateRemote(const MachineName: string): IRobotNonlinearHingeModelPoints;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNonlinearHingeModelPoints) as IRobotNonlinearHingeModelPoints;
end;

class function CoRobotNonlinearHingeData.Create: IRobotNonlinearHingeData;
begin
  Result := CreateComObject(CLASS_RobotNonlinearHingeData) as IRobotNonlinearHingeData;
end;

class function CoRobotNonlinearHingeData.CreateRemote(const MachineName: string): IRobotNonlinearHingeData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNonlinearHingeData) as IRobotNonlinearHingeData;
end;

class function CoRobotNonlinearHingeDef.Create: IRobotNonlinearHingeDef;
begin
  Result := CreateComObject(CLASS_RobotNonlinearHingeDef) as IRobotNonlinearHingeDef;
end;

class function CoRobotNonlinearHingeDef.CreateRemote(const MachineName: string): IRobotNonlinearHingeDef;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNonlinearHingeDef) as IRobotNonlinearHingeDef;
end;

class function CoRobotNonlinearHingeServer.Create: IRobotNonlinearHingeServer;
begin
  Result := CreateComObject(CLASS_RobotNonlinearHingeServer) as IRobotNonlinearHingeServer;
end;

class function CoRobotNonlinearHingeServer.CreateRemote(const MachineName: string): IRobotNonlinearHingeServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotNonlinearHingeServer) as IRobotNonlinearHingeServer;
end;

class function CoRobotMaterialElasticModel.Create: IRobotMaterialElasticModel;
begin
  Result := CreateComObject(CLASS_RobotMaterialElasticModel) as IRobotMaterialElasticModel;
end;

class function CoRobotMaterialElasticModel.CreateRemote(const MachineName: string): IRobotMaterialElasticModel;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotMaterialElasticModel) as IRobotMaterialElasticModel;
end;

class function CoRobotBarSectionElasticParams.Create: IRobotBarSectionElasticParams;
begin
  Result := CreateComObject(CLASS_RobotBarSectionElasticParams) as IRobotBarSectionElasticParams;
end;

class function CoRobotBarSectionElasticParams.CreateRemote(const MachineName: string): IRobotBarSectionElasticParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBarSectionElasticParams) as IRobotBarSectionElasticParams;
end;

class function CoRobotCladdingData.Create: IRobotCladdingData;
begin
  Result := CreateComObject(CLASS_RobotCladdingData) as IRobotCladdingData;
end;

class function CoRobotCladdingData.CreateRemote(const MachineName: string): IRobotCladdingData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCladdingData) as IRobotCladdingData;
end;

class function CoRobotPanelCalcModelData.Create: IRobotPanelCalcModelData;
begin
  Result := CreateComObject(CLASS_RobotPanelCalcModelData) as IRobotPanelCalcModelData;
end;

class function CoRobotPanelCalcModelData.CreateRemote(const MachineName: string): IRobotPanelCalcModelData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotPanelCalcModelData) as IRobotPanelCalcModelData;
end;

class function CoRobotUnitData.Create: IRobotUnitData;
begin
  Result := CreateComObject(CLASS_RobotUnitData) as IRobotUnitData;
end;

class function CoRobotUnitData.CreateRemote(const MachineName: string): IRobotUnitData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotUnitData) as IRobotUnitData;
end;

class function CoRobotUnitMngr.Create: IRobotUnitMngr;
begin
  Result := CreateComObject(CLASS_RobotUnitMngr) as IRobotUnitMngr;
end;

class function CoRobotUnitMngr.CreateRemote(const MachineName: string): IRobotUnitMngr;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotUnitMngr) as IRobotUnitMngr;
end;

class function CoRobotUnitComplexData.Create: IRobotUnitComplexData;
begin
  Result := CreateComObject(CLASS_RobotUnitComplexData) as IRobotUnitComplexData;
end;

class function CoRobotUnitComplexData.CreateRemote(const MachineName: string): IRobotUnitComplexData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotUnitComplexData) as IRobotUnitComplexData;
end;

class function CoRobotUnitEditionServer.Create: IRobotUnitEditionServer;
begin
  Result := CreateComObject(CLASS_RobotUnitEditionServer) as IRobotUnitEditionServer;
end;

class function CoRobotUnitEditionServer.CreateRemote(const MachineName: string): IRobotUnitEditionServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotUnitEditionServer) as IRobotUnitEditionServer;
end;

class function CoRobotUnitEditionData.Create: IRobotUnitEditionData;
begin
  Result := CreateComObject(CLASS_RobotUnitEditionData) as IRobotUnitEditionData;
end;

class function CoRobotUnitEditionData.CreateRemote(const MachineName: string): IRobotUnitEditionData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotUnitEditionData) as IRobotUnitEditionData;
end;

class function CoRobotStructureGeoAnalyser.Create: IRobotStructureGeoAnalyser;
begin
  Result := CreateComObject(CLASS_RobotStructureGeoAnalyser) as IRobotStructureGeoAnalyser;
end;

class function CoRobotStructureGeoAnalyser.CreateRemote(const MachineName: string): IRobotStructureGeoAnalyser;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotStructureGeoAnalyser) as IRobotStructureGeoAnalyser;
end;

class function CoRobotParamDef.Create: IRobotParamDef;
begin
  Result := CreateComObject(CLASS_RobotParamDef) as IRobotParamDef;
end;

class function CoRobotParamDef.CreateRemote(const MachineName: string): IRobotParamDef;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotParamDef) as IRobotParamDef;
end;

class function CoRobotParamSchemaDef.Create: IRobotParamSchemaDef;
begin
  Result := CreateComObject(CLASS_RobotParamSchemaDef) as IRobotParamSchemaDef;
end;

class function CoRobotParamSchemaDef.CreateRemote(const MachineName: string): IRobotParamSchemaDef;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotParamSchemaDef) as IRobotParamSchemaDef;
end;

class function CoRobotParamSchema.Create: IRobotParamSchema;
begin
  Result := CreateComObject(CLASS_RobotParamSchema) as IRobotParamSchema;
end;

class function CoRobotParamSchema.CreateRemote(const MachineName: string): IRobotParamSchema;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotParamSchema) as IRobotParamSchema;
end;

class function CoRobotParamSchemaMngr.Create: IRobotParamSchemaMngr;
begin
  Result := CreateComObject(CLASS_RobotParamSchemaMngr) as IRobotParamSchemaMngr;
end;

class function CoRobotParamSchemaMngr.CreateRemote(const MachineName: string): IRobotParamSchemaMngr;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotParamSchemaMngr) as IRobotParamSchemaMngr;
end;

class function CoRobotParamServer.Create: IRobotParamServer;
begin
  Result := CreateComObject(CLASS_RobotParamServer) as IRobotParamServer;
end;

class function CoRobotParamServer.CreateRemote(const MachineName: string): IRobotParamServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotParamServer) as IRobotParamServer;
end;

class function CoRobotProjectComponentCollection.Create: IRobotCollection;
begin
  Result := CreateComObject(CLASS_RobotProjectComponentCollection) as IRobotCollection;
end;

class function CoRobotProjectComponentCollection.CreateRemote(const MachineName: string): IRobotCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotProjectComponentCollection) as IRobotCollection;
end;

class function CoRobotProjectComponent.Create: IRobotProjectComponent;
begin
  Result := CreateComObject(CLASS_RobotProjectComponent) as IRobotProjectComponent;
end;

class function CoRobotProjectComponent.CreateRemote(const MachineName: string): IRobotProjectComponent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotProjectComponent) as IRobotProjectComponent;
end;

class function CoRobotProjectComponentMngr.Create: IRobotProjectComponentMngr;
begin
  Result := CreateComObject(CLASS_RobotProjectComponentMngr) as IRobotProjectComponentMngr;
end;

class function CoRobotProjectComponentMngr.CreateRemote(const MachineName: string): IRobotProjectComponentMngr;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotProjectComponentMngr) as IRobotProjectComponentMngr;
end;

class function CoRobotFileInsertParams.Create: IRobotFileInsertParams;
begin
  Result := CreateComObject(CLASS_RobotFileInsertParams) as IRobotFileInsertParams;
end;

class function CoRobotFileInsertParams.CreateRemote(const MachineName: string): IRobotFileInsertParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotFileInsertParams) as IRobotFileInsertParams;
end;

class function CoRobotProject.Create: IRobotProject;
begin
  Result := CreateComObject(CLASS_RobotProject) as IRobotProject;
end;

class function CoRobotProject.CreateRemote(const MachineName: string): IRobotProject;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotProject) as IRobotProject;
end;

class function CoRobotSTRParams.Create: IRobotSTRParams;
begin
  Result := CreateComObject(CLASS_RobotSTRParams) as IRobotSTRParams;
end;

class function CoRobotSTRParams.CreateRemote(const MachineName: string): IRobotSTRParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSTRParams) as IRobotSTRParams;
end;

class function CoRobotSTRParameter.Create: IRobotSTRParameter;
begin
  Result := CreateComObject(CLASS_RobotSTRParameter) as IRobotSTRParameter;
end;

class function CoRobotSTRParameter.CreateRemote(const MachineName: string): IRobotSTRParameter;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSTRParameter) as IRobotSTRParameter;
end;

class function CoRobotStructuralAxisSequenceList.Create: IRobotStructuralAxisSequenceList;
begin
  Result := CreateComObject(CLASS_RobotStructuralAxisSequenceList) as IRobotStructuralAxisSequenceList;
end;

class function CoRobotStructuralAxisSequenceList.CreateRemote(const MachineName: string): IRobotStructuralAxisSequenceList;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotStructuralAxisSequenceList) as IRobotStructuralAxisSequenceList;
end;

class function CoRobotStructuralAxisGridCartesian.Create: IRobotStructuralAxisGridCartesian;
begin
  Result := CreateComObject(CLASS_RobotStructuralAxisGridCartesian) as IRobotStructuralAxisGridCartesian;
end;

class function CoRobotStructuralAxisGridCartesian.CreateRemote(const MachineName: string): IRobotStructuralAxisGridCartesian;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotStructuralAxisGridCartesian) as IRobotStructuralAxisGridCartesian;
end;

class function CoRobotStructuralAxisGridMngr.Create: IRobotStructuralAxisGridMngr;
begin
  Result := CreateComObject(CLASS_RobotStructuralAxisGridMngr) as IRobotStructuralAxisGridMngr;
end;

class function CoRobotStructuralAxisGridMngr.CreateRemote(const MachineName: string): IRobotStructuralAxisGridMngr;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotStructuralAxisGridMngr) as IRobotStructuralAxisGridMngr;
end;

class function CoRobotBackgroundLayers.Create: IRobotBackgroundLayers;
begin
  Result := CreateComObject(CLASS_RobotBackgroundLayers) as IRobotBackgroundLayers;
end;

class function CoRobotBackgroundLayers.CreateRemote(const MachineName: string): IRobotBackgroundLayers;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBackgroundLayers) as IRobotBackgroundLayers;
end;

class function CoRobotBackgroundVisibilityRange.Create: IRobotBackgroundVisibilityRange;
begin
  Result := CreateComObject(CLASS_RobotBackgroundVisibilityRange) as IRobotBackgroundVisibilityRange;
end;

class function CoRobotBackgroundVisibilityRange.CreateRemote(const MachineName: string): IRobotBackgroundVisibilityRange;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBackgroundVisibilityRange) as IRobotBackgroundVisibilityRange;
end;

class function CoRobotBackgroundInsertParams.Create: IRobotBackgroundInsertParams;
begin
  Result := CreateComObject(CLASS_RobotBackgroundInsertParams) as IRobotBackgroundInsertParams;
end;

class function CoRobotBackgroundInsertParams.CreateRemote(const MachineName: string): IRobotBackgroundInsertParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBackgroundInsertParams) as IRobotBackgroundInsertParams;
end;

class function CoRobotBackground.Create: IRobotBackground;
begin
  Result := CreateComObject(CLASS_RobotBackground) as IRobotBackground;
end;

class function CoRobotBackground.CreateRemote(const MachineName: string): IRobotBackground;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBackground) as IRobotBackground;
end;

class function CoRobotBackgroundServer.Create: IRobotBackgroundServer;
begin
  Result := CreateComObject(CLASS_RobotBackgroundServer) as IRobotBackgroundServer;
end;

class function CoRobotBackgroundServer.CreateRemote(const MachineName: string): IRobotBackgroundServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotBackgroundServer) as IRobotBackgroundServer;
end;

class function CoRobotSnowWindParams.Create: IRobotSnowWindParams;
begin
  Result := CreateComObject(CLASS_RobotSnowWindParams) as IRobotSnowWindParams;
end;

class function CoRobotSnowWindParams.CreateRemote(const MachineName: string): IRobotSnowWindParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSnowWindParams) as IRobotSnowWindParams;
end;

class function CoRobotSnowWindEngine.Create: IRobotSnowWindEngine;
begin
  Result := CreateComObject(CLASS_RobotSnowWindEngine) as IRobotSnowWindEngine;
end;

class function CoRobotSnowWindEngine.CreateRemote(const MachineName: string): IRobotSnowWindEngine;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSnowWindEngine) as IRobotSnowWindEngine;
end;

class function CoRobotSWCodePLParams.Create: IRobotSWCodePLParams;
begin
  Result := CreateComObject(CLASS_RobotSWCodePLParams) as IRobotSWCodePLParams;
end;

class function CoRobotSWCodePLParams.CreateRemote(const MachineName: string): IRobotSWCodePLParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSWCodePLParams) as IRobotSWCodePLParams;
end;

class function CoRobotSWCodeFRParams.Create: IRobotSWCodeFRParams;
begin
  Result := CreateComObject(CLASS_RobotSWCodeFRParams) as IRobotSWCodeFRParams;
end;

class function CoRobotSWCodeFRParams.CreateRemote(const MachineName: string): IRobotSWCodeFRParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSWCodeFRParams) as IRobotSWCodeFRParams;
end;

class function CoRobotSWCodeECParams.Create: IRobotSWCodeECParams;
begin
  Result := CreateComObject(CLASS_RobotSWCodeECParams) as IRobotSWCodeECParams;
end;

class function CoRobotSWCodeECParams.CreateRemote(const MachineName: string): IRobotSWCodeECParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSWCodeECParams) as IRobotSWCodeECParams;
end;

class function CoRobotSWStruct3DElement.Create: IRobotSWStruct3DElement;
begin
  Result := CreateComObject(CLASS_RobotSWStruct3DElement) as IRobotSWStruct3DElement;
end;

class function CoRobotSWStruct3DElement.CreateRemote(const MachineName: string): IRobotSWStruct3DElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSWStruct3DElement) as IRobotSWStruct3DElement;
end;

class function CoRobotSWStruct3DFrame.Create: IRobotSWStruct3DFrame;
begin
  Result := CreateComObject(CLASS_RobotSWStruct3DFrame) as IRobotSWStruct3DFrame;
end;

class function CoRobotSWStruct3DFrame.CreateRemote(const MachineName: string): IRobotSWStruct3DFrame;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSWStruct3DFrame) as IRobotSWStruct3DFrame;
end;

class function CoRobotSWStruct3D.Create: IRobotSWStruct3D;
begin
  Result := CreateComObject(CLASS_RobotSWStruct3D) as IRobotSWStruct3D;
end;

class function CoRobotSWStruct3D.CreateRemote(const MachineName: string): IRobotSWStruct3D;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSWStruct3D) as IRobotSWStruct3D;
end;

class function CoRobotSWStruct3DPurlinGenParams.Create: IRobotSWStruct3DPurlinGenParams;
begin
  Result := CreateComObject(CLASS_RobotSWStruct3DPurlinGenParams) as IRobotSWStruct3DPurlinGenParams;
end;

class function CoRobotSWStruct3DPurlinGenParams.CreateRemote(const MachineName: string): IRobotSWStruct3DPurlinGenParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSWStruct3DPurlinGenParams) as IRobotSWStruct3DPurlinGenParams;
end;

class function CoRobotSWStruct3DGenParams.Create: IRobotSWStruct3DGenParams;
begin
  Result := CreateComObject(CLASS_RobotSWStruct3DGenParams) as IRobotSWStruct3DGenParams;
end;

class function CoRobotSWStruct3DGenParams.CreateRemote(const MachineName: string): IRobotSWStruct3DGenParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotSWStruct3DGenParams) as IRobotSWStruct3DGenParams;
end;

class function CoRobotViewMngr.Create: IRobotViewMngr;
begin
  Result := CreateComObject(CLASS_RobotViewMngr) as IRobotViewMngr;
end;

class function CoRobotViewMngr.CreateRemote(const MachineName: string): IRobotViewMngr;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotViewMngr) as IRobotViewMngr;
end;

class function CoRobotTable.Create: IRobotTable;
begin
  Result := CreateComObject(CLASS_RobotTable) as IRobotTable;
end;

class function CoRobotTable.CreateRemote(const MachineName: string): IRobotTable;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotTable) as IRobotTable;
end;

class function CoRobotTableFrame.Create: IRobotTableFrame;
begin
  Result := CreateComObject(CLASS_RobotTableFrame) as IRobotTableFrame;
end;

class function CoRobotTableFrame.CreateRemote(const MachineName: string): IRobotTableFrame;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotTableFrame) as IRobotTableFrame;
end;

class function CoRobotTableConfig.Create: IRobotTableConfig;
begin
  Result := CreateComObject(CLASS_RobotTableConfig) as IRobotTableConfig;
end;

class function CoRobotTableConfig.CreateRemote(const MachineName: string): IRobotTableConfig;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotTableConfig) as IRobotTableConfig;
end;

class function CoRobotView.Create: IRobotView2;
begin
  Result := CreateComObject(CLASS_RobotView) as IRobotView2;
end;

class function CoRobotView.CreateRemote(const MachineName: string): IRobotView2;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotView) as IRobotView2;
end;

class function CoRobotViewDetailedAnalysis.Create: IRobotViewDetailedAnalysis;
begin
  Result := CreateComObject(CLASS_RobotViewDetailedAnalysis) as IRobotViewDetailedAnalysis;
end;

class function CoRobotViewDetailedAnalysis.CreateRemote(const MachineName: string): IRobotViewDetailedAnalysis;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotViewDetailedAnalysis) as IRobotViewDetailedAnalysis;
end;

class function CoRobotViewDisplayParams.Create: IRobotViewDisplayParams;
begin
  Result := CreateComObject(CLASS_RobotViewDisplayParams) as IRobotViewDisplayParams;
end;

class function CoRobotViewDisplayParams.CreateRemote(const MachineName: string): IRobotViewDisplayParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotViewDisplayParams) as IRobotViewDisplayParams;
end;

class function CoRobotViewDiagramParams.Create: IRobotViewDiagramParams;
begin
  Result := CreateComObject(CLASS_RobotViewDiagramParams) as IRobotViewDiagramParams;
end;

class function CoRobotViewDiagramParams.CreateRemote(const MachineName: string): IRobotViewDiagramParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotViewDiagramParams) as IRobotViewDiagramParams;
end;

class function CoRobotViewDiagrams.Create: IRobotViewDiagrams;
begin
  Result := CreateComObject(CLASS_RobotViewDiagrams) as IRobotViewDiagrams;
end;

class function CoRobotViewDiagrams.CreateRemote(const MachineName: string): IRobotViewDiagrams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotViewDiagrams) as IRobotViewDiagrams;
end;

class function CoRobotViewBarMaps.Create: IRobotViewBarMaps;
begin
  Result := CreateComObject(CLASS_RobotViewBarMaps) as IRobotViewBarMaps;
end;

class function CoRobotViewBarMaps.CreateRemote(const MachineName: string): IRobotViewBarMaps;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotViewBarMaps) as IRobotViewBarMaps;
end;

class function CoRobotViewFeMaps.Create: IRobotViewFeMaps;
begin
  Result := CreateComObject(CLASS_RobotViewFeMaps) as IRobotViewFeMaps;
end;

class function CoRobotViewFeMaps.CreateRemote(const MachineName: string): IRobotViewFeMaps;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotViewFeMaps) as IRobotViewFeMaps;
end;

class function CoRobotViewBarMapParams.Create: IRobotViewBarMapParams;
begin
  Result := CreateComObject(CLASS_RobotViewBarMapParams) as IRobotViewBarMapParams;
end;

class function CoRobotViewBarMapParams.CreateRemote(const MachineName: string): IRobotViewBarMapParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotViewBarMapParams) as IRobotViewBarMapParams;
end;

class function CoRobotViewDetailedAnalysisParams.Create: IRobotViewDetailedAnalysisParams;
begin
  Result := CreateComObject(CLASS_RobotViewDetailedAnalysisParams) as IRobotViewDetailedAnalysisParams;
end;

class function CoRobotViewDetailedAnalysisParams.CreateRemote(const MachineName: string): IRobotViewDetailedAnalysisParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotViewDetailedAnalysisParams) as IRobotViewDetailedAnalysisParams;
end;

class function CoRobotViewFeMapParams.Create: IRobotViewFeMapParams;
begin
  Result := CreateComObject(CLASS_RobotViewFeMapParams) as IRobotViewFeMapParams;
end;

class function CoRobotViewFeMapParams.CreateRemote(const MachineName: string): IRobotViewFeMapParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotViewFeMapParams) as IRobotViewFeMapParams;
end;

class function CoRobotViewPanelCuts.Create: IRobotViewPanelCuts;
begin
  Result := CreateComObject(CLASS_RobotViewPanelCuts) as IRobotViewPanelCuts;
end;

class function CoRobotViewPanelCuts.CreateRemote(const MachineName: string): IRobotViewPanelCuts;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotViewPanelCuts) as IRobotViewPanelCuts;
end;

class function CoRobotViewPanelCutParams.Create: IRobotViewPanelCutParams;
begin
  Result := CreateComObject(CLASS_RobotViewPanelCutParams) as IRobotViewPanelCutParams;
end;

class function CoRobotViewPanelCutParams.CreateRemote(const MachineName: string): IRobotViewPanelCutParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotViewPanelCutParams) as IRobotViewPanelCutParams;
end;

class function CoRobotViewGlobalAnalysisParams.Create: IRobotViewGlobalAnalysisParams;
begin
  Result := CreateComObject(CLASS_RobotViewGlobalAnalysisParams) as IRobotViewGlobalAnalysisParams;
end;

class function CoRobotViewGlobalAnalysisParams.CreateRemote(const MachineName: string): IRobotViewGlobalAnalysisParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotViewGlobalAnalysisParams) as IRobotViewGlobalAnalysisParams;
end;

class function CoRobotViewGlobalAnalysisResultsParams.Create: IRobotViewGlobalAnalysisResultsParams;
begin
  Result := CreateComObject(CLASS_RobotViewGlobalAnalysisResultsParams) as IRobotViewGlobalAnalysisResultsParams;
end;

class function CoRobotViewGlobalAnalysisResultsParams.CreateRemote(const MachineName: string): IRobotViewGlobalAnalysisResultsParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotViewGlobalAnalysisResultsParams) as IRobotViewGlobalAnalysisResultsParams;
end;

class function CoRobotViewGlobalAnalysis.Create: IRobotViewGlobalAnalysis;
begin
  Result := CreateComObject(CLASS_RobotViewGlobalAnalysis) as IRobotViewGlobalAnalysis;
end;

class function CoRobotViewGlobalAnalysis.CreateRemote(const MachineName: string): IRobotViewGlobalAnalysis;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotViewGlobalAnalysis) as IRobotViewGlobalAnalysis;
end;

class function CoRobotViewInfluenceLines.Create: IRobotViewInfluenceLines;
begin
  Result := CreateComObject(CLASS_RobotViewInfluenceLines) as IRobotViewInfluenceLines;
end;

class function CoRobotViewInfluenceLines.CreateRemote(const MachineName: string): IRobotViewInfluenceLines;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotViewInfluenceLines) as IRobotViewInfluenceLines;
end;

class function CoRobotViewInfluenceLinesParams.Create: IRobotViewInfluenceLinesParams;
begin
  Result := CreateComObject(CLASS_RobotViewInfluenceLinesParams) as IRobotViewInfluenceLinesParams;
end;

class function CoRobotViewInfluenceLinesParams.CreateRemote(const MachineName: string): IRobotViewInfluenceLinesParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotViewInfluenceLinesParams) as IRobotViewInfluenceLinesParams;
end;

class function CoRobotViewScreenCaptureParams.Create: IRobotViewScreenCaptureParams;
begin
  Result := CreateComObject(CLASS_RobotViewScreenCaptureParams) as IRobotViewScreenCaptureParams;
end;

class function CoRobotViewScreenCaptureParams.CreateRemote(const MachineName: string): IRobotViewScreenCaptureParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotViewScreenCaptureParams) as IRobotViewScreenCaptureParams;
end;

class function CoRobotTableScreenCaptureParams.Create: IRobotTableScreenCaptureParams;
begin
  Result := CreateComObject(CLASS_RobotTableScreenCaptureParams) as IRobotTableScreenCaptureParams;
end;

class function CoRobotTableScreenCaptureParams.CreateRemote(const MachineName: string): IRobotTableScreenCaptureParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotTableScreenCaptureParams) as IRobotTableScreenCaptureParams;
end;

class function CoRobotPrintable.Create: IRobotPrintable;
begin
  Result := CreateComObject(CLASS_RobotPrintable) as IRobotPrintable;
end;

class function CoRobotPrintable.CreateRemote(const MachineName: string): IRobotPrintable;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotPrintable) as IRobotPrintable;
end;

class function CoRobotPrintEngine.Create: IRobotPrintEngine;
begin
  Result := CreateComObject(CLASS_RobotPrintEngine) as IRobotPrintEngine;
end;

class function CoRobotPrintEngine.CreateRemote(const MachineName: string): IRobotPrintEngine;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotPrintEngine) as IRobotPrintEngine;
end;

class function CoRobotRtfView.Create: IRobotRtfView;
begin
  Result := CreateComObject(CLASS_RobotRtfView) as IRobotRtfView;
end;

class function CoRobotRtfView.CreateRemote(const MachineName: string): IRobotRtfView;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotRtfView) as IRobotRtfView;
end;

class function CoRobotVariableMngr.Create: IRobotVariableMngr;
begin
  Result := CreateComObject(CLASS_RobotVariableMngr) as IRobotVariableMngr;
end;

class function CoRobotVariableMngr.CreateRemote(const MachineName: string): IRobotVariableMngr;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotVariableMngr) as IRobotVariableMngr;
end;

class function CoRobotPageSetup.Create: IRobotPageSetup;
begin
  Result := CreateComObject(CLASS_RobotPageSetup) as IRobotPageSetup;
end;

class function CoRobotPageSetup.CreateRemote(const MachineName: string): IRobotPageSetup;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotPageSetup) as IRobotPageSetup;
end;

class function CoRobotReportTemplateMngr.Create: IRobotReportTemplateMngr;
begin
  Result := CreateComObject(CLASS_RobotReportTemplateMngr) as IRobotReportTemplateMngr;
end;

class function CoRobotReportTemplateMngr.CreateRemote(const MachineName: string): IRobotReportTemplateMngr;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotReportTemplateMngr) as IRobotReportTemplateMngr;
end;

class function CoRobotScreenCaptureMngr.Create: IRobotScreenCaptureMngr;
begin
  Result := CreateComObject(CLASS_RobotScreenCaptureMngr) as IRobotScreenCaptureMngr;
end;

class function CoRobotScreenCaptureMngr.CreateRemote(const MachineName: string): IRobotScreenCaptureMngr;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotScreenCaptureMngr) as IRobotScreenCaptureMngr;
end;

class function CoRobotReportStdElementRtf.Create: IRobotReportStdElementRtf;
begin
  Result := CreateComObject(CLASS_RobotReportStdElementRtf) as IRobotReportStdElementRtf;
end;

class function CoRobotReportStdElementRtf.CreateRemote(const MachineName: string): IRobotReportStdElementRtf;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotReportStdElementRtf) as IRobotReportStdElementRtf;
end;

class function CoRobotReportItem.Create: IRobotReportItem;
begin
  Result := CreateComObject(CLASS_RobotReportItem) as IRobotReportItem;
end;

class function CoRobotReportItem.CreateRemote(const MachineName: string): IRobotReportItem;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotReportItem) as IRobotReportItem;
end;

class function CoRobotReportItemList.Create: IRobotReportItemList;
begin
  Result := CreateComObject(CLASS_RobotReportItemList) as IRobotReportItemList;
end;

class function CoRobotReportItemList.CreateRemote(const MachineName: string): IRobotReportItemList;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotReportItemList) as IRobotReportItemList;
end;

class function CoRobotPageSetupTableOfContents.Create: IRobotPageSetupTableOfContents;
begin
  Result := CreateComObject(CLASS_RobotPageSetupTableOfContents) as IRobotPageSetupTableOfContents;
end;

class function CoRobotPageSetupTableOfContents.CreateRemote(const MachineName: string): IRobotPageSetupTableOfContents;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotPageSetupTableOfContents) as IRobotPageSetupTableOfContents;
end;

class function CoRobotHtmlView.Create: IRobotHtmlView;
begin
  Result := CreateComObject(CLASS_RobotHtmlView) as IRobotHtmlView;
end;

class function CoRobotHtmlView.CreateRemote(const MachineName: string): IRobotHtmlView;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotHtmlView) as IRobotHtmlView;
end;

class function CoRobotMultiView.Create: IRobotCollection;
begin
  Result := CreateComObject(CLASS_RobotMultiView) as IRobotCollection;
end;

class function CoRobotMultiView.CreateRemote(const MachineName: string): IRobotCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotMultiView) as IRobotCollection;
end;

class function CoRDimStream.Create: IRDimStream;
begin
  Result := CreateComObject(CLASS_RDimStream) as IRDimStream;
end;

class function CoRDimStream.CreateRemote(const MachineName: string): IRDimStream;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimStream) as IRDimStream;
end;

class function CoRDimSimEffDef.Create: IRDimSimEffDef;
begin
  Result := CreateComObject(CLASS_RDimSimEffDef) as IRDimSimEffDef;
end;

class function CoRDimSimEffDef.CreateRemote(const MachineName: string): IRDimSimEffDef;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimSimEffDef) as IRDimSimEffDef;
end;

class function CoRDimEffDef.Create: IRDimEffDef;
begin
  Result := CreateComObject(CLASS_RDimEffDef) as IRDimEffDef;
end;

class function CoRDimEffDef.CreateRemote(const MachineName: string): IRDimEffDef;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimEffDef) as IRDimEffDef;
end;

class function CoRDimMatDef.Create: IRDimMatDef;
begin
  Result := CreateComObject(CLASS_RDimMatDef) as IRDimMatDef;
end;

class function CoRDimMatDef.CreateRemote(const MachineName: string): IRDimMatDef;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimMatDef) as IRDimMatDef;
end;

class function CoRDimProfDef.Create: IRDimProfDef;
begin
  Result := CreateComObject(CLASS_RDimProfDef) as IRDimProfDef;
end;

class function CoRDimProfDef.CreateRemote(const MachineName: string): IRDimProfDef;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimProfDef) as IRDimProfDef;
end;

class function CoRDimMembSrv.Create: IRDimMembSrv;
begin
  Result := CreateComObject(CLASS_RDimMembSrv) as IRDimMembSrv;
end;

class function CoRDimMembSrv.CreateRemote(const MachineName: string): IRDimMembSrv;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimMembSrv) as IRDimMembSrv;
end;

class function CoRDimConnection.Create: IRDimConnection;
begin
  Result := CreateComObject(CLASS_RDimConnection) as IRDimConnection;
end;

class function CoRDimConnection.CreateRemote(const MachineName: string): IRDimConnection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimConnection) as IRDimConnection;
end;

class function CoRDimDeflDisp.Create: IRDimDeflDisp;
begin
  Result := CreateComObject(CLASS_RDimDeflDisp) as IRDimDeflDisp;
end;

class function CoRDimDeflDisp.CreateRemote(const MachineName: string): IRDimDeflDisp;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimDeflDisp) as IRDimDeflDisp;
end;

class function CoRDimCalcState.Create: IRDimCalcState;
begin
  Result := CreateComObject(CLASS_RDimCalcState) as IRDimCalcState;
end;

class function CoRDimCalcState.CreateRemote(const MachineName: string): IRDimCalcState;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimCalcState) as IRDimCalcState;
end;

class function CoRDimUnits.Create: IRDimUnits;
begin
  Result := CreateComObject(CLASS_RDimUnits) as IRDimUnits;
end;

class function CoRDimUnits.CreateRemote(const MachineName: string): IRDimUnits;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimUnits) as IRDimUnits;
end;

class function CoRDimGrpProfs.Create: IRDimGrpProfs;
begin
  Result := CreateComObject(CLASS_RDimGrpProfs) as IRDimGrpProfs;
end;

class function CoRDimGrpProfs.CreateRemote(const MachineName: string): IRDimGrpProfs;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimGrpProfs) as IRDimGrpProfs;
end;

class function CoRDimGroup.Create: IRDimGroup;
begin
  Result := CreateComObject(CLASS_RDimGroup) as IRDimGroup;
end;

class function CoRDimGroup.CreateRemote(const MachineName: string): IRDimGroup;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimGroup) as IRDimGroup;
end;

class function CoRDimGroups.Create: IRDimGroups;
begin
  Result := CreateComObject(CLASS_RDimGroups) as IRDimGroups;
end;

class function CoRDimGroups.CreateRemote(const MachineName: string): IRDimGroups;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimGroups) as IRDimGroups;
end;

class function CoRDimMembDef.Create: IRDimMembDef;
begin
  Result := CreateComObject(CLASS_RDimMembDef) as IRDimMembDef;
end;

class function CoRDimMembDef.CreateRemote(const MachineName: string): IRDimMembDef;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimMembDef) as IRDimMembDef;
end;

class function CoRDimMembDefDataSrv.Create: IRDimMembDefDataSrv;
begin
  Result := CreateComObject(CLASS_RDimMembDefDataSrv) as IRDimMembDefDataSrv;
end;

class function CoRDimMembDefDataSrv.CreateRemote(const MachineName: string): IRDimMembDefDataSrv;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimMembDefDataSrv) as IRDimMembDefDataSrv;
end;

class function CoRDimMember.Create: IRDimMember;
begin
  Result := CreateComObject(CLASS_RDimMember) as IRDimMember;
end;

class function CoRDimMember.CreateRemote(const MachineName: string): IRDimMember;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimMember) as IRDimMember;
end;

class function CoRDimMembers.Create: IRDimMembers;
begin
  Result := CreateComObject(CLASS_RDimMembers) as IRDimMembers;
end;

class function CoRDimMembers.CreateRemote(const MachineName: string): IRDimMembers;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimMembers) as IRDimMembers;
end;

class function CoRDimServer.Create: IRDimServer;
begin
  Result := CreateComObject(CLASS_RDimServer) as IRDimServer;
end;

class function CoRDimServer.CreateRemote(const MachineName: string): IRDimServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimServer) as IRDimServer;
end;

class function CoRDimAdjoinParams.Create: IRDimAdjoinParams;
begin
  Result := CreateComObject(CLASS_RDimAdjoinParams) as IRDimAdjoinParams;
end;

class function CoRDimAdjoinParams.CreateRemote(const MachineName: string): IRDimAdjoinParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimAdjoinParams) as IRDimAdjoinParams;
end;

class function CoRDimAdjoinAutomat.Create: IRDimAdjoinAutomat;
begin
  Result := CreateComObject(CLASS_RDimAdjoinAutomat) as IRDimAdjoinAutomat;
end;

class function CoRDimAdjoinAutomat.CreateRemote(const MachineName: string): IRDimAdjoinAutomat;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimAdjoinAutomat) as IRDimAdjoinAutomat;
end;

class function CoRDimAdjoinBranch.Create: IRDimAdjoinBranch;
begin
  Result := CreateComObject(CLASS_RDimAdjoinBranch) as IRDimAdjoinBranch;
end;

class function CoRDimAdjoinBranch.CreateRemote(const MachineName: string): IRDimAdjoinBranch;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimAdjoinBranch) as IRDimAdjoinBranch;
end;

class function CoRDimInternalPoints.Create: IRDimInternalPoints;
begin
  Result := CreateComObject(CLASS_RDimInternalPoints) as IRDimInternalPoints;
end;

class function CoRDimInternalPoints.CreateRemote(const MachineName: string): IRDimInternalPoints;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RDimInternalPoints) as IRDimInternalPoints;
end;

class function CoRJointConnectionInfo.Create: IRJointConnectionInfo;
begin
  Result := CreateComObject(CLASS_RJointConnectionInfo) as IRJointConnectionInfo;
end;

class function CoRJointConnectionInfo.CreateRemote(const MachineName: string): IRJointConnectionInfo;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointConnectionInfo) as IRJointConnectionInfo;
end;

class function CoRJointWeld.Create: IRJointWeld;
begin
  Result := CreateComObject(CLASS_RJointWeld) as IRJointWeld;
end;

class function CoRJointWeld.CreateRemote(const MachineName: string): IRJointWeld;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointWeld) as IRJointWeld;
end;

class function CoRJointPlate.Create: IRJointPlate;
begin
  Result := CreateComObject(CLASS_RJointPlate) as IRJointPlate;
end;

class function CoRJointPlate.CreateRemote(const MachineName: string): IRJointPlate;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointPlate) as IRJointPlate;
end;

class function CoRJointKneeDiagonalStiff.Create: IRJointKneeDiagonalStiff;
begin
  Result := CreateComObject(CLASS_RJointKneeDiagonalStiff) as IRJointKneeDiagonalStiff;
end;

class function CoRJointKneeDiagonalStiff.CreateRemote(const MachineName: string): IRJointKneeDiagonalStiff;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointKneeDiagonalStiff) as IRJointKneeDiagonalStiff;
end;

class function CoRJointKneeBolts.Create: IRJointKneeBolts;
begin
  Result := CreateComObject(CLASS_RJointKneeBolts) as IRJointKneeBolts;
end;

class function CoRJointKneeBolts.CreateRemote(const MachineName: string): IRJointKneeBolts;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointKneeBolts) as IRJointKneeBolts;
end;

class function CoRJointKneeBracket.Create: IRJointKneeBracket;
begin
  Result := CreateComObject(CLASS_RJointKneeBracket) as IRJointKneeBracket;
end;

class function CoRJointKneeBracket.CreateRemote(const MachineName: string): IRJointKneeBracket;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointKneeBracket) as IRJointKneeBracket;
end;

class function CoRJointKneeWebPlate.Create: IRJointKneeWebPlate;
begin
  Result := CreateComObject(CLASS_RJointKneeWebPlate) as IRJointKneeWebPlate;
end;

class function CoRJointKneeWebPlate.CreateRemote(const MachineName: string): IRJointKneeWebPlate;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointKneeWebPlate) as IRJointKneeWebPlate;
end;

class function CoRJointKneeCodeParamsPN90.Create: IRJointKneeCodeParamsPN90;
begin
  Result := CreateComObject(CLASS_RJointKneeCodeParamsPN90) as IRJointKneeCodeParamsPN90;
end;

class function CoRJointKneeCodeParamsPN90.CreateRemote(const MachineName: string): IRJointKneeCodeParamsPN90;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointKneeCodeParamsPN90) as IRJointKneeCodeParamsPN90;
end;

class function CoRJointKneeCodeParamsCM66.Create: IRJointKneeCodeParamsCM66;
begin
  Result := CreateComObject(CLASS_RJointKneeCodeParamsCM66) as IRJointKneeCodeParamsCM66;
end;

class function CoRJointKneeCodeParamsCM66.CreateRemote(const MachineName: string): IRJointKneeCodeParamsCM66;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointKneeCodeParamsCM66) as IRJointKneeCodeParamsCM66;
end;

class function CoRJointKneeCodeParamsEC32.Create: IRJointKneeCodeParamsEC32;
begin
  Result := CreateComObject(CLASS_RJointKneeCodeParamsEC32) as IRJointKneeCodeParamsEC32;
end;

class function CoRJointKneeCodeParamsEC32.CreateRemote(const MachineName: string): IRJointKneeCodeParamsEC32;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointKneeCodeParamsEC32) as IRJointKneeCodeParamsEC32;
end;

class function CoRJointKnee.Create: IRJointKnee;
begin
  Result := CreateComObject(CLASS_RJointKnee) as IRJointKnee;
end;

class function CoRJointKnee.CreateRemote(const MachineName: string): IRJointKnee;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointKnee) as IRJointKnee;
end;

class function CoRJointConnectionServer.Create: IRJointConnectionServer;
begin
  Result := CreateComObject(CLASS_RJointConnectionServer) as IRJointConnectionServer;
end;

class function CoRJointConnectionServer.CreateRemote(const MachineName: string): IRJointConnectionServer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointConnectionServer) as IRJointConnectionServer;
end;

class function CoRJointKneeStiffColumn.Create: IRJointKneeStiffColumn;
begin
  Result := CreateComObject(CLASS_RJointKneeStiffColumn) as IRJointKneeStiffColumn;
end;

class function CoRJointKneeStiffColumn.CreateRemote(const MachineName: string): IRJointKneeStiffColumn;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointKneeStiffColumn) as IRJointKneeStiffColumn;
end;

class function CoRJointProfile.Create: IRJointProfile;
begin
  Result := CreateComObject(CLASS_RJointProfile) as IRJointProfile;
end;

class function CoRJointProfile.CreateRemote(const MachineName: string): IRJointProfile;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointProfile) as IRJointProfile;
end;

class function CoRJointLoad.Create: IRJointLoad;
begin
  Result := CreateComObject(CLASS_RJointLoad) as IRJointLoad;
end;

class function CoRJointLoad.CreateRemote(const MachineName: string): IRJointLoad;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointLoad) as IRJointLoad;
end;

class function CoRJointKneeLoad.Create: IRJointKneeLoad;
begin
  Result := CreateComObject(CLASS_RJointKneeLoad) as IRJointKneeLoad;
end;

class function CoRJointKneeLoad.CreateRemote(const MachineName: string): IRJointKneeLoad;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointKneeLoad) as IRJointKneeLoad;
end;

class function CoRJointAnchorBolt.Create: IRJointAnchorBolt;
begin
  Result := CreateComObject(CLASS_RJointAnchorBolt) as IRJointAnchorBolt;
end;

class function CoRJointAnchorBolt.CreateRemote(const MachineName: string): IRJointAnchorBolt;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointAnchorBolt) as IRJointAnchorBolt;
end;

class function CoRJointAnchorPlate.Create: IRJointAnchorPlate;
begin
  Result := CreateComObject(CLASS_RJointAnchorPlate) as IRJointAnchorPlate;
end;

class function CoRJointAnchorPlate.CreateRemote(const MachineName: string): IRJointAnchorPlate;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointAnchorPlate) as IRJointAnchorPlate;
end;

class function CoRJointAnchor.Create: IRJointAnchor;
begin
  Result := CreateComObject(CLASS_RJointAnchor) as IRJointAnchor;
end;

class function CoRJointAnchor.CreateRemote(const MachineName: string): IRJointAnchor;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointAnchor) as IRJointAnchor;
end;

class function CoRJointFootBolts.Create: IRJointFootBolts;
begin
  Result := CreateComObject(CLASS_RJointFootBolts) as IRJointFootBolts;
end;

class function CoRJointFootBolts.CreateRemote(const MachineName: string): IRJointFootBolts;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointFootBolts) as IRJointFootBolts;
end;

class function CoRJointFootPlate.Create: IRJointFootPlate;
begin
  Result := CreateComObject(CLASS_RJointFootPlate) as IRJointFootPlate;
end;

class function CoRJointFootPlate.CreateRemote(const MachineName: string): IRJointFootPlate;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointFootPlate) as IRJointFootPlate;
end;

class function CoRJointWedge.Create: IRJointWedge;
begin
  Result := CreateComObject(CLASS_RJointWedge) as IRJointWedge;
end;

class function CoRJointWedge.CreateRemote(const MachineName: string): IRJointWedge;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointWedge) as IRJointWedge;
end;

class function CoRJointBearingPlate.Create: IRJointBearingPlate;
begin
  Result := CreateComObject(CLASS_RJointBearingPlate) as IRJointBearingPlate;
end;

class function CoRJointBearingPlate.CreateRemote(const MachineName: string): IRJointBearingPlate;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointBearingPlate) as IRJointBearingPlate;
end;

class function CoRJointFootWelds.Create: IRJointFootWelds;
begin
  Result := CreateComObject(CLASS_RJointFootWelds) as IRJointFootWelds;
end;

class function CoRJointFootWelds.CreateRemote(const MachineName: string): IRJointFootWelds;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointFootWelds) as IRJointFootWelds;
end;

class function CoRJointColumnBracket.Create: IRJointColumnBracket;
begin
  Result := CreateComObject(CLASS_RJointColumnBracket) as IRJointColumnBracket;
end;

class function CoRJointColumnBracket.CreateRemote(const MachineName: string): IRJointColumnBracket;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointColumnBracket) as IRJointColumnBracket;
end;

class function CoRJointPinnedColumnBase.Create: IRJointPinnedColumnBase;
begin
  Result := CreateComObject(CLASS_RJointPinnedColumnBase) as IRJointPinnedColumnBase;
end;

class function CoRJointPinnedColumnBase.CreateRemote(const MachineName: string): IRJointPinnedColumnBase;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointPinnedColumnBase) as IRJointPinnedColumnBase;
end;

class function CoRJointFootStiffenerVert.Create: IRJointFootStiffenerVert;
begin
  Result := CreateComObject(CLASS_RJointFootStiffenerVert) as IRJointFootStiffenerVert;
end;

class function CoRJointFootStiffenerVert.CreateRemote(const MachineName: string): IRJointFootStiffenerVert;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointFootStiffenerVert) as IRJointFootStiffenerVert;
end;

class function CoRJointFootStiffenerHoriz.Create: IRJointFootStiffenerHoriz;
begin
  Result := CreateComObject(CLASS_RJointFootStiffenerHoriz) as IRJointFootStiffenerHoriz;
end;

class function CoRJointFootStiffenerHoriz.CreateRemote(const MachineName: string): IRJointFootStiffenerHoriz;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointFootStiffenerHoriz) as IRJointFootStiffenerHoriz;
end;

class function CoRJointFootMaterials.Create: IRJointFootMaterials;
begin
  Result := CreateComObject(CLASS_RJointFootMaterials) as IRJointFootMaterials;
end;

class function CoRJointFootMaterials.CreateRemote(const MachineName: string): IRJointFootMaterials;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointFootMaterials) as IRJointFootMaterials;
end;

class function CoRJointPinnedLoad.Create: IRJointPinnedLoad;
begin
  Result := CreateComObject(CLASS_RJointPinnedLoad) as IRJointPinnedLoad;
end;

class function CoRJointPinnedLoad.CreateRemote(const MachineName: string): IRJointPinnedLoad;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointPinnedLoad) as IRJointPinnedLoad;
end;

class function CoRJointColumnSquare.Create: IRJointColumnSquare;
begin
  Result := CreateComObject(CLASS_RJointColumnSquare) as IRJointColumnSquare;
end;

class function CoRJointColumnSquare.CreateRemote(const MachineName: string): IRJointColumnSquare;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointColumnSquare) as IRJointColumnSquare;
end;

class function CoRJointFootStiffenerSimple.Create: IRJointFootStiffenerSimple;
begin
  Result := CreateComObject(CLASS_RJointFootStiffenerSimple) as IRJointFootStiffenerSimple;
end;

class function CoRJointFootStiffenerSimple.CreateRemote(const MachineName: string): IRJointFootStiffenerSimple;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointFootStiffenerSimple) as IRJointFootStiffenerSimple;
end;

class function CoRJointFootStiffenerComplex.Create: IRJointFootStiffenerComplex;
begin
  Result := CreateComObject(CLASS_RJointFootStiffenerComplex) as IRJointFootStiffenerComplex;
end;

class function CoRJointFootStiffenerComplex.CreateRemote(const MachineName: string): IRJointFootStiffenerComplex;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointFootStiffenerComplex) as IRJointFootStiffenerComplex;
end;

class function CoRJointFootStiffenerTrapezoid.Create: IRJointFootStiffenerTrapezoid;
begin
  Result := CreateComObject(CLASS_RJointFootStiffenerTrapezoid) as IRJointFootStiffenerTrapezoid;
end;

class function CoRJointFootStiffenerTrapezoid.CreateRemote(const MachineName: string): IRJointFootStiffenerTrapezoid;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointFootStiffenerTrapezoid) as IRJointFootStiffenerTrapezoid;
end;

class function CoRJointColumnBFoundation.Create: IRJointColumnBFoundation;
begin
  Result := CreateComObject(CLASS_RJointColumnBFoundation) as IRJointColumnBFoundation;
end;

class function CoRJointColumnBFoundation.CreateRemote(const MachineName: string): IRJointColumnBFoundation;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointColumnBFoundation) as IRJointColumnBFoundation;
end;

class function CoRJointFixedColumnBase.Create: IRJointFixedColumnBase;
begin
  Result := CreateComObject(CLASS_RJointFixedColumnBase) as IRJointFixedColumnBase;
end;

class function CoRJointFixedColumnBase.CreateRemote(const MachineName: string): IRJointFixedColumnBase;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointFixedColumnBase) as IRJointFixedColumnBase;
end;

class function CoRJointFixedLoad.Create: IRJointFixedLoad;
begin
  Result := CreateComObject(CLASS_RJointFixedLoad) as IRJointFixedLoad;
end;

class function CoRJointFixedLoad.CreateRemote(const MachineName: string): IRJointFixedLoad;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointFixedLoad) as IRJointFixedLoad;
end;

class function CoRJointConcreteMaterials.Create: IRJointConcreteMaterials;
begin
  Result := CreateComObject(CLASS_RJointConcreteMaterials) as IRJointConcreteMaterials;
end;

class function CoRJointConcreteMaterials.CreateRemote(const MachineName: string): IRJointConcreteMaterials;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointConcreteMaterials) as IRJointConcreteMaterials;
end;

class function CoRJointConcreteColumn.Create: IRJointConcreteColumn;
begin
  Result := CreateComObject(CLASS_RJointConcreteColumn) as IRJointConcreteColumn;
end;

class function CoRJointConcreteColumn.CreateRemote(const MachineName: string): IRJointConcreteColumn;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointConcreteColumn) as IRJointConcreteColumn;
end;

class function CoRJointConcreteColumnFoundation.Create: IRJointConcreteColumnFoundation;
begin
  Result := CreateComObject(CLASS_RJointConcreteColumnFoundation) as IRJointConcreteColumnFoundation;
end;

class function CoRJointConcreteColumnFoundation.CreateRemote(const MachineName: string): IRJointConcreteColumnFoundation;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointConcreteColumnFoundation) as IRJointConcreteColumnFoundation;
end;

class function CoRJointConcreteColumnLoad.Create: IRJointConcreteColumnLoad;
begin
  Result := CreateComObject(CLASS_RJointConcreteColumnLoad) as IRJointConcreteColumnLoad;
end;

class function CoRJointConcreteColumnLoad.CreateRemote(const MachineName: string): IRJointConcreteColumnLoad;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointConcreteColumnLoad) as IRJointConcreteColumnLoad;
end;

class function CoRJointFixedFootWelds.Create: IRJointFixedFootWelds;
begin
  Result := CreateComObject(CLASS_RJointFixedFootWelds) as IRJointFixedFootWelds;
end;

class function CoRJointFixedFootWelds.CreateRemote(const MachineName: string): IRJointFixedFootWelds;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointFixedFootWelds) as IRJointFixedFootWelds;
end;

class function CoRJointAngleBolts.Create: IRJointAngleBolts;
begin
  Result := CreateComObject(CLASS_RJointAngleBolts) as IRJointAngleBolts;
end;

class function CoRJointAngleBolts.CreateRemote(const MachineName: string): IRJointAngleBolts;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointAngleBolts) as IRJointAngleBolts;
end;

class function CoRJointAngle.Create: IRJointAngle;
begin
  Result := CreateComObject(CLASS_RJointAngle) as IRJointAngle;
end;

class function CoRJointAngle.CreateRemote(const MachineName: string): IRJointAngle;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointAngle) as IRJointAngle;
end;

class function CoRJointBeamCut.Create: IRJointBeamCut;
begin
  Result := CreateComObject(CLASS_RJointBeamCut) as IRJointBeamCut;
end;

class function CoRJointBeamCut.CreateRemote(const MachineName: string): IRJointBeamCut;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointBeamCut) as IRJointBeamCut;
end;

class function CoRJointWithAngles.Create: IRJointWithAngles;
begin
  Result := CreateComObject(CLASS_RJointWithAngles) as IRJointWithAngles;
end;

class function CoRJointWithAngles.CreateRemote(const MachineName: string): IRJointWithAngles;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointWithAngles) as IRJointWithAngles;
end;

class function CoRJointAngleLoad.Create: IRJointAngleLoad;
begin
  Result := CreateComObject(CLASS_RJointAngleLoad) as IRJointAngleLoad;
end;

class function CoRJointAngleLoad.CreateRemote(const MachineName: string): IRJointAngleLoad;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointAngleLoad) as IRJointAngleLoad;
end;

class function CoRJointTubeFlangeProfile.Create: IRJointTubeFlangeProfile;
begin
  Result := CreateComObject(CLASS_RJointTubeFlangeProfile) as IRJointTubeFlangeProfile;
end;

class function CoRJointTubeFlangeProfile.CreateRemote(const MachineName: string): IRJointTubeFlangeProfile;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointTubeFlangeProfile) as IRJointTubeFlangeProfile;
end;

class function CoRJointTubeDiagProfile.Create: IRJointTubeDiagProfile;
begin
  Result := CreateComObject(CLASS_RJointTubeDiagProfile) as IRJointTubeDiagProfile;
end;

class function CoRJointTubeDiagProfile.CreateRemote(const MachineName: string): IRJointTubeDiagProfile;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointTubeDiagProfile) as IRJointTubeDiagProfile;
end;

class function CoRJointTubePostProfile.Create: IRJointTubePostProfile;
begin
  Result := CreateComObject(CLASS_RJointTubePostProfile) as IRJointTubePostProfile;
end;

class function CoRJointTubePostProfile.CreateRemote(const MachineName: string): IRJointTubePostProfile;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointTubePostProfile) as IRJointTubePostProfile;
end;

class function CoRJointTube.Create: IRJointTube;
begin
  Result := CreateComObject(CLASS_RJointTube) as IRJointTube;
end;

class function CoRJointTube.CreateRemote(const MachineName: string): IRJointTube;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointTube) as IRJointTube;
end;

class function CoRJointTubeLoad.Create: IRJointTubeLoad;
begin
  Result := CreateComObject(CLASS_RJointTubeLoad) as IRJointTubeLoad;
end;

class function CoRJointTubeLoad.CreateRemote(const MachineName: string): IRJointTubeLoad;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointTubeLoad) as IRJointTubeLoad;
end;

class function CoRJointGussetBoltsDiag.Create: IRJointGussetBoltsDiag;
begin
  Result := CreateComObject(CLASS_RJointGussetBoltsDiag) as IRJointGussetBoltsDiag;
end;

class function CoRJointGussetBoltsDiag.CreateRemote(const MachineName: string): IRJointGussetBoltsDiag;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointGussetBoltsDiag) as IRJointGussetBoltsDiag;
end;

class function CoRJointGussetWeldsDiag.Create: IRJointGussetWeldsDiag;
begin
  Result := CreateComObject(CLASS_RJointGussetWeldsDiag) as IRJointGussetWeldsDiag;
end;

class function CoRJointGussetWeldsDiag.CreateRemote(const MachineName: string): IRJointGussetWeldsDiag;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointGussetWeldsDiag) as IRJointGussetWeldsDiag;
end;

class function CoRJointGussetDiagonale.Create: IRJointGussetDiagonale;
begin
  Result := CreateComObject(CLASS_RJointGussetDiagonale) as IRJointGussetDiagonale;
end;

class function CoRJointGussetDiagonale.CreateRemote(const MachineName: string): IRJointGussetDiagonale;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointGussetDiagonale) as IRJointGussetDiagonale;
end;

class function CoRJointGussetSimple.Create: IRJointGussetSimple;
begin
  Result := CreateComObject(CLASS_RJointGussetSimple) as IRJointGussetSimple;
end;

class function CoRJointGussetSimple.CreateRemote(const MachineName: string): IRJointGussetSimple;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointGussetSimple) as IRJointGussetSimple;
end;

class function CoRJointGussetSimplePlate.Create: IRJointGussetSimplePlate;
begin
  Result := CreateComObject(CLASS_RJointGussetSimplePlate) as IRJointGussetSimplePlate;
end;

class function CoRJointGussetSimplePlate.CreateRemote(const MachineName: string): IRJointGussetSimplePlate;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointGussetSimplePlate) as IRJointGussetSimplePlate;
end;

class function CoRJointGussetSimpleAttachment.Create: IRJointGussetSimpleAttachment;
begin
  Result := CreateComObject(CLASS_RJointGussetSimpleAttachment) as IRJointGussetSimpleAttachment;
end;

class function CoRJointGussetSimpleAttachment.CreateRemote(const MachineName: string): IRJointGussetSimpleAttachment;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointGussetSimpleAttachment) as IRJointGussetSimpleAttachment;
end;

class function CoRJointGussetSimpleAttachBolts.Create: IRJointGussetSimpleAttachBolts;
begin
  Result := CreateComObject(CLASS_RJointGussetSimpleAttachBolts) as IRJointGussetSimpleAttachBolts;
end;

class function CoRJointGussetSimpleAttachBolts.CreateRemote(const MachineName: string): IRJointGussetSimpleAttachBolts;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointGussetSimpleAttachBolts) as IRJointGussetSimpleAttachBolts;
end;

class function CoRJointGussetSimpleAttachBoltsHorizontal.Create: IRJointGussetSimpleAttachBoltsHorizontal;
begin
  Result := CreateComObject(CLASS_RJointGussetSimpleAttachBoltsHorizontal) as IRJointGussetSimpleAttachBoltsHorizontal;
end;

class function CoRJointGussetSimpleAttachBoltsHorizontal.CreateRemote(const MachineName: string): IRJointGussetSimpleAttachBoltsHorizontal;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointGussetSimpleAttachBoltsHorizontal) as IRJointGussetSimpleAttachBoltsHorizontal;
end;

class function CoRJointGussetSimpleAttachBoltsVertical.Create: IRJointGussetSimpleAttachBoltsVertical;
begin
  Result := CreateComObject(CLASS_RJointGussetSimpleAttachBoltsVertical) as IRJointGussetSimpleAttachBoltsVertical;
end;

class function CoRJointGussetSimpleAttachBoltsVertical.CreateRemote(const MachineName: string): IRJointGussetSimpleAttachBoltsVertical;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointGussetSimpleAttachBoltsVertical) as IRJointGussetSimpleAttachBoltsVertical;
end;

class function CoRJointGussetSimpleAttachWelds.Create: IRJointGussetSimpleAttachWelds;
begin
  Result := CreateComObject(CLASS_RJointGussetSimpleAttachWelds) as IRJointGussetSimpleAttachWelds;
end;

class function CoRJointGussetSimpleAttachWelds.CreateRemote(const MachineName: string): IRJointGussetSimpleAttachWelds;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointGussetSimpleAttachWelds) as IRJointGussetSimpleAttachWelds;
end;

class function CoRJointGussetCrossPlate.Create: IRJointGussetCrossPlate;
begin
  Result := CreateComObject(CLASS_RJointGussetCrossPlate) as IRJointGussetCrossPlate;
end;

class function CoRJointGussetCrossPlate.CreateRemote(const MachineName: string): IRJointGussetCrossPlate;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointGussetCrossPlate) as IRJointGussetCrossPlate;
end;

class function CoRJointGussetCross.Create: IRJointGussetCross;
begin
  Result := CreateComObject(CLASS_RJointGussetCross) as IRJointGussetCross;
end;

class function CoRJointGussetCross.CreateRemote(const MachineName: string): IRJointGussetCross;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointGussetCross) as IRJointGussetCross;
end;

class function CoRJointGussetFlangePlate.Create: IRJointGussetFlangePlate;
begin
  Result := CreateComObject(CLASS_RJointGussetFlangePlate) as IRJointGussetFlangePlate;
end;

class function CoRJointGussetFlangePlate.CreateRemote(const MachineName: string): IRJointGussetFlangePlate;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointGussetFlangePlate) as IRJointGussetFlangePlate;
end;

class function CoRJointGussetFlange.Create: IRJointGussetFlange;
begin
  Result := CreateComObject(CLASS_RJointGussetFlange) as IRJointGussetFlange;
end;

class function CoRJointGussetFlange.CreateRemote(const MachineName: string): IRJointGussetFlange;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointGussetFlange) as IRJointGussetFlange;
end;

class function CoRJointGussetSimpleLoad.Create: IRJointGussetSimpleLoad;
begin
  Result := CreateComObject(CLASS_RJointGussetSimpleLoad) as IRJointGussetSimpleLoad;
end;

class function CoRJointGussetSimpleLoad.CreateRemote(const MachineName: string): IRJointGussetSimpleLoad;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointGussetSimpleLoad) as IRJointGussetSimpleLoad;
end;

class function CoRJointGussetCrossLoad.Create: IRJointGussetCrossLoad;
begin
  Result := CreateComObject(CLASS_RJointGussetCrossLoad) as IRJointGussetCrossLoad;
end;

class function CoRJointGussetCrossLoad.CreateRemote(const MachineName: string): IRJointGussetCrossLoad;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointGussetCrossLoad) as IRJointGussetCrossLoad;
end;

class function CoRJointGussetFlangeLoad.Create: IRJointGussetFlangeLoad;
begin
  Result := CreateComObject(CLASS_RJointGussetFlangeLoad) as IRJointGussetFlangeLoad;
end;

class function CoRJointGussetFlangeLoad.CreateRemote(const MachineName: string): IRJointGussetFlangeLoad;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointGussetFlangeLoad) as IRJointGussetFlangeLoad;
end;

class function CoRJointMainBolts.Create: IRJointMainBolts;
begin
  Result := CreateComObject(CLASS_RJointMainBolts) as IRJointMainBolts;
end;

class function CoRJointMainBolts.CreateRemote(const MachineName: string): IRJointMainBolts;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointMainBolts) as IRJointMainBolts;
end;

class function CoRJointBeamBolts.Create: IRJointBeamBolts;
begin
  Result := CreateComObject(CLASS_RJointBeamBolts) as IRJointBeamBolts;
end;

class function CoRJointBeamBolts.CreateRemote(const MachineName: string): IRJointBeamBolts;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointBeamBolts) as IRJointBeamBolts;
end;

class function CoRJointBeamGirderSeatBolts.Create: IRJointBeamGirderSeatBolts;
begin
  Result := CreateComObject(CLASS_RJointBeamGirderSeatBolts) as IRJointBeamGirderSeatBolts;
end;

class function CoRJointBeamGirderSeatBolts.CreateRemote(const MachineName: string): IRJointBeamGirderSeatBolts;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointBeamGirderSeatBolts) as IRJointBeamGirderSeatBolts;
end;

class function CoRJointBeamGirderBeam.Create: IRJointBeamGirderBeam;
begin
  Result := CreateComObject(CLASS_RJointBeamGirderBeam) as IRJointBeamGirderBeam;
end;

class function CoRJointBeamGirderBeam.CreateRemote(const MachineName: string): IRJointBeamGirderBeam;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointBeamGirderBeam) as IRJointBeamGirderBeam;
end;

class function CoRJointBeamGirderAngle.Create: IRJointBeamGirderAngle;
begin
  Result := CreateComObject(CLASS_RJointBeamGirderAngle) as IRJointBeamGirderAngle;
end;

class function CoRJointBeamGirderAngle.CreateRemote(const MachineName: string): IRJointBeamGirderAngle;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointBeamGirderAngle) as IRJointBeamGirderAngle;
end;

class function CoRJointBeamPlate.Create: IRJointBeamPlate;
begin
  Result := CreateComObject(CLASS_RJointBeamPlate) as IRJointBeamPlate;
end;

class function CoRJointBeamPlate.CreateRemote(const MachineName: string): IRJointBeamPlate;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointBeamPlate) as IRJointBeamPlate;
end;

class function CoRJointBeamGirderSeat.Create: IRJointBeamGirderSeat;
begin
  Result := CreateComObject(CLASS_RJointBeamGirderSeat) as IRJointBeamGirderSeat;
end;

class function CoRJointBeamGirderSeat.CreateRemote(const MachineName: string): IRJointBeamGirderSeat;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointBeamGirderSeat) as IRJointBeamGirderSeat;
end;

class function CoRJointBeamGirderStiffener.Create: IRJointBeamGirderStiffener;
begin
  Result := CreateComObject(CLASS_RJointBeamGirderStiffener) as IRJointBeamGirderStiffener;
end;

class function CoRJointBeamGirderStiffener.CreateRemote(const MachineName: string): IRJointBeamGirderStiffener;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointBeamGirderStiffener) as IRJointBeamGirderStiffener;
end;

class function CoRJointBeamGirder.Create: IRJointBeamGirder;
begin
  Result := CreateComObject(CLASS_RJointBeamGirder) as IRJointBeamGirder;
end;

class function CoRJointBeamGirder.CreateRemote(const MachineName: string): IRJointBeamGirder;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointBeamGirder) as IRJointBeamGirder;
end;

class function CoRJointBeamGirderLoad.Create: IRJointBeamGirderLoad;
begin
  Result := CreateComObject(CLASS_RJointBeamGirderLoad) as IRJointBeamGirderLoad;
end;

class function CoRJointBeamGirderLoad.CreateRemote(const MachineName: string): IRJointBeamGirderLoad;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointBeamGirderLoad) as IRJointBeamGirderLoad;
end;

class function CoRJointBeamColumn.Create: IRJointBeamColumn;
begin
  Result := CreateComObject(CLASS_RJointBeamColumn) as IRJointBeamColumn;
end;

class function CoRJointBeamColumn.CreateRemote(const MachineName: string): IRJointBeamColumn;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointBeamColumn) as IRJointBeamColumn;
end;

class function CoRJointBeamAngle.Create: IRJointBeamAngle;
begin
  Result := CreateComObject(CLASS_RJointBeamAngle) as IRJointBeamAngle;
end;

class function CoRJointBeamAngle.CreateRemote(const MachineName: string): IRJointBeamAngle;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointBeamAngle) as IRJointBeamAngle;
end;

class function CoRJointBeamColumnFlangePlate.Create: IRJointBeamColumnFlangePlate;
begin
  Result := CreateComObject(CLASS_RJointBeamColumnFlangePlate) as IRJointBeamColumnFlangePlate;
end;

class function CoRJointBeamColumnFlangePlate.CreateRemote(const MachineName: string): IRJointBeamColumnFlangePlate;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointBeamColumnFlangePlate) as IRJointBeamColumnFlangePlate;
end;

class function CoRJointBeamSeatMainBolts.Create: IRJointBeamSeatMainBolts;
begin
  Result := CreateComObject(CLASS_RJointBeamSeatMainBolts) as IRJointBeamSeatMainBolts;
end;

class function CoRJointBeamSeatMainBolts.CreateRemote(const MachineName: string): IRJointBeamSeatMainBolts;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointBeamSeatMainBolts) as IRJointBeamSeatMainBolts;
end;

class function CoRJointBeamSeatL.Create: IRJointBeamSeatL;
begin
  Result := CreateComObject(CLASS_RJointBeamSeatL) as IRJointBeamSeatL;
end;

class function CoRJointBeamSeatL.CreateRemote(const MachineName: string): IRJointBeamSeatL;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointBeamSeatL) as IRJointBeamSeatL;
end;

class function CoRJointBeamSeatT.Create: IRJointBeamSeatT;
begin
  Result := CreateComObject(CLASS_RJointBeamSeatT) as IRJointBeamSeatT;
end;

class function CoRJointBeamSeatT.CreateRemote(const MachineName: string): IRJointBeamSeatT;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointBeamSeatT) as IRJointBeamSeatT;
end;

class function CoRJointSplice.Create: IRJointSplice;
begin
  Result := CreateComObject(CLASS_RJointSplice) as IRJointSplice;
end;

class function CoRJointSplice.CreateRemote(const MachineName: string): IRJointSplice;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointSplice) as IRJointSplice;
end;

class function CoRJointSpliceLoad.Create: IRJointSpliceLoad;
begin
  Result := CreateComObject(CLASS_RJointSpliceLoad) as IRJointSpliceLoad;
end;

class function CoRJointSpliceLoad.CreateRemote(const MachineName: string): IRJointSpliceLoad;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointSpliceLoad) as IRJointSpliceLoad;
end;

class function CoRJointSplicePlate.Create: IRJointSplicePlate;
begin
  Result := CreateComObject(CLASS_RJointSplicePlate) as IRJointSplicePlate;
end;

class function CoRJointSplicePlate.CreateRemote(const MachineName: string): IRJointSplicePlate;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointSplicePlate) as IRJointSplicePlate;
end;

class function CoRJointSpliceBolts.Create: IRJointSpliceBolts;
begin
  Result := CreateComObject(CLASS_RJointSpliceBolts) as IRJointSpliceBolts;
end;

class function CoRJointSpliceBolts.CreateRemote(const MachineName: string): IRJointSpliceBolts;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointSpliceBolts) as IRJointSpliceBolts;
end;

class function CoRJointSpliceWelds.Create: IRJointSpliceWelds;
begin
  Result := CreateComObject(CLASS_RJointSpliceWelds) as IRJointSpliceWelds;
end;

class function CoRJointSpliceWelds.CreateRemote(const MachineName: string): IRJointSpliceWelds;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointSpliceWelds) as IRJointSpliceWelds;
end;

class function CoRJointTie.Create: IRJointTie;
begin
  Result := CreateComObject(CLASS_RJointTie) as IRJointTie;
end;

class function CoRJointTie.CreateRemote(const MachineName: string): IRJointTie;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointTie) as IRJointTie;
end;

class function CoRJointTieLoad.Create: IRJointTieLoad;
begin
  Result := CreateComObject(CLASS_RJointTieLoad) as IRJointTieLoad;
end;

class function CoRJointTieLoad.CreateRemote(const MachineName: string): IRJointTieLoad;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointTieLoad) as IRJointTieLoad;
end;

class function CoRJointTieStiffeners.Create: IRJointTieStiffeners;
begin
  Result := CreateComObject(CLASS_RJointTieStiffeners) as IRJointTieStiffeners;
end;

class function CoRJointTieStiffeners.CreateRemote(const MachineName: string): IRJointTieStiffeners;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointTieStiffeners) as IRJointTieStiffeners;
end;

class function CoRJointTiePlates.Create: IRJointTiePlates;
begin
  Result := CreateComObject(CLASS_RJointTiePlates) as IRJointTiePlates;
end;

class function CoRJointTiePlates.CreateRemote(const MachineName: string): IRJointTiePlates;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointTiePlates) as IRJointTiePlates;
end;

class function CoRJointTieConnectors.Create: IRJointTieConnectors;
begin
  Result := CreateComObject(CLASS_RJointTieConnectors) as IRJointTieConnectors;
end;

class function CoRJointTieConnectors.CreateRemote(const MachineName: string): IRJointTieConnectors;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointTieConnectors) as IRJointTieConnectors;
end;

class function CoRJointTieBolts.Create: IRJointTieBolts;
begin
  Result := CreateComObject(CLASS_RJointTieBolts) as IRJointTieBolts;
end;

class function CoRJointTieBolts.CreateRemote(const MachineName: string): IRJointTieBolts;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointTieBolts) as IRJointTieBolts;
end;

class function CoRJointTieWelds.Create: IRJointTieWelds;
begin
  Result := CreateComObject(CLASS_RJointTieWelds) as IRJointTieWelds;
end;

class function CoRJointTieWelds.CreateRemote(const MachineName: string): IRJointTieWelds;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RJointTieWelds) as IRJointTieWelds;
end;

class function CoRConcrBarSectionData.Create: IRConcrBarSectionData;
begin
  Result := CreateComObject(CLASS_RConcrBarSectionData) as IRConcrBarSectionData;
end;

class function CoRConcrBarSectionData.CreateRemote(const MachineName: string): IRConcrBarSectionData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcrBarSectionData) as IRConcrBarSectionData;
end;

class function CoRBestParamSet.Create: IRBestParamSet;
begin
  Result := CreateComObject(CLASS_RBestParamSet) as IRBestParamSet;
end;

class function CoRBestParamSet.CreateRemote(const MachineName: string): IRBestParamSet;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RBestParamSet) as IRBestParamSet;
end;

class function CoRBestCalcParamsData.Create: IRBestCalcParamsData;
begin
  Result := CreateComObject(CLASS_RBestCalcParamsData) as IRBestCalcParamsData;
end;

class function CoRBestCalcParamsData.CreateRemote(const MachineName: string): IRBestCalcParamsData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RBestCalcParamsData) as IRBestCalcParamsData;
end;

class function CoRBestCalcParamsDataList.Create: IRBestCalcParamsDataList;
begin
  Result := CreateComObject(CLASS_RBestCalcParamsDataList) as IRBestCalcParamsDataList;
end;

class function CoRBestCalcParamsDataList.CreateRemote(const MachineName: string): IRBestCalcParamsDataList;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RBestCalcParamsDataList) as IRBestCalcParamsDataList;
end;

class function CoRBestMemberData.Create: IRBestMemberData;
begin
  Result := CreateComObject(CLASS_RBestMemberData) as IRBestMemberData;
end;

class function CoRBestMemberData.CreateRemote(const MachineName: string): IRBestMemberData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RBestMemberData) as IRBestMemberData;
end;

class function CoRBestResults.Create: IRBestResults;
begin
  Result := CreateComObject(CLASS_RBestResults) as IRBestResults;
end;

class function CoRBestResults.CreateRemote(const MachineName: string): IRBestResults;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RBestResults) as IRBestResults;
end;

class function CoRBestForceData.Create: IRBestForceData;
begin
  Result := CreateComObject(CLASS_RBestForceData) as IRBestForceData;
end;

class function CoRBestForceData.CreateRemote(const MachineName: string): IRBestForceData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RBestForceData) as IRBestForceData;
end;

class function CoRBestDimParams.Create: IRBestDimParams;
begin
  Result := CreateComObject(CLASS_RBestDimParams) as IRBestDimParams;
end;

class function CoRBestDimParams.CreateRemote(const MachineName: string): IRBestDimParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RBestDimParams) as IRBestDimParams;
end;

class function CoRConcrMemberRequiredReinfCalcParams.Create: IRConcrMemberRequiredReinfCalcParams;
begin
  Result := CreateComObject(CLASS_RConcrMemberRequiredReinfCalcParams) as IRConcrMemberRequiredReinfCalcParams;
end;

class function CoRConcrMemberRequiredReinfCalcParams.CreateRemote(const MachineName: string): IRConcrMemberRequiredReinfCalcParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcrMemberRequiredReinfCalcParams) as IRConcrMemberRequiredReinfCalcParams;
end;

class function CoRConcrMemberRequiredReinfEngine.Create: IRConcrMemberRequiredReinfEngine;
begin
  Result := CreateComObject(CLASS_RConcrMemberRequiredReinfEngine) as IRConcrMemberRequiredReinfEngine;
end;

class function CoRConcrMemberRequiredReinfEngine.CreateRemote(const MachineName: string): IRConcrMemberRequiredReinfEngine;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcrMemberRequiredReinfEngine) as IRConcrMemberRequiredReinfEngine;
end;

class function CoRobotCodeRegistrar.Create: IRobotCodeRegistrar;
begin
  Result := CreateComObject(CLASS_RobotCodeRegistrar) as IRobotCodeRegistrar;
end;

class function CoRobotCodeRegistrar.CreateRemote(const MachineName: string): IRobotCodeRegistrar;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCodeRegistrar) as IRobotCodeRegistrar;
end;

class function CoRobotAddInRegistrar.Create: IRobotAddInRegistrar;
begin
  Result := CreateComObject(CLASS_RobotAddInRegistrar) as IRobotAddInRegistrar;
end;

class function CoRobotAddInRegistrar.CreateRemote(const MachineName: string): IRobotAddInRegistrar;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotAddInRegistrar) as IRobotAddInRegistrar;
end;

class function CoRobotCmdInfo.Create: IRobotCmdInfo;
begin
  Result := CreateComObject(CLASS_RobotCmdInfo) as IRobotCmdInfo;
end;

class function CoRobotCmdInfo.CreateRemote(const MachineName: string): IRobotCmdInfo;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCmdInfo) as IRobotCmdInfo;
end;

class function CoRobotCmdList.Create: IRobotCmdList;
begin
  Result := CreateComObject(CLASS_RobotCmdList) as IRobotCmdList;
end;

class function CoRobotCmdList.CreateRemote(const MachineName: string): IRobotCmdList;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotCmdList) as IRobotCmdList;
end;

class function CoRobotAddInMngr.Create: IRobotAddInMngr;
begin
  Result := CreateComObject(CLASS_RobotAddInMngr) as IRobotAddInMngr;
end;

class function CoRobotAddInMngr.CreateRemote(const MachineName: string): IRobotAddInMngr;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotAddInMngr) as IRobotAddInMngr;
end;

class function CoRConcrReinforceData.Create: IRConcrReinforceData2;
begin
  Result := CreateComObject(CLASS_RConcrReinforceData) as IRConcrReinforceData2;
end;

class function CoRConcrReinforceData.CreateRemote(const MachineName: string): IRConcrReinforceData2;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcrReinforceData) as IRConcrReinforceData2;
end;

class function CoRConcrConcreteParams.Create: IRConcrConcreteParams;
begin
  Result := CreateComObject(CLASS_RConcrConcreteParams) as IRConcrConcreteParams;
end;

class function CoRConcrConcreteParams.CreateRemote(const MachineName: string): IRConcrConcreteParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcrConcreteParams) as IRConcrConcreteParams;
end;

class function CoRConcrSteelParams.Create: IRConcrSteelParams;
begin
  Result := CreateComObject(CLASS_RConcrSteelParams) as IRConcrSteelParams;
end;

class function CoRConcrSteelParams.CreateRemote(const MachineName: string): IRConcrSteelParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcrSteelParams) as IRConcrSteelParams;
end;

class function CoRConcr_PN84_ReinforceData.Create: IRConcr_PN84_ReinforceData;
begin
  Result := CreateComObject(CLASS_RConcr_PN84_ReinforceData) as IRConcr_PN84_ReinforceData;
end;

class function CoRConcr_PN84_ReinforceData.CreateRemote(const MachineName: string): IRConcr_PN84_ReinforceData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcr_PN84_ReinforceData) as IRConcr_PN84_ReinforceData;
end;

class function CoRConcr_PN99_ReinforceData.Create: IRConcr_PN99_ReinforceData;
begin
  Result := CreateComObject(CLASS_RConcr_PN99_ReinforceData) as IRConcr_PN99_ReinforceData;
end;

class function CoRConcr_PN99_ReinforceData.CreateRemote(const MachineName: string): IRConcr_PN99_ReinforceData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcr_PN99_ReinforceData) as IRConcr_PN99_ReinforceData;
end;

class function CoRConcr_BAEL_ReinforceData.Create: IRConcr_BAEL_ReinforceData;
begin
  Result := CreateComObject(CLASS_RConcr_BAEL_ReinforceData) as IRConcr_BAEL_ReinforceData;
end;

class function CoRConcr_BAEL_ReinforceData.CreateRemote(const MachineName: string): IRConcr_BAEL_ReinforceData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcr_BAEL_ReinforceData) as IRConcr_BAEL_ReinforceData;
end;

class function CoRConcr_ACI318_ReinforceData.Create: IRConcr_ACI318_ReinforceData;
begin
  Result := CreateComObject(CLASS_RConcr_ACI318_ReinforceData) as IRConcr_ACI318_ReinforceData;
end;

class function CoRConcr_ACI318_ReinforceData.CreateRemote(const MachineName: string): IRConcr_ACI318_ReinforceData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcr_ACI318_ReinforceData) as IRConcr_ACI318_ReinforceData;
end;

class function CoRConcr_ACI318_ConcreteParams.Create: IRConcr_ACI318_ConcreteParams;
begin
  Result := CreateComObject(CLASS_RConcr_ACI318_ConcreteParams) as IRConcr_ACI318_ConcreteParams;
end;

class function CoRConcr_ACI318_ConcreteParams.CreateRemote(const MachineName: string): IRConcr_ACI318_ConcreteParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcr_ACI318_ConcreteParams) as IRConcr_ACI318_ConcreteParams;
end;

class function CoRConcr_BS8110_ReinforceData.Create: IRConcr_BS8110_ReinforceData;
begin
  Result := CreateComObject(CLASS_RConcr_BS8110_ReinforceData) as IRConcr_BS8110_ReinforceData;
end;

class function CoRConcr_BS8110_ReinforceData.CreateRemote(const MachineName: string): IRConcr_BS8110_ReinforceData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcr_BS8110_ReinforceData) as IRConcr_BS8110_ReinforceData;
end;

class function CoRConcrSlabRequiredReinfCalcParams.Create: IRConcrSlabRequiredReinfCalcParams;
begin
  Result := CreateComObject(CLASS_RConcrSlabRequiredReinfCalcParams) as IRConcrSlabRequiredReinfCalcParams;
end;

class function CoRConcrSlabRequiredReinfCalcParams.CreateRemote(const MachineName: string): IRConcrSlabRequiredReinfCalcParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcrSlabRequiredReinfCalcParams) as IRConcrSlabRequiredReinfCalcParams;
end;

class function CoRConcrSlabRequiredReinfEngine.Create: IRConcrSlabRequiredReinfEngine;
begin
  Result := CreateComObject(CLASS_RConcrSlabRequiredReinfEngine) as IRConcrSlabRequiredReinfEngine;
end;

class function CoRConcrSlabRequiredReinfEngine.CreateRemote(const MachineName: string): IRConcrSlabRequiredReinfEngine;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcrSlabRequiredReinfEngine) as IRConcrSlabRequiredReinfEngine;
end;

class function CoRConcrCalcEngine.Create: IRConcrCalcEngine;
begin
  Result := CreateComObject(CLASS_RConcrCalcEngine) as IRConcrCalcEngine;
end;

class function CoRConcrCalcEngine.CreateRemote(const MachineName: string): IRConcrCalcEngine;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcrCalcEngine) as IRConcrCalcEngine;
end;

class function CoRConcrReinforceDataMain.Create: IRConcrReinforceDataMain;
begin
  Result := CreateComObject(CLASS_RConcrReinforceDataMain) as IRConcrReinforceDataMain;
end;

class function CoRConcrReinforceDataMain.CreateRemote(const MachineName: string): IRConcrReinforceDataMain;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcrReinforceDataMain) as IRConcrReinforceDataMain;
end;

class function CoRConcr_SNIP_ConcreteParams.Create: IRConcr_SNIP_ConcreteParams;
begin
  Result := CreateComObject(CLASS_RConcr_SNIP_ConcreteParams) as IRConcr_SNIP_ConcreteParams;
end;

class function CoRConcr_SNIP_ConcreteParams.CreateRemote(const MachineName: string): IRConcr_SNIP_ConcreteParams;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcr_SNIP_ConcreteParams) as IRConcr_SNIP_ConcreteParams;
end;

class function CoRConcr_SNIP_ReinforceData.Create: IRConcr_SNIP_ReinforceData;
begin
  Result := CreateComObject(CLASS_RConcr_SNIP_ReinforceData) as IRConcr_SNIP_ReinforceData;
end;

class function CoRConcr_SNIP_ReinforceData.CreateRemote(const MachineName: string): IRConcr_SNIP_ReinforceData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcr_SNIP_ReinforceData) as IRConcr_SNIP_ReinforceData;
end;

class function CoRConcr_EC2_ReinforceData.Create: IRConcr_EC2_ReinforceData;
begin
  Result := CreateComObject(CLASS_RConcr_EC2_ReinforceData) as IRConcr_EC2_ReinforceData;
end;

class function CoRConcr_EC2_ReinforceData.CreateRemote(const MachineName: string): IRConcr_EC2_ReinforceData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcr_EC2_ReinforceData) as IRConcr_EC2_ReinforceData;
end;

class function CoRConcr_IS2000_ReinforceData.Create: IRConcr_IS2000_ReinforceData;
begin
  Result := CreateComObject(CLASS_RConcr_IS2000_ReinforceData) as IRConcr_IS2000_ReinforceData;
end;

class function CoRConcr_IS2000_ReinforceData.CreateRemote(const MachineName: string): IRConcr_IS2000_ReinforceData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcr_IS2000_ReinforceData) as IRConcr_IS2000_ReinforceData;
end;

class function CoRConcrColumnBucklingModel.Create: IRConcrColumnBucklingModel;
begin
  Result := CreateComObject(CLASS_RConcrColumnBucklingModel) as IRConcrColumnBucklingModel;
end;

class function CoRConcrColumnBucklingModel.CreateRemote(const MachineName: string): IRConcrColumnBucklingModel;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcrColumnBucklingModel) as IRConcrColumnBucklingModel;
end;

class function CoRConcrColumnLoads.Create: IRConcrColumnLoads;
begin
  Result := CreateComObject(CLASS_RConcrColumnLoads) as IRConcrColumnLoads;
end;

class function CoRConcrColumnLoads.CreateRemote(const MachineName: string): IRConcrColumnLoads;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcrColumnLoads) as IRConcrColumnLoads;
end;

class function CoRConcrColumnLoad.Create: IRConcrColumnLoad;
begin
  Result := CreateComObject(CLASS_RConcrColumnLoad) as IRConcrColumnLoad;
end;

class function CoRConcrColumnLoad.CreateRemote(const MachineName: string): IRConcrColumnLoad;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcrColumnLoad) as IRConcrColumnLoad;
end;

class function CoRConcrCodeReport.Create: IRConcrCodeReport;
begin
  Result := CreateComObject(CLASS_RConcrCodeReport) as IRConcrCodeReport;
end;

class function CoRConcrCodeReport.CreateRemote(const MachineName: string): IRConcrCodeReport;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RConcrCodeReport) as IRConcrCodeReport;
end;

class function CoRobotApplication.Create: IRobotApplication;
begin
  Result := CreateComObject(CLASS_RobotApplication) as IRobotApplication;
end;

class function CoRobotApplication.CreateRemote(const MachineName: string): IRobotApplication;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotApplication) as IRobotApplication;
end;

class function CoRobotProtectionInfo.Create: IRobotProtectionInfo;
begin
  Result := CreateComObject(CLASS_RobotProtectionInfo) as IRobotProtectionInfo;
end;

class function CoRobotProtectionInfo.CreateRemote(const MachineName: string): IRobotProtectionInfo;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotProtectionInfo) as IRobotProtectionInfo;
end;

class function CoRobotAppSTRAnalyser.Create: IRobotSTRFileAnalyser;
begin
  Result := CreateComObject(CLASS_RobotAppSTRAnalyser) as IRobotSTRFileAnalyser;
end;

class function CoRobotAppSTRAnalyser.CreateRemote(const MachineName: string): IRobotSTRFileAnalyser;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RobotAppSTRAnalyser) as IRobotSTRFileAnalyser;
end;

end.
